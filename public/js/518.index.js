"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[518],{518:(l,Z,X)=>{X.r(Z),X.d(Z,{default:()=>u});var G=Object.defineProperty,V=(l,Z,X)=>(((l,Z,X)=>{Z in l?G(l,Z,{enumerable:!0,configurable:!0,writable:!0,value:X}):l[Z]=X})(l,"symbol"!=typeof Z?Z+"":Z,X),X),d=(l,Z,X)=>{if(!Z.has(l))throw TypeError("Cannot "+X)},b=(l,Z,X)=>(d(l,Z,"read from private field"),X?X.call(l):Z.get(l)),c=(l,Z,X)=>{if(Z.has(l))throw TypeError("Cannot add the same private member more than once");Z instanceof WeakSet?Z.add(l):Z.set(l,X)},m=(l,Z,X,G)=>(d(l,Z,"write to private field"),G?G.call(l,X):Z.set(l,X),X);const W="var Ll=Object.defineProperty;var Nl=(X,Se,ye)=>Se in X?Ll(X,Se,{enumerable:!0,configurable:!0,writable:!0,value:ye}):X[Se]=ye;var bt=(X,Se,ye)=>(Nl(X,typeof Se!="symbol"?Se+"":Se,ye),ye),js=(X,Se,ye)=>{if(!Se.has(X))throw TypeError("Cannot "+ye)};var Y=(X,Se,ye)=>(js(X,Se,"read from private field"),ye?ye.call(X):Se.get(X)),nt=(X,Se,ye)=>{if(Se.has(X))throw TypeError("Cannot add the same private member more than once");Se instanceof WeakSet?Se.add(X):Se.set(X,ye)},lt=(X,Se,ye,xe)=>(js(X,Se,"write to private field"),xe?xe.call(X,ye):Se.set(X,ye),ye),yi=(X,Se,ye,xe)=>({set _(Be){lt(X,Se,Be,ye)},get _(){return Y(X,Se,xe)}}),zr=(X,Se,ye)=>(js(X,Se,"access private method"),ye);(function(){var Xe,Ai,Ft,Ri,Mt,Tt,Je,cs,At,Vi,Wi,gt,zi,us,Gr;"use strict";class X{static WithinEpsilon(e,t,i=1401298e-51){return Math.abs(e-t)<=i}static ToHex(e){const t=e.toString(16);return e<=15?("0"+t).toUpperCase():t.toUpperCase()}static Sign(e){return e=+e,e===0||isNaN(e)?e:e>0?1:-1}static Clamp(e,t=0,i=1){return Math.min(i,Math.max(t,e))}static Log2(e){return Math.log(e)*Math.LOG2E}static ILog2(e){if(Math.log2)return Math.floor(Math.log2(e));if(e<0)return NaN;if(e===0)return-1/0;let t=0;if(e<1){for(;e<1;)t++,e=e*2;t=-t}else if(e>1)for(;e>1;)t++,e=Math.floor(e/2);return t}static Repeat(e,t){return e-Math.floor(e/t)*t}static Normalize(e,t,i){return(e-t)/(i-t)}static Denormalize(e,t,i){return e*(i-t)+t}static DeltaAngle(e,t){let i=X.Repeat(t-e,360);return i>180&&(i-=360),i}static PingPong(e,t){const i=X.Repeat(e,t*2);return t-Math.abs(i-t)}static SmoothStep(e,t,i){let s=X.Clamp(i);return s=-2*s*s*s+3*s*s,t*s+e*(1-s)}static MoveTowards(e,t,i){let s=0;return Math.abs(t-e)<=i?s=t:s=e+X.Sign(t-e)*i,s}static MoveTowardsAngle(e,t,i){const s=X.DeltaAngle(e,t);let r=0;return-i<s&&s<i?r=t:(t=e+s,r=X.MoveTowards(e,t,i)),r}static Lerp(e,t,i){return e+(t-e)*i}static LerpAngle(e,t,i){let s=X.Repeat(t-e,360);return s>180&&(s-=360),e+s*X.Clamp(i)}static InverseLerp(e,t,i){let s=0;return e!=t?s=X.Clamp((i-e)/(t-e)):s=0,s}static Hermite(e,t,i,s,r){const n=r*r,a=r*n,o=2*a-3*n+1,h=-2*a+3*n,l=a-2*n+r,u=a-n;return e*o+i*h+t*l+s*u}static Hermite1stDerivative(e,t,i,s,r){const n=r*r;return(n-r)*6*e+(3*n-4*r+1)*t+(-n+r)*6*i+(3*n-2*r)*s}static RandomRange(e,t){return e===t?e:Math.random()*(t-e)+e}static RangeToPercent(e,t,i){return(e-t)/(i-t)}static PercentToRange(e,t,i){return(i-t)*e+t}static NormalizeRadians(e){return e-=X.TwoPi*Math.floor((e+Math.PI)/X.TwoPi),e}static HCF(e,t){const i=e%t;return i===0?t:X.HCF(t,i)}}X.TwoPi=Math.PI*2;const Se=1/2.2,ye=2.2,xe=.001;class Be{static BuildArray(e,t){const i=[];for(let s=0;s<e;++s)i.push(t());return i}static BuildTuple(e,t){return Be.BuildArray(e,t)}}function Xr(c,e,t){const i=c[e];if(typeof i!="function")return null;const s=function(){const r=c.length,n=s.previous.apply(c,arguments);return t(e,r),n};return i.next=s,s.previous=i,c[e]=s,()=>{const r=s.previous;if(!r)return;const n=s.next;n?(r.next=n,n.previous=r):(r.next=void 0,c[e]=r),s.next=void 0,s.previous=void 0}}const Hr=["push","splice","pop","shift","unshift"];function $s(c,e){const t=Hr.map(i=>Xr(c,i,e));return()=>{t.forEach(i=>{i==null||i()})}}const Qs={};function it(c,e){Qs[c]=e}function ri(c){return Qs[c]}class Ue{static SetMatrixPrecision(e){if(Ue.MatrixTrackPrecisionChange=!1,e&&!Ue.MatrixUse64Bits&&Ue.MatrixTrackedMatrices)for(let t=0;t<Ue.MatrixTrackedMatrices.length;++t){const i=Ue.MatrixTrackedMatrices[t],s=i._m;i._m=new Array(16);for(let r=0;r<16;++r)i._m[r]=s[r]}Ue.MatrixUse64Bits=e,Ue.MatrixCurrentType=Ue.MatrixUse64Bits?Array:Float32Array,Ue.MatrixTrackedMatrices=null}}Ue.MatrixUse64Bits=!1,Ue.MatrixTrackPrecisionChange=!0,Ue.MatrixCurrentType=Float32Array,Ue.MatrixTrackedMatrices=[];class fe{static get LastCreatedEngine(){return this.Instances.length===0?null:this.Instances[this.Instances.length-1]}static get LastCreatedScene(){return this._LastCreatedScene}}fe.Instances=new Array,fe._LastCreatedScene=null,fe.UseFallbackTexture=!0,fe.FallbackTexture="";const st=c=>parseInt(c.toString().replace(/\W/g,""));class ve{constructor(e=0,t=0){this.x=e,this.y=t}toString(){return`{X: ${this.x} Y: ${this.y}}`}getClassName(){return"Vector2"}getHashCode(){const e=st(this.x),t=st(this.y);let i=e;return i=i*397^t,i}toArray(e,t=0){return e[t]=this.x,e[t+1]=this.y,this}fromArray(e,t=0){return ve.FromArrayToRef(e,t,this),this}asArray(){const e=new Array;return this.toArray(e,0),e}copyFrom(e){return this.x=e.x,this.y=e.y,this}copyFromFloats(e,t){return this.x=e,this.y=t,this}set(e,t){return this.copyFromFloats(e,t)}add(e){return new this.constructor(this.x+e.x,this.y+e.y)}addToRef(e,t){return t.x=this.x+e.x,t.y=this.y+e.y,t}addInPlace(e){return this.x+=e.x,this.y+=e.y,this}addVector3(e){return new this.constructor(this.x+e.x,this.y+e.y)}subtract(e){return new this.constructor(this.x-e.x,this.y-e.y)}subtractToRef(e,t){return t.x=this.x-e.x,t.y=this.y-e.y,t}subtractInPlace(e){return this.x-=e.x,this.y-=e.y,this}multiplyInPlace(e){return this.x*=e.x,this.y*=e.y,this}multiply(e){return new this.constructor(this.x*e.x,this.y*e.y)}multiplyToRef(e,t){return t.x=this.x*e.x,t.y=this.y*e.y,t}multiplyByFloats(e,t){return new this.constructor(this.x*e,this.y*t)}divide(e){return new this.constructor(this.x/e.x,this.y/e.y)}divideToRef(e,t){return t.x=this.x/e.x,t.y=this.y/e.y,t}divideInPlace(e){return this.divideToRef(e,this)}negate(){return new this.constructor(-this.x,-this.y)}negateInPlace(){return this.x*=-1,this.y*=-1,this}negateToRef(e){return e.copyFromFloats(this.x*-1,this.y*-1)}scaleInPlace(e){return this.x*=e,this.y*=e,this}scale(e){const t=new this.constructor(0,0);return this.scaleToRef(e,t),t}scaleToRef(e,t){return t.x=this.x*e,t.y=this.y*e,t}scaleAndAddToRef(e,t){return t.x+=this.x*e,t.y+=this.y*e,t}equals(e){return e&&this.x===e.x&&this.y===e.y}equalsWithEpsilon(e,t=xe){return e&&X.WithinEpsilon(this.x,e.x,t)&&X.WithinEpsilon(this.y,e.y,t)}floor(){return new this.constructor(Math.floor(this.x),Math.floor(this.y))}fract(){return new this.constructor(this.x-Math.floor(this.x),this.y-Math.floor(this.y))}rotateToRef(e,t){const i=Math.cos(e),s=Math.sin(e);return t.x=i*this.x-s*this.y,t.y=s*this.x+i*this.y,t}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}lengthSquared(){return this.x*this.x+this.y*this.y}normalize(){return ve.NormalizeToRef(this,this),this}clone(){return new this.constructor(this.x,this.y)}static Zero(){return new ve(0,0)}static One(){return new ve(1,1)}static get ZeroReadOnly(){return ve._ZeroReadOnly}static FromArray(e,t=0){return new ve(e[t],e[t+1])}static FromArrayToRef(e,t,i){return i.x=e[t],i.y=e[t+1],i}static CatmullRom(e,t,i,s,r){const n=r*r,a=r*n,o=.5*(2*t.x+(-e.x+i.x)*r+(2*e.x-5*t.x+4*i.x-s.x)*n+(-e.x+3*t.x-3*i.x+s.x)*a),h=.5*(2*t.y+(-e.y+i.y)*r+(2*e.y-5*t.y+4*i.y-s.y)*n+(-e.y+3*t.y-3*i.y+s.y)*a);return new e.constructor(o,h)}static Clamp(e,t,i){let s=e.x;s=s>i.x?i.x:s,s=s<t.x?t.x:s;let r=e.y;return r=r>i.y?i.y:r,r=r<t.y?t.y:r,new e.constructor(s,r)}static Hermite(e,t,i,s,r){const n=r*r,a=r*n,o=2*a-3*n+1,h=-2*a+3*n,l=a-2*n+r,u=a-n,d=e.x*o+i.x*h+t.x*l+s.x*u,f=e.y*o+i.y*h+t.y*l+s.y*u;return new e.constructor(d,f)}static Hermite1stDerivative(e,t,i,s,r){const n=new e.constructor;return this.Hermite1stDerivativeToRef(e,t,i,s,r,n),n}static Hermite1stDerivativeToRef(e,t,i,s,r,n){const a=r*r;return n.x=(a-r)*6*e.x+(3*a-4*r+1)*t.x+(-a+r)*6*i.x+(3*a-2*r)*s.x,n.y=(a-r)*6*e.y+(3*a-4*r+1)*t.y+(-a+r)*6*i.y+(3*a-2*r)*s.y,n}static Lerp(e,t,i){const s=e.x+(t.x-e.x)*i,r=e.y+(t.y-e.y)*i;return new e.constructor(s,r)}static Dot(e,t){return e.x*t.x+e.y*t.y}static Normalize(e){const t=new e.constructor;return this.NormalizeToRef(e,t),t}static NormalizeToRef(e,t){const i=e.length();return i===0||(t.x=e.x/i,t.y=e.y/i),t}static Minimize(e,t){const i=e.x<t.x?e.x:t.x,s=e.y<t.y?e.y:t.y;return new e.constructor(i,s)}static Maximize(e,t){const i=e.x>t.x?e.x:t.x,s=e.y>t.y?e.y:t.y;return new e.constructor(i,s)}static Transform(e,t){const i=new e.constructor;return ve.TransformToRef(e,t,i),i}static TransformToRef(e,t,i){const s=t.m,r=e.x*s[0]+e.y*s[4]+s[12],n=e.x*s[1]+e.y*s[5]+s[13];return i.x=r,i.y=n,i}static PointInTriangle(e,t,i,s){const r=.5*(-i.y*s.x+t.y*(-i.x+s.x)+t.x*(i.y-s.y)+i.x*s.y),n=r<0?-1:1,a=(t.y*s.x-t.x*s.y+(s.y-t.y)*e.x+(t.x-s.x)*e.y)*n,o=(t.x*i.y-t.y*i.x+(t.y-i.y)*e.x+(i.x-t.x)*e.y)*n;return a>0&&o>0&&a+o<2*r*n}static Distance(e,t){return Math.sqrt(ve.DistanceSquared(e,t))}static DistanceSquared(e,t){const i=e.x-t.x,s=e.y-t.y;return i*i+s*s}static Center(e,t){const i=new e.constructor;return ve.CenterToRef(e,t,i)}static CenterToRef(e,t,i){return i.copyFromFloats((e.x+t.x)/2,(e.y+t.y)/2)}static DistanceOfPointFromSegment(e,t,i){const s=ve.DistanceSquared(t,i);if(s===0)return ve.Distance(e,t);const r=i.subtract(t),n=Math.max(0,Math.min(1,ve.Dot(e.subtract(t),r)/s)),a=t.add(r.multiplyByFloats(n,n));return ve.Distance(e,a)}}ve._ZeroReadOnly=ve.Zero();class p{constructor(e=0,t=0,i=0){this._isDirty=!0,this._x=e,this._y=t,this._z=i}get x(){return this._x}set x(e){this._x=e,this._isDirty=!0}get y(){return this._y}set y(e){this._y=e,this._isDirty=!0}get z(){return this._z}set z(e){this._z=e,this._isDirty=!0}toString(){return`{X: ${this._x} Y: ${this._y} Z: ${this._z}}`}getClassName(){return"Vector3"}getHashCode(){const e=st(this._x),t=st(this._y),i=st(this._z);let s=e;return s=s*397^t,s=s*397^i,s}asArray(){const e=[];return this.toArray(e,0),e}toArray(e,t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,this}fromArray(e,t=0){return p.FromArrayToRef(e,t,this),this}toQuaternion(){return Z.RotationYawPitchRoll(this._y,this._x,this._z)}addInPlace(e){return this.addInPlaceFromFloats(e._x,e._y,e._z)}addInPlaceFromFloats(e,t,i){return this.x+=e,this.y+=t,this.z+=i,this}add(e){return new this.constructor(this._x+e._x,this._y+e._y,this._z+e._z)}addToRef(e,t){return t.copyFromFloats(this._x+e._x,this._y+e._y,this._z+e._z)}subtractInPlace(e){return this.x-=e._x,this.y-=e._y,this.z-=e._z,this}subtract(e){return new this.constructor(this._x-e._x,this._y-e._y,this._z-e._z)}subtractToRef(e,t){return this.subtractFromFloatsToRef(e._x,e._y,e._z,t)}subtractFromFloats(e,t,i){return new this.constructor(this._x-e,this._y-t,this._z-i)}subtractFromFloatsToRef(e,t,i,s){return s.copyFromFloats(this._x-e,this._y-t,this._z-i)}negate(){return new this.constructor(-this._x,-this._y,-this._z)}negateInPlace(){return this.x*=-1,this.y*=-1,this.z*=-1,this}negateToRef(e){return e.copyFromFloats(this._x*-1,this._y*-1,this._z*-1)}scaleInPlace(e){return this.x*=e,this.y*=e,this.z*=e,this}scale(e){return new this.constructor(this._x*e,this._y*e,this._z*e)}scaleToRef(e,t){return t.copyFromFloats(this._x*e,this._y*e,this._z*e)}getNormalToRef(e){const t=this.length();let i=Math.acos(this.y/t);const s=Math.atan2(this.z,this.x);i>Math.PI/2?i-=Math.PI/2:i+=Math.PI/2;const r=t*Math.sin(i)*Math.cos(s),n=t*Math.cos(i),a=t*Math.sin(i)*Math.sin(s);return e.set(r,n,a),e}applyRotationQuaternionToRef(e,t){const i=e.w*this.x+e.y*this.z-e.z*this.y,s=e.w*this.y+e.z*this.x-e.x*this.z,r=e.w*this.z+e.x*this.y-e.y*this.x,n=-e.x*this.x-e.y*this.y-e.z*this.z;return t.x=i*e.w+n*-e.x+s*-e.z-r*-e.y,t.y=s*e.w+n*-e.y+r*-e.x-i*-e.z,t.z=r*e.w+n*-e.z+i*-e.y-s*-e.x,t}applyRotationQuaternionInPlace(e){return this.applyRotationQuaternionToRef(e,this)}applyRotationQuaternion(e){return this.applyRotationQuaternionToRef(e,new this.constructor)}scaleAndAddToRef(e,t){return t.addInPlaceFromFloats(this._x*e,this._y*e,this._z*e)}projectOnPlane(e,t){const i=new this.constructor;return this.projectOnPlaneToRef(e,t,i),i}projectOnPlaneToRef(e,t,i){const s=e.normal,r=e.d,n=K.Vector3[0];this.subtractToRef(t,n),n.normalize();const a=p.Dot(n,s);if(Math.abs(a)<Math.pow(10,-10))i.setAll(1/0);else{const o=-(p.Dot(t,s)+r)/a,h=n.scaleInPlace(o);t.addToRef(h,i)}return i}equals(e){return e&&this._x===e._x&&this._y===e._y&&this._z===e._z}equalsWithEpsilon(e,t=xe){return e&&X.WithinEpsilon(this._x,e._x,t)&&X.WithinEpsilon(this._y,e._y,t)&&X.WithinEpsilon(this._z,e._z,t)}equalsToFloats(e,t,i){return this._x===e&&this._y===t&&this._z===i}multiplyInPlace(e){return this.x*=e._x,this.y*=e._y,this.z*=e._z,this}multiply(e){return this.multiplyByFloats(e._x,e._y,e._z)}multiplyToRef(e,t){return t.copyFromFloats(this._x*e._x,this._y*e._y,this._z*e._z)}multiplyByFloats(e,t,i){return new this.constructor(this._x*e,this._y*t,this._z*i)}divide(e){return new this.constructor(this._x/e._x,this._y/e._y,this._z/e._z)}divideToRef(e,t){return t.copyFromFloats(this._x/e._x,this._y/e._y,this._z/e._z)}divideInPlace(e){return this.divideToRef(e,this)}minimizeInPlace(e){return this.minimizeInPlaceFromFloats(e._x,e._y,e._z)}maximizeInPlace(e){return this.maximizeInPlaceFromFloats(e._x,e._y,e._z)}minimizeInPlaceFromFloats(e,t,i){return e<this._x&&(this.x=e),t<this._y&&(this.y=t),i<this._z&&(this.z=i),this}maximizeInPlaceFromFloats(e,t,i){return e>this._x&&(this.x=e),t>this._y&&(this.y=t),i>this._z&&(this.z=i),this}isNonUniformWithinEpsilon(e){const t=Math.abs(this._x),i=Math.abs(this._y);if(!X.WithinEpsilon(t,i,e))return!0;const s=Math.abs(this._z);return!X.WithinEpsilon(t,s,e)||!X.WithinEpsilon(i,s,e)}get isNonUniform(){const e=Math.abs(this._x),t=Math.abs(this._y);if(e!==t)return!0;const i=Math.abs(this._z);return e!==i}floor(){return new this.constructor(Math.floor(this._x),Math.floor(this._y),Math.floor(this._z))}fract(){return new this.constructor(this._x-Math.floor(this._x),this._y-Math.floor(this._y),this._z-Math.floor(this._z))}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z)}lengthSquared(){return this._x*this._x+this._y*this._y+this._z*this._z}get hasAZeroComponent(){return this._x*this._y*this._z===0}normalize(){return this.normalizeFromLength(this.length())}reorderInPlace(e){return e=e.toLowerCase(),e==="xyz"?this:(K.Vector3[0].copyFrom(this),["x","y","z"].forEach((t,i)=>{this[t]=K.Vector3[0][e[i]]}),this)}rotateByQuaternionToRef(e,t){return e.toRotationMatrix(K.Matrix[0]),p.TransformCoordinatesToRef(this,K.Matrix[0],t),t}rotateByQuaternionAroundPointToRef(e,t,i){return this.subtractToRef(t,K.Vector3[0]),K.Vector3[0].rotateByQuaternionToRef(e,K.Vector3[0]),t.addToRef(K.Vector3[0],i),i}cross(e){const t=new this.constructor;return p.CrossToRef(this,e,t)}normalizeFromLength(e){return e===0||e===1?this:this.scaleInPlace(1/e)}normalizeToNew(){const e=new this.constructor(0,0,0);return this.normalizeToRef(e),e}normalizeToRef(e){const t=this.length();return t===0||t===1?e.copyFromFloats(this._x,this._y,this._z):this.scaleToRef(1/t,e)}clone(){return new this.constructor(this._x,this._y,this._z)}copyFrom(e){return this.copyFromFloats(e._x,e._y,e._z)}copyFromFloats(e,t,i){return this.x=e,this.y=t,this.z=i,this}set(e,t,i){return this.copyFromFloats(e,t,i)}setAll(e){return this.x=this.y=this.z=e,this}static GetClipFactor(e,t,i,s){const r=p.Dot(e,i)-s,n=p.Dot(t,i)-s;return r/(r-n)}static GetAngleBetweenVectors(e,t,i){const s=e.normalizeToRef(K.Vector3[1]),r=t.normalizeToRef(K.Vector3[2]);let n=p.Dot(s,r);n=X.Clamp(n,-1,1);const a=Math.acos(n),o=K.Vector3[3];return p.CrossToRef(s,r,o),p.Dot(o,i)>0?isNaN(a)?0:a:isNaN(a)?-Math.PI:-Math.acos(n)}static GetAngleBetweenVectorsOnPlane(e,t,i){K.Vector3[0].copyFrom(e);const s=K.Vector3[0];K.Vector3[1].copyFrom(t);const r=K.Vector3[1];K.Vector3[2].copyFrom(i);const n=K.Vector3[2],a=K.Vector3[3],o=K.Vector3[4];s.normalize(),r.normalize(),n.normalize(),p.CrossToRef(n,s,a),p.CrossToRef(a,n,o);const h=Math.atan2(p.Dot(r,a),p.Dot(r,o));return X.NormalizeRadians(h)}static PitchYawRollToMoveBetweenPointsToRef(e,t,i){const s=D.Vector3[0];return t.subtractToRef(e,s),i.y=Math.atan2(s.x,s.z)||0,i.x=Math.atan2(Math.sqrt(s.x**2+s.z**2),s.y)||0,i.z=0,i}static PitchYawRollToMoveBetweenPoints(e,t){const i=p.Zero();return p.PitchYawRollToMoveBetweenPointsToRef(e,t,i)}static SlerpToRef(e,t,i,s){i=X.Clamp(i,0,1);const r=K.Vector3[0],n=K.Vector3[1];r.copyFrom(e);const a=r.length();r.normalizeFromLength(a),n.copyFrom(t);const o=n.length();n.normalizeFromLength(o);const h=p.Dot(r,n);let l,u;if(h<1-xe){const d=Math.acos(h),f=1/Math.sin(d);l=Math.sin((1-i)*d)*f,u=Math.sin(i*d)*f}else l=1-i,u=i;return r.scaleInPlace(l),n.scaleInPlace(u),s.copyFrom(r).addInPlace(n),s.scaleInPlace(X.Lerp(a,o,i)),s}static SmoothToRef(e,t,i,s,r){return p.SlerpToRef(e,t,s===0?1:i/s,r),r}static FromArray(e,t=0){return new p(e[t],e[t+1],e[t+2])}static FromFloatArray(e,t){return p.FromArray(e,t)}static FromArrayToRef(e,t,i){return i.x=e[t],i.y=e[t+1],i.z=e[t+2],i}static FromFloatArrayToRef(e,t,i){return p.FromArrayToRef(e,t,i)}static FromFloatsToRef(e,t,i,s){return s.copyFromFloats(e,t,i),s}static Zero(){return new p(0,0,0)}static One(){return new p(1,1,1)}static Up(){return new p(0,1,0)}static get UpReadOnly(){return p._UpReadOnly}static get DownReadOnly(){return p._DownReadOnly}static get RightReadOnly(){return p._RightReadOnly}static get LeftReadOnly(){return p._LeftReadOnly}static get LeftHandedForwardReadOnly(){return p._LeftHandedForwardReadOnly}static get RightHandedForwardReadOnly(){return p._RightHandedForwardReadOnly}static get ZeroReadOnly(){return p._ZeroReadOnly}static Down(){return new p(0,-1,0)}static Forward(e=!1){return new p(0,0,e?-1:1)}static Backward(e=!1){return new p(0,0,e?1:-1)}static Right(){return new p(1,0,0)}static Left(){return new p(-1,0,0)}static TransformCoordinates(e,t){const i=p.Zero();return p.TransformCoordinatesToRef(e,t,i),i}static TransformCoordinatesToRef(e,t,i){return p.TransformCoordinatesFromFloatsToRef(e._x,e._y,e._z,t,i),i}static TransformCoordinatesFromFloatsToRef(e,t,i,s,r){const n=s.m,a=e*n[0]+t*n[4]+i*n[8]+n[12],o=e*n[1]+t*n[5]+i*n[9]+n[13],h=e*n[2]+t*n[6]+i*n[10]+n[14],l=1/(e*n[3]+t*n[7]+i*n[11]+n[15]);return r.x=a*l,r.y=o*l,r.z=h*l,r}static TransformNormal(e,t){const i=p.Zero();return p.TransformNormalToRef(e,t,i),i}static TransformNormalToRef(e,t,i){return this.TransformNormalFromFloatsToRef(e._x,e._y,e._z,t,i),i}static TransformNormalFromFloatsToRef(e,t,i,s,r){const n=s.m;return r.x=e*n[0]+t*n[4]+i*n[8],r.y=e*n[1]+t*n[5]+i*n[9],r.z=e*n[2]+t*n[6]+i*n[10],r}static CatmullRom(e,t,i,s,r){const n=r*r,a=r*n,o=.5*(2*t._x+(-e._x+i._x)*r+(2*e._x-5*t._x+4*i._x-s._x)*n+(-e._x+3*t._x-3*i._x+s._x)*a),h=.5*(2*t._y+(-e._y+i._y)*r+(2*e._y-5*t._y+4*i._y-s._y)*n+(-e._y+3*t._y-3*i._y+s._y)*a),l=.5*(2*t._z+(-e._z+i._z)*r+(2*e._z-5*t._z+4*i._z-s._z)*n+(-e._z+3*t._z-3*i._z+s._z)*a);return new e.constructor(o,h,l)}static Clamp(e,t,i){const s=new e.constructor;return p.ClampToRef(e,t,i,s),s}static ClampToRef(e,t,i,s){let r=e._x;r=r>i._x?i._x:r,r=r<t._x?t._x:r;let n=e._y;n=n>i._y?i._y:n,n=n<t._y?t._y:n;let a=e._z;return a=a>i._z?i._z:a,a=a<t._z?t._z:a,s.copyFromFloats(r,n,a),s}static CheckExtends(e,t,i){t.minimizeInPlace(e),i.maximizeInPlace(e)}static Hermite(e,t,i,s,r){const n=r*r,a=r*n,o=2*a-3*n+1,h=-2*a+3*n,l=a-2*n+r,u=a-n,d=e._x*o+i._x*h+t._x*l+s._x*u,f=e._y*o+i._y*h+t._y*l+s._y*u,_=e._z*o+i._z*h+t._z*l+s._z*u;return new e.constructor(d,f,_)}static Hermite1stDerivative(e,t,i,s,r){const n=new e.constructor;return this.Hermite1stDerivativeToRef(e,t,i,s,r,n),n}static Hermite1stDerivativeToRef(e,t,i,s,r,n){const a=r*r;return n.x=(a-r)*6*e.x+(3*a-4*r+1)*t.x+(-a+r)*6*i.x+(3*a-2*r)*s.x,n.y=(a-r)*6*e.y+(3*a-4*r+1)*t.y+(-a+r)*6*i.y+(3*a-2*r)*s.y,n.z=(a-r)*6*e.z+(3*a-4*r+1)*t.z+(-a+r)*6*i.z+(3*a-2*r)*s.z,n}static Lerp(e,t,i){const s=new e.constructor(0,0,0);return p.LerpToRef(e,t,i,s),s}static LerpToRef(e,t,i,s){return s.x=e._x+(t._x-e._x)*i,s.y=e._y+(t._y-e._y)*i,s.z=e._z+(t._z-e._z)*i,s}static Dot(e,t){return e._x*t._x+e._y*t._y+e._z*t._z}static Cross(e,t){const i=new e.constructor;return p.CrossToRef(e,t,i),i}static CrossToRef(e,t,i){const s=e._y*t._z-e._z*t._y,r=e._z*t._x-e._x*t._z,n=e._x*t._y-e._y*t._x;return i.copyFromFloats(s,r,n),i}static Normalize(e){const t=p.Zero();return p.NormalizeToRef(e,t),t}static NormalizeToRef(e,t){return e.normalizeToRef(t),t}static Project(e,t,i,s){const r=new e.constructor;return p.ProjectToRef(e,t,i,s,r),r}static ProjectToRef(e,t,i,s,r){const n=s.width,a=s.height,o=s.x,h=s.y,l=K.Matrix[1];x.FromValuesToRef(n/2,0,0,0,0,-a/2,0,0,0,0,.5,0,o+n/2,a/2+h,.5,1,l);const u=K.Matrix[0];return t.multiplyToRef(i,u),u.multiplyToRef(l,u),p.TransformCoordinatesToRef(e,u,r),r}static Reflect(e,t){return this.ReflectToRef(e,t,new p)}static ReflectToRef(e,t,i){const s=D.Vector3[0];return s.copyFrom(t).scaleInPlace(2*p.Dot(e,t)),i.copyFrom(e).subtractInPlace(s)}static _UnprojectFromInvertedMatrixToRef(e,t,i){p.TransformCoordinatesToRef(e,t,i);const s=t.m,r=e._x*s[3]+e._y*s[7]+e._z*s[11]+s[15];return X.WithinEpsilon(r,1)&&i.scaleInPlace(1/r),i}static UnprojectFromTransform(e,t,i,s,r){return this.Unproject(e,t,i,s,r,x.IdentityReadOnly)}static Unproject(e,t,i,s,r,n){const a=new e.constructor;return p.UnprojectToRef(e,t,i,s,r,n,a),a}static UnprojectToRef(e,t,i,s,r,n,a){return p.UnprojectFloatsToRef(e._x,e._y,e._z,t,i,s,r,n,a),a}static UnprojectFloatsToRef(e,t,i,s,r,n,a,o,h){var l;const u=K.Matrix[0];n.multiplyToRef(a,u),u.multiplyToRef(o,u),u.invert();const d=K.Vector3[0];return d.x=e/s*2-1,d.y=-(t/r*2-1),!((l=fe.LastCreatedEngine)===null||l===void 0)&&l.isNDCHalfZRange?d.z=i:d.z=2*i-1,p._UnprojectFromInvertedMatrixToRef(d,u,h),h}static Minimize(e,t){const i=new e.constructor;return i.copyFrom(e),i.minimizeInPlace(t),i}static Maximize(e,t){const i=new e.constructor;return i.copyFrom(e),i.maximizeInPlace(t),i}static Distance(e,t){return Math.sqrt(p.DistanceSquared(e,t))}static DistanceSquared(e,t){const i=e._x-t._x,s=e._y-t._y,r=e._z-t._z;return i*i+s*s+r*r}static ProjectOnTriangleToRef(e,t,i,s,r){const n=K.Vector3[0],a=K.Vector3[1],o=K.Vector3[2],h=K.Vector3[3],l=K.Vector3[4];i.subtractToRef(t,n),s.subtractToRef(t,a),s.subtractToRef(i,o);const u=n.length(),d=a.length(),f=o.length();if(u<xe||d<xe||f<xe)return r.copyFrom(t),p.Distance(e,t);e.subtractToRef(t,l),p.CrossToRef(n,a,h);const _=h.length();if(_<xe)return r.copyFrom(t),p.Distance(e,t);h.normalizeFromLength(_);let E=l.length();if(E<xe)return r.copyFrom(t),0;l.normalizeFromLength(E);const m=p.Dot(h,l),v=K.Vector3[5],S=K.Vector3[6];v.copyFrom(h).scaleInPlace(-E*m),S.copyFrom(e).addInPlace(v);const y=K.Vector3[4],A=K.Vector3[5],C=K.Vector3[7],b=K.Vector3[8];y.copyFrom(n).scaleInPlace(1/u),b.copyFrom(a).scaleInPlace(1/d),y.addInPlace(b).scaleInPlace(-1),A.copyFrom(n).scaleInPlace(-1/u),b.copyFrom(o).scaleInPlace(1/f),A.addInPlace(b).scaleInPlace(-1),C.copyFrom(o).scaleInPlace(-1/f),b.copyFrom(a).scaleInPlace(-1/d),C.addInPlace(b).scaleInPlace(-1);const M=K.Vector3[9];let L;M.copyFrom(S).subtractInPlace(t),p.CrossToRef(y,M,b),L=p.Dot(b,h);const k=L;M.copyFrom(S).subtractInPlace(i),p.CrossToRef(A,M,b),L=p.Dot(b,h);const w=L;M.copyFrom(S).subtractInPlace(s),p.CrossToRef(C,M,b),L=p.Dot(b,h);const de=L,ce=K.Vector3[10];let se,te;k>0&&w<0?(ce.copyFrom(n),se=t,te=i):w>0&&de<0?(ce.copyFrom(o),se=i,te=s):(ce.copyFrom(a).scaleInPlace(-1),se=s,te=t);const Fe=K.Vector3[9],we=K.Vector3[4];if(se.subtractToRef(S,b),te.subtractToRef(S,Fe),p.CrossToRef(b,Fe,we),!(p.Dot(we,h)<0))return r.copyFrom(S),Math.abs(E*m);const Ke=K.Vector3[5];p.CrossToRef(ce,we,Ke),Ke.normalize();const Ye=K.Vector3[9];Ye.copyFrom(se).subtractInPlace(S);const pt=Ye.length();if(pt<xe)return r.copyFrom(se),p.Distance(e,se);Ye.normalizeFromLength(pt);const ht=p.Dot(Ke,Ye),wt=K.Vector3[7];wt.copyFrom(S).addInPlace(Ke.scaleInPlace(pt*ht)),b.copyFrom(wt).subtractInPlace(se),E=ce.length(),ce.normalizeFromLength(E);let si=p.Dot(b,ce)/Math.max(E,xe);return si=X.Clamp(si,0,1),wt.copyFrom(se).addInPlace(ce.scaleInPlace(si*E)),r.copyFrom(wt),p.Distance(e,wt)}static Center(e,t){return p.CenterToRef(e,t,p.Zero())}static CenterToRef(e,t,i){return i.copyFromFloats((e._x+t._x)/2,(e._y+t._y)/2,(e._z+t._z)/2)}static RotationFromAxis(e,t,i){const s=new e.constructor;return p.RotationFromAxisToRef(e,t,i,s),s}static RotationFromAxisToRef(e,t,i,s){const r=K.Quaternion[0];return Z.RotationQuaternionFromAxisToRef(e,t,i,r),r.toEulerAnglesToRef(s),s}}p._UpReadOnly=p.Up(),p._DownReadOnly=p.Down(),p._LeftHandedForwardReadOnly=p.Forward(!1),p._RightHandedForwardReadOnly=p.Forward(!0),p._RightReadOnly=p.Right(),p._LeftReadOnly=p.Left(),p._ZeroReadOnly=p.Zero();class Ce{constructor(e=0,t=0,i=0,s=0){this.x=e,this.y=t,this.z=i,this.w=s}toString(){return`{X: ${this.x} Y: ${this.y} Z: ${this.z} W: ${this.w}}`}getClassName(){return"Vector4"}getHashCode(){const e=st(this.x),t=st(this.y),i=st(this.z),s=st(this.w);let r=e;return r=r*397^t,r=r*397^i,r=r*397^s,r}asArray(){const e=new Array;return this.toArray(e,0),e}toArray(e,t){return t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,this}fromArray(e,t=0){return Ce.FromArrayToRef(e,t,this),this}addInPlace(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}add(e){return new this.constructor(this.x+e.x,this.y+e.y,this.z+e.z,this.w+e.w)}addToRef(e,t){return t.x=this.x+e.x,t.y=this.y+e.y,t.z=this.z+e.z,t.w=this.w+e.w,t}subtractInPlace(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subtract(e){return new this.constructor(this.x-e.x,this.y-e.y,this.z-e.z,this.w-e.w)}subtractToRef(e,t){return t.x=this.x-e.x,t.y=this.y-e.y,t.z=this.z-e.z,t.w=this.w-e.w,t}subtractFromFloats(e,t,i,s){return new this.constructor(this.x-e,this.y-t,this.z-i,this.w-s)}subtractFromFloatsToRef(e,t,i,s,r){return r.x=this.x-e,r.y=this.y-t,r.z=this.z-i,r.w=this.w-s,r}negate(){return new this.constructor(-this.x,-this.y,-this.z,-this.w)}negateInPlace(){return this.x*=-1,this.y*=-1,this.z*=-1,this.w*=-1,this}negateToRef(e){return e.copyFromFloats(this.x*-1,this.y*-1,this.z*-1,this.w*-1)}scaleInPlace(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}scale(e){return new this.constructor(this.x*e,this.y*e,this.z*e,this.w*e)}scaleToRef(e,t){return t.x=this.x*e,t.y=this.y*e,t.z=this.z*e,t.w=this.w*e,t}scaleAndAddToRef(e,t){return t.x+=this.x*e,t.y+=this.y*e,t.z+=this.z*e,t.w+=this.w*e,t}equals(e){return e&&this.x===e.x&&this.y===e.y&&this.z===e.z&&this.w===e.w}equalsWithEpsilon(e,t=xe){return e&&X.WithinEpsilon(this.x,e.x,t)&&X.WithinEpsilon(this.y,e.y,t)&&X.WithinEpsilon(this.z,e.z,t)&&X.WithinEpsilon(this.w,e.w,t)}equalsToFloats(e,t,i,s){return this.x===e&&this.y===t&&this.z===i&&this.w===s}multiplyInPlace(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiply(e){return new this.constructor(this.x*e.x,this.y*e.y,this.z*e.z,this.w*e.w)}multiplyToRef(e,t){return t.x=this.x*e.x,t.y=this.y*e.y,t.z=this.z*e.z,t.w=this.w*e.w,t}multiplyByFloats(e,t,i,s){return new this.constructor(this.x*e,this.y*t,this.z*i,this.w*s)}divide(e){return new this.constructor(this.x/e.x,this.y/e.y,this.z/e.z,this.w/e.w)}divideToRef(e,t){return t.x=this.x/e.x,t.y=this.y/e.y,t.z=this.z/e.z,t.w=this.w/e.w,t}divideInPlace(e){return this.divideToRef(e,this)}minimizeInPlace(e){return e.x<this.x&&(this.x=e.x),e.y<this.y&&(this.y=e.y),e.z<this.z&&(this.z=e.z),e.w<this.w&&(this.w=e.w),this}maximizeInPlace(e){return e.x>this.x&&(this.x=e.x),e.y>this.y&&(this.y=e.y),e.z>this.z&&(this.z=e.z),e.w>this.w&&(this.w=e.w),this}floor(){return new this.constructor(Math.floor(this.x),Math.floor(this.y),Math.floor(this.z),Math.floor(this.w))}fract(){return new this.constructor(this.x-Math.floor(this.x),this.y-Math.floor(this.y),this.z-Math.floor(this.z),this.w-Math.floor(this.w))}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}lengthSquared(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}normalize(){const e=this.length();return e===0?this:this.scaleInPlace(1/e)}toVector3(){return new p(this.x,this.y,this.z)}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copyFrom(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}copyFromFloats(e,t,i,s){return this.x=e,this.y=t,this.z=i,this.w=s,this}set(e,t,i,s){return this.copyFromFloats(e,t,i,s)}setAll(e){return this.x=this.y=this.z=this.w=e,this}static FromArray(e,t){return t||(t=0),new Ce(e[t],e[t+1],e[t+2],e[t+3])}static FromArrayToRef(e,t,i){return i.x=e[t],i.y=e[t+1],i.z=e[t+2],i.w=e[t+3],i}static FromFloatArrayToRef(e,t,i){return Ce.FromArrayToRef(e,t,i),i}static FromFloatsToRef(e,t,i,s,r){return r.x=e,r.y=t,r.z=i,r.w=s,r}static Zero(){return new Ce(0,0,0,0)}static One(){return new Ce(1,1,1,1)}static get ZeroReadOnly(){return Ce._ZeroReadOnly}static Normalize(e){const t=Ce.Zero();return Ce.NormalizeToRef(e,t),t}static NormalizeToRef(e,t){return t.copyFrom(e),t.normalize(),t}static Minimize(e,t){const i=new e.constructor;return i.copyFrom(e),i.minimizeInPlace(t),i}static Maximize(e,t){const i=new e.constructor;return i.copyFrom(e),i.maximizeInPlace(t),i}static Distance(e,t){return Math.sqrt(Ce.DistanceSquared(e,t))}static DistanceSquared(e,t){const i=e.x-t.x,s=e.y-t.y,r=e.z-t.z,n=e.w-t.w;return i*i+s*s+r*r+n*n}static Center(e,t){return Ce.CenterToRef(e,t,Ce.Zero())}static CenterToRef(e,t,i){return i.copyFromFloats((e.x+t.x)/2,(e.y+t.y)/2,(e.z+t.z)/2,(e.w+t.w)/2)}static TransformCoordinates(e,t){const i=Ce.Zero();return Ce.TransformCoordinatesToRef(e,t,i),i}static TransformCoordinatesToRef(e,t,i){return Ce.TransformCoordinatesFromFloatsToRef(e._x,e._y,e._z,t,i),i}static TransformCoordinatesFromFloatsToRef(e,t,i,s,r){const n=s.m,a=e*n[0]+t*n[4]+i*n[8]+n[12],o=e*n[1]+t*n[5]+i*n[9]+n[13],h=e*n[2]+t*n[6]+i*n[10]+n[14],l=e*n[3]+t*n[7]+i*n[11]+n[15];return r.x=a,r.y=o,r.z=h,r.w=l,r}static TransformNormal(e,t){const i=new e.constructor;return Ce.TransformNormalToRef(e,t,i),i}static TransformNormalToRef(e,t,i){const s=t.m,r=e.x*s[0]+e.y*s[4]+e.z*s[8],n=e.x*s[1]+e.y*s[5]+e.z*s[9],a=e.x*s[2]+e.y*s[6]+e.z*s[10];return i.x=r,i.y=n,i.z=a,i.w=e.w,i}static TransformNormalFromFloatsToRef(e,t,i,s,r,n){const a=r.m;return n.x=e*a[0]+t*a[4]+i*a[8],n.y=e*a[1]+t*a[5]+i*a[9],n.z=e*a[2]+t*a[6]+i*a[10],n.w=s,n}static FromVector3(e,t=0){return new Ce(e._x,e._y,e._z,t)}}Ce._ZeroReadOnly=Ce.Zero();class Z{constructor(e=0,t=0,i=0,s=1){this._isDirty=!0,this._x=e,this._y=t,this._z=i,this._w=s}get x(){return this._x}set x(e){this._x=e,this._isDirty=!0}get y(){return this._y}set y(e){this._y=e,this._isDirty=!0}get z(){return this._z}set z(e){this._z=e,this._isDirty=!0}get w(){return this._w}set w(e){this._w=e,this._isDirty=!0}toString(){return`{X: ${this._x} Y: ${this._y} Z: ${this._z} W: ${this._w}}`}getClassName(){return"Quaternion"}getHashCode(){const e=st(this._x),t=st(this._y),i=st(this._z),s=st(this._w);let r=e;return r=r*397^t,r=r*397^i,r=r*397^s,r}asArray(){return[this._x,this._y,this._z,this._w]}toArray(e,t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,this}equals(e){return e&&this._x===e._x&&this._y===e._y&&this._z===e._z&&this._w===e._w}equalsWithEpsilon(e,t=xe){return e&&X.WithinEpsilon(this._x,e._x,t)&&X.WithinEpsilon(this._y,e._y,t)&&X.WithinEpsilon(this._z,e._z,t)&&X.WithinEpsilon(this._w,e._w,t)}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copyFrom(e){return this.x=e._x,this.y=e._y,this.z=e._z,this.w=e._w,this}copyFromFloats(e,t,i,s){return this.x=e,this.y=t,this.z=i,this.w=s,this}set(e,t,i,s){return this.copyFromFloats(e,t,i,s)}add(e){return new this.constructor(this._x+e._x,this._y+e._y,this._z+e._z,this._w+e._w)}addInPlace(e){return this._x+=e._x,this._y+=e._y,this._z+=e._z,this._w+=e._w,this}subtract(e){return new this.constructor(this._x-e._x,this._y-e._y,this._z-e._z,this._w-e._w)}subtractInPlace(e){return this._x-=e._x,this._y-=e._y,this._z-=e._z,this._w-=e._w,this}scale(e){return new this.constructor(this._x*e,this._y*e,this._z*e,this._w*e)}scaleToRef(e,t){return t.x=this._x*e,t.y=this._y*e,t.z=this._z*e,t.w=this._w*e,t}scaleInPlace(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}scaleAndAddToRef(e,t){return t.x+=this._x*e,t.y+=this._y*e,t.z+=this._z*e,t.w+=this._w*e,t}multiply(e){const t=new this.constructor(0,0,0,1);return this.multiplyToRef(e,t),t}multiplyToRef(e,t){const i=this._x*e._w+this._y*e._z-this._z*e._y+this._w*e._x,s=-this._x*e._z+this._y*e._w+this._z*e._x+this._w*e._y,r=this._x*e._y-this._y*e._x+this._z*e._w+this._w*e._z,n=-this._x*e._x-this._y*e._y-this._z*e._z+this._w*e._w;return t.copyFromFloats(i,s,r,n),t}multiplyInPlace(e){return this.multiplyToRef(e,this),this}conjugateToRef(e){return e.copyFromFloats(-this._x,-this._y,-this._z,this._w),e}conjugateInPlace(){return this.x*=-1,this.y*=-1,this.z*=-1,this}conjugate(){return new this.constructor(-this._x,-this._y,-this._z,this._w)}invert(){const e=this.conjugate(),t=this.lengthSquared();return t==0||t==1||e.scaleInPlace(1/t),e}invertInPlace(){this.conjugateInPlace();const e=this.lengthSquared();return e==0||e==1?this:(this.scaleInPlace(1/e),this)}lengthSquared(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this.lengthSquared())}normalize(){const e=this.length();if(e===0)return this;const t=1/e;return this.scaleInPlace(t),this}normalizeToNew(){const e=this.length();if(e===0)return this.clone();const t=1/e;return this.scale(t)}toEulerAngles(){const e=p.Zero();return this.toEulerAnglesToRef(e),e}toEulerAnglesToRef(e){const t=this._z,i=this._x,s=this._y,r=this._w,n=s*t-i*r,a=.4999999;if(n<-a)e.y=2*Math.atan2(s,r),e.x=Math.PI/2,e.z=0;else if(n>a)e.y=2*Math.atan2(s,r),e.x=-Math.PI/2,e.z=0;else{const o=r*r,h=t*t,l=i*i,u=s*s;e.z=Math.atan2(2*(i*s+t*r),-h-l+u+o),e.x=Math.asin(-2*n),e.y=Math.atan2(2*(t*i+s*r),h-l-u+o)}return e}toRotationMatrix(e){return x.FromQuaternionToRef(this,e),e}fromRotationMatrix(e){return Z.FromRotationMatrixToRef(e,this),this}static FromRotationMatrix(e){const t=new Z;return Z.FromRotationMatrixToRef(e,t),t}static FromRotationMatrixToRef(e,t){const i=e.m,s=i[0],r=i[4],n=i[8],a=i[1],o=i[5],h=i[9],l=i[2],u=i[6],d=i[10],f=s+o+d;let _;return f>0?(_=.5/Math.sqrt(f+1),t.w=.25/_,t.x=(u-h)*_,t.y=(n-l)*_,t.z=(a-r)*_):s>o&&s>d?(_=2*Math.sqrt(1+s-o-d),t.w=(u-h)/_,t.x=.25*_,t.y=(r+a)/_,t.z=(n+l)/_):o>d?(_=2*Math.sqrt(1+o-s-d),t.w=(n-l)/_,t.x=(r+a)/_,t.y=.25*_,t.z=(h+u)/_):(_=2*Math.sqrt(1+d-s-o),t.w=(a-r)/_,t.x=(n+l)/_,t.y=(h+u)/_,t.z=.25*_),t}static Dot(e,t){return e._x*t._x+e._y*t._y+e._z*t._z+e._w*t._w}static AreClose(e,t,i=.1){const s=Z.Dot(e,t);return 1-s*s<=i}static SmoothToRef(e,t,i,s,r){let n=s===0?1:i/s;return n=X.Clamp(n,0,1),Z.SlerpToRef(e,t,n,r),r}static Zero(){return new Z(0,0,0,0)}static Inverse(e){return new e.constructor(-e._x,-e._y,-e._z,e._w)}static InverseToRef(e,t){return t.set(-e._x,-e._y,-e._z,e._w),t}static Identity(){return new Z(0,0,0,1)}static IsIdentity(e){return e&&e._x===0&&e._y===0&&e._z===0&&e._w===1}static RotationAxis(e,t){return Z.RotationAxisToRef(e,t,new Z)}static RotationAxisToRef(e,t,i){const s=Math.sin(t/2);return e.normalize(),i.w=Math.cos(t/2),i.x=e._x*s,i.y=e._y*s,i.z=e._z*s,i}static FromArray(e,t){return t||(t=0),new Z(e[t],e[t+1],e[t+2],e[t+3])}static FromArrayToRef(e,t,i){return i.x=e[t],i.y=e[t+1],i.z=e[t+2],i.w=e[t+3],i}static FromEulerAngles(e,t,i){const s=new Z;return Z.RotationYawPitchRollToRef(t,e,i,s),s}static FromEulerAnglesToRef(e,t,i,s){return Z.RotationYawPitchRollToRef(t,e,i,s),s}static FromEulerVector(e){const t=new Z;return Z.RotationYawPitchRollToRef(e._y,e._x,e._z,t),t}static FromEulerVectorToRef(e,t){return Z.RotationYawPitchRollToRef(e._y,e._x,e._z,t),t}static FromUnitVectorsToRef(e,t,i){const s=p.Dot(e,t)+1;return s<xe?Math.abs(e.x)>Math.abs(e.z)?i.set(-e.y,e.x,0,0):i.set(0,-e.z,e.y,0):(p.CrossToRef(e,t,D.Vector3[0]),i.set(D.Vector3[0].x,D.Vector3[0].y,D.Vector3[0].z,s)),i.normalize()}static RotationYawPitchRoll(e,t,i){const s=new Z;return Z.RotationYawPitchRollToRef(e,t,i,s),s}static RotationYawPitchRollToRef(e,t,i,s){const r=i*.5,n=t*.5,a=e*.5,o=Math.sin(r),h=Math.cos(r),l=Math.sin(n),u=Math.cos(n),d=Math.sin(a),f=Math.cos(a);return s.x=f*l*h+d*u*o,s.y=d*u*h-f*l*o,s.z=f*u*o-d*l*h,s.w=f*u*h+d*l*o,s}static RotationAlphaBetaGamma(e,t,i){const s=new Z;return Z.RotationAlphaBetaGammaToRef(e,t,i,s),s}static RotationAlphaBetaGammaToRef(e,t,i,s){const r=(i+e)*.5,n=(i-e)*.5,a=t*.5;return s.x=Math.cos(n)*Math.sin(a),s.y=Math.sin(n)*Math.sin(a),s.z=Math.sin(r)*Math.cos(a),s.w=Math.cos(r)*Math.cos(a),s}static RotationQuaternionFromAxis(e,t,i){const s=new Z(0,0,0,0);return Z.RotationQuaternionFromAxisToRef(e,t,i,s),s}static RotationQuaternionFromAxisToRef(e,t,i,s){const r=K.Matrix[0];return x.FromXYZAxesToRef(e.normalize(),t.normalize(),i.normalize(),r),Z.FromRotationMatrixToRef(r,s),s}static FromLookDirectionLH(e,t){const i=new Z;return Z.FromLookDirectionLHToRef(e,t,i),i}static FromLookDirectionLHToRef(e,t,i){const s=K.Matrix[0];return x.LookDirectionLHToRef(e,t,s),Z.FromRotationMatrixToRef(s,i),i}static FromLookDirectionRH(e,t){const i=new Z;return Z.FromLookDirectionRHToRef(e,t,i),i}static FromLookDirectionRHToRef(e,t,i){const s=K.Matrix[0];return x.LookDirectionRHToRef(e,t,s),Z.FromRotationMatrixToRef(s,i)}static Slerp(e,t,i){const s=Z.Identity();return Z.SlerpToRef(e,t,i,s),s}static SlerpToRef(e,t,i,s){let r,n,a=e._x*t._x+e._y*t._y+e._z*t._z+e._w*t._w,o=!1;if(a<0&&(o=!0,a=-a),a>.999999)n=1-i,r=o?-i:i;else{const h=Math.acos(a),l=1/Math.sin(h);n=Math.sin((1-i)*h)*l,r=o?-Math.sin(i*h)*l:Math.sin(i*h)*l}return s.x=n*e._x+r*t._x,s.y=n*e._y+r*t._y,s.z=n*e._z+r*t._z,s.w=n*e._w+r*t._w,s}static Hermite(e,t,i,s,r){const n=r*r,a=r*n,o=2*a-3*n+1,h=-2*a+3*n,l=a-2*n+r,u=a-n,d=e._x*o+i._x*h+t._x*l+s._x*u,f=e._y*o+i._y*h+t._y*l+s._y*u,_=e._z*o+i._z*h+t._z*l+s._z*u,E=e._w*o+i._w*h+t._w*l+s._w*u;return new e.constructor(d,f,_,E)}static Hermite1stDerivative(e,t,i,s,r){const n=new e.constructor;return this.Hermite1stDerivativeToRef(e,t,i,s,r,n),n}static Hermite1stDerivativeToRef(e,t,i,s,r,n){const a=r*r;return n.x=(a-r)*6*e.x+(3*a-4*r+1)*t.x+(-a+r)*6*i.x+(3*a-2*r)*s.x,n.y=(a-r)*6*e.y+(3*a-4*r+1)*t.y+(-a+r)*6*i.y+(3*a-2*r)*s.y,n.z=(a-r)*6*e.z+(3*a-4*r+1)*t.z+(-a+r)*6*i.z+(3*a-2*r)*s.z,n.w=(a-r)*6*e.w+(3*a-4*r+1)*t.w+(-a+r)*6*i.w+(3*a-2*r)*s.w,n}}class x{constructor(){this._isIdentity=!1,this._isIdentityDirty=!0,this._isIdentity3x2=!0,this._isIdentity3x2Dirty=!0,this.updateFlag=-1,Ue.MatrixTrackPrecisionChange&&Ue.MatrixTrackedMatrices.push(this),this._m=new Ue.MatrixCurrentType(16),this.markAsUpdated()}static get Use64Bits(){return Ue.MatrixUse64Bits}get m(){return this._m}markAsUpdated(){this.updateFlag=x._UpdateFlagSeed++,this._isIdentity=!1,this._isIdentity3x2=!1,this._isIdentityDirty=!0,this._isIdentity3x2Dirty=!0}_updateIdentityStatus(e,t=!1,i=!1,s=!0){this._isIdentity=e,this._isIdentity3x2=e||i,this._isIdentityDirty=this._isIdentity?!1:t,this._isIdentity3x2Dirty=this._isIdentity3x2?!1:s}isIdentity(){if(this._isIdentityDirty){this._isIdentityDirty=!1;const e=this._m;this._isIdentity=e[0]===1&&e[1]===0&&e[2]===0&&e[3]===0&&e[4]===0&&e[5]===1&&e[6]===0&&e[7]===0&&e[8]===0&&e[9]===0&&e[10]===1&&e[11]===0&&e[12]===0&&e[13]===0&&e[14]===0&&e[15]===1}return this._isIdentity}isIdentityAs3x2(){return this._isIdentity3x2Dirty&&(this._isIdentity3x2Dirty=!1,this._m[0]!==1||this._m[5]!==1||this._m[15]!==1?this._isIdentity3x2=!1:this._m[1]!==0||this._m[2]!==0||this._m[3]!==0||this._m[4]!==0||this._m[6]!==0||this._m[7]!==0||this._m[8]!==0||this._m[9]!==0||this._m[10]!==0||this._m[11]!==0||this._m[12]!==0||this._m[13]!==0||this._m[14]!==0?this._isIdentity3x2=!1:this._isIdentity3x2=!0),this._isIdentity3x2}determinant(){if(this._isIdentity===!0)return 1;const e=this._m,t=e[0],i=e[1],s=e[2],r=e[3],n=e[4],a=e[5],o=e[6],h=e[7],l=e[8],u=e[9],d=e[10],f=e[11],_=e[12],E=e[13],m=e[14],v=e[15],S=d*v-m*f,y=u*v-E*f,A=u*m-E*d,C=l*v-_*f,b=l*m-d*_,M=l*E-_*u,L=+(a*S-o*y+h*A),k=-(n*S-o*C+h*b),w=+(n*y-a*C+h*M),de=-(n*A-a*b+o*M);return t*L+i*k+s*w+r*de}toArray(){return this._m}asArray(){return this._m}invert(){return this.invertToRef(this),this}reset(){return x.FromValuesToRef(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,this),this._updateIdentityStatus(!1),this}add(e){const t=new this.constructor;return this.addToRef(e,t),t}addToRef(e,t){const i=this._m,s=t._m,r=e.m;for(let n=0;n<16;n++)s[n]=i[n]+r[n];return t.markAsUpdated(),t}addToSelf(e){const t=this._m,i=e.m;for(let s=0;s<16;s++)t[s]+=i[s];return this.markAsUpdated(),this}invertToRef(e){if(this._isIdentity===!0)return x.IdentityToRef(e),e;const t=this._m,i=t[0],s=t[1],r=t[2],n=t[3],a=t[4],o=t[5],h=t[6],l=t[7],u=t[8],d=t[9],f=t[10],_=t[11],E=t[12],m=t[13],v=t[14],S=t[15],y=f*S-v*_,A=d*S-m*_,C=d*v-m*f,b=u*S-E*_,M=u*v-f*E,L=u*m-E*d,k=+(o*y-h*A+l*C),w=-(a*y-h*b+l*M),de=+(a*A-o*b+l*L),ce=-(a*C-o*M+h*L),se=i*k+s*w+r*de+n*ce;if(se===0)return e.copyFrom(this),e;const te=1/se,Fe=h*S-v*l,we=o*S-m*l,He=o*v-m*h,Ke=a*S-E*l,Ye=a*v-E*h,pt=a*m-E*o,ht=h*_-f*l,wt=o*_-d*l,si=o*f-d*h,ds=a*_-u*l,fs=a*f-u*h,_s=a*d-u*o,Xs=-(s*y-r*A+n*C),Hs=+(i*y-r*b+n*M),Ks=-(i*A-s*b+n*L),Ys=+(i*C-s*M+r*L),Zs=+(s*Fe-r*we+n*He),qs=-(i*Fe-r*Ke+n*Ye),Ht=+(i*we-s*Ke+n*pt),Kt=-(i*He-s*Ye+r*pt),Yt=-(s*ht-r*wt+n*si),Zt=+(i*ht-r*ds+n*fs),wl=-(i*wt-s*ds+n*_s),Ol=+(i*si-s*fs+r*_s);return x.FromValuesToRef(k*te,Xs*te,Zs*te,Yt*te,w*te,Hs*te,qs*te,Zt*te,de*te,Ks*te,Ht*te,wl*te,ce*te,Ys*te,Kt*te,Ol*te,e),e}addAtIndex(e,t){return this._m[e]+=t,this.markAsUpdated(),this}multiplyAtIndex(e,t){return this._m[e]*=t,this.markAsUpdated(),this}setTranslationFromFloats(e,t,i){return this._m[12]=e,this._m[13]=t,this._m[14]=i,this.markAsUpdated(),this}addTranslationFromFloats(e,t,i){return this._m[12]+=e,this._m[13]+=t,this._m[14]+=i,this.markAsUpdated(),this}setTranslation(e){return this.setTranslationFromFloats(e._x,e._y,e._z)}getTranslation(){return new p(this._m[12],this._m[13],this._m[14])}getTranslationToRef(e){return e.x=this._m[12],e.y=this._m[13],e.z=this._m[14],e}removeRotationAndScaling(){const e=this.m;return x.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,e[12],e[13],e[14],e[15],this),this._updateIdentityStatus(e[12]===0&&e[13]===0&&e[14]===0&&e[15]===1),this}multiply(e){const t=new this.constructor;return this.multiplyToRef(e,t),t}copyFrom(e){e.copyToArray(this._m);const t=e;return this.updateFlag=t.updateFlag,this._updateIdentityStatus(t._isIdentity,t._isIdentityDirty,t._isIdentity3x2,t._isIdentity3x2Dirty),this}copyToArray(e,t=0){const i=this._m;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],this}multiplyToRef(e,t){return this._isIdentity?(t.copyFrom(e),t):e._isIdentity?(t.copyFrom(this),t):(this.multiplyToArray(e,t._m,0),t.markAsUpdated(),t)}multiplyToArray(e,t,i){const s=this._m,r=e.m,n=s[0],a=s[1],o=s[2],h=s[3],l=s[4],u=s[5],d=s[6],f=s[7],_=s[8],E=s[9],m=s[10],v=s[11],S=s[12],y=s[13],A=s[14],C=s[15],b=r[0],M=r[1],L=r[2],k=r[3],w=r[4],de=r[5],ce=r[6],se=r[7],te=r[8],Fe=r[9],we=r[10],He=r[11],Ke=r[12],Ye=r[13],pt=r[14],ht=r[15];return t[i]=n*b+a*w+o*te+h*Ke,t[i+1]=n*M+a*de+o*Fe+h*Ye,t[i+2]=n*L+a*ce+o*we+h*pt,t[i+3]=n*k+a*se+o*He+h*ht,t[i+4]=l*b+u*w+d*te+f*Ke,t[i+5]=l*M+u*de+d*Fe+f*Ye,t[i+6]=l*L+u*ce+d*we+f*pt,t[i+7]=l*k+u*se+d*He+f*ht,t[i+8]=_*b+E*w+m*te+v*Ke,t[i+9]=_*M+E*de+m*Fe+v*Ye,t[i+10]=_*L+E*ce+m*we+v*pt,t[i+11]=_*k+E*se+m*He+v*ht,t[i+12]=S*b+y*w+A*te+C*Ke,t[i+13]=S*M+y*de+A*Fe+C*Ye,t[i+14]=S*L+y*ce+A*we+C*pt,t[i+15]=S*k+y*se+A*He+C*ht,this}equals(e){const t=e;if(!t)return!1;if((this._isIdentity||t._isIdentity)&&!this._isIdentityDirty&&!t._isIdentityDirty)return this._isIdentity&&t._isIdentity;const i=this.m,s=t.m;return i[0]===s[0]&&i[1]===s[1]&&i[2]===s[2]&&i[3]===s[3]&&i[4]===s[4]&&i[5]===s[5]&&i[6]===s[6]&&i[7]===s[7]&&i[8]===s[8]&&i[9]===s[9]&&i[10]===s[10]&&i[11]===s[11]&&i[12]===s[12]&&i[13]===s[13]&&i[14]===s[14]&&i[15]===s[15]}clone(){const e=new this.constructor;return e.copyFrom(this),e}getClassName(){return"Matrix"}getHashCode(){let e=st(this._m[0]);for(let t=1;t<16;t++)e=e*397^st(this._m[t]);return e}decomposeToTransformNode(e){return e.rotationQuaternion=e.rotationQuaternion||new Z,this.decompose(e.scaling,e.rotationQuaternion,e.position)}decompose(e,t,i,s){if(this._isIdentity)return i&&i.setAll(0),e&&e.setAll(1),t&&t.copyFromFloats(0,0,0,1),!0;const r=this._m;if(i&&i.copyFromFloats(r[12],r[13],r[14]),e=e||K.Vector3[0],e.x=Math.sqrt(r[0]*r[0]+r[1]*r[1]+r[2]*r[2]),e.y=Math.sqrt(r[4]*r[4]+r[5]*r[5]+r[6]*r[6]),e.z=Math.sqrt(r[8]*r[8]+r[9]*r[9]+r[10]*r[10]),s){const n=s.scaling.x<0?-1:1,a=s.scaling.y<0?-1:1,o=s.scaling.z<0?-1:1;e.x*=n,e.y*=a,e.z*=o}else this.determinant()<=0&&(e.y*=-1);if(e._x===0||e._y===0||e._z===0)return t&&t.copyFromFloats(0,0,0,1),!1;if(t){const n=1/e._x,a=1/e._y,o=1/e._z;x.FromValuesToRef(r[0]*n,r[1]*n,r[2]*n,0,r[4]*a,r[5]*a,r[6]*a,0,r[8]*o,r[9]*o,r[10]*o,0,0,0,0,1,K.Matrix[0]),Z.FromRotationMatrixToRef(K.Matrix[0],t)}return!0}getRow(e){if(e<0||e>3)return null;const t=e*4;return new Ce(this._m[t+0],this._m[t+1],this._m[t+2],this._m[t+3])}getRowToRef(e,t){if(e>=0&&e<3){const i=e*4;t.x=this._m[i+0],t.y=this._m[i+1],t.z=this._m[i+2],t.w=this._m[i+3]}return t}setRow(e,t){return this.setRowFromFloats(e,t.x,t.y,t.z,t.w)}transpose(){const e=new this.constructor;return x.TransposeToRef(this,e),e}transposeToRef(e){return x.TransposeToRef(this,e),e}setRowFromFloats(e,t,i,s,r){if(e<0||e>3)return this;const n=e*4;return this._m[n+0]=t,this._m[n+1]=i,this._m[n+2]=s,this._m[n+3]=r,this.markAsUpdated(),this}scale(e){const t=new this.constructor;return this.scaleToRef(e,t),t}scaleToRef(e,t){for(let i=0;i<16;i++)t._m[i]=this._m[i]*e;return t.markAsUpdated(),t}scaleAndAddToRef(e,t){for(let i=0;i<16;i++)t._m[i]+=this._m[i]*e;return t.markAsUpdated(),t}toNormalMatrix(e){const t=K.Matrix[0];this.invertToRef(t),t.transposeToRef(e);const i=e._m;return x.FromValuesToRef(i[0],i[1],i[2],0,i[4],i[5],i[6],0,i[8],i[9],i[10],0,0,0,0,1,e),e}getRotationMatrix(){const e=new this.constructor;return this.getRotationMatrixToRef(e),e}getRotationMatrixToRef(e){const t=K.Vector3[0];if(!this.decompose(t))return x.IdentityToRef(e),e;const i=this._m,s=1/t._x,r=1/t._y,n=1/t._z;return x.FromValuesToRef(i[0]*s,i[1]*s,i[2]*s,0,i[4]*r,i[5]*r,i[6]*r,0,i[8]*n,i[9]*n,i[10]*n,0,0,0,0,1,e),e}toggleModelMatrixHandInPlace(){const e=this._m;return e[2]*=-1,e[6]*=-1,e[8]*=-1,e[9]*=-1,e[14]*=-1,this.markAsUpdated(),this}toggleProjectionMatrixHandInPlace(){const e=this._m;return e[8]*=-1,e[9]*=-1,e[10]*=-1,e[11]*=-1,this.markAsUpdated(),this}static FromArray(e,t=0){const i=new x;return x.FromArrayToRef(e,t,i),i}static FromArrayToRef(e,t,i){for(let s=0;s<16;s++)i._m[s]=e[s+t];return i.markAsUpdated(),i}static FromFloat32ArrayToRefScaled(e,t,i,s){for(let r=0;r<16;r++)s._m[r]=e[r+t]*i;return s.markAsUpdated(),s}static get IdentityReadOnly(){return x._IdentityReadOnly}static FromValuesToRef(e,t,i,s,r,n,a,o,h,l,u,d,f,_,E,m,v){const S=v._m;S[0]=e,S[1]=t,S[2]=i,S[3]=s,S[4]=r,S[5]=n,S[6]=a,S[7]=o,S[8]=h,S[9]=l,S[10]=u,S[11]=d,S[12]=f,S[13]=_,S[14]=E,S[15]=m,v.markAsUpdated()}static FromValues(e,t,i,s,r,n,a,o,h,l,u,d,f,_,E,m){const v=new x,S=v._m;return S[0]=e,S[1]=t,S[2]=i,S[3]=s,S[4]=r,S[5]=n,S[6]=a,S[7]=o,S[8]=h,S[9]=l,S[10]=u,S[11]=d,S[12]=f,S[13]=_,S[14]=E,S[15]=m,v.markAsUpdated(),v}static Compose(e,t,i){const s=new x;return x.ComposeToRef(e,t,i,s),s}static ComposeToRef(e,t,i,s){const r=s._m,n=t._x,a=t._y,o=t._z,h=t._w,l=n+n,u=a+a,d=o+o,f=n*l,_=n*u,E=n*d,m=a*u,v=a*d,S=o*d,y=h*l,A=h*u,C=h*d,b=e._x,M=e._y,L=e._z;return r[0]=(1-(m+S))*b,r[1]=(_+C)*b,r[2]=(E-A)*b,r[3]=0,r[4]=(_-C)*M,r[5]=(1-(f+S))*M,r[6]=(v+y)*M,r[7]=0,r[8]=(E+A)*L,r[9]=(v-y)*L,r[10]=(1-(f+m))*L,r[11]=0,r[12]=i._x,r[13]=i._y,r[14]=i._z,r[15]=1,s.markAsUpdated(),s}static Identity(){const e=x.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return e._updateIdentityStatus(!0),e}static IdentityToRef(e){return x.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,e),e._updateIdentityStatus(!0),e}static Zero(){const e=x.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);return e._updateIdentityStatus(!1),e}static RotationX(e){const t=new x;return x.RotationXToRef(e,t),t}static Invert(e){const t=new e.constructor;return e.invertToRef(t),t}static RotationXToRef(e,t){const i=Math.sin(e),s=Math.cos(e);return x.FromValuesToRef(1,0,0,0,0,s,i,0,0,-i,s,0,0,0,0,1,t),t._updateIdentityStatus(s===1&&i===0),t}static RotationY(e){const t=new x;return x.RotationYToRef(e,t),t}static RotationYToRef(e,t){const i=Math.sin(e),s=Math.cos(e);return x.FromValuesToRef(s,0,-i,0,0,1,0,0,i,0,s,0,0,0,0,1,t),t._updateIdentityStatus(s===1&&i===0),t}static RotationZ(e){const t=new x;return x.RotationZToRef(e,t),t}static RotationZToRef(e,t){const i=Math.sin(e),s=Math.cos(e);return x.FromValuesToRef(s,i,0,0,-i,s,0,0,0,0,1,0,0,0,0,1,t),t._updateIdentityStatus(s===1&&i===0),t}static RotationAxis(e,t){const i=new x;return x.RotationAxisToRef(e,t,i),i}static RotationAxisToRef(e,t,i){const s=Math.sin(-t),r=Math.cos(-t),n=1-r;e.normalize();const a=i._m;return a[0]=e._x*e._x*n+r,a[1]=e._x*e._y*n-e._z*s,a[2]=e._x*e._z*n+e._y*s,a[3]=0,a[4]=e._y*e._x*n+e._z*s,a[5]=e._y*e._y*n+r,a[6]=e._y*e._z*n-e._x*s,a[7]=0,a[8]=e._z*e._x*n-e._y*s,a[9]=e._z*e._y*n+e._x*s,a[10]=e._z*e._z*n+r,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,i.markAsUpdated(),i}static RotationAlignToRef(e,t,i){const s=p.Dot(t,e),r=i._m;if(s<-1+xe)r[0]=-1,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=-1,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=1,r[11]=0;else{const n=p.Cross(t,e),a=1/(1+s);r[0]=n._x*n._x*a+s,r[1]=n._y*n._x*a-n._z,r[2]=n._z*n._x*a+n._y,r[3]=0,r[4]=n._x*n._y*a+n._z,r[5]=n._y*n._y*a+s,r[6]=n._z*n._y*a-n._x,r[7]=0,r[8]=n._x*n._z*a-n._y,r[9]=n._y*n._z*a+n._x,r[10]=n._z*n._z*a+s,r[11]=0}return r[12]=0,r[13]=0,r[14]=0,r[15]=1,i.markAsUpdated(),i}static RotationYawPitchRoll(e,t,i){const s=new x;return x.RotationYawPitchRollToRef(e,t,i,s),s}static RotationYawPitchRollToRef(e,t,i,s){return Z.RotationYawPitchRollToRef(e,t,i,K.Quaternion[0]),K.Quaternion[0].toRotationMatrix(s),s}static Scaling(e,t,i){const s=new x;return x.ScalingToRef(e,t,i,s),s}static ScalingToRef(e,t,i,s){return x.FromValuesToRef(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1,s),s._updateIdentityStatus(e===1&&t===1&&i===1),s}static Translation(e,t,i){const s=new x;return x.TranslationToRef(e,t,i,s),s}static TranslationToRef(e,t,i,s){return x.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,e,t,i,1,s),s._updateIdentityStatus(e===0&&t===0&&i===0),s}static Lerp(e,t,i){const s=new e.constructor;return x.LerpToRef(e,t,i,s),s}static LerpToRef(e,t,i,s){const r=s._m,n=e.m,a=t.m;for(let o=0;o<16;o++)r[o]=n[o]*(1-i)+a[o]*i;return s.markAsUpdated(),s}static DecomposeLerp(e,t,i){const s=new e.constructor;return x.DecomposeLerpToRef(e,t,i,s),s}static DecomposeLerpToRef(e,t,i,s){const r=K.Vector3[0],n=K.Quaternion[0],a=K.Vector3[1];e.decompose(r,n,a);const o=K.Vector3[2],h=K.Quaternion[1],l=K.Vector3[3];t.decompose(o,h,l);const u=K.Vector3[4];p.LerpToRef(r,o,i,u);const d=K.Quaternion[2];Z.SlerpToRef(n,h,i,d);const f=K.Vector3[5];return p.LerpToRef(a,l,i,f),x.ComposeToRef(u,d,f,s),s}static LookAtLH(e,t,i){const s=new x;return x.LookAtLHToRef(e,t,i,s),s}static LookAtLHToRef(e,t,i,s){const r=K.Vector3[0],n=K.Vector3[1],a=K.Vector3[2];t.subtractToRef(e,a),a.normalize(),p.CrossToRef(i,a,r);const o=r.lengthSquared();o===0?r.x=1:r.normalizeFromLength(Math.sqrt(o)),p.CrossToRef(a,r,n),n.normalize();const h=-p.Dot(r,e),l=-p.Dot(n,e),u=-p.Dot(a,e);x.FromValuesToRef(r._x,n._x,a._x,0,r._y,n._y,a._y,0,r._z,n._z,a._z,0,h,l,u,1,s)}static LookAtRH(e,t,i){const s=new x;return x.LookAtRHToRef(e,t,i,s),s}static LookAtRHToRef(e,t,i,s){const r=K.Vector3[0],n=K.Vector3[1],a=K.Vector3[2];e.subtractToRef(t,a),a.normalize(),p.CrossToRef(i,a,r);const o=r.lengthSquared();o===0?r.x=1:r.normalizeFromLength(Math.sqrt(o)),p.CrossToRef(a,r,n),n.normalize();const h=-p.Dot(r,e),l=-p.Dot(n,e),u=-p.Dot(a,e);return x.FromValuesToRef(r._x,n._x,a._x,0,r._y,n._y,a._y,0,r._z,n._z,a._z,0,h,l,u,1,s),s}static LookDirectionLH(e,t){const i=new x;return x.LookDirectionLHToRef(e,t,i),i}static LookDirectionLHToRef(e,t,i){const s=K.Vector3[0];s.copyFrom(e),s.scaleInPlace(-1);const r=K.Vector3[1];return p.CrossToRef(t,s,r),x.FromValuesToRef(r._x,r._y,r._z,0,t._x,t._y,t._z,0,s._x,s._y,s._z,0,0,0,0,1,i),i}static LookDirectionRH(e,t){const i=new x;return x.LookDirectionRHToRef(e,t,i),i}static LookDirectionRHToRef(e,t,i){const s=K.Vector3[2];return p.CrossToRef(t,e,s),x.FromValuesToRef(s._x,s._y,s._z,0,t._x,t._y,t._z,0,e._x,e._y,e._z,0,0,0,0,1,i),i}static OrthoLH(e,t,i,s,r){const n=new x;return x.OrthoLHToRef(e,t,i,s,n,r),n}static OrthoLHToRef(e,t,i,s,r,n){const a=i,o=s,h=2/e,l=2/t,u=2/(o-a),d=-(o+a)/(o-a);return x.FromValuesToRef(h,0,0,0,0,l,0,0,0,0,u,0,0,0,d,1,r),n&&r.multiplyToRef(qt,r),r._updateIdentityStatus(h===1&&l===1&&u===1&&d===0),r}static OrthoOffCenterLH(e,t,i,s,r,n,a){const o=new x;return x.OrthoOffCenterLHToRef(e,t,i,s,r,n,o,a),o}static OrthoOffCenterLHToRef(e,t,i,s,r,n,a,o){const h=r,l=n,u=2/(t-e),d=2/(s-i),f=2/(l-h),_=-(l+h)/(l-h),E=(e+t)/(e-t),m=(s+i)/(i-s);return x.FromValuesToRef(u,0,0,0,0,d,0,0,0,0,f,0,E,m,_,1,a),o&&a.multiplyToRef(qt,a),a.markAsUpdated(),a}static OrthoOffCenterRH(e,t,i,s,r,n,a){const o=new x;return x.OrthoOffCenterRHToRef(e,t,i,s,r,n,o,a),o}static OrthoOffCenterRHToRef(e,t,i,s,r,n,a,o){return x.OrthoOffCenterLHToRef(e,t,i,s,r,n,a,o),a._m[10]*=-1,a}static PerspectiveLH(e,t,i,s,r,n=0){const a=new x,o=i,h=s,l=2*o/e,u=2*o/t,d=(h+o)/(h-o),f=-2*h*o/(h-o),_=Math.tan(n);return x.FromValuesToRef(l,0,0,0,0,u,0,_,0,0,d,1,0,0,f,0,a),r&&a.multiplyToRef(qt,a),a._updateIdentityStatus(!1),a}static PerspectiveFovLH(e,t,i,s,r,n=0,a=!1){const o=new x;return x.PerspectiveFovLHToRef(e,t,i,s,o,!0,r,n,a),o}static PerspectiveFovLHToRef(e,t,i,s,r,n=!0,a,o=0,h=!1){const l=i,u=s,d=1/Math.tan(e*.5),f=n?d/t:d,_=n?d:d*t,E=h&&l===0?-1:u!==0?(u+l)/(u-l):1,m=h&&l===0?2*u:u!==0?-2*u*l/(u-l):-2*l,v=Math.tan(o);return x.FromValuesToRef(f,0,0,0,0,_,0,v,0,0,E,1,0,0,m,0,r),a&&r.multiplyToRef(qt,r),r._updateIdentityStatus(!1),r}static PerspectiveFovReverseLHToRef(e,t,i,s,r,n=!0,a,o=0){const h=1/Math.tan(e*.5),l=n?h/t:h,u=n?h:h*t,d=Math.tan(o);return x.FromValuesToRef(l,0,0,0,0,u,0,d,0,0,-i,1,0,0,1,0,r),a&&r.multiplyToRef(qt,r),r._updateIdentityStatus(!1),r}static PerspectiveFovRH(e,t,i,s,r,n=0,a=!1){const o=new x;return x.PerspectiveFovRHToRef(e,t,i,s,o,!0,r,n,a),o}static PerspectiveFovRHToRef(e,t,i,s,r,n=!0,a,o=0,h=!1){const l=i,u=s,d=1/Math.tan(e*.5),f=n?d/t:d,_=n?d:d*t,E=h&&l===0?1:u!==0?-(u+l)/(u-l):-1,m=h&&l===0?2*u:u!==0?-2*u*l/(u-l):-2*l,v=Math.tan(o);return x.FromValuesToRef(f,0,0,0,0,_,0,v,0,0,E,-1,0,0,m,0,r),a&&r.multiplyToRef(qt,r),r._updateIdentityStatus(!1),r}static PerspectiveFovReverseRHToRef(e,t,i,s,r,n=!0,a,o=0){const h=1/Math.tan(e*.5),l=n?h/t:h,u=n?h:h*t,d=Math.tan(o);return x.FromValuesToRef(l,0,0,0,0,u,0,d,0,0,-i,-1,0,0,-1,0,r),a&&r.multiplyToRef(qt,r),r._updateIdentityStatus(!1),r}static PerspectiveFovWebVRToRef(e,t,i,s,r=!1,n,a=0){const o=r?-1:1,h=Math.tan(e.upDegrees*Math.PI/180),l=Math.tan(e.downDegrees*Math.PI/180),u=Math.tan(e.leftDegrees*Math.PI/180),d=Math.tan(e.rightDegrees*Math.PI/180),f=2/(u+d),_=2/(h+l),E=Math.tan(a),m=s._m;return m[0]=f,m[1]=m[2]=m[3]=m[4]=0,m[5]=_,m[6]=0,m[7]=E,m[8]=(u-d)*f*.5,m[9]=-((h-l)*_*.5),m[10]=-i/(t-i),m[11]=1*o,m[12]=m[13]=m[15]=0,m[14]=-(2*i*t)/(i-t),n&&s.multiplyToRef(qt,s),s.markAsUpdated(),s}static GetFinalMatrix(e,t,i,s,r,n){const a=e.width,o=e.height,h=e.x,l=e.y,u=x.FromValues(a/2,0,0,0,0,-o/2,0,0,0,0,n-r,0,h+a/2,o/2+l,r,1),d=new t.constructor;return t.multiplyToRef(i,d),d.multiplyToRef(s,d),d.multiplyToRef(u,d)}static GetAsMatrix2x2(e){const t=e.m,i=[t[0],t[1],t[4],t[5]];return Ue.MatrixUse64Bits?i:new Float32Array(i)}static GetAsMatrix3x3(e){const t=e.m,i=[t[0],t[1],t[2],t[4],t[5],t[6],t[8],t[9],t[10]];return Ue.MatrixUse64Bits?i:new Float32Array(i)}static Transpose(e){const t=new e.constructor;return x.TransposeToRef(e,t),t}static TransposeToRef(e,t){const i=t._m,s=e.m;return i[0]=s[0],i[1]=s[4],i[2]=s[8],i[3]=s[12],i[4]=s[1],i[5]=s[5],i[6]=s[9],i[7]=s[13],i[8]=s[2],i[9]=s[6],i[10]=s[10],i[11]=s[14],i[12]=s[3],i[13]=s[7],i[14]=s[11],i[15]=s[15],t.markAsUpdated(),t._updateIdentityStatus(e._isIdentity,e._isIdentityDirty),t}static Reflection(e){const t=new x;return x.ReflectionToRef(e,t),t}static ReflectionToRef(e,t){e.normalize();const i=e.normal.x,s=e.normal.y,r=e.normal.z,n=-2*i,a=-2*s,o=-2*r;return x.FromValuesToRef(n*i+1,a*i,o*i,0,n*s,a*s+1,o*s,0,n*r,a*r,o*r+1,0,n*e.d,a*e.d,o*e.d,1,t),t}static FromXYZAxesToRef(e,t,i,s){return x.FromValuesToRef(e._x,e._y,e._z,0,t._x,t._y,t._z,0,i._x,i._y,i._z,0,0,0,0,1,s),s}static FromQuaternionToRef(e,t){const i=e._x*e._x,s=e._y*e._y,r=e._z*e._z,n=e._x*e._y,a=e._z*e._w,o=e._z*e._x,h=e._y*e._w,l=e._y*e._z,u=e._x*e._w;return t._m[0]=1-2*(s+r),t._m[1]=2*(n+a),t._m[2]=2*(o-h),t._m[3]=0,t._m[4]=2*(n-a),t._m[5]=1-2*(r+i),t._m[6]=2*(l+u),t._m[7]=0,t._m[8]=2*(o+h),t._m[9]=2*(l-u),t._m[10]=1-2*(s+i),t._m[11]=0,t._m[12]=0,t._m[13]=0,t._m[14]=0,t._m[15]=1,t.markAsUpdated(),t}}x._UpdateFlagSeed=0,x._IdentityReadOnly=x.Identity();class K{}K.Vector3=Be.BuildTuple(11,p.Zero),K.Matrix=Be.BuildTuple(2,x.Identity),K.Quaternion=Be.BuildTuple(3,Z.Zero);class D{}D.Vector2=Be.BuildTuple(3,ve.Zero),D.Vector3=Be.BuildTuple(13,p.Zero),D.Vector4=Be.BuildTuple(3,Ce.Zero),D.Quaternion=Be.BuildTuple(2,Z.Zero),D.Matrix=Be.BuildTuple(8,x.Identity),it("BABYLON.Vector2",ve),it("BABYLON.Vector3",p),it("BABYLON.Vector4",Ce),it("BABYLON.Matrix",x);const qt=x.FromValues(1,0,0,0,0,1,0,0,0,0,.5,0,0,0,.5,1);class Kr{constructor(e,t=!1,i,s){this.initialize(e,t,i,s)}initialize(e,t=!1,i,s){return this.mask=e,this.skipNextObservers=t,this.target=i,this.currentTarget=s,this}}class Yr{constructor(e,t,i=null){this.callback=e,this.mask=t,this.scope=i,this._willBeUnregistered=!1,this.unregisterOnNextCall=!1}}class F{constructor(e){this._observers=new Array,this._numObserversMarkedAsDeleted=0,this._eventState=new Kr(0),e&&(this._onObserverAdded=e)}static FromPromise(e,t){const i=new F;return e.then(s=>{i.notifyObservers(s)}).catch(s=>{if(t)t.notifyObservers(s);else throw s}),i}get observers(){return this._observers}add(e,t=-1,i=!1,s=null,r=!1){if(!e)return null;const n=new Yr(e,t,s);return n.unregisterOnNextCall=r,i?this._observers.unshift(n):this._observers.push(n),this._onObserverAdded&&this._onObserverAdded(n),n}addOnce(e){return this.add(e,void 0,void 0,void 0,!0)}remove(e){return e&&this._observers.indexOf(e)!==-1?(this._deferUnregister(e),!0):!1}removeCallback(e,t){for(let i=0;i<this._observers.length;i++){const s=this._observers[i];if(!s._willBeUnregistered&&s.callback===e&&(!t||t===s.scope))return this._deferUnregister(s),!0}return!1}_deferUnregister(e){this._numObserversMarkedAsDeleted++,e.unregisterOnNextCall=!1,e._willBeUnregistered=!0,setTimeout(()=>{this._remove(e)},0)}_remove(e){if(!e)return!1;const t=this._observers.indexOf(e);return t!==-1?(this._numObserversMarkedAsDeleted--,this._observers.splice(t,1),!0):!1}makeObserverTopPriority(e){this._remove(e),this._observers.unshift(e)}makeObserverBottomPriority(e){this._remove(e),this._observers.push(e)}notifyObservers(e,t=-1,i,s,r){if(!this._observers.length)return!0;const n=this._eventState;n.mask=t,n.target=i,n.currentTarget=s,n.skipNextObservers=!1,n.lastReturnValue=e,n.userInfo=r;for(const a of this._observers)if(!a._willBeUnregistered&&(a.mask&t&&(a.unregisterOnNextCall&&this._deferUnregister(a),a.scope?n.lastReturnValue=a.callback.apply(a.scope,[e,n]):n.lastReturnValue=a.callback(e,n)),n.skipNextObservers))return!1;return!0}notifyObserver(e,t,i=-1){if(e._willBeUnregistered)return;const s=this._eventState;s.mask=i,s.skipNextObservers=!1,e.unregisterOnNextCall&&this._deferUnregister(e),e.callback(t,s)}hasObservers(){return this._observers.length-this._numObserversMarkedAsDeleted>0}clear(){this._observers=new Array,this._onObserverAdded=null}clone(){const e=new F;return e._observers=this._observers.slice(0),e}hasSpecificMask(e=-1){for(const t of this._observers)if(t.mask&e||t.mask===e)return!0;return!1}}class Zr{constructor(){this.samplingMode=-1,this._useMipMaps=!0,this._cachedWrapU=null,this._cachedWrapV=null,this._cachedWrapR=null,this._cachedAnisotropicFilteringLevel=null,this._comparisonFunction=0}get wrapU(){return this._cachedWrapU}set wrapU(e){this._cachedWrapU=e}get wrapV(){return this._cachedWrapV}set wrapV(e){this._cachedWrapV=e}get wrapR(){return this._cachedWrapR}set wrapR(e){this._cachedWrapR=e}get anisotropicFilteringLevel(){return this._cachedAnisotropicFilteringLevel}set anisotropicFilteringLevel(e){this._cachedAnisotropicFilteringLevel=e}get comparisonFunction(){return this._comparisonFunction}set comparisonFunction(e){this._comparisonFunction=e}get useMipMaps(){return this._useMipMaps}set useMipMaps(e){this._useMipMaps=e}setParameters(e=1,t=1,i=1,s=1,r=2,n=0){return this._cachedWrapU=e,this._cachedWrapV=t,this._cachedWrapR=i,this._cachedAnisotropicFilteringLevel=s,this.samplingMode=r,this._comparisonFunction=n,this}compareSampler(e){return this._cachedWrapU===e._cachedWrapU&&this._cachedWrapV===e._cachedWrapV&&this._cachedWrapR===e._cachedWrapR&&this._cachedAnisotropicFilteringLevel===e._cachedAnisotropicFilteringLevel&&this.samplingMode===e.samplingMode&&this._comparisonFunction===e._comparisonFunction&&this._useMipMaps===e._useMipMaps}}var Ne;(function(c){c[c.Unknown=0]="Unknown",c[c.Url=1]="Url",c[c.Temp=2]="Temp",c[c.Raw=3]="Raw",c[c.Dynamic=4]="Dynamic",c[c.RenderTarget=5]="RenderTarget",c[c.MultiRenderTarget=6]="MultiRenderTarget",c[c.Cube=7]="Cube",c[c.CubeRaw=8]="CubeRaw",c[c.CubePrefiltered=9]="CubePrefiltered",c[c.Raw3D=10]="Raw3D",c[c.Raw2DArray=11]="Raw2DArray",c[c.DepthStencil=12]="DepthStencil",c[c.CubeRawRGBD=13]="CubeRawRGBD",c[c.Depth=14]="Depth"})(Ne||(Ne={}));class Ot extends Zr{constructor(e,t,i=!1){super(),this.isReady=!1,this.isCube=!1,this.is3D=!1,this.is2DArray=!1,this.isMultiview=!1,this.url="",this.generateMipMaps=!1,this.samples=0,this.type=-1,this.format=-1,this.onLoadedObservable=new F,this.onErrorObservable=new F,this.onRebuildCallback=null,this.width=0,this.height=0,this.depth=0,this.baseWidth=0,this.baseHeight=0,this.baseDepth=0,this.invertY=!1,this._invertVScale=!1,this._associatedChannel=-1,this._source=Ne.Unknown,this._buffer=null,this._bufferView=null,this._bufferViewArray=null,this._bufferViewArrayArray=null,this._size=0,this._extension="",this._files=null,this._workingCanvas=null,this._workingContext=null,this._cachedCoordinatesMode=null,this._isDisabled=!1,this._compression=null,this._sphericalPolynomial=null,this._sphericalPolynomialPromise=null,this._sphericalPolynomialComputed=!1,this._lodGenerationScale=0,this._lodGenerationOffset=0,this._useSRGBBuffer=!1,this._lodTextureHigh=null,this._lodTextureMid=null,this._lodTextureLow=null,this._isRGBD=!1,this._linearSpecularLOD=!1,this._irradianceTexture=null,this._hardwareTexture=null,this._maxLodLevel=null,this._references=1,this._gammaSpace=null,this._engine=e,this._source=t,this._uniqueId=Ot._Counter++,i||(this._hardwareTexture=e._createHardwareTexture())}get useMipMaps(){return this.generateMipMaps}set useMipMaps(e){this.generateMipMaps=e}get uniqueId(){return this._uniqueId}_setUniqueId(e){this._uniqueId=e}getEngine(){return this._engine}get source(){return this._source}incrementReferences(){this._references++}updateSize(e,t,i=1){this._engine.updateTextureDimensions(this,e,t,i),this.width=e,this.height=t,this.depth=i,this.baseWidth=e,this.baseHeight=t,this.baseDepth=i,this._size=e*t*i}_rebuild(){var e;if(this.isReady=!1,this._cachedCoordinatesMode=null,this._cachedWrapU=null,this._cachedWrapV=null,this._cachedWrapR=null,this._cachedAnisotropicFilteringLevel=null,this.onRebuildCallback){const i=this.onRebuildCallback(this),s=r=>{r._swapAndDie(this,!1),this.isReady=i.isReady};i.isAsync?i.proxy.then(s):s(i.proxy);return}let t;switch(this.source){case Ne.Temp:break;case Ne.Url:t=this._engine.createTexture((e=this._originalUrl)!==null&&e!==void 0?e:this.url,!this.generateMipMaps,this.invertY,null,this.samplingMode,i=>{i._swapAndDie(this,!1),this.isReady=!0},null,this._buffer,void 0,this.format,this._extension,void 0,void 0,void 0,this._useSRGBBuffer);return;case Ne.Raw:t=this._engine.createRawTexture(this._bufferView,this.baseWidth,this.baseHeight,this.format,this.generateMipMaps,this.invertY,this.samplingMode,this._compression,this.type,void 0,this._useSRGBBuffer),t._swapAndDie(this,!1),this.isReady=!0;break;case Ne.Raw3D:t=this._engine.createRawTexture3D(this._bufferView,this.baseWidth,this.baseHeight,this.baseDepth,this.format,this.generateMipMaps,this.invertY,this.samplingMode,this._compression,this.type),t._swapAndDie(this,!1),this.isReady=!0;break;case Ne.Raw2DArray:t=this._engine.createRawTexture2DArray(this._bufferView,this.baseWidth,this.baseHeight,this.baseDepth,this.format,this.generateMipMaps,this.invertY,this.samplingMode,this._compression,this.type),t._swapAndDie(this,!1),this.isReady=!0;break;case Ne.Dynamic:t=this._engine.createDynamicTexture(this.baseWidth,this.baseHeight,this.generateMipMaps,this.samplingMode),t._swapAndDie(this,!1),this._engine.updateDynamicTexture(this,this._engine.getRenderingCanvas(),this.invertY,void 0,void 0,!0);break;case Ne.Cube:t=this._engine.createCubeTexture(this.url,null,this._files,!this.generateMipMaps,()=>{t._swapAndDie(this,!1),this.isReady=!0},null,this.format,this._extension,!1,0,0,null,void 0,this._useSRGBBuffer);return;case Ne.CubeRaw:t=this._engine.createRawCubeTexture(this._bufferViewArray,this.width,this.format,this.type,this.generateMipMaps,this.invertY,this.samplingMode,this._compression),t._swapAndDie(this,!1),this.isReady=!0;break;case Ne.CubeRawRGBD:return;case Ne.CubePrefiltered:t=this._engine.createPrefilteredCubeTexture(this.url,null,this._lodGenerationScale,this._lodGenerationOffset,i=>{i&&i._swapAndDie(this,!1),this.isReady=!0},null,this.format,this._extension),t._sphericalPolynomial=this._sphericalPolynomial;return}}_swapAndDie(e,t=!0){var i;(i=this._hardwareTexture)===null||i===void 0||i.setUsage(e._source,this.generateMipMaps,this.isCube,this.width,this.height),e._hardwareTexture=this._hardwareTexture,t&&(e._isRGBD=this._isRGBD),this._lodTextureHigh&&(e._lodTextureHigh&&e._lodTextureHigh.dispose(),e._lodTextureHigh=this._lodTextureHigh),this._lodTextureMid&&(e._lodTextureMid&&e._lodTextureMid.dispose(),e._lodTextureMid=this._lodTextureMid),this._lodTextureLow&&(e._lodTextureLow&&e._lodTextureLow.dispose(),e._lodTextureLow=this._lodTextureLow),this._irradianceTexture&&(e._irradianceTexture&&e._irradianceTexture.dispose(),e._irradianceTexture=this._irradianceTexture);const s=this._engine.getLoadedTexturesCache();let r=s.indexOf(this);r!==-1&&s.splice(r,1),r=s.indexOf(e),r===-1&&s.push(e)}dispose(){this._references--,this.onLoadedObservable.clear(),this.onErrorObservable.clear(),this._references===0&&(this._engine._releaseTexture(this),this._hardwareTexture=null)}}Ot._Counter=0;function je(){return typeof window<"u"}function Js(){return typeof navigator<"u"}function Ci(){return typeof document<"u"}function gs(c){let e="",t=c.firstChild;for(;t;)t.nodeType===3&&(e+=t.textContent),t=t.nextSibling;return e}const ps={IsWindowObjectExist:je,IsNavigatorAvailable:Js,IsDocumentAvailable:Ci,GetDOMTextContent:gs};function $(c){return`${c} needs to be imported before as it contains a side-effect required by your code.`}class O{static _CheckLimit(e,t){let i=O._LogLimitOutputs[e];return i?i.current++:(i={limit:t,current:1},O._LogLimitOutputs[e]=i),i.current<=i.limit}static _GenerateLimitMessage(e,t=1){var i;const s=O._LogLimitOutputs[e];if(!s||!O.MessageLimitReached)return;const r=this._Levels[t];s.current===s.limit&&O[r.name](O.MessageLimitReached.replace(/%LIMIT%/g,""+s.limit).replace(/%TYPE%/g,(i=r.name)!==null&&i!==void 0?i:""))}static _AddLogEntry(e){O._LogCache=e+O._LogCache,O.OnNewCacheEntry&&O.OnNewCacheEntry(e)}static _FormatMessage(e){const t=s=>s<10?"0"+s:""+s,i=new Date;return"["+t(i.getHours())+":"+t(i.getMinutes())+":"+t(i.getSeconds())+"]: "+e}static _LogDisabled(e,t){}static _LogEnabled(e=1,t,i){if(i!==void 0&&!O._CheckLimit(t,i))return;const s=O._FormatMessage(t),r=this._Levels[e];r.logFunc&&r.logFunc("BJS - "+s);const n=`<div style='color:${r.color}'>${s}</div><br>`;O._AddLogEntry(n),O._GenerateLimitMessage(t,e)}static get LogCache(){return O._LogCache}static ClearLogCache(){O._LogCache="",O._LogLimitOutputs={},O.errorsCount=0}static set LogLevels(e){O.Log=O._LogDisabled,O.Warn=O._LogDisabled,O.Error=O._LogDisabled,[O.MessageLogLevel,O.WarningLogLevel,O.ErrorLogLevel].forEach(t=>{if((e&t)===t){const i=this._Levels[t];O[i.name]=O._LogEnabled.bind(O,t)}})}}O.NoneLogLevel=0,O.MessageLogLevel=1,O.WarningLogLevel=2,O.ErrorLogLevel=4,O.AllLogLevel=7,O.MessageLimitReached="Too many %TYPE%s (%LIMIT%), no more %TYPE%s will be reported for this message.",O._LogCache="",O._LogLimitOutputs={},O._Levels=[{},{color:"white",logFunc:console.log,name:"Log"},{color:"orange",logFunc:console.warn,name:"Warn"},{},{color:"red",logFunc:console.error,name:"Error"}],O.errorsCount=0,O.Log=O._LogEnabled.bind(O,O.MessageLogLevel),O.Warn=O._LogEnabled.bind(O,O.WarningLogLevel),O.Error=O._LogEnabled.bind(O,O.ErrorLogLevel);const qr="attribute",jr="varying";class Ii{constructor(){this.children=[]}isValid(e){return!0}process(e,t){var i,s,r,n,a,o;let h="";if(this.line){let l=this.line;const u=t.processor;if(u){u.lineProcessor&&(l=u.lineProcessor(l,t.isFragment,t.processingContext));const d=(s=(i=t.processor)===null||i===void 0?void 0:i.attributeKeywordName)!==null&&s!==void 0?s:qr,f=t.isFragment&&(!((r=t.processor)===null||r===void 0)&&r.varyingFragmentKeywordName)?(n=t.processor)===null||n===void 0?void 0:n.varyingFragmentKeywordName:!t.isFragment&&(!((a=t.processor)===null||a===void 0)&&a.varyingVertexKeywordName)?(o=t.processor)===null||o===void 0?void 0:o.varyingVertexKeywordName:jr;!t.isFragment&&u.attributeProcessor&&this.line.startsWith(d)?l=u.attributeProcessor(this.line,e,t.processingContext):u.varyingProcessor&&this.line.startsWith(f)?l=u.varyingProcessor(this.line,t.isFragment,e,t.processingContext):u.uniformProcessor&&u.uniformRegexp&&u.uniformRegexp.test(this.line)?t.lookForClosingBracketForUniformBuffer||(l=u.uniformProcessor(this.line,t.isFragment,e,t.processingContext)):u.uniformBufferProcessor&&u.uniformBufferRegexp&&u.uniformBufferRegexp.test(this.line)?t.lookForClosingBracketForUniformBuffer||(l=u.uniformBufferProcessor(this.line,t.isFragment,t.processingContext),t.lookForClosingBracketForUniformBuffer=!0):u.textureProcessor&&u.textureRegexp&&u.textureRegexp.test(this.line)?l=u.textureProcessor(this.line,t.isFragment,e,t.processingContext):(u.uniformProcessor||u.uniformBufferProcessor)&&this.line.startsWith("uniform")&&!t.lookForClosingBracketForUniformBuffer&&(/uniform\s+(?:(?:highp)?|(?:lowp)?)\s*(\S+)\s+(\S+)\s*;/.test(this.line)?u.uniformProcessor&&(l=u.uniformProcessor(this.line,t.isFragment,e,t.processingContext)):u.uniformBufferProcessor&&(l=u.uniformBufferProcessor(this.line,t.isFragment,t.processingContext),t.lookForClosingBracketForUniformBuffer=!0)),t.lookForClosingBracketForUniformBuffer&&this.line.indexOf("}")!==-1&&(t.lookForClosingBracketForUniformBuffer=!1,u.endOfUniformBufferProcessor&&(l=u.endOfUniformBufferProcessor(this.line,t.isFragment,t.processingContext)))}h+=l+`\r
`}return this.children.forEach(l=>{h+=l.process(e,t)}),this.additionalDefineKey&&(e[this.additionalDefineKey]=this.additionalDefineValue||"true"),h}}class $r{constructor(){this._lines=[]}get currentLine(){return this._lines[this.lineIndex]}get canRead(){return this.lineIndex<this._lines.length-1}set lines(e){this._lines.length=0;for(const t of e){if(t[0]==="#"){this._lines.push(t);continue}if(t.trim().startsWith("//")){this._lines.push(t);continue}const i=t.split(";");for(let s=0;s<i.length;s++){let r=i[s];r=r.trim(),r&&this._lines.push(r+(s!==i.length-1?";":""))}}}}class ms extends Ii{process(e,t){for(let i=0;i<this.children.length;i++){const s=this.children[i];if(s.isValid(e))return s.process(e,t)}return""}}class Qr extends Ii{isValid(e){return this.testExpression.isTrue(e)}}class et{isTrue(e){return!0}static postfixToInfix(e){const t=[];for(const i of e)if(et._OperatorPriority[i]===void 0)t.push(i);else{const s=t[t.length-1],r=t[t.length-2];t.length-=2,t.push(`(${r}${i}${s})`)}return t[t.length-1]}static infixToPostfix(e){const t=[];let i=-1;const s=()=>{h=h.trim(),h!==""&&(t.push(h),h="")},r=l=>{i<et._Stack.length-1&&(et._Stack[++i]=l)},n=()=>et._Stack[i],a=()=>i===-1?"!!INVALID EXPRESSION!!":et._Stack[i--];let o=0,h="";for(;o<e.length;){const l=e.charAt(o),u=o<e.length-1?e.substr(o,2):"";if(l==="(")h="",r(l);else if(l===")"){for(s();i!==-1&&n()!=="(";)t.push(a());a()}else if(et._OperatorPriority[u]>1){for(s();i!==-1&&et._OperatorPriority[n()]>=et._OperatorPriority[u];)t.push(a());r(u),o++}else h+=l;o++}for(s();i!==-1;)n()==="("?a():t.push(a());return t}}et._OperatorPriority={")":0,"(":1,"||":2,"&&":3},et._Stack=["","","","","","","","","","","","","","","","","","","",""];class Gi extends et{constructor(e,t=!1){super(),this.define=e,this.not=t}isTrue(e){let t=e[this.define]!==void 0;return this.not&&(t=!t),t}}class Jr extends et{isTrue(e){return this.leftOperand.isTrue(e)||this.rightOperand.isTrue(e)}}class en extends et{isTrue(e){return this.leftOperand.isTrue(e)&&this.rightOperand.isTrue(e)}}class tn extends et{constructor(e,t,i){super(),this.define=e,this.operand=t,this.testValue=i}isTrue(e){let t=e[this.define];t===void 0&&(t=this.define);let i=!1;const s=parseInt(t),r=parseInt(this.testValue);switch(this.operand){case">":i=s>r;break;case"<":i=s<r;break;case"<=":i=s<=r;break;case">=":i=s>=r;break;case"==":i=s===r;break}return i}}var Ze;(function(c){c[c.GLSL=0]="GLSL",c[c.WGSL=1]="WGSL"})(Ze||(Ze={}));const sn=/defined\s*?\((.+?)\)/g,Es=/defined\s*?\[(.+?)\]/g,er=/#include\s?<(.+)>(\((.*)\))*(\[(.*)\])*/g;class ni{static Initialize(e){e.processor&&e.processor.initializeShaders&&e.processor.initializeShaders(e.processingContext)}static Process(e,t,i,s){var r;!((r=t.processor)===null||r===void 0)&&r.preProcessShaderCode&&(e=t.processor.preProcessShaderCode(e,t.isFragment)),this._ProcessIncludes(e,t,n=>{t.processCodeAfterIncludes&&(n=t.processCodeAfterIncludes(t.isFragment?"fragment":"vertex",n));const a=this._ProcessShaderConversion(n,t,s);i(a,n)})}static PreProcess(e,t,i,s){var r;!((r=t.processor)===null||r===void 0)&&r.preProcessShaderCode&&(e=t.processor.preProcessShaderCode(e,t.isFragment)),this._ProcessIncludes(e,t,n=>{t.processCodeAfterIncludes&&(n=t.processCodeAfterIncludes(t.isFragment?"fragment":"vertex",n));const a=this._ApplyPreProcessing(n,t,s);i(a,n)})}static Finalize(e,t,i){return!i.processor||!i.processor.finalizeShaders?{vertexCode:e,fragmentCode:t}:i.processor.finalizeShaders(e,t,i.processingContext)}static _ProcessPrecision(e,t){var i;if(!((i=t.processor)===null||i===void 0)&&i.noPrecision)return e;const s=t.shouldUseHighPrecisionShader;return e.indexOf("precision highp float")===-1?s?e=`precision highp float;
`+e:e=`precision mediump float;
`+e:s||(e=e.replace("precision highp float","precision mediump float")),e}static _ExtractOperation(e){const i=/defined\((.+)\)/.exec(e);if(i&&i.length)return new Gi(i[1].trim(),e[0]==="!");const s=["==",">=","<=","<",">"];let r="",n=0;for(r of s)if(n=e.indexOf(r),n>-1)break;if(n===-1)return new Gi(e);const a=e.substring(0,n).trim(),o=e.substring(n+r.length).trim();return new tn(a,r,o)}static _BuildSubExpression(e){e=e.replace(sn,"defined[$1]");const t=et.infixToPostfix(e),i=[];for(const r of t)if(r!=="||"&&r!=="&&")i.push(r);else if(i.length>=2){let n=i[i.length-1],a=i[i.length-2];i.length-=2;const o=r=="&&"?new en:new Jr;typeof n=="string"&&(n=n.replace(Es,"defined($1)")),typeof a=="string"&&(a=a.replace(Es,"defined($1)")),o.leftOperand=typeof a=="string"?this._ExtractOperation(a):a,o.rightOperand=typeof n=="string"?this._ExtractOperation(n):n,i.push(o)}let s=i[i.length-1];return typeof s=="string"&&(s=s.replace(Es,"defined($1)")),typeof s=="string"?this._ExtractOperation(s):s}static _BuildExpression(e,t){const i=new Qr,s=e.substring(0,t);let r=e.substring(t);return r=r.substring(0,(r.indexOf("//")+1||r.length+1)-1).trim(),s==="#ifdef"?i.testExpression=new Gi(r):s==="#ifndef"?i.testExpression=new Gi(r,!0):i.testExpression=this._BuildSubExpression(r),i}static _MoveCursorWithinIf(e,t,i){let s=e.currentLine;for(;this._MoveCursor(e,i);){s=e.currentLine;const r=s.substring(0,5).toLowerCase();if(r==="#else"){const n=new Ii;t.children.push(n),this._MoveCursor(e,n);return}else if(r==="#elif"){const n=this._BuildExpression(s,5);t.children.push(n),i=n}}}static _MoveCursor(e,t){for(;e.canRead;){e.lineIndex++;const i=e.currentLine,r=/(#ifdef)|(#else)|(#elif)|(#endif)|(#ifndef)|(#if)/.exec(i);if(r&&r.length)switch(r[0]){case"#ifdef":{const a=new ms;t.children.push(a);const o=this._BuildExpression(i,6);a.children.push(o),this._MoveCursorWithinIf(e,a,o);break}case"#else":case"#elif":return!0;case"#endif":return!1;case"#ifndef":{const a=new ms;t.children.push(a);const o=this._BuildExpression(i,7);a.children.push(o),this._MoveCursorWithinIf(e,a,o);break}case"#if":{const a=new ms,o=this._BuildExpression(i,3);t.children.push(a),a.children.push(o),this._MoveCursorWithinIf(e,a,o);break}}else{const n=new Ii;if(n.line=i,t.children.push(n),i[0]==="#"&&i[1]==="d"){const a=i.replace(";","").split(" ");n.additionalDefineKey=a[1],a.length===3&&(n.additionalDefineValue=a[2])}}}return!1}static _EvaluatePreProcessors(e,t,i){const s=new Ii,r=new $r;return r.lineIndex=-1,r.lines=e.split(`
`),this._MoveCursor(r,s),s.process(t,i)}static _PreparePreProcessors(e,t){var i;const s=e.defines,r={};for(const n of s){const o=n.replace("#define","").replace(";","").trim().split(" ");r[o[0]]=o.length>1?o[1]:""}return((i=e.processor)===null||i===void 0?void 0:i.shaderLanguage)===Ze.GLSL&&(r.GL_ES="true"),r.__VERSION__=e.version,r[e.platformName]="true",t._getGlobalDefines(r),r}static _ProcessShaderConversion(e,t,i){let s=this._ProcessPrecision(e,t);if(!t.processor||t.processor.shaderLanguage===Ze.GLSL&&s.indexOf("#version 3")!==-1&&(s=s.replace("#version 300 es",""),!t.processor.parseGLES3))return s;const r=t.defines,n=this._PreparePreProcessors(t,i);return t.processor.preProcessor&&(s=t.processor.preProcessor(s,r,t.isFragment,t.processingContext)),s=this._EvaluatePreProcessors(s,n,t),t.processor.postProcessor&&(s=t.processor.postProcessor(s,r,t.isFragment,t.processingContext,i)),i._features.needShaderCodeInlining&&(s=i.inlineShaderCode(s)),s}static _ApplyPreProcessing(e,t,i){var s,r;let n=e;const a=t.defines,o=this._PreparePreProcessors(t,i);return!((s=t.processor)===null||s===void 0)&&s.preProcessor&&(n=t.processor.preProcessor(n,a,t.isFragment,t.processingContext)),n=this._EvaluatePreProcessors(n,o,t),!((r=t.processor)===null||r===void 0)&&r.postProcessor&&(n=t.processor.postProcessor(n,a,t.isFragment,t.processingContext,i)),i._features.needShaderCodeInlining&&(n=i.inlineShaderCode(n)),n}static _ProcessIncludes(e,t,i){let s=er.exec(e),r=new String(e),n=!1;for(;s!=null;){let a=s[1];if(a.indexOf("__decl__")!==-1&&(a=a.replace(/__decl__/,""),t.supportsUniformBuffers&&(a=a.replace(/Vertex/,"Ubo"),a=a.replace(/Fragment/,"Ubo")),a=a+"Declaration"),t.includesShadersStore[a]){let o=t.includesShadersStore[a];if(s[2]){const h=s[3].split(",");for(let l=0;l<h.length;l+=2){const u=new RegExp(h[l],"g"),d=h[l+1];o=o.replace(u,d)}}if(s[4]){const h=s[5];if(h.indexOf("..")!==-1){const l=h.split(".."),u=parseInt(l[0]);let d=parseInt(l[1]),f=o.slice(0);o="",isNaN(d)&&(d=t.indexParameters[l[1]]);for(let _=u;_<d;_++)t.supportsUniformBuffers||(f=f.replace(/light\{X\}.(\w*)/g,(E,m)=>m+"{X}")),o+=f.replace(/\{X\}/g,_.toString())+`
`}else t.supportsUniformBuffers||(o=o.replace(/light\{X\}.(\w*)/g,(l,u)=>u+"{X}")),o=o.replace(/\{X\}/g,h)}r=r.replace(s[0],o),n=n||o.indexOf("#include<")>=0||o.indexOf("#include <")>=0}else{const o=t.shadersRepository+"ShadersInclude/"+a+".fx";ni._FileToolsLoadFile(o,h=>{t.includesShadersStore[a]=h,this._ProcessIncludes(r,t,i)});return}s=er.exec(e)}n?this._ProcessIncludes(r.toString(),t,i):i(r)}static _FileToolsLoadFile(e,t,i,s,r,n){throw $("FileTools")}}class U{static GetShadersRepository(e=Ze.GLSL){return e===Ze.GLSL?U.ShadersRepository:U.ShadersRepositoryWGSL}static GetShadersStore(e=Ze.GLSL){return e===Ze.GLSL?U.ShadersStore:U.ShadersStoreWGSL}static GetIncludesShadersStore(e=Ze.GLSL){return e===Ze.GLSL?U.IncludesShadersStore:U.IncludesShadersStoreWGSL}}U.ShadersRepository="src/Shaders/",U.ShadersStore={},U.IncludesShadersStore={},U.ShadersRepositoryWGSL="src/ShadersWGSL/",U.ShadersStoreWGSL={},U.IncludesShadersStoreWGSL={};class Pe{constructor(e,t,i,s=null,r,n=null,a=null,o=null,h=null,l,u="",d=Ze.GLSL){var f,_,E;this.name=null,this.defines="",this.onCompiled=null,this.onError=null,this.onBind=null,this.uniqueId=0,this.onCompileObservable=new F,this.onErrorObservable=new F,this._onBindObservable=null,this._wasPreviouslyReady=!1,this._forceRebindOnNextCall=!1,this._wasPreviouslyUsingInstances=null,this._isDisposed=!1,this._bonesComputationForcedToCPU=!1,this._uniformBuffersNames={},this._multiTarget=!1,this._samplers={},this._isReady=!1,this._compilationError="",this._allFallbacksProcessed=!1,this._uniforms={},this._key="",this._fallbacks=null,this._vertexSourceCodeOverride="",this._fragmentSourceCodeOverride="",this._transformFeedbackVaryings=null,this._pipelineContext=null,this._vertexSourceCode="",this._fragmentSourceCode="",this._vertexSourceCodeBeforeMigration="",this._fragmentSourceCodeBeforeMigration="",this._rawVertexSourceCode="",this._rawFragmentSourceCode="",this.name=e,this._key=u;let m,v=null;if(t.attributes){const k=t;if(this._engine=i,this._attributesNames=k.attributes,this._uniformsNames=k.uniformsNames.concat(k.samplers),this._samplerList=k.samplers.slice(),this.defines=k.defines,this.onError=k.onError,this.onCompiled=k.onCompiled,this._fallbacks=k.fallbacks,this._indexParameters=k.indexParameters,this._transformFeedbackVaryings=k.transformFeedbackVaryings||null,this._multiTarget=!!k.multiTarget,this._shaderLanguage=(f=k.shaderLanguage)!==null&&f!==void 0?f:Ze.GLSL,k.uniformBuffersNames){this._uniformBuffersNamesList=k.uniformBuffersNames.slice();for(let w=0;w<k.uniformBuffersNames.length;w++)this._uniformBuffersNames[k.uniformBuffersNames[w]]=w}v=(_=k.processFinalCode)!==null&&_!==void 0?_:null,m=(E=k.processCodeAfterIncludes)!==null&&E!==void 0?E:void 0}else this._engine=r,this.defines=n??"",this._uniformsNames=i.concat(s),this._samplerList=s?s.slice():[],this._attributesNames=t,this._uniformBuffersNamesList=[],this._shaderLanguage=d,this.onError=h,this.onCompiled=o,this._indexParameters=l,this._fallbacks=a;this._attributeLocationByName={},this.uniqueId=Pe._UniqueIdSeed++;let S,y;const A=je()?this._engine.getHostDocument():null;e.vertexSource?S="source:"+e.vertexSource:e.vertexElement?(S=A?A.getElementById(e.vertexElement):null,S||(S=e.vertexElement)):S=e.vertex||e,e.fragmentSource?y="source:"+e.fragmentSource:e.fragmentElement?(y=A?A.getElementById(e.fragmentElement):null,y||(y=e.fragmentElement)):y=e.fragment||e,this._processingContext=this._engine._getShaderProcessingContext(this._shaderLanguage);let C={defines:this.defines.split(`
`),indexParameters:this._indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:this._engine._getShaderProcessor(this._shaderLanguage),supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:U.GetShadersRepository(this._shaderLanguage),includesShadersStore:U.GetIncludesShadersStore(this._shaderLanguage),version:(this._engine.version*100).toString(),platformName:this._engine.shaderPlatformName,processingContext:this._processingContext,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:m};const b=[void 0,void 0],M=()=>{if(b[0]&&b[1]){C.isFragment=!0;const[k,w]=b;ni.Process(w,C,(de,ce)=>{this._fragmentSourceCodeBeforeMigration=ce,v&&(de=v("fragment",de));const se=ni.Finalize(k,de,C);this._useFinalCode(se.vertexCode,se.fragmentCode,e)},this._engine)}};this._loadShader(S,"Vertex","",k=>{ni.Initialize(C),ni.Process(k,C,(w,de)=>{this._rawVertexSourceCode=k,this._vertexSourceCodeBeforeMigration=de,v&&(w=v("vertex",w)),b[0]=w,M()},this._engine)}),this._loadShader(y,"Fragment","Pixel",k=>{this._rawFragmentSourceCode=k,b[1]=k,M()}),C=null;const L=function(k){return function(){return this._pipelineContext&&this._pipelineContext[k].apply(this._pipelineContext,arguments),this}};["Int?","UInt?","IntArray?","UIntArray?","Array?","Color?","Vector?","Float?","Matrices","Matrix","Matrix3x3","Matrix2x2","Quaternion","DirectColor4"].forEach(k=>{const w=`set${k}`;w.endsWith("?")?["",2,3,4].forEach(de=>{this[w.slice(0,-1)+de]=this[w.slice(0,-1)+de]||L(w.slice(0,-1)+de).bind(this)}):this[w]=this[w]||L(w).bind(this)})}static get ShadersRepository(){return U.ShadersRepository}static set ShadersRepository(e){U.ShadersRepository=e}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new F),this._onBindObservable}_useFinalCode(e,t,i){if(i){const s=i.vertexElement||i.vertex||i.spectorName||i,r=i.fragmentElement||i.fragment||i.spectorName||i;this._vertexSourceCode=(this._shaderLanguage===Ze.WGSL?"//":"")+"#define SHADER_NAME vertex:"+s+`
`+e,this._fragmentSourceCode=(this._shaderLanguage===Ze.WGSL?"//":"")+"#define SHADER_NAME fragment:"+r+`
`+t}else this._vertexSourceCode=e,this._fragmentSourceCode=t;this._prepareEffect()}get key(){return this._key}isReady(){try{return this._isReadyInternal()}catch{return!1}}_isReadyInternal(){return this._isReady?!0:this._pipelineContext?this._pipelineContext.isReady:!1}getEngine(){return this._engine}getPipelineContext(){return this._pipelineContext}getAttributesNames(){return this._attributesNames}getAttributeLocation(e){return this._attributes[e]}getAttributeLocationByName(e){return this._attributeLocationByName[e]}getAttributesCount(){return this._attributes.length}getUniformIndex(e){return this._uniformsNames.indexOf(e)}getUniform(e){return this._uniforms[e]}getSamplers(){return this._samplerList}getUniformNames(){return this._uniformsNames}getUniformBuffersNames(){return this._uniformBuffersNamesList}getIndexParameters(){return this._indexParameters}getCompilationError(){return this._compilationError}allFallbacksProcessed(){return this._allFallbacksProcessed}executeWhenCompiled(e){if(this.isReady()){e(this);return}this.onCompileObservable.add(t=>{e(t)}),(!this._pipelineContext||this._pipelineContext.isAsync)&&setTimeout(()=>{this._checkIsReady(null)},16)}_checkIsReady(e){try{if(this._isReadyInternal())return}catch(t){this._processCompilationErrors(t,e);return}this._isDisposed||setTimeout(()=>{this._checkIsReady(e)},16)}_loadShader(e,t,i,s){if(typeof HTMLElement<"u"&&e instanceof HTMLElement){const a=gs(e);s(a);return}if(e.substr(0,7)==="source:"){s(e.substr(7));return}if(e.substr(0,7)==="base64:"){const a=window.atob(e.substr(7));s(a);return}const r=U.GetShadersStore(this._shaderLanguage);if(r[e+t+"Shader"]){s(r[e+t+"Shader"]);return}if(i&&r[e+i+"Shader"]){s(r[e+i+"Shader"]);return}let n;e[0]==="."||e[0]==="/"||e.indexOf("http")>-1?n=e:n=U.GetShadersRepository(this._shaderLanguage)+e,this._engine._loadFile(n+"."+t.toLowerCase()+".fx",s)}get vertexSourceCode(){var e,t;return this._vertexSourceCodeOverride&&this._fragmentSourceCodeOverride?this._vertexSourceCodeOverride:(t=(e=this._pipelineContext)===null||e===void 0?void 0:e._getVertexShaderCode())!==null&&t!==void 0?t:this._vertexSourceCode}get fragmentSourceCode(){var e,t;return this._vertexSourceCodeOverride&&this._fragmentSourceCodeOverride?this._fragmentSourceCodeOverride:(t=(e=this._pipelineContext)===null||e===void 0?void 0:e._getFragmentShaderCode())!==null&&t!==void 0?t:this._fragmentSourceCode}get vertexSourceCodeBeforeMigration(){return this._vertexSourceCodeBeforeMigration}get fragmentSourceCodeBeforeMigration(){return this._fragmentSourceCodeBeforeMigration}get rawVertexSourceCode(){return this._rawVertexSourceCode}get rawFragmentSourceCode(){return this._rawFragmentSourceCode}_rebuildProgram(e,t,i,s){this._isReady=!1,this._vertexSourceCodeOverride=e,this._fragmentSourceCodeOverride=t,this.onError=(r,n)=>{s&&s(n)},this.onCompiled=()=>{const r=this.getEngine().scenes;if(r)for(let n=0;n<r.length;n++)r[n].markAllMaterialsAsDirty(63);this._pipelineContext._handlesSpectorRebuildCallback(i)},this._fallbacks=null,this._prepareEffect()}_prepareEffect(){const e=this._attributesNames,t=this.defines,i=this._pipelineContext;this._isReady=!1;try{const s=this._engine;this._pipelineContext=s.createPipelineContext(this._processingContext),this._pipelineContext._name=this._key;const r=this._rebuildProgram.bind(this);this._vertexSourceCodeOverride&&this._fragmentSourceCodeOverride?s._preparePipelineContext(this._pipelineContext,this._vertexSourceCodeOverride,this._fragmentSourceCodeOverride,!0,this._rawVertexSourceCode,this._rawFragmentSourceCode,r,null,this._transformFeedbackVaryings,this._key):s._preparePipelineContext(this._pipelineContext,this._vertexSourceCode,this._fragmentSourceCode,!1,this._rawVertexSourceCode,this._rawFragmentSourceCode,r,t,this._transformFeedbackVaryings,this._key),s._executeWhenRenderingStateIsCompiled(this._pipelineContext,()=>{if(this._attributes=[],this._pipelineContext._fillEffectInformation(this,this._uniformBuffersNames,this._uniformsNames,this._uniforms,this._samplerList,this._samplers,e,this._attributes),e)for(let n=0;n<e.length;n++){const a=e[n];this._attributeLocationByName[a]=this._attributes[n]}s.bindSamplers(this),this._compilationError="",this._isReady=!0,this.onCompiled&&this.onCompiled(this),this.onCompileObservable.notifyObservers(this),this.onCompileObservable.clear(),this._fallbacks&&this._fallbacks.unBindMesh(),i&&this.getEngine()._deletePipelineContext(i)}),this._pipelineContext.isAsync&&this._checkIsReady(i)}catch(s){this._processCompilationErrors(s,i)}}_getShaderCodeAndErrorLine(e,t,i){const s=i?/FRAGMENT SHADER ERROR: 0:(\d+?):/:/VERTEX SHADER ERROR: 0:(\d+?):/;let r=null;if(t&&e){const n=t.match(s);if(n&&n.length===2){const a=parseInt(n[1]),o=e.split(`
`,-1);o.length>=a&&(r=`Offending line [${a}] in ${i?"fragment":"vertex"} code: ${o[a-1]}`)}}return[e,r]}_processCompilationErrors(e,t=null){var i,s,r;this._compilationError=e.message;const n=this._attributesNames,a=this._fallbacks;if(O.Error("Unable to compile effect:"),O.Error("Uniforms: "+this._uniformsNames.map(function(h){return" "+h})),O.Error("Attributes: "+n.map(function(h){return" "+h})),O.Error(`Defines:\r
`+this.defines),Pe.LogShaderCodeOnCompilationError){let h=null,l=null,u=null;!((i=this._pipelineContext)===null||i===void 0)&&i._getVertexShaderCode()&&([u,h]=this._getShaderCodeAndErrorLine(this._pipelineContext._getVertexShaderCode(),this._compilationError,!1),u&&(O.Error("Vertex code:"),O.Error(u))),!((s=this._pipelineContext)===null||s===void 0)&&s._getFragmentShaderCode()&&([u,l]=this._getShaderCodeAndErrorLine((r=this._pipelineContext)===null||r===void 0?void 0:r._getFragmentShaderCode(),this._compilationError,!0),u&&(O.Error("Fragment code:"),O.Error(u))),h&&O.Error(h),l&&O.Error(l)}O.Error("Error: "+this._compilationError);const o=()=>{this.onError&&this.onError(this,this._compilationError),this.onErrorObservable.notifyObservers(this)};t&&(this._pipelineContext=t,this._isReady=!0,o()),a?(this._pipelineContext=null,a.hasMoreFallbacks?(this._allFallbacksProcessed=!1,O.Error("Trying next fallback."),this.defines=a.reduce(this.defines,this),this._prepareEffect()):(this._allFallbacksProcessed=!0,o(),this.onErrorObservable.clear(),this._fallbacks&&this._fallbacks.unBindMesh())):(this._allFallbacksProcessed=!0,t||o())}get isSupported(){return this._compilationError===""}_bindTexture(e,t){this._engine._bindTexture(this._samplers[e],t,e)}setTexture(e,t){this._engine.setTexture(this._samplers[e],this._uniforms[e],t,e)}setDepthStencilTexture(e,t){this._engine.setDepthStencilTexture(this._samplers[e],this._uniforms[e],t,e)}setTextureArray(e,t){const i=e+"Ex";if(this._samplerList.indexOf(i+"0")===-1){const s=this._samplerList.indexOf(e);for(let n=1;n<t.length;n++){const a=i+(n-1).toString();this._samplerList.splice(s+n,0,a)}let r=0;for(const n of this._samplerList)this._samplers[n]=r,r+=1}this._engine.setTextureArray(this._samplers[e],this._uniforms[e],t,e)}setTextureFromPostProcess(e,t){this._engine.setTextureFromPostProcess(this._samplers[e],t,e)}setTextureFromPostProcessOutput(e,t){this._engine.setTextureFromPostProcessOutput(this._samplers[e],t,e)}bindUniformBuffer(e,t){const i=this._uniformBuffersNames[t];i===void 0||Pe._BaseCache[i]===e&&this._engine._features.useUBOBindingCache||(Pe._BaseCache[i]=e,this._engine.bindUniformBufferBase(e,i,t))}bindUniformBlock(e,t){this._engine.bindUniformBlock(this._pipelineContext,e,t)}setFloatArray(e,t){return this._pipelineContext.setArray(e,t),this}setFloatArray2(e,t){return this._pipelineContext.setArray2(e,t),this}setFloatArray3(e,t){return this._pipelineContext.setArray3(e,t),this}setFloatArray4(e,t){return this._pipelineContext.setArray4(e,t),this}setBool(e,t){return this._pipelineContext.setInt(e,t?1:0),this}dispose(){var e;(e=this._pipelineContext)===null||e===void 0||e.dispose(),this._engine._releaseEffect(this),this._isDisposed=!0}static RegisterShader(e,t,i,s=Ze.GLSL){t&&(U.GetShadersStore(s)[`${e}PixelShader`]=t),i&&(U.GetShadersStore(s)[`${e}VertexShader`]=i)}static ResetCache(){Pe._BaseCache={}}}Pe.LogShaderCodeOnCompilationError=!0,Pe._UniqueIdSeed=0,Pe._BaseCache={},Pe.ShadersStore=U.ShadersStore,Pe.IncludesShadersStore=U.IncludesShadersStore;class rn{constructor(e=!0){this._isDepthTestDirty=!1,this._isDepthMaskDirty=!1,this._isDepthFuncDirty=!1,this._isCullFaceDirty=!1,this._isCullDirty=!1,this._isZOffsetDirty=!1,this._isFrontFaceDirty=!1,e&&this.reset()}get isDirty(){return this._isDepthFuncDirty||this._isDepthTestDirty||this._isDepthMaskDirty||this._isCullFaceDirty||this._isCullDirty||this._isZOffsetDirty||this._isFrontFaceDirty}get zOffset(){return this._zOffset}set zOffset(e){this._zOffset!==e&&(this._zOffset=e,this._isZOffsetDirty=!0)}get zOffsetUnits(){return this._zOffsetUnits}set zOffsetUnits(e){this._zOffsetUnits!==e&&(this._zOffsetUnits=e,this._isZOffsetDirty=!0)}get cullFace(){return this._cullFace}set cullFace(e){this._cullFace!==e&&(this._cullFace=e,this._isCullFaceDirty=!0)}get cull(){return this._cull}set cull(e){this._cull!==e&&(this._cull=e,this._isCullDirty=!0)}get depthFunc(){return this._depthFunc}set depthFunc(e){this._depthFunc!==e&&(this._depthFunc=e,this._isDepthFuncDirty=!0)}get depthMask(){return this._depthMask}set depthMask(e){this._depthMask!==e&&(this._depthMask=e,this._isDepthMaskDirty=!0)}get depthTest(){return this._depthTest}set depthTest(e){this._depthTest!==e&&(this._depthTest=e,this._isDepthTestDirty=!0)}get frontFace(){return this._frontFace}set frontFace(e){this._frontFace!==e&&(this._frontFace=e,this._isFrontFaceDirty=!0)}reset(){this._depthMask=!0,this._depthTest=!0,this._depthFunc=null,this._cullFace=null,this._cull=null,this._zOffset=0,this._zOffsetUnits=0,this._frontFace=null,this._isDepthTestDirty=!0,this._isDepthMaskDirty=!0,this._isDepthFuncDirty=!1,this._isCullFaceDirty=!1,this._isCullDirty=!1,this._isZOffsetDirty=!0,this._isFrontFaceDirty=!1}apply(e){this.isDirty&&(this._isCullDirty&&(this.cull?e.enable(e.CULL_FACE):e.disable(e.CULL_FACE),this._isCullDirty=!1),this._isCullFaceDirty&&(e.cullFace(this.cullFace),this._isCullFaceDirty=!1),this._isDepthMaskDirty&&(e.depthMask(this.depthMask),this._isDepthMaskDirty=!1),this._isDepthTestDirty&&(this.depthTest?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),this._isDepthTestDirty=!1),this._isDepthFuncDirty&&(e.depthFunc(this.depthFunc),this._isDepthFuncDirty=!1),this._isZOffsetDirty&&(this.zOffset||this.zOffsetUnits?(e.enable(e.POLYGON_OFFSET_FILL),e.polygonOffset(this.zOffset,this.zOffsetUnits)):e.disable(e.POLYGON_OFFSET_FILL),this._isZOffsetDirty=!1),this._isFrontFaceDirty&&(e.frontFace(this.frontFace),this._isFrontFaceDirty=!1))}}class Lt{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=Lt.ALWAYS,this.funcRef=1,this.funcMask=255,this.opStencilFail=Lt.KEEP,this.opDepthFail=Lt.KEEP,this.opStencilDepthPass=Lt.REPLACE}get stencilFunc(){return this.func}set stencilFunc(e){this.func=e}get stencilFuncRef(){return this.funcRef}set stencilFuncRef(e){this.funcRef=e}get stencilFuncMask(){return this.funcMask}set stencilFuncMask(e){this.funcMask=e}get stencilOpStencilFail(){return this.opStencilFail}set stencilOpStencilFail(e){this.opStencilFail=e}get stencilOpDepthFail(){return this.opDepthFail}set stencilOpDepthFail(e){this.opDepthFail=e}get stencilOpStencilDepthPass(){return this.opStencilDepthPass}set stencilOpStencilDepthPass(e){this.opStencilDepthPass=e}get stencilMask(){return this.mask}set stencilMask(e){this.mask=e}get stencilTest(){return this.enabled}set stencilTest(e){this.enabled=e}}Lt.ALWAYS=519,Lt.KEEP=7680,Lt.REPLACE=7681;class nn{constructor(){this._blendFunctionParameters=new Array(4),this._blendEquationParameters=new Array(2),this._blendConstants=new Array(4),this._isBlendConstantsDirty=!1,this._alphaBlend=!1,this._isAlphaBlendDirty=!1,this._isBlendFunctionParametersDirty=!1,this._isBlendEquationParametersDirty=!1,this.reset()}get isDirty(){return this._isAlphaBlendDirty||this._isBlendFunctionParametersDirty||this._isBlendEquationParametersDirty}get alphaBlend(){return this._alphaBlend}set alphaBlend(e){this._alphaBlend!==e&&(this._alphaBlend=e,this._isAlphaBlendDirty=!0)}setAlphaBlendConstants(e,t,i,s){this._blendConstants[0]===e&&this._blendConstants[1]===t&&this._blendConstants[2]===i&&this._blendConstants[3]===s||(this._blendConstants[0]=e,this._blendConstants[1]=t,this._blendConstants[2]=i,this._blendConstants[3]=s,this._isBlendConstantsDirty=!0)}setAlphaBlendFunctionParameters(e,t,i,s){this._blendFunctionParameters[0]===e&&this._blendFunctionParameters[1]===t&&this._blendFunctionParameters[2]===i&&this._blendFunctionParameters[3]===s||(this._blendFunctionParameters[0]=e,this._blendFunctionParameters[1]=t,this._blendFunctionParameters[2]=i,this._blendFunctionParameters[3]=s,this._isBlendFunctionParametersDirty=!0)}setAlphaEquationParameters(e,t){this._blendEquationParameters[0]===e&&this._blendEquationParameters[1]===t||(this._blendEquationParameters[0]=e,this._blendEquationParameters[1]=t,this._isBlendEquationParametersDirty=!0)}reset(){this._alphaBlend=!1,this._blendFunctionParameters[0]=null,this._blendFunctionParameters[1]=null,this._blendFunctionParameters[2]=null,this._blendFunctionParameters[3]=null,this._blendEquationParameters[0]=null,this._blendEquationParameters[1]=null,this._blendConstants[0]=null,this._blendConstants[1]=null,this._blendConstants[2]=null,this._blendConstants[3]=null,this._isAlphaBlendDirty=!0,this._isBlendFunctionParametersDirty=!1,this._isBlendEquationParametersDirty=!1,this._isBlendConstantsDirty=!1}apply(e){this.isDirty&&(this._isAlphaBlendDirty&&(this._alphaBlend?e.enable(e.BLEND):e.disable(e.BLEND),this._isAlphaBlendDirty=!1),this._isBlendFunctionParametersDirty&&(e.blendFuncSeparate(this._blendFunctionParameters[0],this._blendFunctionParameters[1],this._blendFunctionParameters[2],this._blendFunctionParameters[3]),this._isBlendFunctionParametersDirty=!1),this._isBlendEquationParametersDirty&&(e.blendEquationSeparate(this._blendEquationParameters[0],this._blendEquationParameters[1]),this._isBlendEquationParametersDirty=!1),this._isBlendConstantsDirty&&(e.blendColor(this._blendConstants[0],this._blendConstants[1],this._blendConstants[2],this._blendConstants[3]),this._isBlendConstantsDirty=!1))}}class an{constructor(){this.shaderLanguage=Ze.GLSL}postProcessor(e,t,i,s,r){if(!r.getCaps().drawBuffersExtension){const n=/#extension.+GL_EXT_draw_buffers.+(enable|require)/g;e=e.replace(n,"")}return e}}class on{constructor(){this.shaderLanguage=Ze.GLSL}attributeProcessor(e){return e.replace("attribute","in")}varyingProcessor(e,t){return e.replace("varying",t?"in":"out")}postProcessor(e,t,i){const s=e.search(/#extension.+GL_EXT_draw_buffers.+require/)!==-1,r=/#extension.+(GL_OVR_multiview2|GL_OES_standard_derivatives|GL_EXT_shader_texture_lod|GL_EXT_frag_depth|GL_EXT_draw_buffers).+(enable|require)/g;if(e=e.replace(r,""),e=e.replace(/texture2D\s*\(/g,"texture("),i)e=e.replace(/texture2DLodEXT\s*\(/g,"textureLod("),e=e.replace(/textureCubeLodEXT\s*\(/g,"textureLod("),e=e.replace(/textureCube\s*\(/g,"texture("),e=e.replace(/gl_FragDepthEXT/g,"gl_FragDepth"),e=e.replace(/gl_FragColor/g,"glFragColor"),e=e.replace(/gl_FragData/g,"glFragData"),e=e.replace(/void\s+?main\s*\(/g,(s?"":`layout(location = 0) out vec4 glFragColor;
`)+"void main(");else if(t.indexOf("#define MULTIVIEW")!==-1)return`#extension GL_OVR_multiview2 : require
layout (num_views = 2) in;
`+e;return e}}class Pi{constructor(){this.references=0,this.capacity=0,this.is32Bits=!1,this.uniqueId=Pi._Counter++}get underlyingResource(){return null}}Pi._Counter=0;class Di extends Pi{constructor(e){super(),this._buffer=e}get underlyingResource(){return this._buffer}}const hn=["Int","Int2","Int3","Int4","UInt","UInt2","UInt3","UInt4","Vector2","Vector3","Vector4","Float2","Float","Float3","Float4","Quaternion","Color3","Color4","DirectColor4"];class ln{constructor(){this._valueCache={},this.vertexCompilationError=null,this.fragmentCompilationError=null,this.programLinkError=null,this.programValidationError=null;const e=[],t=function(){e.length=0,Array.prototype.push.apply(e,arguments),e[0]=this._uniforms[e[0]]},i=s=>{const r=hn.includes(s.substring(3))&&"FloatN";if(r){const n=this[`_cache${r}`];return function(){const a=this.engine[s];t.apply(this,arguments),n.apply(this,arguments)&&(a.apply(this.engine,e)||(this._valueCache[arguments[0]]=null))}}else return function(){const n=this.engine[s];t.apply(this,arguments),arguments[1]!==void 0&&(this._valueCache[arguments[0]]=null,n.apply(this.engine,e))}};["Int?","UInt?","IntArray?","UIntArray?","Array?","Float?","Matrices","Matrix3x3","Matrix2x2"].forEach(s=>{const r=`set${s}`;this[r]||(r.endsWith("?")?["",2,3,4].forEach(n=>{this[r.slice(0,-1)+n]=this[r.slice(0,-1)+n]||i(r.slice(0,-1)+n).bind(this)}):this[r]=this[r]||i(r).bind(this))})}get isAsync(){return this.isParallelCompiled}get isReady(){return this.program?this.isParallelCompiled?this.engine._isRenderingStateCompiled(this):!0:!1}_handlesSpectorRebuildCallback(e){e&&this.program&&e(this.program)}_fillEffectInformation(e,t,i,s,r,n,a,o){const h=this.engine;if(h.supportsUniformBuffers)for(const d in t)e.bindUniformBlock(d,t[d]);this.engine.getUniforms(this,i).forEach((d,f)=>{s[i[f]]=d}),this._uniforms=s;let u;for(u=0;u<r.length;u++)e.getUniform(r[u])==null&&(r.splice(u,1),u--);r.forEach((d,f)=>{n[d]=f});for(const d of h.getAttributes(this,a))o.push(d)}dispose(){this._uniforms={}}_cacheMatrix(e,t){const i=this._valueCache[e],s=t.updateFlag;return i!==void 0&&i===s?!1:(this._valueCache[e]=s,!0)}_cacheFloatN(e,t,i,s,r){let n=this._valueCache[arguments[0]];if(!n||n.length!==arguments.length-1)return n=Array.prototype.slice.call(arguments,1),this._valueCache[arguments[0]]=n,!0;let a=!1;for(let o=0;o<n.length;++o)n[o]!==arguments[o+1]&&(n[o]=arguments[o+1],a=!0);return a}_cacheFloat2(e,t,i){return this._cacheFloatN(e,t,i)}_cacheFloat3(e,t,i,s){return this._cacheFloatN(e,t,i,s)}_cacheFloat4(e,t,i,s,r){return this._cacheFloatN(e,t,i,s,r)}setMatrix(e,t){this._cacheMatrix(e,t)&&(this.engine.setMatrices(this._uniforms[e],t.toArray())||(this._valueCache[e]=null))}setVector2(e,t){this.setFloat2(e,t.x,t.y)}setVector3(e,t){this.setFloat3(e,t.x,t.y,t.z)}setVector4(e,t){this.setFloat4(e,t.x,t.y,t.z,t.w)}setQuaternion(e,t){this.setFloat4(e,t.x,t.y,t.z,t.w)}setColor3(e,t){this.setFloat3(e,t.r,t.g,t.b)}setColor4(e,t,i){this.setFloat4(e,t.r,t.g,t.b,i)}setDirectColor4(e,t){this.setFloat4(e,t.r,t.g,t.b,t.a)}_getVertexShaderCode(){return this.vertexShader?this.engine._getShaderSource(this.vertexShader):null}_getFragmentShaderCode(){return this.fragmentShader?this.engine._getShaderSource(this.fragmentShader):null}}class tr{constructor(e=null,t){if(this._MSAARenderBuffer=null,this._context=t,!e&&(e=t.createTexture(),!e))throw new Error("Unable to create webGL texture");this.set(e)}get underlyingResource(){return this._webGLTexture}setUsage(){}set(e){this._webGLTexture=e}reset(){this._webGLTexture=null,this._MSAARenderBuffer=null}release(){this._MSAARenderBuffer&&(this._context.deleteRenderbuffer(this._MSAARenderBuffer),this._MSAARenderBuffer=null),this._webGLTexture&&this._context.deleteTexture(this._webGLTexture),this.reset()}}class mi{constructor(e,t=!0){this.effect=null,this.defines=null,this.drawContext=e.createDrawContext(),t&&(this.materialContext=e.createMaterialContext())}static IsWrapper(e){return e.getPipelineContext===void 0}static GetEffect(e){return e.getPipelineContext===void 0?e.effect:e}setEffect(e,t,i=!0){var s;this.effect=e,t!==void 0&&(this.defines=t),i&&((s=this.drawContext)===null||s===void 0||s.reset())}dispose(){var e;(e=this.drawContext)===null||e===void 0||e.dispose()}}class cn{constructor(e=!0){this._isStencilTestDirty=!1,this._isStencilMaskDirty=!1,this._isStencilFuncDirty=!1,this._isStencilOpDirty=!1,this.useStencilGlobalOnly=!1,e&&this.reset()}get isDirty(){return this._isStencilTestDirty||this._isStencilMaskDirty||this._isStencilFuncDirty||this._isStencilOpDirty}get func(){return this._func}set func(e){this._func!==e&&(this._func=e,this._isStencilFuncDirty=!0)}get funcRef(){return this._funcRef}set funcRef(e){this._funcRef!==e&&(this._funcRef=e,this._isStencilFuncDirty=!0)}get funcMask(){return this._funcMask}set funcMask(e){this._funcMask!==e&&(this._funcMask=e,this._isStencilFuncDirty=!0)}get opStencilFail(){return this._opStencilFail}set opStencilFail(e){this._opStencilFail!==e&&(this._opStencilFail=e,this._isStencilOpDirty=!0)}get opDepthFail(){return this._opDepthFail}set opDepthFail(e){this._opDepthFail!==e&&(this._opDepthFail=e,this._isStencilOpDirty=!0)}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(e){this._opStencilDepthPass!==e&&(this._opStencilDepthPass=e,this._isStencilOpDirty=!0)}get mask(){return this._mask}set mask(e){this._mask!==e&&(this._mask=e,this._isStencilMaskDirty=!0)}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this._isStencilTestDirty=!0)}reset(){var e;this.stencilMaterial=void 0,(e=this.stencilGlobal)===null||e===void 0||e.reset(),this._isStencilTestDirty=!0,this._isStencilMaskDirty=!0,this._isStencilFuncDirty=!0,this._isStencilOpDirty=!0}apply(e){var t;if(!e)return;const i=!this.useStencilGlobalOnly&&!!(!((t=this.stencilMaterial)===null||t===void 0)&&t.enabled);this.enabled=i?this.stencilMaterial.enabled:this.stencilGlobal.enabled,this.func=i?this.stencilMaterial.func:this.stencilGlobal.func,this.funcRef=i?this.stencilMaterial.funcRef:this.stencilGlobal.funcRef,this.funcMask=i?this.stencilMaterial.funcMask:this.stencilGlobal.funcMask,this.opStencilFail=i?this.stencilMaterial.opStencilFail:this.stencilGlobal.opStencilFail,this.opDepthFail=i?this.stencilMaterial.opDepthFail:this.stencilGlobal.opDepthFail,this.opStencilDepthPass=i?this.stencilMaterial.opStencilDepthPass:this.stencilGlobal.opStencilDepthPass,this.mask=i?this.stencilMaterial.mask:this.stencilGlobal.mask,this.isDirty&&(this._isStencilTestDirty&&(this.enabled?e.enable(e.STENCIL_TEST):e.disable(e.STENCIL_TEST),this._isStencilTestDirty=!1),this._isStencilMaskDirty&&(e.stencilMask(this.mask),this._isStencilMaskDirty=!1),this._isStencilFuncDirty&&(e.stencilFunc(this.func,this.funcRef,this.funcMask),this._isStencilFuncDirty=!1),this._isStencilOpDirty&&(e.stencilOp(this.opStencilFail,this.opDepthFail,this.opStencilDepthPass),this._isStencilOpDirty=!1))}}class ai{static get Now(){return ps.IsWindowObjectExist()&&window.performance&&window.performance.now?window.performance.now():Date.now()}}class un{}class oe{constructor(e,t,i,s){this._name="WebGL",this.forcePOTTextures=!1,this.isFullscreen=!1,this.cullBackFaces=null,this.renderEvenInBackground=!0,this.preventCacheWipeBetweenFrames=!1,this.validateShaderPrograms=!1,this._useReverseDepthBuffer=!1,this.isNDCHalfZRange=!1,this.hasOriginBottomLeft=!0,this.disableUniformBuffers=!1,this.onDisposeObservable=new F,this._frameId=0,this._uniformBuffers=new Array,this._storageBuffers=new Array,this._webGLVersion=1,this._windowIsBackground=!1,this._highPrecisionShadersAllowed=!0,this._badOS=!1,this._badDesktopOS=!1,this._renderingQueueLaunched=!1,this._activeRenderLoops=new Array,this.onContextLostObservable=new F,this.onContextRestoredObservable=new F,this._contextWasLost=!1,this._doNotHandleContextLost=!1,this.disableVertexArrayObjects=!1,this._colorWrite=!0,this._colorWriteChanged=!0,this._depthCullingState=new rn,this._stencilStateComposer=new cn,this._stencilState=new Lt,this._alphaState=new nn,this._alphaMode=1,this._alphaEquation=0,this._internalTexturesCache=new Array,this._renderTargetWrapperCache=new Array,this._activeChannel=0,this._currentTextureChannel=-1,this._boundTexturesCache={},this._compiledEffects={},this._vertexAttribArraysEnabled=[],this._uintIndicesCurrentlySet=!1,this._currentBoundBuffer=new Array,this._currentFramebuffer=null,this._dummyFramebuffer=null,this._currentBufferPointers=new Array,this._currentInstanceLocations=new Array,this._currentInstanceBuffers=new Array,this._vaoRecordInProgress=!1,this._mustWipeVertexAttributes=!1,this._nextFreeTextureSlots=new Array,this._maxSimultaneousTextures=0,this._maxMSAASamplesOverride=null,this._activeRequests=new Array,this.adaptToDeviceRatio=!1,this._lastDevicePixelRatio=1,this._transformTextureUrl=null,this.hostInformation={isMobile:!1},this.premultipliedAlpha=!0,this.onBeforeTextureInitObservable=new F,this._isWebGPU=!1,this._snapshotRenderingMode=0,this._useExactSrgbConversions=!1,this._viewportCached={x:0,y:0,z:0,w:0},this._unpackFlipYCached=null,this.enableUnpackFlipYCached=!0,this._boundUniforms={},this.startTime=ai.Now;let r=null;if(i=i||{},this._creationOptions=i,this.adaptToDeviceRatio=s??!1,this._stencilStateComposer.stencilGlobal=this._stencilState,Ue.SetMatrixPrecision(!!i.useHighPrecisionMatrix),!e)return;if(s=s||i.adaptToDeviceRatio||!1,e.getContext){if(r=e,this._renderingCanvas=r,t!==void 0&&(i.antialias=t),i.deterministicLockstep===void 0&&(i.deterministicLockstep=!1),i.lockstepMaxSteps===void 0&&(i.lockstepMaxSteps=4),i.timeStep===void 0&&(i.timeStep=1/60),i.preserveDrawingBuffer===void 0&&(i.preserveDrawingBuffer=!1),i.audioEngine===void 0&&(i.audioEngine=!0),i.audioEngineOptions!==void 0&&i.audioEngineOptions.audioContext!==void 0&&(this._audioContext=i.audioEngineOptions.audioContext),i.audioEngineOptions!==void 0&&i.audioEngineOptions.audioDestination!==void 0&&(this._audioDestination=i.audioEngineOptions.audioDestination),i.stencil===void 0&&(i.stencil=!0),i.premultipliedAlpha===!1&&(this.premultipliedAlpha=!1),i.xrCompatible===void 0&&(i.xrCompatible=!0),i.useExactSrgbConversions!==void 0&&(this._useExactSrgbConversions=i.useExactSrgbConversions),this._doNotHandleContextLost=!!i.doNotHandleContextLost,navigator&&navigator.userAgent){this._checkForMobile=()=>{const l=navigator.userAgent;this.hostInformation.isMobile=l.indexOf("Mobile")!==-1||l.indexOf("Mac")!==-1&&Ci()&&"ontouchend"in document},this._checkForMobile(),je()&&window.addEventListener("resize",this._checkForMobile);const h=navigator.userAgent;for(const l of oe.ExceptionList){const u=l.key,d=l.targets;if(new RegExp(u).test(h)){if(l.capture&&l.captureConstraint){const _=l.capture,E=l.captureConstraint,v=new RegExp(_).exec(h);if(v&&v.length>0&&parseInt(v[v.length-1])>=E)continue}for(const _ of d)switch(_){case"uniformBuffer":this.disableUniformBuffers=!0;break;case"vao":this.disableVertexArrayObjects=!0;break;case"antialias":i.antialias=!1;break;case"maxMSAASamples":this._maxMSAASamplesOverride=1;break}}}}if(this._doNotHandleContextLost||(this._onContextLost=h=>{h.preventDefault(),this._contextWasLost=!0,O.Warn("WebGL context lost."),this.onContextLostObservable.notifyObservers(this)},this._onContextRestored=()=>{this._restoreEngineAfterContextLost(this._initGLContext.bind(this))},r.addEventListener("webglcontextlost",this._onContextLost,!1),r.addEventListener("webglcontextrestored",this._onContextRestored,!1),i.powerPreference="high-performance"),this._badDesktopOS=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),this._badDesktopOS&&(i.xrCompatible=!1),!i.disableWebGL2Support)try{this._gl=r.getContext("webgl2",i)||r.getContext("experimental-webgl2",i),this._gl&&(this._webGLVersion=2,this._shaderPlatformName="WEBGL2",this._gl.deleteQuery||(this._webGLVersion=1,this._shaderPlatformName="WEBGL1"))}catch{}if(!this._gl){if(!r)throw new Error("The provided canvas is null or undefined.");try{this._gl=r.getContext("webgl",i)||r.getContext("experimental-webgl",i)}catch{throw new Error("WebGL not supported")}}if(!this._gl)throw new Error("WebGL not supported")}else{this._gl=e,this._renderingCanvas=this._gl.canvas,this._gl.renderbufferStorageMultisample?(this._webGLVersion=2,this._shaderPlatformName="WEBGL2"):this._shaderPlatformName="WEBGL1";const h=this._gl.getContextAttributes();h&&(i.stencil=h.stencil)}this._gl.pixelStorei(this._gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,this._gl.NONE),i.useHighPrecisionFloats!==void 0&&(this._highPrecisionShadersAllowed=i.useHighPrecisionFloats);const n=je()&&window.devicePixelRatio||1,a=i.limitDeviceRatio||n;this._hardwareScalingLevel=s?1/Math.min(a,n):1,this._lastDevicePixelRatio=n,this.resize(),this._isStencilEnable=!!i.stencil,this._initGLContext(),this._initFeatures();for(let h=0;h<this._caps.maxVertexAttribs;h++)this._currentBufferPointers[h]=new un;this._shaderProcessor=this.webGLVersion>1?new on:new an,this._badOS=/iPad/i.test(navigator.userAgent)||/iPhone/i.test(navigator.userAgent);const o=`Babylon.js v${oe.Version}`;console.log(o+` - ${this.description}`),this._renderingCanvas&&this._renderingCanvas.setAttribute&&this._renderingCanvas.setAttribute("data-engine",o)}static get NpmPackage(){return"babylonjs@5.43.0"}static get Version(){return"5.43.0"}get description(){let e=this.name+this.webGLVersion;return this._caps.parallelShaderCompile&&(e+=" - Parallel shader compilation"),e}get name(){return this._name}set name(e){this._name=e}get version(){return this._webGLVersion}static get ShadersRepository(){return Pe.ShadersRepository}static set ShadersRepository(e){Pe.ShadersRepository=e}_getShaderProcessor(e){return this._shaderProcessor}get useReverseDepthBuffer(){return this._useReverseDepthBuffer}set useReverseDepthBuffer(e){e!==this._useReverseDepthBuffer&&(this._useReverseDepthBuffer=e,e?this._depthCullingState.depthFunc=518:this._depthCullingState.depthFunc=515)}get frameId(){return this._frameId}get supportsUniformBuffers(){return this.webGLVersion>1&&!this.disableUniformBuffers}getCreationOptions(){return this._creationOptions}get _shouldUseHighPrecisionShader(){return!!(this._caps.highPrecisionShaderSupported&&this._highPrecisionShadersAllowed)}get needPOTTextures(){return this._webGLVersion<2||this.forcePOTTextures}get activeRenderLoops(){return this._activeRenderLoops}get doNotHandleContextLost(){return this._doNotHandleContextLost}set doNotHandleContextLost(e){this._doNotHandleContextLost=e}get _supportsHardwareTextureRescaling(){return!1}set framebufferDimensionsObject(e){this._framebufferDimensionsObject=e}get currentViewport(){return this._cachedViewport}get emptyTexture(){return this._emptyTexture||(this._emptyTexture=this.createRawTexture(new Uint8Array(4),1,1,5,!1,!1,1)),this._emptyTexture}get emptyTexture3D(){return this._emptyTexture3D||(this._emptyTexture3D=this.createRawTexture3D(new Uint8Array(4),1,1,1,5,!1,!1,1)),this._emptyTexture3D}get emptyTexture2DArray(){return this._emptyTexture2DArray||(this._emptyTexture2DArray=this.createRawTexture2DArray(new Uint8Array(4),1,1,1,5,!1,!1,1)),this._emptyTexture2DArray}get emptyCubeTexture(){if(!this._emptyCubeTexture){const e=new Uint8Array(4),t=[e,e,e,e,e,e];this._emptyCubeTexture=this.createRawCubeTexture(t,1,5,0,!1,!1,1)}return this._emptyCubeTexture}get isWebGPU(){return this._isWebGPU}get shaderPlatformName(){return this._shaderPlatformName}get snapshotRendering(){return!1}set snapshotRendering(e){}get snapshotRenderingMode(){return this._snapshotRenderingMode}set snapshotRenderingMode(e){this._snapshotRenderingMode=e}get useExactSrgbConversions(){return this._useExactSrgbConversions}snapshotRenderingReset(){this.snapshotRendering=!1}static _CreateCanvas(e,t){if(typeof document>"u")return new OffscreenCanvas(e,t);const i=document.createElement("canvas");return i.width=e,i.height=t,i}createCanvas(e,t){return oe._CreateCanvas(e,t)}createCanvasImage(){return document.createElement("img")}_restoreEngineAfterContextLost(e){setTimeout(async()=>{var t;this._dummyFramebuffer=null;const i=this._depthCullingState.depthTest,s=this._depthCullingState.depthFunc,r=this._depthCullingState.depthMask,n=this._stencilState.stencilTest;await e(),this.wipeCaches(!0),this._rebuildEffects(),(t=this._rebuildComputeEffects)===null||t===void 0||t.call(this),this._rebuildBuffers(),this._rebuildInternalTextures(),this._rebuildRenderTargetWrappers(),this.wipeCaches(!0),this._depthCullingState.depthTest=i,this._depthCullingState.depthFunc=s,this._depthCullingState.depthMask=r,this._stencilState.stencilTest=n,O.Warn(this.name+" context successfully restored."),this.onContextRestoredObservable.notifyObservers(this),this._contextWasLost=!1},0)}_sharedInit(e,t,i){this._renderingCanvas=e}_getShaderProcessingContext(e){return null}_rebuildInternalTextures(){const e=this._internalTexturesCache.slice();for(const t of e)t._rebuild()}_rebuildRenderTargetWrappers(){const e=this._renderTargetWrapperCache.slice();for(const t of e)t._rebuild()}_rebuildEffects(){for(const e in this._compiledEffects){const t=this._compiledEffects[e];t._pipelineContext=null,t._wasPreviouslyReady=!1,t._prepareEffect()}Pe.ResetCache()}areAllEffectsReady(){for(const e in this._compiledEffects)if(!this._compiledEffects[e].isReady())return!1;return!0}_rebuildBuffers(){for(const e of this._uniformBuffers)e._rebuild();for(const e of this._storageBuffers)e._rebuild()}_initGLContext(){var e;this._caps={maxTexturesImageUnits:this._gl.getParameter(this._gl.MAX_TEXTURE_IMAGE_UNITS),maxCombinedTexturesImageUnits:this._gl.getParameter(this._gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS),maxVertexTextureImageUnits:this._gl.getParameter(this._gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS),maxTextureSize:this._gl.getParameter(this._gl.MAX_TEXTURE_SIZE),maxSamples:this._webGLVersion>1?this._gl.getParameter(this._gl.MAX_SAMPLES):1,maxCubemapTextureSize:this._gl.getParameter(this._gl.MAX_CUBE_MAP_TEXTURE_SIZE),maxRenderTextureSize:this._gl.getParameter(this._gl.MAX_RENDERBUFFER_SIZE),maxVertexAttribs:this._gl.getParameter(this._gl.MAX_VERTEX_ATTRIBS),maxVaryingVectors:this._gl.getParameter(this._gl.MAX_VARYING_VECTORS),maxFragmentUniformVectors:this._gl.getParameter(this._gl.MAX_FRAGMENT_UNIFORM_VECTORS),maxVertexUniformVectors:this._gl.getParameter(this._gl.MAX_VERTEX_UNIFORM_VECTORS),parallelShaderCompile:this._gl.getExtension("KHR_parallel_shader_compile")||void 0,standardDerivatives:this._webGLVersion>1||this._gl.getExtension("OES_standard_derivatives")!==null,maxAnisotropy:1,astc:this._gl.getExtension("WEBGL_compressed_texture_astc")||this._gl.getExtension("WEBKIT_WEBGL_compressed_texture_astc"),bptc:this._gl.getExtension("EXT_texture_compression_bptc")||this._gl.getExtension("WEBKIT_EXT_texture_compression_bptc"),s3tc:this._gl.getExtension("WEBGL_compressed_texture_s3tc")||this._gl.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),s3tc_srgb:this._gl.getExtension("WEBGL_compressed_texture_s3tc_srgb")||this._gl.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc_srgb"),pvrtc:this._gl.getExtension("WEBGL_compressed_texture_pvrtc")||this._gl.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"),etc1:this._gl.getExtension("WEBGL_compressed_texture_etc1")||this._gl.getExtension("WEBKIT_WEBGL_compressed_texture_etc1"),etc2:this._gl.getExtension("WEBGL_compressed_texture_etc")||this._gl.getExtension("WEBKIT_WEBGL_compressed_texture_etc")||this._gl.getExtension("WEBGL_compressed_texture_es3_0"),textureAnisotropicFilterExtension:this._gl.getExtension("EXT_texture_filter_anisotropic")||this._gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic")||this._gl.getExtension("MOZ_EXT_texture_filter_anisotropic"),uintIndices:this._webGLVersion>1||this._gl.getExtension("OES_element_index_uint")!==null,fragmentDepthSupported:this._webGLVersion>1||this._gl.getExtension("EXT_frag_depth")!==null,highPrecisionShaderSupported:!1,timerQuery:this._gl.getExtension("EXT_disjoint_timer_query_webgl2")||this._gl.getExtension("EXT_disjoint_timer_query"),supportOcclusionQuery:this._webGLVersion>1,canUseTimestampForTimerQuery:!1,drawBuffersExtension:!1,maxMSAASamples:1,colorBufferFloat:!!(this._webGLVersion>1&&this._gl.getExtension("EXT_color_buffer_float")),textureFloat:!!(this._webGLVersion>1||this._gl.getExtension("OES_texture_float")),textureHalfFloat:!!(this._webGLVersion>1||this._gl.getExtension("OES_texture_half_float")),textureHalfFloatRender:!1,textureFloatLinearFiltering:!1,textureFloatRender:!1,textureHalfFloatLinearFiltering:!1,vertexArrayObject:!1,instancedArrays:!1,textureLOD:!!(this._webGLVersion>1||this._gl.getExtension("EXT_shader_texture_lod")),blendMinMax:!1,multiview:this._gl.getExtension("OVR_multiview2"),oculusMultiview:this._gl.getExtension("OCULUS_multiview"),depthTextureExtension:!1,canUseGLInstanceID:this._webGLVersion>1,canUseGLVertexID:this._webGLVersion>1,supportComputeShaders:!1,supportSRGBBuffers:!1,supportTransformFeedbacks:this._webGLVersion>1,textureMaxLevel:this._webGLVersion>1,texture2DArrayMaxLayerCount:this._webGLVersion>1?256:128},this._glVersion=this._gl.getParameter(this._gl.VERSION);const t=this._gl.getExtension("WEBGL_debug_renderer_info");if(t!=null&&(this._glRenderer=this._gl.getParameter(t.UNMASKED_RENDERER_WEBGL),this._glVendor=this._gl.getParameter(t.UNMASKED_VENDOR_WEBGL)),this._glVendor||(this._glVendor=this._gl.getParameter(this._gl.VENDOR)||"Unknown vendor"),this._glRenderer||(this._glRenderer=this._gl.getParameter(this._gl.RENDERER)||"Unknown renderer"),this._gl.HALF_FLOAT_OES!==36193&&(this._gl.HALF_FLOAT_OES=36193),this._gl.RGBA16F!==34842&&(this._gl.RGBA16F=34842),this._gl.RGBA32F!==34836&&(this._gl.RGBA32F=34836),this._gl.DEPTH24_STENCIL8!==35056&&(this._gl.DEPTH24_STENCIL8=35056),this._caps.timerQuery&&(this._webGLVersion===1&&(this._gl.getQuery=this._caps.timerQuery.getQueryEXT.bind(this._caps.timerQuery)),this._caps.canUseTimestampForTimerQuery=((e=this._gl.getQuery(this._caps.timerQuery.TIMESTAMP_EXT,this._caps.timerQuery.QUERY_COUNTER_BITS_EXT))!==null&&e!==void 0?e:0)>0),this._caps.maxAnisotropy=this._caps.textureAnisotropicFilterExtension?this._gl.getParameter(this._caps.textureAnisotropicFilterExtension.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,this._caps.textureFloatLinearFiltering=!!(this._caps.textureFloat&&this._gl.getExtension("OES_texture_float_linear")),this._caps.textureFloatRender=!!(this._caps.textureFloat&&this._canRenderToFloatFramebuffer()),this._caps.textureHalfFloatLinearFiltering=!!(this._webGLVersion>1||this._caps.textureHalfFloat&&this._gl.getExtension("OES_texture_half_float_linear")),this._caps.astc&&(this._gl.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR=this._caps.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR),this._caps.bptc&&(this._gl.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT=this._caps.bptc.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT),this._caps.s3tc_srgb&&(this._gl.COMPRESSED_SRGB_S3TC_DXT1_EXT=this._caps.s3tc_srgb.COMPRESSED_SRGB_S3TC_DXT1_EXT,this._gl.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT=this._caps.s3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT,this._gl.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT=this._caps.s3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT),this._caps.etc2&&(this._gl.COMPRESSED_SRGB8_ETC2=this._caps.etc2.COMPRESSED_SRGB8_ETC2,this._gl.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=this._caps.etc2.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC),this._webGLVersion>1&&this._gl.HALF_FLOAT_OES!==5131&&(this._gl.HALF_FLOAT_OES=5131),this._caps.textureHalfFloatRender=this._caps.textureHalfFloat&&this._canRenderToHalfFloatFramebuffer(),this._webGLVersion>1)this._caps.drawBuffersExtension=!0,this._caps.maxMSAASamples=this._maxMSAASamplesOverride!==null?this._maxMSAASamplesOverride:this._gl.getParameter(this._gl.MAX_SAMPLES);else{const i=this._gl.getExtension("WEBGL_draw_buffers");if(i!==null){this._caps.drawBuffersExtension=!0,this._gl.drawBuffers=i.drawBuffersWEBGL.bind(i),this._gl.DRAW_FRAMEBUFFER=this._gl.FRAMEBUFFER;for(let s=0;s<16;s++)this._gl["COLOR_ATTACHMENT"+s+"_WEBGL"]=i["COLOR_ATTACHMENT"+s+"_WEBGL"]}}if(this._webGLVersion>1)this._caps.depthTextureExtension=!0;else{const i=this._gl.getExtension("WEBGL_depth_texture");i!=null&&(this._caps.depthTextureExtension=!0,this._gl.UNSIGNED_INT_24_8=i.UNSIGNED_INT_24_8_WEBGL)}if(this.disableVertexArrayObjects)this._caps.vertexArrayObject=!1;else if(this._webGLVersion>1)this._caps.vertexArrayObject=!0;else{const i=this._gl.getExtension("OES_vertex_array_object");i!=null&&(this._caps.vertexArrayObject=!0,this._gl.createVertexArray=i.createVertexArrayOES.bind(i),this._gl.bindVertexArray=i.bindVertexArrayOES.bind(i),this._gl.deleteVertexArray=i.deleteVertexArrayOES.bind(i))}if(this._webGLVersion>1)this._caps.instancedArrays=!0;else{const i=this._gl.getExtension("ANGLE_instanced_arrays");i!=null?(this._caps.instancedArrays=!0,this._gl.drawArraysInstanced=i.drawArraysInstancedANGLE.bind(i),this._gl.drawElementsInstanced=i.drawElementsInstancedANGLE.bind(i),this._gl.vertexAttribDivisor=i.vertexAttribDivisorANGLE.bind(i)):this._caps.instancedArrays=!1}if(this._gl.getShaderPrecisionFormat){const i=this._gl.getShaderPrecisionFormat(this._gl.VERTEX_SHADER,this._gl.HIGH_FLOAT),s=this._gl.getShaderPrecisionFormat(this._gl.FRAGMENT_SHADER,this._gl.HIGH_FLOAT);i&&s&&(this._caps.highPrecisionShaderSupported=i.precision!==0&&s.precision!==0)}if(this._webGLVersion>1)this._caps.blendMinMax=!0;else{const i=this._gl.getExtension("EXT_blend_minmax");i!=null&&(this._caps.blendMinMax=!0,this._gl.MAX=i.MAX_EXT,this._gl.MIN=i.MIN_EXT)}if(!this._caps.supportSRGBBuffers){if(this._webGLVersion>1)this._caps.supportSRGBBuffers=!0;else{const i=this._gl.getExtension("EXT_sRGB");i!=null&&(this._caps.supportSRGBBuffers=!0,this._gl.SRGB=i.SRGB_EXT,this._gl.SRGB8=i.SRGB_ALPHA_EXT,this._gl.SRGB8_ALPHA8=i.SRGB_ALPHA_EXT)}this._caps.supportSRGBBuffers=this._caps.supportSRGBBuffers&&!!(this._creationOptions&&this._creationOptions.forceSRGBBufferSupportState)}this._depthCullingState.depthTest=!0,this._depthCullingState.depthFunc=this._gl.LEQUAL,this._depthCullingState.depthMask=!0,this._maxSimultaneousTextures=this._caps.maxCombinedTexturesImageUnits;for(let i=0;i<this._maxSimultaneousTextures;i++)this._nextFreeTextureSlots.push(i)}_initFeatures(){this._features={forceBitmapOverHTMLImageElement:!1,supportRenderAndCopyToLodForFloatTextures:this._webGLVersion!==1,supportDepthStencilTexture:this._webGLVersion!==1,supportShadowSamplers:this._webGLVersion!==1,uniformBufferHardCheckMatrix:!1,allowTexturePrefiltering:this._webGLVersion!==1,trackUbosInFrame:!1,checkUbosContentBeforeUpload:!1,supportCSM:this._webGLVersion!==1,basisNeedsPOT:this._webGLVersion===1,support3DTextures:this._webGLVersion!==1,needTypeSuffixInShaderConstants:this._webGLVersion!==1,supportMSAA:this._webGLVersion!==1,supportSSAO2:this._webGLVersion!==1,supportExtendedTextureFormats:this._webGLVersion!==1,supportSwitchCaseInShader:this._webGLVersion!==1,supportSyncTextureRead:!0,needsInvertingBitmap:!0,useUBOBindingCache:!0,needShaderCodeInlining:!1,needToAlwaysBindUniformBuffers:!1,supportRenderPasses:!1,supportSpriteInstancing:!0,_collectUbosUpdatedInFrame:!1}}get webGLVersion(){return this._webGLVersion}getClassName(){return"ThinEngine"}get isStencilEnable(){return this._isStencilEnable}_prepareWorkingCanvas(){if(this._workingCanvas)return;this._workingCanvas=this.createCanvas(1,1);const e=this._workingCanvas.getContext("2d");e&&(this._workingContext=e)}resetTextureCache(){for(const e in this._boundTexturesCache)Object.prototype.hasOwnProperty.call(this._boundTexturesCache,e)&&(this._boundTexturesCache[e]=null);this._currentTextureChannel=-1}getInfo(){return this.getGlInfo()}getGlInfo(){return{vendor:this._glVendor,renderer:this._glRenderer,version:this._glVersion}}setHardwareScalingLevel(e){this._hardwareScalingLevel=e,this.resize()}getHardwareScalingLevel(){return this._hardwareScalingLevel}getLoadedTexturesCache(){return this._internalTexturesCache}getCaps(){return this._caps}stopRenderLoop(e){if(!e){this._activeRenderLoops=[];return}const t=this._activeRenderLoops.indexOf(e);t>=0&&this._activeRenderLoops.splice(t,1)}_renderLoop(){if(!this._contextWasLost){let e=!0;if(!this.renderEvenInBackground&&this._windowIsBackground&&(e=!1),e){this.beginFrame();for(let t=0;t<this._activeRenderLoops.length;t++){const i=this._activeRenderLoops[t];i()}this.endFrame()}}this._activeRenderLoops.length>0?this._frameHandler=this._queueNewFrame(this._boundRenderFunction,this.getHostWindow()):this._renderingQueueLaunched=!1}getRenderingCanvas(){return this._renderingCanvas}getAudioContext(){return this._audioContext}getAudioDestination(){return this._audioDestination}getHostWindow(){return je()?this._renderingCanvas&&this._renderingCanvas.ownerDocument&&this._renderingCanvas.ownerDocument.defaultView?this._renderingCanvas.ownerDocument.defaultView:window:null}getRenderWidth(e=!1){return!e&&this._currentRenderTarget?this._currentRenderTarget.width:this._framebufferDimensionsObject?this._framebufferDimensionsObject.framebufferWidth:this._gl.drawingBufferWidth}getRenderHeight(e=!1){return!e&&this._currentRenderTarget?this._currentRenderTarget.height:this._framebufferDimensionsObject?this._framebufferDimensionsObject.framebufferHeight:this._gl.drawingBufferHeight}_queueNewFrame(e,t){return oe.QueueNewFrame(e,t)}runRenderLoop(e){this._activeRenderLoops.indexOf(e)===-1&&(this._activeRenderLoops.push(e),this._renderingQueueLaunched||(this._renderingQueueLaunched=!0,this._boundRenderFunction=this._renderLoop.bind(this),this._frameHandler=this._queueNewFrame(this._boundRenderFunction,this.getHostWindow())))}clear(e,t,i,s=!1){const r=this.stencilStateComposer.useStencilGlobalOnly;this.stencilStateComposer.useStencilGlobalOnly=!0,this.applyStates(),this.stencilStateComposer.useStencilGlobalOnly=r;let n=0;t&&e&&(this._gl.clearColor(e.r,e.g,e.b,e.a!==void 0?e.a:1),n|=this._gl.COLOR_BUFFER_BIT),i&&(this.useReverseDepthBuffer?(this._depthCullingState.depthFunc=this._gl.GEQUAL,this._gl.clearDepth(0)):this._gl.clearDepth(1),n|=this._gl.DEPTH_BUFFER_BIT),s&&(this._gl.clearStencil(0),n|=this._gl.STENCIL_BUFFER_BIT),this._gl.clear(n)}_viewport(e,t,i,s){(e!==this._viewportCached.x||t!==this._viewportCached.y||i!==this._viewportCached.z||s!==this._viewportCached.w)&&(this._viewportCached.x=e,this._viewportCached.y=t,this._viewportCached.z=i,this._viewportCached.w=s,this._gl.viewport(e,t,i,s))}setViewport(e,t,i){const s=t||this.getRenderWidth(),r=i||this.getRenderHeight(),n=e.x||0,a=e.y||0;this._cachedViewport=e,this._viewport(n*s,a*r,s*e.width,r*e.height)}beginFrame(){}endFrame(){this._badOS&&this.flushFramebuffer(),this._frameId++}resize(e=!1){let t,i;if(this.adaptToDeviceRatio){const s=je()&&window.devicePixelRatio||1,r=this._lastDevicePixelRatio/s;this._lastDevicePixelRatio=s,this._hardwareScalingLevel*=r}je()?(t=this._renderingCanvas?this._renderingCanvas.clientWidth||this._renderingCanvas.width:window.innerWidth,i=this._renderingCanvas?this._renderingCanvas.clientHeight||this._renderingCanvas.height:window.innerHeight):(t=this._renderingCanvas?this._renderingCanvas.width:100,i=this._renderingCanvas?this._renderingCanvas.height:100),this.setSize(t/this._hardwareScalingLevel,i/this._hardwareScalingLevel,e)}setSize(e,t,i=!1){return!this._renderingCanvas||(e=e|0,t=t|0,!i&&this._renderingCanvas.width===e&&this._renderingCanvas.height===t)?!1:(this._renderingCanvas.width=e,this._renderingCanvas.height=t,!0)}bindFramebuffer(e,t=0,i,s,r,n=0,a=0){var o,h,l,u,d;const f=e;this._currentRenderTarget&&this.unBindFramebuffer(this._currentRenderTarget),this._currentRenderTarget=e,this._bindUnboundFramebuffer(f._MSAAFramebuffer?f._MSAAFramebuffer:f._framebuffer);const _=this._gl;e.is2DArray?_.framebufferTextureLayer(_.FRAMEBUFFER,_.COLOR_ATTACHMENT0,(o=e.texture._hardwareTexture)===null||o===void 0?void 0:o.underlyingResource,n,a):e.isCube&&_.framebufferTexture2D(_.FRAMEBUFFER,_.COLOR_ATTACHMENT0,_.TEXTURE_CUBE_MAP_POSITIVE_X+t,(h=e.texture._hardwareTexture)===null||h===void 0?void 0:h.underlyingResource,n);const E=e._depthStencilTexture;if(E){const m=e._depthStencilTextureWithStencil?_.DEPTH_STENCIL_ATTACHMENT:_.DEPTH_ATTACHMENT;e.is2DArray?_.framebufferTextureLayer(_.FRAMEBUFFER,m,(l=E._hardwareTexture)===null||l===void 0?void 0:l.underlyingResource,n,a):e.isCube?_.framebufferTexture2D(_.FRAMEBUFFER,m,_.TEXTURE_CUBE_MAP_POSITIVE_X+t,(u=E._hardwareTexture)===null||u===void 0?void 0:u.underlyingResource,n):_.framebufferTexture2D(_.FRAMEBUFFER,m,_.TEXTURE_2D,(d=E._hardwareTexture)===null||d===void 0?void 0:d.underlyingResource,n)}this._cachedViewport&&!r?this.setViewport(this._cachedViewport,i,s):(i||(i=e.width,n&&(i=i/Math.pow(2,n))),s||(s=e.height,n&&(s=s/Math.pow(2,n))),this._viewport(0,0,i,s)),this.wipeCaches()}setState(e,t=0,i,s=!1,r,n,a=0){var o,h;(this._depthCullingState.cull!==e||i)&&(this._depthCullingState.cull=e);const l=!((h=(o=this.cullBackFaces)!==null&&o!==void 0?o:r)!==null&&h!==void 0)||h?this._gl.BACK:this._gl.FRONT;(this._depthCullingState.cullFace!==l||i)&&(this._depthCullingState.cullFace=l),this.setZOffset(t),this.setZOffsetUnits(a);const u=s?this._gl.CW:this._gl.CCW;(this._depthCullingState.frontFace!==u||i)&&(this._depthCullingState.frontFace=u),this._stencilStateComposer.stencilMaterial=n}getDepthBuffer(){return this._depthCullingState.depthTest}setDepthBuffer(e){this._depthCullingState.depthTest=e}setZOffset(e){this._depthCullingState.zOffset=this.useReverseDepthBuffer?-e:e}getZOffset(){const e=this._depthCullingState.zOffset;return this.useReverseDepthBuffer?-e:e}setZOffsetUnits(e){this._depthCullingState.zOffsetUnits=this.useReverseDepthBuffer?-e:e}getZOffsetUnits(){const e=this._depthCullingState.zOffsetUnits;return this.useReverseDepthBuffer?-e:e}_bindUnboundFramebuffer(e){this._currentFramebuffer!==e&&(this._gl.bindFramebuffer(this._gl.FRAMEBUFFER,e),this._currentFramebuffer=e)}_currentFrameBufferIsDefaultFrameBuffer(){return this._currentFramebuffer===null}generateMipmaps(e){this._bindTextureDirectly(this._gl.TEXTURE_2D,e,!0),this._gl.generateMipmap(this._gl.TEXTURE_2D),this._bindTextureDirectly(this._gl.TEXTURE_2D,null)}unBindFramebuffer(e,t=!1,i){var s;const r=e;this._currentRenderTarget=null;const n=this._gl;if(r._MSAAFramebuffer){if(e.isMulti){this.unBindMultiColorAttachmentFramebuffer(e,t,i);return}n.bindFramebuffer(n.READ_FRAMEBUFFER,r._MSAAFramebuffer),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,r._framebuffer),n.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,n.COLOR_BUFFER_BIT,n.NEAREST)}!((s=e.texture)===null||s===void 0)&&s.generateMipMaps&&!t&&!e.isCube&&this.generateMipmaps(e.texture),i&&(r._MSAAFramebuffer&&this._bindUnboundFramebuffer(r._framebuffer),i()),this._bindUnboundFramebuffer(null)}flushFramebuffer(){this._gl.flush()}restoreDefaultFramebuffer(){this._currentRenderTarget?this.unBindFramebuffer(this._currentRenderTarget):this._bindUnboundFramebuffer(null),this._cachedViewport&&this.setViewport(this._cachedViewport),this.wipeCaches()}_resetVertexBufferBinding(){this.bindArrayBuffer(null),this._cachedVertexBuffers=null}createVertexBuffer(e){return this._createVertexBuffer(e,this._gl.STATIC_DRAW)}_createVertexBuffer(e,t){const i=this._gl.createBuffer();if(!i)throw new Error("Unable to create vertex buffer");const s=new Di(i);return this.bindArrayBuffer(s),e instanceof Array?this._gl.bufferData(this._gl.ARRAY_BUFFER,new Float32Array(e),t):this._gl.bufferData(this._gl.ARRAY_BUFFER,e,t),this._resetVertexBufferBinding(),s.references=1,s}createDynamicVertexBuffer(e){return this._createVertexBuffer(e,this._gl.DYNAMIC_DRAW)}_resetIndexBufferBinding(){this.bindIndexBuffer(null),this._cachedIndexBuffer=null}createIndexBuffer(e,t){const i=this._gl.createBuffer(),s=new Di(i);if(!i)throw new Error("Unable to create index buffer");this.bindIndexBuffer(s);const r=this._normalizeIndexData(e);return this._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER,r,t?this._gl.DYNAMIC_DRAW:this._gl.STATIC_DRAW),this._resetIndexBufferBinding(),s.references=1,s.is32Bits=r.BYTES_PER_ELEMENT===4,s}_normalizeIndexData(e){if(e.BYTES_PER_ELEMENT===2)return e;if(this._caps.uintIndices){if(e instanceof Uint32Array)return e;for(let i=0;i<e.length;i++)if(e[i]>=65535)return new Uint32Array(e);return new Uint16Array(e)}return new Uint16Array(e)}bindArrayBuffer(e){this._vaoRecordInProgress||this._unbindVertexArrayObject(),this._bindBuffer(e,this._gl.ARRAY_BUFFER)}bindUniformBlock(e,t,i){const s=e.program,r=this._gl.getUniformBlockIndex(s,t);this._gl.uniformBlockBinding(s,r,i)}bindIndexBuffer(e){this._vaoRecordInProgress||this._unbindVertexArrayObject(),this._bindBuffer(e,this._gl.ELEMENT_ARRAY_BUFFER)}_bindBuffer(e,t){(this._vaoRecordInProgress||this._currentBoundBuffer[t]!==e)&&(this._gl.bindBuffer(t,e?e.underlyingResource:null),this._currentBoundBuffer[t]=e)}updateArrayBuffer(e){this._gl.bufferSubData(this._gl.ARRAY_BUFFER,0,e)}_vertexAttribPointer(e,t,i,s,r,n,a){const o=this._currentBufferPointers[t];if(!o)return;let h=!1;o.active?(o.buffer!==e&&(o.buffer=e,h=!0),o.size!==i&&(o.size=i,h=!0),o.type!==s&&(o.type=s,h=!0),o.normalized!==r&&(o.normalized=r,h=!0),o.stride!==n&&(o.stride=n,h=!0),o.offset!==a&&(o.offset=a,h=!0)):(h=!0,o.active=!0,o.index=t,o.size=i,o.type=s,o.normalized=r,o.stride=n,o.offset=a,o.buffer=e),(h||this._vaoRecordInProgress)&&(this.bindArrayBuffer(e),s===this._gl.UNSIGNED_INT||s===this._gl.INT?this._gl.vertexAttribIPointer(t,i,s,n,a):this._gl.vertexAttribPointer(t,i,s,r,n,a))}_bindIndexBufferWithCache(e){e!=null&&this._cachedIndexBuffer!==e&&(this._cachedIndexBuffer=e,this.bindIndexBuffer(e),this._uintIndicesCurrentlySet=e.is32Bits)}_bindVertexBuffersAttributes(e,t,i){const s=t.getAttributesNames();this._vaoRecordInProgress||this._unbindVertexArrayObject(),this.unbindAllAttributes();for(let r=0;r<s.length;r++){const n=t.getAttributeLocation(r);if(n>=0){const a=s[r];let o=null;if(i&&(o=i[a]),o||(o=e[a]),!o)continue;this._gl.enableVertexAttribArray(n),this._vaoRecordInProgress||(this._vertexAttribArraysEnabled[n]=!0);const h=o.getBuffer();h&&(this._vertexAttribPointer(h,n,o.getSize(),o.type,o.normalized,o.byteStride,o.byteOffset),o.getIsInstanced()&&(this._gl.vertexAttribDivisor(n,o.getInstanceDivisor()),this._vaoRecordInProgress||(this._currentInstanceLocations.push(n),this._currentInstanceBuffers.push(h))))}}}recordVertexArrayObject(e,t,i,s){const r=this._gl.createVertexArray();if(!r)throw new Error("Unable to create VAO");return this._vaoRecordInProgress=!0,this._gl.bindVertexArray(r),this._mustWipeVertexAttributes=!0,this._bindVertexBuffersAttributes(e,i,s),this.bindIndexBuffer(t),this._vaoRecordInProgress=!1,this._gl.bindVertexArray(null),r}bindVertexArrayObject(e,t){this._cachedVertexArrayObject!==e&&(this._cachedVertexArrayObject=e,this._gl.bindVertexArray(e),this._cachedVertexBuffers=null,this._cachedIndexBuffer=null,this._uintIndicesCurrentlySet=t!=null&&t.is32Bits,this._mustWipeVertexAttributes=!0)}bindBuffersDirectly(e,t,i,s,r){if(this._cachedVertexBuffers!==e||this._cachedEffectForVertexBuffers!==r){this._cachedVertexBuffers=e,this._cachedEffectForVertexBuffers=r;const n=r.getAttributesCount();this._unbindVertexArrayObject(),this.unbindAllAttributes();let a=0;for(let o=0;o<n;o++)if(o<i.length){const h=r.getAttributeLocation(o);h>=0&&(this._gl.enableVertexAttribArray(h),this._vertexAttribArraysEnabled[h]=!0,this._vertexAttribPointer(e,h,i[o],this._gl.FLOAT,!1,s,a)),a+=i[o]*4}}this._bindIndexBufferWithCache(t)}_unbindVertexArrayObject(){this._cachedVertexArrayObject&&(this._cachedVertexArrayObject=null,this._gl.bindVertexArray(null))}bindBuffers(e,t,i,s){(this._cachedVertexBuffers!==e||this._cachedEffectForVertexBuffers!==i)&&(this._cachedVertexBuffers=e,this._cachedEffectForVertexBuffers=i,this._bindVertexBuffersAttributes(e,i,s)),this._bindIndexBufferWithCache(t)}unbindInstanceAttributes(){let e;for(let t=0,i=this._currentInstanceLocations.length;t<i;t++){const s=this._currentInstanceBuffers[t];e!=s&&s.references&&(e=s,this.bindArrayBuffer(s));const r=this._currentInstanceLocations[t];this._gl.vertexAttribDivisor(r,0)}this._currentInstanceBuffers.length=0,this._currentInstanceLocations.length=0}releaseVertexArrayObject(e){this._gl.deleteVertexArray(e)}_releaseBuffer(e){return e.references--,e.references===0?(this._deleteBuffer(e),!0):!1}_deleteBuffer(e){this._gl.deleteBuffer(e.underlyingResource)}updateAndBindInstancesBuffer(e,t,i){if(this.bindArrayBuffer(e),t&&this._gl.bufferSubData(this._gl.ARRAY_BUFFER,0,t),i[0].index!==void 0)this.bindInstancesBuffer(e,i,!0);else for(let s=0;s<4;s++){const r=i[s];this._vertexAttribArraysEnabled[r]||(this._gl.enableVertexAttribArray(r),this._vertexAttribArraysEnabled[r]=!0),this._vertexAttribPointer(e,r,4,this._gl.FLOAT,!1,64,s*16),this._gl.vertexAttribDivisor(r,1),this._currentInstanceLocations.push(r),this._currentInstanceBuffers.push(e)}}bindInstancesBuffer(e,t,i=!0){this.bindArrayBuffer(e);let s=0;if(i)for(let r=0;r<t.length;r++){const n=t[r];s+=n.attributeSize*4}for(let r=0;r<t.length;r++){const n=t[r];n.index===void 0&&(n.index=this._currentEffect.getAttributeLocationByName(n.attributeName)),!(n.index<0)&&(this._vertexAttribArraysEnabled[n.index]||(this._gl.enableVertexAttribArray(n.index),this._vertexAttribArraysEnabled[n.index]=!0),this._vertexAttribPointer(e,n.index,n.attributeSize,n.attributeType||this._gl.FLOAT,n.normalized||!1,s,n.offset),this._gl.vertexAttribDivisor(n.index,n.divisor===void 0?1:n.divisor),this._currentInstanceLocations.push(n.index),this._currentInstanceBuffers.push(e))}}disableInstanceAttributeByName(e){if(!this._currentEffect)return;const t=this._currentEffect.getAttributeLocationByName(e);this.disableInstanceAttribute(t)}disableInstanceAttribute(e){let t=!1,i;for(;(i=this._currentInstanceLocations.indexOf(e))!==-1;)this._currentInstanceLocations.splice(i,1),this._currentInstanceBuffers.splice(i,1),t=!0,i=this._currentInstanceLocations.indexOf(e);t&&(this._gl.vertexAttribDivisor(e,0),this.disableAttributeByIndex(e))}disableAttributeByIndex(e){this._gl.disableVertexAttribArray(e),this._vertexAttribArraysEnabled[e]=!1,this._currentBufferPointers[e].active=!1}draw(e,t,i,s){this.drawElementsType(e?0:1,t,i,s)}drawPointClouds(e,t,i){this.drawArraysType(2,e,t,i)}drawUnIndexed(e,t,i,s){this.drawArraysType(e?0:1,t,i,s)}drawElementsType(e,t,i,s){this.applyStates(),this._reportDrawCall();const r=this._drawMode(e),n=this._uintIndicesCurrentlySet?this._gl.UNSIGNED_INT:this._gl.UNSIGNED_SHORT,a=this._uintIndicesCurrentlySet?4:2;s?this._gl.drawElementsInstanced(r,i,n,t*a,s):this._gl.drawElements(r,i,n,t*a)}drawArraysType(e,t,i,s){this.applyStates(),this._reportDrawCall();const r=this._drawMode(e);s?this._gl.drawArraysInstanced(r,t,i,s):this._gl.drawArrays(r,t,i)}_drawMode(e){switch(e){case 0:return this._gl.TRIANGLES;case 2:return this._gl.POINTS;case 1:return this._gl.LINES;case 3:return this._gl.POINTS;case 4:return this._gl.LINES;case 5:return this._gl.LINE_LOOP;case 6:return this._gl.LINE_STRIP;case 7:return this._gl.TRIANGLE_STRIP;case 8:return this._gl.TRIANGLE_FAN;default:return this._gl.TRIANGLES}}_reportDrawCall(){}_releaseEffect(e){this._compiledEffects[e._key]&&delete this._compiledEffects[e._key];const t=e.getPipelineContext();t&&this._deletePipelineContext(t)}_deletePipelineContext(e){const t=e;t&&t.program&&(t.program.__SPECTOR_rebuildProgram=null,this._gl.deleteProgram(t.program))}_getGlobalDefines(e){if(e){this.isNDCHalfZRange?e.IS_NDC_HALF_ZRANGE="":delete e.IS_NDC_HALF_ZRANGE,this.useReverseDepthBuffer?e.USE_REVERSE_DEPTHBUFFER="":delete e.USE_REVERSE_DEPTHBUFFER,this.useExactSrgbConversions?e.USE_EXACT_SRGB_CONVERSIONS="":delete e.USE_EXACT_SRGB_CONVERSIONS;return}else{let t="";return this.isNDCHalfZRange&&(t+="#define IS_NDC_HALF_ZRANGE"),this.useReverseDepthBuffer&&(t&&(t+=`
`),t+="#define USE_REVERSE_DEPTHBUFFER"),this.useExactSrgbConversions&&(t&&(t+=`
`),t+="#define USE_EXACT_SRGB_CONVERSIONS"),t}}createEffect(e,t,i,s,r,n,a,o,h,l=Ze.GLSL){var u;const d=e.vertexElement||e.vertex||e.vertexToken||e.vertexSource||e,f=e.fragmentElement||e.fragment||e.fragmentToken||e.fragmentSource||e,_=this._getGlobalDefines();let E=(u=r??t.defines)!==null&&u!==void 0?u:"";_&&(E+=_);const m=d+"+"+f+"@"+E;if(this._compiledEffects[m]){const S=this._compiledEffects[m];return a&&S.isReady()&&a(S),S}const v=new Pe(e,t,i,s,this,r,n,a,o,h,m,l);return this._compiledEffects[m]=v,v}static _ConcatenateShader(e,t,i=""){return i+(t?t+`
`:"")+e}_compileShader(e,t,i,s){return this._compileRawShader(oe._ConcatenateShader(e,i,s),t)}_compileRawShader(e,t){const i=this._gl,s=i.createShader(t==="vertex"?i.VERTEX_SHADER:i.FRAGMENT_SHADER);if(!s){let r=i.NO_ERROR,n=i.NO_ERROR;for(;(n=i.getError())!==i.NO_ERROR;)r=n;throw new Error(`Something went wrong while creating a gl ${t} shader object. gl error=${r}, gl isContextLost=${i.isContextLost()}, _contextWasLost=${this._contextWasLost}`)}return i.shaderSource(s,e),i.compileShader(s),s}_getShaderSource(e){return this._gl.getShaderSource(e)}createRawShaderProgram(e,t,i,s,r=null){s=s||this._gl;const n=this._compileRawShader(t,"vertex"),a=this._compileRawShader(i,"fragment");return this._createShaderProgram(e,n,a,s,r)}createShaderProgram(e,t,i,s,r,n=null){r=r||this._gl;const a=this._webGLVersion>1?`#version 300 es
#define WEBGL2 
`:"",o=this._compileShader(t,"vertex",s,a),h=this._compileShader(i,"fragment",s,a);return this._createShaderProgram(e,o,h,r,n)}inlineShaderCode(e){return e}createPipelineContext(e){const t=new ln;return t.engine=this,this._caps.parallelShaderCompile&&(t.isParallelCompiled=!0),t}createMaterialContext(){}createDrawContext(){}_createShaderProgram(e,t,i,s,r=null){const n=s.createProgram();if(e.program=n,!n)throw new Error("Unable to create program");return s.attachShader(n,t),s.attachShader(n,i),s.linkProgram(n),e.context=s,e.vertexShader=t,e.fragmentShader=i,e.isParallelCompiled||this._finalizePipelineContext(e),n}_finalizePipelineContext(e){const t=e.context,i=e.vertexShader,s=e.fragmentShader,r=e.program;if(!t.getProgramParameter(r,t.LINK_STATUS)){if(!this._gl.getShaderParameter(i,this._gl.COMPILE_STATUS)){const o=this._gl.getShaderInfoLog(i);if(o)throw e.vertexCompilationError=o,new Error("VERTEX SHADER "+o)}if(!this._gl.getShaderParameter(s,this._gl.COMPILE_STATUS)){const o=this._gl.getShaderInfoLog(s);if(o)throw e.fragmentCompilationError=o,new Error("FRAGMENT SHADER "+o)}const a=t.getProgramInfoLog(r);if(a)throw e.programLinkError=a,new Error(a)}if(this.validateShaderPrograms&&(t.validateProgram(r),!t.getProgramParameter(r,t.VALIDATE_STATUS))){const o=t.getProgramInfoLog(r);if(o)throw e.programValidationError=o,new Error(o)}t.deleteShader(i),t.deleteShader(s),e.vertexShader=void 0,e.fragmentShader=void 0,e.onCompiled&&(e.onCompiled(),e.onCompiled=void 0)}_preparePipelineContext(e,t,i,s,r,n,a,o,h,l){const u=e;s?u.program=this.createRawShaderProgram(u,t,i,void 0,h):u.program=this.createShaderProgram(u,t,i,o,void 0,h),u.program.__SPECTOR_rebuildProgram=a}_isRenderingStateCompiled(e){const t=e;return this._gl.getProgramParameter(t.program,this._caps.parallelShaderCompile.COMPLETION_STATUS_KHR)?(this._finalizePipelineContext(t),!0):!1}_executeWhenRenderingStateIsCompiled(e,t){const i=e;if(!i.isParallelCompiled){t();return}const s=i.onCompiled;s?i.onCompiled=()=>{s(),t()}:i.onCompiled=t}getUniforms(e,t){const i=new Array,s=e;for(let r=0;r<t.length;r++)i.push(this._gl.getUniformLocation(s.program,t[r]));return i}getAttributes(e,t){const i=[],s=e;for(let r=0;r<t.length;r++)try{i.push(this._gl.getAttribLocation(s.program,t[r]))}catch{i.push(-1)}return i}enableEffect(e){e=e!==null&&mi.IsWrapper(e)?e.effect:e,!(!e||e===this._currentEffect)&&(this._stencilStateComposer.stencilMaterial=void 0,e=e,this.bindSamplers(e),this._currentEffect=e,e.onBind&&e.onBind(e),e._onBindObservable&&e._onBindObservable.notifyObservers(e))}setInt(e,t){return e?(this._gl.uniform1i(e,t),!0):!1}setInt2(e,t,i){return e?(this._gl.uniform2i(e,t,i),!0):!1}setInt3(e,t,i,s){return e?(this._gl.uniform3i(e,t,i,s),!0):!1}setInt4(e,t,i,s,r){return e?(this._gl.uniform4i(e,t,i,s,r),!0):!1}setIntArray(e,t){return e?(this._gl.uniform1iv(e,t),!0):!1}setIntArray2(e,t){return!e||t.length%2!==0?!1:(this._gl.uniform2iv(e,t),!0)}setIntArray3(e,t){return!e||t.length%3!==0?!1:(this._gl.uniform3iv(e,t),!0)}setIntArray4(e,t){return!e||t.length%4!==0?!1:(this._gl.uniform4iv(e,t),!0)}setUInt(e,t){return e?(this._gl.uniform1ui(e,t),!0):!1}setUInt2(e,t,i){return e?(this._gl.uniform2ui(e,t,i),!0):!1}setUInt3(e,t,i,s){return e?(this._gl.uniform3ui(e,t,i,s),!0):!1}setUInt4(e,t,i,s,r){return e?(this._gl.uniform4ui(e,t,i,s,r),!0):!1}setUIntArray(e,t){return e?(this._gl.uniform1uiv(e,t),!0):!1}setUIntArray2(e,t){return!e||t.length%2!==0?!1:(this._gl.uniform2uiv(e,t),!0)}setUIntArray3(e,t){return!e||t.length%3!==0?!1:(this._gl.uniform3uiv(e,t),!0)}setUIntArray4(e,t){return!e||t.length%4!==0?!1:(this._gl.uniform4uiv(e,t),!0)}setArray(e,t){return!e||t.length<1?!1:(this._gl.uniform1fv(e,t),!0)}setArray2(e,t){return!e||t.length%2!==0?!1:(this._gl.uniform2fv(e,t),!0)}setArray3(e,t){return!e||t.length%3!==0?!1:(this._gl.uniform3fv(e,t),!0)}setArray4(e,t){return!e||t.length%4!==0?!1:(this._gl.uniform4fv(e,t),!0)}setMatrices(e,t){return e?(this._gl.uniformMatrix4fv(e,!1,t),!0):!1}setMatrix3x3(e,t){return e?(this._gl.uniformMatrix3fv(e,!1,t),!0):!1}setMatrix2x2(e,t){return e?(this._gl.uniformMatrix2fv(e,!1,t),!0):!1}setFloat(e,t){return e?(this._gl.uniform1f(e,t),!0):!1}setFloat2(e,t,i){return e?(this._gl.uniform2f(e,t,i),!0):!1}setFloat3(e,t,i,s){return e?(this._gl.uniform3f(e,t,i,s),!0):!1}setFloat4(e,t,i,s,r){return e?(this._gl.uniform4f(e,t,i,s,r),!0):!1}applyStates(){if(this._depthCullingState.apply(this._gl),this._stencilStateComposer.apply(this._gl),this._alphaState.apply(this._gl),this._colorWriteChanged){this._colorWriteChanged=!1;const e=this._colorWrite;this._gl.colorMask(e,e,e,e)}}setColorWrite(e){e!==this._colorWrite&&(this._colorWriteChanged=!0,this._colorWrite=e)}getColorWrite(){return this._colorWrite}get depthCullingState(){return this._depthCullingState}get alphaState(){return this._alphaState}get stencilState(){return this._stencilState}get stencilStateComposer(){return this._stencilStateComposer}clearInternalTexturesCache(){this._internalTexturesCache.length=0}wipeCaches(e){this.preventCacheWipeBetweenFrames&&!e||(this._currentEffect=null,this._viewportCached.x=0,this._viewportCached.y=0,this._viewportCached.z=0,this._viewportCached.w=0,this._unbindVertexArrayObject(),e&&(this._currentProgram=null,this.resetTextureCache(),this._stencilStateComposer.reset(),this._depthCullingState.reset(),this._depthCullingState.depthFunc=this._gl.LEQUAL,this._alphaState.reset(),this._alphaMode=1,this._alphaEquation=0,this._colorWrite=!0,this._colorWriteChanged=!0,this._unpackFlipYCached=null,this._gl.pixelStorei(this._gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,this._gl.NONE),this._gl.pixelStorei(this._gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,0),this._mustWipeVertexAttributes=!0,this.unbindAllAttributes()),this._resetVertexBufferBinding(),this._cachedIndexBuffer=null,this._cachedEffectForVertexBuffers=null,this.bindIndexBuffer(null))}_getSamplingParameters(e,t){const i=this._gl;let s=i.NEAREST,r=i.NEAREST;switch(e){case 11:s=i.LINEAR,t?r=i.LINEAR_MIPMAP_NEAREST:r=i.LINEAR;break;case 3:s=i.LINEAR,t?r=i.LINEAR_MIPMAP_LINEAR:r=i.LINEAR;break;case 8:s=i.NEAREST,t?r=i.NEAREST_MIPMAP_LINEAR:r=i.NEAREST;break;case 4:s=i.NEAREST,t?r=i.NEAREST_MIPMAP_NEAREST:r=i.NEAREST;break;case 5:s=i.NEAREST,t?r=i.LINEAR_MIPMAP_NEAREST:r=i.LINEAR;break;case 6:s=i.NEAREST,t?r=i.LINEAR_MIPMAP_LINEAR:r=i.LINEAR;break;case 7:s=i.NEAREST,r=i.LINEAR;break;case 1:s=i.NEAREST,r=i.NEAREST;break;case 9:s=i.LINEAR,t?r=i.NEAREST_MIPMAP_NEAREST:r=i.NEAREST;break;case 10:s=i.LINEAR,t?r=i.NEAREST_MIPMAP_LINEAR:r=i.NEAREST;break;case 2:s=i.LINEAR,r=i.LINEAR;break;case 12:s=i.LINEAR,r=i.NEAREST;break}return{min:r,mag:s}}_createTexture(){const e=this._gl.createTexture();if(!e)throw new Error("Unable to create texture");return e}_createHardwareTexture(){return new tr(this._createTexture(),this._gl)}_createInternalTexture(e,t,i=!0,s=Ne.Unknown){var r;let n=!1,a=0,o=3,h=5,l=!1,u=1;t!==void 0&&typeof t=="object"?(n=!!t.generateMipMaps,a=t.type===void 0?0:t.type,o=t.samplingMode===void 0?3:t.samplingMode,h=t.format===void 0?5:t.format,l=t.useSRGBBuffer===void 0?!1:t.useSRGBBuffer,u=(r=t.samples)!==null&&r!==void 0?r:1):n=!!t,l&&(l=this._caps.supportSRGBBuffers&&(this.webGLVersion>1||this.isWebGPU)),(a===1&&!this._caps.textureFloatLinearFiltering||a===2&&!this._caps.textureHalfFloatLinearFiltering)&&(o=1),a===1&&!this._caps.textureFloat&&(a=0,O.Warn("Float textures are not supported. Type forced to TEXTURETYPE_UNSIGNED_BYTE"));const d=this._gl,f=new Ot(this,s),_=e.width||e,E=e.height||e,m=e.layers||0,v=this._getSamplingParameters(o,n),S=m!==0?d.TEXTURE_2D_ARRAY:d.TEXTURE_2D,y=this._getRGBABufferInternalSizedFormat(a,h,l),A=this._getInternalFormat(h),C=this._getWebGLTextureType(a);return this._bindTextureDirectly(S,f),m!==0?(f.is2DArray=!0,d.texImage3D(S,0,y,_,E,m,0,A,C,null)):d.texImage2D(S,0,y,_,E,0,A,C,null),d.texParameteri(S,d.TEXTURE_MAG_FILTER,v.mag),d.texParameteri(S,d.TEXTURE_MIN_FILTER,v.min),d.texParameteri(S,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(S,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),n&&this._gl.generateMipmap(S),this._bindTextureDirectly(S,null),f._useSRGBBuffer=l,f.baseWidth=_,f.baseHeight=E,f.width=_,f.height=E,f.depth=m,f.isReady=!0,f.samples=u,f.generateMipMaps=n,f.samplingMode=o,f.type=a,f.format=h,this._internalTexturesCache.push(f),f}_getUseSRGBBuffer(e,t){return e&&this._caps.supportSRGBBuffers&&(this.webGLVersion>1||this.isWebGPU||t)}_createTextureBase(e,t,i,s,r=3,n=null,a=null,o,h,l=null,u=null,d=null,f=null,_,E,m){e=e||"";const v=e.substr(0,5)==="data:",S=e.substr(0,5)==="blob:",y=v&&e.indexOf(";base64,")!==-1,A=u||new Ot(this,Ne.Url),C=e;this._transformTextureUrl&&!y&&!u&&!l&&(e=this._transformTextureUrl(e)),C!==e&&(A._originalUrl=C);const b=e.lastIndexOf(".");let M=f||(b>-1?e.substring(b).toLowerCase():""),L=null;M.indexOf("?")>-1&&(M=M.split("?")[0]);for(const ce of oe._TextureLoaders)if(ce.canLoad(M,_)){L=ce;break}s&&s.addPendingData(A),A.url=e,A.generateMipMaps=!t,A.samplingMode=r,A.invertY=i,A._useSRGBBuffer=this._getUseSRGBBuffer(!!m,t),this._doNotHandleContextLost||(A._buffer=l);let w=null;n&&!u&&(w=A.onLoadedObservable.add(n)),u||this._internalTexturesCache.push(A);const de=(ce,se)=>{s&&s.removePendingData(A),e===C?(w&&A.onLoadedObservable.remove(w),fe.UseFallbackTexture&&this._createTextureBase(fe.FallbackTexture,t,A.invertY,s,r,null,a,o,h,l,A),ce=(ce||"Unknown error")+(fe.UseFallbackTexture?" - Fallback texture was used":""),A.onErrorObservable.notifyObservers({message:ce,exception:se}),a&&a(ce,se)):(O.Warn(`Failed to load ${e}, falling back to ${C}`),this._createTextureBase(C,t,A.invertY,s,r,n,a,o,h,l,A,d,f,_,E,m))};if(L){const ce=se=>{L.loadData(se,A,(te,Fe,we,He,Ke,Ye)=>{Ye?de("TextureLoader failed to load data"):o(A,M,s,{width:te,height:Fe},A.invertY,!we,He,()=>(Ke(),!1),r)},E)};l?l instanceof ArrayBuffer?ce(new Uint8Array(l)):ArrayBuffer.isView(l)?ce(l):a&&a("Unable to load: only ArrayBuffer or ArrayBufferView is supported",null):this._loadFile(e,se=>ce(new Uint8Array(se)),void 0,s?s.offlineProvider:void 0,!0,(se,te)=>{de("Unable to load "+(se&&se.responseURL,te))})}else{const ce=se=>{S&&!this._doNotHandleContextLost&&(A._buffer=se),o(A,M,s,se,A.invertY,t,!1,h,r)};!v||y?l&&(typeof l.decoding=="string"||l.close)?ce(l):oe._FileToolsLoadImage(e,ce,de,s?s.offlineProvider:null,_,A.invertY&&this._features.needsInvertingBitmap?{imageOrientation:"flipY"}:void 0):typeof l=="string"||l instanceof ArrayBuffer||ArrayBuffer.isView(l)||l instanceof Blob?oe._FileToolsLoadImage(l,ce,de,s?s.offlineProvider:null,_,A.invertY&&this._features.needsInvertingBitmap?{imageOrientation:"flipY"}:void 0):l&&ce(l)}return A}createTexture(e,t,i,s,r=3,n=null,a=null,o=null,h=null,l=null,u=null,d,f,_,E){return this._createTextureBase(e,t,i,s,r,n,a,this._prepareWebGLTexture.bind(this),(m,v,S,y,A,C)=>{const b=this._gl,M=S.width===m&&S.height===v,L=l?this._getInternalFormat(l,A._useSRGBBuffer):y===".jpg"&&!A._useSRGBBuffer?b.RGB:A._useSRGBBuffer?b.SRGB8_ALPHA8:b.RGBA;let k=l?this._getInternalFormat(l):y===".jpg"&&!A._useSRGBBuffer?b.RGB:b.RGBA;if(A._useSRGBBuffer&&this.webGLVersion===1&&(k=L),M)return b.texImage2D(b.TEXTURE_2D,0,L,k,b.UNSIGNED_BYTE,S),!1;const w=this._caps.maxTextureSize;if(S.width>w||S.height>w||!this._supportsHardwareTextureRescaling)return this._prepareWorkingCanvas(),!this._workingCanvas||!this._workingContext||(this._workingCanvas.width=m,this._workingCanvas.height=v,this._workingContext.drawImage(S,0,0,S.width,S.height,0,0,m,v),b.texImage2D(b.TEXTURE_2D,0,L,k,b.UNSIGNED_BYTE,this._workingCanvas),A.width=m,A.height=v),!1;{const de=new Ot(this,Ne.Temp);this._bindTextureDirectly(b.TEXTURE_2D,de,!0),b.texImage2D(b.TEXTURE_2D,0,L,k,b.UNSIGNED_BYTE,S),this._rescaleTexture(de,A,s,L,()=>{this._releaseTexture(de),this._bindTextureDirectly(b.TEXTURE_2D,A,!0),C()})}return!0},o,h,l,u,d,f,E)}static _FileToolsLoadImage(e,t,i,s,r,n){throw $("FileTools")}_rescaleTexture(e,t,i,s,r){}createRawTexture(e,t,i,s,r,n,a,o=null,h=0,l=0,u=!1){throw $("Engine.RawTexture")}createRawCubeTexture(e,t,i,s,r,n,a,o=null){throw $("Engine.RawTexture")}createRawTexture3D(e,t,i,s,r,n,a,o,h=null,l=0){throw $("Engine.RawTexture")}createRawTexture2DArray(e,t,i,s,r,n,a,o,h=null,l=0){throw $("Engine.RawTexture")}_unpackFlipY(e){this._unpackFlipYCached!==e&&(this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL,e?1:0),this.enableUnpackFlipYCached&&(this._unpackFlipYCached=e))}_getUnpackAlignement(){return this._gl.getParameter(this._gl.UNPACK_ALIGNMENT)}_getTextureTarget(e){return e.isCube?this._gl.TEXTURE_CUBE_MAP:e.is3D?this._gl.TEXTURE_3D:e.is2DArray||e.isMultiview?this._gl.TEXTURE_2D_ARRAY:this._gl.TEXTURE_2D}updateTextureSamplingMode(e,t,i=!1){const s=this._getTextureTarget(t),r=this._getSamplingParameters(e,t.generateMipMaps||i);this._setTextureParameterInteger(s,this._gl.TEXTURE_MAG_FILTER,r.mag,t),this._setTextureParameterInteger(s,this._gl.TEXTURE_MIN_FILTER,r.min),i&&(t.generateMipMaps=!0,this._gl.generateMipmap(s)),this._bindTextureDirectly(s,null),t.samplingMode=e}updateTextureDimensions(e,t,i,s=1){}updateTextureWrappingMode(e,t,i=null,s=null){const r=this._getTextureTarget(e);t!==null&&(this._setTextureParameterInteger(r,this._gl.TEXTURE_WRAP_S,this._getTextureWrapMode(t),e),e._cachedWrapU=t),i!==null&&(this._setTextureParameterInteger(r,this._gl.TEXTURE_WRAP_T,this._getTextureWrapMode(i),e),e._cachedWrapV=i),(e.is2DArray||e.is3D)&&s!==null&&(this._setTextureParameterInteger(r,this._gl.TEXTURE_WRAP_R,this._getTextureWrapMode(s),e),e._cachedWrapR=s),this._bindTextureDirectly(r,null)}_setupDepthStencilTexture(e,t,i,s,r,n=1){const a=t.width||t,o=t.height||t,h=t.layers||0;e.baseWidth=a,e.baseHeight=o,e.width=a,e.height=o,e.is2DArray=h>0,e.depth=h,e.isReady=!0,e.samples=n,e.generateMipMaps=!1,e.samplingMode=s?2:1,e.type=0,e._comparisonFunction=r;const l=this._gl,u=this._getTextureTarget(e),d=this._getSamplingParameters(e.samplingMode,!1);l.texParameteri(u,l.TEXTURE_MAG_FILTER,d.mag),l.texParameteri(u,l.TEXTURE_MIN_FILTER,d.min),l.texParameteri(u,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(u,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),this.webGLVersion>1&&(r===0?(l.texParameteri(u,l.TEXTURE_COMPARE_FUNC,515),l.texParameteri(u,l.TEXTURE_COMPARE_MODE,l.NONE)):(l.texParameteri(u,l.TEXTURE_COMPARE_FUNC,r),l.texParameteri(u,l.TEXTURE_COMPARE_MODE,l.COMPARE_REF_TO_TEXTURE)))}_uploadCompressedDataToTextureDirectly(e,t,i,s,r,n=0,a=0){const o=this._gl;let h=o.TEXTURE_2D;if(e.isCube&&(h=o.TEXTURE_CUBE_MAP_POSITIVE_X+n),e._useSRGBBuffer)switch(t){case 37492:case 36196:this._caps.etc2?t=o.COMPRESSED_SRGB8_ETC2:e._useSRGBBuffer=!1;break;case 37496:this._caps.etc2?t=o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:e._useSRGBBuffer=!1;break;case 36492:t=o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT;break;case 37808:t=o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;break;case 33776:this._caps.s3tc_srgb?t=o.COMPRESSED_SRGB_S3TC_DXT1_EXT:e._useSRGBBuffer=!1;break;case 33777:this._caps.s3tc_srgb?t=o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT:e._useSRGBBuffer=!1;break;case 33779:this._caps.s3tc_srgb?t=o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT:e._useSRGBBuffer=!1;break;default:e._useSRGBBuffer=!1;break}this._gl.compressedTexImage2D(h,a,t,i,s,0,r)}_uploadDataToTextureDirectly(e,t,i=0,s=0,r,n=!1){const a=this._gl,o=this._getWebGLTextureType(e.type),h=this._getInternalFormat(e.format),l=r===void 0?this._getRGBABufferInternalSizedFormat(e.type,e.format,e._useSRGBBuffer):this._getInternalFormat(r,e._useSRGBBuffer);this._unpackFlipY(e.invertY);let u=a.TEXTURE_2D;e.isCube&&(u=a.TEXTURE_CUBE_MAP_POSITIVE_X+i);const d=Math.round(Math.log(e.width)*Math.LOG2E),f=Math.round(Math.log(e.height)*Math.LOG2E),_=n?e.width:Math.pow(2,Math.max(d-s,0)),E=n?e.height:Math.pow(2,Math.max(f-s,0));a.texImage2D(u,s,l,_,E,0,h,o,t)}updateTextureData(e,t,i,s,r,n,a=0,o=0,h=!1){const l=this._gl,u=this._getWebGLTextureType(e.type),d=this._getInternalFormat(e.format);this._unpackFlipY(e.invertY);let f=l.TEXTURE_2D,_=l.TEXTURE_2D;e.isCube&&(_=l.TEXTURE_CUBE_MAP_POSITIVE_X+a,f=l.TEXTURE_CUBE_MAP),this._bindTextureDirectly(f,e,!0),l.texSubImage2D(_,o,i,s,r,n,d,u,t),h&&this._gl.generateMipmap(_),this._bindTextureDirectly(f,null)}_uploadArrayBufferViewToTexture(e,t,i=0,s=0){const r=this._gl,n=e.isCube?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D;this._bindTextureDirectly(n,e,!0),this._uploadDataToTextureDirectly(e,t,i,s),this._bindTextureDirectly(n,null,!0)}_prepareWebGLTextureContinuation(e,t,i,s,r){const n=this._gl;if(!n)return;const a=this._getSamplingParameters(r,!i);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,a.mag),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,a.min),!i&&!s&&n.generateMipmap(n.TEXTURE_2D),this._bindTextureDirectly(n.TEXTURE_2D,null),t&&t.removePendingData(e),e.onLoadedObservable.notifyObservers(e),e.onLoadedObservable.clear()}_prepareWebGLTexture(e,t,i,s,r,n,a,o,h=3){const l=this.getCaps().maxTextureSize,u=Math.min(l,this.needPOTTextures?oe.GetExponentOfTwo(s.width,l):s.width),d=Math.min(l,this.needPOTTextures?oe.GetExponentOfTwo(s.height,l):s.height),f=this._gl;if(f){if(!e._hardwareTexture){i&&i.removePendingData(e);return}this._bindTextureDirectly(f.TEXTURE_2D,e,!0),this._unpackFlipY(r===void 0?!0:!!r),e.baseWidth=s.width,e.baseHeight=s.height,e.width=u,e.height=d,e.isReady=!0,!o(u,d,s,t,e,()=>{this._prepareWebGLTextureContinuation(e,i,n,a,h)})&&this._prepareWebGLTextureContinuation(e,i,n,a,h)}}_setupFramebufferDepthAttachments(e,t,i,s,r=1){const n=this._gl;if(e&&t)return this._createRenderBuffer(i,s,r,n.DEPTH_STENCIL,n.DEPTH24_STENCIL8,n.DEPTH_STENCIL_ATTACHMENT);if(t){let a=n.DEPTH_COMPONENT16;return this._webGLVersion>1&&(a=n.DEPTH_COMPONENT32F),this._createRenderBuffer(i,s,r,a,a,n.DEPTH_ATTACHMENT)}return e?this._createRenderBuffer(i,s,r,n.STENCIL_INDEX8,n.STENCIL_INDEX8,n.STENCIL_ATTACHMENT):null}_createRenderBuffer(e,t,i,s,r,n,a=!0){const h=this._gl.createRenderbuffer();return this._updateRenderBuffer(h,e,t,i,s,r,n,a)}_updateRenderBuffer(e,t,i,s,r,n,a,o=!0){const h=this._gl;return h.bindRenderbuffer(h.RENDERBUFFER,e),s>1&&h.renderbufferStorageMultisample?h.renderbufferStorageMultisample(h.RENDERBUFFER,s,n,t,i):h.renderbufferStorage(h.RENDERBUFFER,r,t,i),h.framebufferRenderbuffer(h.FRAMEBUFFER,a,h.RENDERBUFFER,e),o&&h.bindRenderbuffer(h.RENDERBUFFER,null),e}_releaseTexture(e){var t;this._deleteTexture((t=e._hardwareTexture)===null||t===void 0?void 0:t.underlyingResource),this.unbindAllTextures();const i=this._internalTexturesCache.indexOf(e);i!==-1&&this._internalTexturesCache.splice(i,1),e._lodTextureHigh&&e._lodTextureHigh.dispose(),e._lodTextureMid&&e._lodTextureMid.dispose(),e._lodTextureLow&&e._lodTextureLow.dispose(),e._irradianceTexture&&e._irradianceTexture.dispose()}_releaseRenderTargetWrapper(e){const t=this._renderTargetWrapperCache.indexOf(e);t!==-1&&this._renderTargetWrapperCache.splice(t,1)}_deleteTexture(e){e&&this._gl.deleteTexture(e)}_setProgram(e){this._currentProgram!==e&&(this._gl.useProgram(e),this._currentProgram=e)}bindSamplers(e){const t=e.getPipelineContext();this._setProgram(t.program);const i=e.getSamplers();for(let s=0;s<i.length;s++){const r=e.getUniform(i[s]);r&&(this._boundUniforms[s]=r)}this._currentEffect=null}_activateCurrentTexture(){this._currentTextureChannel!==this._activeChannel&&(this._gl.activeTexture(this._gl.TEXTURE0+this._activeChannel),this._currentTextureChannel=this._activeChannel)}_bindTextureDirectly(e,t,i=!1,s=!1){var r,n;let a=!1;const o=t&&t._associatedChannel>-1;if(i&&o&&(this._activeChannel=t._associatedChannel),this._boundTexturesCache[this._activeChannel]!==t||s){if(this._activateCurrentTexture(),t&&t.isMultiview)throw console.error(e,t),"_bindTextureDirectly called with a multiview texture!";this._gl.bindTexture(e,(n=(r=t==null?void 0:t._hardwareTexture)===null||r===void 0?void 0:r.underlyingResource)!==null&&n!==void 0?n:null),this._boundTexturesCache[this._activeChannel]=t,t&&(t._associatedChannel=this._activeChannel)}else i&&(a=!0,this._activateCurrentTexture());return o&&!i&&this._bindSamplerUniformToChannel(t._associatedChannel,this._activeChannel),a}_bindTexture(e,t,i){if(e===void 0)return;t&&(t._associatedChannel=e),this._activeChannel=e;const s=t?this._getTextureTarget(t):this._gl.TEXTURE_2D;this._bindTextureDirectly(s,t)}unbindAllTextures(){for(let e=0;e<this._maxSimultaneousTextures;e++)this._activeChannel=e,this._bindTextureDirectly(this._gl.TEXTURE_2D,null),this._bindTextureDirectly(this._gl.TEXTURE_CUBE_MAP,null),this.webGLVersion>1&&(this._bindTextureDirectly(this._gl.TEXTURE_3D,null),this._bindTextureDirectly(this._gl.TEXTURE_2D_ARRAY,null))}setTexture(e,t,i,s){e!==void 0&&(t&&(this._boundUniforms[e]=t),this._setTexture(e,i))}_bindSamplerUniformToChannel(e,t){const i=this._boundUniforms[e];!i||i._currentState===t||(this._gl.uniform1i(i,t),i._currentState=t)}_getTextureWrapMode(e){switch(e){case 1:return this._gl.REPEAT;case 0:return this._gl.CLAMP_TO_EDGE;case 2:return this._gl.MIRRORED_REPEAT}return this._gl.REPEAT}_setTexture(e,t,i=!1,s=!1,r=""){if(!t)return this._boundTexturesCache[e]!=null&&(this._activeChannel=e,this._bindTextureDirectly(this._gl.TEXTURE_2D,null),this._bindTextureDirectly(this._gl.TEXTURE_CUBE_MAP,null),this.webGLVersion>1&&(this._bindTextureDirectly(this._gl.TEXTURE_3D,null),this._bindTextureDirectly(this._gl.TEXTURE_2D_ARRAY,null))),!1;if(t.video)this._activeChannel=e,t.update();else if(t.delayLoadState===4)return t.delayLoad(),!1;let n;s?n=t.depthStencilTexture:t.isReady()?n=t.getInternalTexture():t.isCube?n=this.emptyCubeTexture:t.is3D?n=this.emptyTexture3D:t.is2DArray?n=this.emptyTexture2DArray:n=this.emptyTexture,!i&&n&&(n._associatedChannel=e);let a=!0;this._boundTexturesCache[e]===n&&(i||this._bindSamplerUniformToChannel(n._associatedChannel,e),a=!1),this._activeChannel=e;const o=this._getTextureTarget(n);if(a&&this._bindTextureDirectly(o,n,i),n&&!n.isMultiview){if(n.isCube&&n._cachedCoordinatesMode!==t.coordinatesMode){n._cachedCoordinatesMode=t.coordinatesMode;const h=t.coordinatesMode!==3&&t.coordinatesMode!==5?1:0;t.wrapU=h,t.wrapV=h}n._cachedWrapU!==t.wrapU&&(n._cachedWrapU=t.wrapU,this._setTextureParameterInteger(o,this._gl.TEXTURE_WRAP_S,this._getTextureWrapMode(t.wrapU),n)),n._cachedWrapV!==t.wrapV&&(n._cachedWrapV=t.wrapV,this._setTextureParameterInteger(o,this._gl.TEXTURE_WRAP_T,this._getTextureWrapMode(t.wrapV),n)),n.is3D&&n._cachedWrapR!==t.wrapR&&(n._cachedWrapR=t.wrapR,this._setTextureParameterInteger(o,this._gl.TEXTURE_WRAP_R,this._getTextureWrapMode(t.wrapR),n)),this._setAnisotropicLevel(o,n,t.anisotropicFilteringLevel)}return!0}setTextureArray(e,t,i,s){if(!(e===void 0||!t)){(!this._textureUnits||this._textureUnits.length!==i.length)&&(this._textureUnits=new Int32Array(i.length));for(let r=0;r<i.length;r++){const n=i[r].getInternalTexture();n?(this._textureUnits[r]=e+r,n._associatedChannel=e+r):this._textureUnits[r]=-1}this._gl.uniform1iv(t,this._textureUnits);for(let r=0;r<i.length;r++)this._setTexture(this._textureUnits[r],i[r],!0)}}_setAnisotropicLevel(e,t,i){const s=this._caps.textureAnisotropicFilterExtension;t.samplingMode!==11&&t.samplingMode!==3&&t.samplingMode!==2&&(i=1),s&&t._cachedAnisotropicFilteringLevel!==i&&(this._setTextureParameterFloat(e,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(i,this._caps.maxAnisotropy),t),t._cachedAnisotropicFilteringLevel=i)}_setTextureParameterFloat(e,t,i,s){this._bindTextureDirectly(e,s,!0,!0),this._gl.texParameterf(e,t,i)}_setTextureParameterInteger(e,t,i,s){s&&this._bindTextureDirectly(e,s,!0,!0),this._gl.texParameteri(e,t,i)}unbindAllAttributes(){if(this._mustWipeVertexAttributes){this._mustWipeVertexAttributes=!1;for(let e=0;e<this._caps.maxVertexAttribs;e++)this.disableAttributeByIndex(e);return}for(let e=0,t=this._vertexAttribArraysEnabled.length;e<t;e++)e>=this._caps.maxVertexAttribs||!this._vertexAttribArraysEnabled[e]||this.disableAttributeByIndex(e)}releaseEffects(){for(const e in this._compiledEffects){const t=this._compiledEffects[e].getPipelineContext();this._deletePipelineContext(t)}this._compiledEffects={}}dispose(){var e;this.stopRenderLoop(),this.onBeforeTextureInitObservable&&this.onBeforeTextureInitObservable.clear(),this._emptyTexture&&(this._releaseTexture(this._emptyTexture),this._emptyTexture=null),this._emptyCubeTexture&&(this._releaseTexture(this._emptyCubeTexture),this._emptyCubeTexture=null),this._dummyFramebuffer&&this._gl.deleteFramebuffer(this._dummyFramebuffer),this.releaseEffects(),(e=this.releaseComputeEffects)===null||e===void 0||e.call(this),this.unbindAllAttributes(),this._boundUniforms={},je()&&this._renderingCanvas&&(this._doNotHandleContextLost||(this._renderingCanvas.removeEventListener("webglcontextlost",this._onContextLost),this._renderingCanvas.removeEventListener("webglcontextrestored",this._onContextRestored)),window.removeEventListener("resize",this._checkForMobile)),this._workingCanvas=null,this._workingContext=null,this._currentBufferPointers.length=0,this._renderingCanvas=null,this._currentProgram=null,this._boundRenderFunction=null,Pe.ResetCache();for(const t of this._activeRequests)t.abort();this.onDisposeObservable.notifyObservers(this),this.onDisposeObservable.clear()}attachContextLostEvent(e){this._renderingCanvas&&this._renderingCanvas.addEventListener("webglcontextlost",e,!1)}attachContextRestoredEvent(e){this._renderingCanvas&&this._renderingCanvas.addEventListener("webglcontextrestored",e,!1)}getError(){return this._gl.getError()}_canRenderToFloatFramebuffer(){return this._webGLVersion>1?this._caps.colorBufferFloat:this._canRenderToFramebuffer(1)}_canRenderToHalfFloatFramebuffer(){return this._webGLVersion>1?this._caps.colorBufferFloat:this._canRenderToFramebuffer(2)}_canRenderToFramebuffer(e){const t=this._gl;for(;t.getError()!==t.NO_ERROR;);let i=!0;const s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,this._getRGBABufferInternalSizedFormat(e),1,1,0,t.RGBA,this._getWebGLTextureType(e),null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);const n=t.checkFramebufferStatus(t.FRAMEBUFFER);if(i=i&&n===t.FRAMEBUFFER_COMPLETE,i=i&&t.getError()===t.NO_ERROR,i&&(t.clear(t.COLOR_BUFFER_BIT),i=i&&t.getError()===t.NO_ERROR),i){t.bindFramebuffer(t.FRAMEBUFFER,null);const a=t.RGBA,o=t.UNSIGNED_BYTE,h=new Uint8Array(4);t.readPixels(0,0,1,1,a,o,h),i=i&&t.getError()===t.NO_ERROR}for(t.deleteTexture(s),t.deleteFramebuffer(r),t.bindFramebuffer(t.FRAMEBUFFER,null);!i&&t.getError()!==t.NO_ERROR;);return i}_getWebGLTextureType(e){if(this._webGLVersion===1){switch(e){case 1:return this._gl.FLOAT;case 2:return this._gl.HALF_FLOAT_OES;case 0:return this._gl.UNSIGNED_BYTE;case 8:return this._gl.UNSIGNED_SHORT_4_4_4_4;case 9:return this._gl.UNSIGNED_SHORT_5_5_5_1;case 10:return this._gl.UNSIGNED_SHORT_5_6_5}return this._gl.UNSIGNED_BYTE}switch(e){case 3:return this._gl.BYTE;case 0:return this._gl.UNSIGNED_BYTE;case 4:return this._gl.SHORT;case 5:return this._gl.UNSIGNED_SHORT;case 6:return this._gl.INT;case 7:return this._gl.UNSIGNED_INT;case 1:return this._gl.FLOAT;case 2:return this._gl.HALF_FLOAT;case 8:return this._gl.UNSIGNED_SHORT_4_4_4_4;case 9:return this._gl.UNSIGNED_SHORT_5_5_5_1;case 10:return this._gl.UNSIGNED_SHORT_5_6_5;case 11:return this._gl.UNSIGNED_INT_2_10_10_10_REV;case 12:return this._gl.UNSIGNED_INT_24_8;case 13:return this._gl.UNSIGNED_INT_10F_11F_11F_REV;case 14:return this._gl.UNSIGNED_INT_5_9_9_9_REV;case 15:return this._gl.FLOAT_32_UNSIGNED_INT_24_8_REV}return this._gl.UNSIGNED_BYTE}_getInternalFormat(e,t=!1){let i=t?this._gl.SRGB8_ALPHA8:this._gl.RGBA;switch(e){case 0:i=this._gl.ALPHA;break;case 1:i=this._gl.LUMINANCE;break;case 2:i=this._gl.LUMINANCE_ALPHA;break;case 6:i=this._gl.RED;break;case 7:i=this._gl.RG;break;case 4:i=t?this._gl.SRGB:this._gl.RGB;break;case 5:i=t?this._gl.SRGB8_ALPHA8:this._gl.RGBA;break}if(this._webGLVersion>1)switch(e){case 8:i=this._gl.RED_INTEGER;break;case 9:i=this._gl.RG_INTEGER;break;case 10:i=this._gl.RGB_INTEGER;break;case 11:i=this._gl.RGBA_INTEGER;break}return i}_getRGBABufferInternalSizedFormat(e,t,i=!1){if(this._webGLVersion===1){if(t!==void 0)switch(t){case 0:return this._gl.ALPHA;case 1:return this._gl.LUMINANCE;case 2:return this._gl.LUMINANCE_ALPHA;case 4:return i?this._gl.SRGB:this._gl.RGB}return this._gl.RGBA}switch(e){case 3:switch(t){case 6:return this._gl.R8_SNORM;case 7:return this._gl.RG8_SNORM;case 4:return this._gl.RGB8_SNORM;case 8:return this._gl.R8I;case 9:return this._gl.RG8I;case 10:return this._gl.RGB8I;case 11:return this._gl.RGBA8I;default:return this._gl.RGBA8_SNORM}case 0:switch(t){case 6:return this._gl.R8;case 7:return this._gl.RG8;case 4:return i?this._gl.SRGB8:this._gl.RGB8;case 5:return i?this._gl.SRGB8_ALPHA8:this._gl.RGBA8;case 8:return this._gl.R8UI;case 9:return this._gl.RG8UI;case 10:return this._gl.RGB8UI;case 11:return this._gl.RGBA8UI;case 0:return this._gl.ALPHA;case 1:return this._gl.LUMINANCE;case 2:return this._gl.LUMINANCE_ALPHA;default:return this._gl.RGBA8}case 4:switch(t){case 8:return this._gl.R16I;case 9:return this._gl.RG16I;case 10:return this._gl.RGB16I;case 11:return this._gl.RGBA16I;default:return this._gl.RGBA16I}case 5:switch(t){case 8:return this._gl.R16UI;case 9:return this._gl.RG16UI;case 10:return this._gl.RGB16UI;case 11:return this._gl.RGBA16UI;default:return this._gl.RGBA16UI}case 6:switch(t){case 8:return this._gl.R32I;case 9:return this._gl.RG32I;case 10:return this._gl.RGB32I;case 11:return this._gl.RGBA32I;default:return this._gl.RGBA32I}case 7:switch(t){case 8:return this._gl.R32UI;case 9:return this._gl.RG32UI;case 10:return this._gl.RGB32UI;case 11:return this._gl.RGBA32UI;default:return this._gl.RGBA32UI}case 1:switch(t){case 6:return this._gl.R32F;case 7:return this._gl.RG32F;case 4:return this._gl.RGB32F;case 5:return this._gl.RGBA32F;default:return this._gl.RGBA32F}case 2:switch(t){case 6:return this._gl.R16F;case 7:return this._gl.RG16F;case 4:return this._gl.RGB16F;case 5:return this._gl.RGBA16F;default:return this._gl.RGBA16F}case 10:return this._gl.RGB565;case 13:return this._gl.R11F_G11F_B10F;case 14:return this._gl.RGB9_E5;case 8:return this._gl.RGBA4;case 9:return this._gl.RGB5_A1;case 11:switch(t){case 5:return this._gl.RGB10_A2;case 11:return this._gl.RGB10_A2UI;default:return this._gl.RGB10_A2}}return i?this._gl.SRGB8_ALPHA8:this._gl.RGBA8}_getRGBAMultiSampleBufferFormat(e){return e===1?this._gl.RGBA32F:e===2?this._gl.RGBA16F:this._gl.RGBA8}_loadFile(e,t,i,s,r,n){const a=oe._FileToolsLoadFile(e,t,i,s,r,n);return this._activeRequests.push(a),a.onCompleteObservable.add(o=>{this._activeRequests.splice(this._activeRequests.indexOf(o),1)}),a}static _FileToolsLoadFile(e,t,i,s,r,n){throw $("FileTools")}readPixels(e,t,i,s,r=!0,n=!0){const a=r?4:3,o=r?this._gl.RGBA:this._gl.RGB,h=new Uint8Array(s*i*a);return n&&this.flushFramebuffer(),this._gl.readPixels(e,t,i,s,o,this._gl.UNSIGNED_BYTE,h),Promise.resolve(h)}static get IsSupportedAsync(){return Promise.resolve(this.isSupported())}static get IsSupported(){return this.isSupported()}static isSupported(){if(this._HasMajorPerformanceCaveat!==null)return!this._HasMajorPerformanceCaveat;if(this._IsSupported===null)try{const e=this._CreateCanvas(1,1),t=e.getContext("webgl")||e.getContext("experimental-webgl");this._IsSupported=t!=null&&!!window.WebGLRenderingContext}catch{this._IsSupported=!1}return this._IsSupported}static get HasMajorPerformanceCaveat(){if(this._HasMajorPerformanceCaveat===null)try{const e=this._CreateCanvas(1,1),t=e.getContext("webgl",{failIfMajorPerformanceCaveat:!0})||e.getContext("experimental-webgl",{failIfMajorPerformanceCaveat:!0});this._HasMajorPerformanceCaveat=!t}catch{this._HasMajorPerformanceCaveat=!1}return this._HasMajorPerformanceCaveat}static CeilingPOT(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,e++,e}static FloorPOT(e){return e=e|e>>1,e=e|e>>2,e=e|e>>4,e=e|e>>8,e=e|e>>16,e-(e>>1)}static NearestPOT(e){const t=oe.CeilingPOT(e),i=oe.FloorPOT(e);return t-e>e-i?i:t}static GetExponentOfTwo(e,t,i=2){let s;switch(i){case 1:s=oe.FloorPOT(e);break;case 2:s=oe.NearestPOT(e);break;case 3:default:s=oe.CeilingPOT(e);break}return Math.min(s,t)}static QueueNewFrame(e,t){if(je()){const{requestPostAnimationFrame:i,requestAnimationFrame:s}=t||window;if(typeof i=="function")return i(e);if(typeof s=="function")return s(e)}else if(typeof requestAnimationFrame=="function")return requestAnimationFrame(e);return setTimeout(e,16)}getHostDocument(){return this._renderingCanvas&&this._renderingCanvas.ownerDocument?this._renderingCanvas.ownerDocument:Ci()?document:null}}oe.ExceptionList=[{key:"Chrome/63.0",capture:"63\\.0\\.3239\\.(\\d+)",captureConstraint:108,targets:["uniformBuffer"]},{key:"Firefox/58",capture:null,captureConstraint:null,targets:["uniformBuffer"]},{key:"Firefox/59",capture:null,captureConstraint:null,targets:["uniformBuffer"]},{key:"Chrome/72.+?Mobile",capture:null,captureConstraint:null,targets:["vao"]},{key:"Chrome/73.+?Mobile",capture:null,captureConstraint:null,targets:["vao"]},{key:"Chrome/74.+?Mobile",capture:null,captureConstraint:null,targets:["vao"]},{key:"Mac OS.+Chrome/71",capture:null,captureConstraint:null,targets:["vao"]},{key:"Mac OS.+Chrome/72",capture:null,captureConstraint:null,targets:["vao"]},{key:"Mac OS.+Chrome",capture:null,captureConstraint:null,targets:["uniformBuffer"]},{key:".*AppleWebKit.*(15.4).*Safari",capture:null,captureConstraint:null,targets:["antialias","maxMSAASamples"]},{key:".*(15.4).*AppleWebKit.*Safari",capture:null,captureConstraint:null,targets:["antialias","maxMSAASamples"]}],oe._TextureLoaders=[],oe.CollisionsEpsilon=.001,oe._IsSupported=null,oe._HasMajorPerformanceCaveat=null;class dn{constructor(e=30){this._enabled=!0,this._rollingFrameTime=new fn(e)}sampleFrame(e=ai.Now){if(this._enabled){if(this._lastFrameTimeMs!=null){const t=e-this._lastFrameTimeMs;this._rollingFrameTime.add(t)}this._lastFrameTimeMs=e}}get averageFrameTime(){return this._rollingFrameTime.average}get averageFrameTimeVariance(){return this._rollingFrameTime.variance}get instantaneousFrameTime(){return this._rollingFrameTime.history(0)}get averageFPS(){return 1e3/this._rollingFrameTime.average}get instantaneousFPS(){const e=this._rollingFrameTime.history(0);return e===0?0:1e3/e}get isSaturated(){return this._rollingFrameTime.isSaturated()}enable(){this._enabled=!0}disable(){this._enabled=!1,this._lastFrameTimeMs=null}get isEnabled(){return this._enabled}reset(){this._lastFrameTimeMs=null,this._rollingFrameTime.reset()}}class fn{constructor(e){this._samples=new Array(e),this.reset()}add(e){let t;if(this.isSaturated()){const i=this._samples[this._pos];t=i-this.average,this.average-=t/(this._sampleCount-1),this._m2-=t*(i-this.average)}else this._sampleCount++;t=e-this.average,this.average+=t/this._sampleCount,this._m2+=t*(e-this.average),this.variance=this._m2/(this._sampleCount-1),this._samples[this._pos]=e,this._pos++,this._pos%=this._samples.length}history(e){if(e>=this._sampleCount||e>=this._samples.length)return 0;const t=this._wrapPosition(this._pos-1);return this._samples[this._wrapPosition(t-e)]}isSaturated(){return this._sampleCount>=this._samples.length}reset(){this.average=0,this.variance=0,this._sampleCount=0,this._pos=0,this._m2=0}_wrapPosition(e){const t=this._samples.length;return(e%t+t)%t}}class Rt{constructor(){this._startMonitoringTime=0,this._min=0,this._max=0,this._average=0,this._lastSecAverage=0,this._current=0,this._totalValueCount=0,this._totalAccumulated=0,this._lastSecAccumulated=0,this._lastSecTime=0,this._lastSecValueCount=0}get min(){return this._min}get max(){return this._max}get average(){return this._average}get lastSecAverage(){return this._lastSecAverage}get current(){return this._current}get total(){return this._totalAccumulated}get count(){return this._totalValueCount}fetchNewFrame(){this._totalValueCount++,this._current=0,this._lastSecValueCount++}addCount(e,t){Rt.Enabled&&(this._current+=e,t&&this._fetchResult())}beginMonitoring(){Rt.Enabled&&(this._startMonitoringTime=ai.Now)}endMonitoring(e=!0){if(!Rt.Enabled)return;e&&this.fetchNewFrame();const t=ai.Now;this._current=t-this._startMonitoringTime,e&&this._fetchResult()}_fetchResult(){this._totalAccumulated+=this._current,this._lastSecAccumulated+=this._current,this._min=Math.min(this._min,this._current),this._max=Math.max(this._max,this._current),this._average=this._totalAccumulated/this._totalValueCount;const e=ai.Now;e-this._lastSecTime>1e3&&(this._lastSecAverage=this._lastSecAccumulated/this._lastSecValueCount,this._lastSecTime=e,this._lastSecAccumulated=0,this._lastSecValueCount=0)}}Rt.Enabled=!0,oe.prototype.setAlphaConstants=function(c,e,t,i){this._alphaState.setAlphaBlendConstants(c,e,t,i)},oe.prototype.setAlphaMode=function(c,e=!1){if(this._alphaMode!==c){switch(c){case 0:this._alphaState.alphaBlend=!1;break;case 7:this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE,this._gl.ONE_MINUS_SRC_ALPHA,this._gl.ONE,this._gl.ONE),this._alphaState.alphaBlend=!0;break;case 8:this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE,this._gl.ONE_MINUS_SRC_ALPHA,this._gl.ONE,this._gl.ONE_MINUS_SRC_ALPHA),this._alphaState.alphaBlend=!0;break;case 2:this._alphaState.setAlphaBlendFunctionParameters(this._gl.SRC_ALPHA,this._gl.ONE_MINUS_SRC_ALPHA,this._gl.ONE,this._gl.ONE),this._alphaState.alphaBlend=!0;break;case 6:this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE,this._gl.ONE,this._gl.ZERO,this._gl.ONE),this._alphaState.alphaBlend=!0;break;case 1:this._alphaState.setAlphaBlendFunctionParameters(this._gl.SRC_ALPHA,this._gl.ONE,this._gl.ZERO,this._gl.ONE),this._alphaState.alphaBlend=!0;break;case 3:this._alphaState.setAlphaBlendFunctionParameters(this._gl.ZERO,this._gl.ONE_MINUS_SRC_COLOR,this._gl.ONE,this._gl.ONE),this._alphaState.alphaBlend=!0;break;case 4:this._alphaState.setAlphaBlendFunctionParameters(this._gl.DST_COLOR,this._gl.ZERO,this._gl.ONE,this._gl.ONE),this._alphaState.alphaBlend=!0;break;case 5:this._alphaState.setAlphaBlendFunctionParameters(this._gl.SRC_ALPHA,this._gl.ONE_MINUS_SRC_COLOR,this._gl.ONE,this._gl.ONE),this._alphaState.alphaBlend=!0;break;case 9:this._alphaState.setAlphaBlendFunctionParameters(this._gl.CONSTANT_COLOR,this._gl.ONE_MINUS_CONSTANT_COLOR,this._gl.CONSTANT_ALPHA,this._gl.ONE_MINUS_CONSTANT_ALPHA),this._alphaState.alphaBlend=!0;break;case 10:this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE,this._gl.ONE_MINUS_SRC_COLOR,this._gl.ONE,this._gl.ONE_MINUS_SRC_ALPHA),this._alphaState.alphaBlend=!0;break;case 11:this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE,this._gl.ONE,this._gl.ONE,this._gl.ONE),this._alphaState.alphaBlend=!0;break;case 12:this._alphaState.setAlphaBlendFunctionParameters(this._gl.DST_ALPHA,this._gl.ONE,this._gl.ZERO,this._gl.ZERO),this._alphaState.alphaBlend=!0;break;case 13:this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE_MINUS_DST_COLOR,this._gl.ONE_MINUS_SRC_COLOR,this._gl.ONE_MINUS_DST_ALPHA,this._gl.ONE_MINUS_SRC_ALPHA),this._alphaState.alphaBlend=!0;break;case 14:this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE,this._gl.ONE_MINUS_SRC_ALPHA,this._gl.ONE,this._gl.ONE_MINUS_SRC_ALPHA),this._alphaState.alphaBlend=!0;break;case 15:this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE,this._gl.ONE,this._gl.ONE,this._gl.ZERO),this._alphaState.alphaBlend=!0;break;case 16:this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE_MINUS_DST_COLOR,this._gl.ONE_MINUS_SRC_COLOR,this._gl.ZERO,this._gl.ONE),this._alphaState.alphaBlend=!0;break;case 17:this._alphaState.setAlphaBlendFunctionParameters(this._gl.SRC_ALPHA,this._gl.ONE_MINUS_SRC_ALPHA,this._gl.ONE,this._gl.ONE_MINUS_SRC_ALPHA),this._alphaState.alphaBlend=!0;break}e||(this.depthCullingState.depthMask=c===0),this._alphaMode=c}},oe.prototype.getAlphaMode=function(){return this._alphaMode},oe.prototype.setAlphaEquation=function(c){if(this._alphaEquation!==c){switch(c){case 0:this._alphaState.setAlphaEquationParameters(32774,32774);break;case 1:this._alphaState.setAlphaEquationParameters(32778,32778);break;case 2:this._alphaState.setAlphaEquationParameters(32779,32779);break;case 3:this._alphaState.setAlphaEquationParameters(32776,32776);break;case 4:this._alphaState.setAlphaEquationParameters(32775,32775);break;case 5:this._alphaState.setAlphaEquationParameters(32775,32774);break}this._alphaEquation=c}},oe.prototype.getAlphaEquation=function(){return this._alphaEquation};function _n(c,e,t=!1,i){switch(c){case 3:{const r=e instanceof ArrayBuffer?new Int8Array(e):new Int8Array(e);return i&&r.set(new Int8Array(i)),r}case 0:{const r=e instanceof ArrayBuffer?new Uint8Array(e):new Uint8Array(e);return i&&r.set(new Uint8Array(i)),r}case 4:{const r=e instanceof ArrayBuffer?new Int16Array(e):new Int16Array(t?e/2:e);return i&&r.set(new Int16Array(i)),r}case 5:case 8:case 9:case 10:case 2:{const r=e instanceof ArrayBuffer?new Uint16Array(e):new Uint16Array(t?e/2:e);return i&&r.set(new Uint16Array(i)),r}case 6:{const r=e instanceof ArrayBuffer?new Int32Array(e):new Int32Array(t?e/4:e);return i&&r.set(new Int32Array(i)),r}case 7:case 11:case 12:case 13:case 14:case 15:{const r=e instanceof ArrayBuffer?new Uint32Array(e):new Uint32Array(t?e/4:e);return i&&r.set(new Uint32Array(i)),r}case 1:{const r=e instanceof ArrayBuffer?new Float32Array(e):new Float32Array(t?e/4:e);return i&&r.set(new Float32Array(i)),r}}const s=e instanceof ArrayBuffer?new Uint8Array(e):new Uint8Array(e);return i&&s.set(new Uint8Array(i)),s}oe.prototype._readTexturePixelsSync=function(c,e,t,i=-1,s=0,r=null,n=!0,a=!1,o=0,h=0){var l,u;const d=this._gl;if(!d)throw new Error("Engine does not have gl rendering context.");if(!this._dummyFramebuffer){const _=d.createFramebuffer();if(!_)throw new Error("Unable to create dummy framebuffer");this._dummyFramebuffer=_}d.bindFramebuffer(d.FRAMEBUFFER,this._dummyFramebuffer),i>-1?d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_CUBE_MAP_POSITIVE_X+i,(l=c._hardwareTexture)===null||l===void 0?void 0:l.underlyingResource,s):d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,(u=c._hardwareTexture)===null||u===void 0?void 0:u.underlyingResource,s);let f=c.type!==void 0?this._getWebGLTextureType(c.type):d.UNSIGNED_BYTE;if(a)r||(r=_n(c.type,4*e*t));else switch(f){case d.UNSIGNED_BYTE:r||(r=new Uint8Array(4*e*t)),f=d.UNSIGNED_BYTE;break;default:r||(r=new Float32Array(4*e*t)),f=d.FLOAT;break}return n&&this.flushFramebuffer(),d.readPixels(o,h,e,t,d.RGBA,f,r),d.bindFramebuffer(d.FRAMEBUFFER,this._currentFramebuffer),r},oe.prototype._readTexturePixels=function(c,e,t,i=-1,s=0,r=null,n=!0,a=!1,o=0,h=0){return Promise.resolve(this._readTexturePixelsSync(c,e,t,i,s,r,n,a,o,h))},oe.prototype.updateDynamicIndexBuffer=function(c,e,t=0){this._currentBoundBuffer[this._gl.ELEMENT_ARRAY_BUFFER]=null,this.bindIndexBuffer(c);let i;c.is32Bits?i=e instanceof Uint32Array?e:new Uint32Array(e):i=e instanceof Uint16Array?e:new Uint16Array(e),this._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER,i,this._gl.DYNAMIC_DRAW),this._resetIndexBufferBinding()},oe.prototype.updateDynamicVertexBuffer=function(c,e,t,i){this.bindArrayBuffer(c),t===void 0&&(t=0);const s=e.byteLength||e.length;i===void 0||i>=s&&t===0?e instanceof Array?this._gl.bufferSubData(this._gl.ARRAY_BUFFER,t,new Float32Array(e)):this._gl.bufferSubData(this._gl.ARRAY_BUFFER,t,e):e instanceof Array?this._gl.bufferSubData(this._gl.ARRAY_BUFFER,0,new Float32Array(e).subarray(t,t+i)):(e instanceof ArrayBuffer?e=new Uint8Array(e,t,i):e=new Uint8Array(e.buffer,e.byteOffset+t,i),this._gl.bufferSubData(this._gl.ARRAY_BUFFER,0,e)),this._resetVertexBufferBinding()};class I extends oe{constructor(e,t,i,s=!1){if(super(e,t,i,s),this.enableOfflineSupport=!1,this.disableManifestCheck=!1,this.disableContextMenu=!0,this.scenes=new Array,this._virtualScenes=new Array,this.onNewSceneAddedObservable=new F,this.postProcesses=new Array,this.isPointerLock=!1,this.onResizeObservable=new F,this.onCanvasBlurObservable=new F,this.onCanvasFocusObservable=new F,this.onCanvasPointerOutObservable=new F,this.onBeginFrameObservable=new F,this.customAnimationFrameRequester=null,this.onEndFrameObservable=new F,this.onBeforeShaderCompilationObservable=new F,this.onAfterShaderCompilationObservable=new F,this._deterministicLockstep=!1,this._lockstepMaxSteps=4,this._timeStep=1/60,this._fps=60,this._deltaTime=0,this._drawCalls=new Rt,this.canvasTabIndex=1,this.disablePerformanceMonitorInBackground=!1,this._performanceMonitor=new dn,this._compatibilityMode=!0,this.currentRenderPassId=0,this._renderPassNames=["main"],I.Instances.push(this),!!e){if(this._features.supportRenderPasses=!0,i=this._creationOptions,e.getContext){const r=e;this._sharedInit(r,!!i.doNotHandleTouchAction,i.audioEngine),Ci()&&(this._onFullscreenChange=()=>{this.isFullscreen=!!document.fullscreenElement,this.isFullscreen&&this._pointerLockRequested&&r&&I._RequestPointerlock(r)},document.addEventListener("fullscreenchange",this._onFullscreenChange,!1),document.addEventListener("webkitfullscreenchange",this._onFullscreenChange,!1),this._onPointerLockChange=()=>{this.isPointerLock=document.pointerLockElement===r},document.addEventListener("pointerlockchange",this._onPointerLockChange,!1),document.addEventListener("webkitpointerlockchange",this._onPointerLockChange,!1),!I.audioEngine&&i.audioEngine&&I.AudioEngineFactory&&(I.audioEngine=I.AudioEngineFactory(this.getRenderingCanvas(),this.getAudioContext(),this.getAudioDestination()))),this._connectVREvents(),this.enableOfflineSupport=I.OfflineProviderFactory!==void 0,this._deterministicLockstep=!!i.deterministicLockstep,this._lockstepMaxSteps=i.lockstepMaxSteps||0,this._timeStep=i.timeStep||1/60}this._prepareVRComponent(),i.autoEnableWebVR&&this.initWebVR()}}static get NpmPackage(){return oe.NpmPackage}static get Version(){return oe.Version}static get Instances(){return fe.Instances}static get LastCreatedEngine(){return fe.LastCreatedEngine}static get LastCreatedScene(){return fe.LastCreatedScene}_createImageBitmapFromSource(e,t){return new Promise((s,r)=>{const n=new Image;n.onload=()=>{n.decode().then(()=>{this.createImageBitmap(n,t).then(a=>{s(a)})})},n.onerror=()=>{r(`Error loading image ${n.src}`)},n.src=e})}createImageBitmap(e,t){return createImageBitmap(e,t)}resizeImageBitmap(e,t,i){const r=this.createCanvas(t,i).getContext("2d");if(!r)throw new Error("Unable to get 2d context for resizeImageBitmap");return r.drawImage(e,0,0),r.getImageData(0,0,t,i).data}static MarkAllMaterialsAsDirty(e,t){for(let i=0;i<I.Instances.length;i++){const s=I.Instances[i];for(let r=0;r<s.scenes.length;r++)s.scenes[r].markAllMaterialsAsDirty(e,t)}}static DefaultLoadingScreenFactory(e){throw $("LoadingScreen")}get _supportsHardwareTextureRescaling(){return!!I._RescalePostProcessFactory}get performanceMonitor(){return this._performanceMonitor}get compatibilityMode(){return this._compatibilityMode}set compatibilityMode(e){this._compatibilityMode=!0}getInputElement(){return this._renderingCanvas}_initGLContext(){super._initGLContext(),this._rescalePostProcess=null}_sharedInit(e,t,i){super._sharedInit(e,t,i),this._onCanvasFocus=()=>{this.onCanvasFocusObservable.notifyObservers(this)},this._onCanvasBlur=()=>{this.onCanvasBlurObservable.notifyObservers(this)},this._onCanvasContextMenu=r=>{this.disableContextMenu&&r.preventDefault()},e.addEventListener("focus",this._onCanvasFocus),e.addEventListener("blur",this._onCanvasBlur),e.addEventListener("contextmenu",this._onCanvasContextMenu),this._onBlur=()=>{this.disablePerformanceMonitorInBackground&&this._performanceMonitor.disable(),this._windowIsBackground=!0},this._onFocus=()=>{this.disablePerformanceMonitorInBackground&&this._performanceMonitor.enable(),this._windowIsBackground=!1},this._onCanvasPointerOut=r=>{document.elementFromPoint(r.clientX,r.clientY)!==e&&this.onCanvasPointerOutObservable.notifyObservers(r)};const s=this.getHostWindow();s&&typeof s.addEventListener=="function"&&(s.addEventListener("blur",this._onBlur),s.addEventListener("focus",this._onFocus)),e.addEventListener("pointerout",this._onCanvasPointerOut),t||this._disableTouchAction(),!I.audioEngine&&i&&I.AudioEngineFactory&&(I.audioEngine=I.AudioEngineFactory(this.getRenderingCanvas(),this.getAudioContext(),this.getAudioDestination()))}getAspectRatio(e,t=!1){const i=e.viewport;return this.getRenderWidth(t)*i.width/(this.getRenderHeight(t)*i.height)}getScreenAspectRatio(){return this.getRenderWidth(!0)/this.getRenderHeight(!0)}getRenderingCanvasClientRect(){return this._renderingCanvas?this._renderingCanvas.getBoundingClientRect():null}getInputElementClientRect(){return this._renderingCanvas?this.getInputElement().getBoundingClientRect():null}isDeterministicLockStep(){return this._deterministicLockstep}getLockstepMaxSteps(){return this._lockstepMaxSteps}getTimeStep(){return this._timeStep*1e3}generateMipMapsForCubemap(e,t=!0){if(e.generateMipMaps){const i=this._gl;this._bindTextureDirectly(i.TEXTURE_CUBE_MAP,e,!0),i.generateMipmap(i.TEXTURE_CUBE_MAP),t&&this._bindTextureDirectly(i.TEXTURE_CUBE_MAP,null)}}getDepthWrite(){return this._depthCullingState.depthMask}setDepthWrite(e){this._depthCullingState.depthMask=e}getStencilBuffer(){return this._stencilState.stencilTest}setStencilBuffer(e){this._stencilState.stencilTest=e}getStencilMask(){return this._stencilState.stencilMask}setStencilMask(e){this._stencilState.stencilMask=e}getStencilFunction(){return this._stencilState.stencilFunc}getStencilFunctionReference(){return this._stencilState.stencilFuncRef}getStencilFunctionMask(){return this._stencilState.stencilFuncMask}setStencilFunction(e){this._stencilState.stencilFunc=e}setStencilFunctionReference(e){this._stencilState.stencilFuncRef=e}setStencilFunctionMask(e){this._stencilState.stencilFuncMask=e}getStencilOperationFail(){return this._stencilState.stencilOpStencilFail}getStencilOperationDepthFail(){return this._stencilState.stencilOpDepthFail}getStencilOperationPass(){return this._stencilState.stencilOpStencilDepthPass}setStencilOperationFail(e){this._stencilState.stencilOpStencilFail=e}setStencilOperationDepthFail(e){this._stencilState.stencilOpDepthFail=e}setStencilOperationPass(e){this._stencilState.stencilOpStencilDepthPass=e}setDitheringState(e){e?this._gl.enable(this._gl.DITHER):this._gl.disable(this._gl.DITHER)}setRasterizerState(e){e?this._gl.disable(this._gl.RASTERIZER_DISCARD):this._gl.enable(this._gl.RASTERIZER_DISCARD)}getDepthFunction(){return this._depthCullingState.depthFunc}setDepthFunction(e){this._depthCullingState.depthFunc=e}setDepthFunctionToGreater(){this.setDepthFunction(516)}setDepthFunctionToGreaterOrEqual(){this.setDepthFunction(518)}setDepthFunctionToLess(){this.setDepthFunction(513)}setDepthFunctionToLessOrEqual(){this.setDepthFunction(515)}cacheStencilState(){this._cachedStencilBuffer=this.getStencilBuffer(),this._cachedStencilFunction=this.getStencilFunction(),this._cachedStencilMask=this.getStencilMask(),this._cachedStencilOperationPass=this.getStencilOperationPass(),this._cachedStencilOperationFail=this.getStencilOperationFail(),this._cachedStencilOperationDepthFail=this.getStencilOperationDepthFail(),this._cachedStencilReference=this.getStencilFunctionReference()}restoreStencilState(){this.setStencilFunction(this._cachedStencilFunction),this.setStencilMask(this._cachedStencilMask),this.setStencilBuffer(this._cachedStencilBuffer),this.setStencilOperationPass(this._cachedStencilOperationPass),this.setStencilOperationFail(this._cachedStencilOperationFail),this.setStencilOperationDepthFail(this._cachedStencilOperationDepthFail),this.setStencilFunctionReference(this._cachedStencilReference)}setDirectViewport(e,t,i,s){const r=this._cachedViewport;return this._cachedViewport=null,this._viewport(e,t,i,s),r}scissorClear(e,t,i,s,r){this.enableScissor(e,t,i,s),this.clear(r,!0,!0,!0),this.disableScissor()}enableScissor(e,t,i,s){const r=this._gl;r.enable(r.SCISSOR_TEST),r.scissor(e,t,i,s)}disableScissor(){const e=this._gl;e.disable(e.SCISSOR_TEST)}_reportDrawCall(e=1){this._drawCalls.addCount(e,!1)}initWebVR(){throw $("WebVRCamera")}_prepareVRComponent(){}_connectVREvents(e,t){}_submitVRFrame(){}disableVR(){}isVRPresenting(){return!1}_requestVRFrame(){}_loadFileAsync(e,t,i){return new Promise((s,r)=>{this._loadFile(e,n=>{s(n)},void 0,t,i,(n,a)=>{r(a)})})}getVertexShaderSource(e){const t=this._gl.getAttachedShaders(e);return t?this._gl.getShaderSource(t[0]):null}getFragmentShaderSource(e){const t=this._gl.getAttachedShaders(e);return t?this._gl.getShaderSource(t[1]):null}setDepthStencilTexture(e,t,i,s){e!==void 0&&(t&&(this._boundUniforms[e]=t),!i||!i.depthStencilTexture?this._setTexture(e,null,void 0,void 0,s):this._setTexture(e,i,!1,!0,s))}setTextureFromPostProcess(e,t,i){var s;let r=null;t&&(t._textures.data[t._currentRenderTextureInd]?r=t._textures.data[t._currentRenderTextureInd]:t._forcedOutputTexture&&(r=t._forcedOutputTexture)),this._bindTexture(e,(s=r==null?void 0:r.texture)!==null&&s!==void 0?s:null,i)}setTextureFromPostProcessOutput(e,t,i){var s,r;this._bindTexture(e,(r=(s=t==null?void 0:t._outputTexture)===null||s===void 0?void 0:s.texture)!==null&&r!==void 0?r:null,i)}_rebuildBuffers(){for(const e of this.scenes)e.resetCachedMaterial(),e._rebuildGeometries(),e._rebuildTextures();for(const e of this._virtualScenes)e.resetCachedMaterial(),e._rebuildGeometries(),e._rebuildTextures();super._rebuildBuffers()}_renderFrame(){for(let e=0;e<this._activeRenderLoops.length;e++){const t=this._activeRenderLoops[e];t()}}_renderLoop(){if(!this._contextWasLost){let e=!0;!this.renderEvenInBackground&&this._windowIsBackground&&(e=!1),e&&(this.beginFrame(),this._renderViews()||this._renderFrame(),this.endFrame())}this._activeRenderLoops.length>0?this.customAnimationFrameRequester?(this.customAnimationFrameRequester.requestID=this._queueNewFrame(this.customAnimationFrameRequester.renderFunction||this._boundRenderFunction,this.customAnimationFrameRequester),this._frameHandler=this.customAnimationFrameRequester.requestID):this.isVRPresenting()?this._requestVRFrame():this._frameHandler=this._queueNewFrame(this._boundRenderFunction,this.getHostWindow()):this._renderingQueueLaunched=!1}_renderViews(){return!1}switchFullscreen(e){this.isFullscreen?this.exitFullscreen():this.enterFullscreen(e)}enterFullscreen(e){this.isFullscreen||(this._pointerLockRequested=e,this._renderingCanvas&&I._RequestFullscreen(this._renderingCanvas))}exitFullscreen(){this.isFullscreen&&I._ExitFullscreen()}enterPointerlock(){this._renderingCanvas&&I._RequestPointerlock(this._renderingCanvas)}exitPointerlock(){I._ExitPointerlock()}beginFrame(){this._measureFps(),this.onBeginFrameObservable.notifyObservers(this),super.beginFrame()}endFrame(){super.endFrame(),this._submitVRFrame(),this.onEndFrameObservable.notifyObservers(this)}resize(e=!1){this.isVRPresenting()||super.resize(e)}setSize(e,t,i=!1){if(!this._renderingCanvas||!super.setSize(e,t,i))return!1;if(this.scenes){for(let s=0;s<this.scenes.length;s++){const r=this.scenes[s];for(let n=0;n<r.cameras.length;n++){const a=r.cameras[n];a._currentRenderId=0}}this.onResizeObservable.hasObservers()&&this.onResizeObservable.notifyObservers(this)}return!0}_deletePipelineContext(e){const t=e;t&&t.program&&t.transformFeedback&&(this.deleteTransformFeedback(t.transformFeedback),t.transformFeedback=null),super._deletePipelineContext(e)}createShaderProgram(e,t,i,s,r,n=null){r=r||this._gl,this.onBeforeShaderCompilationObservable.notifyObservers(this);const a=super.createShaderProgram(e,t,i,s,r,n);return this.onAfterShaderCompilationObservable.notifyObservers(this),a}_createShaderProgram(e,t,i,s,r=null){const n=s.createProgram();if(e.program=n,!n)throw new Error("Unable to create program");if(s.attachShader(n,t),s.attachShader(n,i),this.webGLVersion>1&&r){const a=this.createTransformFeedback();this.bindTransformFeedback(a),this.setTranformFeedbackVaryings(n,r),e.transformFeedback=a}return s.linkProgram(n),this.webGLVersion>1&&r&&this.bindTransformFeedback(null),e.context=s,e.vertexShader=t,e.fragmentShader=i,e.isParallelCompiled||this._finalizePipelineContext(e),n}_releaseTexture(e){super._releaseTexture(e)}_releaseRenderTargetWrapper(e){super._releaseRenderTargetWrapper(e),this.scenes.forEach(t=>{t.postProcesses.forEach(i=>{i._outputTexture===e&&(i._outputTexture=null)}),t.cameras.forEach(i=>{i._postProcesses.forEach(s=>{s&&s._outputTexture===e&&(s._outputTexture=null)})})})}getRenderPassNames(){return this._renderPassNames}getCurrentRenderPassName(){return this._renderPassNames[this.currentRenderPassId]}createRenderPassId(e){const t=++I._RenderPassIdCounter;return this._renderPassNames[t]=e??"NONAME",t}releaseRenderPassId(e){this._renderPassNames[e]=void 0;for(let t=0;t<this.scenes.length;++t){const i=this.scenes[t];for(let s=0;s<i.meshes.length;++s){const r=i.meshes[s];if(r.subMeshes)for(let n=0;n<r.subMeshes.length;++n)r.subMeshes[n]._removeDrawWrapper(e)}}}_rescaleTexture(e,t,i,s,r){this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_MAG_FILTER,this._gl.LINEAR),this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_MIN_FILTER,this._gl.LINEAR),this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_WRAP_S,this._gl.CLAMP_TO_EDGE),this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_WRAP_T,this._gl.CLAMP_TO_EDGE);const n=this.createRenderTargetTexture({width:t.width,height:t.height},{generateMipMaps:!1,type:0,samplingMode:2,generateDepthBuffer:!1,generateStencilBuffer:!1});!this._rescalePostProcess&&I._RescalePostProcessFactory&&(this._rescalePostProcess=I._RescalePostProcessFactory(this)),this._rescalePostProcess&&(this._rescalePostProcess.externalTextureSamplerBinding=!0,this._rescalePostProcess.getEffect().executeWhenCompiled(()=>{this._rescalePostProcess.onApply=function(o){o._bindTexture("textureSampler",e)};let a=i;a||(a=this.scenes[this.scenes.length-1]),a.postProcessManager.directRender([this._rescalePostProcess],n,!0),this._bindTextureDirectly(this._gl.TEXTURE_2D,t,!0),this._gl.copyTexImage2D(this._gl.TEXTURE_2D,0,s,0,0,t.width,t.height,0),this.unBindFramebuffer(n),n.dispose(),r&&r()}))}getFps(){return this._fps}getDeltaTime(){return this._deltaTime}_measureFps(){this._performanceMonitor.sampleFrame(),this._fps=this._performanceMonitor.averageFPS,this._deltaTime=this._performanceMonitor.instantaneousFrameTime||0}wrapWebGLTexture(e){const t=new tr(e,this._gl),i=new Ot(this,Ne.Unknown,!0);return i._hardwareTexture=t,i.isReady=!0,i}_uploadImageToTexture(e,t,i=0,s=0){const r=this._gl,n=this._getWebGLTextureType(e.type),a=this._getInternalFormat(e.format),o=this._getRGBABufferInternalSizedFormat(e.type,a),h=e.isCube?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D;this._bindTextureDirectly(h,e,!0),this._unpackFlipY(e.invertY);let l=r.TEXTURE_2D;e.isCube&&(l=r.TEXTURE_CUBE_MAP_POSITIVE_X+i),r.texImage2D(l,s,o,a,n,t),this._bindTextureDirectly(h,null,!0)}updateTextureComparisonFunction(e,t){if(this.webGLVersion===1){O.Error("WebGL 1 does not support texture comparison.");return}const i=this._gl;e.isCube?(this._bindTextureDirectly(this._gl.TEXTURE_CUBE_MAP,e,!0),t===0?(i.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_COMPARE_FUNC,515),i.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_COMPARE_MODE,i.NONE)):(i.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_COMPARE_FUNC,t),i.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE)),this._bindTextureDirectly(this._gl.TEXTURE_CUBE_MAP,null)):(this._bindTextureDirectly(this._gl.TEXTURE_2D,e,!0),t===0?(i.texParameteri(i.TEXTURE_2D,i.TEXTURE_COMPARE_FUNC,515),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_COMPARE_MODE,i.NONE)):(i.texParameteri(i.TEXTURE_2D,i.TEXTURE_COMPARE_FUNC,t),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE)),this._bindTextureDirectly(this._gl.TEXTURE_2D,null)),e._comparisonFunction=t}createInstancesBuffer(e){const t=this._gl.createBuffer();if(!t)throw new Error("Unable to create instance buffer");const i=new Di(t);return i.capacity=e,this.bindArrayBuffer(i),this._gl.bufferData(this._gl.ARRAY_BUFFER,e,this._gl.DYNAMIC_DRAW),i.references=1,i}deleteInstancesBuffer(e){this._gl.deleteBuffer(e)}_clientWaitAsync(e,t=0,i=10){const s=this._gl;return new Promise((r,n)=>{const a=()=>{const o=s.clientWaitSync(e,t,0);if(o==s.WAIT_FAILED){n();return}if(o==s.TIMEOUT_EXPIRED){setTimeout(a,i);return}r()};a()})}_readPixelsAsync(e,t,i,s,r,n,a){if(this._webGLVersion<2)throw new Error("_readPixelsAsync only work on WebGL2+");const o=this._gl,h=o.createBuffer();o.bindBuffer(o.PIXEL_PACK_BUFFER,h),o.bufferData(o.PIXEL_PACK_BUFFER,a.byteLength,o.STREAM_READ),o.readPixels(e,t,i,s,r,n,0),o.bindBuffer(o.PIXEL_PACK_BUFFER,null);const l=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);return l?(o.flush(),this._clientWaitAsync(l,0,10).then(()=>(o.deleteSync(l),o.bindBuffer(o.PIXEL_PACK_BUFFER,h),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,a),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),o.deleteBuffer(h),a))):null}dispose(){for(this.hideLoadingUI(),this.onNewSceneAddedObservable.clear();this.postProcesses.length;)this.postProcesses[0].dispose();for(this._rescalePostProcess&&this._rescalePostProcess.dispose();this.scenes.length;)this.scenes[0].dispose();for(;this._virtualScenes.length;)this._virtualScenes[0].dispose();I.Instances.length===1&&I.audioEngine&&(I.audioEngine.dispose(),I.audioEngine=null),this.disableVR();const e=this.getHostWindow();e&&typeof e.removeEventListener=="function"&&(e.removeEventListener("blur",this._onBlur),e.removeEventListener("focus",this._onFocus)),this._renderingCanvas&&(this._renderingCanvas.removeEventListener("focus",this._onCanvasFocus),this._renderingCanvas.removeEventListener("blur",this._onCanvasBlur),this._renderingCanvas.removeEventListener("pointerout",this._onCanvasPointerOut),this._renderingCanvas.removeEventListener("contextmenu",this._onCanvasContextMenu)),Ci()&&(document.removeEventListener("fullscreenchange",this._onFullscreenChange),document.removeEventListener("mozfullscreenchange",this._onFullscreenChange),document.removeEventListener("webkitfullscreenchange",this._onFullscreenChange),document.removeEventListener("msfullscreenchange",this._onFullscreenChange),document.removeEventListener("pointerlockchange",this._onPointerLockChange),document.removeEventListener("mspointerlockchange",this._onPointerLockChange),document.removeEventListener("mozpointerlockchange",this._onPointerLockChange),document.removeEventListener("webkitpointerlockchange",this._onPointerLockChange)),super.dispose();const t=I.Instances.indexOf(this);t>=0&&I.Instances.splice(t,1),this.onResizeObservable.clear(),this.onCanvasBlurObservable.clear(),this.onCanvasFocusObservable.clear(),this.onCanvasPointerOutObservable.clear(),this.onBeginFrameObservable.clear(),this.onEndFrameObservable.clear()}_disableTouchAction(){!this._renderingCanvas||!this._renderingCanvas.setAttribute||(this._renderingCanvas.setAttribute("touch-action","none"),this._renderingCanvas.style.touchAction="none",this._renderingCanvas.style.webkitTapHighlightColor="transparent")}displayLoadingUI(){if(!je())return;const e=this.loadingScreen;e&&e.displayLoadingUI()}hideLoadingUI(){if(!je())return;const e=this._loadingScreen;e&&e.hideLoadingUI()}get loadingScreen(){return!this._loadingScreen&&this._renderingCanvas&&(this._loadingScreen=I.DefaultLoadingScreenFactory(this._renderingCanvas)),this._loadingScreen}set loadingScreen(e){this._loadingScreen=e}set loadingUIText(e){this.loadingScreen.loadingUIText=e}set loadingUIBackgroundColor(e){this.loadingScreen.loadingUIBackgroundColor=e}createVideoElement(e){return document.createElement("video")}static _RequestPointerlock(e){e.requestPointerLock&&(e.requestPointerLock(),e.focus())}static _ExitPointerlock(){document.exitPointerLock&&document.exitPointerLock()}static _RequestFullscreen(e){const t=e.requestFullscreen||e.webkitRequestFullscreen;t&&t.call(e)}static _ExitFullscreen(){const e=document;document.exitFullscreen?document.exitFullscreen():e.webkitCancelFullScreen&&e.webkitCancelFullScreen()}getFontOffset(e){const t=document.createElement("span");t.innerHTML="Hg",t.setAttribute("style",`font: ${e} !important`);const i=document.createElement("div");i.style.display="inline-block",i.style.width="1px",i.style.height="0px",i.style.verticalAlign="bottom";const s=document.createElement("div");s.style.whiteSpace="nowrap",s.appendChild(t),s.appendChild(i),document.body.appendChild(s);let r=0,n=0;try{n=i.getBoundingClientRect().top-t.getBoundingClientRect().top,i.style.verticalAlign="baseline",r=i.getBoundingClientRect().top-t.getBoundingClientRect().top}finally{document.body.removeChild(s)}return{ascent:r,height:n,descent:n-r}}}I.ALPHA_DISABLE=0,I.ALPHA_ADD=1,I.ALPHA_COMBINE=2,I.ALPHA_SUBTRACT=3,I.ALPHA_MULTIPLY=4,I.ALPHA_MAXIMIZED=5,I.ALPHA_ONEONE=6,I.ALPHA_PREMULTIPLIED=7,I.ALPHA_PREMULTIPLIED_PORTERDUFF=8,I.ALPHA_INTERPOLATE=9,I.ALPHA_SCREENMODE=10,I.DELAYLOADSTATE_NONE=0,I.DELAYLOADSTATE_LOADED=1,I.DELAYLOADSTATE_LOADING=2,I.DELAYLOADSTATE_NOTLOADED=4,I.NEVER=512,I.ALWAYS=519,I.LESS=513,I.EQUAL=514,I.LEQUAL=515,I.GREATER=516,I.GEQUAL=518,I.NOTEQUAL=517,I.KEEP=7680,I.REPLACE=7681,I.INCR=7682,I.DECR=7683,I.INVERT=5386,I.INCR_WRAP=34055,I.DECR_WRAP=34056,I.TEXTURE_CLAMP_ADDRESSMODE=0,I.TEXTURE_WRAP_ADDRESSMODE=1,I.TEXTURE_MIRROR_ADDRESSMODE=2,I.TEXTUREFORMAT_ALPHA=0,I.TEXTUREFORMAT_LUMINANCE=1,I.TEXTUREFORMAT_LUMINANCE_ALPHA=2,I.TEXTUREFORMAT_RGB=4,I.TEXTUREFORMAT_RGBA=5,I.TEXTUREFORMAT_RED=6,I.TEXTUREFORMAT_R=6,I.TEXTUREFORMAT_RG=7,I.TEXTUREFORMAT_RED_INTEGER=8,I.TEXTUREFORMAT_R_INTEGER=8,I.TEXTUREFORMAT_RG_INTEGER=9,I.TEXTUREFORMAT_RGB_INTEGER=10,I.TEXTUREFORMAT_RGBA_INTEGER=11,I.TEXTURETYPE_UNSIGNED_BYTE=0,I.TEXTURETYPE_UNSIGNED_INT=0,I.TEXTURETYPE_FLOAT=1,I.TEXTURETYPE_HALF_FLOAT=2,I.TEXTURETYPE_BYTE=3,I.TEXTURETYPE_SHORT=4,I.TEXTURETYPE_UNSIGNED_SHORT=5,I.TEXTURETYPE_INT=6,I.TEXTURETYPE_UNSIGNED_INTEGER=7,I.TEXTURETYPE_UNSIGNED_SHORT_4_4_4_4=8,I.TEXTURETYPE_UNSIGNED_SHORT_5_5_5_1=9,I.TEXTURETYPE_UNSIGNED_SHORT_5_6_5=10,I.TEXTURETYPE_UNSIGNED_INT_2_10_10_10_REV=11,I.TEXTURETYPE_UNSIGNED_INT_24_8=12,I.TEXTURETYPE_UNSIGNED_INT_10F_11F_11F_REV=13,I.TEXTURETYPE_UNSIGNED_INT_5_9_9_9_REV=14,I.TEXTURETYPE_FLOAT_32_UNSIGNED_INT_24_8_REV=15,I.TEXTURE_NEAREST_SAMPLINGMODE=1,I.TEXTURE_BILINEAR_SAMPLINGMODE=2,I.TEXTURE_TRILINEAR_SAMPLINGMODE=3,I.TEXTURE_NEAREST_NEAREST_MIPLINEAR=8,I.TEXTURE_LINEAR_LINEAR_MIPNEAREST=11,I.TEXTURE_LINEAR_LINEAR_MIPLINEAR=3,I.TEXTURE_NEAREST_NEAREST_MIPNEAREST=4,I.TEXTURE_NEAREST_LINEAR_MIPNEAREST=5,I.TEXTURE_NEAREST_LINEAR_MIPLINEAR=6,I.TEXTURE_NEAREST_LINEAR=7,I.TEXTURE_NEAREST_NEAREST=1,I.TEXTURE_LINEAR_NEAREST_MIPNEAREST=9,I.TEXTURE_LINEAR_NEAREST_MIPLINEAR=10,I.TEXTURE_LINEAR_LINEAR=2,I.TEXTURE_LINEAR_NEAREST=12,I.TEXTURE_EXPLICIT_MODE=0,I.TEXTURE_SPHERICAL_MODE=1,I.TEXTURE_PLANAR_MODE=2,I.TEXTURE_CUBIC_MODE=3,I.TEXTURE_PROJECTION_MODE=4,I.TEXTURE_SKYBOX_MODE=5,I.TEXTURE_INVCUBIC_MODE=6,I.TEXTURE_EQUIRECTANGULAR_MODE=7,I.TEXTURE_FIXED_EQUIRECTANGULAR_MODE=8,I.TEXTURE_FIXED_EQUIRECTANGULAR_MIRRORED_MODE=9,I.SCALEMODE_FLOOR=1,I.SCALEMODE_NEAREST=2,I.SCALEMODE_CEILING=3,I._RescalePostProcessFactory=null,I._RenderPassIdCounter=0,oe.prototype._debugPushGroup=function(c,e){},oe.prototype._debugPopGroup=function(c){},oe.prototype._debugInsertMarker=function(c,e){},oe.prototype._debugFlushPendingCommands=function(){};function gn(c){return new I(c,!0,{preserveDrawingBuffer:!0,stencil:!0})}class re{constructor(e=0,t=0,i=0){this.r=e,this.g=t,this.b=i}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+"}"}getClassName(){return"Color3"}getHashCode(){let e=this.r*255|0;return e=e*397^(this.g*255|0),e=e*397^(this.b*255|0),e}toArray(e,t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,this}fromArray(e,t=0){return re.FromArrayToRef(e,t,this),this}toColor4(e=1){return new me(this.r,this.g,this.b,e)}asArray(){return[this.r,this.g,this.b]}toLuminance(){return this.r*.3+this.g*.59+this.b*.11}multiply(e){return new re(this.r*e.r,this.g*e.g,this.b*e.b)}multiplyToRef(e,t){return t.r=this.r*e.r,t.g=this.g*e.g,t.b=this.b*e.b,this}equals(e){return e&&this.r===e.r&&this.g===e.g&&this.b===e.b}equalsFloats(e,t,i){return this.r===e&&this.g===t&&this.b===i}scale(e){return new re(this.r*e,this.g*e,this.b*e)}scaleInPlace(e){return this.r*=e,this.g*=e,this.b*=e,this}scaleToRef(e,t){return t.r=this.r*e,t.g=this.g*e,t.b=this.b*e,this}scaleAndAddToRef(e,t){return t.r+=this.r*e,t.g+=this.g*e,t.b+=this.b*e,this}clampToRef(e=0,t=1,i){return i.r=X.Clamp(this.r,e,t),i.g=X.Clamp(this.g,e,t),i.b=X.Clamp(this.b,e,t),this}add(e){return new re(this.r+e.r,this.g+e.g,this.b+e.b)}addToRef(e,t){return t.r=this.r+e.r,t.g=this.g+e.g,t.b=this.b+e.b,this}subtract(e){return new re(this.r-e.r,this.g-e.g,this.b-e.b)}subtractToRef(e,t){return t.r=this.r-e.r,t.g=this.g-e.g,t.b=this.b-e.b,this}clone(){return new re(this.r,this.g,this.b)}copyFrom(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyFromFloats(e,t,i){return this.r=e,this.g=t,this.b=i,this}set(e,t,i){return this.copyFromFloats(e,t,i)}toHexString(){const e=Math.round(this.r*255),t=Math.round(this.g*255),i=Math.round(this.b*255);return"#"+X.ToHex(e)+X.ToHex(t)+X.ToHex(i)}toLinearSpace(){const e=new re;return this.toLinearSpaceToRef(e),e}toHSV(){const e=new re;return this.toHSVToRef(e),e}toHSVToRef(e){const t=this.r,i=this.g,s=this.b,r=Math.max(t,i,s),n=Math.min(t,i,s);let a=0,o=0;const h=r,l=r-n;r!==0&&(o=l/r),r!=n&&(r==t?(a=(i-s)/l,i<s&&(a+=6)):r==i?a=(s-t)/l+2:r==s&&(a=(t-i)/l+4),a*=60),e.r=a,e.g=o,e.b=h}toLinearSpaceToRef(e){return e.r=Math.pow(this.r,ye),e.g=Math.pow(this.g,ye),e.b=Math.pow(this.b,ye),this}toGammaSpace(){const e=new re;return this.toGammaSpaceToRef(e),e}toGammaSpaceToRef(e){return e.r=Math.pow(this.r,Se),e.g=Math.pow(this.g,Se),e.b=Math.pow(this.b,Se),this}static HSVtoRGBToRef(e,t,i,s){const r=i*t,n=e/60,a=r*(1-Math.abs(n%2-1));let o=0,h=0,l=0;n>=0&&n<=1?(o=r,h=a):n>=1&&n<=2?(o=a,h=r):n>=2&&n<=3?(h=r,l=a):n>=3&&n<=4?(h=a,l=r):n>=4&&n<=5?(o=a,l=r):n>=5&&n<=6&&(o=r,l=a);const u=i-r;s.set(o+u,h+u,l+u)}static FromHSV(e,t,i){const s=new re(0,0,0);return re.HSVtoRGBToRef(e,t,i,s),s}static FromHexString(e){if(e.substring(0,1)!=="#"||e.length!==7)return new re(0,0,0);const t=parseInt(e.substring(1,3),16),i=parseInt(e.substring(3,5),16),s=parseInt(e.substring(5,7),16);return re.FromInts(t,i,s)}static FromArray(e,t=0){return new re(e[t],e[t+1],e[t+2])}static FromArrayToRef(e,t=0,i){i.r=e[t],i.g=e[t+1],i.b=e[t+2]}static FromInts(e,t,i){return new re(e/255,t/255,i/255)}static Lerp(e,t,i){const s=new re(0,0,0);return re.LerpToRef(e,t,i,s),s}static LerpToRef(e,t,i,s){s.r=e.r+(t.r-e.r)*i,s.g=e.g+(t.g-e.g)*i,s.b=e.b+(t.b-e.b)*i}static Hermite(e,t,i,s,r){const n=r*r,a=r*n,o=2*a-3*n+1,h=-2*a+3*n,l=a-2*n+r,u=a-n,d=e.r*o+i.r*h+t.r*l+s.r*u,f=e.g*o+i.g*h+t.g*l+s.g*u,_=e.b*o+i.b*h+t.b*l+s.b*u;return new re(d,f,_)}static Hermite1stDerivative(e,t,i,s,r){const n=re.Black();return this.Hermite1stDerivativeToRef(e,t,i,s,r,n),n}static Hermite1stDerivativeToRef(e,t,i,s,r,n){const a=r*r;n.r=(a-r)*6*e.r+(3*a-4*r+1)*t.r+(-a+r)*6*i.r+(3*a-2*r)*s.r,n.g=(a-r)*6*e.g+(3*a-4*r+1)*t.g+(-a+r)*6*i.g+(3*a-2*r)*s.g,n.b=(a-r)*6*e.b+(3*a-4*r+1)*t.b+(-a+r)*6*i.b+(3*a-2*r)*s.b}static Red(){return new re(1,0,0)}static Green(){return new re(0,1,0)}static Blue(){return new re(0,0,1)}static Black(){return new re(0,0,0)}static get BlackReadOnly(){return re._BlackReadOnly}static White(){return new re(1,1,1)}static Purple(){return new re(.5,0,.5)}static Magenta(){return new re(1,0,1)}static Yellow(){return new re(1,1,0)}static Gray(){return new re(.5,.5,.5)}static Teal(){return new re(0,1,1)}static Random(){return new re(Math.random(),Math.random(),Math.random())}}re._BlackReadOnly=re.Black();let me=class{constructor(e=0,t=0,i=0,s=1){this.r=e,this.g=t,this.b=i,this.a=s}addInPlace(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this.a+=e.a,this}asArray(){return[this.r,this.g,this.b,this.a]}toArray(e,t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e[t+3]=this.a,this}fromArray(e,t=0){return me.FromArrayToRef(e,t,this),this}equals(e){return e&&this.r===e.r&&this.g===e.g&&this.b===e.b&&this.a===e.a}add(e){return new me(this.r+e.r,this.g+e.g,this.b+e.b,this.a+e.a)}subtract(e){return new me(this.r-e.r,this.g-e.g,this.b-e.b,this.a-e.a)}subtractToRef(e,t){return t.r=this.r-e.r,t.g=this.g-e.g,t.b=this.b-e.b,t.a=this.a-e.a,this}scale(e){return new me(this.r*e,this.g*e,this.b*e,this.a*e)}scaleInPlace(e){return this.r*=e,this.g*=e,this.b*=e,this.a*=e,this}scaleToRef(e,t){return t.r=this.r*e,t.g=this.g*e,t.b=this.b*e,t.a=this.a*e,this}scaleAndAddToRef(e,t){return t.r+=this.r*e,t.g+=this.g*e,t.b+=this.b*e,t.a+=this.a*e,this}clampToRef(e=0,t=1,i){return i.r=X.Clamp(this.r,e,t),i.g=X.Clamp(this.g,e,t),i.b=X.Clamp(this.b,e,t),i.a=X.Clamp(this.a,e,t),this}multiply(e){return new me(this.r*e.r,this.g*e.g,this.b*e.b,this.a*e.a)}multiplyToRef(e,t){return t.r=this.r*e.r,t.g=this.g*e.g,t.b=this.b*e.b,t.a=this.a*e.a,t}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+" A:"+this.a+"}"}getClassName(){return"Color4"}getHashCode(){let e=this.r*255|0;return e=e*397^(this.g*255|0),e=e*397^(this.b*255|0),e=e*397^(this.a*255|0),e}clone(){return new me(this.r,this.g,this.b,this.a)}copyFrom(e){return this.r=e.r,this.g=e.g,this.b=e.b,this.a=e.a,this}copyFromFloats(e,t,i,s){return this.r=e,this.g=t,this.b=i,this.a=s,this}set(e,t,i,s){return this.copyFromFloats(e,t,i,s)}toHexString(e=!1){const t=Math.round(this.r*255),i=Math.round(this.g*255),s=Math.round(this.b*255);if(e)return"#"+X.ToHex(t)+X.ToHex(i)+X.ToHex(s);const r=Math.round(this.a*255);return"#"+X.ToHex(t)+X.ToHex(i)+X.ToHex(s)+X.ToHex(r)}toLinearSpace(){const e=new me;return this.toLinearSpaceToRef(e),e}toLinearSpaceToRef(e){return e.r=Math.pow(this.r,ye),e.g=Math.pow(this.g,ye),e.b=Math.pow(this.b,ye),e.a=this.a,this}toGammaSpace(){const e=new me;return this.toGammaSpaceToRef(e),e}toGammaSpaceToRef(e){return e.r=Math.pow(this.r,Se),e.g=Math.pow(this.g,Se),e.b=Math.pow(this.b,Se),e.a=this.a,this}static FromHexString(e){if(e.substring(0,1)!=="#"||e.length!==9&&e.length!==7)return new me(0,0,0,0);const t=parseInt(e.substring(1,3),16),i=parseInt(e.substring(3,5),16),s=parseInt(e.substring(5,7),16),r=e.length===9?parseInt(e.substring(7,9),16):255;return me.FromInts(t,i,s,r)}static Lerp(e,t,i){const s=new me(0,0,0,0);return me.LerpToRef(e,t,i,s),s}static LerpToRef(e,t,i,s){s.r=e.r+(t.r-e.r)*i,s.g=e.g+(t.g-e.g)*i,s.b=e.b+(t.b-e.b)*i,s.a=e.a+(t.a-e.a)*i}static Hermite(e,t,i,s,r){const n=r*r,a=r*n,o=2*a-3*n+1,h=-2*a+3*n,l=a-2*n+r,u=a-n,d=e.r*o+i.r*h+t.r*l+s.r*u,f=e.g*o+i.g*h+t.g*l+s.g*u,_=e.b*o+i.b*h+t.b*l+s.b*u,E=e.a*o+i.a*h+t.a*l+s.a*u;return new me(d,f,_,E)}static Hermite1stDerivative(e,t,i,s,r){const n=new me;return this.Hermite1stDerivativeToRef(e,t,i,s,r,n),n}static Hermite1stDerivativeToRef(e,t,i,s,r,n){const a=r*r;n.r=(a-r)*6*e.r+(3*a-4*r+1)*t.r+(-a+r)*6*i.r+(3*a-2*r)*s.r,n.g=(a-r)*6*e.g+(3*a-4*r+1)*t.g+(-a+r)*6*i.g+(3*a-2*r)*s.g,n.b=(a-r)*6*e.b+(3*a-4*r+1)*t.b+(-a+r)*6*i.b+(3*a-2*r)*s.b,n.a=(a-r)*6*e.a+(3*a-4*r+1)*t.a+(-a+r)*6*i.a+(3*a-2*r)*s.a}static FromColor3(e,t=1){return new me(e.r,e.g,e.b,t)}static FromArray(e,t=0){return new me(e[t],e[t+1],e[t+2],e[t+3])}static FromArrayToRef(e,t=0,i){i.r=e[t],i.g=e[t+1],i.b=e[t+2],i.a=e[t+3]}static FromInts(e,t,i,s){return new me(e/255,t/255,i/255,s/255)}static CheckColors4(e,t){if(e.length===t*3){const i=[];for(let s=0;s<e.length;s+=3){const r=s/3*4;i[r]=e[s],i[r+1]=e[s+1],i[r+2]=e[s+2],i[r+3]=1}return i}return e}};class Ei{}Ei.Color3=Be.BuildArray(3,re.Black),Ei.Color4=Be.BuildArray(3,()=>new me(0,0,0,0)),it("BABYLON.Color3",re),it("BABYLON.Color4",me);const ir=(c,e)=>!c||c.getClassName&&c.getClassName()==="Mesh"?null:c.getClassName&&c.getClassName()==="SubMesh"?c.clone(e):c.clone?c.clone():null;function pn(c){const e=[];do Object.getOwnPropertyNames(c).forEach(function(t){e.indexOf(t)===-1&&e.push(t)});while(c=Object.getPrototypeOf(c));return e}class vs{static DeepCopy(e,t,i,s){const r=pn(e);for(const n of r){if(n[0]==="_"&&(!s||s.indexOf(n)===-1)||n.endsWith("Observable")||i&&i.indexOf(n)!==-1)continue;const a=e[n],o=typeof a;if(o!=="function")try{if(o==="object")if(a instanceof Array){if(t[n]=[],a.length>0)if(typeof a[0]=="object")for(let h=0;h<a.length;h++){const l=ir(a[h],t);t[n].indexOf(l)===-1&&t[n].push(l)}else t[n]=a.slice(0)}else t[n]=ir(a,t);else t[n]=a}catch(h){O.Warn(h.message)}}}}function mn(){return typeof _native<"u"&&_native.XMLHttpRequest?new _native.XMLHttpRequest:new XMLHttpRequest}class ct{constructor(){this._xhr=mn(),this._requestURL=""}_injectCustomRequestHeaders(){if(!this._shouldSkipRequestModifications(this._requestURL))for(const e in ct.CustomRequestHeaders){const t=ct.CustomRequestHeaders[e];t&&this._xhr.setRequestHeader(e,t)}}_shouldSkipRequestModifications(e){return ct.SkipRequestModificationForBabylonCDN&&(e.includes("preview.babylonjs.com")||e.includes("cdn.babylonjs.com"))}get onprogress(){return this._xhr.onprogress}set onprogress(e){this._xhr.onprogress=e}get readyState(){return this._xhr.readyState}get status(){return this._xhr.status}get statusText(){return this._xhr.statusText}get response(){return this._xhr.response}get responseURL(){return this._xhr.responseURL}get responseText(){return this._xhr.responseText}get responseType(){return this._xhr.responseType}set responseType(e){this._xhr.responseType=e}get timeout(){return this._xhr.timeout}set timeout(e){this._xhr.timeout=e}addEventListener(e,t,i){this._xhr.addEventListener(e,t,i)}removeEventListener(e,t,i){this._xhr.removeEventListener(e,t,i)}abort(){this._xhr.abort()}send(e){ct.CustomRequestHeaders&&this._injectCustomRequestHeaders(),this._xhr.send(e)}open(e,t){for(const i of ct.CustomRequestModifiers){if(this._shouldSkipRequestModifications(t))return;i(this._xhr,t)}return t=t.replace("file:http:","http:"),t=t.replace("file:https:","https:"),this._requestURL=t,this._xhr.open(e,t,!0)}setRequestHeader(e,t){this._xhr.setRequestHeader(e,t)}getResponseHeader(e){return this._xhr.getResponseHeader(e)}}ct.CustomRequestHeaders={},ct.CustomRequestModifiers=new Array,ct.SkipRequestModificationForBabylonCDN=!0;class Fi{}Fi.FilesToLoad={};class En{static ExponentialBackoff(e=3,t=500){return(i,s,r)=>s.status!==0||r>=e||i.indexOf("file:")!==-1?-1:Math.pow(2,r)*t}}class vi extends Error{}vi._setPrototypeOf=Object.setPrototypeOf||((c,e)=>(c.__proto__=e,c));const oi={MeshInvalidPositionsError:0,UnsupportedTextureError:1e3,GLTFLoaderUnexpectedMagicError:2e3,SceneLoaderError:3e3,LoadFileError:4e3,RequestFileError:4001,ReadFileError:4002};class Nt extends vi{constructor(e,t,i){super(e),this.errorCode=t,this.innerError=i,this.name="RuntimeError",vi._setPrototypeOf(this,Nt.prototype)}}const sr=c=>{const e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";let t="",i,s,r,n,a,o,h,l=0;const u=ArrayBuffer.isView(c)?new Uint8Array(c.buffer,c.byteOffset,c.byteLength):new Uint8Array(c);for(;l<u.length;)i=u[l++],s=l<u.length?u[l++]:Number.NaN,r=l<u.length?u[l++]:Number.NaN,n=i>>2,a=(i&3)<<4|s>>4,o=(s&15)<<2|r>>6,h=r&63,isNaN(s)?o=h=64:isNaN(r)&&(h=64),t+=e.charAt(n)+e.charAt(a)+e.charAt(o)+e.charAt(h);return t},rr=c=>atob(c),vn=c=>{const e=rr(c),t=e.length,i=new Uint8Array(new ArrayBuffer(t));for(let s=0;s<t;s++)i[s]=e.charCodeAt(s);return i.buffer};class Xi{static SetImmediate(e){je()&&window.setImmediate?window.setImmediate(e):setTimeout(e,1)}}const nr=new RegExp(/^data:([^,]+\/[^,]+)?;base64,/i);class Hi extends Nt{constructor(e,t){super(e,oi.LoadFileError),this.name="LoadFileError",vi._setPrototypeOf(this,Hi.prototype),t instanceof ct?this.request=t:this.file=t}}class Ki extends Nt{constructor(e,t){super(e,oi.RequestFileError),this.request=t,this.name="RequestFileError",vi._setPrototypeOf(this,Ki.prototype)}}class Ts extends Nt{constructor(e,t){super(e,oi.ReadFileError),this.file=t,this.name="ReadFileError",vi._setPrototypeOf(this,Ts.prototype)}}const qe={DefaultRetryStrategy:En.ExponentialBackoff(),BaseUrl:"",CorsBehavior:"anonymous",PreprocessUrl:c=>c},ar=c=>(c=c.replace(/#/gm,"%23"),c),bs=(c,e)=>{if(!(c&&c.indexOf("data:")===0)&&qe.CorsBehavior)if(typeof qe.CorsBehavior=="string"||qe.CorsBehavior instanceof String)e.crossOrigin=qe.CorsBehavior;else{const t=qe.CorsBehavior(c);t&&(e.crossOrigin=t)}},Ss=(c,e,t,i,s="",r)=>{var n;let a,o=!1;c instanceof ArrayBuffer||ArrayBuffer.isView(c)?typeof Blob<"u"&&typeof URL<"u"?(a=URL.createObjectURL(new Blob([c],{type:s})),o=!0):a=`data:${s};base64,`+sr(c):c instanceof Blob?(a=URL.createObjectURL(c),o=!0):(a=ar(c),a=qe.PreprocessUrl(c));const h=fe.LastCreatedEngine,l=b=>{if(t){const M=a||c.toString();t(`Error while trying to load image: ${M.indexOf("http")===0||M.length<=128?M:M.slice(0,128)+"..."}`,b)}};if(typeof Image>"u"||(n=h==null?void 0:h._features.forceBitmapOverHTMLImageElement)!==null&&n!==void 0&&n)return jt(a,b=>{h.createImageBitmap(new Blob([b],{type:s}),{premultiplyAlpha:"none",...r}).then(M=>{e(M),o&&URL.revokeObjectURL(a)}).catch(M=>{t&&t("Error while trying to load image: "+c,M)})},void 0,i||void 0,!0,(b,M)=>{l(M)}),null;const u=new Image;bs(a,u);const d=[],f=()=>{d.forEach(b=>{b.target.addEventListener(b.name,b.handler)})},_=()=>{d.forEach(b=>{b.target.removeEventListener(b.name,b.handler)}),d.length=0},E=()=>{_(),e(u),o&&u.src&&URL.revokeObjectURL(u.src)},m=b=>{_(),l(b),o&&u.src&&URL.revokeObjectURL(u.src)},v=b=>{_();const M=new Error(`CSP violation of policy ${b.effectiveDirective} ${b.blockedURI}. Current policy is ${b.originalPolicy}`);fe.UseFallbackTexture=!1,l(M),o&&u.src&&URL.revokeObjectURL(u.src),u.src=""};d.push({target:u,name:"load",handler:E}),d.push({target:u,name:"error",handler:m}),d.push({target:document,name:"securitypolicyviolation",handler:v}),f();const S=a.substring(0,5)==="blob:",y=a.substring(0,5)==="data:",A=()=>{S||y?u.src=a:jt(a,(b,M,L)=>{const k=!s&&L?L:s,w=new Blob([b],{type:k}),de=URL.createObjectURL(w);o=!0,u.src=de},void 0,i||void 0,!0,(b,M)=>{l(M)})},C=()=>{i&&i.loadImage(a,u)};if(!S&&!y&&i&&i.enableTexturesOffline)i.open(C,A);else{if(a.indexOf("file:")!==-1){const b=decodeURIComponent(a.substring(5).toLowerCase());if(Fi.FilesToLoad[b]&&typeof URL<"u"){try{let M;try{M=URL.createObjectURL(Fi.FilesToLoad[b])}catch{M=URL.createObjectURL(Fi.FilesToLoad[b])}u.src=M,o=!0}catch{u.src=""}return u}}A()}return u},wi=(c,e,t,i,s)=>{const r=new FileReader,n={onCompleteObservable:new F,abort:()=>r.abort()};return r.onloadend=()=>n.onCompleteObservable.notifyObservers(n),s&&(r.onerror=()=>{s(new Ts(`Unable to read ${c.name}`,c))}),r.onload=a=>{e(a.target.result)},t&&(r.onprogress=t),i?r.readAsArrayBuffer(c):r.readAsText(c),n},jt=(c,e,t,i,s,r,n)=>{if(c.name)return wi(c,e,t,s,r?l=>{r(void 0,l)}:void 0);const a=c;if(a.indexOf("file:")!==-1){let l=decodeURIComponent(a.substring(5).toLowerCase());l.indexOf("./")===0&&(l=l.substring(2));const u=Fi.FilesToLoad[l];if(u)return wi(u,e,t,s,r?d=>r(void 0,new Hi(d.message,d.file)):void 0)}const{match:o,type:h}=Tn(a);if(o){const l={onCompleteObservable:new F,abort:()=>()=>{}};try{const u=s?As(a):hr(a);e(u,void 0,h)}catch(u){r?r(void 0,u):O.Error(u.message||"Failed to parse the Data URL")}return Xi.SetImmediate(()=>{l.onCompleteObservable.notifyObservers(l)}),l}return xs(a,(l,u)=>{e(l,u==null?void 0:u.responseURL,u==null?void 0:u.getResponseHeader("content-type"))},t,i,s,r?l=>{r(l.request,new Hi(l.message,l.request))}:void 0,n)},xs=(c,e,t,i,s,r,n)=>{c=ar(c),c=qe.PreprocessUrl(c);const a=qe.BaseUrl+c;let o=!1;const h={onCompleteObservable:new F,abort:()=>o=!0},l=()=>{let u=new ct,d=null,f;const _=()=>{u&&(t&&u.removeEventListener("progress",t),f&&u.removeEventListener("readystatechange",f),u.removeEventListener("loadend",E))};let E=()=>{_(),h.onCompleteObservable.notifyObservers(h),h.onCompleteObservable.clear(),t=void 0,f=null,E=null,r=void 0,n=void 0,e=void 0};h.abort=()=>{o=!0,E&&E(),u&&u.readyState!==(XMLHttpRequest.DONE||4)&&u.abort(),d!==null&&(clearTimeout(d),d=null),u=null};const m=S=>{const y=S.message||"Unknown error";r&&u?r(new Ki(y,u)):O.Error(y)},v=S=>{if(u){if(u.open("GET",a),n)try{n(u)}catch(y){m(y);return}s&&(u.responseType="arraybuffer"),t&&u.addEventListener("progress",t),E&&u.addEventListener("loadend",E),f=()=>{if(!(o||!u)&&u.readyState===(XMLHttpRequest.DONE||4)){if(f&&u.removeEventListener("readystatechange",f),u.status>=200&&u.status<300||u.status===0&&(!je()||or())){try{e&&e(s?u.response:u.responseText,u)}catch(C){m(C)}return}const y=qe.DefaultRetryStrategy;if(y){const C=y(a,u,S);if(C!==-1){_(),u=new ct,d=setTimeout(()=>v(S+1),C);return}}const A=new Ki("Error status: "+u.status+" "+u.statusText+" - Unable to load "+a,u);r&&r(A)}},u.addEventListener("readystatechange",f),u.send()}};v(0)};if(i&&i.enableSceneOffline){const u=f=>{f&&f.status>400?r&&r(f):l()},d=()=>{i&&i.loadFile(qe.BaseUrl+c,f=>{!o&&e&&e(f),h.onCompleteObservable.notifyObservers(h)},t?f=>{!o&&t&&t(f)}:void 0,u,s)};i.open(d,u)}else l();return h},or=()=>typeof location<"u"&&location.protocol==="file:",Ms=c=>nr.test(c),Tn=c=>{const e=nr.exec(c);return e===null||e.length===0?{match:!1,type:""}:{match:!0,type:e[0].replace("data:","").replace("base64,","")}};function As(c){return vn(c.split(",")[1])}const hr=c=>rr(c.split(",")[1]);(()=>{oe._FileToolsLoadImage=Ss,oe._FileToolsLoadFile=jt,ni._FileToolsLoadFile=jt})();let Oi;((c,e,t,i,s,r,n,a,o,h)=>{Oi={DecodeBase64UrlToBinary:c,DecodeBase64UrlToString:e,DefaultRetryStrategy:t.DefaultRetryStrategy,BaseUrl:t.BaseUrl,CorsBehavior:t.CorsBehavior,PreprocessUrl:t.PreprocessUrl,IsBase64DataUrl:i,IsFileURL:s,LoadFile:r,LoadImage:n,ReadFile:a,RequestFile:o,SetCorsBehavior:h},Object.defineProperty(Oi,"DefaultRetryStrategy",{get:function(){return t.DefaultRetryStrategy},set:function(l){t.DefaultRetryStrategy=l}}),Object.defineProperty(Oi,"BaseUrl",{get:function(){return t.BaseUrl},set:function(l){t.BaseUrl=l}}),Object.defineProperty(Oi,"PreprocessUrl",{get:function(){return t.PreprocessUrl},set:function(l){t.PreprocessUrl=l}}),Object.defineProperty(Oi,"CorsBehavior",{get:function(){return t.CorsBehavior},set:function(l){t.CorsBehavior=l}})})(As,hr,qe,Ms,or,jt,Ss,wi,xs,bs);class Li{static Instantiate(e){if(this.RegisteredExternalClasses&&this.RegisteredExternalClasses[e])return this.RegisteredExternalClasses[e];const t=ri(e);if(t)return t;O.Warn(e+" not found, you may have missed an import.");const i=e.split(".");let s=window||this;for(let r=0,n=i.length;r<n;r++)s=s[i[r]];return typeof s!="function"?null:s}}Li.RegisteredExternalClasses={};function lr(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,c=>{const e=Math.random()*16|0;return(c==="x"?e:e&3|8).toString(16)})}class H{static get BaseUrl(){return qe.BaseUrl}static set BaseUrl(e){qe.BaseUrl=e}static get DefaultRetryStrategy(){return qe.DefaultRetryStrategy}static set DefaultRetryStrategy(e){qe.DefaultRetryStrategy=e}static get CorsBehavior(){return qe.CorsBehavior}static set CorsBehavior(e){qe.CorsBehavior=e}static get UseFallbackTexture(){return fe.UseFallbackTexture}static set UseFallbackTexture(e){fe.UseFallbackTexture=e}static get RegisteredExternalClasses(){return Li.RegisteredExternalClasses}static set RegisteredExternalClasses(e){Li.RegisteredExternalClasses=e}static get fallbackTexture(){return fe.FallbackTexture}static set fallbackTexture(e){fe.FallbackTexture=e}static FetchToRef(e,t,i,s,r,n){const a=Math.abs(e)*i%i|0,o=Math.abs(t)*s%s|0,h=(a+o*i)*4;n.r=r[h]/255,n.g=r[h+1]/255,n.b=r[h+2]/255,n.a=r[h+3]/255}static Mix(e,t,i){return e*(1-i)+t*i}static Instantiate(e){return Li.Instantiate(e)}static SetImmediate(e){Xi.SetImmediate(e)}static IsExponentOfTwo(e){let t=1;do t*=2;while(t<e);return t===e}static FloatRound(e){return Math.fround?Math.fround(e):(H._TmpFloatArray[0]=e,H._TmpFloatArray[0])}static GetFilename(e){const t=e.lastIndexOf("/");return t<0?e:e.substring(t+1)}static GetFolderPath(e,t=!1){const i=e.lastIndexOf("/");return i<0?t?e:"":e.substring(0,i+1)}static ToDegrees(e){return e*180/Math.PI}static ToRadians(e){return e*Math.PI/180}static SmoothAngleChange(e,t,i=.9){const s=this.ToRadians(e),r=this.ToRadians(t);return this.ToDegrees(Math.atan2((1-i)*Math.sin(r)+i*Math.sin(s),(1-i)*Math.cos(r)+i*Math.cos(s)))}static MakeArray(e,t){return t!==!0&&(e===void 0||e==null)?null:Array.isArray(e)?e:[e]}static GetPointerPrefix(e){let t="pointer";return je()&&!window.PointerEvent&&(t="mouse"),e._badDesktopOS&&!e._badOS&&!(document&&"ontouchend"in document)&&(t="mouse"),t}static SetCorsBehavior(e,t){bs(e,t)}static SetReferrerPolicyBehavior(e,t){t.referrerPolicy=e}static CleanUrl(e){return e=e.replace(/#/gm,"%23"),e}static get PreprocessUrl(){return qe.PreprocessUrl}static set PreprocessUrl(e){qe.PreprocessUrl=e}static LoadImage(e,t,i,s,r,n){return Ss(e,t,i,s,r,n)}static LoadFile(e,t,i,s,r,n){return jt(e,t,i,s,r,n)}static LoadFileAsync(e,t=!0){return new Promise((i,s)=>{jt(e,r=>{i(r)},void 0,void 0,t,(r,n)=>{s(n)})})}static LoadScript(e,t,i,s){if(typeof importScripts=="function"){try{importScripts(e),t()}catch(a){i==null||i(`Unable to load script '${e}' in worker`,a)}return}else if(!je()){i==null||i(`Cannot load script '${e}' outside of a window or a worker`);return}const r=document.getElementsByTagName("head")[0],n=document.createElement("script");n.setAttribute("type","text/javascript"),n.setAttribute("src",e),s&&(n.id=s),n.onload=()=>{t&&t()},n.onerror=a=>{i&&i(`Unable to load script '${e}'`,a)},r.appendChild(n)}static LoadScriptAsync(e){return new Promise((t,i)=>{this.LoadScript(e,()=>{t()},(s,r)=>{i(r||new Error(s))})})}static ReadFileAsDataURL(e,t,i){const s=new FileReader,r={onCompleteObservable:new F,abort:()=>s.abort()};return s.onloadend=()=>{r.onCompleteObservable.notifyObservers(r)},s.onload=n=>{t(n.target.result)},s.onprogress=i,s.readAsDataURL(e),r}static ReadFile(e,t,i,s,r){return wi(e,t,i,s,r)}static FileAsURL(e){const t=new Blob([e]);return window.URL.createObjectURL(t)}static Format(e,t=2){return e.toFixed(t)}static DeepCopy(e,t,i,s){vs.DeepCopy(e,t,i,s)}static IsEmpty(e){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!1;return!0}static RegisterTopRootEvents(e,t){for(let i=0;i<t.length;i++){const s=t[i];e.addEventListener(s.name,s.handler,!1);try{window.parent&&window.parent.addEventListener(s.name,s.handler,!1)}catch{}}}static UnregisterTopRootEvents(e,t){for(let i=0;i<t.length;i++){const s=t[i];e.removeEventListener(s.name,s.handler);try{e.parent&&e.parent.removeEventListener(s.name,s.handler)}catch{}}}static async DumpFramebuffer(e,t,i,s,r="image/png",n){throw $("DumpTools")}static DumpData(e,t,i,s,r="image/png",n,a=!1,o=!1,h){throw $("DumpTools")}static DumpDataAsync(e,t,i,s="image/png",r,n=!1,a=!1,o){throw $("DumpTools")}static ToBlob(e,t,i="image/png",s){e.toBlob||(e.toBlob=function(r,n,a){setTimeout(()=>{const o=atob(this.toDataURL(n,a).split(",")[1]),h=o.length,l=new Uint8Array(h);for(let u=0;u<h;u++)l[u]=o.charCodeAt(u);r(new Blob([l]))})}),e.toBlob(function(r){t(r)},i,s)}static DownloadBlob(e,t){if("download"in document.createElement("a")){if(!t){const i=new Date;t="screenshot_"+((i.getFullYear()+"-"+(i.getMonth()+1)).slice(2)+"-"+i.getDate()+"_"+i.getHours()+"-"+("0"+i.getMinutes()).slice(-2))+".png"}H.Download(e,t)}else if(e&&typeof URL<"u"){const i=URL.createObjectURL(e),s=window.open("");if(!s)return;const r=s.document.createElement("img");r.onload=function(){URL.revokeObjectURL(i)},r.src=i,s.document.body.appendChild(r)}}static EncodeScreenshotCanvasData(e,t,i="image/png",s,r){if(t){const n=e.toDataURL(i,r);t(n)}else this.ToBlob(e,function(n){n&&H.DownloadBlob(n,s)},i,r)}static Download(e,t){if(typeof URL>"u")return;const i=window.URL.createObjectURL(e),s=document.createElement("a");document.body.appendChild(s),s.style.display="none",s.href=i,s.download=t,s.addEventListener("click",()=>{s.parentElement&&s.parentElement.removeChild(s)}),s.click(),window.URL.revokeObjectURL(i)}static BackCompatCameraNoPreventDefault(e){return typeof e[0]=="boolean"?e[0]:typeof e[1]=="boolean"?e[1]:!1}static CreateScreenshot(e,t,i,s,r="image/png"){throw $("ScreenshotTools")}static CreateScreenshotAsync(e,t,i,s="image/png"){throw $("ScreenshotTools")}static CreateScreenshotUsingRenderTarget(e,t,i,s,r="image/png",n=1,a=!1,o){throw $("ScreenshotTools")}static CreateScreenshotUsingRenderTargetAsync(e,t,i,s="image/png",r=1,n=!1,a){throw $("ScreenshotTools")}static RandomId(){return lr()}static IsBase64(e){return Ms(e)}static DecodeBase64(e){return As(e)}static get errorsCount(){return O.errorsCount}static Log(e){O.Log(e)}static Warn(e){O.Warn(e)}static Error(e){O.Error(e)}static get LogCache(){return O.LogCache}static ClearLogCache(){O.ClearLogCache()}static set LogLevels(e){O.LogLevels=e}static set PerformanceLogLevel(e){if((e&H.PerformanceUserMarkLogLevel)===H.PerformanceUserMarkLogLevel){H.StartPerformanceCounter=H._StartUserMark,H.EndPerformanceCounter=H._EndUserMark;return}if((e&H.PerformanceConsoleLogLevel)===H.PerformanceConsoleLogLevel){H.StartPerformanceCounter=H._StartPerformanceConsole,H.EndPerformanceCounter=H._EndPerformanceConsole;return}H.StartPerformanceCounter=H._StartPerformanceCounterDisabled,H.EndPerformanceCounter=H._EndPerformanceCounterDisabled}static _StartPerformanceCounterDisabled(e,t){}static _EndPerformanceCounterDisabled(e,t){}static _StartUserMark(e,t=!0){if(!H._Performance){if(!je())return;H._Performance=window.performance}!t||!H._Performance.mark||H._Performance.mark(e+"-Begin")}static _EndUserMark(e,t=!0){!t||!H._Performance.mark||(H._Performance.mark(e+"-End"),H._Performance.measure(e,e+"-Begin",e+"-End"))}static _StartPerformanceConsole(e,t=!0){t&&(H._StartUserMark(e,t),console.time&&console.time(e))}static _EndPerformanceConsole(e,t=!0){t&&(H._EndUserMark(e,t),console.timeEnd(e))}static get Now(){return ai.Now}static GetClassName(e,t=!1){let i=null;return!t&&e.getClassName?i=e.getClassName():(e instanceof Object&&(i=(t?e:Object.getPrototypeOf(e)).constructor.__bjsclassName__),i||(i=typeof e)),i}static First(e,t){for(const i of e)if(t(i))return i;return null}static getFullClassName(e,t=!1){let i=null,s=null;if(!t&&e.getClassName)i=e.getClassName();else{if(e instanceof Object){const r=t?e:Object.getPrototypeOf(e);i=r.constructor.__bjsclassName__,s=r.constructor.__bjsmoduleName__}i||(i=typeof e)}return i?(s!=null?s+".":"")+i:null}static DelayAsync(e){return new Promise(t=>{setTimeout(()=>{t()},e)})}static IsSafari(){return Js()?/^((?!chrome|android).)*safari/i.test(navigator.userAgent):!1}}H.UseCustomRequestHeaders=!1,H.CustomRequestHeaders=ct.CustomRequestHeaders,H._TmpFloatArray=new Float32Array(1),H.GetDOMTextContent=gs,H.GetAbsoluteUrl=typeof document=="object"?c=>{const e=document.createElement("a");return e.href=c,e.href}:typeof URL=="function"&&typeof location=="object"?c=>new URL(c,location.origin).href:()=>{throw new Error("Unable to get absolute URL. Override BABYLON.Tools.GetAbsoluteUrl to a custom implementation for the current context.")},H.NoneLogLevel=O.NoneLogLevel,H.MessageLogLevel=O.MessageLogLevel,H.WarningLogLevel=O.WarningLogLevel,H.ErrorLogLevel=O.ErrorLogLevel,H.AllLogLevel=O.AllLogLevel,H.IsWindowObjectExist=je,H.PerformanceNoneLogLevel=0,H.PerformanceUserMarkLogLevel=1,H.PerformanceConsoleLogLevel=2,H.StartPerformanceCounter=H._StartPerformanceCounterDisabled,H.EndPerformanceCounter=H._EndPerformanceCounterDisabled;class Yi{constructor(e,t,i,s=0){this.iterations=e,this.index=s-1,this._done=!1,this._fn=t,this._successCallback=i}executeNext(){this._done||(this.index+1<this.iterations?(++this.index,this._fn(this)):this.breakLoop())}breakLoop(){this._done=!0,this._successCallback()}static Run(e,t,i,s=0){const r=new Yi(e,t,i,s);return r.executeNext(),r}static SyncAsyncForLoop(e,t,i,s,r,n=0){return Yi.Run(Math.ceil(e/t),a=>{r&&r()?a.breakLoop():setTimeout(()=>{for(let o=0;o<t;++o){const h=a.index*t+o;if(h>=e)break;if(i(h),r&&r()){a.breakLoop();break}}a.executeNext()},n)},s)}}fe.FallbackTexture="data:image/jpg;base64,/9j/4AAQSkZJRgABAQEAYABgAAD/4QBmRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAABAAAARgEoAAMAAAABAAIAAAExAAIAAAAQAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQubmV0IDQuMC41AP/bAEMABAIDAwMCBAMDAwQEBAQFCQYFBQUFCwgIBgkNCw0NDQsMDA4QFBEODxMPDAwSGBITFRYXFxcOERkbGRYaFBYXFv/bAEMBBAQEBQUFCgYGChYPDA8WFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFv/AABEIAQABAAMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/APH6KKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FCiiigD6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++gooooA+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gUKKKKAPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76CiiigD5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BQooooA+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/voKKKKAPl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FCiiigD6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++gooooA+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gUKKKKAPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76CiiigD5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BQooooA+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/voKKKKAPl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FCiiigD6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++gooooA+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gUKKKKAPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76Pl+iiivuj+BT6gooor4U/vo+X6KKK+6P4FPqCiiivhT++j5fooor7o/gU+oKKKK+FP76P//Z";class $e{constructor(e){this.length=0,this.data=new Array(e),this._id=$e._GlobalId++}push(e){this.data[this.length++]=e,this.length>this.data.length&&(this.data.length*=2)}forEach(e){for(let t=0;t<this.length;t++)e(this.data[t])}sort(e){this.data.sort(e)}reset(){this.length=0}dispose(){this.reset(),this.data&&(this.data.length=0)}concat(e){if(e.length!==0){this.length+e.length>this.data.length&&(this.data.length=(this.length+e.length)*2);for(let t=0;t<e.length;t++)this.data[this.length++]=(e.data||e)[t]}}indexOf(e){const t=this.data.indexOf(e);return t>=this.length?-1:t}contains(e){return this.indexOf(e)!==-1}}$e._GlobalId=0;class hi extends $e{constructor(){super(...arguments),this._duplicateId=0}push(e){super.push(e),e.__smartArrayFlags||(e.__smartArrayFlags={}),e.__smartArrayFlags[this._id]=this._duplicateId}pushNoDuplicate(e){return e.__smartArrayFlags&&e.__smartArrayFlags[this._id]===this._duplicateId?!1:(this.push(e),!0)}reset(){super.reset(),this._duplicateId++}concatWithNoDuplicate(e){if(e.length!==0){this.length+e.length>this.data.length&&(this.data.length=(this.length+e.length)*2);for(let t=0;t<e.length;t++){const i=(e.data||e)[t];this.pushNoDuplicate(i)}}}}class cr{constructor(){this._count=0,this._data={}}copyFrom(e){this.clear(),e.forEach((t,i)=>this.add(t,i))}get(e){const t=this._data[e];if(t!==void 0)return t}getOrAddWithFactory(e,t){let i=this.get(e);return i!==void 0||(i=t(e),i&&this.add(e,i)),i}getOrAdd(e,t){const i=this.get(e);return i!==void 0?i:(this.add(e,t),t)}contains(e){return this._data[e]!==void 0}add(e,t){return this._data[e]!==void 0?!1:(this._data[e]=t,++this._count,!0)}set(e,t){return this._data[e]===void 0?!1:(this._data[e]=t,!0)}getAndRemove(e){const t=this.get(e);return t!==void 0?(delete this._data[e],--this._count,t):null}remove(e){return this.contains(e)?(delete this._data[e],--this._count,!0):!1}clear(){this._data={},this._count=0}get count(){return this._count}forEach(e){for(const t in this._data){const i=this._data[t];e(t,i)}}first(e){for(const t in this._data){const i=this._data[t],s=e(t,i);if(s)return s}return null}}class li{static Eval(e,t){return e.match(/\([^()]*\)/g)?e=e.replace(/\([^()]*\)/g,i=>(i=i.slice(1,i.length-1),li._HandleParenthesisContent(i,t))):e=li._HandleParenthesisContent(e,t),e==="true"?!0:e==="false"?!1:li.Eval(e,t)}static _HandleParenthesisContent(e,t){t=t||(r=>r==="true");let i;const s=e.split("||");for(const r in s)if(Object.prototype.hasOwnProperty.call(s,r)){let n=li._SimplifyNegation(s[r].trim());const a=n.split("&&");if(a.length>1)for(let o=0;o<a.length;++o){const h=li._SimplifyNegation(a[o].trim());if(h!=="true"&&h!=="false"?h[0]==="!"?i=!t(h.substring(1)):i=t(h):i=h==="true",!i){n="false";break}}if(i||n==="true"){i=!0;break}n!=="true"&&n!=="false"?n[0]==="!"?i=!t(n.substring(1)):i=t(n):i=n==="true"}return i?"true":"false"}static _SimplifyNegation(e){return e=e.replace(/^[\s!]+/,t=>(t=t.replace(/[\s]/g,()=>""),t.length%2?"!":"")),e=e.trim(),e==="!true"?e="false":e==="!false"&&(e="true"),e}}class ge{static EnableFor(e){e._tags=e._tags||{},e.hasTags=()=>ge.HasTags(e),e.addTags=t=>ge.AddTagsTo(e,t),e.removeTags=t=>ge.RemoveTagsFrom(e,t),e.matchesTagsQuery=t=>ge.MatchesQuery(e,t)}static DisableFor(e){delete e._tags,delete e.hasTags,delete e.addTags,delete e.removeTags,delete e.matchesTagsQuery}static HasTags(e){if(!e._tags)return!1;const t=e._tags;for(const i in t)if(Object.prototype.hasOwnProperty.call(t,i))return!0;return!1}static GetTags(e,t=!0){if(!e._tags)return null;if(t){const i=[];for(const s in e._tags)Object.prototype.hasOwnProperty.call(e._tags,s)&&e._tags[s]===!0&&i.push(s);return i.join(" ")}else return e._tags}static AddTagsTo(e,t){if(!t||typeof t!="string")return;t.split(" ").forEach(function(s){ge._AddTagTo(e,s)})}static _AddTagTo(e,t){t=t.trim(),!(t===""||t==="true"||t==="false")&&(t.match(/[\s]/)||t.match(/^([!]|([|]|[&]){2})/)||(ge.EnableFor(e),e._tags[t]=!0))}static RemoveTagsFrom(e,t){if(!ge.HasTags(e))return;const i=t.split(" ");for(const s in i)ge._RemoveTagFrom(e,i[s])}static _RemoveTagFrom(e,t){delete e._tags[t]}static MatchesQuery(e,t){return t===void 0?!0:t===""?ge.HasTags(e):li.Eval(t,i=>ge.HasTags(e)&&e._tags[i])}}class Zi{constructor(){this.rootNodes=new Array,this.cameras=new Array,this.lights=new Array,this.meshes=new Array,this.skeletons=new Array,this.particleSystems=new Array,this.animations=[],this.animationGroups=new Array,this.multiMaterials=new Array,this.materials=new Array,this.morphTargetManagers=new Array,this.geometries=new Array,this.transformNodes=new Array,this.actionManagers=new Array,this.textures=new Array,this._environmentTexture=null,this.postProcesses=new Array}static AddParser(e,t){this._BabylonFileParsers[e]=t}static GetParser(e){return this._BabylonFileParsers[e]?this._BabylonFileParsers[e]:null}static AddIndividualParser(e,t){this._IndividualBabylonFileParsers[e]=t}static GetIndividualParser(e){return this._IndividualBabylonFileParsers[e]?this._IndividualBabylonFileParsers[e]:null}static Parse(e,t,i,s){for(const r in this._BabylonFileParsers)Object.prototype.hasOwnProperty.call(this._BabylonFileParsers,r)&&this._BabylonFileParsers[r](e,t,i,s)}get environmentTexture(){return this._environmentTexture}set environmentTexture(e){this._environmentTexture=e}getNodes(){let e=new Array;return e=e.concat(this.meshes),e=e.concat(this.lights),e=e.concat(this.cameras),e=e.concat(this.transformNodes),this.skeletons.forEach(t=>e=e.concat(t.bones)),e}}Zi._BabylonFileParsers={},Zi._IndividualBabylonFileParsers={};function T(c,e,t,i){var s=arguments.length,r=s<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,t):i,n;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(c,e,t,i);else for(var a=c.length-1;a>=0;a--)(n=c[a])&&(r=(s<3?n(r):s>3?n(e,t,r):n(e,t))||r);return s>3&&r&&Object.defineProperty(e,t,r),r}const qi={},ji={},ur=function(c,e,t){const i=c();ge&&ge.AddTagsTo(i,e.tags);const s=Rs(i);for(const r in s){const n=s[r],a=e[r],o=n.type;if(a!=null&&(r!=="uniqueId"||ae.AllowLoadingUniqueId))switch(o){case 0:case 6:case 11:i[r]=a;break;case 1:i[r]=t||a.isRenderTarget?a:a.clone();break;case 2:case 3:case 4:case 5:case 7:case 10:case 12:i[r]=t?a:a.clone();break}}return i};function bn(c){const e=c.getClassName();return qi[e]||(qi[e]={}),qi[e]}function Rs(c){const e=c.getClassName();if(ji[e])return ji[e];ji[e]={};const t=ji[e];let i=c,s=e;for(;s;){const r=qi[s];for(const o in r)t[o]=r[o];let n,a=!1;do{if(n=Object.getPrototypeOf(i),!n.getClassName){a=!0;break}if(n.getClassName()!==s)break;i=n}while(n);if(a)break;s=n.getClassName(),i=n}return t}function yt(c,e){return(t,i)=>{const s=bn(t);s[i]||(s[i]={type:c,sourceName:e})}}function Sn(c,e=null){return(t,i)=>{const s=e||"_"+i;Object.defineProperty(t,i,{get:function(){return this[s]},set:function(r){typeof this.equals=="function"&&this.equals(r)||this[s]!==r&&(this[s]=r,t[c].apply(this))},enumerable:!0,configurable:!0})}}function be(c,e=null){return Sn(c,e)}function R(c){return yt(0,c)}function mt(c){return yt(1,c)}function ci(c){return yt(2,c)}function Ni(c){return yt(3,c)}function xn(c){return yt(4,c)}function Bt(c){return yt(5,c)}function Mn(c){return yt(6,c)}function An(c){return yt(7,c)}function dr(c){return yt(8,c)}function Rn(c){return yt(10,c)}class ae{static AppendSerializedAnimations(e,t){if(e.animations){t.animations=[];for(let i=0;i<e.animations.length;i++){const s=e.animations[i];t.animations.push(s.serialize())}}}static Serialize(e,t){t||(t={}),ge&&(t.tags=ge.GetTags(e));const i=Rs(e);for(const s in i){const r=i[s],n=r.sourceName||s,a=r.type,o=e[s];if(o!=null&&(s!=="uniqueId"||ae.AllowLoadingUniqueId))switch(a){case 0:t[n]=o;break;case 1:t[n]=o.serialize();break;case 2:t[n]=o.asArray();break;case 3:t[n]=o.serialize();break;case 4:t[n]=o.asArray();break;case 5:t[n]=o.asArray();break;case 6:t[n]=o.id;break;case 7:t[n]=o.serialize();break;case 8:t[n]=o.asArray();break;case 9:t[n]=o.serialize();break;case 10:t[n]=o.asArray();break;case 11:t[n]=o.id;break;case 12:t[n]=o.asArray();break}}return t}static Parse(e,t,i,s=null){const r=e();s||(s=""),ge&&ge.AddTagsTo(r,t.tags);const n=Rs(r);for(const a in n){const o=n[a],h=t[o.sourceName||a],l=o.type;if(h!=null&&(a!=="uniqueId"||ae.AllowLoadingUniqueId)){const u=r;switch(l){case 0:u[a]=h;break;case 1:i&&(u[a]=ae._TextureParser(h,i,s));break;case 2:u[a]=re.FromArray(h);break;case 3:u[a]=ae._FresnelParametersParser(h);break;case 4:u[a]=ve.FromArray(h);break;case 5:u[a]=p.FromArray(h);break;case 6:i&&(u[a]=i.getLastMeshById(h));break;case 7:u[a]=ae._ColorCurvesParser(h);break;case 8:u[a]=me.FromArray(h);break;case 9:u[a]=ae._ImageProcessingConfigurationParser(h);break;case 10:u[a]=Z.FromArray(h);break;case 11:i&&(u[a]=i.getCameraById(h));break;case 12:u[a]=x.FromArray(h);break}}}return r}static Clone(e,t){return ur(e,t,!1)}static Instanciate(e,t){return ur(e,t,!0)}}ae.AllowLoadingUniqueId=!1,ae._ImageProcessingConfigurationParser=c=>{throw $("ImageProcessingConfiguration")},ae._FresnelParametersParser=c=>{throw $("FresnelParameters")},ae._ColorCurvesParser=c=>{throw $("ColorCurves")},ae._TextureParser=(c,e,t)=>{throw $("Texture")};function $t(c,e,t,i){const s=t.value;t.value=(...r)=>{let n=s;if(typeof _native<"u"&&_native[e]){const a=_native[e];i?n=(...o)=>i(...o)?a(...o):s(...o):n=a}return c[e]=n,n(...r)}}$t.filter=function(c){return(e,t,i)=>$t(e,t,i,c)};class ys{constructor(e){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=e,e)for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&this._setDefaultValue(t)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(e=!1){this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||e,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const e of Object.keys(this))e[0]!=="_"&&this._keys.push(e);if(this._externalProperties)for(const e in this._externalProperties)this._keys.indexOf(e)===-1&&this._keys.push(e)}isEqual(e){if(this._keys.length!==e._keys.length)return!1;for(let t=0;t<this._keys.length;t++){const i=this._keys[t];if(this[i]!==e[i])return!1}return!0}cloneTo(e){this._keys.length!==e._keys.length&&(e._keys=this._keys.slice(0));for(let t=0;t<this._keys.length;t++){const i=this._keys[t];e[i]=this[i]}}reset(){this._keys.forEach(e=>this._setDefaultValue(e))}_setDefaultValue(e){var t,i,s,r,n;const a=(s=(i=(t=this._externalProperties)===null||t===void 0?void 0:t[e])===null||i===void 0?void 0:i.type)!==null&&s!==void 0?s:typeof this[e],o=(n=(r=this._externalProperties)===null||r===void 0?void 0:r[e])===null||n===void 0?void 0:n.default;switch(a){case"number":this[e]=o??0;break;case"string":this[e]=o??"";break;default:this[e]=o??!1;break}}toString(){let e="";for(let t=0;t<this._keys.length;t++){const i=this._keys[t],s=this[i];switch(typeof s){case"number":case"string":e+="#define "+i+" "+s+`
`;break;default:s&&(e+="#define "+i+`
`);break}}return e}}class Ae{constructor(){this._dirty=!0,this._tempColor=new me(0,0,0,0),this._globalCurve=new me(0,0,0,0),this._highlightsCurve=new me(0,0,0,0),this._midtonesCurve=new me(0,0,0,0),this._shadowsCurve=new me(0,0,0,0),this._positiveCurve=new me(0,0,0,0),this._negativeCurve=new me(0,0,0,0),this._globalHue=30,this._globalDensity=0,this._globalSaturation=0,this._globalExposure=0,this._highlightsHue=30,this._highlightsDensity=0,this._highlightsSaturation=0,this._highlightsExposure=0,this._midtonesHue=30,this._midtonesDensity=0,this._midtonesSaturation=0,this._midtonesExposure=0,this._shadowsHue=30,this._shadowsDensity=0,this._shadowsSaturation=0,this._shadowsExposure=0}get globalHue(){return this._globalHue}set globalHue(e){this._globalHue=e,this._dirty=!0}get globalDensity(){return this._globalDensity}set globalDensity(e){this._globalDensity=e,this._dirty=!0}get globalSaturation(){return this._globalSaturation}set globalSaturation(e){this._globalSaturation=e,this._dirty=!0}get globalExposure(){return this._globalExposure}set globalExposure(e){this._globalExposure=e,this._dirty=!0}get highlightsHue(){return this._highlightsHue}set highlightsHue(e){this._highlightsHue=e,this._dirty=!0}get highlightsDensity(){return this._highlightsDensity}set highlightsDensity(e){this._highlightsDensity=e,this._dirty=!0}get highlightsSaturation(){return this._highlightsSaturation}set highlightsSaturation(e){this._highlightsSaturation=e,this._dirty=!0}get highlightsExposure(){return this._highlightsExposure}set highlightsExposure(e){this._highlightsExposure=e,this._dirty=!0}get midtonesHue(){return this._midtonesHue}set midtonesHue(e){this._midtonesHue=e,this._dirty=!0}get midtonesDensity(){return this._midtonesDensity}set midtonesDensity(e){this._midtonesDensity=e,this._dirty=!0}get midtonesSaturation(){return this._midtonesSaturation}set midtonesSaturation(e){this._midtonesSaturation=e,this._dirty=!0}get midtonesExposure(){return this._midtonesExposure}set midtonesExposure(e){this._midtonesExposure=e,this._dirty=!0}get shadowsHue(){return this._shadowsHue}set shadowsHue(e){this._shadowsHue=e,this._dirty=!0}get shadowsDensity(){return this._shadowsDensity}set shadowsDensity(e){this._shadowsDensity=e,this._dirty=!0}get shadowsSaturation(){return this._shadowsSaturation}set shadowsSaturation(e){this._shadowsSaturation=e,this._dirty=!0}get shadowsExposure(){return this._shadowsExposure}set shadowsExposure(e){this._shadowsExposure=e,this._dirty=!0}getClassName(){return"ColorCurves"}static Bind(e,t,i="vCameraColorCurvePositive",s="vCameraColorCurveNeutral",r="vCameraColorCurveNegative"){e._dirty&&(e._dirty=!1,e._getColorGradingDataToRef(e._globalHue,e._globalDensity,e._globalSaturation,e._globalExposure,e._globalCurve),e._getColorGradingDataToRef(e._highlightsHue,e._highlightsDensity,e._highlightsSaturation,e._highlightsExposure,e._tempColor),e._tempColor.multiplyToRef(e._globalCurve,e._highlightsCurve),e._getColorGradingDataToRef(e._midtonesHue,e._midtonesDensity,e._midtonesSaturation,e._midtonesExposure,e._tempColor),e._tempColor.multiplyToRef(e._globalCurve,e._midtonesCurve),e._getColorGradingDataToRef(e._shadowsHue,e._shadowsDensity,e._shadowsSaturation,e._shadowsExposure,e._tempColor),e._tempColor.multiplyToRef(e._globalCurve,e._shadowsCurve),e._highlightsCurve.subtractToRef(e._midtonesCurve,e._positiveCurve),e._midtonesCurve.subtractToRef(e._shadowsCurve,e._negativeCurve)),t&&(t.setFloat4(i,e._positiveCurve.r,e._positiveCurve.g,e._positiveCurve.b,e._positiveCurve.a),t.setFloat4(s,e._midtonesCurve.r,e._midtonesCurve.g,e._midtonesCurve.b,e._midtonesCurve.a),t.setFloat4(r,e._negativeCurve.r,e._negativeCurve.g,e._negativeCurve.b,e._negativeCurve.a))}static PrepareUniforms(e){e.push("vCameraColorCurveNeutral","vCameraColorCurvePositive","vCameraColorCurveNegative")}_getColorGradingDataToRef(e,t,i,s,r){e!=null&&(e=Ae._Clamp(e,0,360),t=Ae._Clamp(t,-100,100),i=Ae._Clamp(i,-100,100),s=Ae._Clamp(s,-100,100),t=Ae._ApplyColorGradingSliderNonlinear(t),t*=.5,s=Ae._ApplyColorGradingSliderNonlinear(s),t<0&&(t*=-1,e=(e+180)%360),Ae._FromHSBToRef(e,t,50+.25*s,r),r.scaleToRef(2,r),r.a=1+.01*i)}static _ApplyColorGradingSliderNonlinear(e){e/=100;let t=Math.abs(e);return t=Math.pow(t,2),e<0&&(t*=-1),t*=100,t}static _FromHSBToRef(e,t,i,s){let r=Ae._Clamp(e,0,360);const n=Ae._Clamp(t/100,0,1),a=Ae._Clamp(i/100,0,1);if(n===0)s.r=a,s.g=a,s.b=a;else{r/=60;const o=Math.floor(r),h=r-o,l=a*(1-n),u=a*(1-n*h),d=a*(1-n*(1-h));switch(o){case 0:s.r=a,s.g=d,s.b=l;break;case 1:s.r=u,s.g=a,s.b=l;break;case 2:s.r=l,s.g=a,s.b=d;break;case 3:s.r=l,s.g=u,s.b=a;break;case 4:s.r=d,s.g=l,s.b=a;break;default:s.r=a,s.g=l,s.b=u;break}}s.a=1}static _Clamp(e,t,i){return Math.min(Math.max(e,t),i)}clone(){return ae.Clone(()=>new Ae,this)}serialize(){return ae.Serialize(this)}static Parse(e){return ae.Parse(()=>new Ae,e,null,null)}}T([R()],Ae.prototype,"_globalHue",void 0),T([R()],Ae.prototype,"_globalDensity",void 0),T([R()],Ae.prototype,"_globalSaturation",void 0),T([R()],Ae.prototype,"_globalExposure",void 0),T([R()],Ae.prototype,"_highlightsHue",void 0),T([R()],Ae.prototype,"_highlightsDensity",void 0),T([R()],Ae.prototype,"_highlightsSaturation",void 0),T([R()],Ae.prototype,"_highlightsExposure",void 0),T([R()],Ae.prototype,"_midtonesHue",void 0),T([R()],Ae.prototype,"_midtonesDensity",void 0),T([R()],Ae.prototype,"_midtonesSaturation",void 0),T([R()],Ae.prototype,"_midtonesExposure",void 0),ae._ColorCurvesParser=Ae.Parse;class pe{constructor(){this.colorCurves=new Ae,this._colorCurvesEnabled=!1,this._colorGradingEnabled=!1,this._colorGradingWithGreenDepth=!0,this._colorGradingBGR=!0,this._exposure=1,this._toneMappingEnabled=!1,this._toneMappingType=pe.TONEMAPPING_STANDARD,this._contrast=1,this.vignetteStretch=0,this.vignetteCenterX=0,this.vignetteCenterY=0,this.vignetteWeight=1.5,this.vignetteColor=new me(0,0,0,0),this.vignetteCameraFov=.5,this._vignetteBlendMode=pe.VIGNETTEMODE_MULTIPLY,this._vignetteEnabled=!1,this._ditheringEnabled=!1,this._ditheringIntensity=1/255,this._skipFinalColorClamp=!1,this._applyByPostProcess=!1,this._isEnabled=!0,this.onUpdateParameters=new F}get colorCurvesEnabled(){return this._colorCurvesEnabled}set colorCurvesEnabled(e){this._colorCurvesEnabled!==e&&(this._colorCurvesEnabled=e,this._updateParameters())}get colorGradingTexture(){return this._colorGradingTexture}set colorGradingTexture(e){this._colorGradingTexture!==e&&(this._colorGradingTexture=e,this._updateParameters())}get colorGradingEnabled(){return this._colorGradingEnabled}set colorGradingEnabled(e){this._colorGradingEnabled!==e&&(this._colorGradingEnabled=e,this._updateParameters())}get colorGradingWithGreenDepth(){return this._colorGradingWithGreenDepth}set colorGradingWithGreenDepth(e){this._colorGradingWithGreenDepth!==e&&(this._colorGradingWithGreenDepth=e,this._updateParameters())}get colorGradingBGR(){return this._colorGradingBGR}set colorGradingBGR(e){this._colorGradingBGR!==e&&(this._colorGradingBGR=e,this._updateParameters())}get exposure(){return this._exposure}set exposure(e){this._exposure!==e&&(this._exposure=e,this._updateParameters())}get toneMappingEnabled(){return this._toneMappingEnabled}set toneMappingEnabled(e){this._toneMappingEnabled!==e&&(this._toneMappingEnabled=e,this._updateParameters())}get toneMappingType(){return this._toneMappingType}set toneMappingType(e){this._toneMappingType!==e&&(this._toneMappingType=e,this._updateParameters())}get contrast(){return this._contrast}set contrast(e){this._contrast!==e&&(this._contrast=e,this._updateParameters())}get vignetteCentreY(){return this.vignetteCenterY}set vignetteCentreY(e){this.vignetteCenterY=e}get vignetteCentreX(){return this.vignetteCenterX}set vignetteCentreX(e){this.vignetteCenterX=e}get vignetteBlendMode(){return this._vignetteBlendMode}set vignetteBlendMode(e){this._vignetteBlendMode!==e&&(this._vignetteBlendMode=e,this._updateParameters())}get vignetteEnabled(){return this._vignetteEnabled}set vignetteEnabled(e){this._vignetteEnabled!==e&&(this._vignetteEnabled=e,this._updateParameters())}get ditheringEnabled(){return this._ditheringEnabled}set ditheringEnabled(e){this._ditheringEnabled!==e&&(this._ditheringEnabled=e,this._updateParameters())}get ditheringIntensity(){return this._ditheringIntensity}set ditheringIntensity(e){this._ditheringIntensity!==e&&(this._ditheringIntensity=e,this._updateParameters())}get skipFinalColorClamp(){return this._skipFinalColorClamp}set skipFinalColorClamp(e){this._skipFinalColorClamp!==e&&(this._skipFinalColorClamp=e,this._updateParameters())}get applyByPostProcess(){return this._applyByPostProcess}set applyByPostProcess(e){this._applyByPostProcess!==e&&(this._applyByPostProcess=e,this._updateParameters())}get isEnabled(){return this._isEnabled}set isEnabled(e){this._isEnabled!==e&&(this._isEnabled=e,this._updateParameters())}_updateParameters(){this.onUpdateParameters.notifyObservers(this)}getClassName(){return"ImageProcessingConfiguration"}static PrepareUniforms(e,t){t.EXPOSURE&&e.push("exposureLinear"),t.CONTRAST&&e.push("contrast"),t.COLORGRADING&&e.push("colorTransformSettings"),(t.VIGNETTE||t.DITHER)&&e.push("vInverseScreenSize"),t.VIGNETTE&&(e.push("vignetteSettings1"),e.push("vignetteSettings2")),t.COLORCURVES&&Ae.PrepareUniforms(e),t.DITHER&&e.push("ditherIntensity")}static PrepareSamplers(e,t){t.COLORGRADING&&e.push("txColorTransform")}prepareDefines(e,t=!1){if(t!==this.applyByPostProcess||!this._isEnabled){e.VIGNETTE=!1,e.TONEMAPPING=!1,e.TONEMAPPING_ACES=!1,e.CONTRAST=!1,e.EXPOSURE=!1,e.COLORCURVES=!1,e.COLORGRADING=!1,e.COLORGRADING3D=!1,e.DITHER=!1,e.IMAGEPROCESSING=!1,e.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,e.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess&&this._isEnabled;return}switch(e.VIGNETTE=this.vignetteEnabled,e.VIGNETTEBLENDMODEMULTIPLY=this.vignetteBlendMode===pe._VIGNETTEMODE_MULTIPLY,e.VIGNETTEBLENDMODEOPAQUE=!e.VIGNETTEBLENDMODEMULTIPLY,e.TONEMAPPING=this.toneMappingEnabled,this._toneMappingType){case pe.TONEMAPPING_ACES:e.TONEMAPPING_ACES=!0;break;default:e.TONEMAPPING_ACES=!1;break}e.CONTRAST=this.contrast!==1,e.EXPOSURE=this.exposure!==1,e.COLORCURVES=this.colorCurvesEnabled&&!!this.colorCurves,e.COLORGRADING=this.colorGradingEnabled&&!!this.colorGradingTexture,e.COLORGRADING?e.COLORGRADING3D=this.colorGradingTexture.is3D:e.COLORGRADING3D=!1,e.SAMPLER3DGREENDEPTH=this.colorGradingWithGreenDepth,e.SAMPLER3DBGRMAP=this.colorGradingBGR,e.DITHER=this._ditheringEnabled,e.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess,e.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,e.IMAGEPROCESSING=e.VIGNETTE||e.TONEMAPPING||e.CONTRAST||e.EXPOSURE||e.COLORCURVES||e.COLORGRADING||e.DITHER}isReady(){return!this.colorGradingEnabled||!this.colorGradingTexture||this.colorGradingTexture.isReady()}bind(e,t){if(this._colorCurvesEnabled&&this.colorCurves&&Ae.Bind(this.colorCurves,e),this._vignetteEnabled||this._ditheringEnabled){const i=1/e.getEngine().getRenderWidth(),s=1/e.getEngine().getRenderHeight();if(e.setFloat2("vInverseScreenSize",i,s),this._ditheringEnabled&&e.setFloat("ditherIntensity",.5*this._ditheringIntensity),this._vignetteEnabled){const r=t??s/i;let n=Math.tan(this.vignetteCameraFov*.5),a=n*r;const o=Math.sqrt(a*n);a=H.Mix(a,o,this.vignetteStretch),n=H.Mix(n,o,this.vignetteStretch),e.setFloat4("vignetteSettings1",a,n,-a*this.vignetteCenterX,-n*this.vignetteCenterY);const h=-2*this.vignetteWeight;e.setFloat4("vignetteSettings2",this.vignetteColor.r,this.vignetteColor.g,this.vignetteColor.b,h)}}if(e.setFloat("exposureLinear",this.exposure),e.setFloat("contrast",this.contrast),this.colorGradingTexture){e.setTexture("txColorTransform",this.colorGradingTexture);const i=this.colorGradingTexture.getSize().height;e.setFloat4("colorTransformSettings",(i-1)/i,.5/i,i,this.colorGradingTexture.level)}}clone(){return ae.Clone(()=>new pe,this)}serialize(){return ae.Serialize(this)}static Parse(e){const t=ae.Parse(()=>new pe,e,null,null);return e.vignetteCentreX!==void 0&&(t.vignetteCenterX=e.vignetteCentreX),e.vignetteCentreY!==void 0&&(t.vignetteCenterY=e.vignetteCentreY),t}static get VIGNETTEMODE_MULTIPLY(){return this._VIGNETTEMODE_MULTIPLY}static get VIGNETTEMODE_OPAQUE(){return this._VIGNETTEMODE_OPAQUE}}pe.TONEMAPPING_STANDARD=0,pe.TONEMAPPING_ACES=1,pe._VIGNETTEMODE_MULTIPLY=0,pe._VIGNETTEMODE_OPAQUE=1,T([An()],pe.prototype,"colorCurves",void 0),T([R()],pe.prototype,"_colorCurvesEnabled",void 0),T([mt("colorGradingTexture")],pe.prototype,"_colorGradingTexture",void 0),T([R()],pe.prototype,"_colorGradingEnabled",void 0),T([R()],pe.prototype,"_colorGradingWithGreenDepth",void 0),T([R()],pe.prototype,"_colorGradingBGR",void 0),T([R()],pe.prototype,"_exposure",void 0),T([R()],pe.prototype,"_toneMappingEnabled",void 0),T([R()],pe.prototype,"_toneMappingType",void 0),T([R()],pe.prototype,"_contrast",void 0),T([R()],pe.prototype,"vignetteStretch",void 0),T([R()],pe.prototype,"vignetteCenterX",void 0),T([R()],pe.prototype,"vignetteCenterY",void 0),T([R()],pe.prototype,"vignetteWeight",void 0),T([dr()],pe.prototype,"vignetteColor",void 0),T([R()],pe.prototype,"vignetteCameraFov",void 0),T([R()],pe.prototype,"_vignetteBlendMode",void 0),T([R()],pe.prototype,"_vignetteEnabled",void 0),T([R()],pe.prototype,"_ditheringEnabled",void 0),T([R()],pe.prototype,"_ditheringIntensity",void 0),T([R()],pe.prototype,"_skipFinalColorClamp",void 0),T([R()],pe.prototype,"_applyByPostProcess",void 0),T([R()],pe.prototype,"_isEnabled",void 0),ae._ImageProcessingConfigurationParser=pe.Parse,oe.prototype.createUniformBuffer=function(c){const e=this._gl.createBuffer();if(!e)throw new Error("Unable to create uniform buffer");const t=new Di(e);return this.bindUniformBuffer(t),c instanceof Float32Array?this._gl.bufferData(this._gl.UNIFORM_BUFFER,c,this._gl.STATIC_DRAW):this._gl.bufferData(this._gl.UNIFORM_BUFFER,new Float32Array(c),this._gl.STATIC_DRAW),this.bindUniformBuffer(null),t.references=1,t},oe.prototype.createDynamicUniformBuffer=function(c){const e=this._gl.createBuffer();if(!e)throw new Error("Unable to create dynamic uniform buffer");const t=new Di(e);return this.bindUniformBuffer(t),c instanceof Float32Array?this._gl.bufferData(this._gl.UNIFORM_BUFFER,c,this._gl.DYNAMIC_DRAW):this._gl.bufferData(this._gl.UNIFORM_BUFFER,new Float32Array(c),this._gl.DYNAMIC_DRAW),this.bindUniformBuffer(null),t.references=1,t},oe.prototype.updateUniformBuffer=function(c,e,t,i){this.bindUniformBuffer(c),t===void 0&&(t=0),i===void 0?e instanceof Float32Array?this._gl.bufferSubData(this._gl.UNIFORM_BUFFER,t,e):this._gl.bufferSubData(this._gl.UNIFORM_BUFFER,t,new Float32Array(e)):e instanceof Float32Array?this._gl.bufferSubData(this._gl.UNIFORM_BUFFER,0,e.subarray(t,t+i)):this._gl.bufferSubData(this._gl.UNIFORM_BUFFER,0,new Float32Array(e).subarray(t,t+i)),this.bindUniformBuffer(null)},oe.prototype.bindUniformBuffer=function(c){this._gl.bindBuffer(this._gl.UNIFORM_BUFFER,c?c.underlyingResource:null)},oe.prototype.bindUniformBufferBase=function(c,e,t){this._gl.bindBufferBase(this._gl.UNIFORM_BUFFER,e,c?c.underlyingResource:null)},oe.prototype.bindUniformBlock=function(c,e,t){const i=c.program,s=this._gl.getUniformBlockIndex(i,e);s!==4294967295&&this._gl.uniformBlockBinding(i,s,t)};class V{constructor(e,t,i,s,r=!1){this._valueCache={},this._engine=e,this._noUBO=!e.supportsUniformBuffers||r,this._dynamic=i,this._name=s??"no-name",this._data=t||[],this._uniformLocations={},this._uniformSizes={},this._uniformArraySizes={},this._uniformLocationPointer=0,this._needSync=!1,this._engine._features.trackUbosInFrame&&(this._buffers=[],this._bufferIndex=-1,this._createBufferOnWrite=!1,this._currentFrameId=0),this._noUBO?(this.updateMatrix3x3=this._updateMatrix3x3ForEffect,this.updateMatrix2x2=this._updateMatrix2x2ForEffect,this.updateFloat=this._updateFloatForEffect,this.updateFloat2=this._updateFloat2ForEffect,this.updateFloat3=this._updateFloat3ForEffect,this.updateFloat4=this._updateFloat4ForEffect,this.updateFloatArray=this._updateFloatArrayForEffect,this.updateArray=this._updateArrayForEffect,this.updateIntArray=this._updateIntArrayForEffect,this.updateUIntArray=this._updateUIntArrayForEffect,this.updateMatrix=this._updateMatrixForEffect,this.updateMatrices=this._updateMatricesForEffect,this.updateVector3=this._updateVector3ForEffect,this.updateVector4=this._updateVector4ForEffect,this.updateColor3=this._updateColor3ForEffect,this.updateColor4=this._updateColor4ForEffect,this.updateDirectColor4=this._updateDirectColor4ForEffect,this.updateInt=this._updateIntForEffect,this.updateInt2=this._updateInt2ForEffect,this.updateInt3=this._updateInt3ForEffect,this.updateInt4=this._updateInt4ForEffect,this.updateUInt=this._updateUIntForEffect,this.updateUInt2=this._updateUInt2ForEffect,this.updateUInt3=this._updateUInt3ForEffect,this.updateUInt4=this._updateUInt4ForEffect):(this._engine._uniformBuffers.push(this),this.updateMatrix3x3=this._updateMatrix3x3ForUniform,this.updateMatrix2x2=this._updateMatrix2x2ForUniform,this.updateFloat=this._updateFloatForUniform,this.updateFloat2=this._updateFloat2ForUniform,this.updateFloat3=this._updateFloat3ForUniform,this.updateFloat4=this._updateFloat4ForUniform,this.updateFloatArray=this._updateFloatArrayForUniform,this.updateArray=this._updateArrayForUniform,this.updateIntArray=this._updateIntArrayForUniform,this.updateUIntArray=this._updateUIntArrayForUniform,this.updateMatrix=this._updateMatrixForUniform,this.updateMatrices=this._updateMatricesForUniform,this.updateVector3=this._updateVector3ForUniform,this.updateVector4=this._updateVector4ForUniform,this.updateColor3=this._updateColor3ForUniform,this.updateColor4=this._updateColor4ForUniform,this.updateDirectColor4=this._updateDirectColor4ForUniform,this.updateInt=this._updateIntForUniform,this.updateInt2=this._updateInt2ForUniform,this.updateInt3=this._updateInt3ForUniform,this.updateInt4=this._updateInt4ForUniform,this.updateUInt=this._updateUIntForUniform,this.updateUInt2=this._updateUInt2ForUniform,this.updateUInt3=this._updateUInt3ForUniform,this.updateUInt4=this._updateUInt4ForUniform)}get useUbo(){return!this._noUBO}get isSync(){return!this._needSync}isDynamic(){return this._dynamic!==void 0}getData(){return this._bufferData}getBuffer(){return this._buffer}_fillAlignment(e){let t;if(e<=2?t=e:t=4,this._uniformLocationPointer%t!==0){const i=this._uniformLocationPointer;this._uniformLocationPointer+=t-this._uniformLocationPointer%t;const s=this._uniformLocationPointer-i;for(let r=0;r<s;r++)this._data.push(0)}}addUniform(e,t,i=0){if(this._noUBO||this._uniformLocations[e]!==void 0)return;let s;if(i>0){if(t instanceof Array)throw"addUniform should not be use with Array in UBO: "+e;if(this._fillAlignment(4),this._uniformArraySizes[e]={strideSize:t,arraySize:i},t==16)t=t*i;else{const n=(4-t)*i;t=t*i+n}s=[];for(let r=0;r<t;r++)s.push(0)}else{if(t instanceof Array)s=t,t=s.length;else{t=t,s=[];for(let r=0;r<t;r++)s.push(0)}this._fillAlignment(t)}this._uniformSizes[e]=t,this._uniformLocations[e]=this._uniformLocationPointer,this._uniformLocationPointer+=t;for(let r=0;r<t;r++)this._data.push(s[r]);this._needSync=!0}addMatrix(e,t){this.addUniform(e,Array.prototype.slice.call(t.toArray()))}addFloat2(e,t,i){const s=[t,i];this.addUniform(e,s)}addFloat3(e,t,i,s){const r=[t,i,s];this.addUniform(e,r)}addColor3(e,t){const i=[t.r,t.g,t.b];this.addUniform(e,i)}addColor4(e,t,i){const s=[t.r,t.g,t.b,i];this.addUniform(e,s)}addVector3(e,t){const i=[t.x,t.y,t.z];this.addUniform(e,i)}addMatrix3x3(e){this.addUniform(e,12)}addMatrix2x2(e){this.addUniform(e,8)}create(){this._noUBO||this._buffer||(this._fillAlignment(4),this._bufferData=new Float32Array(this._data),this._rebuild(),this._needSync=!0)}_rebuild(){this._noUBO||!this._bufferData||(this._dynamic?this._buffer=this._engine.createDynamicUniformBuffer(this._bufferData):this._buffer=this._engine.createUniformBuffer(this._bufferData),this._engine._features.trackUbosInFrame&&(this._buffers.push([this._buffer,this._engine._features.checkUbosContentBeforeUpload?this._bufferData.slice():void 0]),this._bufferIndex=this._buffers.length-1,this._createBufferOnWrite=!1))}get _numBuffers(){return this._buffers.length}get _indexBuffer(){return this._bufferIndex}get name(){return this._name}_buffersEqual(e,t){for(let i=0;i<e.length;++i)if(e[i]!==t[i])return!1;return!0}_copyBuffer(e,t){for(let i=0;i<e.length;++i)t[i]=e[i]}update(){if(!this._noUBO){if(this.bindUniformBuffer(),!this._buffer){this.create();return}if(!this._dynamic&&!this._needSync){this._createBufferOnWrite=this._engine._features.trackUbosInFrame;return}if(this._buffers&&this._buffers.length>1&&this._buffers[this._bufferIndex][1])if(this._buffersEqual(this._bufferData,this._buffers[this._bufferIndex][1])){this._needSync=!1,this._createBufferOnWrite=this._engine._features.trackUbosInFrame;return}else this._copyBuffer(this._bufferData,this._buffers[this._bufferIndex][1]);this._engine.updateUniformBuffer(this._buffer,this._bufferData),this._engine._features._collectUbosUpdatedInFrame&&(V._UpdatedUbosInFrame[this._name]||(V._UpdatedUbosInFrame[this._name]=0),V._UpdatedUbosInFrame[this._name]++),this._needSync=!1,this._createBufferOnWrite=this._engine._features.trackUbosInFrame}}_createNewBuffer(){this._bufferIndex+1<this._buffers.length?(this._bufferIndex++,this._buffer=this._buffers[this._bufferIndex][0],this._createBufferOnWrite=!1,this._needSync=!0):this._rebuild()}_checkNewFrame(){this._engine._features.trackUbosInFrame&&this._currentFrameId!==this._engine.frameId&&(this._currentFrameId=this._engine.frameId,this._createBufferOnWrite=!1,this._buffers&&this._buffers.length>0?(this._needSync=this._bufferIndex!==0,this._bufferIndex=0,this._buffer=this._buffers[this._bufferIndex][0]):this._bufferIndex=-1)}updateUniform(e,t,i){this._checkNewFrame();let s=this._uniformLocations[e];if(s===void 0){if(this._buffer){O.Error("Cannot add an uniform after UBO has been created.");return}this.addUniform(e,i),s=this._uniformLocations[e]}if(this._buffer||this.create(),this._dynamic)for(let r=0;r<i;r++)this._bufferData[s+r]=t[r];else{let r=!1;for(let n=0;n<i;n++)(i===16&&!this._engine._features.uniformBufferHardCheckMatrix||this._bufferData[s+n]!==H.FloatRound(t[n]))&&(r=!0,this._createBufferOnWrite&&this._createNewBuffer(),this._bufferData[s+n]=t[n]);this._needSync=this._needSync||r}}updateUniformArray(e,t,i){this._checkNewFrame();const s=this._uniformLocations[e];if(s===void 0){O.Error("Cannot add an uniform Array dynamically. Please, add it using addUniform and make sure that uniform buffers are supported by the current engine.");return}this._buffer||this.create();const r=this._uniformArraySizes[e];if(this._dynamic)for(let n=0;n<i;n++)this._bufferData[s+n]=t[n];else{let n=!1,a=0,o=0;for(let h=0;h<i;h++)if(this._bufferData[s+o*4+a]!==H.FloatRound(t[h])&&(n=!0,this._createBufferOnWrite&&this._createNewBuffer(),this._bufferData[s+o*4+a]=t[h]),a++,a===r.strideSize){for(;a<4;a++)this._bufferData[s+o*4+a]=0;a=0,o++}this._needSync=this._needSync||n}}_cacheMatrix(e,t){this._checkNewFrame();const i=this._valueCache[e],s=t.updateFlag;return i!==void 0&&i===s?!1:(this._valueCache[e]=s,!0)}_updateMatrix3x3ForUniform(e,t){for(let i=0;i<3;i++)V._TempBuffer[i*4]=t[i*3],V._TempBuffer[i*4+1]=t[i*3+1],V._TempBuffer[i*4+2]=t[i*3+2],V._TempBuffer[i*4+3]=0;this.updateUniform(e,V._TempBuffer,12)}_updateMatrix3x3ForEffect(e,t){this._currentEffect.setMatrix3x3(e,t)}_updateMatrix2x2ForEffect(e,t){this._currentEffect.setMatrix2x2(e,t)}_updateMatrix2x2ForUniform(e,t){for(let i=0;i<2;i++)V._TempBuffer[i*4]=t[i*2],V._TempBuffer[i*4+1]=t[i*2+1],V._TempBuffer[i*4+2]=0,V._TempBuffer[i*4+3]=0;this.updateUniform(e,V._TempBuffer,8)}_updateFloatForEffect(e,t){this._currentEffect.setFloat(e,t)}_updateFloatForUniform(e,t){V._TempBuffer[0]=t,this.updateUniform(e,V._TempBuffer,1)}_updateFloat2ForEffect(e,t,i,s=""){this._currentEffect.setFloat2(e+s,t,i)}_updateFloat2ForUniform(e,t,i){V._TempBuffer[0]=t,V._TempBuffer[1]=i,this.updateUniform(e,V._TempBuffer,2)}_updateFloat3ForEffect(e,t,i,s,r=""){this._currentEffect.setFloat3(e+r,t,i,s)}_updateFloat3ForUniform(e,t,i,s){V._TempBuffer[0]=t,V._TempBuffer[1]=i,V._TempBuffer[2]=s,this.updateUniform(e,V._TempBuffer,3)}_updateFloat4ForEffect(e,t,i,s,r,n=""){this._currentEffect.setFloat4(e+n,t,i,s,r)}_updateFloat4ForUniform(e,t,i,s,r){V._TempBuffer[0]=t,V._TempBuffer[1]=i,V._TempBuffer[2]=s,V._TempBuffer[3]=r,this.updateUniform(e,V._TempBuffer,4)}_updateFloatArrayForEffect(e,t){this._currentEffect.setFloatArray(e,t)}_updateFloatArrayForUniform(e,t){this.updateUniformArray(e,t,t.length)}_updateArrayForEffect(e,t){this._currentEffect.setArray(e,t)}_updateArrayForUniform(e,t){this.updateUniformArray(e,t,t.length)}_updateIntArrayForEffect(e,t){this._currentEffect.setIntArray(e,t)}_updateIntArrayForUniform(e,t){V._TempBufferInt32View.set(t),this.updateUniformArray(e,V._TempBuffer,t.length)}_updateUIntArrayForEffect(e,t){this._currentEffect.setUIntArray(e,t)}_updateUIntArrayForUniform(e,t){V._TempBufferUInt32View.set(t),this.updateUniformArray(e,V._TempBuffer,t.length)}_updateMatrixForEffect(e,t){this._currentEffect.setMatrix(e,t)}_updateMatrixForUniform(e,t){this._cacheMatrix(e,t)&&this.updateUniform(e,t.toArray(),16)}_updateMatricesForEffect(e,t){this._currentEffect.setMatrices(e,t)}_updateMatricesForUniform(e,t){this.updateUniform(e,t,t.length)}_updateVector3ForEffect(e,t){this._currentEffect.setVector3(e,t)}_updateVector3ForUniform(e,t){V._TempBuffer[0]=t.x,V._TempBuffer[1]=t.y,V._TempBuffer[2]=t.z,this.updateUniform(e,V._TempBuffer,3)}_updateVector4ForEffect(e,t){this._currentEffect.setVector4(e,t)}_updateVector4ForUniform(e,t){V._TempBuffer[0]=t.x,V._TempBuffer[1]=t.y,V._TempBuffer[2]=t.z,V._TempBuffer[3]=t.w,this.updateUniform(e,V._TempBuffer,4)}_updateColor3ForEffect(e,t,i=""){this._currentEffect.setColor3(e+i,t)}_updateColor3ForUniform(e,t){V._TempBuffer[0]=t.r,V._TempBuffer[1]=t.g,V._TempBuffer[2]=t.b,this.updateUniform(e,V._TempBuffer,3)}_updateColor4ForEffect(e,t,i,s=""){this._currentEffect.setColor4(e+s,t,i)}_updateDirectColor4ForEffect(e,t,i=""){this._currentEffect.setDirectColor4(e+i,t)}_updateColor4ForUniform(e,t,i){V._TempBuffer[0]=t.r,V._TempBuffer[1]=t.g,V._TempBuffer[2]=t.b,V._TempBuffer[3]=i,this.updateUniform(e,V._TempBuffer,4)}_updateDirectColor4ForUniform(e,t){V._TempBuffer[0]=t.r,V._TempBuffer[1]=t.g,V._TempBuffer[2]=t.b,V._TempBuffer[3]=t.a,this.updateUniform(e,V._TempBuffer,4)}_updateIntForEffect(e,t,i=""){this._currentEffect.setInt(e+i,t)}_updateIntForUniform(e,t){V._TempBufferInt32View[0]=t,this.updateUniform(e,V._TempBuffer,1)}_updateInt2ForEffect(e,t,i,s=""){this._currentEffect.setInt2(e+s,t,i)}_updateInt2ForUniform(e,t,i){V._TempBufferInt32View[0]=t,V._TempBufferInt32View[1]=i,this.updateUniform(e,V._TempBuffer,2)}_updateInt3ForEffect(e,t,i,s,r=""){this._currentEffect.setInt3(e+r,t,i,s)}_updateInt3ForUniform(e,t,i,s){V._TempBufferInt32View[0]=t,V._TempBufferInt32View[1]=i,V._TempBufferInt32View[2]=s,this.updateUniform(e,V._TempBuffer,3)}_updateInt4ForEffect(e,t,i,s,r,n=""){this._currentEffect.setInt4(e+n,t,i,s,r)}_updateInt4ForUniform(e,t,i,s,r){V._TempBufferInt32View[0]=t,V._TempBufferInt32View[1]=i,V._TempBufferInt32View[2]=s,V._TempBufferInt32View[3]=r,this.updateUniform(e,V._TempBuffer,4)}_updateUIntForEffect(e,t,i=""){this._currentEffect.setUInt(e+i,t)}_updateUIntForUniform(e,t){V._TempBufferUInt32View[0]=t,this.updateUniform(e,V._TempBuffer,1)}_updateUInt2ForEffect(e,t,i,s=""){this._currentEffect.setUInt2(e+s,t,i)}_updateUInt2ForUniform(e,t,i){V._TempBufferUInt32View[0]=t,V._TempBufferUInt32View[1]=i,this.updateUniform(e,V._TempBuffer,2)}_updateUInt3ForEffect(e,t,i,s,r=""){this._currentEffect.setUInt3(e+r,t,i,s)}_updateUInt3ForUniform(e,t,i,s){V._TempBufferUInt32View[0]=t,V._TempBufferUInt32View[1]=i,V._TempBufferUInt32View[2]=s,this.updateUniform(e,V._TempBuffer,3)}_updateUInt4ForEffect(e,t,i,s,r,n=""){this._currentEffect.setUInt4(e+n,t,i,s,r)}_updateUInt4ForUniform(e,t,i,s,r){V._TempBufferUInt32View[0]=t,V._TempBufferUInt32View[1]=i,V._TempBufferUInt32View[2]=s,V._TempBufferUInt32View[3]=r,this.updateUniform(e,V._TempBuffer,4)}setTexture(e,t){this._currentEffect.setTexture(e,t)}updateUniformDirectly(e,t){this.updateUniform(e,t,t.length),this.update()}bindToEffect(e,t){this._currentEffect=e,this._currentEffectName=t}bindUniformBuffer(){!this._noUBO&&this._buffer&&this._currentEffect&&this._currentEffect.bindUniformBuffer(this._buffer,this._currentEffectName)}unbindEffect(){this._currentEffect=void 0,this._currentEffectName=void 0}setDataBuffer(e){if(!this._buffers)return this._buffer===e;for(let t=0;t<this._buffers.length;++t)if(this._buffers[t][0]===e)return this._bufferIndex=t,this._buffer=e,this._createBufferOnWrite=!1,this._currentEffect=void 0,!0;return!1}dispose(){if(this._noUBO)return;const e=this._engine._uniformBuffers,t=e.indexOf(this);if(t!==-1&&(e[t]=e[e.length-1],e.pop()),this._engine._features.trackUbosInFrame&&this._buffers)for(let i=0;i<this._buffers.length;++i){const s=this._buffers[i][0];this._engine._releaseBuffer(s)}else this._buffer&&this._engine._releaseBuffer(this._buffer)&&(this._buffer=null)}}V._UpdatedUbosInFrame={},V._MAX_UNIFORM_SIZE=256,V._TempBuffer=new Float32Array(V._MAX_UNIFORM_SIZE),V._TempBufferInt32View=new Int32Array(V._TempBuffer.buffer),V._TempBufferUInt32View=new Uint32Array(V._TempBuffer.buffer);class $i{constructor(e,t,i,s=0,r=!1,n=!1,a=!1,o){this._isAlreadyOwned=!1,e.getScene?this._engine=e.getScene().getEngine():this._engine=e,this._updatable=i,this._instanced=n,this._divisor=o||1,t instanceof Pi?(this._data=null,this._buffer=t):(this._data=t,this._buffer=null),this.byteStride=a?s:s*Float32Array.BYTES_PER_ELEMENT,r||this.create()}createVertexBuffer(e,t,i,s,r,n=!1,a){const o=n?t:t*Float32Array.BYTES_PER_ELEMENT,h=s?n?s:s*Float32Array.BYTES_PER_ELEMENT:this.byteStride;return new g(this._engine,this,e,this._updatable,!0,h,r===void 0?this._instanced:r,o,i,void 0,void 0,!0,this._divisor||a)}isUpdatable(){return this._updatable}getData(){return this._data}getBuffer(){return this._buffer}getStrideSize(){return this.byteStride/Float32Array.BYTES_PER_ELEMENT}create(e=null){!e&&this._buffer||(e=e||this._data,e&&(this._buffer?this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,e),this._data=e):this._updatable?(this._buffer=this._engine.createDynamicVertexBuffer(e),this._data=e):this._buffer=this._engine.createVertexBuffer(e)))}_rebuild(){this._buffer=null,this.create(this._data)}update(e){this.create(e)}updateDirectly(e,t,i,s=!1){this._buffer&&this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,e,s?t:t*Float32Array.BYTES_PER_ELEMENT,i?i*this.byteStride:void 0),t===0&&i===void 0?this._data=e:this._data=null)}_increaseReferences(){if(this._buffer){if(!this._isAlreadyOwned){this._isAlreadyOwned=!0;return}this._buffer.references++}}dispose(){this._buffer&&this._engine._releaseBuffer(this._buffer)&&(this._buffer=null,this._data=null)}}class g{constructor(e,t,i,s,r,n,a,o,h,l,u=!1,d=!1,f=1,_=!1){if(t instanceof $i?(this._buffer=t,this._ownsBuffer=_):(this._buffer=new $i(e,t,s,n,r,a,d),this._ownsBuffer=!0),this.uniqueId=g._Counter++,this._kind=i,l==null){const m=this.getData();this.type=g.FLOAT,m instanceof Int8Array?this.type=g.BYTE:m instanceof Uint8Array?this.type=g.UNSIGNED_BYTE:m instanceof Int16Array?this.type=g.SHORT:m instanceof Uint16Array?this.type=g.UNSIGNED_SHORT:m instanceof Int32Array?this.type=g.INT:m instanceof Uint32Array&&(this.type=g.UNSIGNED_INT)}else this.type=l;const E=g.GetTypeByteLength(this.type);d?(this._size=h||(n?n/E:g.DeduceStride(i)),this.byteStride=n||this._buffer.byteStride||this._size*E,this.byteOffset=o||0):(this._size=h||n||g.DeduceStride(i),this.byteStride=n?n*E:this._buffer.byteStride||this._size*E,this.byteOffset=(o||0)*E),this.normalized=u,this._instanced=a!==void 0?a:!1,this._instanceDivisor=a?f:0,this._computeHashCode()}get instanceDivisor(){return this._instanceDivisor}set instanceDivisor(e){const t=e!=0;this._instanceDivisor=e,t!==this._instanced&&(this._instanced=t,this._computeHashCode())}_computeHashCode(){this.hashCode=(this.type-5120<<0)+((this.normalized?1:0)<<3)+(this._size<<4)+((this._instanced?1:0)<<6)+(this.byteStride<<12)}_rebuild(){this._buffer&&this._buffer._rebuild()}getKind(){return this._kind}isUpdatable(){return this._buffer.isUpdatable()}getData(){return this._buffer.getData()}getFloatData(e,t){const i=this.getData();if(!i)return null;const s=this.getSize()*g.GetTypeByteLength(this.type),r=e*this.getSize();if(this.type!==g.FLOAT||this.byteStride!==s){const n=new Float32Array(r);return this.forEach(r,(a,o)=>n[o]=a),n}if(!(i instanceof Array||i instanceof Float32Array)||this.byteOffset!==0||i.length!==r)if(i instanceof Array){const n=this.byteOffset/4;return i.slice(n,n+r)}else{if(i instanceof ArrayBuffer)return new Float32Array(i,this.byteOffset,r);{let n=i.byteOffset+this.byteOffset;if(t){const o=new Float32Array(r),h=new Float32Array(i.buffer,n,r);return o.set(h),o}const a=n%4;return a&&(n=Math.max(0,n-a)),new Float32Array(i.buffer,n,r)}}return t?i.slice():i}getBuffer(){return this._buffer.getBuffer()}getStrideSize(){return this.byteStride/g.GetTypeByteLength(this.type)}getOffset(){return this.byteOffset/g.GetTypeByteLength(this.type)}getSize(e=!1){return e?this._size*g.GetTypeByteLength(this.type):this._size}getIsInstanced(){return this._instanced}getInstanceDivisor(){return this._instanceDivisor}create(e){this._buffer.create(e)}update(e){this._buffer.update(e)}updateDirectly(e,t,i=!1){this._buffer.updateDirectly(e,t,void 0,i)}dispose(){this._ownsBuffer&&this._buffer.dispose()}forEach(e,t){g.ForEach(this._buffer.getData(),this.byteOffset,this.byteStride,this._size,this.type,e,this.normalized,t)}static DeduceStride(e){switch(e){case g.UVKind:case g.UV2Kind:case g.UV3Kind:case g.UV4Kind:case g.UV5Kind:case g.UV6Kind:return 2;case g.NormalKind:case g.PositionKind:return 3;case g.ColorKind:case g.MatricesIndicesKind:case g.MatricesIndicesExtraKind:case g.MatricesWeightsKind:case g.MatricesWeightsExtraKind:case g.TangentKind:return 4;default:throw new Error("Invalid kind '"+e+"'")}}static GetTypeByteLength(e){switch(e){case g.BYTE:case g.UNSIGNED_BYTE:return 1;case g.SHORT:case g.UNSIGNED_SHORT:return 2;case g.INT:case g.UNSIGNED_INT:case g.FLOAT:return 4;default:throw new Error(`Invalid type '${e}'`)}}static ForEach(e,t,i,s,r,n,a,o){if(e instanceof Array){let h=t/4;const l=i/4;for(let u=0;u<n;u+=s){for(let d=0;d<s;d++)o(e[h+d],u+d);h+=l}}else{const h=e instanceof ArrayBuffer?new DataView(e):new DataView(e.buffer,e.byteOffset,e.byteLength),l=g.GetTypeByteLength(r);for(let u=0;u<n;u+=s){let d=t;for(let f=0;f<s;f++){const _=g._GetFloatValue(h,r,d,a);o(_,u+f),d+=l}t+=i}}}static _GetFloatValue(e,t,i,s){switch(t){case g.BYTE:{let r=e.getInt8(i);return s&&(r=Math.max(r/127,-1)),r}case g.UNSIGNED_BYTE:{let r=e.getUint8(i);return s&&(r=r/255),r}case g.SHORT:{let r=e.getInt16(i,!0);return s&&(r=Math.max(r/32767,-1)),r}case g.UNSIGNED_SHORT:{let r=e.getUint16(i,!0);return s&&(r=r/65535),r}case g.INT:return e.getInt32(i,!0);case g.UNSIGNED_INT:return e.getUint32(i,!0);case g.FLOAT:return e.getFloat32(i,!0);default:throw new Error(`Invalid component type ${t}`)}}}g._Counter=0,g.BYTE=5120,g.UNSIGNED_BYTE=5121,g.SHORT=5122,g.UNSIGNED_SHORT=5123,g.INT=5124,g.UNSIGNED_INT=5125,g.FLOAT=5126,g.PositionKind="position",g.NormalKind="normal",g.TangentKind="tangent",g.UVKind="uv",g.UV2Kind="uv2",g.UV3Kind="uv3",g.UV4Kind="uv4",g.UV5Kind="uv5",g.UV6Kind="uv6",g.ColorKind="color",g.ColorInstanceKind="instanceColor",g.MatricesIndicesKind="matricesIndices",g.MatricesWeightsKind="matricesWeights",g.MatricesIndicesExtraKind="matricesIndicesExtra",g.MatricesWeightsExtraKind="matricesWeightsExtra";class Ut{constructor(){this.hit=!1,this.distance=0,this.pickedPoint=null,this.pickedMesh=null,this.bu=0,this.bv=0,this.faceId=-1,this.subMeshFaceId=-1,this.subMeshId=0,this.pickedSprite=null,this.thinInstanceIndex=-1,this.ray=null,this.originMesh=null,this.aimTransform=null,this.gripTransform=null}getNormal(e=!1,t=!0){if(!this.pickedMesh||t&&!this.pickedMesh.isVerticesDataPresent(g.NormalKind))return null;const i=this.pickedMesh.getIndices();if(!i)return null;let s;if(t){const n=this.pickedMesh.getVerticesData(g.NormalKind);let a=p.FromArray(n,i[this.faceId*3]*3),o=p.FromArray(n,i[this.faceId*3+1]*3),h=p.FromArray(n,i[this.faceId*3+2]*3);a=a.scale(this.bu),o=o.scale(this.bv),h=h.scale(1-this.bu-this.bv),s=new p(a.x+o.x+h.x,a.y+o.y+h.y,a.z+o.z+h.z)}else{const n=this.pickedMesh.getVerticesData(g.PositionKind),a=p.FromArray(n,i[this.faceId*3]*3),o=p.FromArray(n,i[this.faceId*3+1]*3),h=p.FromArray(n,i[this.faceId*3+2]*3),l=a.subtract(o),u=h.subtract(o);s=p.Cross(l,u)}const r=(n,a)=>{let o=n.getWorldMatrix();n.nonUniformScaling&&(D.Matrix[0].copyFrom(o),o=D.Matrix[0],o.setTranslationFromFloats(0,0,0),o.invert(),o.transposeToRef(D.Matrix[1]),o=D.Matrix[1]),p.TransformNormalToRef(a,o,a)};if(e&&r(this.pickedMesh,s),this.ray){const n=D.Vector3[0].copyFrom(s);e||r(this.pickedMesh,n),p.Dot(n,this.ray.direction)>0&&s.negateInPlace()}return s.normalize(),s}getTextureCoordinates(){if(!this.pickedMesh||!this.pickedMesh.isVerticesDataPresent(g.UVKind))return null;const e=this.pickedMesh.getIndices();if(!e)return null;const t=this.pickedMesh.getVerticesData(g.UVKind);if(!t)return null;let i=ve.FromArray(t,e[this.faceId*3]*2),s=ve.FromArray(t,e[this.faceId*3+1]*2),r=ve.FromArray(t,e[this.faceId*3+2]*2);return i=i.scale(this.bu),s=s.scale(this.bv),r=r.scale(1-this.bu-this.bv),new ve(i.x+s.x+r.x,i.y+s.y+r.y)}}class Ve{constructor(e,t,i,s,r,n){this.source=e,this.pointerX=t,this.pointerY=i,this.meshUnderPointer=s,this.sourceEvent=r,this.additionalData=n}static CreateNew(e,t,i){const s=e.getScene();return new Ve(e,s.pointerX,s.pointerY,s.meshUnderPointer||e,t,i)}static CreateNewFromSprite(e,t,i,s){return new Ve(e,t.pointerX,t.pointerY,t.meshUnderPointer,i,s)}static CreateNewFromScene(e,t){return new Ve(null,e.pointerX,e.pointerY,e.meshUnderPointer,t)}static CreateNewFromPrimitive(e,t,i,s){return new Ve(e,t.x,t.y,null,i,s)}}class Qi{constructor(e){this._vertexBuffers={},this._scene=e}_prepareBuffers(){if(this._vertexBuffers[g.PositionKind])return;const e=[];e.push(1,1),e.push(-1,1),e.push(-1,-1),e.push(1,-1),this._vertexBuffers[g.PositionKind]=new g(this._scene.getEngine(),e,g.PositionKind,!1,!1,2),this._buildIndexBuffer()}_buildIndexBuffer(){const e=[];e.push(0),e.push(1),e.push(2),e.push(0),e.push(2),e.push(3),this._indexBuffer=this._scene.getEngine().createIndexBuffer(e)}_rebuild(){const e=this._vertexBuffers[g.PositionKind];e&&(e._rebuild(),this._buildIndexBuffer())}_prepareFrame(e=null,t=null){const i=this._scene.activeCamera;return!i||(t=t||i._postProcesses.filter(s=>s!=null),!t||t.length===0||!this._scene.postProcessesEnabled)?!1:(t[0].activate(i,e,t!=null),!0)}directRender(e,t=null,i=!1,s=0,r=0,n=!1){var a;const o=this._scene.getEngine();for(let h=0;h<e.length;h++){h<e.length-1?e[h+1].activate(this._scene.activeCamera,t==null?void 0:t.texture):(t?o.bindFramebuffer(t,s,void 0,void 0,i,r):n||o.restoreDefaultFramebuffer(),(a=o._debugInsertMarker)===null||a===void 0||a.call(o,`post process ${e[h].name} output`));const l=e[h],u=l.apply();u&&(l.onBeforeRenderObservable.notifyObservers(u),this._prepareBuffers(),o.bindBuffers(this._vertexBuffers,this._indexBuffer,u),o.drawElementsType(0,0,6),l.onAfterRenderObservable.notifyObservers(u))}o.setDepthBuffer(!0),o.setDepthWrite(!0)}_finalizeFrame(e,t,i,s,r=!1){var n;const a=this._scene.activeCamera;if(!a||(s=s||a._postProcesses.filter(h=>h!=null),s.length===0||!this._scene.postProcessesEnabled))return;const o=this._scene.getEngine();for(let h=0,l=s.length;h<l;h++){const u=s[h];if(h<l-1?u._outputTexture=s[h+1].activate(a,t==null?void 0:t.texture):(t?(o.bindFramebuffer(t,i,void 0,void 0,r),u._outputTexture=t):(o.restoreDefaultFramebuffer(),u._outputTexture=null),(n=o._debugInsertMarker)===null||n===void 0||n.call(o,`post process ${s[h].name} output`)),e)break;const d=u.apply();d&&(u.onBeforeRenderObservable.notifyObservers(d),this._prepareBuffers(),o.bindBuffers(this._vertexBuffers,this._indexBuffer,d),o.drawElementsType(0,0,6),u.onAfterRenderObservable.notifyObservers(d))}o.setDepthBuffer(!0),o.setDepthWrite(!0),o.setAlphaMode(0)}dispose(){const e=this._vertexBuffers[g.PositionKind];e&&(e.dispose(),this._vertexBuffers[g.PositionKind]=null),this._indexBuffer&&(this._scene.getEngine()._releaseBuffer(this._indexBuffer),this._indexBuffer=null)}}class St{constructor(e,t,i=null,s=null,r=null){this.index=e,this._opaqueSubMeshes=new $e(256),this._transparentSubMeshes=new $e(256),this._alphaTestSubMeshes=new $e(256),this._depthOnlySubMeshes=new $e(256),this._particleSystems=new $e(256),this._spriteManagers=new $e(256),this._empty=!0,this._edgesRenderers=new hi(16),this._scene=t,this.opaqueSortCompareFn=i,this.alphaTestSortCompareFn=s,this.transparentSortCompareFn=r}set opaqueSortCompareFn(e){e?this._opaqueSortCompareFn=e:this._opaqueSortCompareFn=St.PainterSortCompare,this._renderOpaque=this._renderOpaqueSorted}set alphaTestSortCompareFn(e){e?this._alphaTestSortCompareFn=e:this._alphaTestSortCompareFn=St.PainterSortCompare,this._renderAlphaTest=this._renderAlphaTestSorted}set transparentSortCompareFn(e){e?this._transparentSortCompareFn=e:this._transparentSortCompareFn=St.defaultTransparentSortCompare,this._renderTransparent=this._renderTransparentSorted}render(e,t,i,s){if(e){e(this._opaqueSubMeshes,this._alphaTestSubMeshes,this._transparentSubMeshes,this._depthOnlySubMeshes);return}const r=this._scene.getEngine();this._depthOnlySubMeshes.length!==0&&(r.setColorWrite(!1),this._renderAlphaTest(this._depthOnlySubMeshes),r.setColorWrite(!0)),this._opaqueSubMeshes.length!==0&&this._renderOpaque(this._opaqueSubMeshes),this._alphaTestSubMeshes.length!==0&&this._renderAlphaTest(this._alphaTestSubMeshes);const n=r.getStencilBuffer();if(r.setStencilBuffer(!1),t&&this._renderSprites(),i&&this._renderParticles(s),this.onBeforeTransparentRendering&&this.onBeforeTransparentRendering(),this._transparentSubMeshes.length!==0||this._scene.useOrderIndependentTransparency){if(r.setStencilBuffer(n),this._scene.useOrderIndependentTransparency){const a=this._scene.depthPeelingRenderer.render(this._transparentSubMeshes);a.length&&this._renderTransparent(a)}else this._renderTransparent(this._transparentSubMeshes);r.setAlphaMode(0)}if(r.setStencilBuffer(!1),this._edgesRenderers.length){for(let a=0;a<this._edgesRenderers.length;a++)this._edgesRenderers.data[a].render();r.setAlphaMode(0)}r.setStencilBuffer(n)}_renderOpaqueSorted(e){return St._RenderSorted(e,this._opaqueSortCompareFn,this._scene.activeCamera,!1)}_renderAlphaTestSorted(e){return St._RenderSorted(e,this._alphaTestSortCompareFn,this._scene.activeCamera,!1)}_renderTransparentSorted(e){return St._RenderSorted(e,this._transparentSortCompareFn,this._scene.activeCamera,!0)}static _RenderSorted(e,t,i,s){let r=0,n;const a=i?i.globalPosition:St._ZeroVector;if(s)for(;r<e.length;r++)n=e.data[r],n._alphaIndex=n.getMesh().alphaIndex,n._distanceToCamera=p.Distance(n.getBoundingInfo().boundingSphere.centerWorld,a);const o=e.length===e.data.length?e.data:e.data.slice(0,e.length);t&&o.sort(t);const h=o[0].getMesh().getScene();for(r=0;r<o.length;r++)if(n=o[r],!(h._activeMeshesFrozenButKeepClipping&&!n.isInFrustum(h._frustumPlanes))){if(s){const l=n.getMaterial();if(l&&l.needDepthPrePass){const u=l.getScene().getEngine();u.setColorWrite(!1),u.setAlphaMode(0),n.render(!1),u.setColorWrite(!0)}}n.render(s)}}static defaultTransparentSortCompare(e,t){return e._alphaIndex>t._alphaIndex?1:e._alphaIndex<t._alphaIndex?-1:St.backToFrontSortCompare(e,t)}static backToFrontSortCompare(e,t){return e._distanceToCamera<t._distanceToCamera?1:e._distanceToCamera>t._distanceToCamera?-1:0}static frontToBackSortCompare(e,t){return e._distanceToCamera<t._distanceToCamera?-1:e._distanceToCamera>t._distanceToCamera?1:0}static PainterSortCompare(e,t){const i=e.getMesh(),s=t.getMesh();return i.material&&s.material?i.material.uniqueId-s.material.uniqueId:i.uniqueId-s.uniqueId}prepare(){this._opaqueSubMeshes.reset(),this._transparentSubMeshes.reset(),this._alphaTestSubMeshes.reset(),this._depthOnlySubMeshes.reset(),this._particleSystems.reset(),this.prepareSprites(),this._edgesRenderers.reset(),this._empty=!0}prepareSprites(){this._spriteManagers.reset()}dispose(){this._opaqueSubMeshes.dispose(),this._transparentSubMeshes.dispose(),this._alphaTestSubMeshes.dispose(),this._depthOnlySubMeshes.dispose(),this._particleSystems.dispose(),this._spriteManagers.dispose(),this._edgesRenderers.dispose()}dispatch(e,t,i){t===void 0&&(t=e.getMesh()),i===void 0&&(i=e.getMaterial()),i!=null&&(i.needAlphaBlendingForMesh(t)?this._transparentSubMeshes.push(e):i.needAlphaTesting()?(i.needDepthPrePass&&this._depthOnlySubMeshes.push(e),this._alphaTestSubMeshes.push(e)):(i.needDepthPrePass&&this._depthOnlySubMeshes.push(e),this._opaqueSubMeshes.push(e)),t._renderingGroup=this,t._edgesRenderer&&t._edgesRenderer.isEnabled&&this._edgesRenderers.pushNoDuplicate(t._edgesRenderer),this._empty=!1)}dispatchSprites(e){this._spriteManagers.push(e),this._empty=!1}dispatchParticles(e){this._particleSystems.push(e),this._empty=!1}_renderParticles(e){if(this._particleSystems.length===0)return;const t=this._scene.activeCamera;this._scene.onBeforeParticlesRenderingObservable.notifyObservers(this._scene);for(let i=0;i<this._particleSystems.length;i++){const s=this._particleSystems.data[i];if((t&&t.layerMask&s.layerMask)===0)continue;const r=s.emitter;(!r.position||!e||e.indexOf(r)!==-1)&&this._scene._activeParticles.addCount(s.render(),!1)}this._scene.onAfterParticlesRenderingObservable.notifyObservers(this._scene)}_renderSprites(){if(!this._scene.spritesEnabled||this._spriteManagers.length===0)return;const e=this._scene.activeCamera;this._scene.onBeforeSpritesRenderingObservable.notifyObservers(this._scene);for(let t=0;t<this._spriteManagers.length;t++){const i=this._spriteManagers.data[t];(e&&e.layerMask&i.layerMask)!==0&&i.render()}this._scene.onAfterSpritesRenderingObservable.notifyObservers(this._scene)}}St._ZeroVector=p.Zero();class yn{}class We{constructor(e){this._useSceneAutoClearSetup=!1,this._renderingGroups=new Array,this._autoClearDepthStencil={},this._customOpaqueSortCompareFn={},this._customAlphaTestSortCompareFn={},this._customTransparentSortCompareFn={},this._renderingGroupInfo=new yn,this._maintainStateBetweenFrames=!1,this._scene=e;for(let t=We.MIN_RENDERINGGROUPS;t<We.MAX_RENDERINGGROUPS;t++)this._autoClearDepthStencil[t]={autoClear:!0,depth:!0,stencil:!0}}get maintainStateBetweenFrames(){return this._maintainStateBetweenFrames}set maintainStateBetweenFrames(e){if(e!==this._maintainStateBetweenFrames&&(this._maintainStateBetweenFrames=e,!this._maintainStateBetweenFrames)){for(const t of this._scene.meshes)if(t.subMeshes)for(const i of t.subMeshes)i._wasDispatched=!1;for(const t of this._scene.spriteManagers)t._wasDispatched=!1;for(const t of this._scene.particleSystems)t._wasDispatched=!1}}getRenderingGroup(e){const t=e||0;return this._prepareRenderingGroup(t),this._renderingGroups[t]}_clearDepthStencilBuffer(e=!0,t=!0){this._depthStencilBufferAlreadyCleaned||(this._scene.getEngine().clear(null,!1,e,t),this._depthStencilBufferAlreadyCleaned=!0)}render(e,t,i,s){const r=this._renderingGroupInfo;if(r.scene=this._scene,r.camera=this._scene.activeCamera,this._scene.spriteManagers&&s)for(let n=0;n<this._scene.spriteManagers.length;n++){const a=this._scene.spriteManagers[n];this.dispatchSprites(a)}for(let n=We.MIN_RENDERINGGROUPS;n<We.MAX_RENDERINGGROUPS;n++){this._depthStencilBufferAlreadyCleaned=n===We.MIN_RENDERINGGROUPS;const a=this._renderingGroups[n];if(!a||a._empty)continue;const o=Math.pow(2,n);if(r.renderingGroupId=n,this._scene.onBeforeRenderingGroupObservable.notifyObservers(r,o),We.AUTOCLEAR){const h=this._useSceneAutoClearSetup?this._scene.getAutoClearDepthStencilSetup(n):this._autoClearDepthStencil[n];h&&h.autoClear&&this._clearDepthStencilBuffer(h.depth,h.stencil)}for(const h of this._scene._beforeRenderingGroupDrawStage)h.action(n);a.render(e,s,i,t);for(const h of this._scene._afterRenderingGroupDrawStage)h.action(n);this._scene.onAfterRenderingGroupObservable.notifyObservers(r,o)}}reset(){if(!this.maintainStateBetweenFrames)for(let e=We.MIN_RENDERINGGROUPS;e<We.MAX_RENDERINGGROUPS;e++){const t=this._renderingGroups[e];t&&t.prepare()}}resetSprites(){if(!this.maintainStateBetweenFrames)for(let e=We.MIN_RENDERINGGROUPS;e<We.MAX_RENDERINGGROUPS;e++){const t=this._renderingGroups[e];t&&t.prepareSprites()}}dispose(){this.freeRenderingGroups(),this._renderingGroups.length=0,this._renderingGroupInfo=null}freeRenderingGroups(){for(let e=We.MIN_RENDERINGGROUPS;e<We.MAX_RENDERINGGROUPS;e++){const t=this._renderingGroups[e];t&&t.dispose()}}_prepareRenderingGroup(e){this._renderingGroups[e]===void 0&&(this._renderingGroups[e]=new St(e,this._scene,this._customOpaqueSortCompareFn[e],this._customAlphaTestSortCompareFn[e],this._customTransparentSortCompareFn[e]))}dispatchSprites(e){this.maintainStateBetweenFrames&&e._wasDispatched||(e._wasDispatched=!0,this.getRenderingGroup(e.renderingGroupId).dispatchSprites(e))}dispatchParticles(e){this.maintainStateBetweenFrames&&e._wasDispatched||(e._wasDispatched=!0,this.getRenderingGroup(e.renderingGroupId).dispatchParticles(e))}dispatch(e,t,i){t===void 0&&(t=e.getMesh()),!(this.maintainStateBetweenFrames&&e._wasDispatched)&&(e._wasDispatched=!0,this.getRenderingGroup(t.renderingGroupId).dispatch(e,t,i))}setRenderingOrder(e,t=null,i=null,s=null){if(this._customOpaqueSortCompareFn[e]=t,this._customAlphaTestSortCompareFn[e]=i,this._customTransparentSortCompareFn[e]=s,this._renderingGroups[e]){const r=this._renderingGroups[e];r.opaqueSortCompareFn=this._customOpaqueSortCompareFn[e],r.alphaTestSortCompareFn=this._customAlphaTestSortCompareFn[e],r.transparentSortCompareFn=this._customTransparentSortCompareFn[e]}}setRenderingAutoClearDepthStencil(e,t,i=!0,s=!0){this._autoClearDepthStencil[e]={autoClear:t,depth:i,stencil:s}}getAutoClearDepthStencilSetup(e){return this._autoClearDepthStencil[e]}}We.MAX_RENDERINGGROUPS=4,We.MIN_RENDERINGGROUPS=0,We.AUTOCLEAR=!0;class q{}q.NAME_EFFECTLAYER="EffectLayer",q.NAME_LAYER="Layer",q.NAME_LENSFLARESYSTEM="LensFlareSystem",q.NAME_BOUNDINGBOXRENDERER="BoundingBoxRenderer",q.NAME_PARTICLESYSTEM="ParticleSystem",q.NAME_GAMEPAD="Gamepad",q.NAME_SIMPLIFICATIONQUEUE="SimplificationQueue",q.NAME_GEOMETRYBUFFERRENDERER="GeometryBufferRenderer",q.NAME_PREPASSRENDERER="PrePassRenderer",q.NAME_DEPTHRENDERER="DepthRenderer",q.NAME_DEPTHPEELINGRENDERER="DepthPeelingRenderer",q.NAME_POSTPROCESSRENDERPIPELINEMANAGER="PostProcessRenderPipelineManager",q.NAME_SPRITE="Sprite",q.NAME_SUBSURFACE="SubSurface",q.NAME_OUTLINERENDERER="Outline",q.NAME_PROCEDURALTEXTURE="ProceduralTexture",q.NAME_SHADOWGENERATOR="ShadowGenerator",q.NAME_OCTREE="Octree",q.NAME_PHYSICSENGINE="PhysicsEngine",q.NAME_AUDIO="Audio",q.NAME_FLUIDRENDERER="FluidRenderer",q.STEP_ISREADYFORMESH_EFFECTLAYER=0,q.STEP_BEFOREEVALUATEACTIVEMESH_BOUNDINGBOXRENDERER=0,q.STEP_EVALUATESUBMESH_BOUNDINGBOXRENDERER=0,q.STEP_PREACTIVEMESH_BOUNDINGBOXRENDERER=0,q.STEP_CAMERADRAWRENDERTARGET_EFFECTLAYER=1,q.STEP_BEFORECAMERADRAW_PREPASS=0,q.STEP_BEFORECAMERADRAW_EFFECTLAYER=1,q.STEP_BEFORECAMERADRAW_LAYER=2,q.STEP_BEFORERENDERTARGETDRAW_PREPASS=0,q.STEP_BEFORERENDERTARGETDRAW_LAYER=1,q.STEP_BEFORERENDERINGMESH_PREPASS=0,q.STEP_BEFORERENDERINGMESH_OUTLINE=1,q.STEP_AFTERRENDERINGMESH_PREPASS=0,q.STEP_AFTERRENDERINGMESH_OUTLINE=1,q.STEP_AFTERRENDERINGGROUPDRAW_EFFECTLAYER_DRAW=0,q.STEP_AFTERRENDERINGGROUPDRAW_BOUNDINGBOXRENDERER=1,q.STEP_BEFORECAMERAUPDATE_SIMPLIFICATIONQUEUE=0,q.STEP_BEFORECAMERAUPDATE_GAMEPAD=1,q.STEP_BEFORECLEAR_PROCEDURALTEXTURE=0,q.STEP_BEFORECLEAR_PREPASS=1,q.STEP_BEFORERENDERTARGETCLEAR_PREPASS=0,q.STEP_AFTERRENDERTARGETDRAW_PREPASS=0,q.STEP_AFTERRENDERTARGETDRAW_LAYER=1,q.STEP_AFTERCAMERADRAW_PREPASS=0,q.STEP_AFTERCAMERADRAW_EFFECTLAYER=1,q.STEP_AFTERCAMERADRAW_LENSFLARESYSTEM=2,q.STEP_AFTERCAMERADRAW_EFFECTLAYER_DRAW=3,q.STEP_AFTERCAMERADRAW_LAYER=4,q.STEP_AFTERCAMERADRAW_FLUIDRENDERER=5,q.STEP_AFTERCAMERAPOSTPROCESS_LAYER=0,q.STEP_AFTERRENDERTARGETPOSTPROCESS_LAYER=0,q.STEP_AFTERRENDER_AUDIO=0,q.STEP_GATHERRENDERTARGETS_DEPTHRENDERER=0,q.STEP_GATHERRENDERTARGETS_GEOMETRYBUFFERRENDERER=1,q.STEP_GATHERRENDERTARGETS_SHADOWGENERATOR=2,q.STEP_GATHERRENDERTARGETS_POSTPROCESSRENDERPIPELINEMANAGER=3,q.STEP_GATHERACTIVECAMERARENDERTARGETS_DEPTHRENDERER=0,q.STEP_GATHERACTIVECAMERARENDERTARGETS_FLUIDRENDERER=1,q.STEP_POINTERMOVE_SPRITE=0,q.STEP_POINTERDOWN_SPRITE=0,q.STEP_POINTERUP_SPRITE=0;class Ie extends Array{constructor(e){super(...e)}static Create(){return Object.create(Ie.prototype)}registerStep(e,t,i){let s=0,r=Number.MAX_VALUE;for(;s<this.length&&(r=this[s].index,!(e<r));s++);this.splice(s,0,{index:e,component:t,action:i.bind(t)})}clear(){this.length=0}}class Te{}Te.POINTERDOWN=1,Te.POINTERUP=2,Te.POINTERMOVE=4,Te.POINTERWHEEL=8,Te.POINTERPICK=16,Te.POINTERTAP=32,Te.POINTERDOUBLETAP=64;class fr{constructor(e,t){this.type=e,this.event=t}}class Cn extends fr{constructor(e,t,i,s){super(e,t),this.ray=null,this.originalPickingInfo=null,this.skipOnPointerObservable=!1,this.localPosition=new ve(i,s)}}class ui extends fr{constructor(e,t,i,s=null){super(e,t),this._pickInfo=i,this._inputManager=s}get pickInfo(){return this._pickInfo||this._generatePickInfo(),this._pickInfo}_generatePickInfo(){this._inputManager&&(this._pickInfo=this._inputManager._pickMove(this.event.pointerId),this._inputManager._setRayOnPointerInfo(this._pickInfo,this.event),this._inputManager=null)}}class ut{constructor(){this.hoverCursor="",this.actions=new Array,this.isRecursive=!1}static get HasTriggers(){for(const e in ut.Triggers)if(Object.prototype.hasOwnProperty.call(ut.Triggers,e))return!0;return!1}static get HasPickTriggers(){for(const e in ut.Triggers)if(Object.prototype.hasOwnProperty.call(ut.Triggers,e)){const t=parseInt(e);if(t>=1&&t<=7)return!0}return!1}static HasSpecificTrigger(e){for(const t in ut.Triggers)if(Object.prototype.hasOwnProperty.call(ut.Triggers,t)&&parseInt(t)===e)return!0;return!1}}ut.Triggers={};class Ji{}Ji.KEYDOWN=1,Ji.KEYUP=2;class Cs{constructor(e,t){this.type=e,this.event=t}}class _r extends Cs{constructor(e,t){super(e,t),this.type=e,this.event=t,this.skipOnKeyboardObservable=!1}get skipOnPointerObservable(){return this.skipOnKeyboardObservable}set skipOnPointerObservable(e){this.skipOnKeyboardObservable=e}}var z;(function(c){c[c.Generic=0]="Generic",c[c.Keyboard=1]="Keyboard",c[c.Mouse=2]="Mouse",c[c.Touch=3]="Touch",c[c.DualShock=4]="DualShock",c[c.Xbox=5]="Xbox",c[c.Switch=6]="Switch",c[c.DualSense=7]="DualSense"})(z||(z={}));var Q;(function(c){c[c.Horizontal=0]="Horizontal",c[c.Vertical=1]="Vertical",c[c.LeftClick=2]="LeftClick",c[c.MiddleClick=3]="MiddleClick",c[c.RightClick=4]="RightClick",c[c.BrowserBack=5]="BrowserBack",c[c.BrowserForward=6]="BrowserForward",c[c.MouseWheelX=7]="MouseWheelX",c[c.MouseWheelY=8]="MouseWheelY",c[c.MouseWheelZ=9]="MouseWheelZ",c[c.Move=12]="Move"})(Q||(Q={}));var es;(function(c){c[c.Horizontal=0]="Horizontal",c[c.Vertical=1]="Vertical",c[c.LeftClick=2]="LeftClick",c[c.MiddleClick=3]="MiddleClick",c[c.RightClick=4]="RightClick",c[c.BrowserBack=5]="BrowserBack",c[c.BrowserForward=6]="BrowserForward",c[c.MouseWheelX=7]="MouseWheelX",c[c.MouseWheelY=8]="MouseWheelY",c[c.MouseWheelZ=9]="MouseWheelZ",c[c.DeltaHorizontal=10]="DeltaHorizontal",c[c.DeltaVertical=11]="DeltaVertical"})(es||(es={}));var gr;(function(c){c[c.Cross=0]="Cross",c[c.Circle=1]="Circle",c[c.Square=2]="Square",c[c.Triangle=3]="Triangle",c[c.L1=4]="L1",c[c.R1=5]="R1",c[c.L2=6]="L2",c[c.R2=7]="R2",c[c.Share=8]="Share",c[c.Options=9]="Options",c[c.L3=10]="L3",c[c.R3=11]="R3",c[c.DPadUp=12]="DPadUp",c[c.DPadDown=13]="DPadDown",c[c.DPadLeft=14]="DPadLeft",c[c.DPadRight=15]="DPadRight",c[c.Home=16]="Home",c[c.TouchPad=17]="TouchPad",c[c.LStickXAxis=18]="LStickXAxis",c[c.LStickYAxis=19]="LStickYAxis",c[c.RStickXAxis=20]="RStickXAxis",c[c.RStickYAxis=21]="RStickYAxis"})(gr||(gr={}));var pr;(function(c){c[c.Cross=0]="Cross",c[c.Circle=1]="Circle",c[c.Square=2]="Square",c[c.Triangle=3]="Triangle",c[c.L1=4]="L1",c[c.R1=5]="R1",c[c.L2=6]="L2",c[c.R2=7]="R2",c[c.Create=8]="Create",c[c.Options=9]="Options",c[c.L3=10]="L3",c[c.R3=11]="R3",c[c.DPadUp=12]="DPadUp",c[c.DPadDown=13]="DPadDown",c[c.DPadLeft=14]="DPadLeft",c[c.DPadRight=15]="DPadRight",c[c.Home=16]="Home",c[c.TouchPad=17]="TouchPad",c[c.LStickXAxis=18]="LStickXAxis",c[c.LStickYAxis=19]="LStickYAxis",c[c.RStickXAxis=20]="RStickXAxis",c[c.RStickYAxis=21]="RStickYAxis"})(pr||(pr={}));var mr;(function(c){c[c.A=0]="A",c[c.B=1]="B",c[c.X=2]="X",c[c.Y=3]="Y",c[c.LB=4]="LB",c[c.RB=5]="RB",c[c.LT=6]="LT",c[c.RT=7]="RT",c[c.Back=8]="Back",c[c.Start=9]="Start",c[c.LS=10]="LS",c[c.RS=11]="RS",c[c.DPadUp=12]="DPadUp",c[c.DPadDown=13]="DPadDown",c[c.DPadLeft=14]="DPadLeft",c[c.DPadRight=15]="DPadRight",c[c.Home=16]="Home",c[c.LStickXAxis=17]="LStickXAxis",c[c.LStickYAxis=18]="LStickYAxis",c[c.RStickXAxis=19]="RStickXAxis",c[c.RStickYAxis=20]="RStickYAxis"})(mr||(mr={}));var Er;(function(c){c[c.B=0]="B",c[c.A=1]="A",c[c.Y=2]="Y",c[c.X=3]="X",c[c.L=4]="L",c[c.R=5]="R",c[c.ZL=6]="ZL",c[c.ZR=7]="ZR",c[c.Minus=8]="Minus",c[c.Plus=9]="Plus",c[c.LS=10]="LS",c[c.RS=11]="RS",c[c.DPadUp=12]="DPadUp",c[c.DPadDown=13]="DPadDown",c[c.DPadLeft=14]="DPadLeft",c[c.DPadRight=15]="DPadRight",c[c.Home=16]="Home",c[c.Capture=17]="Capture",c[c.LStickXAxis=18]="LStickXAxis",c[c.LStickYAxis=19]="LStickYAxis",c[c.RStickXAxis=20]="RStickXAxis",c[c.RStickYAxis=21]="RStickYAxis"})(Er||(Er={}));var vr;(function(c){c[c.PointerMove=0]="PointerMove",c[c.PointerDown=1]="PointerDown",c[c.PointerUp=2]="PointerUp"})(vr||(vr={}));class ts{}ts.DOM_DELTA_PIXEL=0,ts.DOM_DELTA_LINE=1,ts.DOM_DELTA_PAGE=2;class di{static CreateDeviceEvent(e,t,i,s,r,n){switch(e){case z.Keyboard:return this._CreateKeyboardEvent(i,s,r,n);case z.Mouse:if(i===Q.MouseWheelX||i===Q.MouseWheelY||i===Q.MouseWheelZ)return this._CreateWheelEvent(e,t,i,s,r,n);case z.Touch:return this._CreatePointerEvent(e,t,i,s,r,n);default:throw`Unable to generate event for device ${z[e]}`}}static _CreatePointerEvent(e,t,i,s,r,n){const a=this._CreateMouseEvent(e,t,i,s,r,n);return e===z.Mouse?(a.deviceType=z.Mouse,a.pointerId=1,a.pointerType="mouse"):(a.deviceType=z.Touch,a.pointerId=t,a.pointerType="touch"),i===Q.Move?a.type="pointermove":i>=Q.LeftClick&&i<=Q.RightClick&&(a.type=s===1?"pointerdown":"pointerup",a.button=i-2),a}static _CreateWheelEvent(e,t,i,s,r,n){const a=this._CreateMouseEvent(e,t,i,s,r,n);switch(a.type="wheel",a.deltaMode=ts.DOM_DELTA_PIXEL,a.deltaX=0,a.deltaY=0,a.deltaZ=0,i){case Q.MouseWheelX:a.deltaX=s;break;case Q.MouseWheelY:a.deltaY=s;break;case Q.MouseWheelZ:a.deltaZ=s;break}return a}static _CreateMouseEvent(e,t,i,s,r,n){const a=this._CreateEvent(n),o=r.pollInput(e,t,Q.Horizontal),h=r.pollInput(e,t,Q.Vertical);return n?(a.movementX=0,a.movementY=0,a.offsetX=a.movementX-n.getBoundingClientRect().x,a.offsetY=a.movementY-n.getBoundingClientRect().y):(a.movementX=r.pollInput(e,t,es.DeltaHorizontal),a.movementY=r.pollInput(e,t,es.DeltaVertical),a.offsetX=0,a.offsetY=0),this._CheckNonCharacterKeys(a,r),a.clientX=o,a.clientY=h,a.x=o,a.y=h,a.deviceType=e,a.deviceSlot=t,a.inputIndex=i,a}static _CreateKeyboardEvent(e,t,i,s){const r=this._CreateEvent(s);return this._CheckNonCharacterKeys(r,i),r.deviceType=z.Keyboard,r.deviceSlot=0,r.inputIndex=e,r.type=t===1?"keydown":"keyup",r.key=String.fromCharCode(e),r.keyCode=e,r}static _CheckNonCharacterKeys(e,t){const i=t.isDeviceAvailable(z.Keyboard),s=i&&t.pollInput(z.Keyboard,0,18)===1,r=i&&t.pollInput(z.Keyboard,0,17)===1,n=i&&(t.pollInput(z.Keyboard,0,91)===1||t.pollInput(z.Keyboard,0,92)===1||t.pollInput(z.Keyboard,0,93)===1),a=i&&t.pollInput(z.Keyboard,0,16)===1;e.altKey=s,e.ctrlKey=r,e.metaKey=n,e.shiftKey=a}static _CreateEvent(e){const t={};return t.preventDefault=()=>{},t.target=e,t}}class In{constructor(e,t,i){this._nativeInput=_native.DeviceInputSystem?new _native.DeviceInputSystem(e,t,(s,r,n,a)=>{const o=di.CreateDeviceEvent(s,r,n,a,this);i(s,r,o)}):this._createDummyNativeInput()}pollInput(e,t,i){return this._nativeInput.pollInput(e,t,i)}isDeviceAvailable(e){return e===z.Mouse||e===z.Touch}dispose(){this._nativeInput.dispose()}_createDummyNativeInput(){return{pollInput:()=>0,isDeviceAvailable:()=>!1,dispose:()=>{}}}}const Tr=255,br=Object.keys(Q).length/2;class Pn{constructor(e,t,i,s){this._inputs=[],this._keyboardActive=!1,this._pointerActive=!1,this._usingSafari=H.IsSafari(),this._usingMacOS=/(Mac|iPhone|iPod|iPad)/i.test(navigator.platform),this._keyboardDownEvent=r=>{},this._keyboardUpEvent=r=>{},this._keyboardBlurEvent=r=>{},this._pointerMoveEvent=r=>{},this._pointerDownEvent=r=>{},this._pointerUpEvent=r=>{},this._pointerCancelEvent=r=>{},this._pointerWheelEvent=r=>{},this._pointerBlurEvent=r=>{},this._eventsAttached=!1,this._mouseId=-1,this._isUsingFirefox=ps.IsNavigatorAvailable()&&navigator.userAgent&&navigator.userAgent.indexOf("Firefox")!==-1,this._maxTouchPoints=0,this._pointerInputClearObserver=null,this._gamepadConnectedEvent=r=>{},this._gamepadDisconnectedEvent=r=>{},this._eventPrefix=H.GetPointerPrefix(e),this._engine=e,this._onDeviceConnected=t,this._onDeviceDisconnected=i,this._onInputChanged=s,this._enableEvents(),this._usingMacOS&&(this._metaKeys=[]),this._engine._onEngineViewChanged||(this._engine._onEngineViewChanged=()=>{this._enableEvents()})}pollInput(e,t,i){const s=this._inputs[e][t];if(!s)throw`Unable to find device ${z[e]}`;e>=z.DualShock&&e<=z.DualSense&&this._updateDevice(e,t,i);const r=s[i];if(r===void 0)throw`Unable to find input ${i} for device ${z[e]} in slot ${t}`;return i===Q.Move&&H.Warn("Unable to provide information for PointerInput.Move.  Try using PointerInput.Horizontal or PointerInput.Vertical for move data."),r}isDeviceAvailable(e){return this._inputs[e]!==void 0}dispose(){this._onDeviceConnected=()=>{},this._onDeviceDisconnected=()=>{},this._onInputChanged=()=>{},delete this._engine._onEngineViewChanged,this._elementToAttachTo&&this._disableEvents()}_enableEvents(){const e=this===null||this===void 0?void 0:this._engine.getInputElement();if(e&&(!this._eventsAttached||this._elementToAttachTo!==e)){if(this._disableEvents(),this._inputs){for(const t of this._inputs)if(t)for(const i in t){const s=+i,r=t[s];if(r)for(let n=0;n<r.length;n++)r[n]=0}}this._elementToAttachTo=e,this._elementToAttachTo.tabIndex=this._elementToAttachTo.tabIndex!==-1?this._elementToAttachTo.tabIndex:this._engine.canvasTabIndex,this._handleKeyActions(),this._handlePointerActions(),this._handleGamepadActions(),this._eventsAttached=!0,this._checkForConnectedDevices()}}_disableEvents(){this._elementToAttachTo&&(this._elementToAttachTo.removeEventListener("blur",this._keyboardBlurEvent),this._elementToAttachTo.removeEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.removeEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.removeEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.removeEventListener(this._wheelEventName,this._pointerWheelEvent),window.removeEventListener("gamepadconnected",this._gamepadConnectedEvent),window.removeEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)),this._pointerInputClearObserver&&this._engine.onEndFrameObservable.remove(this._pointerInputClearObserver),this._eventsAttached=!1}_checkForConnectedDevices(){if(navigator.getGamepads){const e=navigator.getGamepads();for(const t of e)t&&this._addGamePad(t)}typeof matchMedia=="function"&&matchMedia("(pointer:fine)").matches&&this._addPointerDevice(z.Mouse,0,0,0)}_addGamePad(e){const t=this._getGamepadDeviceType(e.id),i=e.index;this._gamepads=this._gamepads||new Array(e.index+1),this._registerDevice(t,i,e.buttons.length+e.axes.length),this._gamepads[i]=t}_addPointerDevice(e,t,i,s){this._pointerActive||(this._pointerActive=!0),this._registerDevice(e,t,br);const r=this._inputs[e][t];r[0]=i,r[1]=s}_registerDevice(e,t,i){if(t===void 0)throw`Unable to register device ${z[e]} to undefined slot.`;if(this._inputs[e]||(this._inputs[e]={}),!this._inputs[e][t]){const s=new Array(i);s.fill(0),this._inputs[e][t]=s,this._onDeviceConnected(e,t)}}_unregisterDevice(e,t){this._inputs[e][t]&&(delete this._inputs[e][t],this._onDeviceDisconnected(e,t))}_handleKeyActions(){this._keyboardDownEvent=e=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(z.Keyboard,0,Tr));const t=this._inputs[z.Keyboard][0];if(t){t[e.keyCode]=1;const i=e;i.inputIndex=e.keyCode,this._usingMacOS&&e.metaKey&&e.key!=="Meta"&&(this._metaKeys.includes(e.keyCode)||this._metaKeys.push(e.keyCode)),this._onInputChanged(z.Keyboard,0,i)}},this._keyboardUpEvent=e=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(z.Keyboard,0,Tr));const t=this._inputs[z.Keyboard][0];if(t){t[e.keyCode]=0;const i=e;if(i.inputIndex=e.keyCode,this._usingMacOS&&e.key==="Meta"&&this._metaKeys.length>0){for(const s of this._metaKeys){const r=di.CreateDeviceEvent(z.Keyboard,0,s,0,this,this._elementToAttachTo);t[s]=0,this._onInputChanged(z.Keyboard,0,r)}this._metaKeys.splice(0,this._metaKeys.length)}this._onInputChanged(z.Keyboard,0,i)}},this._keyboardBlurEvent=()=>{if(this._keyboardActive){const e=this._inputs[z.Keyboard][0];for(let t=0;t<e.length;t++)if(e[t]!==0){e[t]=0;const i=di.CreateDeviceEvent(z.Keyboard,0,t,0,this,this._elementToAttachTo);this._onInputChanged(z.Keyboard,0,i)}this._usingMacOS&&this._metaKeys.splice(0,this._metaKeys.length)}},this._elementToAttachTo.addEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.addEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.addEventListener("blur",this._keyboardBlurEvent)}_handlePointerActions(){this._maxTouchPoints=ps.IsNavigatorAvailable()&&navigator.maxTouchPoints||2,this._activeTouchIds||(this._activeTouchIds=new Array(this._maxTouchPoints));for(let i=0;i<this._maxTouchPoints;i++)this._activeTouchIds[i]=-1;this._pointerMoveEvent=i=>{const s=this._getPointerType(i),r=s===z.Mouse?0:this._activeTouchIds.indexOf(i.pointerId);this._inputs[s]||(this._inputs[s]={}),this._inputs[s][r]||this._addPointerDevice(s,r,i.clientX,i.clientY);const n=this._inputs[s][r];if(n){const a=i;a.inputIndex=Q.Move,n[Q.Horizontal]=i.clientX,n[Q.Vertical]=i.clientY,this._onInputChanged(s,r,a),!this._usingSafari&&i.button!==-1&&(a.inputIndex=i.button+2,n[i.button+2]=n[i.button+2]?0:1,this._onInputChanged(s,r,a))}},this._pointerDownEvent=i=>{const s=this._getPointerType(i);let r=s===z.Mouse?0:i.pointerId;if(s===z.Touch){const a=this._activeTouchIds.indexOf(-1);if(a>=0)r=a,this._activeTouchIds[a]=i.pointerId;else{H.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);return}}this._inputs[s]||(this._inputs[s]={}),this._inputs[s][r]?s===z.Touch&&this._onDeviceConnected(s,r):this._addPointerDevice(s,r,i.clientX,i.clientY);const n=this._inputs[s][r];if(n){const a=n[Q.Horizontal],o=n[Q.Vertical];if(s===z.Mouse){if(this._mouseId===-1&&(i.pointerId===void 0?this._mouseId=this._isUsingFirefox?0:1:this._mouseId=i.pointerId),!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(this._mouseId)}catch{}}else if(i.pointerId&&!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(i.pointerId)}catch{}n[Q.Horizontal]=i.clientX,n[Q.Vertical]=i.clientY,n[i.button+2]=1;const h=i;h.inputIndex=i.button+2,this._onInputChanged(s,r,h),(a!==i.clientX||o!==i.clientY)&&(h.inputIndex=Q.Move,this._onInputChanged(s,r,h))}},this._pointerUpEvent=i=>{var s,r,n,a,o;const h=this._getPointerType(i),l=h===z.Mouse?0:this._activeTouchIds.indexOf(i.pointerId);if(h===z.Touch){if(l===-1)return;this._activeTouchIds[l]=-1}const u=(s=this._inputs[h])===null||s===void 0?void 0:s[l];if(u&&u[i.button+2]!==0){const d=u[Q.Horizontal],f=u[Q.Vertical];u[Q.Horizontal]=i.clientX,u[Q.Vertical]=i.clientY,u[i.button+2]=0;const _=i;(d!==i.clientX||f!==i.clientY)&&(_.inputIndex=Q.Move,this._onInputChanged(h,l,_)),_.inputIndex=i.button+2,h===z.Mouse&&this._mouseId>=0&&(!((n=(r=this._elementToAttachTo).hasPointerCapture)===null||n===void 0)&&n.call(r,this._mouseId))?this._elementToAttachTo.releasePointerCapture(this._mouseId):i.pointerId&&(!((o=(a=this._elementToAttachTo).hasPointerCapture)===null||o===void 0)&&o.call(a,i.pointerId))&&this._elementToAttachTo.releasePointerCapture(i.pointerId),this._onInputChanged(h,l,_),h===z.Touch&&this._onDeviceDisconnected(h,l)}},this._pointerCancelEvent=i=>{var s,r,n,a;if(i.pointerType==="mouse"){const o=this._inputs[z.Mouse][0];this._mouseId>=0&&(!((r=(s=this._elementToAttachTo).hasPointerCapture)===null||r===void 0)&&r.call(s,this._mouseId))&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let h=Q.LeftClick;h<=Q.BrowserForward;h++)if(o[h]===1){o[h]=0;const l=di.CreateDeviceEvent(z.Mouse,0,h,0,this,this._elementToAttachTo);this._onInputChanged(z.Mouse,0,l)}}else{const o=this._activeTouchIds.indexOf(i.pointerId);!((a=(n=this._elementToAttachTo).hasPointerCapture)===null||a===void 0)&&a.call(n,i.pointerId)&&this._elementToAttachTo.releasePointerCapture(i.pointerId),this._inputs[z.Touch][o][Q.LeftClick]=0;const h=di.CreateDeviceEvent(z.Touch,o,Q.LeftClick,0,this,this._elementToAttachTo);this._onInputChanged(z.Touch,o,h),this._activeTouchIds[o]=-1,this._onDeviceDisconnected(z.Touch,o)}},this._wheelEventName="onwheel"in document.createElement("div")?"wheel":document.onmousewheel!==void 0?"mousewheel":"DOMMouseScroll";let e=!1;const t=function(){};try{const i=Object.defineProperty({},"passive",{get:function(){e=!0}});this._elementToAttachTo.addEventListener("test",t,i),this._elementToAttachTo.removeEventListener("test",t,i)}catch{}this._pointerBlurEvent=()=>{var i,s,r,n,a;if(this.isDeviceAvailable(z.Mouse)){const o=this._inputs[z.Mouse][0];this._mouseId>=0&&(!((s=(i=this._elementToAttachTo).hasPointerCapture)===null||s===void 0)&&s.call(i,this._mouseId))&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let h=Q.LeftClick;h<=Q.BrowserForward;h++)if(o[h]===1){o[h]=0;const l=di.CreateDeviceEvent(z.Mouse,0,h,0,this,this._elementToAttachTo);this._onInputChanged(z.Mouse,0,l)}}if(this.isDeviceAvailable(z.Touch)){const o=this._inputs[z.Touch];for(let h=0;h<this._activeTouchIds.length;h++){const l=this._activeTouchIds[h];if(!((n=(r=this._elementToAttachTo).hasPointerCapture)===null||n===void 0)&&n.call(r,l)&&this._elementToAttachTo.releasePointerCapture(l),l!==-1&&((a=o[h])===null||a===void 0?void 0:a[Q.LeftClick])===1){o[h][Q.LeftClick]=0;const u=di.CreateDeviceEvent(z.Touch,h,Q.LeftClick,0,this,this._elementToAttachTo);this._onInputChanged(z.Touch,h,u),this._activeTouchIds[h]=-1,this._onDeviceDisconnected(z.Touch,h)}}}},this._pointerWheelEvent=i=>{const s=z.Mouse,r=0;this._inputs[s]||(this._inputs[s]=[]),this._inputs[s][r]||(this._pointerActive=!0,this._registerDevice(s,r,br));const n=this._inputs[s][r];if(n){n[Q.MouseWheelX]=i.deltaX||0,n[Q.MouseWheelY]=i.deltaY||i.wheelDelta||0,n[Q.MouseWheelZ]=i.deltaZ||0;const a=i;n[Q.MouseWheelX]!==0&&(a.inputIndex=Q.MouseWheelX,this._onInputChanged(s,r,a)),n[Q.MouseWheelY]!==0&&(a.inputIndex=Q.MouseWheelY,this._onInputChanged(s,r,a)),n[Q.MouseWheelZ]!==0&&(a.inputIndex=Q.MouseWheelZ,this._onInputChanged(s,r,a))}},this._elementToAttachTo.addEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.addEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.addEventListener(this._wheelEventName,this._pointerWheelEvent,e?{passive:!1}:!1),this._pointerInputClearObserver=this._engine.onEndFrameObservable.add(()=>{if(this.isDeviceAvailable(z.Mouse)){const i=this._inputs[z.Mouse][0];i[Q.MouseWheelX]=0,i[Q.MouseWheelY]=0,i[Q.MouseWheelZ]=0}})}_handleGamepadActions(){this._gamepadConnectedEvent=e=>{this._addGamePad(e.gamepad)},this._gamepadDisconnectedEvent=e=>{if(this._gamepads){const t=this._getGamepadDeviceType(e.gamepad.id),i=e.gamepad.index;this._unregisterDevice(t,i),delete this._gamepads[i]}},window.addEventListener("gamepadconnected",this._gamepadConnectedEvent),window.addEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)}_updateDevice(e,t,i){const s=navigator.getGamepads()[t];if(s&&e===this._gamepads[t]){const r=this._inputs[e][t];i>=s.buttons.length?r[i]=s.axes[i-s.buttons.length].valueOf():r[i]=s.buttons[i].value}}_getGamepadDeviceType(e){return e.indexOf("054c")!==-1?e.indexOf("0ce6")!==-1?z.DualSense:z.DualShock:e.indexOf("Xbox One")!==-1||e.search("Xbox 360")!==-1||e.search("xinput")!==-1?z.Xbox:e.indexOf("057e")!==-1?z.Switch:z.Generic}_getPointerType(e){let t=z.Mouse;return(e.pointerType==="touch"||e.pointerType==="pen"||e.touches)&&(t=z.Touch),t}}class Sr{constructor(e,t,i=0){this.deviceType=t,this.deviceSlot=i,this.onInputChangedObservable=new F,this._deviceInputSystem=e}getInput(e){return this._deviceInputSystem.pollInput(this.deviceType,this.deviceSlot,e)}}class Dn{constructor(e){this._registeredManagers=new Array,this._refCount=0,this.registerManager=n=>{for(let a=0;a<this._devices.length;a++){const o=this._devices[a];for(const h in o){const l=+h;n._addDevice(new Sr(this._deviceInputSystem,a,l))}}this._registeredManagers.push(n)},this.unregisterManager=n=>{const a=this._registeredManagers.indexOf(n);a>-1&&this._registeredManagers.splice(a,1)};const t=Object.keys(z).length/2;this._devices=new Array(t);const i=(n,a)=>{this._devices[n]||(this._devices[n]=new Array),this._devices[n][a]||(this._devices[n][a]=a);for(const o of this._registeredManagers){const h=new Sr(this._deviceInputSystem,n,a);o._addDevice(h)}},s=(n,a)=>{var o;!((o=this._devices[n])===null||o===void 0)&&o[a]&&delete this._devices[n][a];for(const h of this._registeredManagers)h._removeDevice(n,a)},r=(n,a,o)=>{if(o)for(const h of this._registeredManagers)h._onInputChanged(n,a,o)};typeof _native<"u"?this._deviceInputSystem=new In(i,s,r):this._deviceInputSystem=new Pn(e,i,s,r)}dispose(){this._deviceInputSystem.dispose()}}class Fn{constructor(e){const t=Object.keys(z).length/2;this._devices=new Array(t),this._firstDevice=new Array(t),this._engine=e,this._engine._deviceSourceManager||(this._engine._deviceSourceManager=new Dn(e)),this._engine._deviceSourceManager._refCount++,this.onDeviceConnectedObservable=new F(i=>{for(const s of this._devices)if(s)for(const r of s)r&&this.onDeviceConnectedObservable.notifyObserver(i,r)}),this.onDeviceDisconnectedObservable=new F,this._engine._deviceSourceManager.registerManager(this),this._onDisposeObserver=e.onDisposeObservable.add(()=>{this.dispose()})}getDeviceSource(e,t){if(t===void 0){if(this._firstDevice[e]===void 0)return null;t=this._firstDevice[e]}return!this._devices[e]||this._devices[e][t]===void 0?null:this._devices[e][t]}getDeviceSources(e){return this._devices[e]?this._devices[e].filter(t=>!!t):[]}dispose(){this.onDeviceConnectedObservable.clear(),this.onDeviceDisconnectedObservable.clear(),this._engine._deviceSourceManager&&(this._engine._deviceSourceManager.unregisterManager(this),--this._engine._deviceSourceManager._refCount<1&&(this._engine._deviceSourceManager.dispose(),delete this._engine._deviceSourceManager)),this._engine.onDisposeObservable.remove(this._onDisposeObserver)}_addDevice(e){this._devices[e.deviceType]||(this._devices[e.deviceType]=new Array),this._devices[e.deviceType][e.deviceSlot]||(this._devices[e.deviceType][e.deviceSlot]=e,this._updateFirstDevices(e.deviceType)),this.onDeviceConnectedObservable.notifyObservers(e)}_removeDevice(e,t){var i,s;const r=(i=this._devices[e])===null||i===void 0?void 0:i[t];this.onDeviceDisconnectedObservable.notifyObservers(r),!((s=this._devices[e])===null||s===void 0)&&s[t]&&delete this._devices[e][t],this._updateFirstDevices(e)}_onInputChanged(e,t,i){var s,r;(r=(s=this._devices[e])===null||s===void 0?void 0:s[t])===null||r===void 0||r.onInputChangedObservable.notifyObservers(i)}_updateFirstDevices(e){switch(e){case z.Keyboard:case z.Mouse:this._firstDevice[e]=0;break;case z.Touch:case z.DualSense:case z.DualShock:case z.Xbox:case z.Switch:case z.Generic:{delete this._firstDevice[e];const t=this._devices[e];if(t){for(let i=0;i<t.length;i++)if(t[i]){this._firstDevice[e]=i;break}}break}}}}class xr{constructor(){this._singleClick=!1,this._doubleClick=!1,this._hasSwiped=!1,this._ignore=!1}get singleClick(){return this._singleClick}get doubleClick(){return this._doubleClick}get hasSwiped(){return this._hasSwiped}get ignore(){return this._ignore}set singleClick(e){this._singleClick=e}set doubleClick(e){this._doubleClick=e}set hasSwiped(e){this._hasSwiped=e}set ignore(e){this._ignore=e}}class De{constructor(e){this._alreadyAttached=!1,this._meshPickProceed=!1,this._currentPickResult=null,this._previousPickResult=null,this._totalPointersPressed=0,this._doubleClickOccured=!1,this._isSwiping=!1,this._swipeButtonPressed=-1,this._skipPointerTap=!1,this._pointerX=0,this._pointerY=0,this._startingPointerPosition=new ve(0,0),this._previousStartingPointerPosition=new ve(0,0),this._startingPointerTime=0,this._previousStartingPointerTime=0,this._pointerCaptures={},this._meshUnderPointerId={},this._movePointerInfo=null,this._cameraObserverCount=0,this._deviceSourceManager=null,this._scene=e||fe.LastCreatedScene,this._scene}get meshUnderPointer(){return this._movePointerInfo&&(this._movePointerInfo._generatePickInfo(),this._movePointerInfo=null),this._pointerOverMesh}getMeshUnderPointerByPointerId(e){return this._meshUnderPointerId[e]||null}get unTranslatedPointer(){return new ve(this._unTranslatedPointerX,this._unTranslatedPointerY)}get pointerX(){return this._pointerX}set pointerX(e){this._pointerX=e}get pointerY(){return this._pointerY}set pointerY(e){this._pointerY=e}_updatePointerPosition(e){const t=this._scene.getEngine().getInputElementClientRect();t&&(this._pointerX=e.clientX-t.left,this._pointerY=e.clientY-t.top,this._unTranslatedPointerX=this._pointerX,this._unTranslatedPointerY=this._pointerY)}_processPointerMove(e,t){const i=this._scene,s=i.getEngine(),r=s.getInputElement();r&&(r.tabIndex=s.canvasTabIndex,i.doNotHandleCursors||(r.style.cursor=i.defaultCursor)),this._setCursorAndPointerOverMesh(e,t.pointerId,i);for(const o of i._pointerMoveStage){const h=!!(e!=null&&e.pickedMesh);e=o.action(this._unTranslatedPointerX,this._unTranslatedPointerY,e,h,r)}const n=t.inputIndex>=Q.MouseWheelX&&t.inputIndex<=Q.MouseWheelZ?Te.POINTERWHEEL:Te.POINTERMOVE;i.onPointerMove&&(e=e||this._pickMove(t.pointerId),i.onPointerMove(t,e,n));let a;e?(a=new ui(n,t,e),this._setRayOnPointerInfo(e,t)):(a=new ui(n,t,null,this),this._movePointerInfo=a),i.onPointerObservable.hasObservers()&&i.onPointerObservable.notifyObservers(a,n)}_setRayOnPointerInfo(e,t){const i=this._scene;e&&i._pickingAvailable&&(e.ray||(e.ray=i.createPickingRay(t.offsetX,t.offsetY,x.Identity(),i.activeCamera)))}_addCameraPointerObserver(e,t){return this._cameraObserverCount++,this._scene.onPointerObservable.add(e,t)}_removeCameraPointerObserver(e){return this._cameraObserverCount--,this._scene.onPointerObservable.remove(e)}_checkForPicking(){return!!(this._scene.onPointerObservable.observers.length>this._cameraObserverCount||this._scene.onPointerPick)}_checkPrePointerObservable(e,t,i){const s=this._scene,r=new Cn(i,t,this._unTranslatedPointerX,this._unTranslatedPointerY);return e&&(r.originalPickingInfo=e,r.ray=e.ray,e.originMesh&&(r.nearInteractionPickingInfo=e)),s.onPrePointerObservable.notifyObservers(r,i),!!r.skipOnPointerObservable}_pickMove(e){const t=this._scene,i=t.pick(this._unTranslatedPointerX,this._unTranslatedPointerY,t.pointerMovePredicate,!1,t.cameraToUseForPointers,t.pointerMoveTrianglePredicate);return this._setCursorAndPointerOverMesh(i,e,t),i}_setCursorAndPointerOverMesh(e,t,i){const r=i.getEngine().getInputElement();if(e!=null&&e.pickedMesh){if(this.setPointerOverMesh(e.pickedMesh,t,e),!i.doNotHandleCursors&&r&&this._pointerOverMesh){const n=this._pointerOverMesh._getActionManagerForTrigger();n&&n.hasPointerTriggers&&(r.style.cursor=n.hoverCursor||i.hoverCursor)}}else this.setPointerOverMesh(null,t,e)}simulatePointerMove(e,t){const i=new PointerEvent("pointermove",t);i.inputIndex=Q.Move,!this._checkPrePointerObservable(e,i,Te.POINTERMOVE)&&this._processPointerMove(e,i)}simulatePointerDown(e,t){const i=new PointerEvent("pointerdown",t);i.inputIndex=i.button+2,!this._checkPrePointerObservable(e,i,Te.POINTERDOWN)&&this._processPointerDown(e,i)}_processPointerDown(e,t){const i=this._scene;if(e!=null&&e.pickedMesh){this._pickedDownMesh=e.pickedMesh;const n=e.pickedMesh._getActionManagerForTrigger();if(n){if(n.hasPickTriggers)switch(n.processTrigger(5,Ve.CreateNew(e.pickedMesh,t)),t.button){case 0:n.processTrigger(2,Ve.CreateNew(e.pickedMesh,t));break;case 1:n.processTrigger(4,Ve.CreateNew(e.pickedMesh,t));break;case 2:n.processTrigger(3,Ve.CreateNew(e.pickedMesh,t));break}n.hasSpecificTrigger(8)&&window.setTimeout(()=>{const a=i.pick(this._unTranslatedPointerX,this._unTranslatedPointerY,o=>o.isPickable&&o.isVisible&&o.isReady()&&o.actionManager&&o.actionManager.hasSpecificTrigger(8)&&o===this._pickedDownMesh,!1,i.cameraToUseForPointers);a!=null&&a.pickedMesh&&n&&this._totalPointersPressed!==0&&Date.now()-this._startingPointerTime>De.LongPressDelay&&!this._isPointerSwiping()&&(this._startingPointerTime=0,n.processTrigger(8,Ve.CreateNew(a.pickedMesh,t)))},De.LongPressDelay)}}else for(const n of i._pointerDownStage)e=n.action(this._unTranslatedPointerX,this._unTranslatedPointerY,e,t,!1);let s;const r=Te.POINTERDOWN;e?(i.onPointerDown&&i.onPointerDown(t,e,r),s=new ui(r,t,e),this._setRayOnPointerInfo(e,t)):s=new ui(r,t,null,this),i.onPointerObservable.hasObservers()&&i.onPointerObservable.notifyObservers(s,r)}_isPointerSwiping(){return this._isSwiping}simulatePointerUp(e,t,i){const s=new PointerEvent("pointerup",t);s.inputIndex=Q.Move;const r=new xr;i?r.doubleClick=!0:r.singleClick=!0,!this._checkPrePointerObservable(e,s,Te.POINTERUP)&&this._processPointerUp(e,s,r)}_processPointerUp(e,t,i){const s=this._scene;if(e!=null&&e.pickedMesh){if(this._pickedUpMesh=e.pickedMesh,this._pickedDownMesh===this._pickedUpMesh&&(s.onPointerPick&&s.onPointerPick(t,e),i.singleClick&&!i.ignore&&s.onPointerObservable.observers.length>this._cameraObserverCount)){const n=Te.POINTERPICK,a=new ui(n,t,e);this._setRayOnPointerInfo(e,t),s.onPointerObservable.notifyObservers(a,n)}const r=e.pickedMesh._getActionManagerForTrigger();if(r&&!i.ignore){r.processTrigger(7,Ve.CreateNew(e.pickedMesh,t,e)),!i.hasSwiped&&i.singleClick&&r.processTrigger(1,Ve.CreateNew(e.pickedMesh,t,e));const n=e.pickedMesh._getActionManagerForTrigger(6);i.doubleClick&&n&&n.processTrigger(6,Ve.CreateNew(e.pickedMesh,t,e))}}else if(!i.ignore)for(const r of s._pointerUpStage)e=r.action(this._unTranslatedPointerX,this._unTranslatedPointerY,e,t,i.doubleClick);if(this._pickedDownMesh&&this._pickedDownMesh!==this._pickedUpMesh){const r=this._pickedDownMesh._getActionManagerForTrigger(16);r&&r.processTrigger(16,Ve.CreateNew(this._pickedDownMesh,t))}if(!i.ignore){const r=new ui(Te.POINTERUP,t,e);if(this._setRayOnPointerInfo(e,t),s.onPointerObservable.notifyObservers(r,Te.POINTERUP),s.onPointerUp&&s.onPointerUp(t,e,Te.POINTERUP),!i.hasSwiped&&!this._skipPointerTap){let n=0;if(i.singleClick?n=Te.POINTERTAP:i.doubleClick&&(n=Te.POINTERDOUBLETAP),n){const a=new ui(n,t,e);s.onPointerObservable.hasObservers()&&s.onPointerObservable.hasSpecificMask(n)&&s.onPointerObservable.notifyObservers(a,n)}}}}isPointerCaptured(e=0){return this._pointerCaptures[e]}attachControl(e=!0,t=!0,i=!0,s=null){const r=this._scene,n=r.getEngine();s||(s=n.getInputElement()),this._alreadyAttached&&this.detachControl(),s&&(this._alreadyAttachedTo=s),this._deviceSourceManager=new Fn(n),this._initActionManager=a=>{if(!this._meshPickProceed){const o=r.skipPointerUpPicking||r._registeredActions===0&&!this._checkForPicking()&&!r.onPointerUp?null:r.pick(this._unTranslatedPointerX,this._unTranslatedPointerY,r.pointerUpPredicate,!1,r.cameraToUseForPointers);this._currentPickResult=o,o&&(a=o.hit&&o.pickedMesh?o.pickedMesh._getActionManagerForTrigger():null),this._meshPickProceed=!0}return a},this._delayedSimpleClick=(a,o,h)=>{(Date.now()-this._previousStartingPointerTime>De.DoubleClickDelay&&!this._doubleClickOccured||a!==this._previousButtonPressed)&&(this._doubleClickOccured=!1,o.singleClick=!0,o.ignore=!1,h(o,this._currentPickResult))},this._initClickEvent=(a,o,h,l)=>{const u=new xr;this._currentPickResult=null;let d=null,f=a.hasSpecificMask(Te.POINTERPICK)||o.hasSpecificMask(Te.POINTERPICK)||a.hasSpecificMask(Te.POINTERTAP)||o.hasSpecificMask(Te.POINTERTAP)||a.hasSpecificMask(Te.POINTERDOUBLETAP)||o.hasSpecificMask(Te.POINTERDOUBLETAP);!f&&ut&&(d=this._initActionManager(d,u),d&&(f=d.hasPickTriggers));let _=!1;if(f){const E=h.button;if(u.hasSwiped=this._isPointerSwiping(),!u.hasSwiped){let m=!De.ExclusiveDoubleClickMode;m||(m=!a.hasSpecificMask(Te.POINTERDOUBLETAP)&&!o.hasSpecificMask(Te.POINTERDOUBLETAP),m&&!ut.HasSpecificTrigger(6)&&(d=this._initActionManager(d,u),d&&(m=!d.hasSpecificTrigger(6)))),m?(Date.now()-this._previousStartingPointerTime>De.DoubleClickDelay||E!==this._previousButtonPressed)&&(u.singleClick=!0,l(u,this._currentPickResult),_=!0):(this._previousDelayedSimpleClickTimeout=this._delayedSimpleClickTimeout,this._delayedSimpleClickTimeout=window.setTimeout(this._delayedSimpleClick.bind(this,E,u,l),De.DoubleClickDelay));let v=a.hasSpecificMask(Te.POINTERDOUBLETAP)||o.hasSpecificMask(Te.POINTERDOUBLETAP);!v&&ut.HasSpecificTrigger(6)&&(d=this._initActionManager(d,u),d&&(v=d.hasSpecificTrigger(6))),v&&(E===this._previousButtonPressed&&Date.now()-this._previousStartingPointerTime<De.DoubleClickDelay&&!this._doubleClickOccured?(!u.hasSwiped&&!this._isPointerSwiping()?(this._previousStartingPointerTime=0,this._doubleClickOccured=!0,u.doubleClick=!0,u.ignore=!1,De.ExclusiveDoubleClickMode&&this._previousDelayedSimpleClickTimeout&&clearTimeout(this._previousDelayedSimpleClickTimeout),this._previousDelayedSimpleClickTimeout=this._delayedSimpleClickTimeout,l(u,this._currentPickResult)):(this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=E,De.ExclusiveDoubleClickMode?(this._previousDelayedSimpleClickTimeout&&clearTimeout(this._previousDelayedSimpleClickTimeout),this._previousDelayedSimpleClickTimeout=this._delayedSimpleClickTimeout,l(u,this._previousPickResult)):l(u,this._currentPickResult)),_=!0):(this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=E))}}_||l(u,this._currentPickResult)},this._onPointerMove=a=>{if(a.pointerId===void 0&&(a.pointerId=0),this._updatePointerPosition(a),!this._isSwiping&&this._swipeButtonPressed!==-1&&(this._isSwiping=Math.abs(this._startingPointerPosition.x-this._pointerX)>De.DragMovementThreshold||Math.abs(this._startingPointerPosition.y-this._pointerY)>De.DragMovementThreshold),this._checkPrePointerObservable(null,a,a.inputIndex>=Q.MouseWheelX&&a.inputIndex<=Q.MouseWheelZ?Te.POINTERWHEEL:Te.POINTERMOVE)||!r.cameraToUseForPointers&&!r.activeCamera)return;if(r.skipPointerMovePicking){this._processPointerMove(new Ut,a);return}r.pointerMovePredicate||(r.pointerMovePredicate=h=>h.isPickable&&h.isVisible&&h.isReady()&&h.isEnabled()&&(h.enablePointerMoveEvents||r.constantlyUpdateMeshUnderPointer||h._getActionManagerForTrigger()!==null)&&(!r.cameraToUseForPointers||(r.cameraToUseForPointers.layerMask&h.layerMask)!==0));const o=r._registeredActions>0?this._pickMove(a.pointerId):null;this._processPointerMove(o,a)},this._onPointerDown=a=>{if(this._totalPointersPressed++,this._pickedDownMesh=null,this._meshPickProceed=!1,a.pointerId===void 0&&(a.pointerId=0),this._updatePointerPosition(a),this._swipeButtonPressed===-1&&(this._swipeButtonPressed=a.button),r.preventDefaultOnPointerDown&&s&&(a.preventDefault(),s.focus()),this._startingPointerPosition.x=this._pointerX,this._startingPointerPosition.y=this._pointerY,this._startingPointerTime=Date.now(),this._checkPrePointerObservable(null,a,Te.POINTERDOWN)||!r.cameraToUseForPointers&&!r.activeCamera)return;this._pointerCaptures[a.pointerId]=!0,r.pointerDownPredicate||(r.pointerDownPredicate=h=>h.isPickable&&h.isVisible&&h.isReady()&&h.isEnabled()&&(!r.cameraToUseForPointers||(r.cameraToUseForPointers.layerMask&h.layerMask)!==0)),this._pickedDownMesh=null;let o;r.skipPointerDownPicking||r._registeredActions===0&&!this._checkForPicking()&&!r.onPointerDown?o=new Ut:o=r.pick(this._unTranslatedPointerX,this._unTranslatedPointerY,r.pointerDownPredicate,!1,r.cameraToUseForPointers),this._processPointerDown(o,a)},this._onPointerUp=a=>{this._totalPointersPressed!==0&&(this._totalPointersPressed--,this._pickedUpMesh=null,this._meshPickProceed=!1,a.pointerId===void 0&&(a.pointerId=0),this._updatePointerPosition(a),r.preventDefaultOnPointerUp&&s&&(a.preventDefault(),s.focus()),this._initClickEvent(r.onPrePointerObservable,r.onPointerObservable,a,(o,h)=>{if(r.onPrePointerObservable.hasObservers()&&(this._skipPointerTap=!1,!o.ignore)){if(this._checkPrePointerObservable(null,a,Te.POINTERUP)){this._swipeButtonPressed===a.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1);return}o.hasSwiped||(o.singleClick&&r.onPrePointerObservable.hasSpecificMask(Te.POINTERTAP)&&this._checkPrePointerObservable(null,a,Te.POINTERTAP)&&(this._skipPointerTap=!0),o.doubleClick&&r.onPrePointerObservable.hasSpecificMask(Te.POINTERDOUBLETAP)&&this._checkPrePointerObservable(null,a,Te.POINTERDOUBLETAP)&&(this._skipPointerTap=!0))}this._pointerCaptures[a.pointerId]=!1,!(!r.cameraToUseForPointers&&!r.activeCamera)&&(r.pointerUpPredicate||(r.pointerUpPredicate=l=>l.isPickable&&l.isVisible&&l.isReady()&&l.isEnabled()&&(!r.cameraToUseForPointers||(r.cameraToUseForPointers.layerMask&l.layerMask)!==0)),!this._meshPickProceed&&(ut&&ut.HasTriggers||this._checkForPicking()||r.onPointerUp)&&this._initActionManager(null,o),h||(h=this._currentPickResult),this._processPointerUp(h,a,o),this._previousPickResult=this._currentPickResult,this._swipeButtonPressed===a.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1))}))},this._onKeyDown=a=>{const o=Ji.KEYDOWN;if(r.onPreKeyboardObservable.hasObservers()){const h=new _r(o,a);if(r.onPreKeyboardObservable.notifyObservers(h,o),h.skipOnKeyboardObservable)return}if(r.onKeyboardObservable.hasObservers()){const h=new Cs(o,a);r.onKeyboardObservable.notifyObservers(h,o)}r.actionManager&&r.actionManager.processTrigger(14,Ve.CreateNewFromScene(r,a))},this._onKeyUp=a=>{const o=Ji.KEYUP;if(r.onPreKeyboardObservable.hasObservers()){const h=new _r(o,a);if(r.onPreKeyboardObservable.notifyObservers(h,o),h.skipOnKeyboardObservable)return}if(r.onKeyboardObservable.hasObservers()){const h=new Cs(o,a);r.onKeyboardObservable.notifyObservers(h,o)}r.actionManager&&r.actionManager.processTrigger(15,Ve.CreateNewFromScene(r,a))},this._deviceSourceManager.onDeviceConnectedObservable.add(a=>{a.deviceType===z.Mouse?a.onInputChangedObservable.add(o=>{o.inputIndex===Q.LeftClick||o.inputIndex===Q.MiddleClick||o.inputIndex===Q.RightClick||o.inputIndex===Q.BrowserBack||o.inputIndex===Q.BrowserForward?t&&a.getInput(o.inputIndex)===1?this._onPointerDown(o):e&&a.getInput(o.inputIndex)===0&&this._onPointerUp(o):i&&(o.inputIndex===Q.Move?this._onPointerMove(o):(o.inputIndex===Q.MouseWheelX||o.inputIndex===Q.MouseWheelY||o.inputIndex===Q.MouseWheelZ)&&this._onPointerMove(o))}):a.deviceType===z.Touch?a.onInputChangedObservable.add(o=>{o.inputIndex===Q.LeftClick&&(t&&a.getInput(o.inputIndex)===1?this._onPointerDown(o):e&&a.getInput(o.inputIndex)===0&&this._onPointerUp(o)),i&&o.inputIndex===Q.Move&&this._onPointerMove(o)}):a.deviceType===z.Keyboard&&a.onInputChangedObservable.add(o=>{o.type==="keydown"?this._onKeyDown(o):o.type==="keyup"&&this._onKeyUp(o)})}),this._alreadyAttached=!0}detachControl(){this._alreadyAttached&&(this._deviceSourceManager.dispose(),this._deviceSourceManager=null,this._alreadyAttachedTo&&!this._scene.doNotHandleCursors&&(this._alreadyAttachedTo.style.cursor=this._scene.defaultCursor),this._alreadyAttached=!1,this._alreadyAttachedTo=null)}setPointerOverMesh(e,t=0,i){if(this._meshUnderPointerId[t]===e&&(!e||!e._internalAbstractMeshDataInfo._pointerOverDisableMeshTesting))return;const s=this._meshUnderPointerId[t];let r;s&&(r=s._getActionManagerForTrigger(10),r&&r.processTrigger(10,Ve.CreateNew(s,void 0,{pointerId:t}))),e?(this._meshUnderPointerId[t]=e,this._pointerOverMesh=e,r=e._getActionManagerForTrigger(9),r&&r.processTrigger(9,Ve.CreateNew(e,void 0,{pointerId:t,pickResult:i}))):(delete this._meshUnderPointerId[t],this._pointerOverMesh=null)}getPointerOverMesh(){return this.meshUnderPointer}_invalidateMesh(e){this._pointerOverMesh===e&&(this._pointerOverMesh=null),this._pickedDownMesh===e&&(this._pickedDownMesh=null),this._pickedUpMesh===e&&(this._pickedUpMesh=null);for(const t in this._meshUnderPointerId)this._meshUnderPointerId[t]===e&&delete this._meshUnderPointerId[t]}}De.DragMovementThreshold=10,De.LongPressDelay=500,De.DoubleClickDelay=300,De.ExclusiveDoubleClickMode=!1;class xt{constructor(e,t,i,s){this.normal=new p(e,t,i),this.d=s}asArray(){return[this.normal.x,this.normal.y,this.normal.z,this.d]}clone(){return new xt(this.normal.x,this.normal.y,this.normal.z,this.d)}getClassName(){return"Plane"}getHashCode(){let e=this.normal.getHashCode();return e=e*397^(this.d|0),e}normalize(){const e=Math.sqrt(this.normal.x*this.normal.x+this.normal.y*this.normal.y+this.normal.z*this.normal.z);let t=0;return e!==0&&(t=1/e),this.normal.x*=t,this.normal.y*=t,this.normal.z*=t,this.d*=t,this}transform(e){const t=xt._TmpMatrix;e.invertToRef(t);const i=t.m,s=this.normal.x,r=this.normal.y,n=this.normal.z,a=this.d,o=s*i[0]+r*i[1]+n*i[2]+a*i[3],h=s*i[4]+r*i[5]+n*i[6]+a*i[7],l=s*i[8]+r*i[9]+n*i[10]+a*i[11],u=s*i[12]+r*i[13]+n*i[14]+a*i[15];return new xt(o,h,l,u)}dotCoordinate(e){return this.normal.x*e.x+this.normal.y*e.y+this.normal.z*e.z+this.d}copyFromPoints(e,t,i){const s=t.x-e.x,r=t.y-e.y,n=t.z-e.z,a=i.x-e.x,o=i.y-e.y,h=i.z-e.z,l=r*h-n*o,u=n*a-s*h,d=s*o-r*a,f=Math.sqrt(l*l+u*u+d*d);let _;return f!==0?_=1/f:_=0,this.normal.x=l*_,this.normal.y=u*_,this.normal.z=d*_,this.d=-(this.normal.x*e.x+this.normal.y*e.y+this.normal.z*e.z),this}isFrontFacingTo(e,t){return p.Dot(this.normal,e)<=t}signedDistanceTo(e){return p.Dot(e,this.normal)+this.d}static FromArray(e){return new xt(e[0],e[1],e[2],e[3])}static FromPoints(e,t,i){const s=new xt(0,0,0,0);return s.copyFromPoints(e,t,i),s}static FromPositionAndNormal(e,t){const i=new xt(0,0,0,0);return t.normalize(),i.normal=t,i.d=-(t.x*e.x+t.y*e.y+t.z*e.z),i}static SignedDistanceToPlaneFromPositionAndNormal(e,t,i){const s=-(t.x*e.x+t.y*e.y+t.z*e.z);return p.Dot(i,t)+s}}xt._TmpMatrix=x.Identity();class Et{static GetPlanes(e){const t=[];for(let i=0;i<6;i++)t.push(new xt(0,0,0,0));return Et.GetPlanesToRef(e,t),t}static GetNearPlaneToRef(e,t){const i=e.m;t.normal.x=i[3]+i[2],t.normal.y=i[7]+i[6],t.normal.z=i[11]+i[10],t.d=i[15]+i[14],t.normalize()}static GetFarPlaneToRef(e,t){const i=e.m;t.normal.x=i[3]-i[2],t.normal.y=i[7]-i[6],t.normal.z=i[11]-i[10],t.d=i[15]-i[14],t.normalize()}static GetLeftPlaneToRef(e,t){const i=e.m;t.normal.x=i[3]+i[0],t.normal.y=i[7]+i[4],t.normal.z=i[11]+i[8],t.d=i[15]+i[12],t.normalize()}static GetRightPlaneToRef(e,t){const i=e.m;t.normal.x=i[3]-i[0],t.normal.y=i[7]-i[4],t.normal.z=i[11]-i[8],t.d=i[15]-i[12],t.normalize()}static GetTopPlaneToRef(e,t){const i=e.m;t.normal.x=i[3]-i[1],t.normal.y=i[7]-i[5],t.normal.z=i[11]-i[9],t.d=i[15]-i[13],t.normalize()}static GetBottomPlaneToRef(e,t){const i=e.m;t.normal.x=i[3]+i[1],t.normal.y=i[7]+i[5],t.normal.z=i[11]+i[9],t.d=i[15]+i[13],t.normalize()}static GetPlanesToRef(e,t){Et.GetNearPlaneToRef(e,t[0]),Et.GetFarPlaneToRef(e,t[1]),Et.GetLeftPlaneToRef(e,t[2]),Et.GetRightPlaneToRef(e,t[3]),Et.GetTopPlaneToRef(e,t[4]),Et.GetBottomPlaneToRef(e,t[5])}}class Mr{static get UniqueId(){const e=this._UniqueIdCounter;return this._UniqueIdCounter++,e}}Mr._UniqueIdCounter=1;class Ee{static CompareLightsPriority(e,t){return e.shadowEnabled!==t.shadowEnabled?(t.shadowEnabled?1:0)-(e.shadowEnabled?1:0):t.renderPriority-e.renderPriority}}Ee.FALLOFF_DEFAULT=0,Ee.FALLOFF_PHYSICAL=1,Ee.FALLOFF_GLTF=2,Ee.FALLOFF_STANDARD=3,Ee.LIGHTMAP_DEFAULT=0,Ee.LIGHTMAP_SPECULAR=1,Ee.LIGHTMAP_SHADOWSONLY=2,Ee.INTENSITYMODE_AUTOMATIC=0,Ee.INTENSITYMODE_LUMINOUSPOWER=1,Ee.INTENSITYMODE_LUMINOUSINTENSITY=2,Ee.INTENSITYMODE_ILLUMINANCE=3,Ee.INTENSITYMODE_LUMINANCE=4,Ee.LIGHTTYPEID_POINTLIGHT=0,Ee.LIGHTTYPEID_DIRECTIONALLIGHT=1,Ee.LIGHTTYPEID_SPOTLIGHT=2,Ee.LIGHTTYPEID_HEMISPHERICLIGHT=3;var Ct;(function(c){c[c.BackwardCompatible=0]="BackwardCompatible",c[c.Intermediate=1]="Intermediate",c[c.Aggressive=2]="Aggressive"})(Ct||(Ct={}));class ne extends Zi{constructor(e,t){super(),this._inputManager=new De(this),this.cameraToUseForPointers=null,this._isScene=!0,this._blockEntityCollection=!1,this.autoClear=!0,this.autoClearDepthAndStencil=!0,this.clearColor=new me(.2,.2,.3,1),this.ambientColor=new re(0,0,0),this.environmentIntensity=1,this._performancePriority=Ct.BackwardCompatible,this._forceWireframe=!1,this._skipFrustumClipping=!1,this._forcePointsCloud=!1,this.animationsEnabled=!0,this._animationPropertiesOverride=null,this.useConstantAnimationDeltaTime=!1,this.constantlyUpdateMeshUnderPointer=!1,this.hoverCursor="pointer",this.defaultCursor="",this.doNotHandleCursors=!1,this.preventDefaultOnPointerDown=!0,this.preventDefaultOnPointerUp=!0,this.metadata=null,this.reservedDataStore=null,this.disableOfflineSupportExceptionRules=new Array,this.onDisposeObservable=new F,this._onDisposeObserver=null,this.onBeforeRenderObservable=new F,this._onBeforeRenderObserver=null,this.onAfterRenderObservable=new F,this.onAfterRenderCameraObservable=new F,this._onAfterRenderObserver=null,this.onBeforeAnimationsObservable=new F,this.onAfterAnimationsObservable=new F,this.onBeforeDrawPhaseObservable=new F,this.onAfterDrawPhaseObservable=new F,this.onReadyObservable=new F,this.onBeforeCameraRenderObservable=new F,this._onBeforeCameraRenderObserver=null,this.onAfterCameraRenderObservable=new F,this._onAfterCameraRenderObserver=null,this.onBeforeActiveMeshesEvaluationObservable=new F,this.onAfterActiveMeshesEvaluationObservable=new F,this.onBeforeParticlesRenderingObservable=new F,this.onAfterParticlesRenderingObservable=new F,this.onDataLoadedObservable=new F,this.onNewCameraAddedObservable=new F,this.onCameraRemovedObservable=new F,this.onNewLightAddedObservable=new F,this.onLightRemovedObservable=new F,this.onNewGeometryAddedObservable=new F,this.onGeometryRemovedObservable=new F,this.onNewTransformNodeAddedObservable=new F,this.onTransformNodeRemovedObservable=new F,this.onNewMeshAddedObservable=new F,this.onMeshRemovedObservable=new F,this.onNewSkeletonAddedObservable=new F,this.onSkeletonRemovedObservable=new F,this.onNewMaterialAddedObservable=new F,this.onNewMultiMaterialAddedObservable=new F,this.onMaterialRemovedObservable=new F,this.onMultiMaterialRemovedObservable=new F,this.onNewTextureAddedObservable=new F,this.onTextureRemovedObservable=new F,this.onBeforeRenderTargetsRenderObservable=new F,this.onAfterRenderTargetsRenderObservable=new F,this.onBeforeStepObservable=new F,this.onAfterStepObservable=new F,this.onActiveCameraChanged=new F,this.onActiveCamerasChanged=new F,this.onBeforeRenderingGroupObservable=new F,this.onAfterRenderingGroupObservable=new F,this.onMeshImportedObservable=new F,this.onAnimationFileImportedObservable=new F,this._registeredForLateAnimationBindings=new hi(256),this.skipPointerMovePicking=!1,this.skipPointerDownPicking=!1,this.skipPointerUpPicking=!1,this.onPrePointerObservable=new F,this.onPointerObservable=new F,this.onPreKeyboardObservable=new F,this.onKeyboardObservable=new F,this._useRightHandedSystem=!1,this._timeAccumulator=0,this._currentStepId=0,this._currentInternalStep=0,this._fogEnabled=!0,this._fogMode=ne.FOGMODE_NONE,this.fogColor=new re(.2,.2,.3),this.fogDensity=.1,this.fogStart=0,this.fogEnd=1e3,this.needsPreviousWorldMatrices=!1,this._shadowsEnabled=!0,this._lightsEnabled=!0,this._unObserveActiveCameras=null,this._texturesEnabled=!0,this.physicsEnabled=!0,this.particlesEnabled=!0,this.spritesEnabled=!0,this._skeletonsEnabled=!0,this.lensFlaresEnabled=!0,this.collisionsEnabled=!0,this.gravity=new p(0,-9.807,0),this.postProcessesEnabled=!0,this.renderTargetsEnabled=!0,this.dumpNextRenderTargets=!1,this.customRenderTargets=new Array,this.importedMeshesFiles=new Array,this.probesEnabled=!0,this._meshesForIntersections=new hi(256),this.proceduralTexturesEnabled=!0,this._totalVertices=new Rt,this._activeIndices=new Rt,this._activeParticles=new Rt,this._activeBones=new Rt,this._animationTime=0,this.animationTimeScale=1,this._renderId=0,this._frameId=0,this._executeWhenReadyTimeoutId=null,this._intermediateRendering=!1,this._defaultFrameBufferCleared=!1,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1,this._toBeDisposed=new Array(256),this._activeRequests=new Array,this._pendingData=new Array,this._isDisposed=!1,this.dispatchAllSubMeshesOfActiveMeshes=!1,this._activeMeshes=new $e(256),this._processedMaterials=new $e(256),this._renderTargets=new hi(256),this._materialsRenderTargets=new hi(256),this._activeParticleSystems=new $e(256),this._activeSkeletons=new hi(32),this._softwareSkinnedMeshes=new hi(32),this._activeAnimatables=new Array,this._transformMatrix=x.Zero(),this.requireLightSorting=!1,this._components=[],this._serializableComponents=[],this._transientComponents=[],this._beforeCameraUpdateStage=Ie.Create(),this._beforeClearStage=Ie.Create(),this._beforeRenderTargetClearStage=Ie.Create(),this._gatherRenderTargetsStage=Ie.Create(),this._gatherActiveCameraRenderTargetsStage=Ie.Create(),this._isReadyForMeshStage=Ie.Create(),this._beforeEvaluateActiveMeshStage=Ie.Create(),this._evaluateSubMeshStage=Ie.Create(),this._preActiveMeshStage=Ie.Create(),this._cameraDrawRenderTargetStage=Ie.Create(),this._beforeCameraDrawStage=Ie.Create(),this._beforeRenderTargetDrawStage=Ie.Create(),this._beforeRenderingGroupDrawStage=Ie.Create(),this._beforeRenderingMeshStage=Ie.Create(),this._afterRenderingMeshStage=Ie.Create(),this._afterRenderingGroupDrawStage=Ie.Create(),this._afterCameraDrawStage=Ie.Create(),this._afterCameraPostProcessStage=Ie.Create(),this._afterRenderTargetDrawStage=Ie.Create(),this._afterRenderTargetPostProcessStage=Ie.Create(),this._afterRenderStage=Ie.Create(),this._pointerMoveStage=Ie.Create(),this._pointerDownStage=Ie.Create(),this._pointerUpStage=Ie.Create(),this._geometriesByUniqueId=null,this._defaultMeshCandidates={data:[],length:0},this._defaultSubMeshCandidates={data:[],length:0},this._preventFreeActiveMeshesAndRenderingGroups=!1,this._activeMeshesFrozen=!1,this._activeMeshesFrozenButKeepClipping=!1,this._skipEvaluateActiveMeshesCompletely=!1,this._allowPostProcessClearColor=!0,this.getDeterministicFrameTime=()=>this._engine.getTimeStep(),this._registeredActions=0,this._blockMaterialDirtyMechanism=!1,this._perfCollector=null,this.activeCameras=new Array;const i={useGeometryUniqueIdsMap:!0,useMaterialMeshMap:!0,useClonedMeshMap:!0,virtual:!1,...t};this._engine=e||fe.LastCreatedEngine,i.virtual?this._engine._virtualScenes.push(this):(fe._LastCreatedScene=this,this._engine.scenes.push(this)),this._uid=null,this._renderingManager=new We(this),Qi&&(this.postProcessManager=new Qi(this)),je()&&this.attachControl(),this._createUbo(),pe&&(this._imageProcessingConfiguration=new pe),this.setDefaultCandidateProviders(),i.useGeometryUniqueIdsMap&&(this._geometriesByUniqueId={}),this.useMaterialMeshMap=i.useMaterialMeshMap,this.useClonedMeshMap=i.useClonedMeshMap,(!t||!t.virtual)&&this._engine.onNewSceneAddedObservable.notifyObservers(this)}static DefaultMaterialFactory(e){throw $("StandardMaterial")}static CollisionCoordinatorFactory(){throw $("DefaultCollisionCoordinator")}get environmentTexture(){return this._environmentTexture}set environmentTexture(e){this._environmentTexture!==e&&(this._environmentTexture=e,this.markAllMaterialsAsDirty(1))}get imageProcessingConfiguration(){return this._imageProcessingConfiguration}get performancePriority(){return this._performancePriority}set performancePriority(e){if(e!==this._performancePriority)switch(this._performancePriority=e,e){case Ct.BackwardCompatible:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.skipPointerMovePicking=!1,this.autoClear=!0;break;case Ct.Intermediate:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.skipPointerMovePicking=!0,this.autoClear=!1;break;case Ct.Aggressive:this.skipFrustumClipping=!0,this._renderingManager.maintainStateBetweenFrames=!0,this.skipPointerMovePicking=!0,this.autoClear=!1;break}}set forceWireframe(e){this._forceWireframe!==e&&(this._forceWireframe=e,this.markAllMaterialsAsDirty(16))}get forceWireframe(){return this._forceWireframe}set skipFrustumClipping(e){this._skipFrustumClipping!==e&&(this._skipFrustumClipping=e)}get skipFrustumClipping(){return this._skipFrustumClipping}set forcePointsCloud(e){this._forcePointsCloud!==e&&(this._forcePointsCloud=e,this.markAllMaterialsAsDirty(16))}get forcePointsCloud(){return this._forcePointsCloud}get animationPropertiesOverride(){return this._animationPropertiesOverride}set animationPropertiesOverride(e){this._animationPropertiesOverride=e}set onDispose(e){this._onDisposeObserver&&this.onDisposeObservable.remove(this._onDisposeObserver),this._onDisposeObserver=this.onDisposeObservable.add(e)}set beforeRender(e){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),e&&(this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(e))}set afterRender(e){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),e&&(this._onAfterRenderObserver=this.onAfterRenderObservable.add(e))}set beforeCameraRender(e){this._onBeforeCameraRenderObserver&&this.onBeforeCameraRenderObservable.remove(this._onBeforeCameraRenderObserver),this._onBeforeCameraRenderObserver=this.onBeforeCameraRenderObservable.add(e)}set afterCameraRender(e){this._onAfterCameraRenderObserver&&this.onAfterCameraRenderObservable.remove(this._onAfterCameraRenderObserver),this._onAfterCameraRenderObserver=this.onAfterCameraRenderObservable.add(e)}get unTranslatedPointer(){return this._inputManager.unTranslatedPointer}static get DragMovementThreshold(){return De.DragMovementThreshold}static set DragMovementThreshold(e){De.DragMovementThreshold=e}static get LongPressDelay(){return De.LongPressDelay}static set LongPressDelay(e){De.LongPressDelay=e}static get DoubleClickDelay(){return De.DoubleClickDelay}static set DoubleClickDelay(e){De.DoubleClickDelay=e}static get ExclusiveDoubleClickMode(){return De.ExclusiveDoubleClickMode}static set ExclusiveDoubleClickMode(e){De.ExclusiveDoubleClickMode=e}bindEyePosition(e,t="vEyePosition",i=!1){var s;const r=this._forcedViewPosition?this._forcedViewPosition:this._mirroredCameraPosition?this._mirroredCameraPosition:(s=this.activeCamera.globalPosition)!==null&&s!==void 0?s:this.activeCamera.devicePosition,n=this.useRightHandedSystem===(this._mirroredCameraPosition!=null);return D.Vector4[0].set(r.x,r.y,r.z,n?-1:1),e&&(i?e.setFloat3(t,D.Vector4[0].x,D.Vector4[0].y,D.Vector4[0].z):e.setVector4(t,D.Vector4[0])),D.Vector4[0]}finalizeSceneUbo(){const e=this.getSceneUniformBuffer(),t=this.bindEyePosition(null);return e.updateFloat4("vEyePosition",t.x,t.y,t.z,t.w),e.update(),e}set useRightHandedSystem(e){this._useRightHandedSystem!==e&&(this._useRightHandedSystem=e,this.markAllMaterialsAsDirty(16))}get useRightHandedSystem(){return this._useRightHandedSystem}setStepId(e){this._currentStepId=e}getStepId(){return this._currentStepId}getInternalStep(){return this._currentInternalStep}set fogEnabled(e){this._fogEnabled!==e&&(this._fogEnabled=e,this.markAllMaterialsAsDirty(16))}get fogEnabled(){return this._fogEnabled}set fogMode(e){this._fogMode!==e&&(this._fogMode=e,this.markAllMaterialsAsDirty(16))}get fogMode(){return this._fogMode}get prePass(){return!!this.prePassRenderer&&this.prePassRenderer.defaultRT.enabled}set shadowsEnabled(e){this._shadowsEnabled!==e&&(this._shadowsEnabled=e,this.markAllMaterialsAsDirty(2))}get shadowsEnabled(){return this._shadowsEnabled}set lightsEnabled(e){this._lightsEnabled!==e&&(this._lightsEnabled=e,this.markAllMaterialsAsDirty(2))}get lightsEnabled(){return this._lightsEnabled}get activeCameras(){return this._activeCameras}set activeCameras(e){this._unObserveActiveCameras&&(this._unObserveActiveCameras(),this._unObserveActiveCameras=null),e&&(this._unObserveActiveCameras=$s(e,()=>{this.onActiveCamerasChanged.notifyObservers(this)})),this._activeCameras=e}get activeCamera(){return this._activeCamera}set activeCamera(e){e!==this._activeCamera&&(this._activeCamera=e,this.onActiveCameraChanged.notifyObservers(this))}get defaultMaterial(){return this._defaultMaterial||(this._defaultMaterial=ne.DefaultMaterialFactory(this)),this._defaultMaterial}set defaultMaterial(e){this._defaultMaterial=e}set texturesEnabled(e){this._texturesEnabled!==e&&(this._texturesEnabled=e,this.markAllMaterialsAsDirty(1))}get texturesEnabled(){return this._texturesEnabled}set skeletonsEnabled(e){this._skeletonsEnabled!==e&&(this._skeletonsEnabled=e,this.markAllMaterialsAsDirty(8))}get skeletonsEnabled(){return this._skeletonsEnabled}get collisionCoordinator(){return this._collisionCoordinator||(this._collisionCoordinator=ne.CollisionCoordinatorFactory(),this._collisionCoordinator.init(this)),this._collisionCoordinator}get renderingManager(){return this._renderingManager}get frustumPlanes(){return this._frustumPlanes}_registerTransientComponents(){if(this._transientComponents.length>0){for(const e of this._transientComponents)e.register();this._transientComponents.length=0}}_addComponent(e){this._components.push(e),this._transientComponents.push(e);const t=e;t.addFromContainer&&t.serialize&&this._serializableComponents.push(t)}_getComponent(e){for(const t of this._components)if(t.name===e)return t;return null}getClassName(){return"Scene"}_getDefaultMeshCandidates(){return this._defaultMeshCandidates.data=this.meshes,this._defaultMeshCandidates.length=this.meshes.length,this._defaultMeshCandidates}_getDefaultSubMeshCandidates(e){return this._defaultSubMeshCandidates.data=e.subMeshes,this._defaultSubMeshCandidates.length=e.subMeshes.length,this._defaultSubMeshCandidates}setDefaultCandidateProviders(){this.getActiveMeshCandidates=this._getDefaultMeshCandidates.bind(this),this.getActiveSubMeshCandidates=this._getDefaultSubMeshCandidates.bind(this),this.getIntersectingSubMeshCandidates=this._getDefaultSubMeshCandidates.bind(this),this.getCollidingSubMeshCandidates=this._getDefaultSubMeshCandidates.bind(this)}get meshUnderPointer(){return this._inputManager.meshUnderPointer}get pointerX(){return this._inputManager.pointerX}set pointerX(e){this._inputManager.pointerX=e}get pointerY(){return this._inputManager.pointerY}set pointerY(e){this._inputManager.pointerY=e}getCachedMaterial(){return this._cachedMaterial}getCachedEffect(){return this._cachedEffect}getCachedVisibility(){return this._cachedVisibility}isCachedMaterialInvalid(e,t,i=1){return this._cachedEffect!==t||this._cachedMaterial!==e||this._cachedVisibility!==i}getEngine(){return this._engine}getTotalVertices(){return this._totalVertices.current}get totalVerticesPerfCounter(){return this._totalVertices}getActiveIndices(){return this._activeIndices.current}get totalActiveIndicesPerfCounter(){return this._activeIndices}getActiveParticles(){return this._activeParticles.current}get activeParticlesPerfCounter(){return this._activeParticles}getActiveBones(){return this._activeBones.current}get activeBonesPerfCounter(){return this._activeBones}getActiveMeshes(){return this._activeMeshes}getAnimationRatio(){return this._animationRatio!==void 0?this._animationRatio:1}getRenderId(){return this._renderId}getFrameId(){return this._frameId}incrementRenderId(){this._renderId++}_createUbo(){this.setSceneUniformBuffer(this.createSceneUniformBuffer())}simulatePointerMove(e,t){return this._inputManager.simulatePointerMove(e,t),this}simulatePointerDown(e,t){return this._inputManager.simulatePointerDown(e,t),this}simulatePointerUp(e,t,i){return this._inputManager.simulatePointerUp(e,t,i),this}isPointerCaptured(e=0){return this._inputManager.isPointerCaptured(e)}attachControl(e=!0,t=!0,i=!0){this._inputManager.attachControl(e,t,i)}detachControl(){this._inputManager.detachControl()}isReady(e=!0){if(this._isDisposed)return!1;let t;const i=this.getEngine();let s=!0;for(this._pendingData.length>0&&(s=!1),e&&(this._processedMaterials.reset(),this._materialsRenderTargets.reset()),t=0;t<this.meshes.length;t++){const r=this.meshes[t];if(!r.subMeshes||r.subMeshes.length===0)continue;if(!r.isReady(!0)){s=!1;continue}const n=r.hasThinInstances||r.getClassName()==="InstancedMesh"||r.getClassName()==="InstancedLinesMesh"||i.getCaps().instancedArrays&&r.instances.length>0;for(const o of this._isReadyForMeshStage)o.action(r,n)||(s=!1);if(!e)continue;const a=r.material||this.defaultMaterial;if(a)if(a._storeEffectOnSubMeshes)for(const o of r.subMeshes){const h=o.getMaterial();h&&h.hasRenderTargetTextures&&h.getRenderTargetTextures!=null&&this._processedMaterials.indexOf(h)===-1&&(this._processedMaterials.push(h),this._materialsRenderTargets.concatWithNoDuplicate(h.getRenderTargetTextures()))}else a.hasRenderTargetTextures&&a.getRenderTargetTextures!=null&&this._processedMaterials.indexOf(a)===-1&&(this._processedMaterials.push(a),this._materialsRenderTargets.concatWithNoDuplicate(a.getRenderTargetTextures()))}if(!s||!i.areAllEffectsReady())return!1;if(e){for(t=0;t<this._materialsRenderTargets.length;++t)if(!this._materialsRenderTargets.data[t].isReadyForRendering())return!1}for(t=0;t<this.geometries.length;t++)if(this.geometries[t].delayLoadState===2)return!1;if(this.activeCameras&&this.activeCameras.length>0){for(const r of this.activeCameras)if(!r.isReady(!0))return!1}else if(this.activeCamera&&!this.activeCamera.isReady(!0))return!1;for(const r of this.particleSystems)if(!r.isReady())return!1;return!0}resetCachedMaterial(){this._cachedMaterial=null,this._cachedEffect=null,this._cachedVisibility=null}registerBeforeRender(e){this.onBeforeRenderObservable.add(e)}unregisterBeforeRender(e){this.onBeforeRenderObservable.removeCallback(e)}registerAfterRender(e){this.onAfterRenderObservable.add(e)}unregisterAfterRender(e){this.onAfterRenderObservable.removeCallback(e)}_executeOnceBeforeRender(e){const t=()=>{e(),setTimeout(()=>{this.unregisterBeforeRender(t)})};this.registerBeforeRender(t)}executeOnceBeforeRender(e,t){t!==void 0?setTimeout(()=>{this._executeOnceBeforeRender(e)},t):this._executeOnceBeforeRender(e)}addPendingData(e){this._pendingData.push(e)}removePendingData(e){const t=this.isLoading,i=this._pendingData.indexOf(e);i!==-1&&this._pendingData.splice(i,1),t&&!this.isLoading&&this.onDataLoadedObservable.notifyObservers(this)}getWaitingItemsCount(){return this._pendingData.length}get isLoading(){return this._pendingData.length>0}executeWhenReady(e,t=!1){this.onReadyObservable.addOnce(e),this._executeWhenReadyTimeoutId===null&&this._checkIsReady(t)}whenReadyAsync(e=!1){return new Promise(t=>{this.executeWhenReady(()=>{t()},e)})}_checkIsReady(e=!1){if(this._registerTransientComponents(),this.isReady(e)){this.onReadyObservable.notifyObservers(this),this.onReadyObservable.clear(),this._executeWhenReadyTimeoutId=null;return}if(this._isDisposed){this.onReadyObservable.clear(),this._executeWhenReadyTimeoutId=null;return}this._executeWhenReadyTimeoutId=setTimeout(()=>{this.incrementRenderId(),this._checkIsReady(e)},100)}get animatables(){return this._activeAnimatables}resetLastAnimationTimeFrame(){this._animationTimeLast=ai.Now}getViewMatrix(){return this._viewMatrix}getProjectionMatrix(){return this._projectionMatrix}getTransformMatrix(){return this._transformMatrix}setTransformMatrix(e,t,i,s){!i&&!s&&this._multiviewSceneUbo&&(this._multiviewSceneUbo.dispose(),this._multiviewSceneUbo=null),!(this._viewUpdateFlag===e.updateFlag&&this._projectionUpdateFlag===t.updateFlag)&&(this._viewUpdateFlag=e.updateFlag,this._projectionUpdateFlag=t.updateFlag,this._viewMatrix=e,this._projectionMatrix=t,this._viewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix),this._frustumPlanes?Et.GetPlanesToRef(this._transformMatrix,this._frustumPlanes):this._frustumPlanes=Et.GetPlanes(this._transformMatrix),this._multiviewSceneUbo&&this._multiviewSceneUbo.useUbo?this._updateMultiviewUbo(i,s):this._sceneUbo.useUbo&&(this._sceneUbo.updateMatrix("viewProjection",this._transformMatrix),this._sceneUbo.updateMatrix("view",this._viewMatrix),this._sceneUbo.updateMatrix("projection",this._projectionMatrix)))}getSceneUniformBuffer(){return this._multiviewSceneUbo?this._multiviewSceneUbo:this._sceneUbo}createSceneUniformBuffer(e){const t=new V(this._engine,void 0,!1,e??"scene");return t.addUniform("viewProjection",16),t.addUniform("view",16),t.addUniform("projection",16),t.addUniform("vEyePosition",4),t}setSceneUniformBuffer(e){this._sceneUbo=e,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1}getUniqueId(){return Mr.UniqueId}addMesh(e,t=!1){this._blockEntityCollection||(this.meshes.push(e),e._resyncLightSources(),e.parent||e._addToSceneRootNodes(),this.onNewMeshAddedObservable.notifyObservers(e),t&&e.getChildMeshes().forEach(i=>{this.addMesh(i)}))}removeMesh(e,t=!1){const i=this.meshes.indexOf(e);return i!==-1&&(this.meshes[i]=this.meshes[this.meshes.length-1],this.meshes.pop(),e.parent||e._removeFromSceneRootNodes()),this._inputManager._invalidateMesh(e),this.onMeshRemovedObservable.notifyObservers(e),t&&e.getChildMeshes().forEach(s=>{this.removeMesh(s)}),i}addTransformNode(e){this._blockEntityCollection||e.getScene()===this&&e._indexInSceneTransformNodesArray!==-1||(e._indexInSceneTransformNodesArray=this.transformNodes.length,this.transformNodes.push(e),e.parent||e._addToSceneRootNodes(),this.onNewTransformNodeAddedObservable.notifyObservers(e))}removeTransformNode(e){const t=e._indexInSceneTransformNodesArray;if(t!==-1){if(t!==this.transformNodes.length-1){const i=this.transformNodes[this.transformNodes.length-1];this.transformNodes[t]=i,i._indexInSceneTransformNodesArray=t}e._indexInSceneTransformNodesArray=-1,this.transformNodes.pop(),e.parent||e._removeFromSceneRootNodes()}return this.onTransformNodeRemovedObservable.notifyObservers(e),t}removeSkeleton(e){const t=this.skeletons.indexOf(e);return t!==-1&&(this.skeletons.splice(t,1),this.onSkeletonRemovedObservable.notifyObservers(e),this._executeActiveContainerCleanup(this._activeSkeletons)),t}removeMorphTargetManager(e){const t=this.morphTargetManagers.indexOf(e);return t!==-1&&this.morphTargetManagers.splice(t,1),t}removeLight(e){const t=this.lights.indexOf(e);if(t!==-1){for(const i of this.meshes)i._removeLightSource(e,!1);this.lights.splice(t,1),this.sortLightsByPriority(),e.parent||e._removeFromSceneRootNodes()}return this.onLightRemovedObservable.notifyObservers(e),t}removeCamera(e){const t=this.cameras.indexOf(e);if(t!==-1&&(this.cameras.splice(t,1),e.parent||e._removeFromSceneRootNodes()),this.activeCameras){const i=this.activeCameras.indexOf(e);i!==-1&&this.activeCameras.splice(i,1)}return this.activeCamera===e&&(this.cameras.length>0?this.activeCamera=this.cameras[0]:this.activeCamera=null),this.onCameraRemovedObservable.notifyObservers(e),t}removeParticleSystem(e){const t=this.particleSystems.indexOf(e);return t!==-1&&(this.particleSystems.splice(t,1),this._executeActiveContainerCleanup(this._activeParticleSystems)),t}removeAnimation(e){const t=this.animations.indexOf(e);return t!==-1&&this.animations.splice(t,1),t}stopAnimation(e,t,i){}removeAnimationGroup(e){const t=this.animationGroups.indexOf(e);return t!==-1&&this.animationGroups.splice(t,1),t}removeMultiMaterial(e){const t=this.multiMaterials.indexOf(e);return t!==-1&&this.multiMaterials.splice(t,1),this.onMultiMaterialRemovedObservable.notifyObservers(e),t}removeMaterial(e){const t=e._indexInSceneMaterialArray;if(t!==-1&&t<this.materials.length){if(t!==this.materials.length-1){const i=this.materials[this.materials.length-1];this.materials[t]=i,i._indexInSceneMaterialArray=t}e._indexInSceneMaterialArray=-1,this.materials.pop()}return this.onMaterialRemovedObservable.notifyObservers(e),t}removeActionManager(e){const t=this.actionManagers.indexOf(e);return t!==-1&&this.actionManagers.splice(t,1),t}removeTexture(e){const t=this.textures.indexOf(e);return t!==-1&&this.textures.splice(t,1),this.onTextureRemovedObservable.notifyObservers(e),t}addLight(e){if(!this._blockEntityCollection){this.lights.push(e),this.sortLightsByPriority(),e.parent||e._addToSceneRootNodes();for(const t of this.meshes)t.lightSources.indexOf(e)===-1&&(t.lightSources.push(e),t._resyncLightSources());this.onNewLightAddedObservable.notifyObservers(e)}}sortLightsByPriority(){this.requireLightSorting&&this.lights.sort(Ee.CompareLightsPriority)}addCamera(e){this._blockEntityCollection||(this.cameras.push(e),this.onNewCameraAddedObservable.notifyObservers(e),e.parent||e._addToSceneRootNodes())}addSkeleton(e){this._blockEntityCollection||(this.skeletons.push(e),this.onNewSkeletonAddedObservable.notifyObservers(e))}addParticleSystem(e){this._blockEntityCollection||this.particleSystems.push(e)}addAnimation(e){this._blockEntityCollection||this.animations.push(e)}addAnimationGroup(e){this._blockEntityCollection||this.animationGroups.push(e)}addMultiMaterial(e){this._blockEntityCollection||(this.multiMaterials.push(e),this.onNewMultiMaterialAddedObservable.notifyObservers(e))}addMaterial(e){this._blockEntityCollection||e.getScene()===this&&e._indexInSceneMaterialArray!==-1||(e._indexInSceneMaterialArray=this.materials.length,this.materials.push(e),this.onNewMaterialAddedObservable.notifyObservers(e))}addMorphTargetManager(e){this._blockEntityCollection||this.morphTargetManagers.push(e)}addGeometry(e){this._blockEntityCollection||(this._geometriesByUniqueId&&(this._geometriesByUniqueId[e.uniqueId]=this.geometries.length),this.geometries.push(e))}addActionManager(e){this.actionManagers.push(e)}addTexture(e){this._blockEntityCollection||(this.textures.push(e),this.onNewTextureAddedObservable.notifyObservers(e))}switchActiveCamera(e,t=!0){this._engine.getInputElement()&&(this.activeCamera&&this.activeCamera.detachControl(),this.activeCamera=e,t&&e.attachControl())}setActiveCameraById(e){const t=this.getCameraById(e);return t?(this.activeCamera=t,t):null}setActiveCameraByName(e){const t=this.getCameraByName(e);return t?(this.activeCamera=t,t):null}getAnimationGroupByName(e){for(let t=0;t<this.animationGroups.length;t++)if(this.animationGroups[t].name===e)return this.animationGroups[t];return null}_getMaterial(e,t){for(let i=0;i<this.materials.length;i++){const s=this.materials[i];if(t(s))return s}if(e)for(let i=0;i<this.multiMaterials.length;i++){const s=this.multiMaterials[i];if(t(s))return s}return null}getMaterialByUniqueID(e,t=!1){return this._getMaterial(t,i=>i.uniqueId===e)}getMaterialById(e,t=!1){return this._getMaterial(t,i=>i.id===e)}getMaterialByName(e,t=!1){return this._getMaterial(t,i=>i.name===e)}getLastMaterialById(e,t=!1){for(let i=this.materials.length-1;i>=0;i--)if(this.materials[i].id===e)return this.materials[i];if(t){for(let i=this.multiMaterials.length-1;i>=0;i--)if(this.multiMaterials[i].id===e)return this.multiMaterials[i]}return null}getTextureByUniqueId(e){for(let t=0;t<this.textures.length;t++)if(this.textures[t].uniqueId===e)return this.textures[t];return null}getTextureByName(e){for(let t=0;t<this.textures.length;t++)if(this.textures[t].name===e)return this.textures[t];return null}getCameraById(e){for(let t=0;t<this.cameras.length;t++)if(this.cameras[t].id===e)return this.cameras[t];return null}getCameraByUniqueId(e){for(let t=0;t<this.cameras.length;t++)if(this.cameras[t].uniqueId===e)return this.cameras[t];return null}getCameraByName(e){for(let t=0;t<this.cameras.length;t++)if(this.cameras[t].name===e)return this.cameras[t];return null}getBoneById(e){for(let t=0;t<this.skeletons.length;t++){const i=this.skeletons[t];for(let s=0;s<i.bones.length;s++)if(i.bones[s].id===e)return i.bones[s]}return null}getBoneByName(e){for(let t=0;t<this.skeletons.length;t++){const i=this.skeletons[t];for(let s=0;s<i.bones.length;s++)if(i.bones[s].name===e)return i.bones[s]}return null}getLightByName(e){for(let t=0;t<this.lights.length;t++)if(this.lights[t].name===e)return this.lights[t];return null}getLightById(e){for(let t=0;t<this.lights.length;t++)if(this.lights[t].id===e)return this.lights[t];return null}getLightByUniqueId(e){for(let t=0;t<this.lights.length;t++)if(this.lights[t].uniqueId===e)return this.lights[t];return null}getParticleSystemById(e){for(let t=0;t<this.particleSystems.length;t++)if(this.particleSystems[t].id===e)return this.particleSystems[t];return null}getGeometryById(e){for(let t=0;t<this.geometries.length;t++)if(this.geometries[t].id===e)return this.geometries[t];return null}_getGeometryByUniqueId(e){if(this._geometriesByUniqueId){const t=this._geometriesByUniqueId[e];if(t!==void 0)return this.geometries[t]}else for(let t=0;t<this.geometries.length;t++)if(this.geometries[t].uniqueId===e)return this.geometries[t];return null}pushGeometry(e,t){return!t&&this._getGeometryByUniqueId(e.uniqueId)?!1:(this.addGeometry(e),this.onNewGeometryAddedObservable.notifyObservers(e),!0)}removeGeometry(e){let t;if(this._geometriesByUniqueId){if(t=this._geometriesByUniqueId[e.uniqueId],t===void 0)return!1}else if(t=this.geometries.indexOf(e),t<0)return!1;if(t!==this.geometries.length-1){const i=this.geometries[this.geometries.length-1];i&&(this.geometries[t]=i,this._geometriesByUniqueId&&(this._geometriesByUniqueId[i.uniqueId]=t))}return this._geometriesByUniqueId&&(this._geometriesByUniqueId[e.uniqueId]=void 0),this.geometries.pop(),this.onGeometryRemovedObservable.notifyObservers(e),!0}getGeometries(){return this.geometries}getMeshById(e){for(let t=0;t<this.meshes.length;t++)if(this.meshes[t].id===e)return this.meshes[t];return null}getMeshesById(e){return this.meshes.filter(function(t){return t.id===e})}getTransformNodeById(e){for(let t=0;t<this.transformNodes.length;t++)if(this.transformNodes[t].id===e)return this.transformNodes[t];return null}getTransformNodeByUniqueId(e){for(let t=0;t<this.transformNodes.length;t++)if(this.transformNodes[t].uniqueId===e)return this.transformNodes[t];return null}getTransformNodesById(e){return this.transformNodes.filter(function(t){return t.id===e})}getMeshByUniqueId(e){for(let t=0;t<this.meshes.length;t++)if(this.meshes[t].uniqueId===e)return this.meshes[t];return null}getLastMeshById(e){for(let t=this.meshes.length-1;t>=0;t--)if(this.meshes[t].id===e)return this.meshes[t];return null}getLastEntryById(e){let t;for(t=this.meshes.length-1;t>=0;t--)if(this.meshes[t].id===e)return this.meshes[t];for(t=this.transformNodes.length-1;t>=0;t--)if(this.transformNodes[t].id===e)return this.transformNodes[t];for(t=this.cameras.length-1;t>=0;t--)if(this.cameras[t].id===e)return this.cameras[t];for(t=this.lights.length-1;t>=0;t--)if(this.lights[t].id===e)return this.lights[t];return null}getNodeById(e){const t=this.getMeshById(e);if(t)return t;const i=this.getTransformNodeById(e);if(i)return i;const s=this.getLightById(e);if(s)return s;const r=this.getCameraById(e);if(r)return r;const n=this.getBoneById(e);return n||null}getNodeByName(e){const t=this.getMeshByName(e);if(t)return t;const i=this.getTransformNodeByName(e);if(i)return i;const s=this.getLightByName(e);if(s)return s;const r=this.getCameraByName(e);if(r)return r;const n=this.getBoneByName(e);return n||null}getMeshByName(e){for(let t=0;t<this.meshes.length;t++)if(this.meshes[t].name===e)return this.meshes[t];return null}getTransformNodeByName(e){for(let t=0;t<this.transformNodes.length;t++)if(this.transformNodes[t].name===e)return this.transformNodes[t];return null}getLastSkeletonById(e){for(let t=this.skeletons.length-1;t>=0;t--)if(this.skeletons[t].id===e)return this.skeletons[t];return null}getSkeletonByUniqueId(e){for(let t=0;t<this.skeletons.length;t++)if(this.skeletons[t].uniqueId===e)return this.skeletons[t];return null}getSkeletonById(e){for(let t=0;t<this.skeletons.length;t++)if(this.skeletons[t].id===e)return this.skeletons[t];return null}getSkeletonByName(e){for(let t=0;t<this.skeletons.length;t++)if(this.skeletons[t].name===e)return this.skeletons[t];return null}getMorphTargetManagerById(e){for(let t=0;t<this.morphTargetManagers.length;t++)if(this.morphTargetManagers[t].uniqueId===e)return this.morphTargetManagers[t];return null}getMorphTargetById(e){for(let t=0;t<this.morphTargetManagers.length;++t){const i=this.morphTargetManagers[t];for(let s=0;s<i.numTargets;++s){const r=i.getTarget(s);if(r.id===e)return r}}return null}getMorphTargetByName(e){for(let t=0;t<this.morphTargetManagers.length;++t){const i=this.morphTargetManagers[t];for(let s=0;s<i.numTargets;++s){const r=i.getTarget(s);if(r.name===e)return r}}return null}getPostProcessByName(e){for(let t=0;t<this.postProcesses.length;++t){const i=this.postProcesses[t];if(i.name===e)return i}return null}isActiveMesh(e){return this._activeMeshes.indexOf(e)!==-1}get uid(){return this._uid||(this._uid=H.RandomId()),this._uid}addExternalData(e,t){return this._externalData||(this._externalData=new cr),this._externalData.add(e,t)}getExternalData(e){return this._externalData?this._externalData.get(e):null}getOrAddExternalDataWithFactory(e,t){return this._externalData||(this._externalData=new cr),this._externalData.getOrAddWithFactory(e,t)}removeExternalData(e){return this._externalData.remove(e)}_evaluateSubMesh(e,t,i,s){if(s||e.isInFrustum(this._frustumPlanes)){for(const n of this._evaluateSubMeshStage)n.action(t,e);const r=e.getMaterial();r!=null&&(r.hasRenderTargetTextures&&r.getRenderTargetTextures!=null&&this._processedMaterials.indexOf(r)===-1&&(this._processedMaterials.push(r),this._materialsRenderTargets.concatWithNoDuplicate(r.getRenderTargetTextures())),this._renderingManager.dispatch(e,t,r))}}freeProcessedMaterials(){this._processedMaterials.dispose()}get blockfreeActiveMeshesAndRenderingGroups(){return this._preventFreeActiveMeshesAndRenderingGroups}set blockfreeActiveMeshesAndRenderingGroups(e){this._preventFreeActiveMeshesAndRenderingGroups!==e&&(e&&(this.freeActiveMeshes(),this.freeRenderingGroups()),this._preventFreeActiveMeshesAndRenderingGroups=e)}freeActiveMeshes(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._activeMeshes.dispose(),this.activeCamera&&this.activeCamera._activeMeshes&&this.activeCamera._activeMeshes.dispose(),this.activeCameras))for(let e=0;e<this.activeCameras.length;e++){const t=this.activeCameras[e];t&&t._activeMeshes&&t._activeMeshes.dispose()}}freeRenderingGroups(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._renderingManager&&this._renderingManager.freeRenderingGroups(),this.textures))for(let e=0;e<this.textures.length;e++){const t=this.textures[e];t&&t.renderList&&t.freeRenderingGroups()}}_isInIntermediateRendering(){return this._intermediateRendering}freezeActiveMeshes(e=!1,t,i,s=!0,r=!1){return this.executeWhenReady(()=>{if(!this.activeCamera){i&&i("No active camera found");return}if(this._frustumPlanes||this.updateTransformMatrix(),this._evaluateActiveMeshes(),this._activeMeshesFrozen=!0,this._activeMeshesFrozenButKeepClipping=r,this._skipEvaluateActiveMeshesCompletely=e,s)for(let n=0;n<this._activeMeshes.length;n++)this._activeMeshes.data[n]._freeze();t&&t()}),this}unfreezeActiveMeshes(){for(let e=0;e<this.meshes.length;e++){const t=this.meshes[e];t._internalAbstractMeshDataInfo&&(t._internalAbstractMeshDataInfo._isActive=!1)}for(let e=0;e<this._activeMeshes.length;e++)this._activeMeshes.data[e]._unFreeze();return this._activeMeshesFrozen=!1,this}_executeActiveContainerCleanup(e){!(this._engine.snapshotRendering&&this._engine.snapshotRenderingMode===1)&&this._activeMeshesFrozen&&this._activeMeshes.length||this.onBeforeRenderObservable.addOnce(()=>e.dispose())}_evaluateActiveMeshes(){var e;if(this._engine.snapshotRendering&&this._engine.snapshotRenderingMode===1){this._activeMeshes.length>0&&((e=this.activeCamera)===null||e===void 0||e._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset());return}if(this._activeMeshesFrozen&&this._activeMeshes.length){if(!this._skipEvaluateActiveMeshesCompletely){const s=this._activeMeshes.length;for(let r=0;r<s;r++)this._activeMeshes.data[r].computeWorldMatrix()}if(this._activeParticleSystems){const s=this._activeParticleSystems.length;for(let r=0;r<s;r++)this._activeParticleSystems.data[r].animate()}this._renderingManager.resetSprites();return}if(!this.activeCamera)return;this.onBeforeActiveMeshesEvaluationObservable.notifyObservers(this),this.activeCamera._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset(),this._materialsRenderTargets.reset();for(const s of this._beforeEvaluateActiveMeshStage)s.action();const t=this.getActiveMeshCandidates(),i=t.length;for(let s=0;s<i;s++){const r=t.data[s];if(r._internalAbstractMeshDataInfo._currentLODIsUpToDate=!1,r.isBlocked||(this._totalVertices.addCount(r.getTotalVertices(),!1),!r.isReady()||!r.isEnabled()||r.scaling.hasAZeroComponent))continue;r.computeWorldMatrix(),r.actionManager&&r.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(r);let n=this.customLODSelector?this.customLODSelector(r,this.activeCamera):r.getLOD(this.activeCamera);if(r._internalAbstractMeshDataInfo._currentLOD=n,r._internalAbstractMeshDataInfo._currentLODIsUpToDate=!0,n!=null&&(n!==r&&n.billboardMode!==0&&n.computeWorldMatrix(),r._preActivate(),r.isVisible&&r.visibility>0&&r.layerMask&this.activeCamera.layerMask&&(this._skipFrustumClipping||r.alwaysSelectAsActiveMesh||r.isInFrustum(this._frustumPlanes)))){this._activeMeshes.push(r),this.activeCamera._activeMeshes.push(r),n!==r&&n._activate(this._renderId,!1);for(const a of this._preActiveMeshStage)a.action(r);r._activate(this._renderId,!1)&&(r.isAnInstance?r._internalAbstractMeshDataInfo._actAsRegularMesh&&(n=r):n._internalAbstractMeshDataInfo._onlyForInstances=!1,n._internalAbstractMeshDataInfo._isActive=!0,this._activeMesh(r,n)),r._postActivate()}}if(this.particlesEnabled){this.onBeforeParticlesRenderingObservable.notifyObservers(this);for(let s=0;s<this.particleSystems.length;s++){const r=this.particleSystems[s];if(!r.isStarted()||!r.emitter)continue;const n=r.emitter;(!n.position||n.isEnabled())&&(this._activeParticleSystems.push(r),r.animate(),this._renderingManager.dispatchParticles(r))}this.onAfterParticlesRenderingObservable.notifyObservers(this)}}_activeMesh(e,t){this._skeletonsEnabled&&t.skeleton!==null&&t.skeleton!==void 0&&(this._activeSkeletons.pushNoDuplicate(t.skeleton)&&(t.skeleton.prepare(),this._activeBones.addCount(t.skeleton.bones.length,!1)),t.computeBonesUsingShaders||this._softwareSkinnedMeshes.pushNoDuplicate(t));let i=e.hasInstances||e.isAnInstance||this.dispatchAllSubMeshesOfActiveMeshes||this._skipFrustumClipping||t.alwaysSelectAsActiveMesh;if(t&&t.subMeshes&&t.subMeshes.length>0){const s=this.getActiveSubMeshCandidates(t),r=s.length;i=i||r===1;for(let n=0;n<r;n++){const a=s.data[n];this._evaluateSubMesh(a,t,e,i)}}}updateTransformMatrix(e){if(this.activeCamera)if(this.activeCamera._renderingMultiview){const t=this.activeCamera._rigCameras[0],i=this.activeCamera._rigCameras[1];this.setTransformMatrix(t.getViewMatrix(),t.getProjectionMatrix(e),i.getViewMatrix(),i.getProjectionMatrix(e))}else this.setTransformMatrix(this.activeCamera.getViewMatrix(),this.activeCamera.getProjectionMatrix(e))}_bindFrameBuffer(e,t=!0){e&&e._multiviewTexture?e._multiviewTexture._bindFrameBuffer():e&&e.outputRenderTarget?e.outputRenderTarget._bindFrameBuffer():this._engine._currentFrameBufferIsDefaultFrameBuffer()||this._engine.restoreDefaultFramebuffer(),t&&this._clearFrameBuffer(e)}_clearFrameBuffer(e){if(!(e&&e._multiviewTexture))if(e&&e.outputRenderTarget&&!e._renderingMultiview){const t=e.outputRenderTarget;t.onClearObservable.hasObservers()?t.onClearObservable.notifyObservers(this._engine):t.skipInitialClear||(this.autoClear&&this._engine.clear(t.clearColor||this.clearColor,!t._cleared,!0,!0),t._cleared=!0)}else this._defaultFrameBufferCleared?this._engine.clear(null,!1,!0,!0):(this._defaultFrameBufferCleared=!0,this._clear())}_renderForCamera(e,t,i=!0){var s,r,n;if(e&&e._skipRendering)return;const a=this._engine;if(this._activeCamera=e,!this.activeCamera)throw new Error("Active camera not set");if(a.setViewport(this.activeCamera.viewport),this.resetCachedMaterial(),this._renderId++,!this.prePass&&i){let h=!0;e._renderingMultiview&&e.outputRenderTarget&&(h=e.outputRenderTarget.skipInitialClear,this.autoClear&&(e.outputRenderTarget.skipInitialClear=!1)),this._bindFrameBuffer(this._activeCamera),e._renderingMultiview&&e.outputRenderTarget&&(e.outputRenderTarget.skipInitialClear=h)}this.updateTransformMatrix(),this.onBeforeCameraRenderObservable.notifyObservers(this.activeCamera),this._evaluateActiveMeshes();for(let h=0;h<this._softwareSkinnedMeshes.length;h++){const l=this._softwareSkinnedMeshes.data[h];l.applySkeleton(l.skeleton)}this.onBeforeRenderTargetsRenderObservable.notifyObservers(this),this._renderTargets.concatWithNoDuplicate(this._materialsRenderTargets),e.customRenderTargets&&e.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(e.customRenderTargets),t&&t.customRenderTargets&&t.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(t.customRenderTargets),this.environmentTexture&&this.environmentTexture.isRenderTarget&&this._renderTargets.pushNoDuplicate(this.environmentTexture);for(const h of this._gatherActiveCameraRenderTargetsStage)h.action(this._renderTargets);let o=!1;if(this.renderTargetsEnabled){if(this._intermediateRendering=!0,this._renderTargets.length>0){H.StartPerformanceCounter("Render targets",this._renderTargets.length>0);for(let h=0;h<this._renderTargets.length;h++){const l=this._renderTargets.data[h];if(l._shouldRender()){this._renderId++;const u=l.activeCamera&&l.activeCamera!==this.activeCamera;l.render(u,this.dumpNextRenderTargets),o=!0}}H.EndPerformanceCounter("Render targets",this._renderTargets.length>0),this._renderId++}for(const h of this._cameraDrawRenderTargetStage)o=h.action(this.activeCamera)||o;this._intermediateRendering=!1}this._engine.currentRenderPassId=(n=(r=(s=e.outputRenderTarget)===null||s===void 0?void 0:s.renderPassId)!==null&&r!==void 0?r:e.renderPassId)!==null&&n!==void 0?n:0,o&&!this.prePass&&this._bindFrameBuffer(this._activeCamera,!1),this.onAfterRenderTargetsRenderObservable.notifyObservers(this),this.postProcessManager&&!e._multiviewTexture&&!this.prePass&&this.postProcessManager._prepareFrame();for(const h of this._beforeCameraDrawStage)h.action(this.activeCamera);this.onBeforeDrawPhaseObservable.notifyObservers(this),a.snapshotRendering&&a.snapshotRenderingMode===1&&this.finalizeSceneUbo(),this._renderingManager.render(null,null,!0,!0),this.onAfterDrawPhaseObservable.notifyObservers(this);for(const h of this._afterCameraDrawStage)h.action(this.activeCamera);if(this.postProcessManager&&!e._multiviewTexture){const h=e.outputRenderTarget?e.outputRenderTarget.renderTarget:void 0;this.postProcessManager._finalizeFrame(e.isIntermediate,h)}for(const h of this._afterCameraPostProcessStage)h.action(this.activeCamera);this._renderTargets.reset(),this.onAfterCameraRenderObservable.notifyObservers(this.activeCamera)}_processSubCameras(e,t=!0){if(e.cameraRigMode===0||e._renderingMultiview){e._renderingMultiview&&!this._multiviewSceneUbo&&this._createMultiviewUbo(),this._renderForCamera(e,void 0,t),this.onAfterRenderCameraObservable.notifyObservers(e);return}if(e._useMultiviewToSingleView)this._renderMultiviewToSingleView(e);else{this.onBeforeCameraRenderObservable.notifyObservers(e);for(let i=0;i<e._rigCameras.length;i++)this._renderForCamera(e._rigCameras[i],e)}this._activeCamera=e,this.updateTransformMatrix(),this.onAfterRenderCameraObservable.notifyObservers(e)}_checkIntersections(){for(let e=0;e<this._meshesForIntersections.length;e++){const t=this._meshesForIntersections.data[e];if(t.actionManager)for(let i=0;t.actionManager&&i<t.actionManager.actions.length;i++){const s=t.actionManager.actions[i];if(s.trigger===12||s.trigger===13){const r=s.getTriggerParameter(),n=r.mesh?r.mesh:r,a=n.intersectsMesh(t,r.usePreciseIntersection),o=t._intersectionsInProgress.indexOf(n);a&&o===-1?s.trigger===12?(s._executeCurrent(Ve.CreateNew(t,void 0,n)),t._intersectionsInProgress.push(n)):s.trigger===13&&t._intersectionsInProgress.push(n):!a&&o>-1&&(s.trigger===13&&s._executeCurrent(Ve.CreateNew(t,void 0,n)),(!t.actionManager.hasSpecificTrigger(13,h=>{const l=h.mesh?h.mesh:h;return n===l})||s.trigger===13)&&t._intersectionsInProgress.splice(o,1))}}}}_advancePhysicsEngineStep(e){}_animate(){}animate(){if(this._engine.isDeterministicLockStep()){let e=Math.max(ne.MinDeltaTime,Math.min(this._engine.getDeltaTime(),ne.MaxDeltaTime))+this._timeAccumulator;const t=this._engine.getTimeStep(),i=1e3/t/1e3;let s=0;const r=this._engine.getLockstepMaxSteps();let n=Math.floor(e/t);for(n=Math.min(n,r);e>0&&s<n;)this.onBeforeStepObservable.notifyObservers(this),this._animationRatio=t*i,this._animate(),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(t),this.onAfterStepObservable.notifyObservers(this),this._currentStepId++,s++,e-=t;this._timeAccumulator=e<0?0:e}else{const e=this.useConstantAnimationDeltaTime?16:Math.max(ne.MinDeltaTime,Math.min(this._engine.getDeltaTime(),ne.MaxDeltaTime));this._animationRatio=e*(60/1e3),this._animate(),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(e)}}_clear(){(this.autoClearDepthAndStencil||this.autoClear)&&this._engine.clear(this.clearColor,this.autoClear||this.forceWireframe||this.forcePointsCloud,this.autoClearDepthAndStencil,this.autoClearDepthAndStencil)}_checkCameraRenderTarget(e){var t;if(e!=null&&e.outputRenderTarget&&!(e!=null&&e.isRigCamera)&&(e.outputRenderTarget._cleared=!1),!((t=e==null?void 0:e.rigCameras)===null||t===void 0)&&t.length)for(let i=0;i<e.rigCameras.length;++i){const s=e.rigCameras[i].outputRenderTarget;s&&(s._cleared=!1)}}resetDrawCache(e){if(this.meshes)for(const t of this.meshes)t.resetDrawCache(e)}render(e=!0,t=!1){var i,s,r;if(this.isDisposed)return;this.onReadyObservable.hasObservers()&&this._executeWhenReadyTimeoutId===null&&this._checkIsReady(),this._frameId++,this._defaultFrameBufferCleared=!1,this._checkCameraRenderTarget(this.activeCamera),!((i=this.activeCameras)===null||i===void 0)&&i.length&&this.activeCameras.forEach(this._checkCameraRenderTarget),this._registerTransientComponents(),this._activeParticles.fetchNewFrame(),this._totalVertices.fetchNewFrame(),this._activeIndices.fetchNewFrame(),this._activeBones.fetchNewFrame(),this._meshesForIntersections.reset(),this.resetCachedMaterial(),this.onBeforeAnimationsObservable.notifyObservers(this),this.actionManager&&this.actionManager.processTrigger(11),t||this.animate();for(const o of this._beforeCameraUpdateStage)o.action();if(e){if(this.activeCameras&&this.activeCameras.length>0)for(let o=0;o<this.activeCameras.length;o++){const h=this.activeCameras[o];if(h.update(),h.cameraRigMode!==0)for(let l=0;l<h._rigCameras.length;l++)h._rigCameras[l].update()}else if(this.activeCamera&&(this.activeCamera.update(),this.activeCamera.cameraRigMode!==0))for(let o=0;o<this.activeCamera._rigCameras.length;o++)this.activeCamera._rigCameras[o].update()}this.onBeforeRenderObservable.notifyObservers(this);const n=this.getEngine();this.onBeforeRenderTargetsRenderObservable.notifyObservers(this);const a=!((s=this.activeCameras)===null||s===void 0)&&s.length?this.activeCameras[0]:this.activeCamera;if(this.renderTargetsEnabled){H.StartPerformanceCounter("Custom render targets",this.customRenderTargets.length>0),this._intermediateRendering=!0;for(let o=0;o<this.customRenderTargets.length;o++){const h=this.customRenderTargets[o];if(h._shouldRender()){if(this._renderId++,this.activeCamera=h.activeCamera||this.activeCamera,!this.activeCamera)throw new Error("Active camera not set");n.setViewport(this.activeCamera.viewport),this.updateTransformMatrix(),h.render(a!==this.activeCamera,this.dumpNextRenderTargets)}}H.EndPerformanceCounter("Custom render targets",this.customRenderTargets.length>0),this._intermediateRendering=!1,this._renderId++}this._engine.currentRenderPassId=(r=a==null?void 0:a.renderPassId)!==null&&r!==void 0?r:0,this.activeCamera=a,this._activeCamera&&this._activeCamera.cameraRigMode!==22&&!this.prePass&&this._bindFrameBuffer(this._activeCamera,!1),this.onAfterRenderTargetsRenderObservable.notifyObservers(this);for(const o of this._beforeClearStage)o.action();this._clearFrameBuffer(this.activeCamera);for(const o of this._gatherRenderTargetsStage)o.action(this._renderTargets);if(this.activeCameras&&this.activeCameras.length>0)for(let o=0;o<this.activeCameras.length;o++)this._processSubCameras(this.activeCameras[o],o>0);else{if(!this.activeCamera)throw new Error("No camera defined");this._processSubCameras(this.activeCamera,!!this.activeCamera.outputRenderTarget)}this._checkIntersections();for(const o of this._afterRenderStage)o.action();if(this.afterRender&&this.afterRender(),this.onAfterRenderObservable.notifyObservers(this),this._toBeDisposed.length){for(let o=0;o<this._toBeDisposed.length;o++){const h=this._toBeDisposed[o];h&&h.dispose()}this._toBeDisposed.length=0}this.dumpNextRenderTargets&&(this.dumpNextRenderTargets=!1),this._activeBones.addCount(0,!0),this._activeIndices.addCount(0,!0),this._activeParticles.addCount(0,!0),this._engine.restoreDefaultFramebuffer()}freezeMaterials(){for(let e=0;e<this.materials.length;e++)this.materials[e].freeze()}unfreezeMaterials(){for(let e=0;e<this.materials.length;e++)this.materials[e].unfreeze()}dispose(){if(this.isDisposed)return;this.beforeRender=null,this.afterRender=null,this.metadata=null,this.skeletons.length=0,this.morphTargetManagers.length=0,this._transientComponents.length=0,this._isReadyForMeshStage.clear(),this._beforeEvaluateActiveMeshStage.clear(),this._evaluateSubMeshStage.clear(),this._preActiveMeshStage.clear(),this._cameraDrawRenderTargetStage.clear(),this._beforeCameraDrawStage.clear(),this._beforeRenderTargetDrawStage.clear(),this._beforeRenderingGroupDrawStage.clear(),this._beforeRenderingMeshStage.clear(),this._afterRenderingMeshStage.clear(),this._afterRenderingGroupDrawStage.clear(),this._afterCameraDrawStage.clear(),this._afterRenderTargetDrawStage.clear(),this._afterRenderStage.clear(),this._beforeCameraUpdateStage.clear(),this._beforeClearStage.clear(),this._gatherRenderTargetsStage.clear(),this._gatherActiveCameraRenderTargetsStage.clear(),this._pointerMoveStage.clear(),this._pointerDownStage.clear(),this._pointerUpStage.clear(),this.importedMeshesFiles=new Array,this.stopAllAnimations&&this.stopAllAnimations(),this.resetCachedMaterial(),this.activeCamera&&(this.activeCamera._activeMeshes.dispose(),this.activeCamera=null),this.activeCameras=null,this._activeMeshes.dispose(),this._renderingManager.dispose(),this._processedMaterials.dispose(),this._activeParticleSystems.dispose(),this._activeSkeletons.dispose(),this._softwareSkinnedMeshes.dispose(),this._renderTargets.dispose(),this._materialsRenderTargets.dispose(),this._registeredForLateAnimationBindings.dispose(),this._meshesForIntersections.dispose(),this._toBeDisposed.length=0;const e=this._activeRequests.slice();for(const r of e)r.abort();this._activeRequests.length=0;try{this.onDisposeObservable.notifyObservers(this)}catch(r){console.error("An error occurred while calling onDisposeObservable!",r)}if(this.onDisposeObservable.clear(),this.onBeforeRenderObservable.clear(),this.onAfterRenderObservable.clear(),this.onBeforeRenderTargetsRenderObservable.clear(),this.onAfterRenderTargetsRenderObservable.clear(),this.onAfterStepObservable.clear(),this.onBeforeStepObservable.clear(),this.onBeforeActiveMeshesEvaluationObservable.clear(),this.onAfterActiveMeshesEvaluationObservable.clear(),this.onBeforeParticlesRenderingObservable.clear(),this.onAfterParticlesRenderingObservable.clear(),this.onBeforeDrawPhaseObservable.clear(),this.onAfterDrawPhaseObservable.clear(),this.onBeforeAnimationsObservable.clear(),this.onAfterAnimationsObservable.clear(),this.onDataLoadedObservable.clear(),this.onBeforeRenderingGroupObservable.clear(),this.onAfterRenderingGroupObservable.clear(),this.onMeshImportedObservable.clear(),this.onBeforeCameraRenderObservable.clear(),this.onAfterCameraRenderObservable.clear(),this.onReadyObservable.clear(),this.onNewCameraAddedObservable.clear(),this.onCameraRemovedObservable.clear(),this.onNewLightAddedObservable.clear(),this.onLightRemovedObservable.clear(),this.onNewGeometryAddedObservable.clear(),this.onGeometryRemovedObservable.clear(),this.onNewTransformNodeAddedObservable.clear(),this.onTransformNodeRemovedObservable.clear(),this.onNewMeshAddedObservable.clear(),this.onMeshRemovedObservable.clear(),this.onNewSkeletonAddedObservable.clear(),this.onSkeletonRemovedObservable.clear(),this.onNewMaterialAddedObservable.clear(),this.onNewMultiMaterialAddedObservable.clear(),this.onMaterialRemovedObservable.clear(),this.onMultiMaterialRemovedObservable.clear(),this.onNewTextureAddedObservable.clear(),this.onTextureRemovedObservable.clear(),this.onPrePointerObservable.clear(),this.onPointerObservable.clear(),this.onPreKeyboardObservable.clear(),this.onKeyboardObservable.clear(),this.onActiveCameraChanged.clear(),this.detachControl(),this._engine.getInputElement())for(let r=0;r<this.cameras.length;r++)this.cameras[r].detachControl();this._disposeList(this.animationGroups),this._disposeList(this.lights),this._disposeList(this.meshes,r=>r.dispose(!0)),this._disposeList(this.transformNodes,r=>r.dispose(!0));const i=this.cameras;this._disposeList(i),this._defaultMaterial&&this._defaultMaterial.dispose(),this._disposeList(this.multiMaterials),this._disposeList(this.materials),this._disposeList(this.particleSystems),this._disposeList(this.postProcesses),this._disposeList(this.textures),this._disposeList(this.morphTargetManagers),this._sceneUbo.dispose(),this._multiviewSceneUbo&&this._multiviewSceneUbo.dispose(),this.postProcessManager.dispose(),this._disposeList(this._components);let s=this._engine.scenes.indexOf(this);s>-1&&this._engine.scenes.splice(s,1),fe._LastCreatedScene===this&&(this._engine.scenes.length>0?fe._LastCreatedScene=this._engine.scenes[this._engine.scenes.length-1]:fe._LastCreatedScene=null),s=this._engine._virtualScenes.indexOf(this),s>-1&&this._engine._virtualScenes.splice(s,1),this._engine.wipeCaches(!0),this._isDisposed=!0}_disposeList(e,t){const i=e.slice(0);t=t??(s=>s.dispose());for(const s of i)t(s);e.length=0}get isDisposed(){return this._isDisposed}clearCachedVertexData(){for(let e=0;e<this.meshes.length;e++){const i=this.meshes[e].geometry;i&&i.clearCachedData()}}cleanCachedTextureBuffer(){for(const e of this.textures)e._buffer&&(e._buffer=null)}getWorldExtends(e){const t=new p(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),i=new p(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return e=e||(()=>!0),this.meshes.filter(e).forEach(s=>{if(s.computeWorldMatrix(!0),!s.subMeshes||s.subMeshes.length===0||s.infiniteDistance)return;const r=s.getBoundingInfo(),n=r.boundingBox.minimumWorld,a=r.boundingBox.maximumWorld;p.CheckExtends(n,t,i),p.CheckExtends(a,t,i)}),{min:t,max:i}}createPickingRay(e,t,i,s,r=!1){throw $("Ray")}createPickingRayToRef(e,t,i,s,r,n=!1,a=!1){throw $("Ray")}createPickingRayInCameraSpace(e,t,i){throw $("Ray")}createPickingRayInCameraSpaceToRef(e,t,i,s){throw $("Ray")}get _pickingAvailable(){return!1}pick(e,t,i,s,r,n){return new Ut}pickWithBoundingInfo(e,t,i,s,r){return new Ut}pickWithRay(e,t,i,s){throw $("Ray")}multiPick(e,t,i,s,r){throw $("Ray")}multiPickWithRay(e,t,i){throw $("Ray")}setPointerOverMesh(e,t,i){this._inputManager.setPointerOverMesh(e,t,i)}getPointerOverMesh(){return this._inputManager.getPointerOverMesh()}_rebuildGeometries(){for(const e of this.geometries)e._rebuild();for(const e of this.meshes)e._rebuild();this.postProcessManager&&this.postProcessManager._rebuild();for(const e of this._components)e.rebuild();for(const e of this.particleSystems)e.rebuild();if(this.spriteManagers)for(const e of this.spriteManagers)e.rebuild()}_rebuildTextures(){for(const e of this.textures)e._rebuild();this.markAllMaterialsAsDirty(1)}_getByTags(e,t,i){if(t===void 0)return e;const s=[];i=i||(r=>{});for(const r in e){const n=e[r];ge&&ge.MatchesQuery(n,t)&&(s.push(n),i(n))}return s}getMeshesByTags(e,t){return this._getByTags(this.meshes,e,t)}getCamerasByTags(e,t){return this._getByTags(this.cameras,e,t)}getLightsByTags(e,t){return this._getByTags(this.lights,e,t)}getMaterialByTags(e,t){return this._getByTags(this.materials,e,t).concat(this._getByTags(this.multiMaterials,e,t))}getTransformNodesByTags(e,t){return this._getByTags(this.transformNodes,e,t)}setRenderingOrder(e,t=null,i=null,s=null){this._renderingManager.setRenderingOrder(e,t,i,s)}setRenderingAutoClearDepthStencil(e,t,i=!0,s=!0){this._renderingManager.setRenderingAutoClearDepthStencil(e,t,i,s)}getAutoClearDepthStencilSetup(e){return this._renderingManager.getAutoClearDepthStencilSetup(e)}get blockMaterialDirtyMechanism(){return this._blockMaterialDirtyMechanism}set blockMaterialDirtyMechanism(e){this._blockMaterialDirtyMechanism!==e&&(this._blockMaterialDirtyMechanism=e,e||this.markAllMaterialsAsDirty(63))}markAllMaterialsAsDirty(e,t){if(!this._blockMaterialDirtyMechanism)for(const i of this.materials)t&&!t(i)||i.markAsDirty(e)}_loadFile(e,t,i,s,r,n,a){const o=jt(e,t,i,s?this.offlineProvider:void 0,r,n,a);return this._activeRequests.push(o),o.onCompleteObservable.add(h=>{this._activeRequests.splice(this._activeRequests.indexOf(h),1)}),o}_loadFileAsync(e,t,i,s,r){return new Promise((n,a)=>{this._loadFile(e,o=>{n(o)},t,i,s,(o,h)=>{a(h)},r)})}_requestFile(e,t,i,s,r,n,a){const o=xs(e,t,i,s?this.offlineProvider:void 0,r,n,a);return this._activeRequests.push(o),o.onCompleteObservable.add(h=>{this._activeRequests.splice(this._activeRequests.indexOf(h),1)}),o}_requestFileAsync(e,t,i,s,r){return new Promise((n,a)=>{this._requestFile(e,o=>{n(o)},t,i,s,o=>{a(o)},r)})}_readFile(e,t,i,s,r){const n=wi(e,t,i,s,r);return this._activeRequests.push(n),n.onCompleteObservable.add(a=>{this._activeRequests.splice(this._activeRequests.indexOf(a),1)}),n}_readFileAsync(e,t,i){return new Promise((s,r)=>{this._readFile(e,n=>{s(n)},t,i,n=>{r(n)})})}getPerfCollector(){throw $("performanceViewerSceneExtension")}}ne.FOGMODE_NONE=0,ne.FOGMODE_EXP=1,ne.FOGMODE_EXP2=2,ne.FOGMODE_LINEAR=3,ne.MinDeltaTime=1,ne.MaxDeltaTime=1e3,ne.prototype.setActiveCameraByID=function(c){return this.setActiveCameraById(c)},ne.prototype.getLastMaterialByID=function(c){return this.getLastMaterialById(c)},ne.prototype.getMaterialByID=function(c){return this.getMaterialById(c)},ne.prototype.getTextureByUniqueID=function(c){return this.getTextureByUniqueId(c)},ne.prototype.getCameraByID=function(c){return this.getCameraById(c)},ne.prototype.getCameraByUniqueID=function(c){return this.getCameraByUniqueId(c)},ne.prototype.getBoneByID=function(c){return this.getBoneById(c)},ne.prototype.getLightByID=function(c){return this.getLightById(c)},ne.prototype.getLightByUniqueID=function(c){return this.getLightByUniqueId(c)},ne.prototype.getParticleSystemByID=function(c){return this.getParticleSystemById(c)},ne.prototype.getGeometryByID=function(c){return this.getGeometryById(c)},ne.prototype.getMeshByID=function(c){return this.getMeshById(c)},ne.prototype.getMeshesByID=function(c){return this.getMeshesById(c)},ne.prototype.getTransformNodeByID=function(c){return this.getTransformNodeById(c)},ne.prototype.getTransformNodeByUniqueID=function(c){return this.getTransformNodeByUniqueId(c)},ne.prototype.getTransformNodesByID=function(c){return this.getTransformNodesById(c)},ne.prototype.getMeshByUniqueID=function(c){return this.getMeshByUniqueId(c)},ne.prototype.getLastMeshByID=function(c){return this.getLastMeshById(c)},ne.prototype.getLastEntryByID=function(c){return this.getLastEntryById(c)},ne.prototype.getNodeByID=function(c){return this.getNodeById(c)},ne.prototype.getLastSkeletonByID=function(c){return this.getLastSkeletonById(c)};function Is(c,e,t){try{const i=c.next();i.done?e(i):i.value?i.value.then(()=>{i.value=void 0,e(i)},t):e(i)}catch(i){t(i)}}function wn(c=25){let e;return(t,i,s)=>{const r=performance.now();e===void 0||r-e>c?(e=r,setTimeout(()=>{Is(t,i,s)},0)):Is(t,i,s)}}function Ar(c,e,t,i,s){const r=()=>{let n;const a=o=>{o.done?t(o.value):n===void 0?n=!0:r()};do n=void 0,!s||!s.aborted?e(c,a,i):i(new Error("Aborted")),n===void 0&&(n=!1);while(n)};r()}function Ps(c,e){let t;return Ar(c,Is,i=>t=i,i=>{throw i},e),t}function On(c,e,t){return new Promise((i,s)=>{Ar(c,e,i,s,t)})}function Ln(c,e){return(...t)=>Ps(c(...t),e)}class Nn{constructor(){this._doNotSerialize=!1,this._isDisposed=!1,this._sceneRootNodesIndex=-1,this._isEnabled=!0,this._isParentEnabled=!0,this._isReady=!0,this._onEnabledStateChangedObservable=new F,this._onClonedObservable=new F}}class ze{constructor(e,t=null){this._isDirty=!1,this._nodeDataStorage=new Nn,this.state="",this.metadata=null,this.reservedDataStore=null,this._accessibilityTag=null,this.onAccessibilityTagChangedObservable=new F,this._parentContainer=null,this.animations=new Array,this._ranges={},this.onReady=null,this._currentRenderId=-1,this._parentUpdateId=-1,this._childUpdateId=-1,this._waitingParentId=null,this._waitingParentInstanceIndex=null,this._waitingParsedUniqueId=null,this._cache={},this._parentNode=null,this._children=null,this._worldMatrix=x.Identity(),this._worldMatrixDeterminant=0,this._worldMatrixDeterminantIsDirty=!0,this._animationPropertiesOverride=null,this._isNode=!0,this.onDisposeObservable=new F,this._onDisposeObserver=null,this._behaviors=new Array,this.name=e,this.id=e,this._scene=t||fe.LastCreatedScene,this.uniqueId=this._scene.getUniqueId(),this._initCache()}static AddNodeConstructor(e,t){this._NodeConstructors[e]=t}static Construct(e,t,i,s){const r=this._NodeConstructors[e];return r?r(t,i,s):null}set accessibilityTag(e){this._accessibilityTag=e,this.onAccessibilityTagChangedObservable.notifyObservers(e)}get accessibilityTag(){return this._accessibilityTag}get doNotSerialize(){return this._nodeDataStorage._doNotSerialize?!0:this._parentNode?this._parentNode.doNotSerialize:!1}set doNotSerialize(e){this._nodeDataStorage._doNotSerialize=e}isDisposed(){return this._nodeDataStorage._isDisposed}set parent(e){if(this._parentNode===e)return;const t=this._parentNode;if(this._parentNode&&this._parentNode._children!==void 0&&this._parentNode._children!==null){const i=this._parentNode._children.indexOf(this);i!==-1&&this._parentNode._children.splice(i,1),!e&&!this._nodeDataStorage._isDisposed&&this._addToSceneRootNodes()}this._parentNode=e,this._parentNode&&((this._parentNode._children===void 0||this._parentNode._children===null)&&(this._parentNode._children=new Array),this._parentNode._children.push(this),t||this._removeFromSceneRootNodes()),this._syncParentEnabledState()}get parent(){return this._parentNode}_serializeAsParent(e){e.parentId=this.uniqueId}_addToSceneRootNodes(){this._nodeDataStorage._sceneRootNodesIndex===-1&&(this._nodeDataStorage._sceneRootNodesIndex=this._scene.rootNodes.length,this._scene.rootNodes.push(this))}_removeFromSceneRootNodes(){if(this._nodeDataStorage._sceneRootNodesIndex!==-1){const e=this._scene.rootNodes,t=e.length-1;e[this._nodeDataStorage._sceneRootNodesIndex]=e[t],e[this._nodeDataStorage._sceneRootNodesIndex]._nodeDataStorage._sceneRootNodesIndex=this._nodeDataStorage._sceneRootNodesIndex,this._scene.rootNodes.pop(),this._nodeDataStorage._sceneRootNodesIndex=-1}}get animationPropertiesOverride(){return this._animationPropertiesOverride?this._animationPropertiesOverride:this._scene.animationPropertiesOverride}set animationPropertiesOverride(e){this._animationPropertiesOverride=e}getClassName(){return"Node"}set onDispose(e){this._onDisposeObserver&&this.onDisposeObservable.remove(this._onDisposeObserver),this._onDisposeObserver=this.onDisposeObservable.add(e)}get onEnabledStateChangedObservable(){return this._nodeDataStorage._onEnabledStateChangedObservable}get onClonedObservable(){return this._nodeDataStorage._onClonedObservable}getScene(){return this._scene}getEngine(){return this._scene.getEngine()}addBehavior(e,t=!1){return this._behaviors.indexOf(e)!==-1?this:(e.init(),this._scene.isLoading&&!t?this._scene.onDataLoadedObservable.addOnce(()=>{e.attach(this)}):e.attach(this),this._behaviors.push(e),this)}removeBehavior(e){const t=this._behaviors.indexOf(e);return t===-1?this:(this._behaviors[t].detach(),this._behaviors.splice(t,1),this)}get behaviors(){return this._behaviors}getBehaviorByName(e){for(const t of this._behaviors)if(t.name===e)return t;return null}getWorldMatrix(){return this._currentRenderId!==this._scene.getRenderId()&&this.computeWorldMatrix(),this._worldMatrix}_getWorldMatrixDeterminant(){return this._worldMatrixDeterminantIsDirty&&(this._worldMatrixDeterminantIsDirty=!1,this._worldMatrixDeterminant=this._worldMatrix.determinant()),this._worldMatrixDeterminant}get worldMatrixFromCache(){return this._worldMatrix}_initCache(){this._cache={},this._cache.parent=void 0}updateCache(e){!e&&this.isSynchronized()||(this._cache.parent=this.parent,this._updateCache())}_getActionManagerForTrigger(e,t=!0){return this.parent?this.parent._getActionManagerForTrigger(e,!1):null}_updateCache(e){}_isSynchronized(){return!0}_markSyncedWithParent(){this._parentNode&&(this._parentUpdateId=this._parentNode._childUpdateId)}isSynchronizedWithParent(){return this._parentNode?this._parentNode._isDirty||this._parentUpdateId!==this._parentNode._childUpdateId?!1:this._parentNode.isSynchronized():!0}isSynchronized(){return this._cache.parent!==this._parentNode?(this._cache.parent=this._parentNode,!1):this._parentNode&&!this.isSynchronizedWithParent()?!1:this._isSynchronized()}isReady(e=!1){return this._nodeDataStorage._isReady}markAsDirty(e){return this._currentRenderId=Number.MAX_VALUE,this._isDirty=!0,this}isEnabled(e=!0){return e===!1?this._nodeDataStorage._isEnabled:this._nodeDataStorage._isEnabled?this._nodeDataStorage._isParentEnabled:!1}_syncParentEnabledState(){this._nodeDataStorage._isParentEnabled=this._parentNode?this._parentNode.isEnabled():!0,this._children&&this._children.forEach(e=>{e._syncParentEnabledState()})}setEnabled(e){this._nodeDataStorage._isEnabled!==e&&(this._nodeDataStorage._isEnabled=e,this._syncParentEnabledState(),this._nodeDataStorage._onEnabledStateChangedObservable.notifyObservers(e))}isDescendantOf(e){return this.parent?this.parent===e?!0:this.parent.isDescendantOf(e):!1}_getDescendants(e,t=!1,i){if(this._children)for(let s=0;s<this._children.length;s++){const r=this._children[s];(!i||i(r))&&e.push(r),t||r._getDescendants(e,!1,i)}}getDescendants(e,t){const i=new Array;return this._getDescendants(i,e,t),i}getChildMeshes(e,t){const i=[];return this._getDescendants(i,e,s=>(!t||t(s))&&s.cullingStrategy!==void 0),i}getChildren(e,t=!0){return this.getDescendants(t,e)}_setReady(e){if(e!==this._nodeDataStorage._isReady){if(!e){this._nodeDataStorage._isReady=!1;return}this.onReady&&this.onReady(this),this._nodeDataStorage._isReady=!0}}getAnimationByName(e){for(let t=0;t<this.animations.length;t++){const i=this.animations[t];if(i.name===e)return i}return null}createAnimationRange(e,t,i){if(!this._ranges[e]){this._ranges[e]=ze._AnimationRangeFactory(e,t,i);for(let s=0,r=this.animations.length;s<r;s++)this.animations[s]&&this.animations[s].createRange(e,t,i)}}deleteAnimationRange(e,t=!0){for(let i=0,s=this.animations.length;i<s;i++)this.animations[i]&&this.animations[i].deleteRange(e,t);this._ranges[e]=null}getAnimationRange(e){return this._ranges[e]||null}getAnimationRanges(){const e=[];let t;for(t in this._ranges)e.push(this._ranges[t]);return e}beginAnimation(e,t,i,s){const r=this.getAnimationRange(e);return r?this._scene.beginAnimation(this,r.from,r.to,t,i,s):null}serializeAnimationRanges(){const e=[];for(const t in this._ranges){const i=this._ranges[t];if(!i)continue;const s={};s.name=t,s.from=i.from,s.to=i.to,e.push(s)}return e}computeWorldMatrix(e){return this._worldMatrix||(this._worldMatrix=x.Identity()),this._worldMatrix}dispose(e,t=!1){if(this._nodeDataStorage._isDisposed=!0,!e){const i=this.getDescendants(!0);for(const s of i)s.dispose(e,t)}this.parent?this.parent=null:this._removeFromSceneRootNodes(),this.onDisposeObservable.notifyObservers(this),this.onDisposeObservable.clear(),this.onEnabledStateChangedObservable.clear(),this.onClonedObservable.clear();for(const i of this._behaviors)i.detach();this._behaviors.length=0,this.metadata=null}static ParseAnimationRanges(e,t,i){if(t.ranges)for(let s=0;s<t.ranges.length;s++){const r=t.ranges[s];e.createAnimationRange(r.name,r.from,r.to)}}getHierarchyBoundingVectors(e=!0,t=null){this.getScene().incrementRenderId(),this.computeWorldMatrix(!0);let i,s;const r=this;if(r.getBoundingInfo&&r.subMeshes){const n=r.getBoundingInfo();i=n.boundingBox.minimumWorld.clone(),s=n.boundingBox.maximumWorld.clone()}else i=new p(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),s=new p(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);if(e){const n=this.getDescendants(!1);for(const a of n){const o=a;if(o.computeWorldMatrix(!0),t&&!t(o)||!o.getBoundingInfo||o.getTotalVertices()===0)continue;const l=o.getBoundingInfo().boundingBox,u=l.minimumWorld,d=l.maximumWorld;p.CheckExtends(u,i,s),p.CheckExtends(d,i,s)}}return{min:i,max:s}}}ze._AnimationRangeFactory=(c,e,t)=>{throw $("AnimationRange")},ze._NodeConstructors={},T([R()],ze.prototype,"name",void 0),T([R()],ze.prototype,"id",void 0),T([R()],ze.prototype,"uniqueId",void 0),T([R()],ze.prototype,"state",void 0),T([R()],ze.prototype,"metadata",void 0);class Bi{constructor(e,t,i,s){this.x=e,this.y=t,this.width=i,this.height=s}toGlobal(e,t){return new Bi(this.x*e,this.y*t,this.width*e,this.height*t)}toGlobalToRef(e,t,i){return i.x=this.x*e,i.y=this.y*t,i.width=this.width*e,i.height=this.height*t,this}clone(){return new Bi(this.x,this.y,this.width,this.height)}}class j extends ze{constructor(e,t,i,s=!0){super(e,i),this._position=p.Zero(),this._upVector=p.Up(),this._orthoLeft=null,this._orthoRight=null,this._orthoBottom=null,this._orthoTop=null,this.fov=.8,this.projectionPlaneTilt=0,this.minZ=1,this.maxZ=1e4,this.inertia=.9,this._mode=j.PERSPECTIVE_CAMERA,this.isIntermediate=!1,this.viewport=new Bi(0,0,1,1),this.layerMask=268435455,this.fovMode=j.FOVMODE_VERTICAL_FIXED,this.cameraRigMode=j.RIG_MODE_NONE,this.customRenderTargets=new Array,this.outputRenderTarget=null,this.onViewMatrixChangedObservable=new F,this.onProjectionMatrixChangedObservable=new F,this.onAfterCheckInputsObservable=new F,this.onRestoreStateObservable=new F,this.isRigCamera=!1,this._rigCameras=new Array,this._webvrViewMatrix=x.Identity(),this._skipRendering=!1,this._projectionMatrix=new x,this._postProcesses=new Array,this._activeMeshes=new $e(256),this._globalPosition=p.Zero(),this._computedViewMatrix=x.Identity(),this._doNotComputeProjectionMatrix=!1,this._transformMatrix=x.Zero(),this._refreshFrustumPlanes=!0,this._absoluteRotation=Z.Identity(),this._isCamera=!0,this._isLeftCamera=!1,this._isRightCamera=!1,this.getScene().addCamera(this),s&&!this.getScene().activeCamera&&(this.getScene().activeCamera=this),this.position=t,this.renderPassId=this.getScene().getEngine().createRenderPassId(`Camera ${e}`)}get position(){return this._position}set position(e){this._position=e}set upVector(e){this._upVector=e}get upVector(){return this._upVector}get screenArea(){var e,t,i,s;let r=0,n=0;if(this.mode===j.PERSPECTIVE_CAMERA)this.fovMode===j.FOVMODE_VERTICAL_FIXED?(n=this.minZ*2*Math.tan(this.fov/2),r=this.getEngine().getAspectRatio(this)*n):(r=this.minZ*2*Math.tan(this.fov/2),n=r/this.getEngine().getAspectRatio(this));else{const a=this.getEngine().getRenderWidth()/2,o=this.getEngine().getRenderHeight()/2;r=((e=this.orthoRight)!==null&&e!==void 0?e:a)-((t=this.orthoLeft)!==null&&t!==void 0?t:-a),n=((i=this.orthoTop)!==null&&i!==void 0?i:o)-((s=this.orthoBottom)!==null&&s!==void 0?s:-o)}return r*n}set orthoLeft(e){this._orthoLeft=e;for(const t of this._rigCameras)t.orthoLeft=e}get orthoLeft(){return this._orthoLeft}set orthoRight(e){this._orthoRight=e;for(const t of this._rigCameras)t.orthoRight=e}get orthoRight(){return this._orthoRight}set orthoBottom(e){this._orthoBottom=e;for(const t of this._rigCameras)t.orthoBottom=e}get orthoBottom(){return this._orthoBottom}set orthoTop(e){this._orthoTop=e;for(const t of this._rigCameras)t.orthoTop=e}get orthoTop(){return this._orthoTop}set mode(e){this._mode=e;for(const t of this._rigCameras)t.mode=e}get mode(){return this._mode}storeState(){return this._stateStored=!0,this._storedFov=this.fov,this}_restoreStateValues(){return this._stateStored?(this.fov=this._storedFov,!0):!1}restoreState(){return this._restoreStateValues()?(this.onRestoreStateObservable.notifyObservers(this),!0):!1}getClassName(){return"Camera"}toString(e){let t="Name: "+this.name;if(t+=", type: "+this.getClassName(),this.animations)for(let i=0;i<this.animations.length;i++)t+=", animation[0]: "+this.animations[i].toString(e);return t}applyVerticalCorrection(){const e=this.absoluteRotation.toEulerAngles();this.projectionPlaneTilt=this._scene.useRightHandedSystem?-e.x:e.x}get globalPosition(){return this._globalPosition}getActiveMeshes(){return this._activeMeshes}isActiveMesh(e){return this._activeMeshes.indexOf(e)!==-1}isReady(e=!1){if(e){for(const t of this._postProcesses)if(t&&!t.isReady())return!1}return super.isReady(e)}_initCache(){super._initCache(),this._cache.position=new p(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._cache.upVector=new p(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._cache.mode=void 0,this._cache.minZ=void 0,this._cache.maxZ=void 0,this._cache.fov=void 0,this._cache.fovMode=void 0,this._cache.aspectRatio=void 0,this._cache.orthoLeft=void 0,this._cache.orthoRight=void 0,this._cache.orthoBottom=void 0,this._cache.orthoTop=void 0,this._cache.renderWidth=void 0,this._cache.renderHeight=void 0}_updateCache(e){e||super._updateCache(),this._cache.position.copyFrom(this.position),this._cache.upVector.copyFrom(this.upVector)}_isSynchronized(){return this._isSynchronizedViewMatrix()&&this._isSynchronizedProjectionMatrix()}_isSynchronizedViewMatrix(){return super._isSynchronized()?this._cache.position.equals(this.position)&&this._cache.upVector.equals(this.upVector)&&this.isSynchronizedWithParent():!1}_isSynchronizedProjectionMatrix(){let e=this._cache.mode===this.mode&&this._cache.minZ===this.minZ&&this._cache.maxZ===this.maxZ;if(!e)return!1;const t=this.getEngine();return this.mode===j.PERSPECTIVE_CAMERA?e=this._cache.fov===this.fov&&this._cache.fovMode===this.fovMode&&this._cache.aspectRatio===t.getAspectRatio(this)&&this._cache.projectionPlaneTilt===this.projectionPlaneTilt:e=this._cache.orthoLeft===this.orthoLeft&&this._cache.orthoRight===this.orthoRight&&this._cache.orthoBottom===this.orthoBottom&&this._cache.orthoTop===this.orthoTop&&this._cache.renderWidth===t.getRenderWidth()&&this._cache.renderHeight===t.getRenderHeight(),e}attachControl(e,t){}detachControl(e){}update(){this._checkInputs(),this.cameraRigMode!==j.RIG_MODE_NONE&&this._updateRigCameras()}_checkInputs(){this.onAfterCheckInputsObservable.notifyObservers(this)}get rigCameras(){return this._rigCameras}get rigPostProcess(){return this._rigPostProcess}_getFirstPostProcess(){for(let e=0;e<this._postProcesses.length;e++)if(this._postProcesses[e]!==null)return this._postProcesses[e];return null}_cascadePostProcessesToRigCams(){const e=this._getFirstPostProcess();e&&e.markTextureDirty();for(let t=0,i=this._rigCameras.length;t<i;t++){const s=this._rigCameras[t],r=s._rigPostProcess;r?(r.getEffectName()==="pass"&&(s.isIntermediate=this._postProcesses.length===0),s._postProcesses=this._postProcesses.slice(0).concat(r),r.markTextureDirty()):s._postProcesses=this._postProcesses.slice(0)}}attachPostProcess(e,t=null){return!e.isReusable()&&this._postProcesses.indexOf(e)>-1?(O.Error("You're trying to reuse a post process not defined as reusable."),0):(t==null||t<0?this._postProcesses.push(e):this._postProcesses[t]===null?this._postProcesses[t]=e:this._postProcesses.splice(t,0,e),this._cascadePostProcessesToRigCams(),this._scene.prePassRenderer&&this._scene.prePassRenderer.markAsDirty(),this._postProcesses.indexOf(e))}detachPostProcess(e){const t=this._postProcesses.indexOf(e);t!==-1&&(this._postProcesses[t]=null),this._scene.prePassRenderer&&this._scene.prePassRenderer.markAsDirty(),this._cascadePostProcessesToRigCams()}getWorldMatrix(){return this._isSynchronizedViewMatrix()?this._worldMatrix:(this.getViewMatrix(),this._worldMatrix)}_getViewMatrix(){return x.Identity()}getViewMatrix(e){return!e&&this._isSynchronizedViewMatrix()?this._computedViewMatrix:(this.updateCache(),this._computedViewMatrix=this._getViewMatrix(),this._currentRenderId=this.getScene().getRenderId(),this._childUpdateId++,this._refreshFrustumPlanes=!0,this._cameraRigParams&&this._cameraRigParams.vrPreViewMatrix&&this._computedViewMatrix.multiplyToRef(this._cameraRigParams.vrPreViewMatrix,this._computedViewMatrix),this.parent&&this.parent.onViewMatrixChangedObservable&&this.parent.onViewMatrixChangedObservable.notifyObservers(this.parent),this.onViewMatrixChangedObservable.notifyObservers(this),this._computedViewMatrix.invertToRef(this._worldMatrix),this._computedViewMatrix)}freezeProjectionMatrix(e){this._doNotComputeProjectionMatrix=!0,e!==void 0&&(this._projectionMatrix=e)}unfreezeProjectionMatrix(){this._doNotComputeProjectionMatrix=!1}getProjectionMatrix(e){var t,i,s,r,n,a,o,h;if(this._doNotComputeProjectionMatrix||!e&&this._isSynchronizedProjectionMatrix())return this._projectionMatrix;this._cache.mode=this.mode,this._cache.minZ=this.minZ,this._cache.maxZ=this.maxZ,this._refreshFrustumPlanes=!0;const l=this.getEngine(),u=this.getScene(),d=l.useReverseDepthBuffer;if(this.mode===j.PERSPECTIVE_CAMERA){this._cache.fov=this.fov,this._cache.fovMode=this.fovMode,this._cache.aspectRatio=l.getAspectRatio(this),this._cache.projectionPlaneTilt=this.projectionPlaneTilt,this.minZ<=0&&(this.minZ=.1);let f;u.useRightHandedSystem?f=x.PerspectiveFovRHToRef:f=x.PerspectiveFovLHToRef,f(this.fov,l.getAspectRatio(this),d?this.maxZ:this.minZ,d?this.minZ:this.maxZ,this._projectionMatrix,this.fovMode===j.FOVMODE_VERTICAL_FIXED,l.isNDCHalfZRange,this.projectionPlaneTilt,d)}else{const f=l.getRenderWidth()/2,_=l.getRenderHeight()/2;u.useRightHandedSystem?x.OrthoOffCenterRHToRef((t=this.orthoLeft)!==null&&t!==void 0?t:-f,(i=this.orthoRight)!==null&&i!==void 0?i:f,(s=this.orthoBottom)!==null&&s!==void 0?s:-_,(r=this.orthoTop)!==null&&r!==void 0?r:_,d?this.maxZ:this.minZ,d?this.minZ:this.maxZ,this._projectionMatrix,l.isNDCHalfZRange):x.OrthoOffCenterLHToRef((n=this.orthoLeft)!==null&&n!==void 0?n:-f,(a=this.orthoRight)!==null&&a!==void 0?a:f,(o=this.orthoBottom)!==null&&o!==void 0?o:-_,(h=this.orthoTop)!==null&&h!==void 0?h:_,d?this.maxZ:this.minZ,d?this.minZ:this.maxZ,this._projectionMatrix,l.isNDCHalfZRange),this._cache.orthoLeft=this.orthoLeft,this._cache.orthoRight=this.orthoRight,this._cache.orthoBottom=this.orthoBottom,this._cache.orthoTop=this.orthoTop,this._cache.renderWidth=l.getRenderWidth(),this._cache.renderHeight=l.getRenderHeight()}return this.onProjectionMatrixChangedObservable.notifyObservers(this),this._projectionMatrix}getTransformationMatrix(){return this._computedViewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix),this._transformMatrix}_updateFrustumPlanes(){this._refreshFrustumPlanes&&(this.getTransformationMatrix(),this._frustumPlanes?Et.GetPlanesToRef(this._transformMatrix,this._frustumPlanes):this._frustumPlanes=Et.GetPlanes(this._transformMatrix),this._refreshFrustumPlanes=!1)}isInFrustum(e,t=!1){if(this._updateFrustumPlanes(),t&&this.rigCameras.length>0){let i=!1;return this.rigCameras.forEach(s=>{s._updateFrustumPlanes(),i=i||e.isInFrustum(s._frustumPlanes)}),i}else return e.isInFrustum(this._frustumPlanes)}isCompletelyInFrustum(e){return this._updateFrustumPlanes(),e.isCompletelyInFrustum(this._frustumPlanes)}getForwardRay(e=100,t,i){throw $("Ray")}getForwardRayToRef(e,t=100,i,s){throw $("Ray")}dispose(e,t=!1){for(this.onViewMatrixChangedObservable.clear(),this.onProjectionMatrixChangedObservable.clear(),this.onAfterCheckInputsObservable.clear(),this.onRestoreStateObservable.clear(),this.inputs&&this.inputs.clear(),this.getScene().stopAnimation(this),this.getScene().removeCamera(this);this._rigCameras.length>0;){const s=this._rigCameras.pop();s&&s.dispose()}if(this._parentContainer){const s=this._parentContainer.cameras.indexOf(this);s>-1&&this._parentContainer.cameras.splice(s,1),this._parentContainer=null}if(this._rigPostProcess)this._rigPostProcess.dispose(this),this._rigPostProcess=null,this._postProcesses.length=0;else if(this.cameraRigMode!==j.RIG_MODE_NONE)this._rigPostProcess=null,this._postProcesses.length=0;else{let s=this._postProcesses.length;for(;--s>=0;){const r=this._postProcesses[s];r&&r.dispose(this)}}let i=this.customRenderTargets.length;for(;--i>=0;)this.customRenderTargets[i].dispose();this.customRenderTargets.length=0,this._activeMeshes.dispose(),this.getScene().getEngine().releaseRenderPassId(this.renderPassId),super.dispose(e,t)}get isLeftCamera(){return this._isLeftCamera}get isRightCamera(){return this._isRightCamera}get leftCamera(){return this._rigCameras.length<1?null:this._rigCameras[0]}get rightCamera(){return this._rigCameras.length<2?null:this._rigCameras[1]}getLeftTarget(){return this._rigCameras.length<1?null:this._rigCameras[0].getTarget()}getRightTarget(){return this._rigCameras.length<2?null:this._rigCameras[1].getTarget()}setCameraRigMode(e,t){if(this.cameraRigMode!==e){for(;this._rigCameras.length>0;){const i=this._rigCameras.pop();i&&i.dispose()}if(this.cameraRigMode=e,this._cameraRigParams={},this._cameraRigParams.interaxialDistance=t.interaxialDistance||.0637,this._cameraRigParams.stereoHalfAngle=H.ToRadians(this._cameraRigParams.interaxialDistance/.0637),this.cameraRigMode!==j.RIG_MODE_NONE){const i=this.createRigCamera(this.name+"_L",0);i&&(i._isLeftCamera=!0);const s=this.createRigCamera(this.name+"_R",1);s&&(s._isRightCamera=!0),i&&s&&(this._rigCameras.push(i),this._rigCameras.push(s))}this._setRigMode(t),this._cascadePostProcessesToRigCams(),this.update()}}_setRigMode(e){}_getVRProjectionMatrix(){return x.PerspectiveFovLHToRef(this._cameraRigParams.vrMetrics.aspectRatioFov,this._cameraRigParams.vrMetrics.aspectRatio,this.minZ,this.maxZ,this._cameraRigParams.vrWorkMatrix,!0,this.getEngine().isNDCHalfZRange),this._cameraRigParams.vrWorkMatrix.multiplyToRef(this._cameraRigParams.vrHMatrix,this._projectionMatrix),this._projectionMatrix}_updateCameraRotationMatrix(){}_updateWebVRCameraRotationMatrix(){}_getWebVRProjectionMatrix(){return x.Identity()}_getWebVRViewMatrix(){return x.Identity()}setCameraRigParameter(e,t){this._cameraRigParams||(this._cameraRigParams={}),this._cameraRigParams[e]=t,e==="interaxialDistance"&&(this._cameraRigParams.stereoHalfAngle=H.ToRadians(t/.0637))}createRigCamera(e,t){return null}_updateRigCameras(){for(let e=0;e<this._rigCameras.length;e++)this._rigCameras[e].minZ=this.minZ,this._rigCameras[e].maxZ=this.maxZ,this._rigCameras[e].fov=this.fov,this._rigCameras[e].upVector.copyFrom(this.upVector);this.cameraRigMode===j.RIG_MODE_STEREOSCOPIC_ANAGLYPH&&(this._rigCameras[0].viewport=this._rigCameras[1].viewport=this.viewport)}_setupInputs(){}serialize(){const e=ae.Serialize(this);return e.uniqueId=this.uniqueId,e.type=this.getClassName(),this.parent&&this.parent._serializeAsParent(e),this.inputs&&this.inputs.serialize(e),ae.AppendSerializedAnimations(this,e),e.ranges=this.serializeAnimationRanges(),e.isEnabled=this.isEnabled(),e}clone(e,t=null){const i=ae.Clone(j.GetConstructorFromName(this.getClassName(),e,this.getScene(),this.interaxialDistance,this.isStereoscopicSideBySide),this);return i.name=e,i.parent=t,this.onClonedObservable.notifyObservers(i),i}getDirection(e){const t=p.Zero();return this.getDirectionToRef(e,t),t}get absoluteRotation(){return this.getWorldMatrix().decompose(void 0,this._absoluteRotation),this._absoluteRotation}getDirectionToRef(e,t){p.TransformNormalToRef(e,this.getWorldMatrix(),t)}static GetConstructorFromName(e,t,i,s=0,r=!0){const n=ze.Construct(e,t,i,{interaxial_distance:s,isStereoscopicSideBySide:r});return n||(()=>j._CreateDefaultParsedCamera(t,i))}computeWorldMatrix(){return this.getWorldMatrix()}static Parse(e,t){const i=e.type,s=j.GetConstructorFromName(i,e.name,t,e.interaxial_distance,e.isStereoscopicSideBySide),r=ae.Parse(s,e,t);if(e.parentId!==void 0&&(r._waitingParentId=e.parentId),e.parentInstanceIndex!==void 0&&(r._waitingParentInstanceIndex=e.parentInstanceIndex),r.inputs&&(r.inputs.parse(e),r._setupInputs()),e.upVector&&(r.upVector=p.FromArray(e.upVector)),r.setPosition&&(r.position.copyFromFloats(0,0,0),r.setPosition(p.FromArray(e.position))),e.target&&r.setTarget&&r.setTarget(p.FromArray(e.target)),e.cameraRigMode){const n=e.interaxial_distance?{interaxialDistance:e.interaxial_distance}:{};r.setCameraRigMode(e.cameraRigMode,n)}if(e.animations){for(let n=0;n<e.animations.length;n++){const a=e.animations[n],o=ri("BABYLON.Animation");o&&r.animations.push(o.Parse(a))}ze.ParseAnimationRanges(r,e,t)}return e.autoAnimate&&t.beginAnimation(r,e.autoAnimateFrom,e.autoAnimateTo,e.autoAnimateLoop,e.autoAnimateSpeed||1),e.isEnabled!==void 0&&r.setEnabled(e.isEnabled),r}}j._CreateDefaultParsedCamera=(c,e)=>{throw $("UniversalCamera")},j.PERSPECTIVE_CAMERA=0,j.ORTHOGRAPHIC_CAMERA=1,j.FOVMODE_VERTICAL_FIXED=0,j.FOVMODE_HORIZONTAL_FIXED=1,j.RIG_MODE_NONE=0,j.RIG_MODE_STEREOSCOPIC_ANAGLYPH=10,j.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_PARALLEL=11,j.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED=12,j.RIG_MODE_STEREOSCOPIC_OVERUNDER=13,j.RIG_MODE_STEREOSCOPIC_INTERLACED=14,j.RIG_MODE_VR=20,j.RIG_MODE_WEBVR=21,j.RIG_MODE_CUSTOM=22,j.ForceAttachControlToAlwaysPreventDefault=!1,T([Bt("position")],j.prototype,"_position",void 0),T([Bt("upVector")],j.prototype,"_upVector",void 0),T([R()],j.prototype,"orthoLeft",null),T([R()],j.prototype,"orthoRight",null),T([R()],j.prototype,"orthoBottom",null),T([R()],j.prototype,"orthoTop",null),T([R()],j.prototype,"fov",void 0),T([R()],j.prototype,"projectionPlaneTilt",void 0),T([R()],j.prototype,"minZ",void 0),T([R()],j.prototype,"maxZ",void 0),T([R()],j.prototype,"inertia",void 0),T([R()],j.prototype,"mode",null),T([R()],j.prototype,"layerMask",void 0),T([R()],j.prototype,"fovMode",void 0),T([R()],j.prototype,"cameraRigMode",void 0),T([R()],j.prototype,"interaxialDistance",void 0),T([R()],j.prototype,"isStereoscopicSideBySide",void 0);class ee{constructor(){this._applyTo=Ln(this._applyToCoroutine.bind(this))}set(e,t){switch(e.length||O.Warn(`Setting vertex data kind '${t}' with an empty array`),t){case g.PositionKind:this.positions=e;break;case g.NormalKind:this.normals=e;break;case g.TangentKind:this.tangents=e;break;case g.UVKind:this.uvs=e;break;case g.UV2Kind:this.uvs2=e;break;case g.UV3Kind:this.uvs3=e;break;case g.UV4Kind:this.uvs4=e;break;case g.UV5Kind:this.uvs5=e;break;case g.UV6Kind:this.uvs6=e;break;case g.ColorKind:this.colors=e;break;case g.MatricesIndicesKind:this.matricesIndices=e;break;case g.MatricesWeightsKind:this.matricesWeights=e;break;case g.MatricesIndicesExtraKind:this.matricesIndicesExtra=e;break;case g.MatricesWeightsExtraKind:this.matricesWeightsExtra=e;break}}applyToMesh(e,t){return this._applyTo(e,t,!1),this}applyToGeometry(e,t){return this._applyTo(e,t,!1),this}updateMesh(e){return this._update(e),this}updateGeometry(e){return this._update(e),this}*_applyToCoroutine(e,t=!1,i){return this.positions&&(e.setVerticesData(g.PositionKind,this.positions,t),i&&(yield)),this.normals&&(e.setVerticesData(g.NormalKind,this.normals,t),i&&(yield)),this.tangents&&(e.setVerticesData(g.TangentKind,this.tangents,t),i&&(yield)),this.uvs&&(e.setVerticesData(g.UVKind,this.uvs,t),i&&(yield)),this.uvs2&&(e.setVerticesData(g.UV2Kind,this.uvs2,t),i&&(yield)),this.uvs3&&(e.setVerticesData(g.UV3Kind,this.uvs3,t),i&&(yield)),this.uvs4&&(e.setVerticesData(g.UV4Kind,this.uvs4,t),i&&(yield)),this.uvs5&&(e.setVerticesData(g.UV5Kind,this.uvs5,t),i&&(yield)),this.uvs6&&(e.setVerticesData(g.UV6Kind,this.uvs6,t),i&&(yield)),this.colors&&(e.setVerticesData(g.ColorKind,this.colors,t),i&&(yield)),this.matricesIndices&&(e.setVerticesData(g.MatricesIndicesKind,this.matricesIndices,t),i&&(yield)),this.matricesWeights&&(e.setVerticesData(g.MatricesWeightsKind,this.matricesWeights,t),i&&(yield)),this.matricesIndicesExtra&&(e.setVerticesData(g.MatricesIndicesExtraKind,this.matricesIndicesExtra,t),i&&(yield)),this.matricesWeightsExtra&&(e.setVerticesData(g.MatricesWeightsExtraKind,this.matricesWeightsExtra,t),i&&(yield)),this.indices?(e.setIndices(this.indices,null,t),i&&(yield)):e.setIndices([],null),this}_update(e,t,i){return this.positions&&e.updateVerticesData(g.PositionKind,this.positions,t,i),this.normals&&e.updateVerticesData(g.NormalKind,this.normals,t,i),this.tangents&&e.updateVerticesData(g.TangentKind,this.tangents,t,i),this.uvs&&e.updateVerticesData(g.UVKind,this.uvs,t,i),this.uvs2&&e.updateVerticesData(g.UV2Kind,this.uvs2,t,i),this.uvs3&&e.updateVerticesData(g.UV3Kind,this.uvs3,t,i),this.uvs4&&e.updateVerticesData(g.UV4Kind,this.uvs4,t,i),this.uvs5&&e.updateVerticesData(g.UV5Kind,this.uvs5,t,i),this.uvs6&&e.updateVerticesData(g.UV6Kind,this.uvs6,t,i),this.colors&&e.updateVerticesData(g.ColorKind,this.colors,t,i),this.matricesIndices&&e.updateVerticesData(g.MatricesIndicesKind,this.matricesIndices,t,i),this.matricesWeights&&e.updateVerticesData(g.MatricesWeightsKind,this.matricesWeights,t,i),this.matricesIndicesExtra&&e.updateVerticesData(g.MatricesIndicesExtraKind,this.matricesIndicesExtra,t,i),this.matricesWeightsExtra&&e.updateVerticesData(g.MatricesWeightsExtraKind,this.matricesWeightsExtra,t,i),this.indices&&e.setIndices(this.indices,null),this}static _TransformVector3Coordinates(e,t,i=0,s=e.length){const r=D.Vector3[0],n=D.Vector3[1];for(let a=i;a<i+s;a+=3)p.FromArrayToRef(e,a,r),p.TransformCoordinatesToRef(r,t,n),e[a]=n.x,e[a+1]=n.y,e[a+2]=n.z}static _TransformVector3Normals(e,t,i=0,s=e.length){const r=D.Vector3[0],n=D.Vector3[1];for(let a=i;a<i+s;a+=3)p.FromArrayToRef(e,a,r),p.TransformNormalToRef(r,t,n),e[a]=n.x,e[a+1]=n.y,e[a+2]=n.z}static _TransformVector4Normals(e,t,i=0,s=e.length){const r=D.Vector4[0],n=D.Vector4[1];for(let a=i;a<i+s;a+=4)Ce.FromArrayToRef(e,a,r),Ce.TransformNormalToRef(r,t,n),e[a]=n.x,e[a+1]=n.y,e[a+2]=n.z,e[a+3]=n.w}static _FlipFaces(e,t=0,i=e.length){for(let s=t;s<t+i;s+=3){const r=e[s+1];e[s+1]=e[s+2],e[s+2]=r}}transform(e){const t=e.determinant()<0;return this.positions&&ee._TransformVector3Coordinates(this.positions,e),this.normals&&ee._TransformVector3Normals(this.normals,e),this.tangents&&ee._TransformVector4Normals(this.tangents,e),t&&this.indices&&ee._FlipFaces(this.indices),this}merge(e,t=!1,i=!1){const s=Array.isArray(e)?e.map(r=>[r,void 0]):[[e,void 0]];return Ps(this._mergeCoroutine(void 0,s,t,!1,i))}*_mergeCoroutine(e,t,i=!1,s,r){var n,a,o,h;this._validate();const l=t.map(_=>_[0]);for(const _ of l)if(_._validate(),!this.normals!=!_.normals||!this.tangents!=!_.tangents||!this.uvs!=!_.uvs||!this.uvs2!=!_.uvs2||!this.uvs3!=!_.uvs3||!this.uvs4!=!_.uvs4||!this.uvs5!=!_.uvs5||!this.uvs6!=!_.uvs6||!this.colors!=!_.colors||!this.matricesIndices!=!_.matricesIndices||!this.matricesWeights!=!_.matricesWeights||!this.matricesIndicesExtra!=!_.matricesIndicesExtra||!this.matricesWeightsExtra!=!_.matricesWeightsExtra)throw new Error("Cannot merge vertex data that do not have the same set of attributes");const u=l.reduce((_,E)=>{var m,v;return _+((v=(m=E.indices)===null||m===void 0?void 0:m.length)!==null&&v!==void 0?v:0)},(a=(n=this.indices)===null||n===void 0?void 0:n.length)!==null&&a!==void 0?a:0);let f=r||l.some(_=>_.indices===this.indices)?(o=this.indices)===null||o===void 0?void 0:o.slice():this.indices;if(u>0){let _=(h=f==null?void 0:f.length)!==null&&h!==void 0?h:0;if(f||(f=new Array(u)),f.length!==u){if(Array.isArray(f))f.length=u;else{const m=i||f instanceof Uint32Array?new Uint32Array(u):new Uint16Array(u);m.set(f),f=m}e&&e.determinant()<0&&ee._FlipFaces(f,0,_)}let E=this.positions?this.positions.length/3:0;for(const[m,v]of t)if(m.indices){for(let S=0;S<m.indices.length;S++)f[_+S]=m.indices[S]+E;v&&v.determinant()<0&&ee._FlipFaces(f,_,m.indices.length),E+=m.positions.length/3,_+=m.indices.length,s&&(yield)}}return this.indices=f,this.positions=ee._MergeElement(g.PositionKind,this.positions,e,t.map(_=>[_[0].positions,_[1]])),s&&(yield),this.normals=ee._MergeElement(g.NormalKind,this.normals,e,t.map(_=>[_[0].normals,_[1]])),s&&(yield),this.tangents=ee._MergeElement(g.TangentKind,this.tangents,e,t.map(_=>[_[0].tangents,_[1]])),s&&(yield),this.uvs=ee._MergeElement(g.UVKind,this.uvs,e,t.map(_=>[_[0].uvs,_[1]])),s&&(yield),this.uvs2=ee._MergeElement(g.UV2Kind,this.uvs2,e,t.map(_=>[_[0].uvs2,_[1]])),s&&(yield),this.uvs3=ee._MergeElement(g.UV3Kind,this.uvs3,e,t.map(_=>[_[0].uvs3,_[1]])),s&&(yield),this.uvs4=ee._MergeElement(g.UV4Kind,this.uvs4,e,t.map(_=>[_[0].uvs4,_[1]])),s&&(yield),this.uvs5=ee._MergeElement(g.UV5Kind,this.uvs5,e,t.map(_=>[_[0].uvs5,_[1]])),s&&(yield),this.uvs6=ee._MergeElement(g.UV6Kind,this.uvs6,e,t.map(_=>[_[0].uvs6,_[1]])),s&&(yield),this.colors=ee._MergeElement(g.ColorKind,this.colors,e,t.map(_=>[_[0].colors,_[1]])),s&&(yield),this.matricesIndices=ee._MergeElement(g.MatricesIndicesKind,this.matricesIndices,e,t.map(_=>[_[0].matricesIndices,_[1]])),s&&(yield),this.matricesWeights=ee._MergeElement(g.MatricesWeightsKind,this.matricesWeights,e,t.map(_=>[_[0].matricesWeights,_[1]])),s&&(yield),this.matricesIndicesExtra=ee._MergeElement(g.MatricesIndicesExtraKind,this.matricesIndicesExtra,e,t.map(_=>[_[0].matricesIndicesExtra,_[1]])),s&&(yield),this.matricesWeightsExtra=ee._MergeElement(g.MatricesWeightsExtraKind,this.matricesWeightsExtra,e,t.map(_=>[_[0].matricesWeightsExtra,_[1]])),this}static _MergeElement(e,t,i,s){const r=s.filter(o=>o[0]!==null&&o[0]!==void 0);if(!t&&r.length==0)return t;if(!t)return this._MergeElement(e,r[0][0],r[0][1],r.slice(1));const n=r.reduce((o,h)=>o+h[0].length,t.length),a=e===g.PositionKind?ee._TransformVector3Coordinates:e===g.NormalKind?ee._TransformVector3Normals:e===g.TangentKind?ee._TransformVector4Normals:()=>{};if(t instanceof Float32Array){const o=new Float32Array(n);o.set(t),i&&a(o,i,0,t.length);let h=t.length;for(const[l,u]of r)o.set(l,h),u&&a(o,u,h,l.length),h+=l.length;return o}else{const o=new Array(n);for(let l=0;l<t.length;l++)o[l]=t[l];i&&a(o,i,0,t.length);let h=t.length;for(const[l,u]of r){for(let d=0;d<l.length;d++)o[h+d]=l[d];u&&a(o,u,h,l.length),h+=l.length}return o}}_validate(){if(!this.positions)throw new Nt("Positions are required",oi.MeshInvalidPositionsError);const e=(s,r)=>{const n=g.DeduceStride(s);if(r.length%n!==0)throw new Error("The "+s+"s array count must be a multiple of "+n);return r.length/n},t=e(g.PositionKind,this.positions),i=(s,r)=>{const n=e(s,r);if(n!==t)throw new Error("The "+s+"s element count ("+n+") does not match the positions count ("+t+")")};this.normals&&i(g.NormalKind,this.normals),this.tangents&&i(g.TangentKind,this.tangents),this.uvs&&i(g.UVKind,this.uvs),this.uvs2&&i(g.UV2Kind,this.uvs2),this.uvs3&&i(g.UV3Kind,this.uvs3),this.uvs4&&i(g.UV4Kind,this.uvs4),this.uvs5&&i(g.UV5Kind,this.uvs5),this.uvs6&&i(g.UV6Kind,this.uvs6),this.colors&&i(g.ColorKind,this.colors),this.matricesIndices&&i(g.MatricesIndicesKind,this.matricesIndices),this.matricesWeights&&i(g.MatricesWeightsKind,this.matricesWeights),this.matricesIndicesExtra&&i(g.MatricesIndicesExtraKind,this.matricesIndicesExtra),this.matricesWeightsExtra&&i(g.MatricesWeightsExtraKind,this.matricesWeightsExtra)}serialize(){const e={};return this.positions&&(e.positions=this.positions),this.normals&&(e.normals=this.normals),this.tangents&&(e.tangents=this.tangents),this.uvs&&(e.uvs=this.uvs),this.uvs2&&(e.uvs2=this.uvs2),this.uvs3&&(e.uvs3=this.uvs3),this.uvs4&&(e.uvs4=this.uvs4),this.uvs5&&(e.uvs5=this.uvs5),this.uvs6&&(e.uvs6=this.uvs6),this.colors&&(e.colors=this.colors),this.matricesIndices&&(e.matricesIndices=this.matricesIndices,e.matricesIndices._isExpanded=!0),this.matricesWeights&&(e.matricesWeights=this.matricesWeights),this.matricesIndicesExtra&&(e.matricesIndicesExtra=this.matricesIndicesExtra,e.matricesIndicesExtra._isExpanded=!0),this.matricesWeightsExtra&&(e.matricesWeightsExtra=this.matricesWeightsExtra),e.indices=this.indices,e}static ExtractFromMesh(e,t,i){return ee._ExtractFrom(e,t,i)}static ExtractFromGeometry(e,t,i){return ee._ExtractFrom(e,t,i)}static _ExtractFrom(e,t,i){const s=new ee;return e.isVerticesDataPresent(g.PositionKind)&&(s.positions=e.getVerticesData(g.PositionKind,t,i)),e.isVerticesDataPresent(g.NormalKind)&&(s.normals=e.getVerticesData(g.NormalKind,t,i)),e.isVerticesDataPresent(g.TangentKind)&&(s.tangents=e.getVerticesData(g.TangentKind,t,i)),e.isVerticesDataPresent(g.UVKind)&&(s.uvs=e.getVerticesData(g.UVKind,t,i)),e.isVerticesDataPresent(g.UV2Kind)&&(s.uvs2=e.getVerticesData(g.UV2Kind,t,i)),e.isVerticesDataPresent(g.UV3Kind)&&(s.uvs3=e.getVerticesData(g.UV3Kind,t,i)),e.isVerticesDataPresent(g.UV4Kind)&&(s.uvs4=e.getVerticesData(g.UV4Kind,t,i)),e.isVerticesDataPresent(g.UV5Kind)&&(s.uvs5=e.getVerticesData(g.UV5Kind,t,i)),e.isVerticesDataPresent(g.UV6Kind)&&(s.uvs6=e.getVerticesData(g.UV6Kind,t,i)),e.isVerticesDataPresent(g.ColorKind)&&(s.colors=e.getVerticesData(g.ColorKind,t,i)),e.isVerticesDataPresent(g.MatricesIndicesKind)&&(s.matricesIndices=e.getVerticesData(g.MatricesIndicesKind,t,i)),e.isVerticesDataPresent(g.MatricesWeightsKind)&&(s.matricesWeights=e.getVerticesData(g.MatricesWeightsKind,t,i)),e.isVerticesDataPresent(g.MatricesIndicesExtraKind)&&(s.matricesIndicesExtra=e.getVerticesData(g.MatricesIndicesExtraKind,t,i)),e.isVerticesDataPresent(g.MatricesWeightsExtraKind)&&(s.matricesWeightsExtra=e.getVerticesData(g.MatricesWeightsExtraKind,t,i)),s.indices=e.getIndices(t,i),s}static CreateRibbon(e){throw $("ribbonBuilder")}static CreateBox(e){throw $("boxBuilder")}static CreateTiledBox(e){throw $("tiledBoxBuilder")}static CreateTiledPlane(e){throw $("tiledPlaneBuilder")}static CreateSphere(e){throw $("sphereBuilder")}static CreateCylinder(e){throw $("cylinderBuilder")}static CreateTorus(e){throw $("torusBuilder")}static CreateLineSystem(e){throw $("linesBuilder")}static CreateDashedLines(e){throw $("linesBuilder")}static CreateGround(e){throw $("groundBuilder")}static CreateTiledGround(e){throw $("groundBuilder")}static CreateGroundFromHeightMap(e){throw $("groundBuilder")}static CreatePlane(e){throw $("planeBuilder")}static CreateDisc(e){throw $("discBuilder")}static CreatePolygon(e,t,i,s,r,n,a){throw $("polygonBuilder")}static CreateIcoSphere(e){throw $("icoSphereBuilder")}static CreatePolyhedron(e){throw $("polyhedronBuilder")}static CreateCapsule(e={orientation:p.Up(),subdivisions:2,tessellation:16,height:1,radius:.25,capSubdivisions:6}){throw $("capsuleBuilder")}static CreateTorusKnot(e){throw $("torusKnotBuilder")}static ComputeNormals(e,t,i,s){let r=0,n=0,a=0,o=0,h=0,l=0,u=0,d=0,f=0,_=0,E=0,m=0,v=0,S=0,y=0,A=0,C=0,b=0,M=0,L=0,k=!1,w=!1,de=!1,ce=!1,se=1,te=0,Fe=null;s&&(k=!!s.facetNormals,w=!!s.facetPositions,de=!!s.facetPartitioning,se=s.useRightHandedSystem===!0?-1:1,te=s.ratio||0,ce=!!s.depthSort,Fe=s.distanceTo,ce&&Fe===void 0&&(Fe=p.Zero()));let we=0,He=0,Ke=0,Ye=0;for(de&&s&&s.bbSize&&(we=s.subDiv.X*te/s.bbSize.x,He=s.subDiv.Y*te/s.bbSize.y,Ke=s.subDiv.Z*te/s.bbSize.z,Ye=s.subDiv.max*s.subDiv.max,s.facetPartitioning.length=0),r=0;r<e.length;r++)i[r]=0;const pt=t.length/3|0;for(r=0;r<pt;r++){if(m=t[r*3]*3,v=m+1,S=m+2,y=t[r*3+1]*3,A=y+1,C=y+2,b=t[r*3+2]*3,M=b+1,L=b+2,n=e[m]-e[y],a=e[v]-e[A],o=e[S]-e[C],h=e[b]-e[y],l=e[M]-e[A],u=e[L]-e[C],d=se*(a*u-o*l),f=se*(o*h-n*u),_=se*(n*l-a*h),E=Math.sqrt(d*d+f*f+_*_),E=E===0?1:E,d/=E,f/=E,_/=E,k&&s&&(s.facetNormals[r].x=d,s.facetNormals[r].y=f,s.facetNormals[r].z=_),w&&s&&(s.facetPositions[r].x=(e[m]+e[y]+e[b])/3,s.facetPositions[r].y=(e[v]+e[A]+e[M])/3,s.facetPositions[r].z=(e[S]+e[C]+e[L])/3),de&&s){const ht=Math.floor((s.facetPositions[r].x-s.bInfo.minimum.x*te)*we),wt=Math.floor((s.facetPositions[r].y-s.bInfo.minimum.y*te)*He),si=Math.floor((s.facetPositions[r].z-s.bInfo.minimum.z*te)*Ke),ds=Math.floor((e[m]-s.bInfo.minimum.x*te)*we),fs=Math.floor((e[v]-s.bInfo.minimum.y*te)*He),_s=Math.floor((e[S]-s.bInfo.minimum.z*te)*Ke),Xs=Math.floor((e[y]-s.bInfo.minimum.x*te)*we),Hs=Math.floor((e[A]-s.bInfo.minimum.y*te)*He),Ks=Math.floor((e[C]-s.bInfo.minimum.z*te)*Ke),Ys=Math.floor((e[b]-s.bInfo.minimum.x*te)*we),Zs=Math.floor((e[M]-s.bInfo.minimum.y*te)*He),qs=Math.floor((e[L]-s.bInfo.minimum.z*te)*Ke),Ht=ds+s.subDiv.max*fs+Ye*_s,Kt=Xs+s.subDiv.max*Hs+Ye*Ks,Yt=Ys+s.subDiv.max*Zs+Ye*qs,Zt=ht+s.subDiv.max*wt+Ye*si;s.facetPartitioning[Zt]=s.facetPartitioning[Zt]?s.facetPartitioning[Zt]:new Array,s.facetPartitioning[Ht]=s.facetPartitioning[Ht]?s.facetPartitioning[Ht]:new Array,s.facetPartitioning[Kt]=s.facetPartitioning[Kt]?s.facetPartitioning[Kt]:new Array,s.facetPartitioning[Yt]=s.facetPartitioning[Yt]?s.facetPartitioning[Yt]:new Array,s.facetPartitioning[Ht].push(r),Kt!=Ht&&s.facetPartitioning[Kt].push(r),Yt==Kt||Yt==Ht||s.facetPartitioning[Yt].push(r),Zt==Ht||Zt==Kt||Zt==Yt||s.facetPartitioning[Zt].push(r)}if(ce&&s&&s.facetPositions){const ht=s.depthSortedFacets[r];ht.ind=r*3,ht.sqDistance=p.DistanceSquared(s.facetPositions[r],Fe)}i[m]+=d,i[v]+=f,i[S]+=_,i[y]+=d,i[A]+=f,i[C]+=_,i[b]+=d,i[M]+=f,i[L]+=_}for(r=0;r<i.length/3;r++)d=i[r*3],f=i[r*3+1],_=i[r*3+2],E=Math.sqrt(d*d+f*f+_*_),E=E===0?1:E,d/=E,f/=E,_/=E,i[r*3]=d,i[r*3+1]=f,i[r*3+2]=_}static _ComputeSides(e,t,i,s,r,n,a){const o=i.length,h=s.length;let l,u;switch(e=e||ee.DEFAULTSIDE,e){case ee.FRONTSIDE:break;case ee.BACKSIDE:for(l=0;l<o;l+=3){const d=i[l];i[l]=i[l+2],i[l+2]=d}for(u=0;u<h;u++)s[u]=-s[u];break;case ee.DOUBLESIDE:{const d=t.length,f=d/3;for(let m=0;m<d;m++)t[d+m]=t[m];for(l=0;l<o;l+=3)i[l+o]=i[l+2]+f,i[l+1+o]=i[l+1]+f,i[l+2+o]=i[l]+f;for(u=0;u<h;u++)s[h+u]=-s[u];const _=r.length;let E=0;for(E=0;E<_;E++)r[E+_]=r[E];for(n=n||new Ce(0,0,1,1),a=a||new Ce(0,0,1,1),E=0,l=0;l<_/2;l++)r[E]=n.x+(n.z-n.x)*r[E],r[E+1]=n.y+(n.w-n.y)*r[E+1],r[E+_]=a.x+(a.z-a.x)*r[E+_],r[E+_+1]=a.y+(a.w-a.y)*r[E+_+1],E+=2;break}}}static ImportVertexData(e,t){const i=new ee,s=e.positions;s&&i.set(s,g.PositionKind);const r=e.normals;r&&i.set(r,g.NormalKind);const n=e.tangents;n&&i.set(n,g.TangentKind);const a=e.uvs;a&&i.set(a,g.UVKind);const o=e.uv2s;o&&i.set(o,g.UV2Kind);const h=e.uv3s;h&&i.set(h,g.UV3Kind);const l=e.uv4s;l&&i.set(l,g.UV4Kind);const u=e.uv5s;u&&i.set(u,g.UV5Kind);const d=e.uv6s;d&&i.set(d,g.UV6Kind);const f=e.colors;f&&i.set(me.CheckColors4(f,s.length/3),g.ColorKind);const _=e.matricesIndices;_&&i.set(_,g.MatricesIndicesKind);const E=e.matricesWeights;E&&i.set(E,g.MatricesWeightsKind);const m=e.indices;m&&(i.indices=m),t.setAllVerticesData(i,e.updatable)}}ee.FRONTSIDE=0,ee.BACKSIDE=1,ee.DOUBLESIDE=2,ee.DEFAULTSIDE=0,T([$t.filter((...[c])=>!Array.isArray(c))],ee,"_TransformVector3Coordinates",null),T([$t.filter((...[c])=>!Array.isArray(c))],ee,"_TransformVector3Normals",null),T([$t.filter((...[c])=>!Array.isArray(c))],ee,"_TransformVector4Normals",null),T([$t.filter((...[c])=>!Array.isArray(c))],ee,"_FlipFaces",null);class Ds{constructor(e,t,i){this.bu=e,this.bv=t,this.distance=i,this.faceId=0,this.subMeshId=0}}class kt{constructor(e,t,i){this.vectors=Be.BuildArray(8,p.Zero),this.center=p.Zero(),this.centerWorld=p.Zero(),this.extendSize=p.Zero(),this.extendSizeWorld=p.Zero(),this.directions=Be.BuildArray(3,p.Zero),this.vectorsWorld=Be.BuildArray(8,p.Zero),this.minimumWorld=p.Zero(),this.maximumWorld=p.Zero(),this.minimum=p.Zero(),this.maximum=p.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(e,t,i)}reConstruct(e,t,i){const s=e.x,r=e.y,n=e.z,a=t.x,o=t.y,h=t.z,l=this.vectors;this.minimum.copyFromFloats(s,r,n),this.maximum.copyFromFloats(a,o,h),l[0].copyFromFloats(s,r,n),l[1].copyFromFloats(a,o,h),l[2].copyFromFloats(a,r,n),l[3].copyFromFloats(s,o,n),l[4].copyFromFloats(s,r,h),l[5].copyFromFloats(a,o,n),l[6].copyFromFloats(s,o,h),l[7].copyFromFloats(a,r,h),t.addToRef(e,this.center).scaleInPlace(.5),t.subtractToRef(e,this.extendSize).scaleInPlace(.5),this._worldMatrix=i||x.IdentityReadOnly,this._update(this._worldMatrix)}scale(e){const t=kt._TmpVector3,i=this.maximum.subtractToRef(this.minimum,t[0]),s=i.length();i.normalizeFromLength(s);const r=s*e,n=i.scaleInPlace(r*.5),a=this.center.subtractToRef(n,t[1]),o=this.center.addToRef(n,t[2]);return this.reConstruct(a,o,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(e){const t=this.minimumWorld,i=this.maximumWorld,s=this.directions,r=this.vectorsWorld,n=this.vectors;if(e.isIdentity()){t.copyFrom(this.minimum),i.copyFrom(this.maximum);for(let a=0;a<8;++a)r[a].copyFrom(n[a]);this.extendSizeWorld.copyFrom(this.extendSize),this.centerWorld.copyFrom(this.center)}else{t.setAll(Number.MAX_VALUE),i.setAll(-Number.MAX_VALUE);for(let a=0;a<8;++a){const o=r[a];p.TransformCoordinatesToRef(n[a],e,o),t.minimizeInPlace(o),i.maximizeInPlace(o)}i.subtractToRef(t,this.extendSizeWorld).scaleInPlace(.5),i.addToRef(t,this.centerWorld).scaleInPlace(.5)}p.FromArrayToRef(e.m,0,s[0]),p.FromArrayToRef(e.m,4,s[1]),p.FromArrayToRef(e.m,8,s[2]),this._worldMatrix=e}isInFrustum(e){return kt.IsInFrustum(this.vectorsWorld,e)}isCompletelyInFrustum(e){return kt.IsCompletelyInFrustum(this.vectorsWorld,e)}intersectsPoint(e){const t=this.minimumWorld,i=this.maximumWorld,s=t.x,r=t.y,n=t.z,a=i.x,o=i.y,h=i.z,l=e.x,u=e.y,d=e.z,f=-xe;return!(a-l<f||f>l-s||o-u<f||f>u-r||h-d<f||f>d-n)}intersectsSphere(e){return kt.IntersectsSphere(this.minimumWorld,this.maximumWorld,e.centerWorld,e.radiusWorld)}intersectsMinMax(e,t){const i=this.minimumWorld,s=this.maximumWorld,r=i.x,n=i.y,a=i.z,o=s.x,h=s.y,l=s.z,u=e.x,d=e.y,f=e.z,_=t.x,E=t.y,m=t.z;return!(o<u||r>_||h<d||n>E||l<f||a>m)}dispose(){var e,t;(e=this._drawWrapperFront)===null||e===void 0||e.dispose(),(t=this._drawWrapperBack)===null||t===void 0||t.dispose()}static Intersects(e,t){return e.intersectsMinMax(t.minimumWorld,t.maximumWorld)}static IntersectsSphere(e,t,i,s){const r=kt._TmpVector3[0];return p.ClampToRef(i,e,t,r),p.DistanceSquared(i,r)<=s*s}static IsCompletelyInFrustum(e,t){for(let i=0;i<6;++i){const s=t[i];for(let r=0;r<8;++r)if(s.dotCoordinate(e[r])<0)return!1}return!0}static IsInFrustum(e,t){for(let i=0;i<6;++i){let s=!0;const r=t[i];for(let n=0;n<8;++n)if(r.dotCoordinate(e[n])>=0){s=!1;break}if(s)return!1}return!0}}kt._TmpVector3=Be.BuildArray(3,p.Zero);class fi{constructor(e,t,i){this.center=p.Zero(),this.centerWorld=p.Zero(),this.minimum=p.Zero(),this.maximum=p.Zero(),this.reConstruct(e,t,i)}reConstruct(e,t,i){this.minimum.copyFrom(e),this.maximum.copyFrom(t);const s=p.Distance(e,t);t.addToRef(e,this.center).scaleInPlace(.5),this.radius=s*.5,this._update(i||x.IdentityReadOnly)}scale(e){const t=this.radius*e,i=fi._TmpVector3,s=i[0].setAll(t),r=this.center.subtractToRef(s,i[1]),n=this.center.addToRef(s,i[2]);return this.reConstruct(r,n,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(e){if(e.isIdentity())this.centerWorld.copyFrom(this.center),this.radiusWorld=this.radius;else{p.TransformCoordinatesToRef(this.center,e,this.centerWorld);const t=fi._TmpVector3[0];p.TransformNormalFromFloatsToRef(1,1,1,e,t),this.radiusWorld=Math.max(Math.abs(t.x),Math.abs(t.y),Math.abs(t.z))*this.radius}}isInFrustum(e){const t=this.centerWorld,i=this.radiusWorld;for(let s=0;s<6;s++)if(e[s].dotCoordinate(t)<=-i)return!1;return!0}isCenterInFrustum(e){const t=this.centerWorld;for(let i=0;i<6;i++)if(e[i].dotCoordinate(t)<0)return!1;return!0}intersectsPoint(e){const t=p.DistanceSquared(this.centerWorld,e);return!(this.radiusWorld*this.radiusWorld<t)}static Intersects(e,t){const i=p.DistanceSquared(e.centerWorld,t.centerWorld),s=e.radiusWorld+t.radiusWorld;return!(s*s<i)}static CreateFromCenterAndRadius(e,t,i){this._TmpVector3[0].copyFrom(e),this._TmpVector3[1].copyFromFloats(0,0,t),this._TmpVector3[2].copyFrom(e),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].subtractInPlace(this._TmpVector3[1]);const s=new fi(this._TmpVector3[0],this._TmpVector3[2]);return i?s._worldMatrix=i:s._worldMatrix=x.Identity(),s}}fi._TmpVector3=Be.BuildArray(3,p.Zero);const Fs={min:0,max:0},ws={min:0,max:0},Rr=(c,e,t)=>{const i=p.Dot(e.centerWorld,c),s=Math.abs(p.Dot(e.directions[0],c))*e.extendSize.x,r=Math.abs(p.Dot(e.directions[1],c))*e.extendSize.y,n=Math.abs(p.Dot(e.directions[2],c))*e.extendSize.z,a=s+r+n;t.min=i-a,t.max=i+a},rt=(c,e,t)=>(Rr(c,e,Fs),Rr(c,t,ws),!(Fs.min>ws.max||ws.min>Fs.max));class dt{constructor(e,t,i){this._isLocked=!1,this.boundingBox=new kt(e,t,i),this.boundingSphere=new fi(e,t,i)}reConstruct(e,t,i){this.boundingBox.reConstruct(e,t,i),this.boundingSphere.reConstruct(e,t,i)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(e){this._isLocked=e}update(e){this._isLocked||(this.boundingBox._update(e),this.boundingSphere._update(e))}centerOn(e,t){const i=dt._TmpVector3[0].copyFrom(e).subtractInPlace(t),s=dt._TmpVector3[1].copyFrom(e).addInPlace(t);return this.boundingBox.reConstruct(i,s,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(i,s,this.boundingBox.getWorldMatrix()),this}encapsulate(e){const t=p.Minimize(this.minimum,e),i=p.Maximize(this.maximum,e);return this.reConstruct(t,i,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(e){return this.encapsulate(e.boundingBox.centerWorld.subtract(e.boundingBox.extendSizeWorld)),this.encapsulate(e.boundingBox.centerWorld.add(e.boundingBox.extendSizeWorld)),this}scale(e){return this.boundingBox.scale(e),this.boundingSphere.scale(e),this}isInFrustum(e,t=0){return(t===2||t===3)&&this.boundingSphere.isCenterInFrustum(e)?!0:this.boundingSphere.isInFrustum(e)?t===1||t===3?!0:this.boundingBox.isInFrustum(e):!1}get diagonalLength(){const e=this.boundingBox;return e.maximumWorld.subtractToRef(e.minimumWorld,dt._TmpVector3[0]).length()}isCompletelyInFrustum(e){return this.boundingBox.isCompletelyInFrustum(e)}_checkCollision(e){return e._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(e){return!(!this.boundingSphere.centerWorld||!this.boundingSphere.intersectsPoint(e)||!this.boundingBox.intersectsPoint(e))}intersects(e,t){if(!fi.Intersects(this.boundingSphere,e.boundingSphere)||!kt.Intersects(this.boundingBox,e.boundingBox))return!1;if(!t)return!0;const i=this.boundingBox,s=e.boundingBox;return!(!rt(i.directions[0],i,s)||!rt(i.directions[1],i,s)||!rt(i.directions[2],i,s)||!rt(s.directions[0],i,s)||!rt(s.directions[1],i,s)||!rt(s.directions[2],i,s)||!rt(p.Cross(i.directions[0],s.directions[0]),i,s)||!rt(p.Cross(i.directions[0],s.directions[1]),i,s)||!rt(p.Cross(i.directions[0],s.directions[2]),i,s)||!rt(p.Cross(i.directions[1],s.directions[0]),i,s)||!rt(p.Cross(i.directions[1],s.directions[1]),i,s)||!rt(p.Cross(i.directions[1],s.directions[2]),i,s)||!rt(p.Cross(i.directions[2],s.directions[0]),i,s)||!rt(p.Cross(i.directions[2],s.directions[1]),i,s)||!rt(p.Cross(i.directions[2],s.directions[2]),i,s))}}dt._TmpVector3=Be.BuildArray(2,p.Zero);class is{static extractMinAndMaxIndexed(e,t,i,s,r,n){for(let a=i;a<i+s;a++){const o=t[a]*3,h=e[o],l=e[o+1],u=e[o+2];r.minimizeInPlaceFromFloats(h,l,u),n.maximizeInPlaceFromFloats(h,l,u)}}static extractMinAndMax(e,t,i,s,r,n){for(let a=t,o=t*s;a<t+i;a++,o+=s){const h=e[o],l=e[o+1],u=e[o+2];r.minimizeInPlaceFromFloats(h,l,u),n.maximizeInPlaceFromFloats(h,l,u)}}}T([$t.filter((...[c,e])=>!Array.isArray(c)&&!Array.isArray(e))],is,"extractMinAndMaxIndexed",null),T([$t.filter((...[c])=>!Array.isArray(c))],is,"extractMinAndMax",null);function Bn(c,e,t,i,s=null){const r=new p(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),n=new p(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return is.extractMinAndMaxIndexed(c,e,t,i,r,n),s&&(r.x-=r.x*s.x+s.y,r.y-=r.y*s.x+s.y,r.z-=r.z*s.x+s.y,n.x+=n.x*s.x+s.y,n.y+=n.y*s.x+s.y,n.z+=n.z*s.x+s.y),{minimum:r,maximum:n}}function yr(c,e,t,i=null,s){const r=new p(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),n=new p(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return s||(s=3),is.extractMinAndMax(c,e,t,s,r,n),i&&(r.x-=r.x*i.x+i.y,r.y-=r.y*i.x+i.y,r.z-=r.z*i.x+i.y,n.x+=n.x*i.x+i.y,n.y+=n.y*i.x+i.y,n.z+=n.z*i.x+i.y),{minimum:r,maximum:n}}class vt{constructor(e,t,i,s,r,n,a,o=!0,h=!0){this.materialIndex=e,this.verticesStart=t,this.verticesCount=i,this.indexStart=s,this.indexCount=r,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=n,this._renderingMesh=a||n,h&&n.subMeshes.push(this),this._engine=this._mesh.getScene().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=n.subMeshes.length-1,o&&(this.refreshBoundingInfo(),n.computeWorldMatrix(!0))}get materialDefines(){var e;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:(e=this._getDrawWrapper())===null||e===void 0?void 0:e.defines}set materialDefines(e){var t;const i=(t=this._mainDrawWrapperOverride)!==null&&t!==void 0?t:this._getDrawWrapper(void 0,!0);i.defines=e}_getDrawWrapper(e,t=!1){e=e??this._engine.currentRenderPassId;let i=this._drawWrappers[e];return!i&&t&&(this._drawWrappers[e]=i=new mi(this._mesh.getScene().getEngine())),i}_removeDrawWrapper(e,t=!0){var i;t&&((i=this._drawWrappers[e])===null||i===void 0||i.dispose()),this._drawWrappers[e]=void 0}get effect(){var e,t;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(t=(e=this._getDrawWrapper())===null||e===void 0?void 0:e.effect)!==null&&t!==void 0?t:null}get _drawWrapper(){var e;return(e=this._mainDrawWrapperOverride)!==null&&e!==void 0?e:this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(e){this._mainDrawWrapperOverride=e}setEffect(e,t=null,i,s=!0){const r=this._drawWrapper;r.setEffect(e,t,s),i!==void 0&&(r.materialContext=i),e||(r.defines=null,r.materialContext=void 0)}resetDrawCache(e){if(this._drawWrappers)if(e!==void 0){this._removeDrawWrapper(e);return}else for(const t of this._drawWrappers)t==null||t.dispose();this._drawWrappers=[]}static AddToMesh(e,t,i,s,r,n,a,o=!0){return new vt(e,t,i,s,r,n,a,o)}get IsGlobal(){return this.verticesStart===0&&this.verticesCount===this._mesh.getTotalVertices()&&this.indexStart===0&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(e){return this._boundingInfo=e,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const e=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return e||this._renderingMesh}getMaterial(e=!0){var t;const i=(t=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId))!==null&&t!==void 0?t:this._renderingMesh.material;if(i){if(this._isMultiMaterial(i)){const s=i.getSubMaterial(this.materialIndex);return this._currentMaterial!==s&&(this._currentMaterial=s,this.resetDrawCache()),s}}else return e?this._mesh.getScene().defaultMaterial:null;return i}_isMultiMaterial(e){return e.getSubMaterial!==void 0}refreshBoundingInfo(e=null){if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.geometry)return this;if(e||(e=this._renderingMesh.getVerticesData(g.PositionKind)),!e)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const t=this._renderingMesh.getIndices();let i;if(this.indexStart===0&&this.indexCount===t.length){const s=this._renderingMesh.getBoundingInfo();i={minimum:s.minimum.clone(),maximum:s.maximum.clone()}}else i=Bn(e,t,this.indexStart,this.indexCount,this._renderingMesh.geometry.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(i.minimum,i.maximum):this._boundingInfo=new dt(i.minimum,i.maximum),this}_checkCollision(e){return this.getBoundingInfo()._checkCollision(e)}updateBoundingInfo(e){let t=this.getBoundingInfo();return t||(this.refreshBoundingInfo(),t=this.getBoundingInfo()),t&&t.update(e),this}isInFrustum(e){const t=this.getBoundingInfo();return t?t.isInFrustum(e,this._mesh.cullingStrategy):!1}isCompletelyInFrustum(e){const t=this.getBoundingInfo();return t?t.isCompletelyInFrustum(e):!1}render(e){return this._renderingMesh.render(this,e,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(e,t){if(!this._linesIndexBuffer){const i=[];for(let s=this.indexStart;s<this.indexStart+this.indexCount;s+=3)i.push(e[s],e[s+1],e[s+1],e[s+2],e[s+2],e[s]);this._linesIndexBuffer=t.createIndexBuffer(i),this._linesIndexCount=i.length}return this._linesIndexBuffer}canIntersects(e){const t=this.getBoundingInfo();return t?e.intersectsBox(t.boundingBox):!1}intersects(e,t,i,s,r){const n=this.getMaterial();if(!n)return null;let a=3,o=!1;switch(n.fillMode){case 3:case 5:case 6:case 8:return null;case 7:a=1,o=!0;break}return n.fillMode===4?i.length?this._intersectLines(e,t,i,this._mesh.intersectionThreshold,s):this._intersectUnIndexedLines(e,t,i,this._mesh.intersectionThreshold,s):!i.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(e,t,i,s,r):this._intersectTriangles(e,t,i,a,o,s,r)}_intersectLines(e,t,i,s,r){let n=null;for(let a=this.indexStart;a<this.indexStart+this.indexCount;a+=2){const o=t[i[a]],h=t[i[a+1]],l=e.intersectionSegment(o,h,s);if(!(l<0)&&(r||!n||l<n.distance)&&(n=new Ds(null,null,l),n.faceId=a/2,r))break}return n}_intersectUnIndexedLines(e,t,i,s,r){let n=null;for(let a=this.verticesStart;a<this.verticesStart+this.verticesCount;a+=2){const o=t[a],h=t[a+1],l=e.intersectionSegment(o,h,s);if(!(l<0)&&(r||!n||l<n.distance)&&(n=new Ds(null,null,l),n.faceId=a/2,r))break}return n}_intersectTriangles(e,t,i,s,r,n,a){let o=null,h=-1;for(let l=this.indexStart;l<this.indexStart+this.indexCount-(3-s);l+=s){h++;const u=i[l],d=i[l+1],f=i[l+2];if(r&&f===4294967295){l+=2;continue}const _=t[u],E=t[d],m=t[f];if(!_||!E||!m||a&&!a(_,E,m,e,u,d,f))continue;const v=e.intersectsTriangle(_,E,m);if(v){if(v.distance<0)continue;if((n||!o||v.distance<o.distance)&&(o=v,o.faceId=h,n))break}}return o}_intersectUnIndexedTriangles(e,t,i,s,r){let n=null;for(let a=this.verticesStart;a<this.verticesStart+this.verticesCount;a+=3){const o=t[a],h=t[a+1],l=t[a+2];if(r&&!r(o,h,l,e,-1,-1,-1))continue;const u=e.intersectsTriangle(o,h,l);if(u){if(u.distance<0)continue;if((s||!n||u.distance<n.distance)&&(n=u,n.faceId=a/3,s))break}}return n}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(e,t){const i=new vt(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,e,t,!1);if(!this.IsGlobal){const s=this.getBoundingInfo();if(!s)return i;i._boundingInfo=new dt(s.minimum,s.maximum)}return i}dispose(){this._linesIndexBuffer&&(this._mesh.getScene().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const e=this._mesh.subMeshes.indexOf(this);this._mesh.subMeshes.splice(e,1),this.resetDrawCache()}getClassName(){return"SubMesh"}static CreateFromIndices(e,t,i,s,r,n=!0){let a=Number.MAX_VALUE,o=-Number.MAX_VALUE;const l=(r||s).getIndices();for(let u=t;u<t+i;u++){const d=l[u];d<a&&(a=d),d>o&&(o=d)}return new vt(e,a,o-a+1,t,i,s,r,n)}}class Oe{static get ForceFullSceneLoadingForIncremental(){return Oe._ForceFullSceneLoadingForIncremental}static set ForceFullSceneLoadingForIncremental(e){Oe._ForceFullSceneLoadingForIncremental=e}static get ShowLoadingScreen(){return Oe._ShowLoadingScreen}static set ShowLoadingScreen(e){Oe._ShowLoadingScreen=e}static get loggingLevel(){return Oe._LoggingLevel}static set loggingLevel(e){Oe._LoggingLevel=e}static get CleanBoneMatrixWeights(){return Oe._CleanBoneMatrixWeights}static set CleanBoneMatrixWeights(e){Oe._CleanBoneMatrixWeights=e}}Oe._ForceFullSceneLoadingForIncremental=!1,Oe._ShowLoadingScreen=!0,Oe._CleanBoneMatrixWeights=!1,Oe._LoggingLevel=0;class ft{}ft.UseOpenGLOrientationForUV=!1;class at{constructor(e,t,i,s=!1,r=null){this.delayLoadState=0,this._totalVertices=0,this._isDisposed=!1,this._indexBufferIsUpdatable=!1,this._positionsCache=[],this._parentContainer=null,this.useBoundingInfoFromGeometry=!1,this._scene=t||fe.LastCreatedScene,this._scene&&(this.id=e,this.uniqueId=this._scene.getUniqueId(),this._engine=this._scene.getEngine(),this._meshes=[],this._vertexBuffers={},this._indices=[],this._updatable=s,i?this.setAllVerticesData(i,s):this._totalVertices=0,this._engine.getCaps().vertexArrayObject&&(this._vertexArrayObjects={}),r&&(this.applyToMesh(r),r.computeWorldMatrix(!0)))}get boundingBias(){return this._boundingBias}set boundingBias(e){this._boundingBias?this._boundingBias.copyFrom(e):this._boundingBias=e.clone(),this._updateBoundingInfo(!0,null)}static CreateGeometryForMesh(e){const t=new at(at.RandomId(),e.getScene());return t.applyToMesh(e),t}get meshes(){return this._meshes}get extend(){return this._extend}getScene(){return this._scene}getEngine(){return this._engine}isReady(){return this.delayLoadState===1||this.delayLoadState===0}get doNotSerialize(){for(let e=0;e<this._meshes.length;e++)if(!this._meshes[e].doNotSerialize)return!1;return!0}_rebuild(){this._vertexArrayObjects&&(this._vertexArrayObjects={}),this._meshes.length!==0&&this._indices&&(this._indexBuffer=this._engine.createIndexBuffer(this._indices,this._updatable));for(const e in this._vertexBuffers)this._vertexBuffers[e]._rebuild()}setAllVerticesData(e,t){e.applyToGeometry(this,t),this._notifyUpdate()}setVerticesData(e,t,i=!1,s){i&&Array.isArray(t)&&(t=new Float32Array(t));const r=new g(this._engine,t,e,i,this._meshes.length===0,s);this.setVerticesBuffer(r)}removeVerticesData(e){this._vertexBuffers[e]&&(this._vertexBuffers[e].dispose(),delete this._vertexBuffers[e]),this._vertexArrayObjects&&this._disposeVertexArrayObjects()}setVerticesBuffer(e,t=null,i=!0){const s=e.getKind();this._vertexBuffers[s]&&i&&this._vertexBuffers[s].dispose(),e._buffer&&e._buffer._increaseReferences(),this._vertexBuffers[s]=e;const r=this._meshes,n=r.length;if(s===g.PositionKind){const a=e.getData();t!=null?this._totalVertices=t:a!=null&&(this._totalVertices=a.length/(e.type===g.BYTE?e.byteStride:e.byteStride/4)),this._updateExtend(a),this._resetPointsArrayCache();for(let o=0;o<n;o++){const h=r[o];h.buildBoundingInfo(this._extend.minimum,this._extend.maximum),h._createGlobalSubMesh(h.isUnIndexed),h.computeWorldMatrix(!0),h.synchronizeInstances()}}this._notifyUpdate(s)}updateVerticesDataDirectly(e,t,i,s=!1){const r=this.getVertexBuffer(e);r&&(r.updateDirectly(t,i,s),this._notifyUpdate(e))}updateVerticesData(e,t,i=!1){const s=this.getVertexBuffer(e);s&&(s.update(t),e===g.PositionKind&&this._updateBoundingInfo(i,t),this._notifyUpdate(e))}_updateBoundingInfo(e,t){if(e&&this._updateExtend(t),this._resetPointsArrayCache(),e){const i=this._meshes;for(const s of i){s.hasBoundingInfo?s.getBoundingInfo().reConstruct(this._extend.minimum,this._extend.maximum):s.buildBoundingInfo(this._extend.minimum,this._extend.maximum);const r=s.subMeshes;for(const n of r)n.refreshBoundingInfo()}}}_bind(e,t,i,s){if(!e)return;t===void 0&&(t=this._indexBuffer);const r=this.getVertexBuffers();if(!r)return;if(t!=this._indexBuffer||!this._vertexArrayObjects&&!s){this._engine.bindBuffers(r,t,e,i);return}const n=s||this._vertexArrayObjects;n[e.key]||(n[e.key]=this._engine.recordVertexArrayObject(r,t,e,i)),this._engine.bindVertexArrayObject(n[e.key],t)}getTotalVertices(){return this.isReady()?this._totalVertices:0}getVerticesData(e,t,i){const s=this.getVertexBuffer(e);return s?s.getFloatData(this._totalVertices,i||t&&this._meshes.length!==1):null}isVertexBufferUpdatable(e){const t=this._vertexBuffers[e];return t?t.isUpdatable():!1}getVertexBuffer(e){return this.isReady()?this._vertexBuffers[e]:null}getVertexBuffers(){return this.isReady()?this._vertexBuffers:null}isVerticesDataPresent(e){return this._vertexBuffers?this._vertexBuffers[e]!==void 0:this._delayInfo?this._delayInfo.indexOf(e)!==-1:!1}getVerticesDataKinds(){const e=[];let t;if(!this._vertexBuffers&&this._delayInfo)for(t in this._delayInfo)e.push(t);else for(t in this._vertexBuffers)e.push(t);return e}updateIndices(e,t,i=!1){if(this._indexBuffer)if(!this._indexBufferIsUpdatable)this.setIndices(e,null,!0);else{const s=e.length!==this._indices.length;if(i||(this._indices=e.slice()),this._engine.updateDynamicIndexBuffer(this._indexBuffer,e,t),s)for(const r of this._meshes)r._createGlobalSubMesh(!0)}}setIndices(e,t=null,i=!1){this._indexBuffer&&this._engine._releaseBuffer(this._indexBuffer),this._indices=e,this._indexBufferIsUpdatable=i,this._meshes.length!==0&&this._indices&&(this._indexBuffer=this._engine.createIndexBuffer(this._indices,i)),t!=null&&(this._totalVertices=t);for(const s of this._meshes)s._createGlobalSubMesh(!0),s.synchronizeInstances();this._notifyUpdate()}getTotalIndices(){return this.isReady()?this._indices.length:0}getIndices(e,t){if(!this.isReady())return null;const i=this._indices;return!t&&(!e||this._meshes.length===1)?i:i.slice()}getIndexBuffer(){return this.isReady()?this._indexBuffer:null}_releaseVertexArrayObject(e=null){!e||!this._vertexArrayObjects||this._vertexArrayObjects[e.key]&&(this._engine.releaseVertexArrayObject(this._vertexArrayObjects[e.key]),delete this._vertexArrayObjects[e.key])}releaseForMesh(e,t){const i=this._meshes,s=i.indexOf(e);s!==-1&&(i.splice(s,1),this._vertexArrayObjects&&e._invalidateInstanceVertexArrayObject(),e._geometry=null,i.length===0&&t&&this.dispose())}applyToMesh(e){if(e._geometry===this)return;const t=e._geometry;t&&t.releaseForMesh(e),this._vertexArrayObjects&&e._invalidateInstanceVertexArrayObject();const i=this._meshes;e._geometry=this,e._internalAbstractMeshDataInfo._positions=null,this._scene.pushGeometry(this),i.push(e),this.isReady()?this._applyToMesh(e):this._boundingInfo&&e.setBoundingInfo(this._boundingInfo)}_updateExtend(e=null){if(this.useBoundingInfoFromGeometry&&this._boundingInfo)this._extend={minimum:this._boundingInfo.minimum.clone(),maximum:this._boundingInfo.maximum.clone()};else{if(!e&&(e=this.getVerticesData(g.PositionKind),!e))return;this._extend=yr(e,0,this._totalVertices,this.boundingBias,3)}}_applyToMesh(e){const t=this._meshes.length;for(const i in this._vertexBuffers)t===1&&this._vertexBuffers[i].create(),i===g.PositionKind&&(this._extend||this._updateExtend(),e.buildBoundingInfo(this._extend.minimum,this._extend.maximum),e._createGlobalSubMesh(e.isUnIndexed),e._updateBoundingInfo());t===1&&this._indices&&this._indices.length>0&&(this._indexBuffer=this._engine.createIndexBuffer(this._indices,this._updatable)),e._syncGeometryWithMorphTargetManager(),e.synchronizeInstances()}_notifyUpdate(e){this.onGeometryUpdated&&this.onGeometryUpdated(this,e),this._vertexArrayObjects&&this._disposeVertexArrayObjects();for(const t of this._meshes)t._markSubMeshesAsAttributesDirty()}load(e,t){if(this.delayLoadState!==2){if(this.isReady()){t&&t();return}this.delayLoadState=2,this._queueLoad(e,t)}}_queueLoad(e,t){this.delayLoadingFile&&(e.addPendingData(this),e._loadFile(this.delayLoadingFile,i=>{if(!this._delayLoadingFunction)return;this._delayLoadingFunction(JSON.parse(i),this),this.delayLoadState=1,this._delayInfo=[],e.removePendingData(this);const s=this._meshes,r=s.length;for(let n=0;n<r;n++)this._applyToMesh(s[n]);t&&t()},void 0,!0))}toLeftHanded(){const e=this.getIndices(!1);if(e!=null&&e.length>0){for(let s=0;s<e.length;s+=3){const r=e[s+0];e[s+0]=e[s+2],e[s+2]=r}this.setIndices(e)}const t=this.getVerticesData(g.PositionKind,!1);if(t!=null&&t.length>0){for(let s=0;s<t.length;s+=3)t[s+2]=-t[s+2];this.setVerticesData(g.PositionKind,t,!1)}const i=this.getVerticesData(g.NormalKind,!1);if(i!=null&&i.length>0){for(let s=0;s<i.length;s+=3)i[s+2]=-i[s+2];this.setVerticesData(g.NormalKind,i,!1)}}_resetPointsArrayCache(){this._positions=null}_generatePointsArray(){if(this._positions)return!0;const e=this.getVerticesData(g.PositionKind);if(!e||e.length===0)return!1;for(let t=this._positionsCache.length*3,i=this._positionsCache.length;t<e.length;t+=3,++i)this._positionsCache[i]=p.FromArray(e,t);for(let t=0,i=0;t<e.length;t+=3,++i)this._positionsCache[i].set(e[0+t],e[1+t],e[2+t]);return this._positionsCache.length=e.length/3,this._positions=this._positionsCache,!0}isDisposed(){return this._isDisposed}_disposeVertexArrayObjects(){if(this._vertexArrayObjects){for(const i in this._vertexArrayObjects)this._engine.releaseVertexArrayObject(this._vertexArrayObjects[i]);this._vertexArrayObjects={};const e=this._meshes,t=e.length;for(let i=0;i<t;i++)e[i]._invalidateInstanceVertexArrayObject()}}dispose(){const e=this._meshes,t=e.length;let i;for(i=0;i<t;i++)this.releaseForMesh(e[i]);this._meshes.length=0,this._disposeVertexArrayObjects();for(const s in this._vertexBuffers)this._vertexBuffers[s].dispose();if(this._vertexBuffers={},this._totalVertices=0,this._indexBuffer&&this._engine._releaseBuffer(this._indexBuffer),this._indexBuffer=null,this._indices=[],this.delayLoadState=0,this.delayLoadingFile=null,this._delayLoadingFunction=null,this._delayInfo=[],this._boundingInfo=null,this._scene.removeGeometry(this),this._parentContainer){const s=this._parentContainer.geometries.indexOf(this);s>-1&&this._parentContainer.geometries.splice(s,1),this._parentContainer=null}this._isDisposed=!0}copy(e){const t=new ee;t.indices=[];const i=this.getIndices();if(i)for(let o=0;o<i.length;o++)t.indices.push(i[o]);let s=!1,r=!1,n;for(n in this._vertexBuffers){const o=this.getVerticesData(n);if(o&&(o instanceof Float32Array?t.set(new Float32Array(o),n):t.set(o.slice(0),n),!r)){const h=this.getVertexBuffer(n);h&&(s=h.isUpdatable(),r=!s)}}const a=new at(e,this._scene,t,s);a.delayLoadState=this.delayLoadState,a.delayLoadingFile=this.delayLoadingFile,a._delayLoadingFunction=this._delayLoadingFunction;for(n in this._delayInfo)a._delayInfo=a._delayInfo||[],a._delayInfo.push(n);return a._boundingInfo=new dt(this._extend.minimum,this._extend.maximum),a}serialize(){const e={};return e.id=this.id,e.uniqueId=this.uniqueId,e.updatable=this._updatable,ge&&ge.HasTags(this)&&(e.tags=ge.GetTags(this)),e}_toNumberArray(e){return Array.isArray(e)?e:Array.prototype.slice.call(e)}clearCachedData(){this._indices=[],this._resetPointsArrayCache();for(const e in this._vertexBuffers)Object.prototype.hasOwnProperty.call(this._vertexBuffers,e)&&(this._vertexBuffers[e]._buffer._data=null)}serializeVerticeData(){const e=this.serialize();return this.isVerticesDataPresent(g.PositionKind)&&(e.positions=this._toNumberArray(this.getVerticesData(g.PositionKind)),this.isVertexBufferUpdatable(g.PositionKind)&&(e.positions._updatable=!0)),this.isVerticesDataPresent(g.NormalKind)&&(e.normals=this._toNumberArray(this.getVerticesData(g.NormalKind)),this.isVertexBufferUpdatable(g.NormalKind)&&(e.normals._updatable=!0)),this.isVerticesDataPresent(g.TangentKind)&&(e.tangents=this._toNumberArray(this.getVerticesData(g.TangentKind)),this.isVertexBufferUpdatable(g.TangentKind)&&(e.tangents._updatable=!0)),this.isVerticesDataPresent(g.UVKind)&&(e.uvs=this._toNumberArray(this.getVerticesData(g.UVKind)),this.isVertexBufferUpdatable(g.UVKind)&&(e.uvs._updatable=!0)),this.isVerticesDataPresent(g.UV2Kind)&&(e.uv2s=this._toNumberArray(this.getVerticesData(g.UV2Kind)),this.isVertexBufferUpdatable(g.UV2Kind)&&(e.uv2s._updatable=!0)),this.isVerticesDataPresent(g.UV3Kind)&&(e.uv3s=this._toNumberArray(this.getVerticesData(g.UV3Kind)),this.isVertexBufferUpdatable(g.UV3Kind)&&(e.uv3s._updatable=!0)),this.isVerticesDataPresent(g.UV4Kind)&&(e.uv4s=this._toNumberArray(this.getVerticesData(g.UV4Kind)),this.isVertexBufferUpdatable(g.UV4Kind)&&(e.uv4s._updatable=!0)),this.isVerticesDataPresent(g.UV5Kind)&&(e.uv5s=this._toNumberArray(this.getVerticesData(g.UV5Kind)),this.isVertexBufferUpdatable(g.UV5Kind)&&(e.uv5s._updatable=!0)),this.isVerticesDataPresent(g.UV6Kind)&&(e.uv6s=this._toNumberArray(this.getVerticesData(g.UV6Kind)),this.isVertexBufferUpdatable(g.UV6Kind)&&(e.uv6s._updatable=!0)),this.isVerticesDataPresent(g.ColorKind)&&(e.colors=this._toNumberArray(this.getVerticesData(g.ColorKind)),this.isVertexBufferUpdatable(g.ColorKind)&&(e.colors._updatable=!0)),this.isVerticesDataPresent(g.MatricesIndicesKind)&&(e.matricesIndices=this._toNumberArray(this.getVerticesData(g.MatricesIndicesKind)),e.matricesIndices._isExpanded=!0,this.isVertexBufferUpdatable(g.MatricesIndicesKind)&&(e.matricesIndices._updatable=!0)),this.isVerticesDataPresent(g.MatricesWeightsKind)&&(e.matricesWeights=this._toNumberArray(this.getVerticesData(g.MatricesWeightsKind)),this.isVertexBufferUpdatable(g.MatricesWeightsKind)&&(e.matricesWeights._updatable=!0)),e.indices=this._toNumberArray(this.getIndices()),e}static ExtractFromMesh(e,t){const i=e._geometry;return i?i.copy(t):null}static RandomId(){return H.RandomId()}static _GetGeometryByLoadedUniqueId(e,t){for(let i=0;i<t.geometries.length;i++)if(t.geometries[i]._loadedUniqueId===e)return t.geometries[i];return null}static _ImportGeometry(e,t){const i=t.getScene(),s=e.geometryUniqueId,r=e.geometryId;if(s||r){const n=s?this._GetGeometryByLoadedUniqueId(s,i):i.getGeometryById(r);n&&n.applyToMesh(t)}else if(e instanceof ArrayBuffer){const n=t._binaryInfo;if(n.positionsAttrDesc&&n.positionsAttrDesc.count>0){const a=new Float32Array(e,n.positionsAttrDesc.offset,n.positionsAttrDesc.count);t.setVerticesData(g.PositionKind,a,!1)}if(n.normalsAttrDesc&&n.normalsAttrDesc.count>0){const a=new Float32Array(e,n.normalsAttrDesc.offset,n.normalsAttrDesc.count);t.setVerticesData(g.NormalKind,a,!1)}if(n.tangetsAttrDesc&&n.tangetsAttrDesc.count>0){const a=new Float32Array(e,n.tangetsAttrDesc.offset,n.tangetsAttrDesc.count);t.setVerticesData(g.TangentKind,a,!1)}if(n.uvsAttrDesc&&n.uvsAttrDesc.count>0){const a=new Float32Array(e,n.uvsAttrDesc.offset,n.uvsAttrDesc.count);if(ft.UseOpenGLOrientationForUV)for(let o=1;o<a.length;o+=2)a[o]=1-a[o];t.setVerticesData(g.UVKind,a,!1)}if(n.uvs2AttrDesc&&n.uvs2AttrDesc.count>0){const a=new Float32Array(e,n.uvs2AttrDesc.offset,n.uvs2AttrDesc.count);if(ft.UseOpenGLOrientationForUV)for(let o=1;o<a.length;o+=2)a[o]=1-a[o];t.setVerticesData(g.UV2Kind,a,!1)}if(n.uvs3AttrDesc&&n.uvs3AttrDesc.count>0){const a=new Float32Array(e,n.uvs3AttrDesc.offset,n.uvs3AttrDesc.count);if(ft.UseOpenGLOrientationForUV)for(let o=1;o<a.length;o+=2)a[o]=1-a[o];t.setVerticesData(g.UV3Kind,a,!1)}if(n.uvs4AttrDesc&&n.uvs4AttrDesc.count>0){const a=new Float32Array(e,n.uvs4AttrDesc.offset,n.uvs4AttrDesc.count);if(ft.UseOpenGLOrientationForUV)for(let o=1;o<a.length;o+=2)a[o]=1-a[o];t.setVerticesData(g.UV4Kind,a,!1)}if(n.uvs5AttrDesc&&n.uvs5AttrDesc.count>0){const a=new Float32Array(e,n.uvs5AttrDesc.offset,n.uvs5AttrDesc.count);if(ft.UseOpenGLOrientationForUV)for(let o=1;o<a.length;o+=2)a[o]=1-a[o];t.setVerticesData(g.UV5Kind,a,!1)}if(n.uvs6AttrDesc&&n.uvs6AttrDesc.count>0){const a=new Float32Array(e,n.uvs6AttrDesc.offset,n.uvs6AttrDesc.count);if(ft.UseOpenGLOrientationForUV)for(let o=1;o<a.length;o+=2)a[o]=1-a[o];t.setVerticesData(g.UV6Kind,a,!1)}if(n.colorsAttrDesc&&n.colorsAttrDesc.count>0){const a=new Float32Array(e,n.colorsAttrDesc.offset,n.colorsAttrDesc.count);t.setVerticesData(g.ColorKind,a,!1,n.colorsAttrDesc.stride)}if(n.matricesIndicesAttrDesc&&n.matricesIndicesAttrDesc.count>0){const a=new Int32Array(e,n.matricesIndicesAttrDesc.offset,n.matricesIndicesAttrDesc.count),o=[];for(let h=0;h<a.length;h++){const l=a[h];o.push(l&255),o.push((l&65280)>>8),o.push((l&16711680)>>16),o.push(l>>24&255)}t.setVerticesData(g.MatricesIndicesKind,o,!1)}if(n.matricesIndicesExtraAttrDesc&&n.matricesIndicesExtraAttrDesc.count>0){const a=new Int32Array(e,n.matricesIndicesExtraAttrDesc.offset,n.matricesIndicesExtraAttrDesc.count),o=[];for(let h=0;h<a.length;h++){const l=a[h];o.push(l&255),o.push((l&65280)>>8),o.push((l&16711680)>>16),o.push(l>>24&255)}t.setVerticesData(g.MatricesIndicesExtraKind,o,!1)}if(n.matricesWeightsAttrDesc&&n.matricesWeightsAttrDesc.count>0){const a=new Float32Array(e,n.matricesWeightsAttrDesc.offset,n.matricesWeightsAttrDesc.count);t.setVerticesData(g.MatricesWeightsKind,a,!1)}if(n.indicesAttrDesc&&n.indicesAttrDesc.count>0){const a=new Int32Array(e,n.indicesAttrDesc.offset,n.indicesAttrDesc.count);t.setIndices(a,null)}if(n.subMeshesAttrDesc&&n.subMeshesAttrDesc.count>0){const a=new Int32Array(e,n.subMeshesAttrDesc.offset,n.subMeshesAttrDesc.count*5);t.subMeshes=[];for(let o=0;o<n.subMeshesAttrDesc.count;o++){const h=a[o*5+0],l=a[o*5+1],u=a[o*5+2],d=a[o*5+3],f=a[o*5+4];vt.AddToMesh(h,l,u,d,f,t)}}}else if(e.positions&&e.normals&&e.indices){if(t.setVerticesData(g.PositionKind,e.positions,e.positions._updatable),t.setVerticesData(g.NormalKind,e.normals,e.normals._updatable),e.tangents&&t.setVerticesData(g.TangentKind,e.tangents,e.tangents._updatable),e.uvs&&t.setVerticesData(g.UVKind,e.uvs,e.uvs._updatable),e.uvs2&&t.setVerticesData(g.UV2Kind,e.uvs2,e.uvs2._updatable),e.uvs3&&t.setVerticesData(g.UV3Kind,e.uvs3,e.uvs3._updatable),e.uvs4&&t.setVerticesData(g.UV4Kind,e.uvs4,e.uvs4._updatable),e.uvs5&&t.setVerticesData(g.UV5Kind,e.uvs5,e.uvs5._updatable),e.uvs6&&t.setVerticesData(g.UV6Kind,e.uvs6,e.uvs6._updatable),e.colors&&t.setVerticesData(g.ColorKind,me.CheckColors4(e.colors,e.positions.length/3),e.colors._updatable),e.matricesIndices)if(e.matricesIndices._isExpanded)delete e.matricesIndices._isExpanded,t.setVerticesData(g.MatricesIndicesKind,e.matricesIndices,e.matricesIndices._updatable);else{const n=[];for(let a=0;a<e.matricesIndices.length;a++){const o=e.matricesIndices[a];n.push(o&255),n.push((o&65280)>>8),n.push((o&16711680)>>16),n.push(o>>24&255)}t.setVerticesData(g.MatricesIndicesKind,n,e.matricesIndices._updatable)}if(e.matricesIndicesExtra)if(e.matricesIndicesExtra._isExpanded)delete e.matricesIndices._isExpanded,t.setVerticesData(g.MatricesIndicesExtraKind,e.matricesIndicesExtra,e.matricesIndicesExtra._updatable);else{const n=[];for(let a=0;a<e.matricesIndicesExtra.length;a++){const o=e.matricesIndicesExtra[a];n.push(o&255),n.push((o&65280)>>8),n.push((o&16711680)>>16),n.push(o>>24&255)}t.setVerticesData(g.MatricesIndicesExtraKind,n,e.matricesIndicesExtra._updatable)}e.matricesWeights&&(at._CleanMatricesWeights(e,t),t.setVerticesData(g.MatricesWeightsKind,e.matricesWeights,e.matricesWeights._updatable)),e.matricesWeightsExtra&&t.setVerticesData(g.MatricesWeightsExtraKind,e.matricesWeightsExtra,e.matricesWeights._updatable),t.setIndices(e.indices,null)}if(e.subMeshes){t.subMeshes=[];for(let n=0;n<e.subMeshes.length;n++){const a=e.subMeshes[n];vt.AddToMesh(a.materialIndex,a.verticesStart,a.verticesCount,a.indexStart,a.indexCount,t)}}t._shouldGenerateFlatShading&&(t.convertToFlatShadedMesh(),t._shouldGenerateFlatShading=!1),t.computeWorldMatrix(!0),i.onMeshImportedObservable.notifyObservers(t)}static _CleanMatricesWeights(e,t){if(!Oe.CleanBoneMatrixWeights)return;let s=0;if(e.skeletonId>-1){const u=t.getScene().getLastSkeletonById(e.skeletonId);if(!u)return;s=u.bones.length}else return;const r=t.getVerticesData(g.MatricesIndicesKind),n=t.getVerticesData(g.MatricesIndicesExtraKind),a=e.matricesWeights,o=e.matricesWeightsExtra,h=e.numBoneInfluencer,l=a.length;for(let u=0;u<l;u+=4){let d=0,f=-1;for(let _=0;_<4;_++){const E=a[u+_];d+=E,E<.001&&f<0&&(f=_)}if(o)for(let _=0;_<4;_++){const E=o[u+_];d+=E,E<.001&&f<0&&(f=_+4)}if((f<0||f>h-1)&&(f=h-1),d>.001){const _=1/d;for(let E=0;E<4;E++)a[u+E]*=_;if(o)for(let E=0;E<4;E++)o[u+E]*=_}else f>=4?(o[u+f-4]=1-d,n[u+f-4]=s):(a[u+f]=1-d,r[u+f]=s)}t.setVerticesData(g.MatricesIndicesKind,r),e.matricesWeightsExtra&&t.setVerticesData(g.MatricesIndicesExtraKind,n)}static Parse(e,t,i){const s=new at(e.id,t,void 0,e.updatable);return s._loadedUniqueId=e.uniqueId,ge&&ge.AddTagsTo(s,e.tags),e.delayLoadingFile?(s.delayLoadState=4,s.delayLoadingFile=i+e.delayLoadingFile,s._boundingInfo=new dt(p.FromArray(e.boundingBoxMinimum),p.FromArray(e.boundingBoxMaximum)),s._delayInfo=[],e.hasUVs&&s._delayInfo.push(g.UVKind),e.hasUVs2&&s._delayInfo.push(g.UV2Kind),e.hasUVs3&&s._delayInfo.push(g.UV3Kind),e.hasUVs4&&s._delayInfo.push(g.UV4Kind),e.hasUVs5&&s._delayInfo.push(g.UV5Kind),e.hasUVs6&&s._delayInfo.push(g.UV6Kind),e.hasColors&&s._delayInfo.push(g.ColorKind),e.hasMatricesIndices&&s._delayInfo.push(g.MatricesIndicesKind),e.hasMatricesWeights&&s._delayInfo.push(g.MatricesWeightsKind),s._delayLoadingFunction=ee.ImportVertexData):ee.ImportVertexData(e,s),t.pushGeometry(s,!0),s}}var Vt;(function(c){c[c.LOCAL=0]="LOCAL",c[c.WORLD=1]="WORLD",c[c.BONE=2]="BONE"})(Vt||(Vt={}));class _i{}_i.X=new p(1,0,0),_i.Y=new p(0,1,0),_i.Z=new p(0,0,1);var Cr;(function(c){c[c.X=0]="X",c[c.Y=1]="Y",c[c.Z=2]="Z"})(Cr||(Cr={}));class J extends ze{constructor(e,t=null,i=!0){super(e,t),this._forward=new p(0,0,1),this._up=new p(0,1,0),this._right=new p(1,0,0),this._position=p.Zero(),this._rotation=p.Zero(),this._rotationQuaternion=null,this._scaling=p.One(),this._transformToBoneReferal=null,this._isAbsoluteSynced=!1,this._billboardMode=J.BILLBOARDMODE_NONE,this._preserveParentRotationForBillboard=!1,this.scalingDeterminant=1,this._infiniteDistance=!1,this.ignoreNonUniformScaling=!1,this.reIntegrateRotationIntoRotationQuaternion=!1,this._poseMatrix=null,this._localMatrix=x.Zero(),this._usePivotMatrix=!1,this._absolutePosition=p.Zero(),this._absoluteScaling=p.Zero(),this._absoluteRotationQuaternion=Z.Identity(),this._pivotMatrix=x.Identity(),this._postMultiplyPivotMatrix=!1,this._isWorldMatrixFrozen=!1,this._indexInSceneTransformNodesArray=-1,this.onAfterWorldMatrixUpdateObservable=new F,this._nonUniformScaling=!1,i&&this.getScene().addTransformNode(this)}get billboardMode(){return this._billboardMode}set billboardMode(e){this._billboardMode!==e&&(this._billboardMode=e)}get preserveParentRotationForBillboard(){return this._preserveParentRotationForBillboard}set preserveParentRotationForBillboard(e){e!==this._preserveParentRotationForBillboard&&(this._preserveParentRotationForBillboard=e)}get infiniteDistance(){return this._infiniteDistance}set infiniteDistance(e){this._infiniteDistance!==e&&(this._infiniteDistance=e)}getClassName(){return"TransformNode"}get position(){return this._position}set position(e){this._position=e,this._isDirty=!0}isUsingPivotMatrix(){return this._usePivotMatrix}get rotation(){return this._rotation}set rotation(e){this._rotation=e,this._rotationQuaternion=null,this._isDirty=!0}get scaling(){return this._scaling}set scaling(e){this._scaling=e,this._isDirty=!0}get rotationQuaternion(){return this._rotationQuaternion}set rotationQuaternion(e){this._rotationQuaternion=e,e&&this._rotation.setAll(0),this._isDirty=!0}get forward(){return p.TransformNormalFromFloatsToRef(0,0,this.getScene().useRightHandedSystem?-1:1,this.getWorldMatrix(),this._forward),this._forward.normalize()}get up(){return p.TransformNormalFromFloatsToRef(0,1,0,this.getWorldMatrix(),this._up),this._up.normalize()}get right(){return p.TransformNormalFromFloatsToRef(this.getScene().useRightHandedSystem?-1:1,0,0,this.getWorldMatrix(),this._right),this._right.normalize()}updatePoseMatrix(e){return this._poseMatrix?(this._poseMatrix.copyFrom(e),this):(this._poseMatrix=e.clone(),this)}getPoseMatrix(){return this._poseMatrix||(this._poseMatrix=x.Identity()),this._poseMatrix}_isSynchronized(){const e=this._cache;return!(this._billboardMode!==e.billboardMode||this._billboardMode!==J.BILLBOARDMODE_NONE||e.pivotMatrixUpdated||this._infiniteDistance||this._position._isDirty||this._scaling._isDirty||this._rotationQuaternion&&this._rotationQuaternion._isDirty||this._rotation._isDirty)}_initCache(){super._initCache();const e=this._cache;e.localMatrixUpdated=!1,e.billboardMode=-1,e.infiniteDistance=!1}get absolutePosition(){return this.getAbsolutePosition()}get absoluteScaling(){return this._syncAbsoluteScalingAndRotation(),this._absoluteScaling}get absoluteRotationQuaternion(){return this._syncAbsoluteScalingAndRotation(),this._absoluteRotationQuaternion}setPreTransformMatrix(e){return this.setPivotMatrix(e,!1)}setPivotMatrix(e,t=!0){return this._pivotMatrix.copyFrom(e),this._usePivotMatrix=!this._pivotMatrix.isIdentity(),this._cache.pivotMatrixUpdated=!0,this._postMultiplyPivotMatrix=t,this._postMultiplyPivotMatrix&&(this._pivotMatrixInverse?this._pivotMatrix.invertToRef(this._pivotMatrixInverse):this._pivotMatrixInverse=x.Invert(this._pivotMatrix)),this}getPivotMatrix(){return this._pivotMatrix}instantiateHierarchy(e=null,t,i){const s=this.clone("Clone of "+(this.name||this.id),e||this.parent,!0);s&&i&&i(this,s);for(const r of this.getChildTransformNodes(!0))r.instantiateHierarchy(s,t,i);return s}freezeWorldMatrix(e=null,t=!1){return e?t?(this._rotation.setAll(0),this._rotationQuaternion=this._rotationQuaternion||Z.Identity(),e.decompose(this._scaling,this._rotationQuaternion,this._position),this.computeWorldMatrix(!0)):(this._worldMatrix=e,this._absolutePosition.copyFromFloats(this._worldMatrix.m[12],this._worldMatrix.m[13],this._worldMatrix.m[14]),this._afterComputeWorldMatrix()):(this._isWorldMatrixFrozen=!1,this.computeWorldMatrix(!0)),this._isDirty=!1,this._isWorldMatrixFrozen=!0,this}unfreezeWorldMatrix(){return this._isWorldMatrixFrozen=!1,this.computeWorldMatrix(!0),this}get isWorldMatrixFrozen(){return this._isWorldMatrixFrozen}getAbsolutePosition(){return this.computeWorldMatrix(),this._absolutePosition}setAbsolutePosition(e){if(!e)return this;let t,i,s;if(e.x===void 0){if(arguments.length<3)return this;t=arguments[0],i=arguments[1],s=arguments[2]}else t=e.x,i=e.y,s=e.z;if(this.parent){const r=D.Matrix[0];this.parent.getWorldMatrix().invertToRef(r),p.TransformCoordinatesFromFloatsToRef(t,i,s,r,this.position)}else this.position.x=t,this.position.y=i,this.position.z=s;return this._absolutePosition.copyFrom(e),this}setPositionWithLocalVector(e){return this.computeWorldMatrix(),this.position=p.TransformNormal(e,this._localMatrix),this}getPositionExpressedInLocalSpace(){this.computeWorldMatrix();const e=D.Matrix[0];return this._localMatrix.invertToRef(e),p.TransformNormal(this.position,e)}locallyTranslate(e){return this.computeWorldMatrix(!0),this.position=p.TransformCoordinates(e,this._localMatrix),this}lookAt(e,t=0,i=0,s=0,r=Vt.LOCAL){const n=J._LookAtVectorCache,a=r===Vt.LOCAL?this.position:this.getAbsolutePosition();if(e.subtractToRef(a,n),this.setDirection(n,t,i,s),r===Vt.WORLD&&this.parent)if(this.rotationQuaternion){const o=D.Matrix[0];this.rotationQuaternion.toRotationMatrix(o);const h=D.Matrix[1];this.parent.getWorldMatrix().getRotationMatrixToRef(h),h.invert(),o.multiplyToRef(h,o),this.rotationQuaternion.fromRotationMatrix(o)}else{const o=D.Quaternion[0];Z.FromEulerVectorToRef(this.rotation,o);const h=D.Matrix[0];o.toRotationMatrix(h);const l=D.Matrix[1];this.parent.getWorldMatrix().getRotationMatrixToRef(l),l.invert(),h.multiplyToRef(l,h),o.fromRotationMatrix(h),o.toEulerAnglesToRef(this.rotation)}return this}getDirection(e){const t=p.Zero();return this.getDirectionToRef(e,t),t}getDirectionToRef(e,t){return p.TransformNormalToRef(e,this.getWorldMatrix(),t),this}setDirection(e,t=0,i=0,s=0){const r=-Math.atan2(e.z,e.x)+Math.PI/2,n=Math.sqrt(e.x*e.x+e.z*e.z),a=-Math.atan2(e.y,n);return this.rotationQuaternion?Z.RotationYawPitchRollToRef(r+t,a+i,s,this.rotationQuaternion):(this.rotation.x=a+i,this.rotation.y=r+t,this.rotation.z=s),this}setPivotPoint(e,t=Vt.LOCAL){this.getScene().getRenderId()==0&&this.computeWorldMatrix(!0);const i=this.getWorldMatrix();if(t==Vt.WORLD){const s=D.Matrix[0];i.invertToRef(s),e=p.TransformCoordinates(e,s)}return this.setPivotMatrix(x.Translation(-e.x,-e.y,-e.z),!0)}getPivotPoint(){const e=p.Zero();return this.getPivotPointToRef(e),e}getPivotPointToRef(e){return e.x=-this._pivotMatrix.m[12],e.y=-this._pivotMatrix.m[13],e.z=-this._pivotMatrix.m[14],this}getAbsolutePivotPoint(){const e=p.Zero();return this.getAbsolutePivotPointToRef(e),e}getAbsolutePivotPointToRef(e){return this.getPivotPointToRef(e),p.TransformCoordinatesToRef(e,this.getWorldMatrix(),e),this}markAsDirty(e){if(this._isDirty)return this;if(this._children)for(const t of this._children)t.markAsDirty(e);return super.markAsDirty(e)}setParent(e,t=!1,i=!1){if(!e&&!this.parent)return this;const s=D.Quaternion[0],r=D.Vector3[0],n=D.Vector3[1],a=D.Matrix[1];x.IdentityToRef(a);const o=D.Matrix[0];this.computeWorldMatrix(!0);let h=this.rotationQuaternion;return h||(h=J._TmpRotation,Z.RotationYawPitchRollToRef(this._rotation.y,this._rotation.x,this._rotation.z,h)),x.ComposeToRef(this.scaling,h,this.position,o),this.parent&&o.multiplyToRef(this.parent.computeWorldMatrix(!0),o),e&&(e.computeWorldMatrix(!0).invertToRef(a),o.multiplyToRef(a,o)),o.decompose(n,s,r,t?this:void 0),this.rotationQuaternion?this.rotationQuaternion.copyFrom(s):s.toEulerAnglesToRef(this.rotation),this.scaling.copyFrom(n),this.position.copyFrom(r),this.parent=e,i&&this.setPivotMatrix(x.Identity()),this}get nonUniformScaling(){return this._nonUniformScaling}_updateNonUniformScalingState(e){return this._nonUniformScaling===e?!1:(this._nonUniformScaling=e,!0)}attachToBone(e,t){return this._currentParentWhenAttachingToBone=this.parent,this._transformToBoneReferal=t,this.parent=e,e.getSkeleton().prepare(),e.getWorldMatrix().determinant()<0&&(this.scalingDeterminant*=-1),this}detachFromBone(e=!1){return this.parent?(this.parent.getWorldMatrix().determinant()<0&&(this.scalingDeterminant*=-1),this._transformToBoneReferal=null,e?this.parent=this._currentParentWhenAttachingToBone:this.parent=null,this):(e&&(this.parent=this._currentParentWhenAttachingToBone),this)}rotate(e,t,i){e.normalize(),this.rotationQuaternion||(this.rotationQuaternion=this.rotation.toQuaternion(),this.rotation.setAll(0));let s;if(!i||i===Vt.LOCAL)s=Z.RotationAxisToRef(e,t,J._RotationAxisCache),this.rotationQuaternion.multiplyToRef(s,this.rotationQuaternion);else{if(this.parent){const r=D.Matrix[0];this.parent.getWorldMatrix().invertToRef(r),e=p.TransformNormal(e,r)}s=Z.RotationAxisToRef(e,t,J._RotationAxisCache),s.multiplyToRef(this.rotationQuaternion,this.rotationQuaternion)}return this}rotateAround(e,t,i){t.normalize(),this.rotationQuaternion||(this.rotationQuaternion=Z.RotationYawPitchRoll(this.rotation.y,this.rotation.x,this.rotation.z),this.rotation.setAll(0));const s=D.Vector3[0],r=D.Vector3[1],n=D.Vector3[2],a=D.Quaternion[0],o=D.Matrix[0],h=D.Matrix[1],l=D.Matrix[2],u=D.Matrix[3];return e.subtractToRef(this.position,s),x.TranslationToRef(s.x,s.y,s.z,o),x.TranslationToRef(-s.x,-s.y,-s.z,h),x.RotationAxisToRef(t,i,l),h.multiplyToRef(l,u),u.multiplyToRef(o,u),u.decompose(r,a,n),this.position.addInPlace(n),a.multiplyToRef(this.rotationQuaternion,this.rotationQuaternion),this}translate(e,t,i){const s=e.scale(t);if(!i||i===Vt.LOCAL){const r=this.getPositionExpressedInLocalSpace().add(s);this.setPositionWithLocalVector(r)}else this.setAbsolutePosition(this.getAbsolutePosition().add(s));return this}addRotation(e,t,i){let s;this.rotationQuaternion?s=this.rotationQuaternion:(s=D.Quaternion[1],Z.RotationYawPitchRollToRef(this.rotation.y,this.rotation.x,this.rotation.z,s));const r=D.Quaternion[0];return Z.RotationYawPitchRollToRef(t,e,i,r),s.multiplyInPlace(r),this.rotationQuaternion||s.toEulerAnglesToRef(this.rotation),this}_getEffectiveParent(){return this.parent}computeWorldMatrix(e){if(this._isWorldMatrixFrozen&&!this._isDirty)return this._worldMatrix;const t=this.getScene().getRenderId();if(!this._isDirty&&!e&&(this._currentRenderId===t||this.isSynchronized()))return this._currentRenderId=t,this._worldMatrix;const i=this.getScene().activeCamera,s=(this._billboardMode&J.BILLBOARDMODE_USE_POSITION)!==0,r=this._billboardMode!==J.BILLBOARDMODE_NONE&&!this.preserveParentRotationForBillboard;this._updateCache();const n=this._cache;n.pivotMatrixUpdated=!1,n.billboardMode=this.billboardMode,n.infiniteDistance=this.infiniteDistance,n.parent=this._parentNode,this._currentRenderId=t,this._childUpdateId+=1,this._isDirty=!1,this._position._isDirty=!1,this._rotation._isDirty=!1,this._scaling._isDirty=!1;const a=this._getEffectiveParent(),o=J._TmpScaling;let h=this._position;if(this._infiniteDistance&&!this.parent&&i){const u=i.getWorldMatrix(),d=new p(u.m[12],u.m[13],u.m[14]);h=J._TmpTranslation,h.copyFromFloats(this._position.x+d.x,this._position.y+d.y,this._position.z+d.z)}o.copyFromFloats(this._scaling.x*this.scalingDeterminant,this._scaling.y*this.scalingDeterminant,this._scaling.z*this.scalingDeterminant);let l;if(this._rotationQuaternion?(this._rotationQuaternion._isDirty=!1,l=this._rotationQuaternion,this.reIntegrateRotationIntoRotationQuaternion&&this.rotation.lengthSquared()&&(this._rotationQuaternion.multiplyInPlace(Z.RotationYawPitchRoll(this._rotation.y,this._rotation.x,this._rotation.z)),this._rotation.copyFromFloats(0,0,0))):(l=J._TmpRotation,Z.RotationYawPitchRollToRef(this._rotation.y,this._rotation.x,this._rotation.z,l)),this._usePivotMatrix){const u=D.Matrix[1];x.ScalingToRef(o.x,o.y,o.z,u);const d=D.Matrix[0];l.toRotationMatrix(d),this._pivotMatrix.multiplyToRef(u,D.Matrix[4]),D.Matrix[4].multiplyToRef(d,this._localMatrix),this._postMultiplyPivotMatrix&&this._localMatrix.multiplyToRef(this._pivotMatrixInverse,this._localMatrix),this._localMatrix.addTranslationFromFloats(h.x,h.y,h.z)}else x.ComposeToRef(o,l,h,this._localMatrix);if(a&&a.getWorldMatrix){if(e&&a.computeWorldMatrix(e),r){this._transformToBoneReferal?a.getWorldMatrix().multiplyToRef(this._transformToBoneReferal.getWorldMatrix(),D.Matrix[7]):D.Matrix[7].copyFrom(a.getWorldMatrix());const u=D.Vector3[5],d=D.Vector3[6],f=D.Quaternion[0];D.Matrix[7].decompose(d,f,u),x.ScalingToRef(d.x,d.y,d.z,D.Matrix[7]),D.Matrix[7].setTranslation(u),J.BillboardUseParentOrientation&&(this._position.applyRotationQuaternionToRef(f,u),this._localMatrix.setTranslation(u)),this._localMatrix.multiplyToRef(D.Matrix[7],this._worldMatrix)}else this._transformToBoneReferal?(this._localMatrix.multiplyToRef(a.getWorldMatrix(),D.Matrix[6]),D.Matrix[6].multiplyToRef(this._transformToBoneReferal.getWorldMatrix(),this._worldMatrix)):this._localMatrix.multiplyToRef(a.getWorldMatrix(),this._worldMatrix);this._markSyncedWithParent()}else this._worldMatrix.copyFrom(this._localMatrix);if(r&&i&&this.billboardMode&&!s){const u=D.Vector3[0];if(this._worldMatrix.getTranslationToRef(u),D.Matrix[1].copyFrom(i.getViewMatrix()),D.Matrix[1].setTranslationFromFloats(0,0,0),D.Matrix[1].invertToRef(D.Matrix[0]),(this.billboardMode&J.BILLBOARDMODE_ALL)!==J.BILLBOARDMODE_ALL){D.Matrix[0].decompose(void 0,D.Quaternion[0],void 0);const d=D.Vector3[1];D.Quaternion[0].toEulerAnglesToRef(d),(this.billboardMode&J.BILLBOARDMODE_X)!==J.BILLBOARDMODE_X&&(d.x=0),(this.billboardMode&J.BILLBOARDMODE_Y)!==J.BILLBOARDMODE_Y&&(d.y=0),(this.billboardMode&J.BILLBOARDMODE_Z)!==J.BILLBOARDMODE_Z&&(d.z=0),x.RotationYawPitchRollToRef(d.y,d.x,d.z,D.Matrix[0])}this._worldMatrix.setTranslationFromFloats(0,0,0),this._worldMatrix.multiplyToRef(D.Matrix[0],this._worldMatrix),this._worldMatrix.setTranslation(D.Vector3[0])}else if(r&&i&&this.billboardMode&&s){const u=D.Vector3[0];this._worldMatrix.getTranslationToRef(u);const d=i.globalPosition;this._worldMatrix.invertToRef(D.Matrix[1]);const f=D.Vector3[1];p.TransformCoordinatesToRef(d,D.Matrix[1],f),f.normalize();const _=-Math.atan2(f.z,f.x)+Math.PI/2,E=Math.sqrt(f.x*f.x+f.z*f.z),m=-Math.atan2(f.y,E);if(Z.RotationYawPitchRollToRef(_,m,0,D.Quaternion[0]),(this.billboardMode&J.BILLBOARDMODE_ALL)!==J.BILLBOARDMODE_ALL){const v=D.Vector3[1];D.Quaternion[0].toEulerAnglesToRef(v),(this.billboardMode&J.BILLBOARDMODE_X)!==J.BILLBOARDMODE_X&&(v.x=0),(this.billboardMode&J.BILLBOARDMODE_Y)!==J.BILLBOARDMODE_Y&&(v.y=0),(this.billboardMode&J.BILLBOARDMODE_Z)!==J.BILLBOARDMODE_Z&&(v.z=0),x.RotationYawPitchRollToRef(v.y,v.x,v.z,D.Matrix[0])}else x.FromQuaternionToRef(D.Quaternion[0],D.Matrix[0]);this._worldMatrix.setTranslationFromFloats(0,0,0),this._worldMatrix.multiplyToRef(D.Matrix[0],this._worldMatrix),this._worldMatrix.setTranslation(D.Vector3[0])}return this.ignoreNonUniformScaling?this._updateNonUniformScalingState(!1):this._scaling.isNonUniformWithinEpsilon(1e-6)?this._updateNonUniformScalingState(!0):a&&a._nonUniformScaling?this._updateNonUniformScalingState(a._nonUniformScaling):this._updateNonUniformScalingState(!1),this._afterComputeWorldMatrix(),this._absolutePosition.copyFromFloats(this._worldMatrix.m[12],this._worldMatrix.m[13],this._worldMatrix.m[14]),this._isAbsoluteSynced=!1,this.onAfterWorldMatrixUpdateObservable.notifyObservers(this),this._poseMatrix||(this._poseMatrix=x.Invert(this._worldMatrix)),this._worldMatrixDeterminantIsDirty=!0,this._worldMatrix}resetLocalMatrix(e=!0){if(this.computeWorldMatrix(),e){const t=this.getChildren();for(let i=0;i<t.length;++i){const s=t[i];if(s){s.computeWorldMatrix();const r=D.Matrix[0];s._localMatrix.multiplyToRef(this._localMatrix,r);const n=D.Quaternion[0];r.decompose(s.scaling,n,s.position),s.rotationQuaternion?s.rotationQuaternion.copyFrom(n):n.toEulerAnglesToRef(s.rotation)}}}this.scaling.copyFromFloats(1,1,1),this.position.copyFromFloats(0,0,0),this.rotation.copyFromFloats(0,0,0),this.rotationQuaternion&&(this.rotationQuaternion=Z.Identity()),this._worldMatrix=x.Identity()}_afterComputeWorldMatrix(){}registerAfterWorldMatrixUpdate(e){return this.onAfterWorldMatrixUpdateObservable.add(e),this}unregisterAfterWorldMatrixUpdate(e){return this.onAfterWorldMatrixUpdateObservable.removeCallback(e),this}getPositionInCameraSpace(e=null){return e||(e=this.getScene().activeCamera),p.TransformCoordinates(this.getAbsolutePosition(),e.getViewMatrix())}getDistanceToCamera(e=null){return e||(e=this.getScene().activeCamera),this.getAbsolutePosition().subtract(e.globalPosition).length()}clone(e,t,i){const s=ae.Clone(()=>new J(e,this.getScene()),this);if(s.name=e,s.id=e,t&&(s.parent=t),!i){const r=this.getDescendants(!0);for(let n=0;n<r.length;n++){const a=r[n];a.clone&&a.clone(e+"."+a.name,s)}}return s}serialize(e){const t=ae.Serialize(this,e);return t.type=this.getClassName(),t.uniqueId=this.uniqueId,this.parent&&this.parent._serializeAsParent(t),t.localMatrix=this.getPivotMatrix().asArray(),t.isEnabled=this.isEnabled(),t}static Parse(e,t,i){const s=ae.Parse(()=>new J(e.name,t),e,t,i);return e.localMatrix?s.setPreTransformMatrix(x.FromArray(e.localMatrix)):e.pivotMatrix&&s.setPivotMatrix(x.FromArray(e.pivotMatrix)),s.setEnabled(e.isEnabled),s._waitingParsedUniqueId=e.uniqueId,e.parentId!==void 0&&(s._waitingParentId=e.parentId),e.parentInstanceIndex!==void 0&&(s._waitingParentInstanceIndex=e.parentInstanceIndex),s}getChildTransformNodes(e,t){const i=[];return this._getDescendants(i,e,s=>(!t||t(s))&&s instanceof J),i}dispose(e,t=!1){if(this.getScene().stopAnimation(this),this.getScene().removeTransformNode(this),this._parentContainer){const i=this._parentContainer.transformNodes.indexOf(this);i>-1&&this._parentContainer.transformNodes.splice(i,1),this._parentContainer=null}if(this.onAfterWorldMatrixUpdateObservable.clear(),e){const i=this.getChildTransformNodes(!0);for(const s of i)s.parent=null,s.computeWorldMatrix(!0)}super.dispose(e,t)}normalizeToUnitCube(e=!0,t=!1,i){let s=null,r=null;t&&(this.rotationQuaternion?(r=this.rotationQuaternion.clone(),this.rotationQuaternion.copyFromFloats(0,0,0,1)):this.rotation&&(s=this.rotation.clone(),this.rotation.copyFromFloats(0,0,0)));const n=this.getHierarchyBoundingVectors(e,i),a=n.max.subtract(n.min),o=Math.max(a.x,a.y,a.z);if(o===0)return this;const h=1/o;return this.scaling.scaleInPlace(h),t&&(this.rotationQuaternion&&r?this.rotationQuaternion.copyFrom(r):this.rotation&&s&&this.rotation.copyFrom(s)),this}_syncAbsoluteScalingAndRotation(){this._isAbsoluteSynced||(this._worldMatrix.decompose(this._absoluteScaling,this._absoluteRotationQuaternion),this._isAbsoluteSynced=!0)}}J.BILLBOARDMODE_NONE=0,J.BILLBOARDMODE_X=1,J.BILLBOARDMODE_Y=2,J.BILLBOARDMODE_Z=4,J.BILLBOARDMODE_ALL=7,J.BILLBOARDMODE_USE_POSITION=128,J.BillboardUseParentOrientation=!1,J._TmpRotation=Z.Zero(),J._TmpScaling=p.Zero(),J._TmpTranslation=p.Zero(),J._LookAtVectorCache=new p(0,0,0),J._RotationAxisCache=new Z,T([Bt("position")],J.prototype,"_position",void 0),T([Bt("rotation")],J.prototype,"_rotation",void 0),T([Rn("rotationQuaternion")],J.prototype,"_rotationQuaternion",void 0),T([Bt("scaling")],J.prototype,"_scaling",void 0),T([R("billboardMode")],J.prototype,"_billboardMode",void 0),T([R()],J.prototype,"scalingDeterminant",void 0),T([R("infiniteDistance")],J.prototype,"_infiniteDistance",void 0),T([R()],J.prototype,"ignoreNonUniformScaling",void 0),T([R()],J.prototype,"reIntegrateRotationIntoRotationQuaternion",void 0);class Un{constructor(){this._checkCollisions=!1,this._collisionMask=-1,this._collisionGroup=-1,this._surroundingMeshes=null,this._collider=null,this._oldPositionForCollisions=new p(0,0,0),this._diffPositionForCollisions=new p(0,0,0),this._collisionResponse=!0}}class kn{constructor(){this.facetNb=0,this.partitioningSubdivisions=10,this.partitioningBBoxRatio=1.01,this.facetDataEnabled=!1,this.facetParameters={},this.bbSize=p.Zero(),this.subDiv={max:1,X:1,Y:1,Z:1},this.facetDepthSort=!1,this.facetDepthSortEnabled=!1}}class Vn{constructor(){this._hasVertexAlpha=!1,this._useVertexColors=!0,this._numBoneInfluencers=4,this._applyFog=!0,this._receiveShadows=!1,this._facetData=new kn,this._visibility=1,this._skeleton=null,this._layerMask=268435455,this._computeBonesUsingShaders=!0,this._isActive=!1,this._onlyForInstances=!1,this._isActiveIntermediate=!1,this._onlyForInstancesIntermediate=!1,this._actAsRegularMesh=!1,this._currentLOD=null,this._currentLODIsUpToDate=!1,this._collisionRetryCount=3,this._morphTargetManager=null,this._renderingGroupId=0,this._bakedVertexAnimationManager=null,this._material=null,this._positions=null,this._pointerOverDisableMeshTesting=!1,this._meshCollisionData=new Un,this._enableDistantPicking=!1}}class ot extends J{constructor(e,t=null){switch(super(e,t,!1),this._internalAbstractMeshDataInfo=new Vn,this._waitingMaterialId=null,this.cullingStrategy=ot.CULLINGSTRATEGY_BOUNDINGSPHERE_ONLY,this.onCollideObservable=new F,this.onCollisionPositionChangeObservable=new F,this.onMaterialChangedObservable=new F,this.definedFacingForward=!0,this._occlusionQuery=null,this._renderingGroup=null,this.alphaIndex=Number.MAX_VALUE,this.isVisible=!0,this.isPickable=!0,this.isNearPickable=!1,this.isNearGrabbable=!1,this.showSubMeshesBoundingBox=!1,this.isBlocker=!1,this.enablePointerMoveEvents=!1,this.outlineColor=re.Red(),this.outlineWidth=.02,this.overlayColor=re.Red(),this.overlayAlpha=.5,this.useOctreeForRenderingSelection=!0,this.useOctreeForPicking=!0,this.useOctreeForCollisions=!0,this.alwaysSelectAsActiveMesh=!1,this.doNotSyncBoundingInfo=!1,this.actionManager=null,this.ellipsoid=new p(.5,1,.5),this.ellipsoidOffset=new p(0,0,0),this.edgesWidth=1,this.edgesColor=new me(1,0,0,1),this._edgesRenderer=null,this._masterMesh=null,this._boundingInfo=null,this._boundingInfoIsDirty=!0,this._renderId=0,this._intersectionsInProgress=new Array,this._unIndexed=!1,this._lightSources=new Array,this._waitingData={lods:null,actions:null,freezeWorldMatrix:null},this._bonesTransformMatrices=null,this._transformMatrixTexture=null,this.onRebuildObservable=new F,this._onCollisionPositionChange=(i,s,r=null)=>{s.subtractToRef(this._internalAbstractMeshDataInfo._meshCollisionData._oldPositionForCollisions,this._internalAbstractMeshDataInfo._meshCollisionData._diffPositionForCollisions),this._internalAbstractMeshDataInfo._meshCollisionData._diffPositionForCollisions.length()>I.CollisionsEpsilon&&this.position.addInPlace(this._internalAbstractMeshDataInfo._meshCollisionData._diffPositionForCollisions),r&&this.onCollideObservable.notifyObservers(r),this.onCollisionPositionChangeObservable.notifyObservers(this.position)},t=this.getScene(),t.addMesh(this),this._resyncLightSources(),this._uniformBuffer=new V(this.getScene().getEngine(),void 0,void 0,e,!this.getScene().getEngine().isWebGPU),this._buildUniformLayout(),t.performancePriority){case Ct.Aggressive:this.doNotSyncBoundingInfo=!0;case Ct.Intermediate:this.alwaysSelectAsActiveMesh=!0,this.isPickable=!1;break}}static get BILLBOARDMODE_NONE(){return J.BILLBOARDMODE_NONE}static get BILLBOARDMODE_X(){return J.BILLBOARDMODE_X}static get BILLBOARDMODE_Y(){return J.BILLBOARDMODE_Y}static get BILLBOARDMODE_Z(){return J.BILLBOARDMODE_Z}static get BILLBOARDMODE_ALL(){return J.BILLBOARDMODE_ALL}static get BILLBOARDMODE_USE_POSITION(){return J.BILLBOARDMODE_USE_POSITION}get facetNb(){return this._internalAbstractMeshDataInfo._facetData.facetNb}get partitioningSubdivisions(){return this._internalAbstractMeshDataInfo._facetData.partitioningSubdivisions}set partitioningSubdivisions(e){this._internalAbstractMeshDataInfo._facetData.partitioningSubdivisions=e}get partitioningBBoxRatio(){return this._internalAbstractMeshDataInfo._facetData.partitioningBBoxRatio}set partitioningBBoxRatio(e){this._internalAbstractMeshDataInfo._facetData.partitioningBBoxRatio=e}get mustDepthSortFacets(){return this._internalAbstractMeshDataInfo._facetData.facetDepthSort}set mustDepthSortFacets(e){this._internalAbstractMeshDataInfo._facetData.facetDepthSort=e}get facetDepthSortFrom(){return this._internalAbstractMeshDataInfo._facetData.facetDepthSortFrom}set facetDepthSortFrom(e){this._internalAbstractMeshDataInfo._facetData.facetDepthSortFrom=e}get collisionRetryCount(){return this._internalAbstractMeshDataInfo._collisionRetryCount}set collisionRetryCount(e){this._internalAbstractMeshDataInfo._collisionRetryCount=e}get isFacetDataEnabled(){return this._internalAbstractMeshDataInfo._facetData.facetDataEnabled}get morphTargetManager(){return this._internalAbstractMeshDataInfo._morphTargetManager}set morphTargetManager(e){this._internalAbstractMeshDataInfo._morphTargetManager!==e&&(this._internalAbstractMeshDataInfo._morphTargetManager=e,this._syncGeometryWithMorphTargetManager())}get bakedVertexAnimationManager(){return this._internalAbstractMeshDataInfo._bakedVertexAnimationManager}set bakedVertexAnimationManager(e){this._internalAbstractMeshDataInfo._bakedVertexAnimationManager!==e&&(this._internalAbstractMeshDataInfo._bakedVertexAnimationManager=e,this._markSubMeshesAsAttributesDirty())}_syncGeometryWithMorphTargetManager(){}_updateNonUniformScalingState(e){return super._updateNonUniformScalingState(e)?(this._markSubMeshesAsMiscDirty(),!0):!1}set onCollide(e){this._internalAbstractMeshDataInfo._meshCollisionData._onCollideObserver&&this.onCollideObservable.remove(this._internalAbstractMeshDataInfo._meshCollisionData._onCollideObserver),this._internalAbstractMeshDataInfo._meshCollisionData._onCollideObserver=this.onCollideObservable.add(e)}set onCollisionPositionChange(e){this._internalAbstractMeshDataInfo._meshCollisionData._onCollisionPositionChangeObserver&&this.onCollisionPositionChangeObservable.remove(this._internalAbstractMeshDataInfo._meshCollisionData._onCollisionPositionChangeObserver),this._internalAbstractMeshDataInfo._meshCollisionData._onCollisionPositionChangeObserver=this.onCollisionPositionChangeObservable.add(e)}get visibility(){return this._internalAbstractMeshDataInfo._visibility}set visibility(e){if(this._internalAbstractMeshDataInfo._visibility===e)return;const t=this._internalAbstractMeshDataInfo._visibility;this._internalAbstractMeshDataInfo._visibility=e,(t===1&&e!==1||t!==1&&e===1)&&this._markSubMeshesAsMiscDirty()}get pointerOverDisableMeshTesting(){return this._internalAbstractMeshDataInfo._pointerOverDisableMeshTesting}set pointerOverDisableMeshTesting(e){this._internalAbstractMeshDataInfo._pointerOverDisableMeshTesting=e}get renderingGroupId(){return this._internalAbstractMeshDataInfo._renderingGroupId}set renderingGroupId(e){this._internalAbstractMeshDataInfo._renderingGroupId=e}get material(){return this._internalAbstractMeshDataInfo._material}set material(e){this._internalAbstractMeshDataInfo._material!==e&&(this._internalAbstractMeshDataInfo._material&&this._internalAbstractMeshDataInfo._material.meshMap&&(this._internalAbstractMeshDataInfo._material.meshMap[this.uniqueId]=void 0),this._internalAbstractMeshDataInfo._material=e,e&&e.meshMap&&(e.meshMap[this.uniqueId]=this),this.onMaterialChangedObservable.hasObservers()&&this.onMaterialChangedObservable.notifyObservers(this),this.subMeshes&&(this.resetDrawCache(),this._unBindEffect()))}getMaterialForRenderPass(e){var t;return(t=this._internalAbstractMeshDataInfo._materialForRenderPass)===null||t===void 0?void 0:t[e]}setMaterialForRenderPass(e,t){this.resetDrawCache(e),this._internalAbstractMeshDataInfo._materialForRenderPass||(this._internalAbstractMeshDataInfo._materialForRenderPass=[]),this._internalAbstractMeshDataInfo._materialForRenderPass[e]=t}get receiveShadows(){return this._internalAbstractMeshDataInfo._receiveShadows}set receiveShadows(e){this._internalAbstractMeshDataInfo._receiveShadows!==e&&(this._internalAbstractMeshDataInfo._receiveShadows=e,this._markSubMeshesAsLightDirty())}get hasVertexAlpha(){return this._internalAbstractMeshDataInfo._hasVertexAlpha}set hasVertexAlpha(e){this._internalAbstractMeshDataInfo._hasVertexAlpha!==e&&(this._internalAbstractMeshDataInfo._hasVertexAlpha=e,this._markSubMeshesAsAttributesDirty(),this._markSubMeshesAsMiscDirty())}get useVertexColors(){return this._internalAbstractMeshDataInfo._useVertexColors}set useVertexColors(e){this._internalAbstractMeshDataInfo._useVertexColors!==e&&(this._internalAbstractMeshDataInfo._useVertexColors=e,this._markSubMeshesAsAttributesDirty())}get computeBonesUsingShaders(){return this._internalAbstractMeshDataInfo._computeBonesUsingShaders}set computeBonesUsingShaders(e){this._internalAbstractMeshDataInfo._computeBonesUsingShaders!==e&&(this._internalAbstractMeshDataInfo._computeBonesUsingShaders=e,this._markSubMeshesAsAttributesDirty())}get numBoneInfluencers(){return this._internalAbstractMeshDataInfo._numBoneInfluencers}set numBoneInfluencers(e){this._internalAbstractMeshDataInfo._numBoneInfluencers!==e&&(this._internalAbstractMeshDataInfo._numBoneInfluencers=e,this._markSubMeshesAsAttributesDirty())}get applyFog(){return this._internalAbstractMeshDataInfo._applyFog}set applyFog(e){this._internalAbstractMeshDataInfo._applyFog!==e&&(this._internalAbstractMeshDataInfo._applyFog=e,this._markSubMeshesAsMiscDirty())}get enableDistantPicking(){return this._internalAbstractMeshDataInfo._enableDistantPicking}set enableDistantPicking(e){this._internalAbstractMeshDataInfo._enableDistantPicking=e}get layerMask(){return this._internalAbstractMeshDataInfo._layerMask}set layerMask(e){e!==this._internalAbstractMeshDataInfo._layerMask&&(this._internalAbstractMeshDataInfo._layerMask=e,this._resyncLightSources())}get collisionMask(){return this._internalAbstractMeshDataInfo._meshCollisionData._collisionMask}set collisionMask(e){this._internalAbstractMeshDataInfo._meshCollisionData._collisionMask=isNaN(e)?-1:e}get collisionResponse(){return this._internalAbstractMeshDataInfo._meshCollisionData._collisionResponse}set collisionResponse(e){this._internalAbstractMeshDataInfo._meshCollisionData._collisionResponse=e}get collisionGroup(){return this._internalAbstractMeshDataInfo._meshCollisionData._collisionGroup}set collisionGroup(e){this._internalAbstractMeshDataInfo._meshCollisionData._collisionGroup=isNaN(e)?-1:e}get surroundingMeshes(){return this._internalAbstractMeshDataInfo._meshCollisionData._surroundingMeshes}set surroundingMeshes(e){this._internalAbstractMeshDataInfo._meshCollisionData._surroundingMeshes=e}get lightSources(){return this._lightSources}get _positions(){return null}set skeleton(e){const t=this._internalAbstractMeshDataInfo._skeleton;t&&t.needInitialSkinMatrix&&t._unregisterMeshWithPoseMatrix(this),e&&e.needInitialSkinMatrix&&e._registerMeshWithPoseMatrix(this),this._internalAbstractMeshDataInfo._skeleton=e,this._internalAbstractMeshDataInfo._skeleton||(this._bonesTransformMatrices=null),this._markSubMeshesAsAttributesDirty()}get skeleton(){return this._internalAbstractMeshDataInfo._skeleton}_buildUniformLayout(){this._uniformBuffer.addUniform("world",16),this._uniformBuffer.addUniform("visibility",1),this._uniformBuffer.create()}transferToEffect(e){const t=this._uniformBuffer;t.updateMatrix("world",e),t.updateFloat("visibility",this._internalAbstractMeshDataInfo._visibility),t.update()}getMeshUniformBuffer(){return this._uniformBuffer}getClassName(){return"AbstractMesh"}toString(e){let t="Name: "+this.name+", isInstance: "+(this.getClassName()!=="InstancedMesh"?"YES":"NO");t+=", # of submeshes: "+(this.subMeshes?this.subMeshes.length:0);const i=this._internalAbstractMeshDataInfo._skeleton;return i&&(t+=", skeleton: "+i.name),e&&(t+=", billboard mode: "+["NONE","X","Y",null,"Z",null,null,"ALL"][this.billboardMode],t+=", freeze wrld mat: "+(this._isWorldMatrixFrozen||this._waitingData.freezeWorldMatrix?"YES":"NO")),t}_getEffectiveParent(){return this._masterMesh&&this.billboardMode!==J.BILLBOARDMODE_NONE?this._masterMesh:super._getEffectiveParent()}_getActionManagerForTrigger(e,t=!0){if(this.actionManager&&(t||this.actionManager.isRecursive))if(e){if(this.actionManager.hasSpecificTrigger(e))return this.actionManager}else return this.actionManager;return this.parent?this.parent._getActionManagerForTrigger(e,!1):null}_rebuild(e=!1){if(this.onRebuildObservable.notifyObservers(this),this._occlusionQuery!==null&&(this._occlusionQuery=null),!!this.subMeshes)for(const t of this.subMeshes)t._rebuild()}_resyncLightSources(){this._lightSources.length=0;for(const e of this.getScene().lights)e.isEnabled()&&e.canAffectMesh(this)&&this._lightSources.push(e);this._markSubMeshesAsLightDirty()}_resyncLightSource(e){const t=e.isEnabled()&&e.canAffectMesh(this),i=this._lightSources.indexOf(e);let s=!1;if(i===-1){if(!t)return;this._lightSources.push(e)}else{if(t)return;s=!0,this._lightSources.splice(i,1)}this._markSubMeshesAsLightDirty(s)}_unBindEffect(){for(const e of this.subMeshes)e.setEffect(null)}_removeLightSource(e,t){const i=this._lightSources.indexOf(e);i!==-1&&(this._lightSources.splice(i,1),this._markSubMeshesAsLightDirty(t))}_markSubMeshesAsDirty(e){if(this.subMeshes)for(const t of this.subMeshes)for(let i=0;i<t._drawWrappers.length;++i){const s=t._drawWrappers[i];!s||!s.defines||!s.defines.markAllAsDirty||e(s.defines)}}_markSubMeshesAsLightDirty(e=!1){this._markSubMeshesAsDirty(t=>t.markAsLightDirty(e))}_markSubMeshesAsAttributesDirty(){this._markSubMeshesAsDirty(e=>e.markAsAttributesDirty())}_markSubMeshesAsMiscDirty(){this._markSubMeshesAsDirty(e=>e.markAsMiscDirty())}markAsDirty(e){return this._currentRenderId=Number.MAX_VALUE,this._isDirty=!0,this}resetDrawCache(e){if(this.subMeshes)for(const t of this.subMeshes)t.resetDrawCache(e)}get isBlocked(){return!1}getLOD(e){return this}getTotalVertices(){return 0}getTotalIndices(){return 0}getIndices(){return null}getVerticesData(e){return null}setVerticesData(e,t,i,s){return this}updateVerticesData(e,t,i,s){return this}setIndices(e,t){return this}isVerticesDataPresent(e){return!1}getBoundingInfo(){return this._masterMesh?this._masterMesh.getBoundingInfo():(this._boundingInfoIsDirty&&(this._boundingInfoIsDirty=!1,this._updateBoundingInfo()),this._boundingInfo)}setBoundingInfo(e){return this._boundingInfo=e,this}get hasBoundingInfo(){return this._boundingInfo!==null}buildBoundingInfo(e,t,i){return this._boundingInfo=new dt(e,t,i),this._boundingInfo}normalizeToUnitCube(e=!0,t=!1,i){return super.normalizeToUnitCube(e,t,i)}get useBones(){return this.skeleton&&this.getScene().skeletonsEnabled&&this.isVerticesDataPresent(g.MatricesIndicesKind)&&this.isVerticesDataPresent(g.MatricesWeightsKind)}_preActivate(){}_preActivateForIntermediateRendering(e){}_activate(e,t){return this._renderId=e,!0}_postActivate(){}_freeze(){}_unFreeze(){}getWorldMatrix(){return this._masterMesh&&this.billboardMode===J.BILLBOARDMODE_NONE?this._masterMesh.getWorldMatrix():super.getWorldMatrix()}_getWorldMatrixDeterminant(){return this._masterMesh?this._masterMesh._getWorldMatrixDeterminant():super._getWorldMatrixDeterminant()}get isAnInstance(){return!1}get hasInstances(){return!1}get hasThinInstances(){return!1}movePOV(e,t,i){return this.position.addInPlace(this.calcMovePOV(e,t,i)),this}calcMovePOV(e,t,i){const s=new x;(this.rotationQuaternion?this.rotationQuaternion:Z.RotationYawPitchRoll(this.rotation.y,this.rotation.x,this.rotation.z)).toRotationMatrix(s);const n=p.Zero(),a=this.definedFacingForward?-1:1;return p.TransformCoordinatesFromFloatsToRef(e*a,t,i*a,s,n),n}rotatePOV(e,t,i){return this.rotation.addInPlace(this.calcRotatePOV(e,t,i)),this}calcRotatePOV(e,t,i){const s=this.definedFacingForward?1:-1;return new p(e*s,t,i*s)}refreshBoundingInfo(e=!1,t=!1){return this._boundingInfo&&this._boundingInfo.isLocked?this:(this._refreshBoundingInfo(this._getPositionData(e,t),null),this)}_refreshBoundingInfo(e,t){if(e){const i=yr(e,0,this.getTotalVertices(),t);this._boundingInfo?this._boundingInfo.reConstruct(i.minimum,i.maximum):this._boundingInfo=new dt(i.minimum,i.maximum)}if(this.subMeshes)for(let i=0;i<this.subMeshes.length;i++)this.subMeshes[i].refreshBoundingInfo(e);this._updateBoundingInfo()}_getData(e=!1,t=!1,i,s=g.PositionKind){if(i=i??this.getVerticesData(s).slice(),i&&t&&this.morphTargetManager){let r=0,n=0;for(let a=0;a<i.length;a++){for(let o=0;o<this.morphTargetManager.numTargets;o++){const h=this.morphTargetManager.getTarget(o),l=h.influence;if(l>0){const u=h.getPositions();u&&(i[a]+=(u[a]-i[a])*l)}}if(r++,s===g.PositionKind&&this._positions&&r===3){r=0;const o=n*3;this._positions[n++].copyFromFloats(i[o],i[o+1],i[o+2])}}}if(i&&e&&this.skeleton){const r=this.getVerticesData(g.MatricesIndicesKind),n=this.getVerticesData(g.MatricesWeightsKind);if(n&&r){const a=this.numBoneInfluencers>4,o=a?this.getVerticesData(g.MatricesIndicesExtraKind):null,h=a?this.getVerticesData(g.MatricesWeightsExtraKind):null,l=this.skeleton.getTransformMatrices(this),u=D.Vector3[0],d=D.Matrix[0],f=D.Matrix[1];let _=0;for(let E=0;E<i.length;E+=3,_+=4){d.reset();let m,v;for(m=0;m<4;m++)v=n[_+m],v>0&&(x.FromFloat32ArrayToRefScaled(l,Math.floor(r[_+m]*16),v,f),d.addToSelf(f));if(a)for(m=0;m<4;m++)v=h[_+m],v>0&&(x.FromFloat32ArrayToRefScaled(l,Math.floor(o[_+m]*16),v,f),d.addToSelf(f));s===g.NormalKind?p.TransformNormalFromFloatsToRef(i[E],i[E+1],i[E+2],d,u):p.TransformCoordinatesFromFloatsToRef(i[E],i[E+1],i[E+2],d,u),u.toArray(i,E),s===g.PositionKind&&this._positions&&this._positions[E/3].copyFrom(u)}}}return i}getNormalsData(e=!1,t=!1){return this._getData(e,t,null,g.NormalKind)}getPositionData(e=!1,t=!1,i){return this._getData(e,t,i,g.PositionKind)}_getPositionData(e,t){var i;let s=this.getVerticesData(g.PositionKind);if(this._internalAbstractMeshDataInfo._positions&&(this._internalAbstractMeshDataInfo._positions=null),s&&(e&&this.skeleton||t&&this.morphTargetManager)){if(s=s.slice(),this._generatePointsArray(),this._positions){const r=this._positions;this._internalAbstractMeshDataInfo._positions=new Array(r.length);for(let n=0;n<r.length;n++)this._internalAbstractMeshDataInfo._positions[n]=((i=r[n])===null||i===void 0?void 0:i.clone())||new p}return this.getPositionData(e,t,s)}return s}_updateBoundingInfo(){return this._boundingInfo?this._boundingInfo.update(this.worldMatrixFromCache):this._boundingInfo=new dt(p.Zero(),p.Zero(),this.worldMatrixFromCache),this._updateSubMeshesBoundingInfo(this.worldMatrixFromCache),this}_updateSubMeshesBoundingInfo(e){if(!this.subMeshes)return this;const t=this.subMeshes.length;for(let i=0;i<t;i++){const s=this.subMeshes[i];(t>1||!s.IsGlobal)&&s.updateBoundingInfo(e)}return this}_afterComputeWorldMatrix(){this.doNotSyncBoundingInfo||(this._boundingInfoIsDirty=!0)}isInFrustum(e){return this.getBoundingInfo().isInFrustum(e,this.cullingStrategy)}isCompletelyInFrustum(e){return this.getBoundingInfo().isCompletelyInFrustum(e)}intersectsMesh(e,t=!1,i){const s=this.getBoundingInfo(),r=e.getBoundingInfo();if(s.intersects(r,t))return!0;if(i){for(const n of this.getChildMeshes())if(n.intersectsMesh(e,t,!0))return!0}return!1}intersectsPoint(e){return this.getBoundingInfo().intersectsPoint(e)}get checkCollisions(){return this._internalAbstractMeshDataInfo._meshCollisionData._checkCollisions}set checkCollisions(e){this._internalAbstractMeshDataInfo._meshCollisionData._checkCollisions=e}get collider(){return this._internalAbstractMeshDataInfo._meshCollisionData._collider}moveWithCollisions(e){this.getAbsolutePosition().addToRef(this.ellipsoidOffset,this._internalAbstractMeshDataInfo._meshCollisionData._oldPositionForCollisions);const i=this.getScene().collisionCoordinator;return this._internalAbstractMeshDataInfo._meshCollisionData._collider||(this._internalAbstractMeshDataInfo._meshCollisionData._collider=i.createCollider()),this._internalAbstractMeshDataInfo._meshCollisionData._collider._radius=this.ellipsoid,i.getNewPosition(this._internalAbstractMeshDataInfo._meshCollisionData._oldPositionForCollisions,e,this._internalAbstractMeshDataInfo._meshCollisionData._collider,this.collisionRetryCount,this,this._onCollisionPositionChange,this.uniqueId),this}_collideForSubMesh(e,t,i){var s;if(this._generatePointsArray(),!this._positions)return this;if(!e._lastColliderWorldVertices||!e._lastColliderTransformMatrix.equals(t)){e._lastColliderTransformMatrix=t.clone(),e._lastColliderWorldVertices=[],e._trianglePlanes=[];const r=e.verticesStart,n=e.verticesStart+e.verticesCount;for(let a=r;a<n;a++)e._lastColliderWorldVertices.push(p.TransformCoordinates(this._positions[a],t))}return i._collide(e._trianglePlanes,e._lastColliderWorldVertices,this.getIndices(),e.indexStart,e.indexStart+e.indexCount,e.verticesStart,!!e.getMaterial(),this,this._shouldConvertRHS(),((s=e.getMaterial())===null||s===void 0?void 0:s.fillMode)===7),this}_processCollisionsForSubMeshes(e,t){const i=this._scene.getCollidingSubMeshCandidates(this,e),s=i.length;for(let r=0;r<s;r++){const n=i.data[r];s>1&&!n._checkCollision(e)||this._collideForSubMesh(n,t,e)}return this}_shouldConvertRHS(){return!1}_checkCollision(e){if(!this.getBoundingInfo()._checkCollision(e))return this;const t=D.Matrix[0],i=D.Matrix[1];return x.ScalingToRef(1/e._radius.x,1/e._radius.y,1/e._radius.z,t),this.worldMatrixFromCache.multiplyToRef(t,i),this._processCollisionsForSubMeshes(e,i),this}_generatePointsArray(){return!1}intersects(e,t,i,s=!1,r,n=!1){const a=new Ut,o=this.getClassName()==="InstancedLinesMesh"||this.getClassName()==="LinesMesh"?this.intersectionThreshold:0,h=this.getBoundingInfo();if(!this.subMeshes||!n&&(!e.intersectsSphere(h.boundingSphere,o)||!e.intersectsBox(h.boundingBox,o)))return a;if(s)return a.hit=!n,a.pickedMesh=n?null:this,a.distance=n?0:p.Distance(e.origin,h.boundingSphere.center),a.subMeshId=0,a;if(!this._generatePointsArray())return a;let l=null;const u=this._scene.getIntersectingSubMeshCandidates(this,e),d=u.length;let f=!1;for(let _=0;_<d;_++){const m=u.data[_].getMaterial();if(m&&(m.fillMode==7||m.fillMode==0||m.fillMode==1||m.fillMode==2||m.fillMode==4)){f=!0;break}}if(!f)return a.hit=!0,a.pickedMesh=this,a.distance=p.Distance(e.origin,h.boundingSphere.center),a.subMeshId=-1,a;for(let _=0;_<d;_++){const E=u.data[_];if(d>1&&!E.canIntersects(e))continue;const m=E.intersects(e,this._positions,this.getIndices(),t,i);if(m&&(t||!l||m.distance<l.distance)&&(l=m,l.subMeshId=_,t))break}if(l){const _=r??this.getWorldMatrix(),E=D.Vector3[0],m=D.Vector3[1];p.TransformCoordinatesToRef(e.origin,_,E),e.direction.scaleToRef(l.distance,m);const S=p.TransformNormal(m,_).addInPlace(E);return a.hit=!0,a.distance=p.Distance(E,S),a.pickedPoint=S,a.pickedMesh=this,a.bu=l.bu||0,a.bv=l.bv||0,a.subMeshFaceId=l.faceId,a.faceId=l.faceId+u.data[l.subMeshId].indexStart/(this.getClassName().indexOf("LinesMesh")!==-1?2:3),a.subMeshId=l.subMeshId,a}return a}clone(e,t,i){return null}releaseSubMeshes(){if(this.subMeshes)for(;this.subMeshes.length;)this.subMeshes[0].dispose();else this.subMeshes=new Array;return this}dispose(e,t=!1){let i;for(this._scene.useMaterialMeshMap&&this._internalAbstractMeshDataInfo._material&&this._internalAbstractMeshDataInfo._material.meshMap&&(this._internalAbstractMeshDataInfo._material.meshMap[this.uniqueId]=void 0),this.getScene().freeActiveMeshes(),this.getScene().freeRenderingGroups(),this.actionManager!==void 0&&this.actionManager!==null&&(this.actionManager.dispose(),this.actionManager=null),this._internalAbstractMeshDataInfo._skeleton=null,this._transformMatrixTexture&&(this._transformMatrixTexture.dispose(),this._transformMatrixTexture=null),i=0;i<this._intersectionsInProgress.length;i++){const n=this._intersectionsInProgress[i],a=n._intersectionsInProgress.indexOf(this);n._intersectionsInProgress.splice(a,1)}this._intersectionsInProgress.length=0,this.getScene().lights.forEach(n=>{let a=n.includedOnlyMeshes.indexOf(this);a!==-1&&n.includedOnlyMeshes.splice(a,1),a=n.excludedMeshes.indexOf(this),a!==-1&&n.excludedMeshes.splice(a,1);const o=n.getShadowGenerators();if(o){const h=o.values();for(let l=h.next();l.done!==!0;l=h.next()){const d=l.value.getShadowMap();d&&d.renderList&&(a=d.renderList.indexOf(this),a!==-1&&d.renderList.splice(a,1))}}}),(this.getClassName()!=="InstancedMesh"||this.getClassName()!=="InstancedLinesMesh")&&this.releaseSubMeshes();const r=this.getScene().getEngine();if(this._occlusionQuery!==null&&(this.isOcclusionQueryInProgress=!1,r.deleteQuery(this._occlusionQuery),this._occlusionQuery=null),r.wipeCaches(),this.getScene().removeMesh(this),this._parentContainer){const n=this._parentContainer.meshes.indexOf(this);n>-1&&this._parentContainer.meshes.splice(n,1),this._parentContainer=null}if(t&&this.material&&(this.material.getClassName()==="MultiMaterial"?this.material.dispose(!1,!0,!0):this.material.dispose(!1,!0)),!e)for(i=0;i<this.getScene().particleSystems.length;i++)this.getScene().particleSystems[i].emitter===this&&(this.getScene().particleSystems[i].dispose(),i--);this._internalAbstractMeshDataInfo._facetData.facetDataEnabled&&this.disableFacetData(),this._uniformBuffer.dispose(),this.onAfterWorldMatrixUpdateObservable.clear(),this.onCollideObservable.clear(),this.onCollisionPositionChangeObservable.clear(),this.onRebuildObservable.clear(),super.dispose(e,t)}addChild(e,t=!1){return e.setParent(this,t),this}removeChild(e,t=!1){return e.setParent(null,t),this}_initFacetData(){const e=this._internalAbstractMeshDataInfo._facetData;e.facetNormals||(e.facetNormals=new Array),e.facetPositions||(e.facetPositions=new Array),e.facetPartitioning||(e.facetPartitioning=new Array),e.facetNb=this.getIndices().length/3|0,e.partitioningSubdivisions=e.partitioningSubdivisions?e.partitioningSubdivisions:10,e.partitioningBBoxRatio=e.partitioningBBoxRatio?e.partitioningBBoxRatio:1.01;for(let t=0;t<e.facetNb;t++)e.facetNormals[t]=p.Zero(),e.facetPositions[t]=p.Zero();return e.facetDataEnabled=!0,this}updateFacetData(){const e=this._internalAbstractMeshDataInfo._facetData;e.facetDataEnabled||this._initFacetData();const t=this.getVerticesData(g.PositionKind),i=this.getIndices(),s=this.getVerticesData(g.NormalKind),r=this.getBoundingInfo();if(e.facetDepthSort&&!e.facetDepthSortEnabled){if(e.facetDepthSortEnabled=!0,i instanceof Uint16Array)e.depthSortedIndices=new Uint16Array(i);else if(i instanceof Uint32Array)e.depthSortedIndices=new Uint32Array(i);else{let a=!1;for(let o=0;o<i.length;o++)if(i[o]>65535){a=!0;break}a?e.depthSortedIndices=new Uint32Array(i):e.depthSortedIndices=new Uint16Array(i)}if(e.facetDepthSortFunction=function(a,o){return o.sqDistance-a.sqDistance},!e.facetDepthSortFrom){const a=this.getScene().activeCamera;e.facetDepthSortFrom=a?a.position:p.Zero()}e.depthSortedFacets=[];for(let a=0;a<e.facetNb;a++){const o={ind:a*3,sqDistance:0};e.depthSortedFacets.push(o)}e.invertedMatrix=x.Identity(),e.facetDepthSortOrigin=p.Zero()}e.bbSize.x=r.maximum.x-r.minimum.x>xe?r.maximum.x-r.minimum.x:xe,e.bbSize.y=r.maximum.y-r.minimum.y>xe?r.maximum.y-r.minimum.y:xe,e.bbSize.z=r.maximum.z-r.minimum.z>xe?r.maximum.z-r.minimum.z:xe;let n=e.bbSize.x>e.bbSize.y?e.bbSize.x:e.bbSize.y;if(n=n>e.bbSize.z?n:e.bbSize.z,e.subDiv.max=e.partitioningSubdivisions,e.subDiv.X=Math.floor(e.subDiv.max*e.bbSize.x/n),e.subDiv.Y=Math.floor(e.subDiv.max*e.bbSize.y/n),e.subDiv.Z=Math.floor(e.subDiv.max*e.bbSize.z/n),e.subDiv.X=e.subDiv.X<1?1:e.subDiv.X,e.subDiv.Y=e.subDiv.Y<1?1:e.subDiv.Y,e.subDiv.Z=e.subDiv.Z<1?1:e.subDiv.Z,e.facetParameters.facetNormals=this.getFacetLocalNormals(),e.facetParameters.facetPositions=this.getFacetLocalPositions(),e.facetParameters.facetPartitioning=this.getFacetLocalPartitioning(),e.facetParameters.bInfo=r,e.facetParameters.bbSize=e.bbSize,e.facetParameters.subDiv=e.subDiv,e.facetParameters.ratio=this.partitioningBBoxRatio,e.facetParameters.depthSort=e.facetDepthSort,e.facetDepthSort&&e.facetDepthSortEnabled&&(this.computeWorldMatrix(!0),this._worldMatrix.invertToRef(e.invertedMatrix),p.TransformCoordinatesToRef(e.facetDepthSortFrom,e.invertedMatrix,e.facetDepthSortOrigin),e.facetParameters.distanceTo=e.facetDepthSortOrigin),e.facetParameters.depthSortedFacets=e.depthSortedFacets,s&&ee.ComputeNormals(t,i,s,e.facetParameters),e.facetDepthSort&&e.facetDepthSortEnabled){e.depthSortedFacets.sort(e.facetDepthSortFunction);const a=e.depthSortedIndices.length/3|0;for(let o=0;o<a;o++){const h=e.depthSortedFacets[o].ind;e.depthSortedIndices[o*3]=i[h],e.depthSortedIndices[o*3+1]=i[h+1],e.depthSortedIndices[o*3+2]=i[h+2]}this.updateIndices(e.depthSortedIndices,void 0,!0)}return this}getFacetLocalNormals(){const e=this._internalAbstractMeshDataInfo._facetData;return e.facetNormals||this.updateFacetData(),e.facetNormals}getFacetLocalPositions(){const e=this._internalAbstractMeshDataInfo._facetData;return e.facetPositions||this.updateFacetData(),e.facetPositions}getFacetLocalPartitioning(){const e=this._internalAbstractMeshDataInfo._facetData;return e.facetPartitioning||this.updateFacetData(),e.facetPartitioning}getFacetPosition(e){const t=p.Zero();return this.getFacetPositionToRef(e,t),t}getFacetPositionToRef(e,t){const i=this.getFacetLocalPositions()[e],s=this.getWorldMatrix();return p.TransformCoordinatesToRef(i,s,t),this}getFacetNormal(e){const t=p.Zero();return this.getFacetNormalToRef(e,t),t}getFacetNormalToRef(e,t){const i=this.getFacetLocalNormals()[e];return p.TransformNormalToRef(i,this.getWorldMatrix(),t),this}getFacetsAtLocalCoordinates(e,t,i){const s=this.getBoundingInfo(),r=this._internalAbstractMeshDataInfo._facetData,n=Math.floor((e-s.minimum.x*r.partitioningBBoxRatio)*r.subDiv.X*r.partitioningBBoxRatio/r.bbSize.x),a=Math.floor((t-s.minimum.y*r.partitioningBBoxRatio)*r.subDiv.Y*r.partitioningBBoxRatio/r.bbSize.y),o=Math.floor((i-s.minimum.z*r.partitioningBBoxRatio)*r.subDiv.Z*r.partitioningBBoxRatio/r.bbSize.z);return n<0||n>r.subDiv.max||a<0||a>r.subDiv.max||o<0||o>r.subDiv.max?null:r.facetPartitioning[n+r.subDiv.max*a+r.subDiv.max*r.subDiv.max*o]}getClosestFacetAtCoordinates(e,t,i,s,r=!1,n=!0){const a=this.getWorldMatrix(),o=D.Matrix[5];a.invertToRef(o);const h=D.Vector3[8];p.TransformCoordinatesFromFloatsToRef(e,t,i,o,h);const l=this.getClosestFacetAtLocalCoordinates(h.x,h.y,h.z,s,r,n);return s&&p.TransformCoordinatesFromFloatsToRef(s.x,s.y,s.z,a,s),l}getClosestFacetAtLocalCoordinates(e,t,i,s,r=!1,n=!0){let a=null,o=0,h=0,l=0,u=0,d=0,f=0,_=0,E=0;const m=this.getFacetLocalPositions(),v=this.getFacetLocalNormals(),S=this.getFacetsAtLocalCoordinates(e,t,i);if(!S)return null;let y=Number.MAX_VALUE,A=y,C,b,M;for(let L=0;L<S.length;L++)C=S[L],b=v[C],M=m[C],u=(e-M.x)*b.x+(t-M.y)*b.y+(i-M.z)*b.z,(!r||r&&n&&u>=0||r&&!n&&u<=0)&&(u=b.x*M.x+b.y*M.y+b.z*M.z,d=-(b.x*e+b.y*t+b.z*i-u)/(b.x*b.x+b.y*b.y+b.z*b.z),f=e+b.x*d,_=t+b.y*d,E=i+b.z*d,o=f-e,h=_-t,l=E-i,A=o*o+h*h+l*l,A<y&&(y=A,a=C,s&&(s.x=f,s.y=_,s.z=E)));return a}getFacetDataParameters(){return this._internalAbstractMeshDataInfo._facetData.facetParameters}disableFacetData(){const e=this._internalAbstractMeshDataInfo._facetData;return e.facetDataEnabled&&(e.facetDataEnabled=!1,e.facetPositions=new Array,e.facetNormals=new Array,e.facetPartitioning=new Array,e.facetParameters=null,e.depthSortedIndices=new Uint32Array(0)),this}updateIndices(e,t,i=!1){return this}createNormals(e){const t=this.getVerticesData(g.PositionKind),i=this.getIndices();let s;return this.isVerticesDataPresent(g.NormalKind)?s=this.getVerticesData(g.NormalKind):s=[],ee.ComputeNormals(t,i,s,{useRightHandedSystem:this.getScene().useRightHandedSystem}),this.setVerticesData(g.NormalKind,s,e),this}alignWithNormal(e,t){t||(t=_i.Y);const i=D.Vector3[0],s=D.Vector3[1];return p.CrossToRef(t,e,s),p.CrossToRef(e,s,i),this.rotationQuaternion?Z.RotationQuaternionFromAxisToRef(i,e,s,this.rotationQuaternion):p.RotationFromAxisToRef(i,e,s,this.rotation),this}_checkOcclusionQuery(){return!1}disableEdgesRendering(){throw $("EdgesRenderer")}enableEdgesRendering(e,t,i){throw $("EdgesRenderer")}getConnectedParticleSystems(){return this._scene.particleSystems.filter(e=>e.emitter===this)}}ot.OCCLUSION_TYPE_NONE=0,ot.OCCLUSION_TYPE_OPTIMISTIC=1,ot.OCCLUSION_TYPE_STRICT=2,ot.OCCLUSION_ALGORITHM_TYPE_ACCURATE=0,ot.OCCLUSION_ALGORITHM_TYPE_CONSERVATIVE=1,ot.CULLINGSTRATEGY_STANDARD=0,ot.CULLINGSTRATEGY_BOUNDINGSPHERE_ONLY=1,ot.CULLINGSTRATEGY_OPTIMISTIC_INCLUSION=2,ot.CULLINGSTRATEGY_OPTIMISTIC_INCLUSION_THEN_BSPHERE_ONLY=3,it("BABYLON.AbstractMesh",ot);function ss(c){c.indexOf("vClipPlane")===-1&&c.push("vClipPlane"),c.indexOf("vClipPlane2")===-1&&c.push("vClipPlane2"),c.indexOf("vClipPlane3")===-1&&c.push("vClipPlane3"),c.indexOf("vClipPlane4")===-1&&c.push("vClipPlane4"),c.indexOf("vClipPlane5")===-1&&c.push("vClipPlane5"),c.indexOf("vClipPlane6")===-1&&c.push("vClipPlane6")}function Os(c,e,t){var i,s,r,n,a,o;let h=!1,l=(i=c.clipPlane)!==null&&i!==void 0?i:e.clipPlane;return h=bi(l,t,"CLIPPLANE")||h,l=(s=c.clipPlane2)!==null&&s!==void 0?s:e.clipPlane2,h=bi(l,t,"CLIPPLANE2")||h,l=(r=c.clipPlane3)!==null&&r!==void 0?r:e.clipPlane3,h=bi(l,t,"CLIPPLANE3")||h,l=(n=c.clipPlane4)!==null&&n!==void 0?n:e.clipPlane4,h=bi(l,t,"CLIPPLANE4")||h,l=(a=c.clipPlane5)!==null&&a!==void 0?a:e.clipPlane5,h=bi(l,t,"CLIPPLANE5")||h,l=(o=c.clipPlane6)!==null&&o!==void 0?o:e.clipPlane6,h=bi(l,t,"CLIPPLANE6")||h,h}function rs(c,e,t){var i,s,r,n,a,o;let h=(i=e.clipPlane)!==null&&i!==void 0?i:t.clipPlane;Ti(c,"vClipPlane",h),h=(s=e.clipPlane2)!==null&&s!==void 0?s:t.clipPlane2,Ti(c,"vClipPlane2",h),h=(r=e.clipPlane3)!==null&&r!==void 0?r:t.clipPlane3,Ti(c,"vClipPlane3",h),h=(n=e.clipPlane4)!==null&&n!==void 0?n:t.clipPlane4,Ti(c,"vClipPlane4",h),h=(a=e.clipPlane5)!==null&&a!==void 0?a:t.clipPlane5,Ti(c,"vClipPlane5",h),h=(o=e.clipPlane6)!==null&&o!==void 0?o:t.clipPlane6,Ti(c,"vClipPlane6",h)}function Ti(c,e,t){t&&c.setFloat4(e,t.normal.x,t.normal.y,t.normal.z,t.d)}function bi(c,e,t){let i=!0;if(c)if(Array.isArray(e)){const s="#define "+t;i=e.indexOf(s)!==-1,i||e.push(s)}else i=e[t],e[t]=!0;return!i}class ie{static BindSceneUniformBuffer(e,t){t.bindToEffect(e,"Scene")}static PrepareDefinesForMergedUV(e,t,i){t._needUVs=!0,t[i]=!0,e.optimizeUVAllocation&&e.getTextureMatrix().isIdentityAs3x2()?(t[i+"DIRECTUV"]=e.coordinatesIndex+1,t["MAINUV"+(e.coordinatesIndex+1)]=!0):t[i+"DIRECTUV"]=0}static BindTextureMatrix(e,t,i){const s=e.getTextureMatrix();t.updateMatrix(i+"Matrix",s)}static GetFogState(e,t){return t.fogEnabled&&e.applyFog&&t.fogMode!==ne.FOGMODE_NONE}static PrepareDefinesForMisc(e,t,i,s,r,n,a){a._areMiscDirty&&(a.LOGARITHMICDEPTH=i,a.POINTSIZE=s,a.FOG=r&&this.GetFogState(e,t),a.NONUNIFORMSCALING=e.nonUniformScaling,a.ALPHATEST=n)}static PrepareDefinesForCamera(e,t){let i=!1;if(e.activeCamera){const s=t.CAMERA_ORTHOGRAPHIC?1:0,r=t.CAMERA_PERSPECTIVE?1:0,n=e.activeCamera.mode===j.ORTHOGRAPHIC_CAMERA?1:0,a=e.activeCamera.mode===j.PERSPECTIVE_CAMERA?1:0;(s^n||r^a)&&(t.CAMERA_ORTHOGRAPHIC=n===1,t.CAMERA_PERSPECTIVE=a===1,i=!0)}return i}static PrepareDefinesForFrameBoundValues(e,t,i,s,r,n=null,a=!1){let o=ie.PrepareDefinesForCamera(e,s);n!==!1&&(o=Os(i,e,s)),s.DEPTHPREPASS!==!t.getColorWrite()&&(s.DEPTHPREPASS=!s.DEPTHPREPASS,o=!0),s.INSTANCES!==r&&(s.INSTANCES=r,o=!0),s.THIN_INSTANCES!==a&&(s.THIN_INSTANCES=a,o=!0),o&&s.markAsUnprocessed()}static PrepareDefinesForBones(e,t){if(e.useBones&&e.computeBonesUsingShaders&&e.skeleton){t.NUM_BONE_INFLUENCERS=e.numBoneInfluencers;const i=t.BONETEXTURE!==void 0;if(e.skeleton.isUsingTextureForMatrices&&i)t.BONETEXTURE=!0;else{t.BonesPerMesh=e.skeleton.bones.length+1,t.BONETEXTURE=i?!1:void 0;const s=e.getScene().prePassRenderer;if(s&&s.enabled){const r=s.excludedSkinnedMesh.indexOf(e)===-1;t.BONES_VELOCITY_ENABLED=r}}}else t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.BONETEXTURE!==void 0&&(t.BONETEXTURE=!1)}static PrepareDefinesForMorphTargets(e,t){const i=e.morphTargetManager;i?(t.MORPHTARGETS_UV=i.supportsUVs&&t.UV1,t.MORPHTARGETS_TANGENT=i.supportsTangents&&t.TANGENT,t.MORPHTARGETS_NORMAL=i.supportsNormals&&t.NORMAL,t.MORPHTARGETS=i.numInfluencers>0,t.NUM_MORPH_INFLUENCERS=i.numInfluencers,t.MORPHTARGETS_TEXTURE=i.isUsingTextureForTargets):(t.MORPHTARGETS_UV=!1,t.MORPHTARGETS_TANGENT=!1,t.MORPHTARGETS_NORMAL=!1,t.MORPHTARGETS=!1,t.NUM_MORPH_INFLUENCERS=0)}static PrepareDefinesForBakedVertexAnimation(e,t){const i=e.bakedVertexAnimationManager;t.BAKED_VERTEX_ANIMATION_TEXTURE=!!(i&&i.isEnabled)}static PrepareDefinesForAttributes(e,t,i,s,r=!1,n=!0,a=!0){if(!t._areAttributesDirty&&t._needNormals===t._normals&&t._needUVs===t._uvs)return!1;t._normals=t._needNormals,t._uvs=t._needUVs,t.NORMAL=t._needNormals&&e.isVerticesDataPresent(g.NormalKind),t._needNormals&&e.isVerticesDataPresent(g.TangentKind)&&(t.TANGENT=!0);for(let o=1;o<=6;++o)t["UV"+o]=t._needUVs?e.isVerticesDataPresent(`uv${o===1?"":o}`):!1;if(i){const o=e.useVertexColors&&e.isVerticesDataPresent(g.ColorKind);t.VERTEXCOLOR=o,t.VERTEXALPHA=e.hasVertexAlpha&&o&&n}return e.isVerticesDataPresent(g.ColorInstanceKind)&&(e.hasInstances||e.hasThinInstances)&&(t.INSTANCESCOLOR=!0),s&&this.PrepareDefinesForBones(e,t),r&&this.PrepareDefinesForMorphTargets(e,t),a&&this.PrepareDefinesForBakedVertexAnimation(e,t),!0}static PrepareDefinesForMultiview(e,t){if(e.activeCamera){const i=t.MULTIVIEW;t.MULTIVIEW=e.activeCamera.outputRenderTarget!==null&&e.activeCamera.outputRenderTarget.getViewCount()>1,t.MULTIVIEW!=i&&t.markAsUnprocessed()}}static PrepareDefinesForOIT(e,t,i){const s=t.ORDER_INDEPENDENT_TRANSPARENCY,r=t.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;t.ORDER_INDEPENDENT_TRANSPARENCY=e.useOrderIndependentTransparency&&i,t.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!e.getEngine().getCaps().textureFloatLinearFiltering,(s!==t.ORDER_INDEPENDENT_TRANSPARENCY||r!==t.ORDER_INDEPENDENT_TRANSPARENCY_16BITS)&&t.markAsUnprocessed()}static PrepareDefinesForPrePass(e,t,i){const s=t.PREPASS;if(!t._arePrePassDirty)return;const r=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"}];if(e.prePassRenderer&&e.prePassRenderer.enabled&&i){t.PREPASS=!0,t.SCENE_MRT_COUNT=e.prePassRenderer.mrtCount;for(let n=0;n<r.length;n++){const a=e.prePassRenderer.getIndex(r[n].type);a!==-1?(t[r[n].define]=!0,t[r[n].index]=a):t[r[n].define]=!1}}else{t.PREPASS=!1;for(let n=0;n<r.length;n++)t[r[n].define]=!1}t.PREPASS!=s&&(t.markAsUnprocessed(),t.markAsImageProcessingDirty())}static PrepareDefinesForLight(e,t,i,s,r,n,a){var o;switch(a.needNormals=!0,r["LIGHT"+s]===void 0&&(a.needRebuild=!0),r["LIGHT"+s]=!0,r["SPOTLIGHT"+s]=!1,r["HEMILIGHT"+s]=!1,r["POINTLIGHT"+s]=!1,r["DIRLIGHT"+s]=!1,i.prepareLightSpecificDefines(r,s),r["LIGHT_FALLOFF_PHYSICAL"+s]=!1,r["LIGHT_FALLOFF_GLTF"+s]=!1,r["LIGHT_FALLOFF_STANDARD"+s]=!1,i.falloffType){case Ee.FALLOFF_GLTF:r["LIGHT_FALLOFF_GLTF"+s]=!0;break;case Ee.FALLOFF_PHYSICAL:r["LIGHT_FALLOFF_PHYSICAL"+s]=!0;break;case Ee.FALLOFF_STANDARD:r["LIGHT_FALLOFF_STANDARD"+s]=!0;break}if(n&&!i.specular.equalsFloats(0,0,0)&&(a.specularEnabled=!0),r["SHADOW"+s]=!1,r["SHADOWCSM"+s]=!1,r["SHADOWCSMDEBUG"+s]=!1,r["SHADOWCSMNUM_CASCADES"+s]=!1,r["SHADOWCSMUSESHADOWMAXZ"+s]=!1,r["SHADOWCSMNOBLEND"+s]=!1,r["SHADOWCSM_RIGHTHANDED"+s]=!1,r["SHADOWPCF"+s]=!1,r["SHADOWPCSS"+s]=!1,r["SHADOWPOISSON"+s]=!1,r["SHADOWESM"+s]=!1,r["SHADOWCLOSEESM"+s]=!1,r["SHADOWCUBE"+s]=!1,r["SHADOWLOWQUALITY"+s]=!1,r["SHADOWMEDIUMQUALITY"+s]=!1,t&&t.receiveShadows&&e.shadowsEnabled&&i.shadowEnabled){const h=(o=i.getShadowGenerator(e.activeCamera))!==null&&o!==void 0?o:i.getShadowGenerator();if(h){const l=h.getShadowMap();l&&l.renderList&&l.renderList.length>0&&(a.shadowEnabled=!0,h.prepareDefines(r,s))}}i.lightmapMode!=Ee.LIGHTMAP_DEFAULT?(a.lightmapMode=!0,r["LIGHTMAPEXCLUDED"+s]=!0,r["LIGHTMAPNOSPECULAR"+s]=i.lightmapMode==Ee.LIGHTMAP_SHADOWSONLY):(r["LIGHTMAPEXCLUDED"+s]=!1,r["LIGHTMAPNOSPECULAR"+s]=!1)}static PrepareDefinesForLights(e,t,i,s,r=4,n=!1){if(!i._areLightsDirty)return i._needNormals;let a=0;const o={needNormals:i._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(e.lightsEnabled&&!n){for(const l of t.lightSources)if(this.PrepareDefinesForLight(e,t,l,a,i,s,o),a++,a===r)break}i.SPECULARTERM=o.specularEnabled,i.SHADOWS=o.shadowEnabled;for(let l=a;l<r;l++)i["LIGHT"+l]!==void 0&&(i["LIGHT"+l]=!1,i["HEMILIGHT"+l]=!1,i["POINTLIGHT"+l]=!1,i["DIRLIGHT"+l]=!1,i["SPOTLIGHT"+l]=!1,i["SHADOW"+l]=!1,i["SHADOWCSM"+l]=!1,i["SHADOWCSMDEBUG"+l]=!1,i["SHADOWCSMNUM_CASCADES"+l]=!1,i["SHADOWCSMUSESHADOWMAXZ"+l]=!1,i["SHADOWCSMNOBLEND"+l]=!1,i["SHADOWCSM_RIGHTHANDED"+l]=!1,i["SHADOWPCF"+l]=!1,i["SHADOWPCSS"+l]=!1,i["SHADOWPOISSON"+l]=!1,i["SHADOWESM"+l]=!1,i["SHADOWCLOSEESM"+l]=!1,i["SHADOWCUBE"+l]=!1,i["SHADOWLOWQUALITY"+l]=!1,i["SHADOWMEDIUMQUALITY"+l]=!1);const h=e.getEngine().getCaps();return i.SHADOWFLOAT===void 0&&(o.needRebuild=!0),i.SHADOWFLOAT=o.shadowEnabled&&(h.textureFloatRender&&h.textureFloatLinearFiltering||h.textureHalfFloatRender&&h.textureHalfFloatLinearFiltering),i.LIGHTMAPEXCLUDED=o.lightmapMode,o.needRebuild&&i.rebuild(),o.needNormals}static PrepareUniformsAndSamplersForLight(e,t,i,s,r=null,n=!1){r&&r.push("Light"+e),!n&&(t.push("vLightData"+e,"vLightDiffuse"+e,"vLightSpecular"+e,"vLightDirection"+e,"vLightFalloff"+e,"vLightGround"+e,"lightMatrix"+e,"shadowsInfo"+e,"depthValues"+e),i.push("shadowSampler"+e),i.push("depthSampler"+e),t.push("viewFrustumZ"+e,"cascadeBlendFactor"+e,"lightSizeUVCorrection"+e,"depthCorrection"+e,"penumbraDarkness"+e,"frustumLengths"+e),s&&(i.push("projectionLightSampler"+e),t.push("textureProjectionMatrix"+e)))}static PrepareUniformsAndSamplersList(e,t,i,s=4){let r,n=null;if(e.uniformsNames){const a=e;r=a.uniformsNames,n=a.uniformBuffersNames,t=a.samplers,i=a.defines,s=a.maxSimultaneousLights||0}else r=e,t||(t=[]);for(let a=0;a<s&&i["LIGHT"+a];a++)this.PrepareUniformsAndSamplersForLight(a,r,t,i["PROJECTEDLIGHTTEXTURE"+a],n);i.NUM_MORPH_INFLUENCERS&&r.push("morphTargetInfluences"),i.BAKED_VERTEX_ANIMATION_TEXTURE&&(r.push("bakedVertexAnimationSettings"),r.push("bakedVertexAnimationTextureSizeInverted"),r.push("bakedVertexAnimationTime"),t.push("bakedVertexAnimationTexture"))}static HandleFallbacksForShadows(e,t,i=4,s=0){let r=0;for(let n=0;n<i&&e["LIGHT"+n];n++)n>0&&(r=s+n,t.addFallback(r,"LIGHT"+n)),e.SHADOWS||(e["SHADOW"+n]&&t.addFallback(s,"SHADOW"+n),e["SHADOWPCF"+n]&&t.addFallback(s,"SHADOWPCF"+n),e["SHADOWPCSS"+n]&&t.addFallback(s,"SHADOWPCSS"+n),e["SHADOWPOISSON"+n]&&t.addFallback(s,"SHADOWPOISSON"+n),e["SHADOWESM"+n]&&t.addFallback(s,"SHADOWESM"+n),e["SHADOWCLOSEESM"+n]&&t.addFallback(s,"SHADOWCLOSEESM"+n));return r++}static PrepareAttributesForMorphTargetsInfluencers(e,t,i){this._TmpMorphInfluencers.NUM_MORPH_INFLUENCERS=i,this.PrepareAttributesForMorphTargets(e,t,this._TmpMorphInfluencers)}static PrepareAttributesForMorphTargets(e,t,i){const s=i.NUM_MORPH_INFLUENCERS;if(s>0&&fe.LastCreatedEngine){const r=fe.LastCreatedEngine.getCaps().maxVertexAttribs,n=t.morphTargetManager;if(n!=null&&n.isUsingTextureForTargets)return;const a=n&&n.supportsNormals&&i.NORMAL,o=n&&n.supportsTangents&&i.TANGENT,h=n&&n.supportsUVs&&i.UV1;for(let l=0;l<s;l++)e.push(g.PositionKind+l),a&&e.push(g.NormalKind+l),o&&e.push(g.TangentKind+l),h&&e.push(g.UVKind+"_"+l),e.length>r&&O.Error("Cannot add more vertex attributes for mesh "+t.name)}}static PrepareAttributesForBakedVertexAnimation(e,t,i){i.BAKED_VERTEX_ANIMATION_TEXTURE&&i.INSTANCES&&e.push("bakedVertexAnimationSettingsInstanced")}static PrepareAttributesForBones(e,t,i,s){i.NUM_BONE_INFLUENCERS>0&&(s.addCPUSkinningFallback(0,t),e.push(g.MatricesIndicesKind),e.push(g.MatricesWeightsKind),i.NUM_BONE_INFLUENCERS>4&&(e.push(g.MatricesIndicesExtraKind),e.push(g.MatricesWeightsExtraKind)))}static PrepareAttributesForInstances(e,t){(t.INSTANCES||t.THIN_INSTANCES)&&this.PushAttributesForInstances(e,!!t.PREPASS_VELOCITY),t.INSTANCESCOLOR&&e.push(g.ColorInstanceKind)}static PushAttributesForInstances(e,t=!1){e.push("world0"),e.push("world1"),e.push("world2"),e.push("world3"),t&&(e.push("previousWorld0"),e.push("previousWorld1"),e.push("previousWorld2"),e.push("previousWorld3"))}static BindLightProperties(e,t,i){e.transferToEffect(t,i+"")}static BindLight(e,t,i,s,r,n=!0){e._bindLight(t,i,s,r,n)}static BindLights(e,t,i,s,r=4){const n=Math.min(t.lightSources.length,r);for(let a=0;a<n;a++){const o=t.lightSources[a];this.BindLight(o,a,e,i,typeof s=="boolean"?s:s.SPECULARTERM,t.receiveShadows)}}static BindFogParameters(e,t,i,s=!1){e.fogEnabled&&t.applyFog&&e.fogMode!==ne.FOGMODE_NONE&&(i.setFloat4("vFogInfos",e.fogMode,e.fogStart,e.fogEnd,e.fogDensity),s?(e.fogColor.toLinearSpaceToRef(this._TempFogColor),i.setColor3("vFogColor",this._TempFogColor)):i.setColor3("vFogColor",e.fogColor))}static BindBonesParameters(e,t,i){if(!(!t||!e)&&(e.computeBonesUsingShaders&&t._bonesComputationForcedToCPU&&(e.computeBonesUsingShaders=!1),e.useBones&&e.computeBonesUsingShaders&&e.skeleton)){const s=e.skeleton;if(s.isUsingTextureForMatrices&&t.getUniformIndex("boneTextureWidth")>-1){const r=s.getTransformMatrixTexture(e);t.setTexture("boneSampler",r),t.setFloat("boneTextureWidth",4*(s.bones.length+1))}else{const r=s.getTransformMatrices(e);r&&(t.setMatrices("mBones",r),i&&e.getScene().prePassRenderer&&e.getScene().prePassRenderer.getIndex(2)&&(i.previousBones[e.uniqueId]||(i.previousBones[e.uniqueId]=r.slice()),t.setMatrices("mPreviousBones",i.previousBones[e.uniqueId]),ie._CopyBonesTransformationMatrices(r,i.previousBones[e.uniqueId])))}}}static _CopyBonesTransformationMatrices(e,t){return t.set(e),t}static BindMorphTargetParameters(e,t){const i=e.morphTargetManager;!e||!i||t.setFloatArray("morphTargetInfluences",i.influences)}static BindLogDepth(e,t,i){if(!e||e.LOGARITHMICDEPTH||e.indexOf&&e.indexOf("LOGARITHMICDEPTH")>=0){const s=i.activeCamera;s.mode===j.ORTHOGRAPHIC_CAMERA&&O.Error("Logarithmic depth is not compatible with orthographic cameras!",20),t.setFloat("logarithmicDepthConstant",2/(Math.log(s.maxZ+1)/Math.LN2))}}}ie._TmpMorphInfluencers={NUM_MORPH_INFLUENCERS:0},ie._TempFogColor=re.Black();class Wt{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(e){this._func=e}get funcRef(){return this._funcRef}set funcRef(e){this._funcRef=e}get funcMask(){return this._funcMask}set funcMask(e){this._funcMask=e}get opStencilFail(){return this._opStencilFail}set opStencilFail(e){this._opStencilFail=e}get opDepthFail(){return this._opDepthFail}set opDepthFail(e){this._opDepthFail=e}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(e){this._opStencilDepthPass=e}get mask(){return this._mask}set mask(e){this._mask=e}get enabled(){return this._enabled}set enabled(e){this._enabled=e}getClassName(){return"MaterialStencilState"}copyTo(e){ae.Clone(()=>e,this)}serialize(){return ae.Serialize(this)}parse(e,t,i){ae.Parse(()=>this,e,t,i)}}T([R()],Wt.prototype,"func",null),T([R()],Wt.prototype,"funcRef",null),T([R()],Wt.prototype,"funcMask",null),T([R()],Wt.prototype,"opStencilFail",null),T([R()],Wt.prototype,"opDepthFail",null),T([R()],Wt.prototype,"opStencilDepthPass",null),T([R()],Wt.prototype,"mask",null),T([R()],Wt.prototype,"enabled",null);var Qe;(function(c){c[c.Created=1]="Created",c[c.Disposed=2]="Disposed",c[c.GetDefineNames=4]="GetDefineNames",c[c.PrepareUniformBuffer=8]="PrepareUniformBuffer",c[c.IsReadyForSubMesh=16]="IsReadyForSubMesh",c[c.PrepareDefines=32]="PrepareDefines",c[c.BindForSubMesh=64]="BindForSubMesh",c[c.PrepareEffect=128]="PrepareEffect",c[c.GetAnimatables=256]="GetAnimatables",c[c.GetActiveTextures=512]="GetActiveTextures",c[c.HasTexture=1024]="HasTexture",c[c.FillRenderTargetTextures=2048]="FillRenderTargetTextures",c[c.HasRenderTargetTextures=4096]="HasRenderTargetTextures",c[c.HardBindForSubMesh=8192]="HardBindForSubMesh"})(Qe||(Qe={}));class P{constructor(e,t,i){this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.onDisposeObservable=new F,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new Wt,this._useUBO=!1,this._fillMode=P.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._forceAlphaTest=!1,this._transparencyMode=null,this.name=e;const s=t||fe.LastCreatedScene;s&&(this._scene=s,this._dirtyCallbacks={},this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[63]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=e||H.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new mi(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._scene.useRightHandedSystem?this.sideOrientation=P.ClockWiseSideOrientation:this.sideOrientation=P.CounterClockWiseSideOrientation,this._uniformBuffer=new V(this._scene.getEngine(),void 0,void 0,e),this._useUBO=this.getScene().getEngine().supportsUniformBuffers,i||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),P.OnEventObservable.notifyObservers(this,Qe.Created))}get canRenderToMRT(){return!1}set alpha(e){if(this._alpha===e)return;const t=this._alpha;this._alpha=e,(t===1||e===1)&&this.markAsDirty(P.MiscDirtyFlag)}get alpha(){return this._alpha}set backFaceCulling(e){this._backFaceCulling!==e&&(this._backFaceCulling=e,this.markAsDirty(P.TextureDirtyFlag))}get backFaceCulling(){return this._backFaceCulling}set cullBackFaces(e){this._cullBackFaces!==e&&(this._cullBackFaces=e,this.markAsDirty(P.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(e){this._blockDirtyMechanism!==e&&(this._blockDirtyMechanism=e,e||this.markDirty())}atomicMaterialsUpdate(e){this.blockDirtyMechanism=!0;try{e(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(e){this._onDisposeObserver&&this.onDisposeObservable.remove(this._onDisposeObserver),this._onDisposeObserver=this.onDisposeObservable.add(e)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new F),this._onBindObservable}set onBind(e){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(e)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new F),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new F),this._onEffectCreatedObservable}set alphaMode(e){this._alphaMode!==e&&(this._alphaMode=e,this.markAsDirty(P.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(e){this._needDepthPrePass!==e&&(this._needDepthPrePass=e,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(e){this._fogEnabled!==e&&(this._fogEnabled=e,this.markAsDirty(P.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case P.WireFrameFillMode:case P.LineListDrawMode:case P.LineLoopDrawMode:case P.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(e){this.fillMode=e?P.WireFrameFillMode:P.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case P.PointFillMode:case P.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(e){this.fillMode=e?P.PointFillMode:P.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(e){this._fillMode!==e&&(this._fillMode=e,this.markAsDirty(P.MiscDirtyFlag))}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(e){this._drawWrapper=e}toString(e){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.markDirty(),this.checkReadyOnlyOnce=!0}unfreeze(){this.markDirty(),this.checkReadyOnlyOnce=!1}isReady(e,t){return!0}isReadyForSubMesh(e,t,i){const s=t.materialDefines;return s?(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=s,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh):!1}getEffect(){return this._drawWrapper.effect}getScene(){return this._scene}get transparencyMode(){return this._transparencyMode}set transparencyMode(e){this._transparencyMode!==e&&(this._transparencyMode=e,this._forceAlphaTest=e===P.MATERIAL_ALPHATESTANDBLEND,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _disableAlphaBlending(){return this._transparencyMode===P.MATERIAL_OPAQUE||this._transparencyMode===P.MATERIAL_ALPHATEST}needAlphaBlending(){return this._disableAlphaBlending?!1:this.alpha<1}needAlphaBlendingForMesh(e){return e.visibility<1?!0:this._disableAlphaBlending?!1:e.hasVertexAlpha||this.needAlphaBlending()}needAlphaTesting(){return!!this._forceAlphaTest}_shouldTurnAlphaTestOn(e){return!this.needAlphaBlendingForMesh(e)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}markDirty(e=!1){const t=this.getScene().meshes;for(const i of t)if(i.subMeshes)for(const s of i.subMeshes)s.getMaterial()===this&&s.effect&&(s.effect._wasPreviouslyReady=!1,s.effect._wasPreviouslyUsingInstances=null,s.effect._forceRebindOnNextCall=e);e&&this.markAsDirty(P.AllDirtyFlag)}_preBind(e,t=null){const i=this._scene.getEngine(),r=(t??this.sideOrientation)===P.ClockWiseSideOrientation;return i.enableEffect(e||this._getDrawWrapper()),i.setState(this.backFaceCulling,this.zOffset,!1,r,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),r}bind(e,t){}buildUniformLayout(){const e=this._uniformBuffer;this._eventInfo.ubo=e,this._callbackPluginEventGeneric(Qe.PrepareUniformBuffer,this._eventInfo),e.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(e,t,i){const s=i.effect;s&&(this._eventInfo.subMesh=i,this._callbackPluginEventBindForSubMesh(this._eventInfo),s._forceRebindOnNextCall=!1)}bindOnlyWorldMatrix(e){}bindView(e){this._useUBO?this._needToBindSceneUbo=!0:e.setMatrix("view",this.getScene().getViewMatrix())}bindViewProjection(e){this._useUBO?this._needToBindSceneUbo=!0:(e.setMatrix("viewProjection",this.getScene().getTransformMatrix()),e.setMatrix("projection",this.getScene().getProjectionMatrix()))}bindEyePosition(e,t){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(e,t)}_afterBind(e,t=null){if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&t&&(this._needToBindSceneUbo=!1,ie.BindSceneUniformBuffer(t,this.getScene().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),e?this._scene._cachedVisibility=e.visibility:this._scene._cachedVisibility=1,this._onBindObservable&&e&&this._onBindObservable.notifyObservers(e),this.disableDepthWrite){const i=this._scene.getEngine();this._cachedDepthWriteState=i.getDepthWrite(),i.setDepthWrite(!1)}if(this.disableColorWrite){const i=this._scene.getEngine();this._cachedColorWriteState=i.getColorWrite(),i.setColorWrite(!1)}if(this.depthFunction!==0){const i=this._scene.getEngine();this._cachedDepthFunctionState=i.getDepthFunction()||0,i.setDepthFunction(this.depthFunction)}}unbind(){this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),this.depthFunction!==0&&this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState),this.disableDepthWrite&&this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState),this.disableColorWrite&&this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(Qe.GetAnimatables,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(Qe.GetActiveTextures,this._eventInfo),this._eventInfo.activeTextures}hasTexture(e){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=e,this._callbackPluginEventGeneric(Qe.HasTexture,this._eventInfo),this._eventInfo.hasTexture}clone(e){return null}getBindedMeshes(){if(this.meshMap){const e=new Array;for(const t in this.meshMap){const i=this.meshMap[t];i&&e.push(i)}return e}else return this._scene.meshes.filter(t=>t.material===this)}forceCompilation(e,t,i,s){const r={clipPlane:!1,useInstances:!1,...i},n=this.getScene(),a=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const o=()=>{if(!this._scene||!this._scene.getEngine())return;const h=n.clipPlane;if(r.clipPlane&&(n.clipPlane=new xt(0,0,0,1)),this._storeEffectOnSubMeshes){let l=!0,u=null;if(e.subMeshes){const d=new vt(0,0,0,0,0,e,void 0,!1,!1);d.materialDefines&&(d.materialDefines._renderId=-1),this.isReadyForSubMesh(e,d,r.useInstances)||(d.effect&&d.effect.getCompilationError()&&d.effect.allFallbacksProcessed()?u=d.effect.getCompilationError():(l=!1,setTimeout(o,16)))}l&&(this.allowShaderHotSwapping=a,u&&s&&s(u),t&&t(this))}else this.isReady()?(this.allowShaderHotSwapping=a,t&&t(this)):setTimeout(o,16);r.clipPlane&&(n.clipPlane=h)};o()}forceCompilationAsync(e,t){return new Promise((i,s)=>{this.forceCompilation(e,()=>{i()},t,r=>{s(r)})})}markAsDirty(e){this.getScene().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(P._DirtyCallbackArray.length=0,e&P.TextureDirtyFlag&&P._DirtyCallbackArray.push(P._TextureDirtyCallBack),e&P.LightDirtyFlag&&P._DirtyCallbackArray.push(P._LightsDirtyCallBack),e&P.FresnelDirtyFlag&&P._DirtyCallbackArray.push(P._FresnelDirtyCallBack),e&P.AttributesDirtyFlag&&P._DirtyCallbackArray.push(P._AttributeDirtyCallBack),e&P.MiscDirtyFlag&&P._DirtyCallbackArray.push(P._MiscDirtyCallBack),e&P.PrePassDirtyFlag&&P._DirtyCallbackArray.push(P._PrePassDirtyCallBack),P._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(P._RunDirtyCallBacks),this.getScene().resetCachedMaterial())}resetDrawCache(){const e=this.getScene().meshes;for(const t of e)if(t.subMeshes)for(const i of t.subMeshes)i.getMaterial()===this&&i.resetDrawCache()}_markAllSubMeshesAsDirty(e){if(this.getScene().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const t=this.getScene().meshes;for(const i of t)if(i.subMeshes){for(const s of i.subMeshes)if(s.getMaterial(!1)===this)for(const r of s._drawWrappers)!r||!r.defines||!r.defines.markAllAsDirty||this._materialContext===r.materialContext&&e(r.defines)}}_markScenePrePassDirty(){if(this.getScene().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const e=this.getScene().enablePrePassRenderer();e&&e.markAsDirty()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(P._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(P._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(P._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(P._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(P._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(P._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(P._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(P._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(P._MiscDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(P._TextureAndMiscDirtyCallBack)}setPrePassRenderer(e){return!1}dispose(e,t,i){const s=this.getScene();if(s.stopAnimation(this),s.freeProcessedMaterials(),s.removeMaterial(this),this._eventInfo.forceDisposeTextures=t,this._callbackPluginEventGeneric(Qe.Disposed,this._eventInfo),this._parentContainer){const r=this._parentContainer.materials.indexOf(this);r>-1&&this._parentContainer.materials.splice(r,1),this._parentContainer=null}if(i!==!0)if(this.meshMap)for(const r in this.meshMap){const n=this.meshMap[r];n&&(n.material=null,this.releaseVertexArrayObject(n,e))}else{const r=s.meshes;for(const n of r)n.material===this&&!n.sourceMesh&&(n.material=null,this.releaseVertexArrayObject(n,e))}this._uniformBuffer.dispose(),e&&this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.onDisposeObservable.notifyObservers(this),this.onDisposeObservable.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}releaseVertexArrayObject(e,t){if(e.geometry){const i=e.geometry;if(this._storeEffectOnSubMeshes)for(const s of e.subMeshes)i._releaseVertexArrayObject(s.effect),t&&s.effect&&s.effect.dispose();else i._releaseVertexArrayObject(this._drawWrapper.effect)}}serialize(){const e=ae.Serialize(this);return e.stencil=this.stencil.serialize(),e.uniqueId=this.uniqueId,e}static Parse(e,t,i){if(!e.customType)e.customType="BABYLON.StandardMaterial";else if(e.customType==="BABYLON.PBRMaterial"&&e.overloadedAlbedo&&(e.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return O.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null;const r=H.Instantiate(e.customType).Parse(e,t,i);return r._loadedUniqueId=e.uniqueId,r}}P.TriangleFillMode=0,P.WireFrameFillMode=1,P.PointFillMode=2,P.PointListDrawMode=3,P.LineListDrawMode=4,P.LineLoopDrawMode=5,P.LineStripDrawMode=6,P.TriangleStripDrawMode=7,P.TriangleFanDrawMode=8,P.ClockWiseSideOrientation=0,P.CounterClockWiseSideOrientation=1,P.TextureDirtyFlag=1,P.LightDirtyFlag=2,P.FresnelDirtyFlag=4,P.AttributesDirtyFlag=8,P.MiscDirtyFlag=16,P.PrePassDirtyFlag=32,P.AllDirtyFlag=63,P.MATERIAL_OPAQUE=0,P.MATERIAL_ALPHATEST=1,P.MATERIAL_ALPHABLEND=2,P.MATERIAL_ALPHATESTANDBLEND=3,P.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,P.MATERIAL_NORMALBLENDMETHOD_RNM=1,P.OnEventObservable=new F,P._AllDirtyCallBack=c=>c.markAllAsDirty(),P._ImageProcessingDirtyCallBack=c=>c.markAsImageProcessingDirty(),P._TextureDirtyCallBack=c=>c.markAsTexturesDirty(),P._FresnelDirtyCallBack=c=>c.markAsFresnelDirty(),P._MiscDirtyCallBack=c=>c.markAsMiscDirty(),P._PrePassDirtyCallBack=c=>c.markAsPrePassDirty(),P._LightsDirtyCallBack=c=>c.markAsLightDirty(),P._AttributeDirtyCallBack=c=>c.markAsAttributesDirty(),P._FresnelAndMiscDirtyCallBack=c=>{P._FresnelDirtyCallBack(c),P._MiscDirtyCallBack(c)},P._TextureAndMiscDirtyCallBack=c=>{P._TextureDirtyCallBack(c),P._MiscDirtyCallBack(c)},P._DirtyCallbackArray=[],P._RunDirtyCallBacks=c=>{for(const e of P._DirtyCallbackArray)e(c)},T([R()],P.prototype,"id",void 0),T([R()],P.prototype,"uniqueId",void 0),T([R()],P.prototype,"name",void 0),T([R()],P.prototype,"metadata",void 0),T([R()],P.prototype,"checkReadyOnEveryCall",void 0),T([R()],P.prototype,"checkReadyOnlyOnce",void 0),T([R()],P.prototype,"state",void 0),T([R("alpha")],P.prototype,"_alpha",void 0),T([R("backFaceCulling")],P.prototype,"_backFaceCulling",void 0),T([R("cullBackFaces")],P.prototype,"_cullBackFaces",void 0),T([R()],P.prototype,"sideOrientation",void 0),T([R("alphaMode")],P.prototype,"_alphaMode",void 0),T([R()],P.prototype,"_needDepthPrePass",void 0),T([R()],P.prototype,"disableDepthWrite",void 0),T([R()],P.prototype,"disableColorWrite",void 0),T([R()],P.prototype,"forceDepthWrite",void 0),T([R()],P.prototype,"depthFunction",void 0),T([R()],P.prototype,"separateCullingPass",void 0),T([R("fogEnabled")],P.prototype,"_fogEnabled",void 0),T([R()],P.prototype,"pointSize",void 0),T([R()],P.prototype,"zOffset",void 0),T([R()],P.prototype,"zOffsetUnits",void 0),T([R()],P.prototype,"pointsCloud",null),T([R()],P.prototype,"fillMode",null),T([R()],P.prototype,"transparencyMode",null);class Si extends P{constructor(e,t){super(e,t,!0),this._waitingSubMaterialsUniqueIds=[],this.getScene().multiMaterials.push(this),this.subMaterials=new Array,this._storeEffectOnSubMeshes=!0}get subMaterials(){return this._subMaterials}set subMaterials(e){this._subMaterials=e,this._hookArray(e)}getChildren(){return this.subMaterials}_hookArray(e){const t=e.push;e.push=(...s)=>{const r=t.apply(e,s);return this._markAllSubMeshesAsTexturesDirty(),r};const i=e.splice;e.splice=(s,r)=>{const n=i.apply(e,[s,r]);return this._markAllSubMeshesAsTexturesDirty(),n}}getSubMaterial(e){return e<0||e>=this.subMaterials.length?this.getScene().defaultMaterial:this.subMaterials[e]}getActiveTextures(){return super.getActiveTextures().concat(...this.subMaterials.map(e=>e?e.getActiveTextures():[]))}hasTexture(e){var t;if(super.hasTexture(e))return!0;for(let i=0;i<this.subMaterials.length;i++)if(!((t=this.subMaterials[i])===null||t===void 0)&&t.hasTexture(e))return!0;return!1}getClassName(){return"MultiMaterial"}isReadyForSubMesh(e,t,i){for(let s=0;s<this.subMaterials.length;s++){const r=this.subMaterials[s];if(r){if(r._storeEffectOnSubMeshes){if(!r.isReadyForSubMesh(e,t,i))return!1;continue}if(!r.isReady(e))return!1}}return!0}clone(e,t){const i=new Si(e,this.getScene());for(let s=0;s<this.subMaterials.length;s++){let r=null;const n=this.subMaterials[s];t&&n?r=n.clone(e+"-"+n.name):r=this.subMaterials[s],i.subMaterials.push(r)}return i}serialize(){const e={};e.name=this.name,e.id=this.id,e.uniqueId=this.uniqueId,ge&&(e.tags=ge.GetTags(this)),e.materialsUniqueIds=[],e.materials=[];for(let t=0;t<this.subMaterials.length;t++){const i=this.subMaterials[t];i?(e.materialsUniqueIds.push(i.uniqueId),e.materials.push(i.id)):(e.materialsUniqueIds.push(null),e.materials.push(null))}return e}dispose(e,t,i){const s=this.getScene();if(!s)return;if(i)for(let n=0;n<this.subMaterials.length;n++){const a=this.subMaterials[n];a&&a.dispose(e,t)}const r=s.multiMaterials.indexOf(this);r>=0&&s.multiMaterials.splice(r,1),super.dispose(e,t)}static ParseMultiMaterial(e,t){const i=new Si(e.name,t);return i.id=e.id,i._loadedUniqueId=e.uniqueId,ge&&ge.AddTagsTo(i,e.tags),e.materialsUniqueIds?i._waitingSubMaterialsUniqueIds=e.materialsUniqueIds:e.materials.forEach(s=>i.subMaterials.push(t.getLastMaterialById(s))),i}}it("BABYLON.MultiMaterial",Si);class Wn{constructor(e,t){this.distanceOrScreenCoverage=e,this.mesh=t}}class zn{constructor(){this.visibleInstances={},this.batchCache=new Ir,this.batchCacheReplacementModeInFrozenMode=new Ir,this.instancesBufferSize=32*16*4}}class Ir{constructor(){this.mustReturn=!1,this.visibleInstances=new Array,this.renderSelf=new Array,this.hardwareInstancedRendering=new Array}}class Gn{constructor(){this.instancesCount=0,this.matrixBuffer=null,this.previousMatrixBuffer=null,this.matrixBufferSize=32*16,this.matrixData=null,this.boundingVectors=[],this.worldMatrices=null}}class Xn{constructor(){this._areNormalsFrozen=!1,this._source=null,this.meshMap=null,this._preActivateId=-1,this._LODLevels=new Array,this._useLODScreenCoverage=!1,this._effectiveMaterial=null,this._forcedInstanceCount=0}}class W extends ot{constructor(e,t=null,i=null,s=null,r,n=!0){if(super(e,t),this._internalMeshDataInfo=new Xn,this.delayLoadState=0,this.instances=new Array,this._creationDataStorage=null,this._geometry=null,this._instanceDataStorage=new zn,this._thinInstanceDataStorage=new Gn,this._shouldGenerateFlatShading=!1,this._originalBuilderSideOrientation=W.DEFAULTSIDE,this.overrideMaterialSideOrientation=null,this.ignoreCameraMaxZ=!1,t=this.getScene(),this._onBeforeDraw=(a,o,h)=>{a&&h&&(this._uniformBuffer?this.transferToEffect(o):h.bindOnlyWorldMatrix(o))},s){if(s._geometry&&s._geometry.applyToMesh(this),vs.DeepCopy(s,this,["name","material","skeleton","instances","parent","uniqueId","source","metadata","morphTargetManager","hasInstances","worldMatrixInstancedBuffer","previousWorldMatrixInstancedBuffer","hasLODLevels","geometry","isBlocked","areNormalsFrozen","facetNb","isFacetDataEnabled","lightSources","useBones","isAnInstance","collider","edgesRenderer","forward","up","right","absolutePosition","absoluteScaling","absoluteRotationQuaternion","isWorldMatrixFrozen","nonUniformScaling","behaviors","worldMatrixFromCache","hasThinInstances","cloneMeshMap","hasBoundingInfo"],["_poseMatrix"]),this._internalMeshDataInfo._source=s,t.useClonedMeshMap&&(s._internalMeshDataInfo.meshMap||(s._internalMeshDataInfo.meshMap={}),s._internalMeshDataInfo.meshMap[this.uniqueId]=this),this._originalBuilderSideOrientation=s._originalBuilderSideOrientation,this._creationDataStorage=s._creationDataStorage,s._ranges){const a=s._ranges;for(const o in a)Object.prototype.hasOwnProperty.call(a,o)&&a[o]&&this.createAnimationRange(o,a[o].from,a[o].to)}if(s.metadata&&s.metadata.clone?this.metadata=s.metadata.clone():this.metadata=s.metadata,ge&&ge.HasTags(s)&&ge.AddTagsTo(this,ge.GetTags(s,!0)),this.setEnabled(s.isEnabled(!1)),this.parent=s.parent,this.setPivotMatrix(s.getPivotMatrix()),this.id=e+"."+s.id,this.material=s.material,!r){const a=s.getDescendants(!0);for(let o=0;o<a.length;o++){const h=a[o];h.clone&&h.clone(e+"."+h.name,this)}}if(s.morphTargetManager&&(this.morphTargetManager=s.morphTargetManager),t.getPhysicsEngine){const a=t.getPhysicsEngine();if(n&&a&&a.getPluginVersion()===1){const o=a.getImpostorForPhysicsObject(s);o&&(this.physicsImpostor=o.clone(this))}}for(let a=0;a<t.particleSystems.length;a++){const o=t.particleSystems[a];o.emitter===s&&o.clone(o.name,this)}this.skeleton=s.skeleton,this.refreshBoundingInfo(!0,!0),this.computeWorldMatrix(!0)}i!==null&&(this.parent=i),this._instanceDataStorage.hardwareInstancedRendering=this.getEngine().getCaps().instancedArrays,this._internalMeshDataInfo._onMeshReadyObserverAdded=a=>{a.unregisterOnNextCall=!0,this.isReady(!0)?this.onMeshReadyObservable.notifyObservers(this):this._internalMeshDataInfo._checkReadinessObserver||(this._internalMeshDataInfo._checkReadinessObserver=this._scene.onBeforeRenderObservable.add(()=>{this.isReady(!0)&&(this._scene.onBeforeRenderObservable.remove(this._internalMeshDataInfo._checkReadinessObserver),this._internalMeshDataInfo._checkReadinessObserver=null,this.onMeshReadyObservable.notifyObservers(this))}))},this.onMeshReadyObservable=new F(this._internalMeshDataInfo._onMeshReadyObserverAdded),s&&s.onClonedObservable.notifyObservers(this)}static _GetDefaultSideOrientation(e){return e||W.FRONTSIDE}get useLODScreenCoverage(){return this._internalMeshDataInfo._useLODScreenCoverage}set useLODScreenCoverage(e){this._internalMeshDataInfo._useLODScreenCoverage=e,this._sortLODLevels()}get computeBonesUsingShaders(){return this._internalAbstractMeshDataInfo._computeBonesUsingShaders}set computeBonesUsingShaders(e){this._internalAbstractMeshDataInfo._computeBonesUsingShaders!==e&&(e&&this._internalMeshDataInfo._sourcePositions&&(this.setVerticesData(g.PositionKind,this._internalMeshDataInfo._sourcePositions,!0),this._internalMeshDataInfo._sourceNormals&&this.setVerticesData(g.NormalKind,this._internalMeshDataInfo._sourceNormals,!0),this._internalMeshDataInfo._sourcePositions=null,this._internalMeshDataInfo._sourceNormals=null),this._internalAbstractMeshDataInfo._computeBonesUsingShaders=e,this._markSubMeshesAsAttributesDirty())}get onBeforeRenderObservable(){return this._internalMeshDataInfo._onBeforeRenderObservable||(this._internalMeshDataInfo._onBeforeRenderObservable=new F),this._internalMeshDataInfo._onBeforeRenderObservable}get onBeforeBindObservable(){return this._internalMeshDataInfo._onBeforeBindObservable||(this._internalMeshDataInfo._onBeforeBindObservable=new F),this._internalMeshDataInfo._onBeforeBindObservable}get onAfterRenderObservable(){return this._internalMeshDataInfo._onAfterRenderObservable||(this._internalMeshDataInfo._onAfterRenderObservable=new F),this._internalMeshDataInfo._onAfterRenderObservable}get onBetweenPassObservable(){return this._internalMeshDataInfo._onBetweenPassObservable||(this._internalMeshDataInfo._onBetweenPassObservable=new F),this._internalMeshDataInfo._onBetweenPassObservable}get onBeforeDrawObservable(){return this._internalMeshDataInfo._onBeforeDrawObservable||(this._internalMeshDataInfo._onBeforeDrawObservable=new F),this._internalMeshDataInfo._onBeforeDrawObservable}set onBeforeDraw(e){this._onBeforeDrawObserver&&this.onBeforeDrawObservable.remove(this._onBeforeDrawObserver),this._onBeforeDrawObserver=this.onBeforeDrawObservable.add(e)}get hasInstances(){return this.instances.length>0}get hasThinInstances(){var e;return((e=this._thinInstanceDataStorage.instancesCount)!==null&&e!==void 0?e:0)>0}get forcedInstanceCount(){return this._internalMeshDataInfo._forcedInstanceCount}set forcedInstanceCount(e){this._internalMeshDataInfo._forcedInstanceCount=e}get source(){return this._internalMeshDataInfo._source}get cloneMeshMap(){return this._internalMeshDataInfo.meshMap}get isUnIndexed(){return this._unIndexed}set isUnIndexed(e){this._unIndexed!==e&&(this._unIndexed=e,this._markSubMeshesAsAttributesDirty())}get worldMatrixInstancedBuffer(){return this._instanceDataStorage.instancesData}get previousWorldMatrixInstancedBuffer(){return this._instanceDataStorage.instancesPreviousData}get manualUpdateOfWorldMatrixInstancedBuffer(){return this._instanceDataStorage.manualUpdate}set manualUpdateOfWorldMatrixInstancedBuffer(e){this._instanceDataStorage.manualUpdate=e}get manualUpdateOfPreviousWorldMatrixInstancedBuffer(){return this._instanceDataStorage.previousManualUpdate}set manualUpdateOfPreviousWorldMatrixInstancedBuffer(e){this._instanceDataStorage.previousManualUpdate=e}get forceWorldMatrixInstancedBufferUpdate(){return this._instanceDataStorage.forceMatrixUpdates}set forceWorldMatrixInstancedBufferUpdate(e){this._instanceDataStorage.forceMatrixUpdates=e}instantiateHierarchy(e=null,t,i){const s=this.getTotalVertices()===0||t&&t.doNotInstantiate&&(t.doNotInstantiate===!0||t.doNotInstantiate(this))?this.clone("Clone of "+(this.name||this.id),e||this.parent,!0):this.createInstance("instance of "+(this.name||this.id));s.parent=e||this.parent,s.position=this.position.clone(),s.scaling=this.scaling.clone(),this.rotationQuaternion?s.rotationQuaternion=this.rotationQuaternion.clone():s.rotation=this.rotation.clone(),i&&i(this,s);for(const r of this.getChildTransformNodes(!0))r.getClassName()==="InstancedMesh"&&s.getClassName()==="Mesh"?r.instantiateHierarchy(s,{doNotInstantiate:t&&t.doNotInstantiate||!1,newSourcedMesh:s},i):r.instantiateHierarchy(s,t,i);return s}getClassName(){return"Mesh"}get _isMesh(){return!0}toString(e){let t=super.toString(e);if(t+=", n vertices: "+this.getTotalVertices(),t+=", parent: "+(this._waitingParentId?this._waitingParentId:this.parent?this.parent.name:"NONE"),this.animations)for(let i=0;i<this.animations.length;i++)t+=", animation[0]: "+this.animations[i].toString(e);if(e)if(this._geometry){const i=this.getIndices(),s=this.getVerticesData(g.PositionKind);s&&i&&(t+=", flat shading: "+(s.length/3===i.length?"YES":"NO"))}else t+=", flat shading: UNKNOWN";return t}_unBindEffect(){super._unBindEffect();for(const e of this.instances)e._unBindEffect()}get hasLODLevels(){return this._internalMeshDataInfo._LODLevels.length>0}getLODLevels(){return this._internalMeshDataInfo._LODLevels}_sortLODLevels(){const e=this._internalMeshDataInfo._useLODScreenCoverage?-1:1;this._internalMeshDataInfo._LODLevels.sort((t,i)=>t.distanceOrScreenCoverage<i.distanceOrScreenCoverage?e:t.distanceOrScreenCoverage>i.distanceOrScreenCoverage?-e:0)}addLODLevel(e,t){if(t&&t._masterMesh)return O.Warn("You cannot use a mesh as LOD level twice"),this;const i=new Wn(e,t);return this._internalMeshDataInfo._LODLevels.push(i),t&&(t._masterMesh=this),this._sortLODLevels(),this}getLODLevelAtDistance(e){const t=this._internalMeshDataInfo;for(let i=0;i<t._LODLevels.length;i++){const s=t._LODLevels[i];if(s.distanceOrScreenCoverage===e)return s.mesh}return null}removeLODLevel(e){const t=this._internalMeshDataInfo;for(let i=0;i<t._LODLevels.length;i++)t._LODLevels[i].mesh===e&&(t._LODLevels.splice(i,1),e&&(e._masterMesh=null));return this._sortLODLevels(),this}getLOD(e,t){const i=this._internalMeshDataInfo;if(!i._LODLevels||i._LODLevels.length===0)return this;const s=t||this.getBoundingInfo().boundingSphere,r=e.mode===j.ORTHOGRAPHIC_CAMERA?e.minZ:s.centerWorld.subtract(e.globalPosition).length();let n=r,a=1;if(i._useLODScreenCoverage){const o=e.screenArea;let h=s.radiusWorld*e.minZ/r;h=h*h*Math.PI,n=h/o,a=-1}if(a*i._LODLevels[i._LODLevels.length-1].distanceOrScreenCoverage>a*n)return this.onLODLevelSelection&&this.onLODLevelSelection(n,this,this),this;for(let o=0;o<i._LODLevels.length;o++){const h=i._LODLevels[o];if(a*h.distanceOrScreenCoverage<a*n){if(h.mesh){if(h.mesh.delayLoadState===4)return h.mesh._checkDelayState(),this;if(h.mesh.delayLoadState===2)return this;h.mesh._preActivate(),h.mesh._updateSubMeshesBoundingInfo(this.worldMatrixFromCache)}return this.onLODLevelSelection&&this.onLODLevelSelection(n,this,h.mesh),h.mesh}}return this.onLODLevelSelection&&this.onLODLevelSelection(n,this,this),this}get geometry(){return this._geometry}getTotalVertices(){return this._geometry===null||this._geometry===void 0?0:this._geometry.getTotalVertices()}getVerticesData(e,t,i){var s,r;if(!this._geometry)return null;let n=(r=(s=this._userInstancedBuffersStorage)===null||s===void 0?void 0:s.vertexBuffers[e])===null||r===void 0?void 0:r.getFloatData(this._geometry.getTotalVertices(),i||t&&this._geometry.meshes.length!==1);return n||(n=this._geometry.getVerticesData(e,t,i)),n}getVertexBuffer(e){var t,i;return this._geometry?(i=(t=this._userInstancedBuffersStorage)===null||t===void 0?void 0:t.vertexBuffers[e])!==null&&i!==void 0?i:this._geometry.getVertexBuffer(e):null}isVerticesDataPresent(e){var t;return this._geometry?((t=this._userInstancedBuffersStorage)===null||t===void 0?void 0:t.vertexBuffers[e])!==void 0||this._geometry.isVerticesDataPresent(e):this._delayInfo?this._delayInfo.indexOf(e)!==-1:!1}isVertexBufferUpdatable(e){var t,i;return this._geometry?((i=(t=this._userInstancedBuffersStorage)===null||t===void 0?void 0:t.vertexBuffers[e])===null||i===void 0?void 0:i.isUpdatable())||this._geometry.isVertexBufferUpdatable(e):this._delayInfo?this._delayInfo.indexOf(e)!==-1:!1}getVerticesDataKinds(){if(!this._geometry){const t=new Array;return this._delayInfo&&this._delayInfo.forEach(function(i){t.push(i)}),t}const e=this._geometry.getVerticesDataKinds();if(this._userInstancedBuffersStorage)for(const t in this._userInstancedBuffersStorage.vertexBuffers)e.push(t);return e}getTotalIndices(){return this._geometry?this._geometry.getTotalIndices():0}getIndices(e,t){return this._geometry?this._geometry.getIndices(e,t):[]}get isBlocked(){return this._masterMesh!==null&&this._masterMesh!==void 0}isReady(e=!1,t=!1){var i,s,r,n,a,o;if(this.delayLoadState===2||!super.isReady(e))return!1;if(!this.subMeshes||this.subMeshes.length===0||!e)return!0;const h=this.getEngine(),l=this.getScene(),u=t||h.getCaps().instancedArrays&&(this.instances.length>0||this.hasThinInstances);this.computeWorldMatrix();const d=this.material||l.defaultMaterial;if(d){if(d._storeEffectOnSubMeshes)for(const _ of this.subMeshes){const E=_.getMaterial();if(E){if(E._storeEffectOnSubMeshes){if(!E.isReadyForSubMesh(this,_,u))return!1}else if(!E.isReady(this,u))return!1}}else if(!d.isReady(this,u))return!1}const f=h.currentRenderPassId;for(const _ of this.lightSources){const E=_.getShadowGenerators();if(!E)continue;const m=E.values();for(let v=m.next();v.done!==!0;v=m.next()){const S=v.value;if(S&&(!(!((i=S.getShadowMap())===null||i===void 0)&&i.renderList)||!((s=S.getShadowMap())===null||s===void 0)&&s.renderList&&((n=(r=S.getShadowMap())===null||r===void 0?void 0:r.renderList)===null||n===void 0?void 0:n.indexOf(this))!==-1)){S.getShadowMap()&&(h.currentRenderPassId=S.getShadowMap().renderPassId);for(const y of this.subMeshes)if(!S.isReady(y,u,(o=(a=y.getMaterial())===null||a===void 0?void 0:a.needAlphaBlendingForMesh(this))!==null&&o!==void 0?o:!1))return h.currentRenderPassId=f,!1;h.currentRenderPassId=f}}}for(const _ of this._internalMeshDataInfo._LODLevels)if(_.mesh&&!_.mesh.isReady(u))return!1;return!0}get areNormalsFrozen(){return this._internalMeshDataInfo._areNormalsFrozen}freezeNormals(){return this._internalMeshDataInfo._areNormalsFrozen=!0,this}unfreezeNormals(){return this._internalMeshDataInfo._areNormalsFrozen=!1,this}set overridenInstanceCount(e){this._instanceDataStorage.overridenInstanceCount=e}_preActivate(){const e=this._internalMeshDataInfo,t=this.getScene().getRenderId();return e._preActivateId===t?this:(e._preActivateId=t,this._instanceDataStorage.visibleInstances=null,this)}_preActivateForIntermediateRendering(e){return this._instanceDataStorage.visibleInstances&&(this._instanceDataStorage.visibleInstances.intermediateDefaultRenderId=e),this}_registerInstanceForRenderId(e,t){return this._instanceDataStorage.visibleInstances||(this._instanceDataStorage.visibleInstances={defaultRenderId:t,selfDefaultRenderId:this._renderId}),this._instanceDataStorage.visibleInstances[t]||(this._instanceDataStorage.previousRenderId!==void 0&&this._instanceDataStorage.isFrozen&&(this._instanceDataStorage.visibleInstances[this._instanceDataStorage.previousRenderId]=null),this._instanceDataStorage.previousRenderId=t,this._instanceDataStorage.visibleInstances[t]=new Array),this._instanceDataStorage.visibleInstances[t].push(e),this}_afterComputeWorldMatrix(){super._afterComputeWorldMatrix(),this.hasThinInstances&&(this.doNotSyncBoundingInfo||this.thinInstanceRefreshBoundingInfo(!1))}_postActivate(){this.edgesShareWithInstances&&this.edgesRenderer&&this.edgesRenderer.isEnabled&&this._renderingGroup&&(this._renderingGroup._edgesRenderers.pushNoDuplicate(this.edgesRenderer),this.edgesRenderer.customInstances.push(this.getWorldMatrix()))}refreshBoundingInfo(e=!1,t=!1){if(this.hasBoundingInfo&&this.getBoundingInfo().isLocked)return this;const i=this.geometry?this.geometry.boundingBias:null;return this._refreshBoundingInfo(this._getPositionData(e,t),i),this}_createGlobalSubMesh(e){const t=this.getTotalVertices();if(!t||!this.getIndices())return null;if(this.subMeshes&&this.subMeshes.length>0){const i=this.getIndices();if(!i)return null;const s=i.length;let r=!1;if(e)r=!0;else for(const n of this.subMeshes){if(n.indexStart+n.indexCount>s){r=!0;break}if(n.verticesStart+n.verticesCount>t){r=!0;break}}if(!r)return this.subMeshes[0]}return this.releaseSubMeshes(),new vt(0,0,t,0,this.getTotalIndices(),this)}subdivide(e){if(e<1)return;const t=this.getTotalIndices();let i=t/e|0,s=0;for(;i%3!==0;)i++;this.releaseSubMeshes();for(let r=0;r<e&&!(s>=t);r++)vt.CreateFromIndices(0,s,r===e-1?t-s:i,this),s+=i;this.synchronizeInstances()}setVerticesData(e,t,i=!1,s){if(this._geometry)this._geometry.setVerticesData(e,t,i,s);else{const r=new ee;r.set(t,e);const n=this.getScene();new at(at.RandomId(),n,r,i,this)}return this}removeVerticesData(e){this._geometry&&this._geometry.removeVerticesData(e)}markVerticesDataAsUpdatable(e,t=!0){const i=this.getVertexBuffer(e);!i||i.isUpdatable()===t||this.setVerticesData(e,this.getVerticesData(e),t)}setVerticesBuffer(e,t=!0){return this._geometry||(this._geometry=at.CreateGeometryForMesh(this)),this._geometry.setVerticesBuffer(e,null,t),this}updateVerticesData(e,t,i,s){return this._geometry?(s?(this.makeGeometryUnique(),this.updateVerticesData(e,t,i,!1)):this._geometry.updateVerticesData(e,t,i),this):this}updateMeshPositions(e,t=!0){const i=this.getVerticesData(g.PositionKind);if(!i)return this;if(e(i),this.updateVerticesData(g.PositionKind,i,!1,!1),t){const s=this.getIndices(),r=this.getVerticesData(g.NormalKind);if(!r)return this;ee.ComputeNormals(i,s,r),this.updateVerticesData(g.NormalKind,r,!1,!1)}return this}makeGeometryUnique(){if(!this._geometry)return this;if(this._geometry.meshes.length===1)return this;const e=this._geometry,t=this._geometry.copy(at.RandomId());return e.releaseForMesh(this,!0),t.applyToMesh(this),this}setIndices(e,t=null,i=!1){if(this._geometry)this._geometry.setIndices(e,t,i);else{const s=new ee;s.indices=e;const r=this.getScene();new at(at.RandomId(),r,s,i,this)}return this}updateIndices(e,t,i=!1){return this._geometry?(this._geometry.updateIndices(e,t,i),this):this}toLeftHanded(){return this._geometry?(this._geometry.toLeftHanded(),this):this}_bind(e,t,i){if(!this._geometry)return this;const s=this.getScene().getEngine();this.morphTargetManager&&this.morphTargetManager.isUsingTextureForTargets&&this.morphTargetManager._bind(t);let r;if(this._unIndexed)r=null;else switch(i){case P.PointFillMode:r=null;break;case P.WireFrameFillMode:r=e._getLinesIndexBuffer(this.getIndices(),s);break;default:case P.TriangleFillMode:r=this._geometry.getIndexBuffer();break}return!this._userInstancedBuffersStorage||this.hasThinInstances?this._geometry._bind(t,r):this._geometry._bind(t,r,this._userInstancedBuffersStorage.vertexBuffers,this._userInstancedBuffersStorage.vertexArrayObjects),this}_draw(e,t,i){if(!this._geometry||!this._geometry.getVertexBuffers()||!this._unIndexed&&!this._geometry.getIndexBuffer())return this;this._internalMeshDataInfo._onBeforeDrawObservable&&this._internalMeshDataInfo._onBeforeDrawObservable.notifyObservers(this);const r=this.getScene().getEngine();return this._unIndexed||t==P.PointFillMode?r.drawArraysType(t,e.verticesStart,e.verticesCount,this.forcedInstanceCount||i):t==P.WireFrameFillMode?r.drawElementsType(t,0,e._linesIndexCount,this.forcedInstanceCount||i):r.drawElementsType(t,e.indexStart,e.indexCount,this.forcedInstanceCount||i),this}registerBeforeRender(e){return this.onBeforeRenderObservable.add(e),this}unregisterBeforeRender(e){return this.onBeforeRenderObservable.removeCallback(e),this}registerAfterRender(e){return this.onAfterRenderObservable.add(e),this}unregisterAfterRender(e){return this.onAfterRenderObservable.removeCallback(e),this}_getInstancesRenderList(e,t=!1){if(this._instanceDataStorage.isFrozen){if(t)return this._instanceDataStorage.batchCacheReplacementModeInFrozenMode.hardwareInstancedRendering[e]=!1,this._instanceDataStorage.batchCacheReplacementModeInFrozenMode.renderSelf[e]=!0,this._instanceDataStorage.batchCacheReplacementModeInFrozenMode;if(this._instanceDataStorage.previousBatch)return this._instanceDataStorage.previousBatch}const i=this.getScene(),s=i._isInIntermediateRendering(),r=s?this._internalAbstractMeshDataInfo._onlyForInstancesIntermediate:this._internalAbstractMeshDataInfo._onlyForInstances,n=this._instanceDataStorage.batchCache;if(n.mustReturn=!1,n.renderSelf[e]=t||!r&&this.isEnabled()&&this.isVisible,n.visibleInstances[e]=null,this._instanceDataStorage.visibleInstances&&!t){const a=this._instanceDataStorage.visibleInstances,o=i.getRenderId(),h=s?a.intermediateDefaultRenderId:a.defaultRenderId;n.visibleInstances[e]=a[o],!n.visibleInstances[e]&&h&&(n.visibleInstances[e]=a[h])}return n.hardwareInstancedRendering[e]=!t&&this._instanceDataStorage.hardwareInstancedRendering&&n.visibleInstances[e]!==null&&n.visibleInstances[e]!==void 0,this._instanceDataStorage.previousBatch=n,n}_renderWithInstances(e,t,i,s,r){var n;const a=i.visibleInstances[e._id],o=a?a.length:0,h=this._instanceDataStorage,l=h.instancesBufferSize;let u=h.instancesBuffer,d=h.instancesPreviousBuffer;const _=(o+1)*16*4;for(;h.instancesBufferSize<_;)h.instancesBufferSize*=2;(!h.instancesData||l!=h.instancesBufferSize)&&(h.instancesData=new Float32Array(h.instancesBufferSize/4)),(this._scene.needsPreviousWorldMatrices&&!h.instancesPreviousData||l!=h.instancesBufferSize)&&(h.instancesPreviousData=new Float32Array(h.instancesBufferSize/4));let E=0,m=0;const v=i.renderSelf[e._id],S=!u||l!==h.instancesBufferSize||this._scene.needsPreviousWorldMatrices&&!h.instancesPreviousBuffer;if(!this._instanceDataStorage.manualUpdate&&(!h.isFrozen||S)){const y=this.getWorldMatrix();if(v&&(this._scene.needsPreviousWorldMatrices&&(h.masterMeshPreviousWorldMatrix?(h.masterMeshPreviousWorldMatrix.copyToArray(h.instancesPreviousData,E),h.masterMeshPreviousWorldMatrix.copyFrom(y)):(h.masterMeshPreviousWorldMatrix=y.clone(),h.masterMeshPreviousWorldMatrix.copyToArray(h.instancesPreviousData,E))),y.copyToArray(h.instancesData,E),E+=16,m++),a){if(W.INSTANCEDMESH_SORT_TRANSPARENT&&this._scene.activeCamera&&(!((n=e.getMaterial())===null||n===void 0)&&n.needAlphaBlendingForMesh(e.getRenderingMesh()))){const A=this._scene.activeCamera.globalPosition;for(let C=0;C<a.length;C++){const b=a[C];b._distanceToCamera=p.Distance(b.getBoundingInfo().boundingSphere.centerWorld,A)}a.sort((C,b)=>C._distanceToCamera>b._distanceToCamera?-1:C._distanceToCamera<b._distanceToCamera?1:0)}for(let A=0;A<a.length;A++){const C=a[A],b=C.getWorldMatrix();b.copyToArray(h.instancesData,E),this._scene.needsPreviousWorldMatrices&&(C._previousWorldMatrix?(C._previousWorldMatrix.copyToArray(h.instancesPreviousData,E),C._previousWorldMatrix.copyFrom(b)):(C._previousWorldMatrix=b.clone(),C._previousWorldMatrix.copyToArray(h.instancesPreviousData,E))),E+=16,m++}}}else m=(v?1:0)+o;return S?(u&&u.dispose(),d&&d.dispose(),u=new $i(r,h.instancesData,!0,16,!1,!0),h.instancesBuffer=u,this._userInstancedBuffersStorage||(this._userInstancedBuffersStorage={data:{},vertexBuffers:{},strides:{},sizes:{},vertexArrayObjects:this.getEngine().getCaps().vertexArrayObject?{}:void 0}),this._userInstancedBuffersStorage.vertexBuffers.world0=u.createVertexBuffer("world0",0,4),this._userInstancedBuffersStorage.vertexBuffers.world1=u.createVertexBuffer("world1",4,4),this._userInstancedBuffersStorage.vertexBuffers.world2=u.createVertexBuffer("world2",8,4),this._userInstancedBuffersStorage.vertexBuffers.world3=u.createVertexBuffer("world3",12,4),this._scene.needsPreviousWorldMatrices&&(d=new $i(r,h.instancesPreviousData,!0,16,!1,!0),h.instancesPreviousBuffer=d,this._userInstancedBuffersStorage.vertexBuffers.previousWorld0=d.createVertexBuffer("previousWorld0",0,4),this._userInstancedBuffersStorage.vertexBuffers.previousWorld1=d.createVertexBuffer("previousWorld1",4,4),this._userInstancedBuffersStorage.vertexBuffers.previousWorld2=d.createVertexBuffer("previousWorld2",8,4),this._userInstancedBuffersStorage.vertexBuffers.previousWorld3=d.createVertexBuffer("previousWorld3",12,4)),this._invalidateInstanceVertexArrayObject()):(!this._instanceDataStorage.isFrozen||this._instanceDataStorage.forceMatrixUpdates)&&(u.updateDirectly(h.instancesData,0,m),this._scene.needsPreviousWorldMatrices&&(!this._instanceDataStorage.manualUpdate||this._instanceDataStorage.previousManualUpdate)&&d.updateDirectly(h.instancesPreviousData,0,m)),this._processInstancedBuffers(a,v),this.getScene()._activeIndices.addCount(e.indexCount*m,!1),r._currentDrawContext&&(r._currentDrawContext.useInstancing=!0),this._bind(e,s,t),this._draw(e,t,m),this._scene.needsPreviousWorldMatrices&&!S&&this._instanceDataStorage.manualUpdate&&(!this._instanceDataStorage.isFrozen||this._instanceDataStorage.forceMatrixUpdates)&&!this._instanceDataStorage.previousManualUpdate&&d.updateDirectly(h.instancesData,0,m),r.unbindInstanceAttributes(),this}_renderWithThinInstances(e,t,i,s){var r,n;const a=(n=(r=this._thinInstanceDataStorage)===null||r===void 0?void 0:r.instancesCount)!==null&&n!==void 0?n:0;this.getScene()._activeIndices.addCount(e.indexCount*a,!1),s._currentDrawContext&&(s._currentDrawContext.useInstancing=!0),this._bind(e,i,t),this._draw(e,t,a),this._scene.needsPreviousWorldMatrices&&!this._thinInstanceDataStorage.previousMatrixData&&this._thinInstanceDataStorage.matrixData&&(this._thinInstanceDataStorage.previousMatrixBuffer?this._thinInstanceDataStorage.previousMatrixBuffer.updateDirectly(this._thinInstanceDataStorage.matrixData,0,a):this._thinInstanceDataStorage.previousMatrixBuffer=this._thinInstanceCreateMatrixBuffer("previousWorld",this._thinInstanceDataStorage.matrixData,!1)),s.unbindInstanceAttributes()}_processInstancedBuffers(e,t){}_processRendering(e,t,i,s,r,n,a,o){const h=this.getScene(),l=h.getEngine();if(n&&t.getRenderingMesh().hasThinInstances)return this._renderWithThinInstances(t,s,i,l),this;if(n)this._renderWithInstances(t,s,r,i,l);else{l._currentDrawContext&&(l._currentDrawContext.useInstancing=!1);let u=0;r.renderSelf[t._id]&&(a&&a(!1,e.getWorldMatrix(),o),u++,this._draw(t,s,this._instanceDataStorage.overridenInstanceCount));const d=r.visibleInstances[t._id];if(d){const f=d.length;u+=f;for(let _=0;_<f;_++){const m=d[_].getWorldMatrix();a&&a(!0,m,o),this._draw(t,s)}}h._activeIndices.addCount(t.indexCount*u,!1)}return this}_rebuild(e=!1){if(this._instanceDataStorage.instancesBuffer&&(e&&this._instanceDataStorage.instancesBuffer.dispose(),this._instanceDataStorage.instancesBuffer=null),this._userInstancedBuffersStorage){for(const t in this._userInstancedBuffersStorage.vertexBuffers){const i=this._userInstancedBuffersStorage.vertexBuffers[t];i&&(e&&i.dispose(),this._userInstancedBuffersStorage.vertexBuffers[t]=null)}this._userInstancedBuffersStorage.vertexArrayObjects&&(this._userInstancedBuffersStorage.vertexArrayObjects={})}this._internalMeshDataInfo._effectiveMaterial=null,super._rebuild(e)}_freeze(){if(this.subMeshes){for(let e=0;e<this.subMeshes.length;e++)this._getInstancesRenderList(e);this._internalMeshDataInfo._effectiveMaterial=null,this._instanceDataStorage.isFrozen=!0}}_unFreeze(){this._instanceDataStorage.isFrozen=!1,this._instanceDataStorage.previousBatch=null}render(e,t,i){var s,r,n;const a=this.getScene();if(this._internalAbstractMeshDataInfo._isActiveIntermediate?this._internalAbstractMeshDataInfo._isActiveIntermediate=!1:this._internalAbstractMeshDataInfo._isActive=!1,this._checkOcclusionQuery()&&!this._occlusionDataStorage.forceRenderingWhenOccluded)return this;const o=this._getInstancesRenderList(e._id,!!i);if(o.mustReturn)return this;if(!this._geometry||!this._geometry.getVertexBuffers()||!this._unIndexed&&!this._geometry.getIndexBuffer())return this;const h=a.getEngine();let l=0,u=null;this.ignoreCameraMaxZ&&a.activeCamera&&!a._isInIntermediateRendering()&&(l=a.activeCamera.maxZ,u=a.activeCamera,a.activeCamera.maxZ=0,a.updateTransformMatrix(!0)),this._internalMeshDataInfo._onBeforeRenderObservable&&this._internalMeshDataInfo._onBeforeRenderObservable.notifyObservers(this);const d=e.getRenderingMesh(),f=o.hardwareInstancedRendering[e._id]||d.hasThinInstances||!!this._userInstancedBuffersStorage&&!e.getMesh()._internalAbstractMeshDataInfo._actAsRegularMesh,_=this._instanceDataStorage,E=e.getMaterial();if(!E)return u&&(u.maxZ=l,a.updateTransformMatrix(!0)),this;if(!_.isFrozen||!this._internalMeshDataInfo._effectiveMaterial||this._internalMeshDataInfo._effectiveMaterial!==E){if(E._storeEffectOnSubMeshes){if(!E.isReadyForSubMesh(this,e,f))return u&&(u.maxZ=l,a.updateTransformMatrix(!0)),this}else if(!E.isReady(this,f))return u&&(u.maxZ=l,a.updateTransformMatrix(!0)),this;this._internalMeshDataInfo._effectiveMaterial=E}else if(E._storeEffectOnSubMeshes&&!(!((s=e.effect)===null||s===void 0)&&s._wasPreviouslyReady)||!E._storeEffectOnSubMeshes&&!(!((r=E.getEffect())===null||r===void 0)&&r._wasPreviouslyReady))return u&&(u.maxZ=l,a.updateTransformMatrix(!0)),this;t&&h.setAlphaMode(this._internalMeshDataInfo._effectiveMaterial.alphaMode);let m;this._internalMeshDataInfo._effectiveMaterial._storeEffectOnSubMeshes?m=e._drawWrapper:m=this._internalMeshDataInfo._effectiveMaterial._getDrawWrapper();const v=(n=m==null?void 0:m.effect)!==null&&n!==void 0?n:null;for(const L of a._beforeRenderingMeshStage)L.action(this,e,o,v);if(!m||!v)return u&&(u.maxZ=l,a.updateTransformMatrix(!0)),this;const S=i||this;let y;if(!_.isFrozen&&(this._internalMeshDataInfo._effectiveMaterial.backFaceCulling||this.overrideMaterialSideOrientation!==null)){const L=S._getWorldMatrixDeterminant();y=this.overrideMaterialSideOrientation,y==null&&(y=this._internalMeshDataInfo._effectiveMaterial.sideOrientation),L<0&&(y=y===P.ClockWiseSideOrientation?P.CounterClockWiseSideOrientation:P.ClockWiseSideOrientation),_.sideOrientation=y}else y=_.sideOrientation;const A=this._internalMeshDataInfo._effectiveMaterial._preBind(m,y);this._internalMeshDataInfo._effectiveMaterial.forceDepthWrite&&h.setDepthWrite(!0);const C=a.forcePointsCloud?P.PointFillMode:a.forceWireframe?P.WireFrameFillMode:this._internalMeshDataInfo._effectiveMaterial.fillMode;this._internalMeshDataInfo._onBeforeBindObservable&&this._internalMeshDataInfo._onBeforeBindObservable.notifyObservers(this),f||this._bind(e,v,C);const b=this._internalMeshDataInfo._effectiveMaterial,M=S.getWorldMatrix();b._storeEffectOnSubMeshes?b.bindForSubMesh(M,this,e):b.bind(M,this),!b.backFaceCulling&&b.separateCullingPass&&(h.setState(!0,b.zOffset,!1,!A,b.cullBackFaces,b.stencil,b.zOffsetUnits),this._processRendering(this,e,v,C,o,f,this._onBeforeDraw,this._internalMeshDataInfo._effectiveMaterial),h.setState(!0,b.zOffset,!1,A,b.cullBackFaces,b.stencil,b.zOffsetUnits),this._internalMeshDataInfo._onBetweenPassObservable&&this._internalMeshDataInfo._onBetweenPassObservable.notifyObservers(e)),this._processRendering(this,e,v,C,o,f,this._onBeforeDraw,this._internalMeshDataInfo._effectiveMaterial),this._internalMeshDataInfo._effectiveMaterial.unbind();for(const L of a._afterRenderingMeshStage)L.action(this,e,o,v);return this._internalMeshDataInfo._onAfterRenderObservable&&this._internalMeshDataInfo._onAfterRenderObservable.notifyObservers(this),u&&(u.maxZ=l,a.updateTransformMatrix(!0)),a.performancePriority===Ct.Aggressive&&!_.isFrozen&&this._freeze(),this}cleanMatrixWeights(){this.isVerticesDataPresent(g.MatricesWeightsKind)&&(this.isVerticesDataPresent(g.MatricesWeightsExtraKind)?this._normalizeSkinWeightsAndExtra():this._normalizeSkinFourWeights())}_normalizeSkinFourWeights(){const e=this.getVerticesData(g.MatricesWeightsKind),t=e.length;for(let i=0;i<t;i+=4){const s=e[i]+e[i+1]+e[i+2]+e[i+3];if(s===0)e[i]=1;else{const r=1/s;e[i]*=r,e[i+1]*=r,e[i+2]*=r,e[i+3]*=r}}this.setVerticesData(g.MatricesWeightsKind,e)}_normalizeSkinWeightsAndExtra(){const e=this.getVerticesData(g.MatricesWeightsExtraKind),t=this.getVerticesData(g.MatricesWeightsKind),i=t.length;for(let s=0;s<i;s+=4){let r=t[s]+t[s+1]+t[s+2]+t[s+3];if(r+=e[s]+e[s+1]+e[s+2]+e[s+3],r===0)t[s]=1;else{const n=1/r;t[s]*=n,t[s+1]*=n,t[s+2]*=n,t[s+3]*=n,e[s]*=n,e[s+1]*=n,e[s+2]*=n,e[s+3]*=n}}this.setVerticesData(g.MatricesWeightsKind,t),this.setVerticesData(g.MatricesWeightsKind,e)}validateSkinning(){const e=this.getVerticesData(g.MatricesWeightsExtraKind),t=this.getVerticesData(g.MatricesWeightsKind);if(t===null||this.skeleton==null)return{skinned:!1,valid:!0,report:"not skinned"};const i=t.length;let s=0,r=0,n=0,a=0;const o=e===null?4:8,h=new Array;for(let m=0;m<=o;m++)h[m]=0;const l=.001;for(let m=0;m<i;m+=4){let v=t[m],S=v,y=S===0?0:1;for(let A=1;A<o;A++){const C=A<4?t[m+A]:e[m+A-4];C>v&&s++,C!==0&&y++,S+=C,v=C}if(h[y]++,y>n&&(n=y),S===0)r++;else{const A=1/S;let C=0;for(let b=0;b<o;b++)b<4?C+=Math.abs(t[m+b]-t[m+b]*A):C+=Math.abs(e[m+b-4]-e[m+b-4]*A);C>l&&a++}}const u=this.skeleton.bones.length,d=this.getVerticesData(g.MatricesIndicesKind),f=this.getVerticesData(g.MatricesIndicesExtraKind);let _=0;for(let m=0;m<i;m+=4)for(let v=0;v<o;v++){const S=v<4?d[m+v]:f[m+v-4];(S>=u||S<0)&&_++}const E="Number of Weights = "+i/4+`
Maximum influences = `+n+`
Missing Weights = `+r+`
Not Sorted = `+s+`
Not Normalized = `+a+`
WeightCounts = [`+h+`]
Number of bones = `+u+`
Bad Bone Indices = `+_;return{skinned:!0,valid:r===0&&a===0&&_===0,report:E}}_checkDelayState(){const e=this.getScene();return this._geometry?this._geometry.load(e):this.delayLoadState===4&&(this.delayLoadState=2,this._queueLoad(e)),this}_queueLoad(e){e.addPendingData(this);const t=this.delayLoadingFile.indexOf(".babylonbinarymeshdata")!==-1;return H.LoadFile(this.delayLoadingFile,i=>{i instanceof ArrayBuffer?this._delayLoadingFunction(i,this):this._delayLoadingFunction(JSON.parse(i),this),this.instances.forEach(s=>{s.refreshBoundingInfo(),s._syncSubMeshes()}),this.delayLoadState=1,e.removePendingData(this)},()=>{},e.offlineProvider,t),this}isInFrustum(e){return this.delayLoadState===2||!super.isInFrustum(e)?!1:(this._checkDelayState(),!0)}setMaterialById(e){const t=this.getScene().materials;let i;for(i=t.length-1;i>-1;i--)if(t[i].id===e)return this.material=t[i],this;const s=this.getScene().multiMaterials;for(i=s.length-1;i>-1;i--)if(s[i].id===e)return this.material=s[i],this;return this}getAnimatables(){const e=new Array;return this.material&&e.push(this.material),this.skeleton&&e.push(this.skeleton),e}bakeTransformIntoVertices(e){if(!this.isVerticesDataPresent(g.PositionKind))return this;const t=this.subMeshes.splice(0);this._resetPointsArrayCache();let i=this.getVerticesData(g.PositionKind);const s=p.Zero();let r;for(r=0;r<i.length;r+=3)p.TransformCoordinatesFromFloatsToRef(i[r],i[r+1],i[r+2],e,s).toArray(i,r);if(this.setVerticesData(g.PositionKind,i,this.getVertexBuffer(g.PositionKind).isUpdatable()),this.isVerticesDataPresent(g.NormalKind)){for(i=this.getVerticesData(g.NormalKind),r=0;r<i.length;r+=3)p.TransformNormalFromFloatsToRef(i[r],i[r+1],i[r+2],e,s).normalize().toArray(i,r);this.setVerticesData(g.NormalKind,i,this.getVertexBuffer(g.NormalKind).isUpdatable())}return e.determinant()<0&&this.flipFaces(),this.releaseSubMeshes(),this.subMeshes=t,this}bakeCurrentTransformIntoVertices(e=!0){return this.bakeTransformIntoVertices(this.computeWorldMatrix(!0)),this.resetLocalMatrix(e),this}get _positions(){return this._internalAbstractMeshDataInfo._positions?this._internalAbstractMeshDataInfo._positions:this._geometry?this._geometry._positions:null}_resetPointsArrayCache(){return this._geometry&&this._geometry._resetPointsArrayCache(),this}_generatePointsArray(){return this._geometry?this._geometry._generatePointsArray():!1}clone(e="",t=null,i,s=!0){return new W(e,this.getScene(),t,this,i,s)}dispose(e,t=!1){this.morphTargetManager=null,this._geometry&&this._geometry.releaseForMesh(this,!0);const i=this._internalMeshDataInfo;if(i._onBeforeDrawObservable&&i._onBeforeDrawObservable.clear(),i._onBeforeBindObservable&&i._onBeforeBindObservable.clear(),i._onBeforeRenderObservable&&i._onBeforeRenderObservable.clear(),i._onAfterRenderObservable&&i._onAfterRenderObservable.clear(),i._onBetweenPassObservable&&i._onBetweenPassObservable.clear(),this._scene.useClonedMeshMap){if(i.meshMap)for(const s in i.meshMap){const r=i.meshMap[s];r&&(r._internalMeshDataInfo._source=null,i.meshMap[s]=void 0)}i._source&&i._source._internalMeshDataInfo.meshMap&&(i._source._internalMeshDataInfo.meshMap[this.uniqueId]=void 0)}else{const s=this.getScene().meshes;for(const r of s){const n=r;n._internalMeshDataInfo&&n._internalMeshDataInfo._source&&n._internalMeshDataInfo._source===this&&(n._internalMeshDataInfo._source=null)}}i._source=null,this._disposeInstanceSpecificData(),this._disposeThinInstanceSpecificData(),this._internalMeshDataInfo._checkReadinessObserver&&this._scene.onBeforeRenderObservable.remove(this._internalMeshDataInfo._checkReadinessObserver),super.dispose(e,t)}_disposeInstanceSpecificData(){}_disposeThinInstanceSpecificData(){}_invalidateInstanceVertexArrayObject(){}applyDisplacementMap(e,t,i,s,r,n,a=!1){const o=this.getScene(),h=l=>{const u=l.width,d=l.height,_=this.getEngine().createCanvas(u,d).getContext("2d");_.drawImage(l,0,0);const E=_.getImageData(0,0,u,d).data;this.applyDisplacementMapFromBuffer(E,u,d,t,i,r,n,a),s&&s(this)};return H.LoadImage(e,h,()=>{},o.offlineProvider),this}applyDisplacementMapFromBuffer(e,t,i,s,r,n,a,o=!1){if(!this.isVerticesDataPresent(g.PositionKind)||!this.isVerticesDataPresent(g.NormalKind)||!this.isVerticesDataPresent(g.UVKind))return O.Warn("Cannot call applyDisplacementMap: Given mesh is not complete. Position, Normal or UV are missing"),this;const h=this.getVerticesData(g.PositionKind,!0,!0),l=this.getVerticesData(g.NormalKind),u=this.getVerticesData(g.UVKind);let d=p.Zero();const f=p.Zero(),_=ve.Zero();n=n||ve.Zero(),a=a||new ve(1,1);for(let E=0;E<h.length;E+=3){p.FromArrayToRef(h,E,d),p.FromArrayToRef(l,E,f),ve.FromArrayToRef(u,E/3*2,_);const m=Math.abs(_.x*a.x+n.x%1)*(t-1)%t|0,v=Math.abs(_.y*a.y+n.y%1)*(i-1)%i|0,S=(m+v*t)*4,y=e[S]/255,A=e[S+1]/255,C=e[S+2]/255,b=y*.3+A*.59+C*.11;f.normalize(),f.scaleInPlace(s+(r-s)*b),d=d.add(f),d.toArray(h,E)}return ee.ComputeNormals(h,this.getIndices(),l),o?(this.setVerticesData(g.PositionKind,h),this.setVerticesData(g.NormalKind,l),this.setVerticesData(g.UVKind,u)):(this.updateVerticesData(g.PositionKind,h),this.updateVerticesData(g.NormalKind,l)),this}convertToFlatShadedMesh(){const e=this.getVerticesDataKinds(),t={},i={},s={};let r=!1,n,a;for(n=0;n<e.length;n++){a=e[n];const m=this.getVertexBuffer(a),v=m.getData();if(!((v instanceof Array||v instanceof Float32Array)&&v.length===0)){if(a===g.NormalKind){r=m.isUpdatable(),e.splice(n,1),n--;continue}t[a]=m,i[a]=this.getVerticesData(a),s[a]=[]}}const o=this.subMeshes.slice(0),h=this.getIndices(),l=this.getTotalIndices();let u;for(u=0;u<l;u++){const m=h[u];for(n=0;n<e.length;n++){if(a=e[n],!t[a])continue;const v=t[a].getStrideSize();for(let S=0;S<v;S++)s[a].push(i[a][m*v+S])}}const d=[],f=s[g.PositionKind],_=this.getScene().useRightHandedSystem;let E;for(_?E=this.overrideMaterialSideOrientation===1:E=this.overrideMaterialSideOrientation===0,u=0;u<l;u+=3){h[u]=u,h[u+1]=u+1,h[u+2]=u+2;const m=p.FromArray(f,u*3),v=p.FromArray(f,(u+1)*3),S=p.FromArray(f,(u+2)*3),y=m.subtract(v),A=S.subtract(v),C=p.Normalize(p.Cross(y,A));E&&C.scaleInPlace(-1);for(let b=0;b<3;b++)d.push(C.x),d.push(C.y),d.push(C.z)}for(this.setIndices(h),this.setVerticesData(g.NormalKind,d,r),n=0;n<e.length;n++)a=e[n],s[a]&&this.setVerticesData(a,s[a],t[a].isUpdatable());this.releaseSubMeshes();for(let m=0;m<o.length;m++){const v=o[m];vt.AddToMesh(v.materialIndex,v.indexStart,v.indexCount,v.indexStart,v.indexCount,this)}return this.synchronizeInstances(),this}convertToUnIndexedMesh(){const e=this.getVerticesDataKinds(),t={},i={},s={};let r,n;for(r=0;r<e.length;r++){n=e[r];const u=this.getVertexBuffer(n);t[n]=u,i[n]=t[n].getData(),s[n]=[]}const a=this.subMeshes.slice(0),o=this.getIndices(),h=this.getTotalIndices();let l;for(l=0;l<h;l++){const u=o[l];for(r=0;r<e.length;r++){n=e[r];const d=t[n].getStrideSize();for(let f=0;f<d;f++)s[n].push(i[n][u*d+f])}}for(l=0;l<h;l+=3)o[l]=l,o[l+1]=l+1,o[l+2]=l+2;for(this.setIndices(o),r=0;r<e.length;r++)n=e[r],this.setVerticesData(n,s[n],t[n].isUpdatable(),t[n].getStrideSize());this.releaseSubMeshes();for(let u=0;u<a.length;u++){const d=a[u];vt.AddToMesh(d.materialIndex,d.indexStart,d.indexCount,d.indexStart,d.indexCount,this)}return this._unIndexed=!0,this.synchronizeInstances(),this}flipFaces(e=!1){const t=ee.ExtractFromMesh(this);let i;if(e&&this.isVerticesDataPresent(g.NormalKind)&&t.normals)for(i=0;i<t.normals.length;i++)t.normals[i]*=-1;if(t.indices){let s;for(i=0;i<t.indices.length;i+=3)s=t.indices[i+1],t.indices[i+1]=t.indices[i+2],t.indices[i+2]=s}return t.applyToMesh(this,this.isVertexBufferUpdatable(g.PositionKind)),this}increaseVertices(e=1){const t=ee.ExtractFromMesh(this),i=t.indices&&!Array.isArray(t.indices)&&Array.from?Array.from(t.indices):t.indices,s=t.positions&&!Array.isArray(t.positions)&&Array.from?Array.from(t.positions):t.positions,r=t.uvs&&!Array.isArray(t.uvs)&&Array.from?Array.from(t.uvs):t.uvs,n=t.normals&&!Array.isArray(t.normals)&&Array.from?Array.from(t.normals):t.normals;if(!i||!s)O.Warn("Couldn't increase number of vertices : VertexData must contain at least indices and positions");else{t.indices=i,t.positions=s,r&&(t.uvs=r),n&&(t.normals=n);const a=e+1,o=new Array;for(let C=0;C<a+1;C++)o[C]=new Array;let h,l;const u=new p(0,0,0),d=new p(0,0,0),f=new ve(0,0),_=new Array,E=new Array,m=new Array;let v,S=s.length,y;r&&(y=r.length);let A;n&&(A=n.length);for(let C=0;C<i.length;C+=3){E[0]=i[C],E[1]=i[C+1],E[2]=i[C+2];for(let b=0;b<3;b++)if(h=E[b],l=E[(b+1)%3],m[h]===void 0&&m[l]===void 0?(m[h]=new Array,m[l]=new Array):(m[h]===void 0&&(m[h]=new Array),m[l]===void 0&&(m[l]=new Array)),m[h][l]===void 0&&m[l][h]===void 0){m[h][l]=[],u.x=(s[3*l]-s[3*h])/a,u.y=(s[3*l+1]-s[3*h+1])/a,u.z=(s[3*l+2]-s[3*h+2])/a,n&&(d.x=(n[3*l]-n[3*h])/a,d.y=(n[3*l+1]-n[3*h+1])/a,d.z=(n[3*l+2]-n[3*h+2])/a),r&&(f.x=(r[2*l]-r[2*h])/a,f.y=(r[2*l+1]-r[2*h+1])/a),m[h][l].push(h);for(let M=1;M<a;M++)m[h][l].push(s.length/3),s[S++]=s[3*h]+M*u.x,s[S++]=s[3*h+1]+M*u.y,s[S++]=s[3*h+2]+M*u.z,n&&(n[A++]=n[3*h]+M*d.x,n[A++]=n[3*h+1]+M*d.y,n[A++]=n[3*h+2]+M*d.z),r&&(r[y++]=r[2*h]+M*f.x,r[y++]=r[2*h+1]+M*f.y);m[h][l].push(l),m[l][h]=new Array,v=m[h][l].length;for(let M=0;M<v;M++)m[l][h][M]=m[h][l][v-1-M]}o[0][0]=i[C],o[1][0]=m[i[C]][i[C+1]][1],o[1][1]=m[i[C]][i[C+2]][1];for(let b=2;b<a;b++){o[b][0]=m[i[C]][i[C+1]][b],o[b][b]=m[i[C]][i[C+2]][b],u.x=(s[3*o[b][b]]-s[3*o[b][0]])/b,u.y=(s[3*o[b][b]+1]-s[3*o[b][0]+1])/b,u.z=(s[3*o[b][b]+2]-s[3*o[b][0]+2])/b,n&&(d.x=(n[3*o[b][b]]-n[3*o[b][0]])/b,d.y=(n[3*o[b][b]+1]-n[3*o[b][0]+1])/b,d.z=(n[3*o[b][b]+2]-n[3*o[b][0]+2])/b),r&&(f.x=(r[2*o[b][b]]-r[2*o[b][0]])/b,f.y=(r[2*o[b][b]+1]-r[2*o[b][0]+1])/b);for(let M=1;M<b;M++)o[b][M]=s.length/3,s[S++]=s[3*o[b][0]]+M*u.x,s[S++]=s[3*o[b][0]+1]+M*u.y,s[S++]=s[3*o[b][0]+2]+M*u.z,n&&(n[A++]=n[3*o[b][0]]+M*d.x,n[A++]=n[3*o[b][0]+1]+M*d.y,n[A++]=n[3*o[b][0]+2]+M*d.z),r&&(r[y++]=r[2*o[b][0]]+M*f.x,r[y++]=r[2*o[b][0]+1]+M*f.y)}o[a]=m[i[C+1]][i[C+2]],_.push(o[0][0],o[1][0],o[1][1]);for(let b=1;b<a;b++){let M;for(M=0;M<b;M++)_.push(o[b][M],o[b+1][M],o[b+1][M+1]),_.push(o[b][M],o[b+1][M+1],o[b][M+1]);_.push(o[b][M],o[b+1][M],o[b+1][M+1])}}t.indices=_,t.applyToMesh(this,this.isVertexBufferUpdatable(g.PositionKind))}}forceSharedVertices(){const e=ee.ExtractFromMesh(this),t=e.uvs,i=e.indices,s=e.positions,r=e.colors,n=e.matricesIndices,a=e.matricesWeights,o=e.matricesIndicesExtra,h=e.matricesWeightsExtra;if(i===void 0||s===void 0||i===null||s===null)O.Warn("VertexData contains empty entries");else{const l=new Array,u=new Array,d=new Array,f=new Array,_=new Array,E=new Array,m=new Array,v=new Array;let S=new Array,y=0;const A={};let C,b;for(let L=0;L<i.length;L+=3){b=[i[L],i[L+1],i[L+2]],S=new Array;for(let k=0;k<3;k++){S[k]="";for(let w=0;w<3;w++)Math.abs(s[3*b[k]+w])<1e-8&&(s[3*b[k]+w]=0),S[k]+=s[3*b[k]+w]+"|"}if(!(S[0]==S[1]||S[0]==S[2]||S[1]==S[2]))for(let k=0;k<3;k++){if(C=A[S[k]],C===void 0){A[S[k]]=y,C=y++;for(let w=0;w<3;w++)l.push(s[3*b[k]+w]);if(r!=null)for(let w=0;w<4;w++)f.push(r[4*b[k]+w]);if(t!=null)for(let w=0;w<2;w++)d.push(t[2*b[k]+w]);if(n!=null)for(let w=0;w<4;w++)_.push(n[4*b[k]+w]);if(a!=null)for(let w=0;w<4;w++)E.push(a[4*b[k]+w]);if(o!=null)for(let w=0;w<4;w++)m.push(o[4*b[k]+w]);if(h!=null)for(let w=0;w<4;w++)v.push(h[4*b[k]+w])}u.push(C)}}const M=new Array;ee.ComputeNormals(l,u,M),e.positions=l,e.indices=u,e.normals=M,t!=null&&(e.uvs=d),r!=null&&(e.colors=f),n!=null&&(e.matricesIndices=_),a!=null&&(e.matricesWeights=E),o!=null&&(e.matricesIndicesExtra=m),a!=null&&(e.matricesWeightsExtra=v),e.applyToMesh(this,this.isVertexBufferUpdatable(g.PositionKind))}}static _instancedMeshFactory(e,t){throw $("InstancedMesh")}static _PhysicsImpostorParser(e,t,i){throw $("PhysicsImpostor")}createInstance(e){return W._instancedMeshFactory(e,this)}synchronizeInstances(){for(let e=0;e<this.instances.length;e++)this.instances[e]._syncSubMeshes();return this}optimizeIndices(e){const t=this.getIndices(),i=this.getVerticesData(g.PositionKind);if(!i||!t)return this;const s=new Array;for(let n=0;n<i.length;n=n+3)s.push(p.FromArray(i,n));const r=new Array;return Yi.SyncAsyncForLoop(s.length,40,n=>{const a=s.length-1-n,o=s[a];for(let h=0;h<a;++h){const l=s[h];if(o.equals(l)){r[a]=h;break}}},()=>{for(let a=0;a<t.length;++a)t[a]=r[t[a]]||t[a];const n=this.subMeshes.slice(0);this.setIndices(t),this.subMeshes=n,e&&e(this)}),this}serialize(e={}){e.name=this.name,e.id=this.id,e.uniqueId=this.uniqueId,e.type=this.getClassName(),ge&&ge.HasTags(this)&&(e.tags=ge.GetTags(this)),e.position=this.position.asArray(),this.rotationQuaternion?e.rotationQuaternion=this.rotationQuaternion.asArray():this.rotation&&(e.rotation=this.rotation.asArray()),e.scaling=this.scaling.asArray(),this._postMultiplyPivotMatrix?e.pivotMatrix=this.getPivotMatrix().asArray():e.localMatrix=this.getPivotMatrix().asArray(),e.isEnabled=this.isEnabled(!1),e.isVisible=this.isVisible,e.infiniteDistance=this.infiniteDistance,e.pickable=this.isPickable,e.receiveShadows=this.receiveShadows,e.billboardMode=this.billboardMode,e.visibility=this.visibility,e.checkCollisions=this.checkCollisions,e.isBlocker=this.isBlocker,e.overrideMaterialSideOrientation=this.overrideMaterialSideOrientation,this.parent&&this.parent._serializeAsParent(e),e.isUnIndexed=this.isUnIndexed;const t=this._geometry;if(t&&this.subMeshes){e.geometryUniqueId=t.uniqueId,e.geometryId=t.id,e.subMeshes=[];for(let i=0;i<this.subMeshes.length;i++){const s=this.subMeshes[i];e.subMeshes.push({materialIndex:s.materialIndex,verticesStart:s.verticesStart,verticesCount:s.verticesCount,indexStart:s.indexStart,indexCount:s.indexCount})}}if(this.material?this.material.doNotSerialize||(e.materialUniqueId=this.material.uniqueId,e.materialId=this.material.id):(this.material=null,e.materialUniqueId=this._scene.defaultMaterial.uniqueId,e.materialId=this._scene.defaultMaterial.id),this.morphTargetManager&&(e.morphTargetManagerId=this.morphTargetManager.uniqueId),this.skeleton&&(e.skeletonId=this.skeleton.id,e.numBoneInfluencers=this.numBoneInfluencers),this.getScene()._getComponent(q.NAME_PHYSICSENGINE)){const i=this.getPhysicsImpostor();i&&(e.physicsMass=i.getParam("mass"),e.physicsFriction=i.getParam("friction"),e.physicsRestitution=i.getParam("mass"),e.physicsImpostor=i.type)}this.metadata&&(e.metadata=this.metadata),e.instances=[];for(let i=0;i<this.instances.length;i++){const s=this.instances[i];if(s.doNotSerialize)continue;const r={name:s.name,id:s.id,isEnabled:s.isEnabled(!1),isVisible:s.isVisible,isPickable:s.isPickable,checkCollisions:s.checkCollisions,position:s.position.asArray(),scaling:s.scaling.asArray()};if(s.parent&&s.parent._serializeAsParent(r),s.rotationQuaternion?r.rotationQuaternion=s.rotationQuaternion.asArray():s.rotation&&(r.rotation=s.rotation.asArray()),this.getScene()._getComponent(q.NAME_PHYSICSENGINE)){const n=s.getPhysicsImpostor();n&&(r.physicsMass=n.getParam("mass"),r.physicsFriction=n.getParam("friction"),r.physicsRestitution=n.getParam("mass"),r.physicsImpostor=n.type)}s.metadata&&(r.metadata=s.metadata),e.instances.push(r),ae.AppendSerializedAnimations(s,r),r.ranges=s.serializeAnimationRanges()}if(this._thinInstanceDataStorage.instancesCount&&this._thinInstanceDataStorage.matrixData&&(e.thinInstances={instancesCount:this._thinInstanceDataStorage.instancesCount,matrixData:Array.from(this._thinInstanceDataStorage.matrixData),matrixBufferSize:this._thinInstanceDataStorage.matrixBufferSize,enablePicking:this.thinInstanceEnablePicking},this._userThinInstanceBuffersStorage)){const i={data:{},sizes:{},strides:{}};for(const s in this._userThinInstanceBuffersStorage.data)i.data[s]=Array.from(this._userThinInstanceBuffersStorage.data[s]),i.sizes[s]=this._userThinInstanceBuffersStorage.sizes[s],i.strides[s]=this._userThinInstanceBuffersStorage.strides[s];e.thinInstances.userThinInstance=i}return ae.AppendSerializedAnimations(this,e),e.ranges=this.serializeAnimationRanges(),e.layerMask=this.layerMask,e.alphaIndex=this.alphaIndex,e.hasVertexAlpha=this.hasVertexAlpha,e.overlayAlpha=this.overlayAlpha,e.overlayColor=this.overlayColor.asArray(),e.renderOverlay=this.renderOverlay,e.applyFog=this.applyFog,this.actionManager&&(e.actions=this.actionManager.serialize(this.name)),e}_syncGeometryWithMorphTargetManager(){if(!this.geometry)return;this._markSubMeshesAsAttributesDirty();const e=this._internalAbstractMeshDataInfo._morphTargetManager;if(e&&e.vertexCount){if(e.vertexCount!==this.getTotalVertices()){O.Error("Mesh is incompatible with morph targets. Targets and mesh must all have the same vertices count."),this.morphTargetManager=null;return}if(e.isUsingTextureForTargets)return;for(let t=0;t<e.numInfluencers;t++){const i=e.getActiveTarget(t),s=i.getPositions();if(!s){O.Error("Invalid morph target. Target must have positions.");return}this.geometry.setVerticesData(g.PositionKind+t,s,!1,3);const r=i.getNormals();r&&this.geometry.setVerticesData(g.NormalKind+t,r,!1,3);const n=i.getTangents();n&&this.geometry.setVerticesData(g.TangentKind+t,n,!1,3);const a=i.getUVs();a&&this.geometry.setVerticesData(g.UVKind+"_"+t,a,!1,2)}}else{let t=0;for(;this.geometry.isVerticesDataPresent(g.PositionKind+t);)this.geometry.removeVerticesData(g.PositionKind+t),this.geometry.isVerticesDataPresent(g.NormalKind+t)&&this.geometry.removeVerticesData(g.NormalKind+t),this.geometry.isVerticesDataPresent(g.TangentKind+t)&&this.geometry.removeVerticesData(g.TangentKind+t),this.geometry.isVerticesDataPresent(g.UVKind+t)&&this.geometry.removeVerticesData(g.UVKind+"_"+t),t++}}static Parse(e,t,i){let s;if(e.type&&e.type==="LinesMesh"?s=W._LinesMeshParser(e,t):e.type&&e.type==="GroundMesh"?s=W._GroundMeshParser(e,t):e.type&&e.type==="GoldbergMesh"?s=W._GoldbergMeshParser(e,t):s=new W(e.name,t),s.id=e.id,s._waitingParsedUniqueId=e.uniqueId,ge&&ge.AddTagsTo(s,e.tags),s.position=p.FromArray(e.position),e.metadata!==void 0&&(s.metadata=e.metadata),e.rotationQuaternion?s.rotationQuaternion=Z.FromArray(e.rotationQuaternion):e.rotation&&(s.rotation=p.FromArray(e.rotation)),s.scaling=p.FromArray(e.scaling),e.localMatrix?s.setPreTransformMatrix(x.FromArray(e.localMatrix)):e.pivotMatrix&&s.setPivotMatrix(x.FromArray(e.pivotMatrix)),s.setEnabled(e.isEnabled),s.isVisible=e.isVisible,s.infiniteDistance=e.infiniteDistance,s.showBoundingBox=e.showBoundingBox,s.showSubMeshesBoundingBox=e.showSubMeshesBoundingBox,e.applyFog!==void 0&&(s.applyFog=e.applyFog),e.pickable!==void 0&&(s.isPickable=e.pickable),e.alphaIndex!==void 0&&(s.alphaIndex=e.alphaIndex),s.receiveShadows=e.receiveShadows,e.billboardMode!==void 0&&(s.billboardMode=e.billboardMode),e.visibility!==void 0&&(s.visibility=e.visibility),s.checkCollisions=e.checkCollisions,s.overrideMaterialSideOrientation=e.overrideMaterialSideOrientation,e.isBlocker!==void 0&&(s.isBlocker=e.isBlocker),s._shouldGenerateFlatShading=e.useFlatShading,e.freezeWorldMatrix&&(s._waitingData.freezeWorldMatrix=e.freezeWorldMatrix),e.parentId!==void 0&&(s._waitingParentId=e.parentId),e.parentInstanceIndex!==void 0&&(s._waitingParentInstanceIndex=e.parentInstanceIndex),e.actions!==void 0&&(s._waitingData.actions=e.actions),e.overlayAlpha!==void 0&&(s.overlayAlpha=e.overlayAlpha),e.overlayColor!==void 0&&(s.overlayColor=re.FromArray(e.overlayColor)),e.renderOverlay!==void 0&&(s.renderOverlay=e.renderOverlay),s.isUnIndexed=!!e.isUnIndexed,s.hasVertexAlpha=e.hasVertexAlpha,e.delayLoadingFile?(s.delayLoadState=4,s.delayLoadingFile=i+e.delayLoadingFile,s.buildBoundingInfo(p.FromArray(e.boundingBoxMinimum),p.FromArray(e.boundingBoxMaximum)),e._binaryInfo&&(s._binaryInfo=e._binaryInfo),s._delayInfo=[],e.hasUVs&&s._delayInfo.push(g.UVKind),e.hasUVs2&&s._delayInfo.push(g.UV2Kind),e.hasUVs3&&s._delayInfo.push(g.UV3Kind),e.hasUVs4&&s._delayInfo.push(g.UV4Kind),e.hasUVs5&&s._delayInfo.push(g.UV5Kind),e.hasUVs6&&s._delayInfo.push(g.UV6Kind),e.hasColors&&s._delayInfo.push(g.ColorKind),e.hasMatricesIndices&&s._delayInfo.push(g.MatricesIndicesKind),e.hasMatricesWeights&&s._delayInfo.push(g.MatricesWeightsKind),s._delayLoadingFunction=at._ImportGeometry,Oe.ForceFullSceneLoadingForIncremental&&s._checkDelayState()):at._ImportGeometry(e,s),e.materialUniqueId?s._waitingMaterialId=e.materialUniqueId:e.materialId&&(s._waitingMaterialId=e.materialId),e.morphTargetManagerId>-1&&(s.morphTargetManager=t.getMorphTargetManagerById(e.morphTargetManagerId)),e.skeletonId!==void 0&&e.skeletonId!==null&&(s.skeleton=t.getLastSkeletonById(e.skeletonId),e.numBoneInfluencers&&(s.numBoneInfluencers=e.numBoneInfluencers)),e.animations){for(let r=0;r<e.animations.length;r++){const n=e.animations[r],a=ri("BABYLON.Animation");a&&s.animations.push(a.Parse(n))}ze.ParseAnimationRanges(s,e,t)}if(e.autoAnimate&&t.beginAnimation(s,e.autoAnimateFrom,e.autoAnimateTo,e.autoAnimateLoop,e.autoAnimateSpeed||1),e.layerMask&&!isNaN(e.layerMask)?s.layerMask=Math.abs(parseInt(e.layerMask)):s.layerMask=268435455,e.physicsImpostor&&W._PhysicsImpostorParser(t,s,e),e.lodMeshIds&&(s._waitingData.lods={ids:e.lodMeshIds,distances:e.lodDistances?e.lodDistances:null,coverages:e.lodCoverages?e.lodCoverages:null}),e.instances)for(let r=0;r<e.instances.length;r++){const n=e.instances[r],a=s.createInstance(n.name);if(n.id&&(a.id=n.id),ge&&(n.tags?ge.AddTagsTo(a,n.tags):ge.AddTagsTo(a,e.tags)),a.position=p.FromArray(n.position),n.metadata!==void 0&&(a.metadata=n.metadata),n.parentId!==void 0&&(a._waitingParentId=n.parentId),n.parentInstanceIndex!==void 0&&(a._waitingParentInstanceIndex=n.parentInstanceIndex),n.isEnabled!==void 0&&n.isEnabled!==null&&a.setEnabled(n.isEnabled),n.isVisible!==void 0&&n.isVisible!==null&&(a.isVisible=n.isVisible),n.isPickable!==void 0&&n.isPickable!==null&&(a.isPickable=n.isPickable),n.rotationQuaternion?a.rotationQuaternion=Z.FromArray(n.rotationQuaternion):n.rotation&&(a.rotation=p.FromArray(n.rotation)),a.scaling=p.FromArray(n.scaling),n.checkCollisions!=null&&n.checkCollisions!=null&&(a.checkCollisions=n.checkCollisions),n.pickable!=null&&n.pickable!=null&&(a.isPickable=n.pickable),n.showBoundingBox!=null&&n.showBoundingBox!=null&&(a.showBoundingBox=n.showBoundingBox),n.showSubMeshesBoundingBox!=null&&n.showSubMeshesBoundingBox!=null&&(a.showSubMeshesBoundingBox=n.showSubMeshesBoundingBox),n.alphaIndex!=null&&n.showSubMeshesBoundingBox!=null&&(a.alphaIndex=n.alphaIndex),n.physicsImpostor&&W._PhysicsImpostorParser(t,a,n),n.animations){for(let o=0;o<n.animations.length;o++){const h=n.animations[o],l=ri("BABYLON.Animation");l&&a.animations.push(l.Parse(h))}ze.ParseAnimationRanges(a,n,t),n.autoAnimate&&t.beginAnimation(a,n.autoAnimateFrom,n.autoAnimateTo,n.autoAnimateLoop,n.autoAnimateSpeed||1)}}if(e.thinInstances){const r=e.thinInstances;if(s.thinInstanceEnablePicking=!!r.enablePicking,r.matrixData?(s.thinInstanceSetBuffer("matrix",new Float32Array(r.matrixData),16,!1),s._thinInstanceDataStorage.matrixBufferSize=r.matrixBufferSize,s._thinInstanceDataStorage.instancesCount=r.instancesCount):s._thinInstanceDataStorage.matrixBufferSize=r.matrixBufferSize,e.thinInstances.userThinInstance){const n=e.thinInstances.userThinInstance;for(const a in n.data)s.thinInstanceSetBuffer(a,new Float32Array(n.data[a]),n.strides[a],!1),s._userThinInstanceBuffersStorage.sizes[a]=n.sizes[a]}}return s}setPositionsForCPUSkinning(){const e=this._internalMeshDataInfo;if(!e._sourcePositions){const t=this.getVerticesData(g.PositionKind);if(!t)return e._sourcePositions;e._sourcePositions=new Float32Array(t),this.isVertexBufferUpdatable(g.PositionKind)||this.setVerticesData(g.PositionKind,t,!0)}return e._sourcePositions}setNormalsForCPUSkinning(){const e=this._internalMeshDataInfo;if(!e._sourceNormals){const t=this.getVerticesData(g.NormalKind);if(!t)return e._sourceNormals;e._sourceNormals=new Float32Array(t),this.isVertexBufferUpdatable(g.NormalKind)||this.setVerticesData(g.NormalKind,t,!0)}return e._sourceNormals}applySkeleton(e){if(!this.geometry)return this;if(this.geometry._softwareSkinningFrameId==this.getScene().getFrameId())return this;if(this.geometry._softwareSkinningFrameId=this.getScene().getFrameId(),!this.isVerticesDataPresent(g.PositionKind))return this;if(!this.isVerticesDataPresent(g.MatricesIndicesKind))return this;if(!this.isVerticesDataPresent(g.MatricesWeightsKind))return this;const t=this.isVerticesDataPresent(g.NormalKind),i=this._internalMeshDataInfo;if(!i._sourcePositions){const v=this.subMeshes.slice();this.setPositionsForCPUSkinning(),this.subMeshes=v}t&&!i._sourceNormals&&this.setNormalsForCPUSkinning();let s=this.getVerticesData(g.PositionKind);if(!s)return this;s instanceof Float32Array||(s=new Float32Array(s));let r=this.getVerticesData(g.NormalKind);if(t){if(!r)return this;r instanceof Float32Array||(r=new Float32Array(r))}const n=this.getVerticesData(g.MatricesIndicesKind),a=this.getVerticesData(g.MatricesWeightsKind);if(!a||!n)return this;const o=this.numBoneInfluencers>4,h=o?this.getVerticesData(g.MatricesIndicesExtraKind):null,l=o?this.getVerticesData(g.MatricesWeightsExtraKind):null,u=e.getTransformMatrices(this),d=p.Zero(),f=new x,_=new x;let E=0,m;for(let v=0;v<s.length;v+=3,E+=4){let S;for(m=0;m<4;m++)S=a[E+m],S>0&&(x.FromFloat32ArrayToRefScaled(u,Math.floor(n[E+m]*16),S,_),f.addToSelf(_));if(o)for(m=0;m<4;m++)S=l[E+m],S>0&&(x.FromFloat32ArrayToRefScaled(u,Math.floor(h[E+m]*16),S,_),f.addToSelf(_));p.TransformCoordinatesFromFloatsToRef(i._sourcePositions[v],i._sourcePositions[v+1],i._sourcePositions[v+2],f,d),d.toArray(s,v),t&&(p.TransformNormalFromFloatsToRef(i._sourceNormals[v],i._sourceNormals[v+1],i._sourceNormals[v+2],f,d),d.toArray(r,v)),f.reset()}return this.updateVerticesData(g.PositionKind,s),t&&this.updateVerticesData(g.NormalKind,r),this}static MinMax(e){let t=null,i=null;return e.forEach(function(s){const n=s.getBoundingInfo().boundingBox;!t||!i?(t=n.minimumWorld,i=n.maximumWorld):(t.minimizeInPlace(n.minimumWorld),i.maximizeInPlace(n.maximumWorld))}),!t||!i?{min:p.Zero(),max:p.Zero()}:{min:t,max:i}}static Center(e){const t=e instanceof Array?W.MinMax(e):e;return p.Center(t.min,t.max)}static MergeMeshes(e,t=!0,i,s,r,n){return Ps(W._MergeMeshesCoroutine(e,t,i,s,r,n,!1))}static MergeMeshesAsync(e,t=!0,i,s,r,n){return On(W._MergeMeshesCoroutine(e,t,i,s,r,n,!0),wn())}static*_MergeMeshesCoroutine(e,t=!0,i,s,r,n,a){if(e=e.filter(Boolean),e.length===0)return null;let o;if(!i){let M=0;for(o=0;o<e.length;o++)if(M+=e[o].getTotalVertices(),M>=65536)return O.Warn("Cannot merge meshes because resulting mesh will have more than 65536 vertices. Please use allow32BitsIndices = true to use 32 bits indices"),null}n&&(r=!1);const h=new Array,l=new Array,u=new Array,d=e[0].overrideMaterialSideOrientation;for(o=0;o<e.length;o++){const M=e[o];if(M.isAnInstance)return O.Warn("Cannot merge instance meshes."),null;if(d!==M.overrideMaterialSideOrientation)return O.Warn("Cannot merge meshes with different overrideMaterialSideOrientation values."),null;if(r&&u.push(M.getTotalIndices()),n)if(M.material){const L=M.material;if(L instanceof Si){for(let k=0;k<L.subMaterials.length;k++)h.indexOf(L.subMaterials[k])<0&&h.push(L.subMaterials[k]);for(let k=0;k<M.subMeshes.length;k++)l.push(h.indexOf(L.subMaterials[M.subMeshes[k].materialIndex])),u.push(M.subMeshes[k].indexCount)}else{h.indexOf(L)<0&&h.push(L);for(let k=0;k<M.subMeshes.length;k++)l.push(h.indexOf(L)),u.push(M.subMeshes[k].indexCount)}}else for(let L=0;L<M.subMeshes.length;L++)l.push(0),u.push(M.subMeshes[L].indexCount)}const f=e[0],_=M=>{const L=M.computeWorldMatrix(!0);return[ee.ExtractFromMesh(M,!1,!1),L]},[E,m]=_(f);a&&(yield);const v=new Array(e.length-1);for(let M=1;M<e.length;M++)v[M-1]=_(e[M]),a&&(yield);const S=E._mergeCoroutine(m,v,i,a,!t);let y=S.next();for(;!y.done;)a&&(yield),y=S.next();const A=y.value;s||(s=new W(f.name+"_merged",f.getScene()));const C=A._applyToCoroutine(s,void 0,a);let b=C.next();for(;!b.done;)a&&(yield),b=C.next();if(s.checkCollisions=f.checkCollisions,s.overrideMaterialSideOrientation=f.overrideMaterialSideOrientation,t)for(o=0;o<e.length;o++)e[o].dispose();if(r||n){s.releaseSubMeshes(),o=0;let M=0;for(;o<u.length;)vt.CreateFromIndices(0,M,u[o],s,void 0,!1),M+=u[o],o++;for(const L of s.subMeshes)L.refreshBoundingInfo();s.computeWorldMatrix(!0)}if(n){const M=new Si(f.name+"_merged",f.getScene());M.subMaterials=h;for(let L=0;L<s.subMeshes.length;L++)s.subMeshes[L].materialIndex=l[L];s.material=M}else s.material=f.material;return s}addInstance(e){e._indexInSourceMeshInstanceArray=this.instances.length,this.instances.push(e)}removeInstance(e){const t=e._indexInSourceMeshInstanceArray;if(t!=-1){if(t!==this.instances.length-1){const i=this.instances[this.instances.length-1];this.instances[t]=i,i._indexInSourceMeshInstanceArray=t}e._indexInSourceMeshInstanceArray=-1,this.instances.pop()}}_shouldConvertRHS(){return this.overrideMaterialSideOrientation===P.CounterClockWiseSideOrientation}}W.FRONTSIDE=ee.FRONTSIDE,W.BACKSIDE=ee.BACKSIDE,W.DOUBLESIDE=ee.DOUBLESIDE,W.DEFAULTSIDE=ee.DEFAULTSIDE,W.NO_CAP=0,W.CAP_START=1,W.CAP_END=2,W.CAP_ALL=3,W.NO_FLIP=0,W.FLIP_TILE=1,W.ROTATE_TILE=2,W.FLIP_ROW=3,W.ROTATE_ROW=4,W.FLIP_N_ROTATE_TILE=5,W.FLIP_N_ROTATE_ROW=6,W.CENTER=0,W.LEFT=1,W.RIGHT=2,W.TOP=3,W.BOTTOM=4,W.INSTANCEDMESH_SORT_TRANSPARENT=!1,W._GroundMeshParser=(c,e)=>{throw $("GroundMesh")},W._GoldbergMeshParser=(c,e)=>{throw $("GoldbergMesh")},W._LinesMeshParser=(c,e)=>{throw $("LinesMesh")},it("BABYLON.Mesh",W),W.prototype.setMaterialByID=function(c){return this.setMaterialById(c)},W.CreateDisc=W.CreateDisc||(()=>{throw new Error("Import MeshBuilder to populate this function")}),W.CreateBox=W.CreateBox||(()=>{throw new Error("Import MeshBuilder to populate this function")}),W.CreateSphere=W.CreateSphere||(()=>{throw new Error("Import MeshBuilder to populate this function")}),W.CreateCylinder=W.CreateCylinder||(()=>{throw new Error("Import MeshBuilder to populate this function")}),W.CreateTorusKnot=W.CreateTorusKnot||(()=>{throw new Error("Import MeshBuilder to populate this function")}),W.CreateTorus=W.CreateTorus||(()=>{throw new Error("Import MeshBuilder to populate this function")}),W.CreatePlane=W.CreatePlane||(()=>{throw new Error("Import MeshBuilder to populate this function")}),W.CreateGround=W.CreateGround||(()=>{throw new Error("Import MeshBuilder to populate this function")}),W.CreateTiledGround=W.CreateTiledGround||(()=>{throw new Error("Import MeshBuilder to populate this function")}),W.CreateGroundFromHeightMap=W.CreateGroundFromHeightMap||(()=>{throw new Error("Import MeshBuilder to populate this function")}),W.CreateTube=W.CreateTube||(()=>{throw new Error("Import MeshBuilder to populate this function")}),W.CreatePolyhedron=W.CreatePolyhedron||(()=>{throw new Error("Import MeshBuilder to populate this function")}),W.CreateIcoSphere=W.CreateIcoSphere||(()=>{throw new Error("Import MeshBuilder to populate this function")}),W.CreateDecal=W.CreateDecal||(()=>{throw new Error("Import MeshBuilder to populate this function")}),W.CreateCapsule=W.CreateCapsule||(()=>{throw new Error("Import MeshBuilder to populate this function")}),W.ExtendToGoldberg=W.ExtendToGoldberg||(()=>{throw new Error("Import MeshBuilder to populate this function")});class zt{constructor(e=0){this.priority=e}getDescription(){return""}apply(e,t){return!0}}class Ls extends zt{constructor(e=0,t=1024,i=.5){super(e),this.priority=e,this.maximumSize=t,this.step=i}getDescription(){return"Reducing render target texture size to "+this.maximumSize}apply(e,t){let i=!0;for(let s=0;s<e.textures.length;s++){const r=e.textures[s];if(!r.canRescale||r.getContext)continue;const n=r.getSize();Math.max(n.width,n.height)>this.maximumSize&&(r.scale(this.step),i=!1)}return i}}class Pr extends zt{constructor(e=0,t=2,i=.25){super(e),this.priority=e,this.maximumScale=t,this.step=i,this._currentScale=-1,this._directionOffset=1}getDescription(){return"Setting hardware scaling level to "+this._currentScale}apply(e,t){return this._currentScale===-1&&(this._currentScale=e.getEngine().getHardwareScalingLevel(),this._currentScale>this.maximumScale&&(this._directionOffset=-1)),this._currentScale+=this._directionOffset*this.step,e.getEngine().setHardwareScalingLevel(this._currentScale),this._directionOffset===1?this._currentScale>=this.maximumScale:this._currentScale<=this.maximumScale}}class Ns extends zt{getDescription(){return"Turning shadows on/off"}apply(e,t){return e.shadowsEnabled=t.isInImprovementMode,!0}}class Bs extends zt{getDescription(){return"Turning post-processes on/off"}apply(e,t){return e.postProcessesEnabled=t.isInImprovementMode,!0}}class Us extends zt{getDescription(){return"Turning lens flares on/off"}apply(e,t){return e.lensFlaresEnabled=t.isInImprovementMode,!0}}class Hn extends zt{getDescription(){return this.onGetDescription?this.onGetDescription():"Running user defined callback"}apply(e,t){return this.onApply?this.onApply(e,t):!0}}class ks extends zt{getDescription(){return"Turning particles on/off"}apply(e,t){return e.particlesEnabled=t.isInImprovementMode,!0}}class Dr extends zt{getDescription(){return"Turning render targets off"}apply(e,t){return e.renderTargetsEnabled=t.isInImprovementMode,!0}}class Qt extends zt{constructor(){super(...arguments),this._canBeMerged=e=>{if(!(e instanceof W))return!1;const t=e;return!(t.isDisposed()||!t.isVisible||!t.isEnabled()||t.instances.length>0||t.skeleton||t.hasLODLevels)}}static get UpdateSelectionTree(){return Qt._UpdateSelectionTree}static set UpdateSelectionTree(e){Qt._UpdateSelectionTree=e}getDescription(){return"Merging similar meshes together"}apply(e,t,i){const s=e.meshes.slice(0);let r=s.length;for(let a=0;a<r;a++){const o=new Array,h=s[a];if(this._canBeMerged(h)){o.push(h);for(let l=a+1;l<r;l++){const u=s[l];this._canBeMerged(u)&&u.material===h.material&&u.checkCollisions===h.checkCollisions&&(o.push(u),r--,s.splice(l,1),l--)}o.length<2||W.MergeMeshes(o,void 0,!0)}}const n=e;return n.createOrUpdateSelectionOctree&&(i!=null?i&&n.createOrUpdateSelectionOctree():Qt.UpdateSelectionTree&&n.createOrUpdateSelectionOctree()),!0}}Qt._UpdateSelectionTree=!1;class gi{constructor(e=60,t=2e3){this.targetFrameRate=e,this.trackerDuration=t,this.optimizations=new Array}addOptimization(e){return this.optimizations.push(e),this}addCustomOptimization(e,t,i=0){const s=new Hn(i);return s.onApply=e,s.onGetDescription=t,this.optimizations.push(s),this}static LowDegradationAllowed(e){const t=new gi(e);let i=0;return t.addOptimization(new Qt(i)),t.addOptimization(new Ns(i)),t.addOptimization(new Us(i)),i++,t.addOptimization(new Bs(i)),t.addOptimization(new ks(i)),i++,t.addOptimization(new Ls(i,1024)),t}static ModerateDegradationAllowed(e){const t=new gi(e);let i=0;return t.addOptimization(new Qt(i)),t.addOptimization(new Ns(i)),t.addOptimization(new Us(i)),i++,t.addOptimization(new Bs(i)),t.addOptimization(new ks(i)),i++,t.addOptimization(new Ls(i,512)),i++,t.addOptimization(new Dr(i)),i++,t.addOptimization(new Pr(i,2)),t}static HighDegradationAllowed(e){const t=new gi(e);let i=0;return t.addOptimization(new Qt(i)),t.addOptimization(new Ns(i)),t.addOptimization(new Us(i)),i++,t.addOptimization(new Bs(i)),t.addOptimization(new ks(i)),i++,t.addOptimization(new Ls(i,256)),i++,t.addOptimization(new Dr(i)),i++,t.addOptimization(new Pr(i,4)),t}}class Vs{constructor(e,t,i=!0,s=!1){if(this._isRunning=!1,this._currentPriorityLevel=0,this._targetFrameRate=60,this._trackerDuration=2e3,this._currentFrameRate=0,this._improvementMode=!1,this.onSuccessObservable=new F,this.onNewOptimizationAppliedObservable=new F,this.onFailureObservable=new F,t?this._options=t:this._options=new gi,this._options.targetFrameRate&&(this._targetFrameRate=this._options.targetFrameRate),this._options.trackerDuration&&(this._trackerDuration=this._options.trackerDuration),i){let r=0;for(const n of this._options.optimizations)n.priority=r++}this._improvementMode=s,this._scene=e||fe.LastCreatedScene,this._sceneDisposeObserver=this._scene.onDisposeObservable.add(()=>{this._sceneDisposeObserver=null,this.dispose()})}get isInImprovementMode(){return this._improvementMode}set isInImprovementMode(e){this._improvementMode=e}get currentPriorityLevel(){return this._currentPriorityLevel}get currentFrameRate(){return this._currentFrameRate}get targetFrameRate(){return this._targetFrameRate}set targetFrameRate(e){this._targetFrameRate=e}get trackerDuration(){return this._trackerDuration}set trackerDuration(e){this._trackerDuration=e}get optimizations(){return this._options.optimizations}stop(){this._isRunning=!1}reset(){this._currentPriorityLevel=0}start(){this._isRunning||(this._isRunning=!0,this._scene.executeWhenReady(()=>{setTimeout(()=>{this._checkCurrentState()},this._trackerDuration)}))}_checkCurrentState(){if(!this._isRunning)return;const e=this._scene,t=this._options;if(this._currentFrameRate=Math.round(e.getEngine().getFps()),this._improvementMode&&this._currentFrameRate<=this._targetFrameRate||!this._improvementMode&&this._currentFrameRate>=this._targetFrameRate){this._isRunning=!1,this.onSuccessObservable.notifyObservers(this);return}let i=!0,s=!0;for(let r=0;r<t.optimizations.length;r++){const n=t.optimizations[r];n.priority===this._currentPriorityLevel&&(s=!1,i=i&&n.apply(e,this),this.onNewOptimizationAppliedObservable.notifyObservers(n))}if(s){this._isRunning=!1,this.onFailureObservable.notifyObservers(this);return}i&&this._currentPriorityLevel++,e.executeWhenReady(()=>{setTimeout(()=>{this._checkCurrentState()},this._trackerDuration)})}dispose(){this.stop(),this.onSuccessObservable.clear(),this.onFailureObservable.clear(),this.onNewOptimizationAppliedObservable.clear(),this._sceneDisposeObserver&&this._scene.onDisposeObservable.remove(this._sceneDisposeObserver)}static OptimizeAsync(e,t,i,s){const r=new Vs(e,t||gi.ModerateDegradationAllowed(),!1);return i&&r.onSuccessObservable.add(()=>{i()}),s&&r.onFailureObservable.add(()=>{s()}),r.start(),r}}function Kn(c){const{engine:e}=c,t=new ne(e);t.clearColor=new me(0,0,0,0),t.pointerMovePredicate=()=>!1,t.pointerDownPredicate=()=>!1,t.pointerUpPredicate=()=>!1,t.clearCachedVertexData(),t.themeData={};const i=gi.LowDegradationAllowed();return i.optimizations=i.optimizations.splice(1),i.targetFrameRate=60,Vs.OptimizeAsync(t,i),t}class Ge extends j{constructor(e,t,i,s=!0){super(e,t,i,s),this._tmpUpVector=p.Zero(),this._tmpTargetVector=p.Zero(),this.cameraDirection=new p(0,0,0),this.cameraRotation=new ve(0,0),this.ignoreParentScaling=!1,this.updateUpVectorFromRotation=!1,this._tmpQuaternion=new Z,this.rotation=new p(0,0,0),this.speed=2,this.noRotationConstraint=!1,this.invertRotation=!1,this.inverseRotationSpeed=.2,this.lockedTarget=null,this._currentTarget=p.Zero(),this._initialFocalDistance=1,this._viewMatrix=x.Zero(),this._camMatrix=x.Zero(),this._cameraTransformMatrix=x.Zero(),this._cameraRotationMatrix=x.Zero(),this._referencePoint=new p(0,0,1),this._transformedReferencePoint=p.Zero(),this._defaultUp=p.Up(),this._cachedRotationZ=0,this._cachedQuaternionRotationZ=0}getFrontPosition(e){this.getWorldMatrix();const t=this.getTarget().subtract(this.position);return t.normalize(),t.scaleInPlace(e),this.globalPosition.add(t)}_getLockedTargetPosition(){return this.lockedTarget?(this.lockedTarget.absolutePosition&&this.lockedTarget.computeWorldMatrix(),this.lockedTarget.absolutePosition||this.lockedTarget):null}storeState(){return this._storedPosition=this.position.clone(),this._storedRotation=this.rotation.clone(),this.rotationQuaternion&&(this._storedRotationQuaternion=this.rotationQuaternion.clone()),super.storeState()}_restoreStateValues(){return super._restoreStateValues()?(this.position=this._storedPosition.clone(),this.rotation=this._storedRotation.clone(),this.rotationQuaternion&&(this.rotationQuaternion=this._storedRotationQuaternion.clone()),this.cameraDirection.copyFromFloats(0,0,0),this.cameraRotation.copyFromFloats(0,0),!0):!1}_initCache(){super._initCache(),this._cache.lockedTarget=new p(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._cache.rotation=new p(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._cache.rotationQuaternion=new Z(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)}_updateCache(e){e||super._updateCache();const t=this._getLockedTargetPosition();t?this._cache.lockedTarget?this._cache.lockedTarget.copyFrom(t):this._cache.lockedTarget=t.clone():this._cache.lockedTarget=null,this._cache.rotation.copyFrom(this.rotation),this.rotationQuaternion&&this._cache.rotationQuaternion.copyFrom(this.rotationQuaternion)}_isSynchronizedViewMatrix(){if(!super._isSynchronizedViewMatrix())return!1;const e=this._getLockedTargetPosition();return(this._cache.lockedTarget?this._cache.lockedTarget.equals(e):!e)&&(this.rotationQuaternion?this.rotationQuaternion.equals(this._cache.rotationQuaternion):this._cache.rotation.equals(this.rotation))}_computeLocalCameraSpeed(){const e=this.getEngine();return this.speed*Math.sqrt(e.getDeltaTime()/(e.getFps()*100))}setTarget(e){this.upVector.normalize(),this._initialFocalDistance=e.subtract(this.position).length(),this.position.z===e.z&&(this.position.z+=xe),this._referencePoint.normalize().scaleInPlace(this._initialFocalDistance),x.LookAtLHToRef(this.position,e,this._defaultUp,this._camMatrix),this._camMatrix.invert(),this.rotation.x=Math.atan(this._camMatrix.m[6]/this._camMatrix.m[10]);const t=e.subtract(this.position);t.x>=0?this.rotation.y=-Math.atan(t.z/t.x)+Math.PI/2:this.rotation.y=-Math.atan(t.z/t.x)-Math.PI/2,this.rotation.z=0,isNaN(this.rotation.x)&&(this.rotation.x=0),isNaN(this.rotation.y)&&(this.rotation.y=0),isNaN(this.rotation.z)&&(this.rotation.z=0),this.rotationQuaternion&&Z.RotationYawPitchRollToRef(this.rotation.y,this.rotation.x,this.rotation.z,this.rotationQuaternion)}get target(){return this.getTarget()}set target(e){this.setTarget(e)}getTarget(){return this._currentTarget}_decideIfNeedsToMove(){return Math.abs(this.cameraDirection.x)>0||Math.abs(this.cameraDirection.y)>0||Math.abs(this.cameraDirection.z)>0}_updatePosition(){if(this.parent){this.parent.getWorldMatrix().invertToRef(D.Matrix[0]),p.TransformNormalToRef(this.cameraDirection,D.Matrix[0],D.Vector3[0]),this.position.addInPlace(D.Vector3[0]);return}this.position.addInPlace(this.cameraDirection)}_checkInputs(){const e=this.invertRotation?-this.inverseRotationSpeed:1,t=this._decideIfNeedsToMove(),i=Math.abs(this.cameraRotation.x)>0||Math.abs(this.cameraRotation.y)>0;t&&this._updatePosition(),i&&(this.rotationQuaternion&&this.rotationQuaternion.toEulerAnglesToRef(this.rotation),this.rotation.x+=this.cameraRotation.x*e,this.rotation.y+=this.cameraRotation.y*e,this.noRotationConstraint||(this.rotation.x>1.570796&&(this.rotation.x=1.570796),this.rotation.x<-1.570796&&(this.rotation.x=-1.570796)),this.rotationQuaternion&&this.rotation.lengthSquared()&&Z.RotationYawPitchRollToRef(this.rotation.y,this.rotation.x,this.rotation.z,this.rotationQuaternion)),t&&(Math.abs(this.cameraDirection.x)<this.speed*xe&&(this.cameraDirection.x=0),Math.abs(this.cameraDirection.y)<this.speed*xe&&(this.cameraDirection.y=0),Math.abs(this.cameraDirection.z)<this.speed*xe&&(this.cameraDirection.z=0),this.cameraDirection.scaleInPlace(this.inertia)),i&&(Math.abs(this.cameraRotation.x)<this.speed*xe&&(this.cameraRotation.x=0),Math.abs(this.cameraRotation.y)<this.speed*xe&&(this.cameraRotation.y=0),this.cameraRotation.scaleInPlace(this.inertia)),super._checkInputs()}_updateCameraRotationMatrix(){this.rotationQuaternion?this.rotationQuaternion.toRotationMatrix(this._cameraRotationMatrix):x.RotationYawPitchRollToRef(this.rotation.y,this.rotation.x,this.rotation.z,this._cameraRotationMatrix)}_rotateUpVectorWithCameraRotationMatrix(){return p.TransformNormalToRef(this._defaultUp,this._cameraRotationMatrix,this.upVector),this}_getViewMatrix(){return this.lockedTarget&&this.setTarget(this._getLockedTargetPosition()),this._updateCameraRotationMatrix(),this.rotationQuaternion&&this._cachedQuaternionRotationZ!=this.rotationQuaternion.z?(this._rotateUpVectorWithCameraRotationMatrix(),this._cachedQuaternionRotationZ=this.rotationQuaternion.z):this._cachedRotationZ!==this.rotation.z&&(this._rotateUpVectorWithCameraRotationMatrix(),this._cachedRotationZ=this.rotation.z),p.TransformCoordinatesToRef(this._referencePoint,this._cameraRotationMatrix,this._transformedReferencePoint),this.position.addToRef(this._transformedReferencePoint,this._currentTarget),this.updateUpVectorFromRotation&&(this.rotationQuaternion?_i.Y.rotateByQuaternionToRef(this.rotationQuaternion,this.upVector):(Z.FromEulerVectorToRef(this.rotation,this._tmpQuaternion),_i.Y.rotateByQuaternionToRef(this._tmpQuaternion,this.upVector))),this._computeViewMatrix(this.position,this._currentTarget,this.upVector),this._viewMatrix}_computeViewMatrix(e,t,i){if(this.ignoreParentScaling){if(this.parent){const s=this.parent.getWorldMatrix();p.TransformCoordinatesToRef(e,s,this._globalPosition),p.TransformCoordinatesToRef(t,s,this._tmpTargetVector),p.TransformNormalToRef(i,s,this._tmpUpVector),this._markSyncedWithParent()}else this._globalPosition.copyFrom(e),this._tmpTargetVector.copyFrom(t),this._tmpUpVector.copyFrom(i);this.getScene().useRightHandedSystem?x.LookAtRHToRef(this._globalPosition,this._tmpTargetVector,this._tmpUpVector,this._viewMatrix):x.LookAtLHToRef(this._globalPosition,this._tmpTargetVector,this._tmpUpVector,this._viewMatrix);return}if(this.getScene().useRightHandedSystem?x.LookAtRHToRef(e,t,i,this._viewMatrix):x.LookAtLHToRef(e,t,i,this._viewMatrix),this.parent){const s=this.parent.getWorldMatrix();this._viewMatrix.invert(),this._viewMatrix.multiplyToRef(s,this._viewMatrix),this._viewMatrix.getTranslationToRef(this._globalPosition),this._viewMatrix.invert(),this._markSyncedWithParent()}else this._globalPosition.copyFrom(e)}createRigCamera(e,t){if(this.cameraRigMode!==j.RIG_MODE_NONE){const i=new Ge(e,this.position.clone(),this.getScene());return i.isRigCamera=!0,i.rigParent=this,(this.cameraRigMode===j.RIG_MODE_VR||this.cameraRigMode===j.RIG_MODE_WEBVR)&&(this.rotationQuaternion||(this.rotationQuaternion=new Z),i._cameraRigParams={},i.rotationQuaternion=new Z),i.mode=this.mode,i.orthoLeft=this.orthoLeft,i.orthoRight=this.orthoRight,i.orthoTop=this.orthoTop,i.orthoBottom=this.orthoBottom,i}return null}_updateRigCameras(){const e=this._rigCameras[0],t=this._rigCameras[1];switch(this.computeWorldMatrix(),this.cameraRigMode){case j.RIG_MODE_STEREOSCOPIC_ANAGLYPH:case j.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_PARALLEL:case j.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED:case j.RIG_MODE_STEREOSCOPIC_OVERUNDER:case j.RIG_MODE_STEREOSCOPIC_INTERLACED:{const i=this.cameraRigMode===j.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED?1:-1,s=this.cameraRigMode===j.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED?-1:1;this._getRigCamPositionAndTarget(this._cameraRigParams.stereoHalfAngle*i,e),this._getRigCamPositionAndTarget(this._cameraRigParams.stereoHalfAngle*s,t);break}case j.RIG_MODE_VR:e.rotationQuaternion?(e.rotationQuaternion.copyFrom(this.rotationQuaternion),t.rotationQuaternion.copyFrom(this.rotationQuaternion)):(e.rotation.copyFrom(this.rotation),t.rotation.copyFrom(this.rotation)),e.position.copyFrom(this.position),t.position.copyFrom(this.position);break}super._updateRigCameras()}_getRigCamPositionAndTarget(e,t){this.getTarget().subtractToRef(this.position,Ge._TargetFocalPoint),Ge._TargetFocalPoint.normalize().scaleInPlace(this._initialFocalDistance);const s=Ge._TargetFocalPoint.addInPlace(this.position);x.TranslationToRef(-s.x,-s.y,-s.z,Ge._TargetTransformMatrix),Ge._TargetTransformMatrix.multiplyToRef(x.RotationAxis(t.upVector,e),Ge._RigCamTransformMatrix),x.TranslationToRef(s.x,s.y,s.z,Ge._TargetTransformMatrix),Ge._RigCamTransformMatrix.multiplyToRef(Ge._TargetTransformMatrix,Ge._RigCamTransformMatrix),p.TransformCoordinatesToRef(this.position,Ge._RigCamTransformMatrix,t.position),t.setTarget(s)}getClassName(){return"TargetCamera"}}Ge._RigCamTransformMatrix=new x,Ge._TargetTransformMatrix=new x,Ge._TargetFocalPoint=new p,T([Bt()],Ge.prototype,"rotation",void 0),T([R()],Ge.prototype,"speed",void 0),T([Mn("lockedTargetId")],Ge.prototype,"lockedTarget",void 0);function Yn(c){const{scene:e}=c;let t;const i=36.5;return t=new Ge("TargetCamera1",new p(0,i,0),e),t.fov=.25,t.minZ=5,t.maxZ=i+1,t.setTarget(p.Zero()),t}class he extends ze{constructor(e,t){super(e,t),this.diffuse=new re(1,1,1),this.specular=new re(1,1,1),this.falloffType=he.FALLOFF_DEFAULT,this.intensity=1,this._range=Number.MAX_VALUE,this._inverseSquaredRange=0,this._photometricScale=1,this._intensityMode=he.INTENSITYMODE_AUTOMATIC,this._radius=1e-5,this.renderPriority=0,this._shadowEnabled=!0,this._excludeWithLayerMask=0,this._includeOnlyWithLayerMask=0,this._lightmapMode=0,this._shadowGenerators=null,this._excludedMeshesIds=new Array,this._includedOnlyMeshesIds=new Array,this._isLight=!0,this.getScene().addLight(this),this._uniformBuffer=new V(this.getScene().getEngine(),void 0,void 0,e),this._buildUniformLayout(),this.includedOnlyMeshes=new Array,this.excludedMeshes=new Array,this._resyncMeshes()}get range(){return this._range}set range(e){this._range=e,this._inverseSquaredRange=1/(this.range*this.range)}get intensityMode(){return this._intensityMode}set intensityMode(e){this._intensityMode=e,this._computePhotometricScale()}get radius(){return this._radius}set radius(e){this._radius=e,this._computePhotometricScale()}get shadowEnabled(){return this._shadowEnabled}set shadowEnabled(e){this._shadowEnabled!==e&&(this._shadowEnabled=e,this._markMeshesAsLightDirty())}get includedOnlyMeshes(){return this._includedOnlyMeshes}set includedOnlyMeshes(e){this._includedOnlyMeshes=e,this._hookArrayForIncludedOnly(e)}get excludedMeshes(){return this._excludedMeshes}set excludedMeshes(e){this._excludedMeshes=e,this._hookArrayForExcluded(e)}get excludeWithLayerMask(){return this._excludeWithLayerMask}set excludeWithLayerMask(e){this._excludeWithLayerMask=e,this._resyncMeshes()}get includeOnlyWithLayerMask(){return this._includeOnlyWithLayerMask}set includeOnlyWithLayerMask(e){this._includeOnlyWithLayerMask=e,this._resyncMeshes()}get lightmapMode(){return this._lightmapMode}set lightmapMode(e){this._lightmapMode!==e&&(this._lightmapMode=e,this._markMeshesAsLightDirty())}transferTexturesToEffect(e,t){return this}_bindLight(e,t,i,s,r=!0){var n;const a=e.toString();let o=!1;if(this._uniformBuffer.bindToEffect(i,"Light"+a),this._renderId!==t.getRenderId()||this._lastUseSpecular!==s||!this._uniformBuffer.useUbo){this._renderId=t.getRenderId(),this._lastUseSpecular=s;const h=this.getScaledIntensity();this.transferToEffect(i,a),this.diffuse.scaleToRef(h,Ei.Color3[0]),this._uniformBuffer.updateColor4("vLightDiffuse",Ei.Color3[0],this.range,a),s&&(this.specular.scaleToRef(h,Ei.Color3[1]),this._uniformBuffer.updateColor4("vLightSpecular",Ei.Color3[1],this.radius,a)),o=!0}if(this.transferTexturesToEffect(i,a),t.shadowsEnabled&&this.shadowEnabled&&r){const h=(n=this.getShadowGenerator(t.activeCamera))!==null&&n!==void 0?n:this.getShadowGenerator();h&&(h.bindShadowLight(a,i),o=!0)}o?this._uniformBuffer.update():this._uniformBuffer.bindUniformBuffer()}getClassName(){return"Light"}toString(e){let t="Name: "+this.name;if(t+=", type: "+["Point","Directional","Spot","Hemispheric"][this.getTypeID()],this.animations)for(let i=0;i<this.animations.length;i++)t+=", animation[0]: "+this.animations[i].toString(e);return t}_syncParentEnabledState(){super._syncParentEnabledState(),this.isDisposed()||this._resyncMeshes()}setEnabled(e){super.setEnabled(e),this._resyncMeshes()}getShadowGenerator(e=null){var t;return this._shadowGenerators===null?null:(t=this._shadowGenerators.get(e))!==null&&t!==void 0?t:null}getShadowGenerators(){return this._shadowGenerators}getAbsolutePosition(){return p.Zero()}canAffectMesh(e){return e?!(this.includedOnlyMeshes&&this.includedOnlyMeshes.length>0&&this.includedOnlyMeshes.indexOf(e)===-1||this.excludedMeshes&&this.excludedMeshes.length>0&&this.excludedMeshes.indexOf(e)!==-1||this.includeOnlyWithLayerMask!==0&&!(this.includeOnlyWithLayerMask&e.layerMask)||this.excludeWithLayerMask!==0&&this.excludeWithLayerMask&e.layerMask):!0}dispose(e,t=!1){if(this._shadowGenerators){const i=this._shadowGenerators.values();for(let s=i.next();s.done!==!0;s=i.next())s.value.dispose();this._shadowGenerators=null}if(this.getScene().stopAnimation(this),this._parentContainer){const i=this._parentContainer.lights.indexOf(this);i>-1&&this._parentContainer.lights.splice(i,1),this._parentContainer=null}for(const i of this.getScene().meshes)i._removeLightSource(this,!0);this._uniformBuffer.dispose(),this.getScene().removeLight(this),super.dispose(e,t)}getTypeID(){return 0}getScaledIntensity(){return this._photometricScale*this.intensity}clone(e,t=null){const i=he.GetConstructorFromName(this.getTypeID(),e,this.getScene());if(!i)return null;const s=ae.Clone(i,this);return e&&(s.name=e),t&&(s.parent=t),s.setEnabled(this.isEnabled()),this.onClonedObservable.notifyObservers(s),s}serialize(){const e=ae.Serialize(this);return e.uniqueId=this.uniqueId,e.type=this.getTypeID(),this.parent&&this.parent._serializeAsParent(e),this.excludedMeshes.length>0&&(e.excludedMeshesIds=[],this.excludedMeshes.forEach(t=>{e.excludedMeshesIds.push(t.id)})),this.includedOnlyMeshes.length>0&&(e.includedOnlyMeshesIds=[],this.includedOnlyMeshes.forEach(t=>{e.includedOnlyMeshesIds.push(t.id)})),ae.AppendSerializedAnimations(this,e),e.ranges=this.serializeAnimationRanges(),e.isEnabled=this.isEnabled(),e}static GetConstructorFromName(e,t,i){const s=ze.Construct("Light_Type_"+e,t,i);return s||null}static Parse(e,t){const i=he.GetConstructorFromName(e.type,e.name,t);if(!i)return null;const s=ae.Parse(i,e,t);if(e.excludedMeshesIds&&(s._excludedMeshesIds=e.excludedMeshesIds),e.includedOnlyMeshesIds&&(s._includedOnlyMeshesIds=e.includedOnlyMeshesIds),e.parentId!==void 0&&(s._waitingParentId=e.parentId),e.parentInstanceIndex!==void 0&&(s._waitingParentInstanceIndex=e.parentInstanceIndex),e.falloffType!==void 0&&(s.falloffType=e.falloffType),e.lightmapMode!==void 0&&(s.lightmapMode=e.lightmapMode),e.animations){for(let r=0;r<e.animations.length;r++){const n=e.animations[r],a=ri("BABYLON.Animation");a&&s.animations.push(a.Parse(n))}ze.ParseAnimationRanges(s,e,t)}return e.autoAnimate&&t.beginAnimation(s,e.autoAnimateFrom,e.autoAnimateTo,e.autoAnimateLoop,e.autoAnimateSpeed||1),e.isEnabled!==void 0&&s.setEnabled(e.isEnabled),s}_hookArrayForExcluded(e){const t=e.push;e.push=(...s)=>{const r=t.apply(e,s);for(const n of s)n._resyncLightSource(this);return r};const i=e.splice;e.splice=(s,r)=>{const n=i.apply(e,[s,r]);for(const a of n)a._resyncLightSource(this);return n};for(const s of e)s._resyncLightSource(this)}_hookArrayForIncludedOnly(e){const t=e.push;e.push=(...s)=>{const r=t.apply(e,s);return this._resyncMeshes(),r};const i=e.splice;e.splice=(s,r)=>{const n=i.apply(e,[s,r]);return this._resyncMeshes(),n},this._resyncMeshes()}_resyncMeshes(){for(const e of this.getScene().meshes)e._resyncLightSource(this)}_markMeshesAsLightDirty(){for(const e of this.getScene().meshes)e.lightSources.indexOf(this)!==-1&&e._markSubMeshesAsLightDirty()}_computePhotometricScale(){this._photometricScale=this._getPhotometricScale(),this.getScene().resetCachedMaterial()}_getPhotometricScale(){let e=0;const t=this.getTypeID();let i=this.intensityMode;switch(i===he.INTENSITYMODE_AUTOMATIC&&(t===he.LIGHTTYPEID_DIRECTIONALLIGHT?i=he.INTENSITYMODE_ILLUMINANCE:i=he.INTENSITYMODE_LUMINOUSINTENSITY),t){case he.LIGHTTYPEID_POINTLIGHT:case he.LIGHTTYPEID_SPOTLIGHT:switch(i){case he.INTENSITYMODE_LUMINOUSPOWER:e=1/(4*Math.PI);break;case he.INTENSITYMODE_LUMINOUSINTENSITY:e=1;break;case he.INTENSITYMODE_LUMINANCE:e=this.radius*this.radius;break}break;case he.LIGHTTYPEID_DIRECTIONALLIGHT:switch(i){case he.INTENSITYMODE_ILLUMINANCE:e=1;break;case he.INTENSITYMODE_LUMINANCE:{let s=this.radius;s=Math.max(s,.001),e=2*Math.PI*(1-Math.cos(s));break}}break;case he.LIGHTTYPEID_HEMISPHERICLIGHT:e=1;break}return e}_reorderLightsInScene(){const e=this.getScene();this._renderPriority!=0&&(e.requireLightSorting=!0),this.getScene().sortLightsByPriority()}}he.FALLOFF_DEFAULT=Ee.FALLOFF_DEFAULT,he.FALLOFF_PHYSICAL=Ee.FALLOFF_PHYSICAL,he.FALLOFF_GLTF=Ee.FALLOFF_GLTF,he.FALLOFF_STANDARD=Ee.FALLOFF_STANDARD,he.LIGHTMAP_DEFAULT=Ee.LIGHTMAP_DEFAULT,he.LIGHTMAP_SPECULAR=Ee.LIGHTMAP_SPECULAR,he.LIGHTMAP_SHADOWSONLY=Ee.LIGHTMAP_SHADOWSONLY,he.INTENSITYMODE_AUTOMATIC=Ee.INTENSITYMODE_AUTOMATIC,he.INTENSITYMODE_LUMINOUSPOWER=Ee.INTENSITYMODE_LUMINOUSPOWER,he.INTENSITYMODE_LUMINOUSINTENSITY=Ee.INTENSITYMODE_LUMINOUSINTENSITY,he.INTENSITYMODE_ILLUMINANCE=Ee.INTENSITYMODE_ILLUMINANCE,he.INTENSITYMODE_LUMINANCE=Ee.INTENSITYMODE_LUMINANCE,he.LIGHTTYPEID_POINTLIGHT=Ee.LIGHTTYPEID_POINTLIGHT,he.LIGHTTYPEID_DIRECTIONALLIGHT=Ee.LIGHTTYPEID_DIRECTIONALLIGHT,he.LIGHTTYPEID_SPOTLIGHT=Ee.LIGHTTYPEID_SPOTLIGHT,he.LIGHTTYPEID_HEMISPHERICLIGHT=Ee.LIGHTTYPEID_HEMISPHERICLIGHT,T([ci()],he.prototype,"diffuse",void 0),T([ci()],he.prototype,"specular",void 0),T([R()],he.prototype,"falloffType",void 0),T([R()],he.prototype,"intensity",void 0),T([R()],he.prototype,"range",null),T([R()],he.prototype,"intensityMode",null),T([R()],he.prototype,"radius",null),T([R()],he.prototype,"_renderPriority",void 0),T([be("_reorderLightsInScene")],he.prototype,"renderPriority",void 0),T([R("shadowEnabled")],he.prototype,"_shadowEnabled",void 0),T([R("excludeWithLayerMask")],he.prototype,"_excludeWithLayerMask",void 0),T([R("includeOnlyWithLayerMask")],he.prototype,"_includeOnlyWithLayerMask",void 0),T([R("lightmapMode")],he.prototype,"_lightmapMode",void 0);class Ui extends he{constructor(){super(...arguments),this._needProjectionMatrixCompute=!0}_setPosition(e){this._position=e}get position(){return this._position}set position(e){this._setPosition(e)}_setDirection(e){this._direction=e}get direction(){return this._direction}set direction(e){this._setDirection(e)}get shadowMinZ(){return this._shadowMinZ}set shadowMinZ(e){this._shadowMinZ=e,this.forceProjectionMatrixCompute()}get shadowMaxZ(){return this._shadowMaxZ}set shadowMaxZ(e){this._shadowMaxZ=e,this.forceProjectionMatrixCompute()}computeTransformedInformation(){return this.parent&&this.parent.getWorldMatrix?(this.transformedPosition||(this.transformedPosition=p.Zero()),p.TransformCoordinatesToRef(this.position,this.parent.getWorldMatrix(),this.transformedPosition),this.direction&&(this.transformedDirection||(this.transformedDirection=p.Zero()),p.TransformNormalToRef(this.direction,this.parent.getWorldMatrix(),this.transformedDirection)),!0):!1}getDepthScale(){return 50}getShadowDirection(e){return this.transformedDirection?this.transformedDirection:this.direction}getAbsolutePosition(){return this.transformedPosition?this.transformedPosition:this.position}setDirectionToTarget(e){return this.direction=p.Normalize(e.subtract(this.position)),this.direction}getRotation(){this.direction.normalize();const e=p.Cross(this.direction,_i.Y),t=p.Cross(e,this.direction);return p.RotationFromAxis(e,t,this.direction)}needCube(){return!1}needProjectionMatrixCompute(){return this._needProjectionMatrixCompute}forceProjectionMatrixCompute(){this._needProjectionMatrixCompute=!0}_initCache(){super._initCache(),this._cache.position=p.Zero()}_isSynchronized(){return!!this._cache.position.equals(this.position)}computeWorldMatrix(e){return!e&&this.isSynchronized()?(this._currentRenderId=this.getScene().getRenderId(),this._worldMatrix):(this._updateCache(),this._cache.position.copyFrom(this.position),this._worldMatrix||(this._worldMatrix=x.Identity()),x.TranslationToRef(this.position.x,this.position.y,this.position.z,this._worldMatrix),this.parent&&this.parent.getWorldMatrix&&(this._worldMatrix.multiplyToRef(this.parent.getWorldMatrix(),this._worldMatrix),this._markSyncedWithParent()),this._worldMatrixDeterminantIsDirty=!0,this._worldMatrix)}getDepthMinZ(e){return this.shadowMinZ!==void 0?this.shadowMinZ:e.minZ}getDepthMaxZ(e){return this.shadowMaxZ!==void 0?this.shadowMaxZ:e.maxZ}setShadowProjectionMatrix(e,t,i){return this.customProjectionMatrixBuilder?this.customProjectionMatrixBuilder(t,i,e):this._setDefaultShadowProjectionMatrix(e,t,i),this}_syncParentEnabledState(){super._syncParentEnabledState(),(!this.parent||!this.parent.getWorldMatrix)&&(this.transformedPosition=null,this.transformedDirection=null)}}T([Bt()],Ui.prototype,"position",null),T([Bt()],Ui.prototype,"direction",null),T([R()],Ui.prototype,"shadowMinZ",null),T([R()],Ui.prototype,"shadowMaxZ",null),ze.AddNodeConstructor("Light_Type_1",(c,e)=>()=>new It(c,p.Zero(),e));class It extends Ui{constructor(e,t,i){super(e,i),this._shadowFrustumSize=0,this._shadowOrthoScale=.1,this.autoUpdateExtends=!0,this.autoCalcShadowZBounds=!1,this._orthoLeft=Number.MAX_VALUE,this._orthoRight=Number.MIN_VALUE,this._orthoTop=Number.MIN_VALUE,this._orthoBottom=Number.MAX_VALUE,this.position=t.scale(-1),this.direction=t}get shadowFrustumSize(){return this._shadowFrustumSize}set shadowFrustumSize(e){this._shadowFrustumSize=e,this.forceProjectionMatrixCompute()}get shadowOrthoScale(){return this._shadowOrthoScale}set shadowOrthoScale(e){this._shadowOrthoScale=e,this.forceProjectionMatrixCompute()}get orthoLeft(){return this._orthoLeft}set orthoLeft(e){this._orthoLeft=e}get orthoRight(){return this._orthoRight}set orthoRight(e){this._orthoRight=e}get orthoTop(){return this._orthoTop}set orthoTop(e){this._orthoTop=e}get orthoBottom(){return this._orthoBottom}set orthoBottom(e){this._orthoBottom=e}getClassName(){return"DirectionalLight"}getTypeID(){return he.LIGHTTYPEID_DIRECTIONALLIGHT}_setDefaultShadowProjectionMatrix(e,t,i){this.shadowFrustumSize>0?this._setDefaultFixedFrustumShadowProjectionMatrix(e):this._setDefaultAutoExtendShadowProjectionMatrix(e,t,i)}_setDefaultFixedFrustumShadowProjectionMatrix(e){const t=this.getScene().activeCamera;t&&x.OrthoLHToRef(this.shadowFrustumSize,this.shadowFrustumSize,this.shadowMinZ!==void 0?this.shadowMinZ:t.minZ,this.shadowMaxZ!==void 0?this.shadowMaxZ:t.maxZ,e,this.getScene().getEngine().isNDCHalfZRange)}_setDefaultAutoExtendShadowProjectionMatrix(e,t,i){const s=this.getScene().activeCamera;if(!s)return;if(this.autoUpdateExtends||this._orthoLeft===Number.MAX_VALUE){const l=p.Zero();this._orthoLeft=Number.MAX_VALUE,this._orthoRight=Number.MIN_VALUE,this._orthoTop=Number.MIN_VALUE,this._orthoBottom=Number.MAX_VALUE;let u=Number.MAX_VALUE,d=Number.MIN_VALUE;for(let f=0;f<i.length;f++){const _=i[f];if(!_)continue;const m=_.getBoundingInfo().boundingBox;for(let v=0;v<m.vectorsWorld.length;v++)p.TransformCoordinatesToRef(m.vectorsWorld[v],t,l),l.x<this._orthoLeft&&(this._orthoLeft=l.x),l.y<this._orthoBottom&&(this._orthoBottom=l.y),l.x>this._orthoRight&&(this._orthoRight=l.x),l.y>this._orthoTop&&(this._orthoTop=l.y),this.autoCalcShadowZBounds&&(l.z<u&&(u=l.z),l.z>d&&(d=l.z))}this.autoCalcShadowZBounds&&(this._shadowMinZ=u,this._shadowMaxZ=d)}const r=this._orthoRight-this._orthoLeft,n=this._orthoTop-this._orthoBottom,a=this.shadowMinZ!==void 0?this.shadowMinZ:s.minZ,o=this.shadowMaxZ!==void 0?this.shadowMaxZ:s.maxZ,h=this.getScene().getEngine().useReverseDepthBuffer;x.OrthoOffCenterLHToRef(this._orthoLeft-r*this.shadowOrthoScale,this._orthoRight+r*this.shadowOrthoScale,this._orthoBottom-n*this.shadowOrthoScale,this._orthoTop+n*this.shadowOrthoScale,h?o:a,h?a:o,e,this.getScene().getEngine().isNDCHalfZRange)}_buildUniformLayout(){this._uniformBuffer.addUniform("vLightData",4),this._uniformBuffer.addUniform("vLightDiffuse",4),this._uniformBuffer.addUniform("vLightSpecular",4),this._uniformBuffer.addUniform("shadowsInfo",3),this._uniformBuffer.addUniform("depthValues",2),this._uniformBuffer.create()}transferToEffect(e,t){return this.computeTransformedInformation()?(this._uniformBuffer.updateFloat4("vLightData",this.transformedDirection.x,this.transformedDirection.y,this.transformedDirection.z,1,t),this):(this._uniformBuffer.updateFloat4("vLightData",this.direction.x,this.direction.y,this.direction.z,1,t),this)}transferToNodeMaterialEffect(e,t){return this.computeTransformedInformation()?(e.setFloat3(t,this.transformedDirection.x,this.transformedDirection.y,this.transformedDirection.z),this):(e.setFloat3(t,this.direction.x,this.direction.y,this.direction.z),this)}getDepthMinZ(e){const t=this._scene.getEngine();return!t.useReverseDepthBuffer&&t.isNDCHalfZRange?0:1}getDepthMaxZ(e){const t=this._scene.getEngine();return t.useReverseDepthBuffer&&t.isNDCHalfZRange?0:1}prepareLightSpecificDefines(e,t){e["DIRLIGHT"+t]=!0}}T([R()],It.prototype,"shadowFrustumSize",null),T([R()],It.prototype,"shadowOrthoScale",null),T([R()],It.prototype,"autoUpdateExtends",void 0),T([R()],It.prototype,"autoCalcShadowZBounds",void 0),T([R("orthoLeft")],It.prototype,"_orthoLeft",void 0),T([R("orthoRight")],It.prototype,"_orthoRight",void 0),T([R("orthoTop")],It.prototype,"_orthoTop",void 0),T([R("orthoBottom")],It.prototype,"_orthoBottom",void 0),ze.AddNodeConstructor("Light_Type_3",(c,e)=>()=>new ns(c,p.Zero(),e));class ns extends he{constructor(e,t,i){super(e,i),this.groundColor=new re(0,0,0),this.direction=t||p.Up()}_buildUniformLayout(){this._uniformBuffer.addUniform("vLightData",4),this._uniformBuffer.addUniform("vLightDiffuse",4),this._uniformBuffer.addUniform("vLightSpecular",4),this._uniformBuffer.addUniform("vLightGround",3),this._uniformBuffer.addUniform("shadowsInfo",3),this._uniformBuffer.addUniform("depthValues",2),this._uniformBuffer.create()}getClassName(){return"HemisphericLight"}setDirectionToTarget(e){return this.direction=p.Normalize(e.subtract(p.Zero())),this.direction}getShadowGenerator(){return null}transferToEffect(e,t){const i=p.Normalize(this.direction);return this._uniformBuffer.updateFloat4("vLightData",i.x,i.y,i.z,0,t),this._uniformBuffer.updateColor3("vLightGround",this.groundColor.scale(this.intensity),t),this}transferToNodeMaterialEffect(e,t){const i=p.Normalize(this.direction);return e.setFloat3(t,i.x,i.y,i.z),this}computeWorldMatrix(){return this._worldMatrix||(this._worldMatrix=x.Identity()),this._worldMatrix}getTypeID(){return he.LIGHTTYPEID_HEMISPHERICLIGHT}prepareLightSpecificDefines(e,t){e["HEMILIGHT"+t]=!0}}T([ci()],ns.prototype,"groundColor",void 0),T([Bt()],ns.prototype,"direction",void 0);class Gt{constructor(e,t){this.width=e,this.height=t}toString(){return`{W: ${this.width}, H: ${this.height}}`}getClassName(){return"Size"}getHashCode(){let e=this.width|0;return e=e*397^(this.height|0),e}copyFrom(e){this.width=e.width,this.height=e.height}copyFromFloats(e,t){return this.width=e,this.height=t,this}set(e,t){return this.copyFromFloats(e,t)}multiplyByFloats(e,t){return new Gt(this.width*e,this.height*t)}clone(){return new Gt(this.width,this.height)}equals(e){return e?this.width===e.width&&this.height===e.height:!1}get surface(){return this.width*this.height}static Zero(){return new Gt(0,0)}add(e){return new Gt(this.width+e.width,this.height+e.height)}subtract(e){return new Gt(this.width-e.width,this.height-e.height)}static Lerp(e,t,i){const s=e.width+(t.width-e.width)*i,r=e.height+(t.height-e.height)*i;return new Gt(s,r)}}class Zn{constructor(e){this._wrapU=1,this._wrapV=1,this.wrapR=1,this.anisotropicFilteringLevel=4,this.delayLoadState=0,this._texture=null,this._engine=null,this._cachedSize=Gt.Zero(),this._cachedBaseSize=Gt.Zero(),this._initialSamplingMode=2,this._texture=e,this._texture&&(this._engine=this._texture.getEngine())}get wrapU(){return this._wrapU}set wrapU(e){this._wrapU=e}get wrapV(){return this._wrapV}set wrapV(e){this._wrapV=e}get coordinatesMode(){return 0}get isCube(){return this._texture?this._texture.isCube:!1}set isCube(e){this._texture&&(this._texture.isCube=e)}get is3D(){return this._texture?this._texture.is3D:!1}set is3D(e){this._texture&&(this._texture.is3D=e)}get is2DArray(){return this._texture?this._texture.is2DArray:!1}set is2DArray(e){this._texture&&(this._texture.is2DArray=e)}getClassName(){return"ThinTexture"}isReady(){return this.delayLoadState===4?(this.delayLoad(),!1):this._texture?this._texture.isReady:!1}delayLoad(){}getInternalTexture(){return this._texture}getSize(){if(this._texture){if(this._texture.width)return this._cachedSize.width=this._texture.width,this._cachedSize.height=this._texture.height,this._cachedSize;if(this._texture._size)return this._cachedSize.width=this._texture._size,this._cachedSize.height=this._texture._size,this._cachedSize}return this._cachedSize}getBaseSize(){return!this.isReady()||!this._texture?(this._cachedBaseSize.width=0,this._cachedBaseSize.height=0,this._cachedBaseSize):this._texture._size?(this._cachedBaseSize.width=this._texture._size,this._cachedBaseSize.height=this._texture._size,this._cachedBaseSize):(this._cachedBaseSize.width=this._texture.baseWidth,this._cachedBaseSize.height=this._texture.baseHeight,this._cachedBaseSize)}get samplingMode(){return this._texture?this._texture.samplingMode:this._initialSamplingMode}updateSamplingMode(e){this._texture&&this._engine&&this._engine.updateTextureSamplingMode(e,this._texture)}releaseInternalTexture(){this._texture&&(this._texture.dispose(),this._texture=null)}dispose(){this._texture&&(this.releaseInternalTexture(),this._engine=null)}}class Re extends Zn{constructor(e,t=null){super(null),this.metadata=null,this.reservedDataStore=null,this._hasAlpha=!1,this._getAlphaFromRGB=!1,this.level=1,this._coordinatesIndex=0,this.optimizeUVAllocation=!0,this._coordinatesMode=0,this.wrapR=1,this.anisotropicFilteringLevel=Re.DEFAULT_ANISOTROPIC_FILTERING_LEVEL,this._isCube=!1,this._gammaSpace=!0,this.invertZ=!1,this.lodLevelInAlpha=!1,this.isRenderTarget=!1,this._prefiltered=!1,this._forceSerialize=!1,this.animations=new Array,this.onDisposeObservable=new F,this._onDisposeObserver=null,this._scene=null,this._uid=null,this._parentContainer=null,this._loadingError=!1,e?Re._IsScene(e)?this._scene=e:this._engine=e:this._scene=fe.LastCreatedScene,this._scene&&(this.uniqueId=this._scene.getUniqueId(),this._scene.addTexture(this),this._engine=this._scene.getEngine()),this._texture=t,this._uid=null}set hasAlpha(e){this._hasAlpha!==e&&(this._hasAlpha=e,this._scene&&this._scene.markAllMaterialsAsDirty(1,t=>t.hasTexture(this)))}get hasAlpha(){return this._hasAlpha}set getAlphaFromRGB(e){this._getAlphaFromRGB!==e&&(this._getAlphaFromRGB=e,this._scene&&this._scene.markAllMaterialsAsDirty(1,t=>t.hasTexture(this)))}get getAlphaFromRGB(){return this._getAlphaFromRGB}set coordinatesIndex(e){this._coordinatesIndex!==e&&(this._coordinatesIndex=e,this._scene&&this._scene.markAllMaterialsAsDirty(1,t=>t.hasTexture(this)))}get coordinatesIndex(){return this._coordinatesIndex}set coordinatesMode(e){this._coordinatesMode!==e&&(this._coordinatesMode=e,this._scene&&this._scene.markAllMaterialsAsDirty(1,t=>t.hasTexture(this)))}get coordinatesMode(){return this._coordinatesMode}get wrapU(){return this._wrapU}set wrapU(e){this._wrapU=e}get wrapV(){return this._wrapV}set wrapV(e){this._wrapV=e}get isCube(){return this._texture?this._texture.isCube:this._isCube}set isCube(e){this._texture?this._texture.isCube=e:this._isCube=e}get is3D(){return this._texture?this._texture.is3D:!1}set is3D(e){this._texture&&(this._texture.is3D=e)}get is2DArray(){return this._texture?this._texture.is2DArray:!1}set is2DArray(e){this._texture&&(this._texture.is2DArray=e)}get gammaSpace(){if(this._texture)this._texture._gammaSpace===null&&(this._texture._gammaSpace=this._gammaSpace);else return this._gammaSpace;return this._texture._gammaSpace&&!this._texture._useSRGBBuffer}set gammaSpace(e){if(this._texture){if(this._texture._gammaSpace===e)return;this._texture._gammaSpace=e}else{if(this._gammaSpace===e)return;this._gammaSpace=e}this._markAllSubMeshesAsTexturesDirty()}get isRGBD(){return this._texture!=null&&this._texture._isRGBD}set isRGBD(e){this._texture&&(this._texture._isRGBD=e)}get noMipmap(){return!1}get lodGenerationOffset(){return this._texture?this._texture._lodGenerationOffset:0}set lodGenerationOffset(e){this._texture&&(this._texture._lodGenerationOffset=e)}get lodGenerationScale(){return this._texture?this._texture._lodGenerationScale:0}set lodGenerationScale(e){this._texture&&(this._texture._lodGenerationScale=e)}get linearSpecularLOD(){return this._texture?this._texture._linearSpecularLOD:!1}set linearSpecularLOD(e){this._texture&&(this._texture._linearSpecularLOD=e)}get irradianceTexture(){return this._texture?this._texture._irradianceTexture:null}set irradianceTexture(e){this._texture&&(this._texture._irradianceTexture=e)}get uid(){return this._uid||(this._uid=lr()),this._uid}toString(){return this.name}getClassName(){return"BaseTexture"}set onDispose(e){this._onDisposeObserver&&this.onDisposeObservable.remove(this._onDisposeObserver),this._onDisposeObserver=this.onDisposeObservable.add(e)}get isBlocking(){return!0}get loadingError(){return this._loadingError}get errorObject(){return this._errorObject}getScene(){return this._scene}_getEngine(){return this._engine}checkTransformsAreIdentical(e){return e!==null}getTextureMatrix(){return x.IdentityReadOnly}getReflectionTextureMatrix(){return x.IdentityReadOnly}isReadyOrNotBlocking(){return!this.isBlocking||this.isReady()||this.loadingError}scale(e){}get canRescale(){return!1}_getFromCache(e,t,i,s,r,n){const a=this._getEngine();if(!a)return null;const o=a._getUseSRGBBuffer(!!r,t),h=a.getLoadedTexturesCache();for(let l=0;l<h.length;l++){const u=h[l];if((r===void 0||o===u._useSRGBBuffer)&&(s===void 0||s===u.invertY)&&u.url===e&&u.generateMipMaps===!t&&(!i||i===u.samplingMode)&&(n===void 0||n===u.isCube))return u.incrementReferences(),u}return null}_rebuild(){}clone(){return null}get textureType(){return this._texture&&this._texture.type!==void 0?this._texture.type:0}get textureFormat(){return this._texture&&this._texture.format!==void 0?this._texture.format:5}_markAllSubMeshesAsTexturesDirty(){const e=this.getScene();e&&e.markAllMaterialsAsDirty(1)}readPixels(e=0,t=0,i=null,s=!0,r=!1,n=0,a=0,o=Number.MAX_VALUE,h=Number.MAX_VALUE){if(!this._texture)return null;const l=this._getEngine();if(!l)return null;const u=this.getSize();let d=u.width,f=u.height;t!==0&&(d=d/Math.pow(2,t),f=f/Math.pow(2,t),d=Math.round(d),f=Math.round(f)),o=Math.min(d,o),h=Math.min(f,h);try{return this._texture.isCube?l._readTexturePixels(this._texture,o,h,e,t,i,s,r,n,a):l._readTexturePixels(this._texture,o,h,-1,t,i,s,r,n,a)}catch{return null}}_readPixelsSync(e=0,t=0,i=null,s=!0,r=!1){if(!this._texture)return null;const n=this.getSize();let a=n.width,o=n.height;const h=this._getEngine();if(!h)return null;t!=0&&(a=a/Math.pow(2,t),o=o/Math.pow(2,t),a=Math.round(a),o=Math.round(o));try{return this._texture.isCube?h._readTexturePixelsSync(this._texture,a,o,e,t,i,s,r):h._readTexturePixelsSync(this._texture,a,o,-1,t,i,s,r)}catch{return null}}get _lodTextureHigh(){return this._texture?this._texture._lodTextureHigh:null}get _lodTextureMid(){return this._texture?this._texture._lodTextureMid:null}get _lodTextureLow(){return this._texture?this._texture._lodTextureLow:null}dispose(){if(this._scene){this._scene.stopAnimation&&this._scene.stopAnimation(this),this._scene.removePendingData(this);const e=this._scene.textures.indexOf(this);if(e>=0&&this._scene.textures.splice(e,1),this._scene.onTextureRemovedObservable.notifyObservers(this),this._scene=null,this._parentContainer){const t=this._parentContainer.textures.indexOf(this);t>-1&&this._parentContainer.textures.splice(t,1),this._parentContainer=null}}this.onDisposeObservable.notifyObservers(this),this.onDisposeObservable.clear(),this.metadata=null,super.dispose()}serialize(e=!1){if(!this.name&&!e)return null;const t=ae.Serialize(this);return ae.AppendSerializedAnimations(this,t),t}static WhenAllReady(e,t){let i=e.length;if(i===0){t();return}for(let s=0;s<e.length;s++){const r=e[s];if(r.isReady())--i===0&&t();else{const n=r.onLoadObservable;n?n.addOnce(()=>{--i===0&&t()}):--i===0&&t()}}}static _IsScene(e){return e.getClassName()==="Scene"}}Re.DEFAULT_ANISOTROPIC_FILTERING_LEVEL=4,T([R()],Re.prototype,"uniqueId",void 0),T([R()],Re.prototype,"name",void 0),T([R()],Re.prototype,"metadata",void 0),T([R("hasAlpha")],Re.prototype,"_hasAlpha",void 0),T([R("getAlphaFromRGB")],Re.prototype,"_getAlphaFromRGB",void 0),T([R()],Re.prototype,"level",void 0),T([R("coordinatesIndex")],Re.prototype,"_coordinatesIndex",void 0),T([R()],Re.prototype,"optimizeUVAllocation",void 0),T([R("coordinatesMode")],Re.prototype,"_coordinatesMode",void 0),T([R()],Re.prototype,"wrapU",null),T([R()],Re.prototype,"wrapV",null),T([R()],Re.prototype,"wrapR",void 0),T([R()],Re.prototype,"anisotropicFilteringLevel",void 0),T([R()],Re.prototype,"isCube",null),T([R()],Re.prototype,"is3D",null),T([R()],Re.prototype,"is2DArray",null),T([R()],Re.prototype,"gammaSpace",null),T([R()],Re.prototype,"invertZ",void 0),T([R()],Re.prototype,"lodLevelInAlpha",void 0),T([R()],Re.prototype,"lodGenerationOffset",null),T([R()],Re.prototype,"lodGenerationScale",null),T([R()],Re.prototype,"linearSpecularLOD",null),T([mt()],Re.prototype,"irradianceTexture",null),T([R()],Re.prototype,"isRenderTarget",void 0);function Fr(c,e,t=!1){const i=e.width,s=e.height;if(c instanceof Float32Array){let h=c.byteLength/c.BYTES_PER_ELEMENT;const l=new Uint8Array(h);for(;--h>=0;){let u=c[h];u<0?u=0:u>1&&(u=1),l[h]=u*255}c=l}const r=document.createElement("canvas");r.width=i,r.height=s;const n=r.getContext("2d");if(!n)return null;const a=n.createImageData(i,s);if(a.data.set(c),n.putImageData(a,0,0),t){const h=document.createElement("canvas");h.width=i,h.height=s;const l=h.getContext("2d");return l?(l.translate(0,s),l.scale(1,-1),l.drawImage(r,0,0),h.toDataURL("image/png")):null}return r.toDataURL("image/png")}function qn(c,e=0,t=0){const i=c.getInternalTexture();if(!i)return null;const s=c._readPixelsSync(e,t);return s?Fr(s,c.getSize(),i.invertY):null}async function jn(c,e=0,t=0){const i=c.getInternalTexture();if(!i)return null;const s=await c.readPixels(e,t);return s?Fr(s,c.getSize(),i.invertY):null}class N extends Re{constructor(e,t,i,s,r=N.TRILINEAR_SAMPLINGMODE,n=null,a=null,o=null,h=!1,l,u,d,f,_){var E,m,v,S,y,A,C,b,M;super(t),this.url=null,this.uOffset=0,this.vOffset=0,this.uScale=1,this.vScale=1,this.uAng=0,this.vAng=0,this.wAng=0,this.uRotationCenter=.5,this.vRotationCenter=.5,this.wRotationCenter=.5,this.homogeneousRotationInUVTransform=!1,this.inspectableCustomProperties=null,this._noMipmap=!1,this._invertY=!1,this._rowGenerationMatrix=null,this._cachedTextureMatrix=null,this._projectionModeMatrix=null,this._t0=null,this._t1=null,this._t2=null,this._cachedUOffset=-1,this._cachedVOffset=-1,this._cachedUScale=0,this._cachedVScale=0,this._cachedUAng=-1,this._cachedVAng=-1,this._cachedWAng=-1,this._cachedReflectionProjectionMatrixId=-1,this._cachedURotationCenter=-1,this._cachedVRotationCenter=-1,this._cachedWRotationCenter=-1,this._cachedHomogeneousRotationInUVTransform=!1,this._cachedReflectionTextureMatrix=null,this._cachedReflectionUOffset=-1,this._cachedReflectionVOffset=-1,this._cachedReflectionUScale=0,this._cachedReflectionVScale=0,this._cachedReflectionCoordinatesMode=-1,this._buffer=null,this._deleteBuffer=!1,this._format=null,this._delayedOnLoad=null,this._delayedOnError=null,this.onLoadObservable=new F,this._isBlocking=!0,this.name=e||"",this.url=e;let L,k=!1,w=null;typeof i=="object"&&i!==null?(L=(E=i.noMipmap)!==null&&E!==void 0?E:!1,s=(m=i.invertY)!==null&&m!==void 0?m:!ft.UseOpenGLOrientationForUV,r=(v=i.samplingMode)!==null&&v!==void 0?v:N.TRILINEAR_SAMPLINGMODE,n=(S=i.onLoad)!==null&&S!==void 0?S:null,a=(y=i.onError)!==null&&y!==void 0?y:null,o=(A=i.buffer)!==null&&A!==void 0?A:null,h=(C=i.deleteBuffer)!==null&&C!==void 0?C:!1,l=i.format,u=i.mimeType,d=i.loaderOptions,f=i.creationFlags,k=(b=i.useSRGBBuffer)!==null&&b!==void 0?b:!1,w=(M=i.internalTexture)!==null&&M!==void 0?M:null):L=!!i,this._noMipmap=L,this._invertY=s===void 0?!ft.UseOpenGLOrientationForUV:s,this._initialSamplingMode=r,this._buffer=o,this._deleteBuffer=h,this._mimeType=u,this._loaderOptions=d,this._creationFlags=f,this._useSRGBBuffer=k,this._forcedExtension=_,l&&(this._format=l);const de=this.getScene(),ce=this._getEngine();if(!ce)return;ce.onBeforeTextureInitObservable.notifyObservers(this);const se=()=>{this._texture&&(this._texture._invertVScale&&(this.vScale*=-1,this.vOffset+=1),this._texture._cachedWrapU!==null&&(this.wrapU=this._texture._cachedWrapU,this._texture._cachedWrapU=null),this._texture._cachedWrapV!==null&&(this.wrapV=this._texture._cachedWrapV,this._texture._cachedWrapV=null),this._texture._cachedWrapR!==null&&(this.wrapR=this._texture._cachedWrapR,this._texture._cachedWrapR=null)),this.onLoadObservable.hasObservers()&&this.onLoadObservable.notifyObservers(this),n&&n(),!this.isBlocking&&de&&de.resetCachedMaterial()},te=(Fe,we)=>{this._loadingError=!0,this._errorObject={message:Fe,exception:we},a&&a(Fe,we),N.OnTextureLoadErrorObservable.notifyObservers(this)};if(!this.url&&!w){this._delayedOnLoad=se,this._delayedOnError=te;return}if(this._texture=w??this._getFromCache(this.url,L,r,this._invertY,k),this._texture)if(this._texture.isReady)Xi.SetImmediate(()=>se());else{const Fe=this._texture.onLoadedObservable.add(se);this._texture.onErrorObservable.add(we=>{var He;te(we.message,we.exception),(He=this._texture)===null||He===void 0||He.onLoadedObservable.remove(Fe)})}else if(!de||!de.useDelayedTextureLoading){try{this._texture=ce.createTexture(this.url,L,this._invertY,de,r,se,te,this._buffer,void 0,this._format,this._forcedExtension,u,d,f,k)}catch(Fe){throw te("error loading",Fe),Fe}h&&(this._buffer=null)}else this.delayLoadState=4,this._delayedOnLoad=se,this._delayedOnError=te}get noMipmap(){return this._noMipmap}get mimeType(){return this._mimeType}set isBlocking(e){this._isBlocking=e}get isBlocking(){return this._isBlocking}get invertY(){return this._invertY}updateURL(e,t=null,i,s){this.url&&(this.releaseInternalTexture(),this.getScene().markAllMaterialsAsDirty(1)),(!this.name||this.name.startsWith("data:"))&&(this.name=e),this.url=e,this._buffer=t,this._forcedExtension=s,this.delayLoadState=4,i&&(this._delayedOnLoad=i),this.delayLoad()}delayLoad(){if(this.delayLoadState!==4)return;const e=this.getScene();e&&(this.delayLoadState=1,this._texture=this._getFromCache(this.url,this._noMipmap,this.samplingMode,this._invertY,this._useSRGBBuffer),this._texture?this._delayedOnLoad&&(this._texture.isReady?Xi.SetImmediate(this._delayedOnLoad):this._texture.onLoadedObservable.add(this._delayedOnLoad)):(this._texture=e.getEngine().createTexture(this.url,this._noMipmap,this._invertY,e,this.samplingMode,this._delayedOnLoad,this._delayedOnError,this._buffer,null,this._format,this._forcedExtension,this._mimeType,this._loaderOptions,this._creationFlags,this._useSRGBBuffer),this._deleteBuffer&&(this._buffer=null)),this._delayedOnLoad=null,this._delayedOnError=null)}_prepareRowForTextureGeneration(e,t,i,s){e*=this._cachedUScale,t*=this._cachedVScale,e-=this.uRotationCenter*this._cachedUScale,t-=this.vRotationCenter*this._cachedVScale,i-=this.wRotationCenter,p.TransformCoordinatesFromFloatsToRef(e,t,i,this._rowGenerationMatrix,s),s.x+=this.uRotationCenter*this._cachedUScale+this._cachedUOffset,s.y+=this.vRotationCenter*this._cachedVScale+this._cachedVOffset,s.z+=this.wRotationCenter}checkTransformsAreIdentical(e){return e!==null&&this.uOffset===e.uOffset&&this.vOffset===e.vOffset&&this.uScale===e.uScale&&this.vScale===e.vScale&&this.uAng===e.uAng&&this.vAng===e.vAng&&this.wAng===e.wAng}getTextureMatrix(e=1){if(this.uOffset===this._cachedUOffset&&this.vOffset===this._cachedVOffset&&this.uScale*e===this._cachedUScale&&this.vScale===this._cachedVScale&&this.uAng===this._cachedUAng&&this.vAng===this._cachedVAng&&this.wAng===this._cachedWAng&&this.uRotationCenter===this._cachedURotationCenter&&this.vRotationCenter===this._cachedVRotationCenter&&this.wRotationCenter===this._cachedWRotationCenter&&this.homogeneousRotationInUVTransform===this._cachedHomogeneousRotationInUVTransform)return this._cachedTextureMatrix;this._cachedUOffset=this.uOffset,this._cachedVOffset=this.vOffset,this._cachedUScale=this.uScale*e,this._cachedVScale=this.vScale,this._cachedUAng=this.uAng,this._cachedVAng=this.vAng,this._cachedWAng=this.wAng,this._cachedURotationCenter=this.uRotationCenter,this._cachedVRotationCenter=this.vRotationCenter,this._cachedWRotationCenter=this.wRotationCenter,this._cachedHomogeneousRotationInUVTransform=this.homogeneousRotationInUVTransform,(!this._cachedTextureMatrix||!this._rowGenerationMatrix)&&(this._cachedTextureMatrix=x.Zero(),this._rowGenerationMatrix=new x,this._t0=p.Zero(),this._t1=p.Zero(),this._t2=p.Zero()),x.RotationYawPitchRollToRef(this.vAng,this.uAng,this.wAng,this._rowGenerationMatrix),this.homogeneousRotationInUVTransform?(x.TranslationToRef(-this._cachedURotationCenter,-this._cachedVRotationCenter,-this._cachedWRotationCenter,D.Matrix[0]),x.TranslationToRef(this._cachedURotationCenter,this._cachedVRotationCenter,this._cachedWRotationCenter,D.Matrix[1]),x.ScalingToRef(this._cachedUScale,this._cachedVScale,0,D.Matrix[2]),x.TranslationToRef(this._cachedUOffset,this._cachedVOffset,0,D.Matrix[3]),D.Matrix[0].multiplyToRef(this._rowGenerationMatrix,this._cachedTextureMatrix),this._cachedTextureMatrix.multiplyToRef(D.Matrix[1],this._cachedTextureMatrix),this._cachedTextureMatrix.multiplyToRef(D.Matrix[2],this._cachedTextureMatrix),this._cachedTextureMatrix.multiplyToRef(D.Matrix[3],this._cachedTextureMatrix),this._cachedTextureMatrix.setRowFromFloats(2,this._cachedTextureMatrix.m[12],this._cachedTextureMatrix.m[13],this._cachedTextureMatrix.m[14],1)):(this._prepareRowForTextureGeneration(0,0,0,this._t0),this._prepareRowForTextureGeneration(1,0,0,this._t1),this._prepareRowForTextureGeneration(0,1,0,this._t2),this._t1.subtractInPlace(this._t0),this._t2.subtractInPlace(this._t0),x.FromValuesToRef(this._t1.x,this._t1.y,this._t1.z,0,this._t2.x,this._t2.y,this._t2.z,0,this._t0.x,this._t0.y,this._t0.z,0,0,0,0,1,this._cachedTextureMatrix));const t=this.getScene();return t?(this.optimizeUVAllocation&&t.markAllMaterialsAsDirty(1,i=>i.hasTexture(this)),this._cachedTextureMatrix):this._cachedTextureMatrix}getReflectionTextureMatrix(){const e=this.getScene();if(!e)return this._cachedReflectionTextureMatrix;if(this.uOffset===this._cachedReflectionUOffset&&this.vOffset===this._cachedReflectionVOffset&&this.uScale===this._cachedReflectionUScale&&this.vScale===this._cachedReflectionVScale&&this.coordinatesMode===this._cachedReflectionCoordinatesMode)if(this.coordinatesMode===N.PROJECTION_MODE){if(this._cachedReflectionProjectionMatrixId===e.getProjectionMatrix().updateFlag)return this._cachedReflectionTextureMatrix}else return this._cachedReflectionTextureMatrix;this._cachedReflectionTextureMatrix||(this._cachedReflectionTextureMatrix=x.Zero()),this._projectionModeMatrix||(this._projectionModeMatrix=x.Zero());const t=this._cachedReflectionCoordinatesMode!==this.coordinatesMode;switch(this._cachedReflectionUOffset=this.uOffset,this._cachedReflectionVOffset=this.vOffset,this._cachedReflectionUScale=this.uScale,this._cachedReflectionVScale=this.vScale,this._cachedReflectionCoordinatesMode=this.coordinatesMode,this.coordinatesMode){case N.PLANAR_MODE:{x.IdentityToRef(this._cachedReflectionTextureMatrix),this._cachedReflectionTextureMatrix[0]=this.uScale,this._cachedReflectionTextureMatrix[5]=this.vScale,this._cachedReflectionTextureMatrix[12]=this.uOffset,this._cachedReflectionTextureMatrix[13]=this.vOffset;break}case N.PROJECTION_MODE:{x.FromValuesToRef(.5,0,0,0,0,-.5,0,0,0,0,0,0,.5,.5,1,1,this._projectionModeMatrix);const i=e.getProjectionMatrix();this._cachedReflectionProjectionMatrixId=i.updateFlag,i.multiplyToRef(this._projectionModeMatrix,this._cachedReflectionTextureMatrix);break}default:x.IdentityToRef(this._cachedReflectionTextureMatrix);break}return t&&e.markAllMaterialsAsDirty(1,i=>i.getActiveTextures().indexOf(this)!==-1),this._cachedReflectionTextureMatrix}clone(){const e={noMipmap:this._noMipmap,invertY:this._invertY,samplingMode:this.samplingMode,onLoad:void 0,onError:void 0,buffer:this._texture?this._texture._buffer:void 0,deleteBuffer:this._deleteBuffer,format:this.textureFormat,mimeType:this.mimeType,loaderOptions:this._loaderOptions,creationFlags:this._creationFlags,useSRGBBuffer:this._useSRGBBuffer};return ae.Clone(()=>new N(this._texture?this._texture.url:null,this.getScene(),e),this)}serialize(){var e,t;const i=this.name;N.SerializeBuffers||this.name.startsWith("data:")&&(this.name=""),this.name.startsWith("data:")&&this.url===this.name&&(this.url="");const s=super.serialize(N._SerializeInternalTextureUniqueId);return s?((N.SerializeBuffers||N.ForceSerializeBuffers)&&(typeof this._buffer=="string"&&this._buffer.substr(0,5)==="data:"?(s.base64String=this._buffer,s.name=s.name.replace("data:","")):this.url&&this.url.startsWith("data:")&&this._buffer instanceof Uint8Array?s.base64String="data:image/png;base64,"+sr(this._buffer):(N.ForceSerializeBuffers||this.url&&this.url.startsWith("blob:")||this._forceSerialize)&&(s.base64String=!this._engine||this._engine._features.supportSyncTextureRead?qn(this):jn(this))),s.invertY=this._invertY,s.samplingMode=this.samplingMode,s._creationFlags=this._creationFlags,s._useSRGBBuffer=this._useSRGBBuffer,N._SerializeInternalTextureUniqueId&&(s.internalTextureUniqueId=(t=(e=this._texture)===null||e===void 0?void 0:e.uniqueId)!==null&&t!==void 0?t:void 0),this.name=i,s):null}getClassName(){return"Texture"}dispose(){super.dispose(),this.onLoadObservable.clear(),this._delayedOnLoad=null,this._delayedOnError=null,this._buffer=null}static Parse(e,t,i){if(e.customType){const h=Li.Instantiate(e.customType).Parse(e,t,i);return e.samplingMode&&h.updateSamplingMode&&h._samplingMode&&h._samplingMode!==e.samplingMode&&h.updateSamplingMode(e.samplingMode),h}if(e.isCube&&!e.isRenderTarget)return N._CubeTextureParser(e,t,i);const s=e.internalTextureUniqueId!==void 0;if(!e.name&&!e.isRenderTarget&&!s)return null;let r;if(s){const o=t.getEngine().getLoadedTexturesCache();for(const h of o)if(h.uniqueId===e.internalTextureUniqueId){r=h;break}}const n=o=>{var h;if(o&&o._texture&&(o._texture._cachedWrapU=null,o._texture._cachedWrapV=null,o._texture._cachedWrapR=null),e.samplingMode){const l=e.samplingMode;o&&o.samplingMode!==l&&o.updateSamplingMode(l)}if(o&&e.animations)for(let l=0;l<e.animations.length;l++){const u=e.animations[l],d=ri("BABYLON.Animation");d&&o.animations.push(d.Parse(u))}s&&!r&&((h=o==null?void 0:o._texture)===null||h===void 0||h._setUniqueId(e.internalTextureUniqueId))};return ae.Parse(()=>{var o,h,l;let u=!0;if(e.noMipmap&&(u=!1),e.mirrorPlane){const d=N._CreateMirror(e.name,e.renderTargetSize,t,u);return d._waitingRenderList=e.renderList,d.mirrorPlane=xt.FromArray(e.mirrorPlane),n(d),d}else if(e.isRenderTarget){let d=null;if(e.isCube){if(t.reflectionProbes)for(let f=0;f<t.reflectionProbes.length;f++){const _=t.reflectionProbes[f];if(_.name===e.name)return _.cubeTexture}}else d=N._CreateRenderTargetTexture(e.name,e.renderTargetSize,t,u,(o=e._creationFlags)!==null&&o!==void 0?o:0),d._waitingRenderList=e.renderList;return n(d),d}else{let d;if(e.base64String&&!r)d=N.CreateFromBase64String(e.base64String,e.base64String,t,!u,e.invertY,e.samplingMode,()=>{n(d)},(h=e._creationFlags)!==null&&h!==void 0?h:0,(l=e._useSRGBBuffer)!==null&&l!==void 0?l:!1),d.name=e.name;else{let f;e.name&&e.name.indexOf("://")>0?f=e.name:f=i+e.name,e.url&&(e.url.startsWith("data:")||N.UseSerializedUrlIfAny)&&(f=e.url);const _={noMipmap:!u,invertY:e.invertY,samplingMode:e.samplingMode,onLoad:()=>{n(d)},internalTexture:r};d=new N(f,t,_)}return d}},e,t)}static CreateFromBase64String(e,t,i,s,r,n=N.TRILINEAR_SAMPLINGMODE,a=null,o=null,h=5,l){return new N("data:"+t,i,s,r,n,a,o,e,!1,h,void 0,void 0,l)}static LoadFromDataString(e,t,i,s=!1,r,n=!0,a=N.TRILINEAR_SAMPLINGMODE,o=null,h=null,l=5,u){return e.substr(0,5)!=="data:"&&(e="data:"+e),new N(e,i,r,n,a,o,h,t,s,l,void 0,void 0,u)}}N.SerializeBuffers=!0,N.ForceSerializeBuffers=!1,N.OnTextureLoadErrorObservable=new F,N._SerializeInternalTextureUniqueId=!1,N._CubeTextureParser=(c,e,t)=>{throw $("CubeTexture")},N._CreateMirror=(c,e,t,i)=>{throw $("MirrorTexture")},N._CreateRenderTargetTexture=(c,e,t,i,s)=>{throw $("RenderTargetTexture")},N.NEAREST_SAMPLINGMODE=1,N.NEAREST_NEAREST_MIPLINEAR=8,N.BILINEAR_SAMPLINGMODE=2,N.LINEAR_LINEAR_MIPNEAREST=11,N.TRILINEAR_SAMPLINGMODE=3,N.LINEAR_LINEAR_MIPLINEAR=3,N.NEAREST_NEAREST_MIPNEAREST=4,N.NEAREST_LINEAR_MIPNEAREST=5,N.NEAREST_LINEAR_MIPLINEAR=6,N.NEAREST_LINEAR=7,N.NEAREST_NEAREST=1,N.LINEAR_NEAREST_MIPNEAREST=9,N.LINEAR_NEAREST_MIPLINEAR=10,N.LINEAR_LINEAR=2,N.LINEAR_NEAREST=12,N.EXPLICIT_MODE=0,N.SPHERICAL_MODE=1,N.PLANAR_MODE=2,N.CUBIC_MODE=3,N.PROJECTION_MODE=4,N.SKYBOX_MODE=5,N.INVCUBIC_MODE=6,N.EQUIRECTANGULAR_MODE=7,N.FIXED_EQUIRECTANGULAR_MODE=8,N.FIXED_EQUIRECTANGULAR_MIRRORED_MODE=9,N.CLAMP_ADDRESSMODE=0,N.WRAP_ADDRESSMODE=1,N.MIRROR_ADDRESSMODE=2,N.UseSerializedUrlIfAny=!1,T([R()],N.prototype,"url",void 0),T([R()],N.prototype,"uOffset",void 0),T([R()],N.prototype,"vOffset",void 0),T([R()],N.prototype,"uScale",void 0),T([R()],N.prototype,"vScale",void 0),T([R()],N.prototype,"uAng",void 0),T([R()],N.prototype,"vAng",void 0),T([R()],N.prototype,"wAng",void 0),T([R()],N.prototype,"uRotationCenter",void 0),T([R()],N.prototype,"vRotationCenter",void 0),T([R()],N.prototype,"wRotationCenter",void 0),T([R()],N.prototype,"homogeneousRotationInUVTransform",void 0),T([R()],N.prototype,"isBlocking",null),it("BABYLON.Texture",N),ae._TextureParser=N.Parse;class $n{constructor(e,t,i,s){this._textures=null,this._samples=1,this._attachments=null,this._generateStencilBuffer=!1,this._generateDepthBuffer=!1,this._depthStencilTextureWithStencil=!1,this._isMulti=e,this._isCube=t,this._size=i,this._engine=s,this._depthStencilTexture=null}get depthStencilTexture(){return this._depthStencilTexture}get depthStencilTextureWithStencil(){return this._depthStencilTextureWithStencil}get isCube(){return this._isCube}get isMulti(){return this._isMulti}get is2DArray(){return this.layers>0}get size(){return this.width}get width(){return this._size.width||this._size}get height(){return this._size.height||this._size}get layers(){return this._size.layers||0}get texture(){var e,t;return(t=(e=this._textures)===null||e===void 0?void 0:e[0])!==null&&t!==void 0?t:null}get textures(){return this._textures}get samples(){return this._samples}setSamples(e,t=!0,i=!1){if(this.samples===e&&!i)return e;const s=this._isMulti?this._engine.updateMultipleRenderTargetTextureSampleCount(this,e,t):this._engine.updateRenderTargetTextureSampleCount(this,e);return this._samples=e,s}setTextures(e){Array.isArray(e)?this._textures=e:e?this._textures=[e]:this._textures=null}setTexture(e,t=0,i=!0){this._textures||(this._textures=[]),this._textures[t]&&i&&this._textures[t].dispose(),this._textures[t]=e}createDepthStencilTexture(e=0,t=!0,i=!1,s=1,r=14){var n;return(n=this._depthStencilTexture)===null||n===void 0||n.dispose(),this._depthStencilTextureWithStencil=i,this._depthStencilTexture=this._engine.createDepthStencilTexture(this._size,{bilinearFiltering:t,comparisonFunction:e,generateStencil:i,isCube:this._isCube,samples:s,depthTextureFormat:r},this),this._depthStencilTexture}_shareDepth(e){this._depthStencilTexture&&(e._depthStencilTexture&&e._depthStencilTexture.dispose(),e._depthStencilTexture=this._depthStencilTexture,this._depthStencilTexture.incrementReferences())}_swapAndDie(e){this.texture&&this.texture._swapAndDie(e),this._textures=null,this.dispose(!0)}_cloneRenderTargetWrapper(){var e,t,i,s,r,n;let a=null;if(this._isMulti){const o=this.textures;if(o&&o.length>0){let h=!1,l=o.length;const u=o[o.length-1]._source;(u===Ne.Depth||u===Ne.DepthStencil)&&(h=!0,l--);const d=[],f=[];for(let m=0;m<l;++m){const v=o[m];d.push(v.samplingMode),f.push(v.type)}const _={samplingModes:d,generateMipMaps:o[0].generateMipMaps,generateDepthBuffer:this._generateDepthBuffer,generateStencilBuffer:this._generateStencilBuffer,generateDepthTexture:h,types:f,textureCount:l},E={width:this.width,height:this.height};a=this._engine.createMultipleRenderTarget(E,_)}}else{const o={};if(o.generateDepthBuffer=this._generateDepthBuffer,o.generateMipMaps=(t=(e=this.texture)===null||e===void 0?void 0:e.generateMipMaps)!==null&&t!==void 0?t:!1,o.generateStencilBuffer=this._generateStencilBuffer,o.samplingMode=(i=this.texture)===null||i===void 0?void 0:i.samplingMode,o.type=(s=this.texture)===null||s===void 0?void 0:s.type,o.format=(r=this.texture)===null||r===void 0?void 0:r.format,this.isCube)a=this._engine.createRenderTargetCubeTexture(this.width,o);else{const h={width:this.width,height:this.height,layers:this.is2DArray?(n=this.texture)===null||n===void 0?void 0:n.depth:void 0};a=this._engine.createRenderTargetTexture(h,o)}a.texture.isReady=!0}return a}_swapRenderTargetWrapper(e){if(this._textures&&e._textures)for(let t=0;t<this._textures.length;++t)this._textures[t]._swapAndDie(e._textures[t],!1),e._textures[t].isReady=!0;this._depthStencilTexture&&e._depthStencilTexture&&(this._depthStencilTexture._swapAndDie(e._depthStencilTexture),e._depthStencilTexture.isReady=!0),this._textures=null,this._depthStencilTexture=null}_rebuild(){const e=this._cloneRenderTargetWrapper();if(e){if(this._depthStencilTexture){const t=this._depthStencilTexture.samplingMode,i=t===2||t===3||t===11;e.createDepthStencilTexture(this._depthStencilTexture._comparisonFunction,i,this._depthStencilTextureWithStencil,this._depthStencilTexture.samples)}this.samples>1&&e.setSamples(this.samples),e._swapRenderTargetWrapper(this),e.dispose()}}releaseTextures(){var e,t;if(this._textures)for(let i=0;(t=i<((e=this._textures)===null||e===void 0?void 0:e.length))!==null&&t!==void 0&&t;++i)this._textures[i].dispose();this._textures=null}dispose(e=!1){var t;e||((t=this._depthStencilTexture)===null||t===void 0||t.dispose(),this._depthStencilTexture=null,this.releaseTextures()),this._engine._releaseRenderTargetWrapper(this)}}class Qn extends $n{constructor(e,t,i,s,r){super(e,t,i,s),this._framebuffer=null,this._depthStencilBuffer=null,this._MSAAFramebuffer=null,this._colorTextureArray=null,this._depthStencilTextureArray=null,this._context=r}_cloneRenderTargetWrapper(){let e=null;return this._colorTextureArray&&this._depthStencilTextureArray?(e=this._engine.createMultiviewRenderTargetTexture(this.width,this.height),e.texture.isReady=!0):e=super._cloneRenderTargetWrapper(),e}_swapRenderTargetWrapper(e){super._swapRenderTargetWrapper(e),e._framebuffer=this._framebuffer,e._depthStencilBuffer=this._depthStencilBuffer,e._MSAAFramebuffer=this._MSAAFramebuffer,e._colorTextureArray=this._colorTextureArray,e._depthStencilTextureArray=this._depthStencilTextureArray,this._framebuffer=this._depthStencilBuffer=this._MSAAFramebuffer=this._colorTextureArray=this._depthStencilTextureArray=null}_shareDepth(e){super._shareDepth(e);const t=this._context,i=this._depthStencilBuffer,s=e._MSAAFramebuffer||e._framebuffer;e._depthStencilBuffer&&t.deleteRenderbuffer(e._depthStencilBuffer),e._depthStencilBuffer=this._depthStencilBuffer,this._engine._bindUnboundFramebuffer(s),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,i),this._engine._bindUnboundFramebuffer(null)}_bindTextureRenderTarget(e,t=0,i=-1,s=0){if(!e._hardwareTexture)return;const r=this._context,n=this._framebuffer,a=this._engine._currentFramebuffer;this._engine._bindUnboundFramebuffer(n);const o=r[this._engine.webGLVersion>1?"COLOR_ATTACHMENT"+t:"COLOR_ATTACHMENT"+t+"_WEBGL"],h=i!==-1?r.TEXTURE_CUBE_MAP_POSITIVE_X+i:r.TEXTURE_2D;r.framebufferTexture2D(r.FRAMEBUFFER,o,h,e._hardwareTexture.underlyingResource,s),this._engine._bindUnboundFramebuffer(a)}setTexture(e,t=0,i=!0){super.setTexture(e,t,i),this._bindTextureRenderTarget(e,t)}dispose(e=!1){const t=this._context;e||(this._colorTextureArray&&(this._context.deleteTexture(this._colorTextureArray),this._colorTextureArray=null),this._depthStencilTextureArray&&(this._context.deleteTexture(this._depthStencilTextureArray),this._depthStencilTextureArray=null)),this._framebuffer&&(t.deleteFramebuffer(this._framebuffer),this._framebuffer=null),this._depthStencilBuffer&&(t.deleteRenderbuffer(this._depthStencilBuffer),this._depthStencilBuffer=null),this._MSAAFramebuffer&&(t.deleteFramebuffer(this._MSAAFramebuffer),this._MSAAFramebuffer=null),super.dispose(e)}}oe.prototype._createHardwareRenderTargetWrapper=function(c,e,t){const i=new Qn(c,e,t,this,this._gl);return this._renderTargetWrapperCache.push(i),i},oe.prototype.createRenderTargetTexture=function(c,e){var t,i;const s=this._createHardwareRenderTargetWrapper(!1,!1,c);let r=!0,n=!1,a=!1,o,h=1;e!==void 0&&typeof e=="object"&&(r=(t=e.generateDepthBuffer)!==null&&t!==void 0?t:!0,n=!!e.generateStencilBuffer,a=!!e.noColorAttachment,o=e.colorAttachment,h=(i=e.samples)!==null&&i!==void 0?i:1);const l=o||(a?null:this._createInternalTexture(c,e,!0,Ne.RenderTarget)),u=c.width||c,d=c.height||c,f=this._currentFramebuffer,_=this._gl,E=_.createFramebuffer();return this._bindUnboundFramebuffer(E),s._depthStencilBuffer=this._setupFramebufferDepthAttachments(n,r,u,d),l&&!l.is2DArray&&_.framebufferTexture2D(_.FRAMEBUFFER,_.COLOR_ATTACHMENT0,_.TEXTURE_2D,l._hardwareTexture.underlyingResource,0),this._bindUnboundFramebuffer(f),s._framebuffer=E,s._generateDepthBuffer=r,s._generateStencilBuffer=n,s.setTextures(l),this.updateRenderTargetTextureSampleCount(s,h),s},oe.prototype.createDepthStencilTexture=function(c,e,t){if(e.isCube){const i=c.width||c;return this._createDepthStencilCubeTexture(i,e,t)}else return this._createDepthStencilTexture(c,e,t)},oe.prototype._createDepthStencilTexture=function(c,e,t){const i=this._gl,s=c.layers||0,r=s!==0?i.TEXTURE_2D_ARRAY:i.TEXTURE_2D,n=new Ot(this,Ne.DepthStencil);if(!this._caps.depthTextureExtension)return O.Error("Depth texture is not supported by your browser or hardware."),n;const a={bilinearFiltering:!1,comparisonFunction:0,generateStencil:!1,...e};if(this._bindTextureDirectly(r,n,!0),this._setupDepthStencilTexture(n,c,a.generateStencil,a.comparisonFunction===0?!1:a.bilinearFiltering,a.comparisonFunction,a.samples),a.depthTextureFormat!==void 0){if(a.depthTextureFormat!==15&&a.depthTextureFormat!==16&&a.depthTextureFormat!==17&&a.depthTextureFormat!==13&&a.depthTextureFormat!==14&&a.depthTextureFormat!==18)return O.Error("Depth texture format is not supported."),n;n.format=a.depthTextureFormat}else n.format=a.generateStencil?13:16;const o=n.format===17||n.format===13||n.format===18;t._depthStencilTexture=n,t._depthStencilTextureWithStencil=o;let h=i.UNSIGNED_INT;n.format===15?h=i.UNSIGNED_SHORT:n.format===17||n.format===13?h=i.UNSIGNED_INT_24_8:n.format===14?h=i.FLOAT:n.format===18&&(h=i.FLOAT_32_UNSIGNED_INT_24_8_REV);const l=o?i.DEPTH_STENCIL:i.DEPTH_COMPONENT;let u=l;this.webGLVersion>1&&(n.format===15?u=i.DEPTH_COMPONENT16:n.format===16?u=i.DEPTH_COMPONENT24:n.format===17||n.format===13?u=i.DEPTH24_STENCIL8:n.format===14?u=i.DEPTH_COMPONENT32F:n.format===18&&(u=i.DEPTH32F_STENCIL8)),n.is2DArray?i.texImage3D(r,0,u,n.width,n.height,s,0,l,h,null):i.texImage2D(r,0,u,n.width,n.height,0,l,h,null),this._bindTextureDirectly(r,null),this._internalTexturesCache.push(n);const d=t;if(d._depthStencilBuffer){const f=this._currentFramebuffer;this._bindUnboundFramebuffer(d._framebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.RENDERBUFFER,null),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.RENDERBUFFER,null),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.STENCIL_ATTACHMENT,i.RENDERBUFFER,null),this._bindUnboundFramebuffer(f),i.deleteRenderbuffer(d._depthStencilBuffer),d._depthStencilBuffer=null}return n},oe.prototype.updateRenderTargetTextureSampleCount=function(c,e){if(this.webGLVersion<2||!c||!c.texture)return 1;if(c.samples===e)return e;const t=this._gl;e=Math.min(e,this.getCaps().maxMSAASamples),c._depthStencilBuffer&&(t.deleteRenderbuffer(c._depthStencilBuffer),c._depthStencilBuffer=null),c._MSAAFramebuffer&&(t.deleteFramebuffer(c._MSAAFramebuffer),c._MSAAFramebuffer=null);const i=c.texture._hardwareTexture;if(i._MSAARenderBuffer&&(t.deleteRenderbuffer(i._MSAARenderBuffer),i._MSAARenderBuffer=null),e>1&&t.renderbufferStorageMultisample){const s=t.createFramebuffer();if(!s)throw new Error("Unable to create multi sampled framebuffer");c._MSAAFramebuffer=s,this._bindUnboundFramebuffer(c._MSAAFramebuffer);const r=this._createRenderBuffer(c.texture.width,c.texture.height,e,-1,this._getRGBAMultiSampleBufferFormat(c.texture.type),t.COLOR_ATTACHMENT0,!1);if(!r)throw new Error("Unable to create multi sampled framebuffer");i._MSAARenderBuffer=r}else this._bindUnboundFramebuffer(c._framebuffer);return c.texture.samples=e,c._samples=e,c._depthStencilBuffer=this._setupFramebufferDepthAttachments(c._generateStencilBuffer,c._generateDepthBuffer,c.texture.width,c.texture.height,e),this._bindUnboundFramebuffer(null),e},oe.prototype.createRenderTargetCubeTexture=function(c,e){const t=this._createHardwareRenderTargetWrapper(!1,!0,c),i={generateMipMaps:!0,generateDepthBuffer:!0,generateStencilBuffer:!1,type:0,samplingMode:3,format:5,...e};i.generateStencilBuffer=i.generateDepthBuffer&&i.generateStencilBuffer,(i.type===1&&!this._caps.textureFloatLinearFiltering||i.type===2&&!this._caps.textureHalfFloatLinearFiltering)&&(i.samplingMode=1);const s=this._gl,r=new Ot(this,Ne.RenderTarget);this._bindTextureDirectly(s.TEXTURE_CUBE_MAP,r,!0);const n=this._getSamplingParameters(i.samplingMode,i.generateMipMaps);i.type===1&&!this._caps.textureFloat&&(i.type=0,O.Warn("Float textures are not supported. Cube render target forced to TEXTURETYPE_UNESIGNED_BYTE type")),s.texParameteri(s.TEXTURE_CUBE_MAP,s.TEXTURE_MAG_FILTER,n.mag),s.texParameteri(s.TEXTURE_CUBE_MAP,s.TEXTURE_MIN_FILTER,n.min),s.texParameteri(s.TEXTURE_CUBE_MAP,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_CUBE_MAP,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE);for(let o=0;o<6;o++)s.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,this._getRGBABufferInternalSizedFormat(i.type,i.format),c,c,0,this._getInternalFormat(i.format),this._getWebGLTextureType(i.type),null);const a=s.createFramebuffer();return this._bindUnboundFramebuffer(a),t._depthStencilBuffer=this._setupFramebufferDepthAttachments(i.generateStencilBuffer,i.generateDepthBuffer,c,c),i.generateMipMaps&&s.generateMipmap(s.TEXTURE_CUBE_MAP),this._bindTextureDirectly(s.TEXTURE_CUBE_MAP,null),this._bindUnboundFramebuffer(null),t._framebuffer=a,t._generateDepthBuffer=i.generateDepthBuffer,t._generateStencilBuffer=i.generateStencilBuffer,r.width=c,r.height=c,r.isReady=!0,r.isCube=!0,r.samples=1,r.generateMipMaps=i.generateMipMaps,r.samplingMode=i.samplingMode,r.type=i.type,r.format=i.format,this._internalTexturesCache.push(r),t.setTextures(r),t};const Jn="postprocessVertexShader",ea=`attribute vec2 position;
uniform vec2 scale;
varying vec2 vUV;
const vec2 madd=vec2(0.5,0.5);
#define CUSTOM_VERTEX_DEFINITIONS
void main(void) {
#define CUSTOM_VERTEX_MAIN_BEGIN
vUV=(position*madd+madd)*scale;
gl_Position=vec4(position,0.0,1.0);
#define CUSTOM_VERTEX_MAIN_END
}`;U.ShadersStore[Jn]=ea;const Ws={positions:[1,1,-1,1,-1,-1,1,-1],indices:[0,1,2,0,2,3]};class ta{constructor(e,t=Ws){var i,s;this._fullscreenViewport=new Bi(0,0,1,1);const r=(i=t.positions)!==null&&i!==void 0?i:Ws.positions,n=(s=t.indices)!==null&&s!==void 0?s:Ws.indices;this.engine=e,this._vertexBuffers={[g.PositionKind]:new g(e,r,g.PositionKind,!1,!1,2)},this._indexBuffer=e.createIndexBuffer(n),this._onContextRestoredObserver=e.onContextRestoredObservable.add(()=>{this._indexBuffer=e.createIndexBuffer(n);for(const a in this._vertexBuffers)this._vertexBuffers[a]._rebuild()})}setViewport(e=this._fullscreenViewport){this.engine.setViewport(e)}bindBuffers(e){this.engine.bindBuffers(this._vertexBuffers,this._indexBuffer,e)}applyEffectWrapper(e){this.engine.setState(!0),this.engine.depthCullingState.depthTest=!1,this.engine.stencilState.stencilTest=!1,this.engine.enableEffect(e._drawWrapper),this.bindBuffers(e.effect),e.onApplyObservable.notifyObservers({})}restoreStates(){this.engine.depthCullingState.depthTest=!0,this.engine.stencilState.stencilTest=!0}draw(){this.engine.drawElementsType(0,0,6)}_isRenderTargetTexture(e){return e.renderTarget!==void 0}render(e,t=null){if(!e.effect.isReady())return;this.setViewport();const i=t===null?null:this._isRenderTargetTexture(t)?t.renderTarget:t;i&&this.engine.bindFramebuffer(i),this.applyEffectWrapper(e),this.draw(),i&&this.engine.unBindFramebuffer(i),this.restoreStates()}dispose(){const e=this._vertexBuffers[g.PositionKind];e&&(e.dispose(),delete this._vertexBuffers[g.PositionKind]),this._indexBuffer&&this.engine._releaseBuffer(this._indexBuffer),this._onContextRestoredObserver&&(this.engine.onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null)}}class ia{constructor(e){this.onApplyObservable=new F;let t;const i=e.uniformNames||[];e.vertexShader?t={fragmentSource:e.fragmentShader,vertexSource:e.vertexShader,spectorName:e.name||"effectWrapper"}:(i.push("scale"),t={fragmentSource:e.fragmentShader,vertex:"postprocess",spectorName:e.name||"effectWrapper"},this.onApplyObservable.add(()=>{this.effect.setFloat2("scale",1,1)}));const s=e.defines?e.defines.join(`
`):"";this._drawWrapper=new mi(e.engine),e.useShaderStore?(t.fragment=t.fragmentSource,t.vertex||(t.vertex=t.vertexSource),delete t.fragmentSource,delete t.vertexSource,this.effect=e.engine.createEffect(t,e.attributeNames||["position"],i,e.samplerNames,s,void 0,e.onCompiled,void 0,void 0,e.shaderLanguage)):(this.effect=new Pe(t,e.attributeNames||["position"],i,e.samplerNames,e.engine,s,void 0,e.onCompiled,void 0,void 0,void 0,e.shaderLanguage),this._onContextRestoredObserver=e.engine.onContextRestoredObservable.add(()=>{this.effect._pipelineContext=null,this.effect._wasPreviouslyReady=!1,this.effect._prepareEffect()}))}get effect(){return this._drawWrapper.effect}set effect(e){this._drawWrapper.effect=e}dispose(){this._onContextRestoredObserver&&(this.effect.getEngine().onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null),this.effect.dispose()}}const wr="passPixelShader",Or=`varying vec2 vUV;
uniform sampler2D textureSampler;
#define CUSTOM_FRAGMENT_DEFINITIONS
void main(void) 
{
gl_FragColor=texture2D(textureSampler,vUV);
}`;U.ShadersStore[wr]=Or;const Lr={name:wr,shader:Or};class tt{static _CreateDumpRenderer(){if(!tt._DumpToolsEngine){const e=document.createElement("canvas"),t=new oe(e,!1,{preserveDrawingBuffer:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1});t.getCaps().parallelShaderCompile=void 0;const i=new ta(t),s=new ia({engine:t,name:Lr.name,fragmentShader:Lr.shader,samplerNames:["textureSampler"]});tt._DumpToolsEngine={canvas:e,engine:t,renderer:i,wrapper:s}}return tt._DumpToolsEngine}static async DumpFramebuffer(e,t,i,s,r="image/png",n){const a=await i.readPixels(0,0,e,t),o=new Uint8Array(a.buffer);tt.DumpData(e,t,o,s,r,n,!0)}static DumpDataAsync(e,t,i,s="image/png",r,n=!1,a=!1,o){return new Promise(h=>{tt.DumpData(e,t,i,l=>h(l),s,r,n,a,o)})}static DumpData(e,t,i,s,r="image/png",n,a=!1,o=!1,h){const l=tt._CreateDumpRenderer();if(l.engine.setSize(e,t,!0),i instanceof Float32Array){const d=new Uint8Array(i.length);let f=i.length;for(;f--;){const _=i[f];d[f]=_<0?0:_>1?1:Math.round(_*255)}i=d}const u=l.engine.createRawTexture(i,e,t,5,!1,!a,1);l.renderer.setViewport(),l.renderer.applyEffectWrapper(l.wrapper),l.wrapper.effect._bindTexture("textureSampler",u),l.renderer.draw(),o?H.ToBlob(l.canvas,d=>{const f=new FileReader;f.onload=_=>{const E=_.target.result;s&&s(E)},f.readAsArrayBuffer(d)},r,h):H.EncodeScreenshotCanvasData(l.canvas,s,r,n,h),u.dispose()}static Dispose(){tt._DumpToolsEngine&&(tt._DumpToolsEngine.wrapper.dispose(),tt._DumpToolsEngine.renderer.dispose(),tt._DumpToolsEngine.engine.dispose()),tt._DumpToolsEngine=null}}(()=>{H.DumpData=tt.DumpData,H.DumpDataAsync=tt.DumpDataAsync,H.DumpFramebuffer=tt.DumpFramebuffer})();class _t extends N{constructor(e,t,i,s=!1,r=!0,n=0,a=!1,o=N.TRILINEAR_SAMPLINGMODE,h=!0,l=!1,u=!1,d=5,f=!1,_,E,m=!1,v=!1){var S,y,A,C,b,M;let L;if(typeof s=="object"){const w=s;s=!!w.generateMipMaps,r=(S=w.doNotChangeAspectRatio)!==null&&S!==void 0?S:!0,n=(y=w.type)!==null&&y!==void 0?y:0,a=!!w.isCube,o=(A=w.samplingMode)!==null&&A!==void 0?A:N.TRILINEAR_SAMPLINGMODE,h=(C=w.generateDepthBuffer)!==null&&C!==void 0?C:!0,l=!!w.generateStencilBuffer,u=!!w.isMulti,d=(b=w.format)!==null&&b!==void 0?b:5,f=!!w.delayAllocation,_=w.samples,E=w.creationFlags,m=!!w.noColorAttachment,v=!!w.useSRGBBuffer,L=w.colorAttachment}if(super(null,i,!s,void 0,o,void 0,void 0,void 0,void 0,d),this._unObserveRenderList=null,this._renderListHasChanged=(w,de)=>{var ce;const se=this._renderList?this._renderList.length:0;(de===0&&se>0||se===0)&&((ce=this.getScene())===null||ce===void 0||ce.meshes.forEach(te=>{te._markSubMeshesAsLightDirty()}))},this.renderParticles=!0,this.renderSprites=!1,this.forceLayerMaskCheck=!1,this.ignoreCameraViewport=!1,this.onBeforeBindObservable=new F,this.onAfterUnbindObservable=new F,this.onBeforeRenderObservable=new F,this.onAfterRenderObservable=new F,this.onClearObservable=new F,this.onResizeObservable=new F,this._cleared=!1,this.skipInitialClear=!1,this._currentRefreshId=-1,this._refreshRate=1,this._samples=1,this._canRescale=!0,this._renderTarget=null,this.boundingBoxPosition=p.Zero(),i=this.getScene(),!i)return;const k=this.getScene().getEngine();this._coordinatesMode=N.PROJECTION_MODE,this.renderList=new Array,this.name=e,this.isRenderTarget=!0,this._initialSizeParameter=t,this._renderPassIds=[],this._isCubeData=a,this._processSizeParameter(t),this.renderPassId=this._renderPassIds[0],this._resizeObserver=k.onResizeObservable.add(()=>{}),this._generateMipMaps=!!s,this._doNotChangeAspectRatio=r,this._renderingManager=new We(i),this._renderingManager._useSceneAutoClearSetup=!0,!u&&(this._renderTargetOptions={generateMipMaps:s,type:n,format:(M=this._format)!==null&&M!==void 0?M:void 0,samplingMode:this.samplingMode,generateDepthBuffer:h,generateStencilBuffer:l,samples:_,creationFlags:E,noColorAttachment:m,useSRGBBuffer:v,colorAttachment:L},this.samplingMode===N.NEAREST_SAMPLINGMODE&&(this.wrapU=N.CLAMP_ADDRESSMODE,this.wrapV=N.CLAMP_ADDRESSMODE),f||(a?(this._renderTarget=i.getEngine().createRenderTargetCubeTexture(this.getRenderSize(),this._renderTargetOptions),this.coordinatesMode=N.INVCUBIC_MODE,this._textureMatrix=x.Identity()):this._renderTarget=i.getEngine().createRenderTargetTexture(this._size,this._renderTargetOptions),this._texture=this._renderTarget.texture,_!==void 0&&(this.samples=_)))}get renderList(){return this._renderList}set renderList(e){this._unObserveRenderList&&(this._unObserveRenderList(),this._unObserveRenderList=null),e&&(this._unObserveRenderList=$s(e,this._renderListHasChanged)),this._renderList=e}get postProcesses(){return this._postProcesses}get _prePassEnabled(){return!!this._prePassRenderTarget&&this._prePassRenderTarget.enabled}set onAfterUnbind(e){this._onAfterUnbindObserver&&this.onAfterUnbindObservable.remove(this._onAfterUnbindObserver),this._onAfterUnbindObserver=this.onAfterUnbindObservable.add(e)}set onBeforeRender(e){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(e)}set onAfterRender(e){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),this._onAfterRenderObserver=this.onAfterRenderObservable.add(e)}set onClear(e){this._onClearObserver&&this.onClearObservable.remove(this._onClearObserver),this._onClearObserver=this.onClearObservable.add(e)}get renderPassIds(){return this._renderPassIds}get currentRefreshId(){return this._currentRefreshId}setMaterialForRendering(e,t){let i;Array.isArray(e)?i=e:i=[e];for(let s=0;s<i.length;++s)for(let r=0;r<this._renderPassIds.length;++r)i[s].setMaterialForRenderPass(this._renderPassIds[r],t!==void 0?Array.isArray(t)?t[r]:t:void 0)}get renderTargetOptions(){return this._renderTargetOptions}get renderTarget(){return this._renderTarget}_onRatioRescale(){this._sizeRatio&&this.resize(this._initialSizeParameter)}set boundingBoxSize(e){if(this._boundingBoxSize&&this._boundingBoxSize.equals(e))return;this._boundingBoxSize=e;const t=this.getScene();t&&t.markAllMaterialsAsDirty(1)}get boundingBoxSize(){return this._boundingBoxSize}get depthStencilTexture(){var e,t;return(t=(e=this._renderTarget)===null||e===void 0?void 0:e._depthStencilTexture)!==null&&t!==void 0?t:null}createDepthStencilTexture(e=0,t=!0,i=!1,s=1,r=14){var n;(n=this._renderTarget)===null||n===void 0||n.createDepthStencilTexture(e,t,i,s,r)}_releaseRenderPassId(){if(this._scene){const e=this._scene.getEngine();for(let t=0;t<this._renderPassIds.length;++t)e.releaseRenderPassId(this._renderPassIds[t])}this._renderPassIds=[]}_createRenderPassId(){this._releaseRenderPassId();const e=this._scene.getEngine(),t=this._isCubeData?6:this.getRenderLayers()||1;for(let i=0;i<t;++i)this._renderPassIds[i]=e.createRenderPassId(`RenderTargetTexture - ${this.name}#${i}`)}_processSizeParameter(e){if(e.ratio){this._sizeRatio=e.ratio;const t=this._getEngine();this._size={width:this._bestReflectionRenderTargetDimension(t.getRenderWidth(),this._sizeRatio),height:this._bestReflectionRenderTargetDimension(t.getRenderHeight(),this._sizeRatio)}}else this._size=e;this._createRenderPassId()}get samples(){var e,t;return(t=(e=this._renderTarget)===null||e===void 0?void 0:e.samples)!==null&&t!==void 0?t:this._samples}set samples(e){this._renderTarget&&(this._samples=this._renderTarget.setSamples(e))}resetRefreshCounter(){this._currentRefreshId=-1}get refreshRate(){return this._refreshRate}set refreshRate(e){this._refreshRate=e,this.resetRefreshCounter()}addPostProcess(e){if(!this._postProcessManager){const t=this.getScene();if(!t)return;this._postProcessManager=new Qi(t),this._postProcesses=new Array}this._postProcesses.push(e),this._postProcesses[0].autoClear=!1}clearPostProcesses(e=!1){if(this._postProcesses){if(e)for(const t of this._postProcesses)t.dispose();this._postProcesses=[]}}removePostProcess(e){if(!this._postProcesses)return;const t=this._postProcesses.indexOf(e);t!==-1&&(this._postProcesses.splice(t,1),this._postProcesses.length>0&&(this._postProcesses[0].autoClear=!1))}_shouldRender(){return this._currentRefreshId===-1?(this._currentRefreshId=1,!0):this.refreshRate===this._currentRefreshId?(this._currentRefreshId=1,!0):(this._currentRefreshId++,!1)}getRenderSize(){return this.getRenderWidth()}getRenderWidth(){return this._size.width?this._size.width:this._size}getRenderHeight(){return this._size.width?this._size.height:this._size}getRenderLayers(){const e=this._size.layers;return e||0}disableRescaling(){this._canRescale=!1}get canRescale(){return this._canRescale}scale(e){const t=Math.max(1,this.getRenderSize()*e);this.resize(t)}getReflectionTextureMatrix(){return this.isCube?this._textureMatrix:super.getReflectionTextureMatrix()}resize(e){var t;const i=this.isCube;(t=this._renderTarget)===null||t===void 0||t.dispose(),this._renderTarget=null;const s=this.getScene();s&&(this._processSizeParameter(e),i?this._renderTarget=s.getEngine().createRenderTargetCubeTexture(this.getRenderSize(),this._renderTargetOptions):this._renderTarget=s.getEngine().createRenderTargetTexture(this._size,this._renderTargetOptions),this._texture=this._renderTarget.texture,this._renderTargetOptions.samples!==void 0&&(this.samples=this._renderTargetOptions.samples),this.onResizeObservable.hasObservers()&&this.onResizeObservable.notifyObservers(this))}render(e=!1,t=!1){this._render(e,t)}isReadyForRendering(){return this._render(!1,!1,!0)}_render(e=!1,t=!1,i=!1){var s;const r=this.getScene();if(!r)return i;const n=r.getEngine();if(this.useCameraPostProcesses!==void 0&&(e=this.useCameraPostProcesses),this._waitingRenderList){this.renderList=[];for(let u=0;u<this._waitingRenderList.length;u++){const d=this._waitingRenderList[u],f=r.getMeshById(d);f&&this.renderList.push(f)}this._waitingRenderList=void 0}if(this.renderListPredicate){this.renderList?this.renderList.length=0:this.renderList=[];const u=this.getScene();if(!u)return i;const d=u.meshes;for(let f=0;f<d.length;f++){const _=d[f];this.renderListPredicate(_)&&this.renderList.push(_)}}const a=n.currentRenderPassId;this.onBeforeBindObservable.notifyObservers(this);const o=(s=this.activeCamera)!==null&&s!==void 0?s:r.activeCamera,h=r.activeCamera;o&&(o!==r.activeCamera&&(r.setTransformMatrix(o.getViewMatrix(),o.getProjectionMatrix(!0)),r.activeCamera=o),n.setViewport(o.viewport,this.getRenderWidth(),this.getRenderHeight())),this._defaultRenderListPrepared=!1;let l=i;if(i){r.getViewMatrix()||r.updateTransformMatrix();const u=this.is2DArray?this.getRenderLayers():this.isCube?6:1;for(let d=0;d<u&&l;d++){let f=null;const _=this.renderList?this.renderList:r.getActiveMeshes().data,E=this.renderList?this.renderList.length:r.getActiveMeshes().length;n.currentRenderPassId=this._renderPassIds[d],this.onBeforeRenderObservable.notifyObservers(d),this.getCustomRenderList&&(f=this.getCustomRenderList(d,_,E)),f||(f=_),this._doNotChangeAspectRatio||r.updateTransformMatrix(!0);for(let m=0;m<f.length&&l;++m){const v=f[m];if(!(!v.isEnabled()||v.isBlocked||!v.isVisible||!v.subMeshes)){if(this.customIsReadyFunction){if(!this.customIsReadyFunction(v,this.refreshRate,i)){l=!1;continue}}else if(!v.isReady(!0)){l=!1;continue}}}this.onAfterRenderObservable.notifyObservers(d),(this.is2DArray||this.isCube)&&(r.incrementRenderId(),r.resetCachedMaterial())}}else if(this.is2DArray)for(let u=0;u<this.getRenderLayers();u++)this._renderToTarget(0,e,t,u,o),r.incrementRenderId(),r.resetCachedMaterial();else if(this.isCube)for(let u=0;u<6;u++)this._renderToTarget(u,e,t,void 0,o),r.incrementRenderId(),r.resetCachedMaterial();else this._renderToTarget(0,e,t,void 0,o);return this.onAfterUnbindObservable.notifyObservers(this),n.currentRenderPassId=a,h&&(r.activeCamera=h,(r.getEngine().scenes.length>1||this.activeCamera&&this.activeCamera!==r.activeCamera)&&r.setTransformMatrix(r.activeCamera.getViewMatrix(),r.activeCamera.getProjectionMatrix(!0)),n.setViewport(r.activeCamera.viewport)),r.resetCachedMaterial(),l}_bestReflectionRenderTargetDimension(e,t){const s=e*t,r=I.NearestPOT(s+128*128/(128+s));return Math.min(I.FloorPOT(e),r)}_prepareRenderingManager(e,t,i,s){const r=this.getScene();if(!r)return;this._renderingManager.reset();const n=r.getRenderId();for(let a=0;a<t;a++){const o=e[a];if(o&&!o.isBlocked){if(this.customIsReadyFunction){if(!this.customIsReadyFunction(o,this.refreshRate,!1)){this.resetRefreshCounter();continue}}else if(!o.isReady(this.refreshRate===0)){this.resetRefreshCounter();continue}if(!o._internalAbstractMeshDataInfo._currentLODIsUpToDate&&r.activeCamera&&(o._internalAbstractMeshDataInfo._currentLOD=r.customLODSelector?r.customLODSelector(o,this.activeCamera||r.activeCamera):o.getLOD(this.activeCamera||r.activeCamera),o._internalAbstractMeshDataInfo._currentLODIsUpToDate=!0),!o._internalAbstractMeshDataInfo._currentLOD)continue;let h=o._internalAbstractMeshDataInfo._currentLOD;h._preActivateForIntermediateRendering(n);let l;if(s&&i?l=(o.layerMask&i.layerMask)===0:l=!1,o.isEnabled()&&o.isVisible&&o.subMeshes&&!l&&(h!==o&&h._activate(n,!0),o._activate(n,!0)&&o.subMeshes.length)){o.isAnInstance?o._internalAbstractMeshDataInfo._actAsRegularMesh&&(h=o):h._internalAbstractMeshDataInfo._onlyForInstancesIntermediate=!1,h._internalAbstractMeshDataInfo._isActiveIntermediate=!0;for(let u=0;u<h.subMeshes.length;u++){const d=h.subMeshes[u];this._renderingManager.dispatch(d,h)}}}}for(let a=0;a<r.particleSystems.length;a++){const o=r.particleSystems[a],h=o.emitter;!o.isStarted()||!h||!h.position||!h.isEnabled()||e.indexOf(h)>=0&&this._renderingManager.dispatchParticles(o)}}_bindFrameBuffer(e=0,t=0){const i=this.getScene();if(!i)return;const s=i.getEngine();this._renderTarget&&s.bindFramebuffer(this._renderTarget,this.isCube?e:void 0,void 0,void 0,this.ignoreCameraViewport,0,t)}_unbindFrameBuffer(e,t){this._renderTarget&&e.unBindFramebuffer(this._renderTarget,this.isCube,()=>{this.onAfterRenderObservable.notifyObservers(t)})}_prepareFrame(e,t,i,s){this._postProcessManager?this._prePassEnabled||this._postProcessManager._prepareFrame(this._texture,this._postProcesses):(!s||!e.postProcessManager._prepareFrame(this._texture))&&this._bindFrameBuffer(t,i)}_renderToTarget(e,t,i,s=0,r=null){var n,a,o,h,l,u;const d=this.getScene();if(!d)return;const f=d.getEngine();if((n=f._debugPushGroup)===null||n===void 0||n.call(f,`render to face #${e} layer #${s}`,1),this._prepareFrame(d,e,s,t),this.is2DArray?(f.currentRenderPassId=this._renderPassIds[s],this.onBeforeRenderObservable.notifyObservers(s)):(f.currentRenderPassId=this._renderPassIds[e],this.onBeforeRenderObservable.notifyObservers(e)),f.snapshotRendering&&f.snapshotRenderingMode===1)this.onClearObservable.hasObservers()?this.onClearObservable.notifyObservers(f):this.skipInitialClear||f.clear(this.clearColor||d.clearColor,!0,!0,!0);else{let E=null;const m=this.renderList?this.renderList:d.getActiveMeshes().data,v=this.renderList?this.renderList.length:d.getActiveMeshes().length;this.getCustomRenderList&&(E=this.getCustomRenderList(this.is2DArray?s:e,m,v)),E?this._prepareRenderingManager(E,E.length,r,this.forceLayerMaskCheck):(this._defaultRenderListPrepared||(this._prepareRenderingManager(m,v,r,!this.renderList||this.forceLayerMaskCheck),this._defaultRenderListPrepared=!0),E=m);for(const y of d._beforeRenderTargetClearStage)y.action(this,e,s);this.onClearObservable.hasObservers()?this.onClearObservable.notifyObservers(f):this.skipInitialClear||f.clear(this.clearColor||d.clearColor,!0,!0,!0),this._doNotChangeAspectRatio||d.updateTransformMatrix(!0);for(const y of d._beforeRenderTargetDrawStage)y.action(this,e,s);this._renderingManager.render(this.customRenderFunction,E,this.renderParticles,this.renderSprites);for(const y of d._afterRenderTargetDrawStage)y.action(this,e,s);const S=(o=(a=this._texture)===null||a===void 0?void 0:a.generateMipMaps)!==null&&o!==void 0?o:!1;this._texture&&(this._texture.generateMipMaps=!1),this._postProcessManager?this._postProcessManager._finalizeFrame(!1,(h=this._renderTarget)!==null&&h!==void 0?h:void 0,e,this._postProcesses,this.ignoreCameraViewport):t&&d.postProcessManager._finalizeFrame(!1,(l=this._renderTarget)!==null&&l!==void 0?l:void 0,e);for(const y of d._afterRenderTargetPostProcessStage)y.action(this,e,s);this._texture&&(this._texture.generateMipMaps=S),this._doNotChangeAspectRatio||d.updateTransformMatrix(!0),i&&tt.DumpFramebuffer(this.getRenderWidth(),this.getRenderHeight(),f)}this._unbindFrameBuffer(f,e),this._texture&&this.isCube&&e===5&&f.generateMipMapsForCubemap(this._texture),(u=f._debugPopGroup)===null||u===void 0||u.call(f,1)}setRenderingOrder(e,t=null,i=null,s=null){this._renderingManager.setRenderingOrder(e,t,i,s)}setRenderingAutoClearDepthStencil(e,t){this._renderingManager.setRenderingAutoClearDepthStencil(e,t),this._renderingManager._useSceneAutoClearSetup=!1}clone(){const e=this.getSize(),t=new _t(this.name,e,this.getScene(),this._renderTargetOptions.generateMipMaps,this._doNotChangeAspectRatio,this._renderTargetOptions.type,this.isCube,this._renderTargetOptions.samplingMode,this._renderTargetOptions.generateDepthBuffer,this._renderTargetOptions.generateStencilBuffer,void 0,this._renderTargetOptions.format,void 0,this._renderTargetOptions.samples);return t.hasAlpha=this.hasAlpha,t.level=this.level,t.coordinatesMode=this.coordinatesMode,this.renderList&&(t.renderList=this.renderList.slice(0)),t}serialize(){if(!this.name)return null;const e=super.serialize();if(e.renderTargetSize=this.getRenderSize(),e.renderList=[],this.renderList)for(let t=0;t<this.renderList.length;t++)e.renderList.push(this.renderList[t].id);return e}disposeFramebufferObjects(){var e;(e=this._renderTarget)===null||e===void 0||e.dispose(!0)}releaseInternalTexture(){var e;(e=this._renderTarget)===null||e===void 0||e.releaseTextures(),this._texture=null}dispose(){var e;this.onResizeObservable.clear(),this.onClearObservable.clear(),this.onAfterRenderObservable.clear(),this.onAfterUnbindObservable.clear(),this.onBeforeBindObservable.clear(),this.onBeforeRenderObservable.clear(),this._postProcessManager&&(this._postProcessManager.dispose(),this._postProcessManager=null),this._prePassRenderTarget&&this._prePassRenderTarget.dispose(),this._releaseRenderPassId(),this.clearPostProcesses(!0),this._resizeObserver&&(this.getScene().getEngine().onResizeObservable.remove(this._resizeObserver),this._resizeObserver=null),this.renderList=null;const t=this.getScene();if(!t)return;let i=t.customRenderTargets.indexOf(this);i>=0&&t.customRenderTargets.splice(i,1);for(const s of t.cameras)i=s.customRenderTargets.indexOf(this),i>=0&&s.customRenderTargets.splice(i,1);(e=this._renderTarget)===null||e===void 0||e.dispose(),this._renderTarget=null,this._texture=null,super.dispose()}_rebuild(){this.refreshRate===_t.REFRESHRATE_RENDER_ONCE&&(this.refreshRate=_t.REFRESHRATE_RENDER_ONCE),this._postProcessManager&&this._postProcessManager._rebuild()}freeRenderingGroups(){this._renderingManager&&this._renderingManager.freeRenderingGroups()}getViewCount(){return 1}}_t.REFRESHRATE_RENDER_ONCE=0,_t.REFRESHRATE_RENDER_ONEVERYFRAME=1,_t.REFRESHRATE_RENDER_ONEVERYTWOFRAMES=2,N._CreateRenderTargetTexture=(c,e,t,i,s)=>new _t(c,e,t,i);class Me{constructor(e,t,i,s,r,n,a=1,o,h,l=null,u=0,d="postprocess",f,_=!1,E=5,m=Ze.GLSL){this._parentContainer=null,this.width=-1,this.height=-1,this.nodeMaterialSource=null,this._outputTexture=null,this.autoClear=!0,this.alphaMode=0,this.animations=new Array,this.enablePixelPerfectMode=!1,this.forceFullscreenViewport=!0,this.scaleMode=1,this.alwaysForcePOT=!1,this._samples=1,this.adaptScaleToCurrentViewport=!1,this._reusable=!1,this._renderId=0,this.externalTextureSamplerBinding=!1,this._textures=new $e(2),this._textureCache=[],this._currentRenderTextureInd=0,this._scaleRatio=new ve(1,1),this._texelSize=ve.Zero(),this.onActivateObservable=new F,this.onSizeChangedObservable=new F,this.onApplyObservable=new F,this.onBeforeRenderObservable=new F,this.onAfterRenderObservable=new F,this.name=e,n!=null?(this._camera=n,this._scene=n.getScene(),n.attachPostProcess(this),this._engine=this._scene.getEngine(),this._scene.postProcesses.push(this),this.uniqueId=this._scene.getUniqueId()):o&&(this._engine=o,this._engine.postProcesses.push(this)),this._options=r,this.renderTargetSamplingMode=a||1,this._reusable=h||!1,this._textureType=u,this._textureFormat=E,this._shaderLanguage=m,this._samplers=s||[],this._samplers.push("textureSampler"),this._fragmentUrl=t,this._vertexUrl=d,this._parameters=i||[],this._parameters.push("scale"),this._indexParameters=f,this._drawWrapper=new mi(this._engine),_||this.updateEffect(l)}static RegisterShaderCodeProcessing(e,t){if(!t){delete Me._CustomShaderCodeProcessing[e??""];return}Me._CustomShaderCodeProcessing[e??""]=t}static _GetShaderCodeProcessing(e){var t;return(t=Me._CustomShaderCodeProcessing[e])!==null&&t!==void 0?t:Me._CustomShaderCodeProcessing[""]}get samples(){return this._samples}set samples(e){this._samples=Math.min(e,this._engine.getCaps().maxMSAASamples),this._textures.forEach(t=>{t.setSamples(this._samples)})}getEffectName(){return this._fragmentUrl}set onActivate(e){this._onActivateObserver&&this.onActivateObservable.remove(this._onActivateObserver),e&&(this._onActivateObserver=this.onActivateObservable.add(e))}set onSizeChanged(e){this._onSizeChangedObserver&&this.onSizeChangedObservable.remove(this._onSizeChangedObserver),this._onSizeChangedObserver=this.onSizeChangedObservable.add(e)}set onApply(e){this._onApplyObserver&&this.onApplyObservable.remove(this._onApplyObserver),this._onApplyObserver=this.onApplyObservable.add(e)}set onBeforeRender(e){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(e)}set onAfterRender(e){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),this._onAfterRenderObserver=this.onAfterRenderObservable.add(e)}get inputTexture(){return this._textures.data[this._currentRenderTextureInd]}set inputTexture(e){this._forcedOutputTexture=e}restoreDefaultInputTexture(){this._forcedOutputTexture&&(this._forcedOutputTexture=null,this.markTextureDirty())}getCamera(){return this._camera}get texelSize(){return this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.texelSize:(this._forcedOutputTexture&&this._texelSize.copyFromFloats(1/this._forcedOutputTexture.width,1/this._forcedOutputTexture.height),this._texelSize)}getClassName(){return"PostProcess"}getEngine(){return this._engine}getEffect(){return this._drawWrapper.effect}shareOutputWith(e){return this._disposeTextures(),this._shareOutputWithPostProcess=e,this}useOwnOutput(){this._textures.length==0&&(this._textures=new $e(2)),this._shareOutputWithPostProcess=null}updateEffect(e=null,t=null,i=null,s,r,n,a,o){var h,l;const u=Me._GetShaderCodeProcessing(this.name);if(u!=null&&u.defineCustomBindings){const d=(h=t==null?void 0:t.slice())!==null&&h!==void 0?h:[];d.push(...this._parameters);const f=(l=i==null?void 0:i.slice())!==null&&l!==void 0?l:[];f.push(...this._samplers),e=u.defineCustomBindings(this.name,e,d,f),t=d,i=f}this._postProcessDefines=e,this._drawWrapper.effect=this._engine.createEffect({vertex:a??this._vertexUrl,fragment:o??this._fragmentUrl},{attributes:["position"],uniformsNames:t||this._parameters,uniformBuffersNames:[],samplers:i||this._samplers,defines:e!==null?e:"",fallbacks:null,onCompiled:r??null,onError:n??null,indexParameters:s||this._indexParameters,processCodeAfterIncludes:u!=null&&u.processCodeAfterIncludes?(d,f)=>u.processCodeAfterIncludes(this.name,d,f):null,processFinalCode:u!=null&&u.processFinalCode?(d,f)=>u.processFinalCode(this.name,d,f):null,shaderLanguage:this._shaderLanguage},this._engine)}isReusable(){return this._reusable}markTextureDirty(){this.width=-1}_createRenderTargetTexture(e,t,i=0){for(let r=0;r<this._textureCache.length;r++)if(this._textureCache[r].texture.width===e.width&&this._textureCache[r].texture.height===e.height&&this._textureCache[r].postProcessChannel===i&&this._textureCache[r].texture._generateDepthBuffer===t.generateDepthBuffer&&this._textureCache[r].texture.samples===t.samples)return this._textureCache[r].texture;const s=this._engine.createRenderTargetTexture(e,t);return this._textureCache.push({texture:s,postProcessChannel:i,lastUsedRenderId:-1}),s}_flushTextureCache(){const e=this._renderId;for(let t=this._textureCache.length-1;t>=0;t--)if(e-this._textureCache[t].lastUsedRenderId>100){let i=!1;for(let s=0;s<this._textures.length;s++)if(this._textures.data[s]===this._textureCache[t].texture){i=!0;break}i||(this._textureCache[t].texture.dispose(),this._textureCache.splice(t,1))}}_resize(e,t,i,s,r){this._textures.length>0&&this._textures.reset(),this.width=e,this.height=t;let n=null;for(let h=0;h<i._postProcesses.length;h++)if(i._postProcesses[h]!==null){n=i._postProcesses[h];break}const a={width:this.width,height:this.height},o={generateMipMaps:s,generateDepthBuffer:r||n===this,generateStencilBuffer:(r||n===this)&&this._engine.isStencilEnable,samplingMode:this.renderTargetSamplingMode,type:this._textureType,format:this._textureFormat,samples:this._samples};this._textures.push(this._createRenderTargetTexture(a,o,0)),this._reusable&&this._textures.push(this._createRenderTargetTexture(a,o,1)),this._texelSize.copyFromFloats(1/this.width,1/this.height),this.onSizeChangedObservable.notifyObservers(this)}activate(e,t=null,i){var s,r;e=e||this._camera;const n=e.getScene(),a=n.getEngine(),o=a.getCaps().maxTextureSize;let h=(t?t.width:this._engine.getRenderWidth(!0))*this._options|0;const l=(t?t.height:this._engine.getRenderHeight(!0))*this._options|0,u=e.parent;u&&(u.leftCamera==e||u.rightCamera==e)&&(h/=2);let d=this._options.width||h,f=this._options.height||l;const _=this.renderTargetSamplingMode!==7&&this.renderTargetSamplingMode!==1&&this.renderTargetSamplingMode!==2;if(!this._shareOutputWithPostProcess&&!this._forcedOutputTexture){if(this.adaptScaleToCurrentViewport){const m=a.currentViewport;m&&(d*=m.width,f*=m.height)}(_||this.alwaysForcePOT)&&(this._options.width||(d=a.needPOTTextures?I.GetExponentOfTwo(d,o,this.scaleMode):d),this._options.height||(f=a.needPOTTextures?I.GetExponentOfTwo(f,o,this.scaleMode):f)),(this.width!==d||this.height!==f)&&this._resize(d,f,e,_,i),this._textures.forEach(m=>{m.samples!==this.samples&&this._engine.updateRenderTargetTextureSampleCount(m,this.samples)}),this._flushTextureCache(),this._renderId++}let E;if(this._shareOutputWithPostProcess)E=this._shareOutputWithPostProcess.inputTexture;else if(this._forcedOutputTexture)E=this._forcedOutputTexture,this.width=this._forcedOutputTexture.width,this.height=this._forcedOutputTexture.height;else{E=this.inputTexture;let m;for(let v=0;v<this._textureCache.length;v++)if(this._textureCache[v].texture===E){m=this._textureCache[v];break}m&&(m.lastUsedRenderId=this._renderId)}return this.enablePixelPerfectMode?(this._scaleRatio.copyFromFloats(h/d,l/f),this._engine.bindFramebuffer(E,0,h,l,this.forceFullscreenViewport)):(this._scaleRatio.copyFromFloats(1,1),this._engine.bindFramebuffer(E,0,void 0,void 0,this.forceFullscreenViewport)),(r=(s=this._engine)._debugInsertMarker)===null||r===void 0||r.call(s,`post process ${this.name} input`),this.onActivateObservable.notifyObservers(e),this.autoClear&&this.alphaMode===0&&this._engine.clear(this.clearColor?this.clearColor:n.clearColor,n._allowPostProcessClearColor,!0,!0),this._reusable&&(this._currentRenderTextureInd=(this._currentRenderTextureInd+1)%2),E}get isSupported(){return this._drawWrapper.effect.isSupported}get aspectRatio(){return this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.aspectRatio:this._forcedOutputTexture?this._forcedOutputTexture.width/this._forcedOutputTexture.height:this.width/this.height}isReady(){var e,t;return(t=(e=this._drawWrapper.effect)===null||e===void 0?void 0:e.isReady())!==null&&t!==void 0?t:!1}apply(){var e,t,i;if(!(!((e=this._drawWrapper.effect)===null||e===void 0)&&e.isReady()))return null;this._engine.enableEffect(this._drawWrapper),this._engine.setState(!1),this._engine.setDepthBuffer(!1),this._engine.setDepthWrite(!1),this._engine.setAlphaMode(this.alphaMode),this.alphaConstants&&this.getEngine().setAlphaConstants(this.alphaConstants.r,this.alphaConstants.g,this.alphaConstants.b,this.alphaConstants.a);let s;return this._shareOutputWithPostProcess?s=this._shareOutputWithPostProcess.inputTexture:this._forcedOutputTexture?s=this._forcedOutputTexture:s=this.inputTexture,this.externalTextureSamplerBinding||this._drawWrapper.effect._bindTexture("textureSampler",s==null?void 0:s.texture),this._drawWrapper.effect.setVector2("scale",this._scaleRatio),this.onApplyObservable.notifyObservers(this._drawWrapper.effect),(i=(t=Me._GetShaderCodeProcessing(this.name))===null||t===void 0?void 0:t.bindCustomBindings)===null||i===void 0||i.call(t,this.name,this._drawWrapper.effect),this._drawWrapper.effect}_disposeTextures(){if(this._shareOutputWithPostProcess||this._forcedOutputTexture){this._disposeTextureCache();return}this._disposeTextureCache(),this._textures.dispose()}_disposeTextureCache(){for(let e=this._textureCache.length-1;e>=0;e--)this._textureCache[e].texture.dispose();this._textureCache.length=0}setPrePassRenderer(e){return this._prePassEffectConfiguration?(this._prePassEffectConfiguration=e.addEffectConfiguration(this._prePassEffectConfiguration),this._prePassEffectConfiguration.enabled=!0,!0):!1}dispose(e){e=e||this._camera,this._disposeTextures();let t;if(this._scene&&(t=this._scene.postProcesses.indexOf(this),t!==-1&&this._scene.postProcesses.splice(t,1)),this._parentContainer){const i=this._parentContainer.postProcesses.indexOf(this);i>-1&&this._parentContainer.postProcesses.splice(i,1),this._parentContainer=null}if(t=this._engine.postProcesses.indexOf(this),t!==-1&&this._engine.postProcesses.splice(t,1),!!e){if(e.detachPostProcess(this),t=e._postProcesses.indexOf(this),t===0&&e._postProcesses.length>0){const i=this._camera._getFirstPostProcess();i&&i.markTextureDirty()}this.onActivateObservable.clear(),this.onAfterRenderObservable.clear(),this.onApplyObservable.clear(),this.onBeforeRenderObservable.clear(),this.onSizeChangedObservable.clear()}}serialize(){const e=ae.Serialize(this),t=this.getCamera()||this._scene&&this._scene.activeCamera;return e.customType="BABYLON."+this.getClassName(),e.cameraId=t?t.id:null,e.reusable=this._reusable,e.textureType=this._textureType,e.fragmentUrl=this._fragmentUrl,e.parameters=this._parameters,e.samplers=this._samplers,e.options=this._options,e.defines=this._postProcessDefines,e.textureFormat=this._textureFormat,e.vertexUrl=this._vertexUrl,e.indexParameters=this._indexParameters,e}clone(){const e=this.serialize();e._engine=this._engine,e.cameraId=null;const t=Me.Parse(e,this._scene,"");return t?(t.onActivateObservable=this.onActivateObservable.clone(),t.onSizeChangedObservable=this.onSizeChangedObservable.clone(),t.onApplyObservable=this.onApplyObservable.clone(),t.onBeforeRenderObservable=this.onBeforeRenderObservable.clone(),t.onAfterRenderObservable=this.onAfterRenderObservable.clone(),t._prePassEffectConfiguration=this._prePassEffectConfiguration,t):null}static Parse(e,t,i){const s=ri(e.customType);if(!s||!s._Parse)return null;const r=t?t.getCameraById(e.cameraId):null;return s._Parse(e,r,t,i)}static _Parse(e,t,i,s){return ae.Parse(()=>new Me(e.name,e.fragmentUrl,e.parameters,e.samplers,e.options,t,e.renderTargetSamplingMode,e._engine,e.reusable,e.defines,e.textureType,e.vertexUrl,e.indexParameters,!1,e.textureFormat),e,i,s)}}Me._CustomShaderCodeProcessing={},T([R()],Me.prototype,"uniqueId",void 0),T([R()],Me.prototype,"name",void 0),T([R()],Me.prototype,"width",void 0),T([R()],Me.prototype,"height",void 0),T([R()],Me.prototype,"renderTargetSamplingMode",void 0),T([dr()],Me.prototype,"clearColor",void 0),T([R()],Me.prototype,"autoClear",void 0),T([R()],Me.prototype,"alphaMode",void 0),T([R()],Me.prototype,"alphaConstants",void 0),T([R()],Me.prototype,"enablePixelPerfectMode",void 0),T([R()],Me.prototype,"forceFullscreenViewport",void 0),T([R()],Me.prototype,"scaleMode",void 0),T([R()],Me.prototype,"alwaysForcePOT",void 0),T([R("samples")],Me.prototype,"_samples",void 0),T([R()],Me.prototype,"adaptScaleToCurrentViewport",void 0),it("BABYLON.PostProcess",Me);const sa="kernelBlurVaryingDeclaration",ra="varying vec2 sampleCoord{X};";U.IncludesShadersStore[sa]=ra;const na="packingFunctions",aa=`vec4 pack(float depth)
{
const vec4 bit_shift=vec4(255.0*255.0*255.0,255.0*255.0,255.0,1.0);
const vec4 bit_mask=vec4(0.0,1.0/255.0,1.0/255.0,1.0/255.0);
vec4 res=fract(depth*bit_shift);
res-=res.xxyz*bit_mask;
return res;
}
float unpack(vec4 color)
{
const vec4 bit_shift=vec4(1.0/(255.0*255.0*255.0),1.0/(255.0*255.0),1.0/255.0,1.0);
return dot(color,bit_shift);
}`;U.IncludesShadersStore[na]=aa;const oa="kernelBlurFragment",ha=`#ifdef DOF
factor=sampleCoC(sampleCoord{X}); 
computedWeight=KERNEL_WEIGHT{X}*factor;
sumOfWeights+=computedWeight;
#else
computedWeight=KERNEL_WEIGHT{X};
#endif
#ifdef PACKEDFLOAT
blend+=unpack(texture2D(textureSampler,sampleCoord{X}))*computedWeight;
#else
blend+=texture2D(textureSampler,sampleCoord{X})*computedWeight;
#endif
`;U.IncludesShadersStore[oa]=ha;const la="kernelBlurFragment2",ca=`#ifdef DOF
factor=sampleCoC(sampleCenter+delta*KERNEL_DEP_OFFSET{X});
computedWeight=KERNEL_DEP_WEIGHT{X}*factor;
sumOfWeights+=computedWeight;
#else
computedWeight=KERNEL_DEP_WEIGHT{X};
#endif
#ifdef PACKEDFLOAT
blend+=unpack(texture2D(textureSampler,sampleCenter+delta*KERNEL_DEP_OFFSET{X}))*computedWeight;
#else
blend+=texture2D(textureSampler,sampleCenter+delta*KERNEL_DEP_OFFSET{X})*computedWeight;
#endif
`;U.IncludesShadersStore[la]=ca;const ua="kernelBlurPixelShader",da=`uniform sampler2D textureSampler;
uniform vec2 delta;
varying vec2 sampleCenter;
#ifdef DOF
uniform sampler2D circleOfConfusionSampler;
float sampleCoC(in vec2 offset) {
float coc=texture2D(circleOfConfusionSampler,offset).r;
return coc; 
}
#endif
#include<kernelBlurVaryingDeclaration>[0..varyingCount]
#ifdef PACKEDFLOAT
#include<packingFunctions>
#endif
#define CUSTOM_FRAGMENT_DEFINITIONS
void main(void)
{
float computedWeight=0.0;
#ifdef PACKEDFLOAT
float blend=0.;
#else
vec4 blend=vec4(0.);
#endif
#ifdef DOF
float sumOfWeights=CENTER_WEIGHT; 
float factor=0.0;
#ifdef PACKEDFLOAT
blend+=unpack(texture2D(textureSampler,sampleCenter))*CENTER_WEIGHT;
#else
blend+=texture2D(textureSampler,sampleCenter)*CENTER_WEIGHT;
#endif
#endif
#include<kernelBlurFragment>[0..varyingCount]
#include<kernelBlurFragment2>[0..depCount]
#ifdef PACKEDFLOAT
gl_FragColor=pack(blend);
#else
gl_FragColor=blend;
#endif
#ifdef DOF
gl_FragColor/=sumOfWeights;
#endif
}`;U.ShadersStore[ua]=da;const fa="kernelBlurVertex",_a="sampleCoord{X}=sampleCenter+delta*KERNEL_OFFSET{X};";U.IncludesShadersStore[fa]=_a;const ga="kernelBlurVertexShader",pa=`attribute vec2 position;
uniform vec2 delta;
varying vec2 sampleCenter;
#include<kernelBlurVaryingDeclaration>[0..varyingCount]
const vec2 madd=vec2(0.5,0.5);
#define CUSTOM_VERTEX_DEFINITIONS
void main(void) {
#define CUSTOM_VERTEX_MAIN_BEGIN
sampleCenter=(position*madd+madd);
#include<kernelBlurVertex>[0..varyingCount]
gl_Position=vec4(position,0.0,1.0);
#define CUSTOM_VERTEX_MAIN_END
}`;U.ShadersStore[ga]=pa;class Jt extends Me{constructor(e,t,i,s,r,n=N.BILINEAR_SAMPLINGMODE,a,o,h=0,l="",u=!1,d=5){super(e,"kernelBlur",["delta","direction"],["circleOfConfusionSampler"],s,r,n,a,o,null,h,"kernelBlur",{varyingCount:0,depCount:0},!0,d),this._blockCompilation=u,this._packedFloat=!1,this._staticDefines="",this._staticDefines=l,this.direction=t,this.onApplyObservable.add(f=>{this._outputTexture?f.setFloat2("delta",1/this._outputTexture.width*this.direction.x,1/this._outputTexture.height*this.direction.y):f.setFloat2("delta",1/this.width*this.direction.x,1/this.height*this.direction.y)}),this.kernel=i}set kernel(e){this._idealKernel!==e&&(e=Math.max(e,1),this._idealKernel=e,this._kernel=this._nearestBestKernel(e),this._blockCompilation||this._updateParameters())}get kernel(){return this._idealKernel}set packedFloat(e){this._packedFloat!==e&&(this._packedFloat=e,this._blockCompilation||this._updateParameters())}get packedFloat(){return this._packedFloat}getClassName(){return"BlurPostProcess"}updateEffect(e=null,t=null,i=null,s,r,n){this._updateParameters(r,n)}_updateParameters(e,t){const i=this._kernel,s=(i-1)/2;let r=[],n=[],a=0;for(let m=0;m<i;m++){const v=m/(i-1),S=this._gaussianWeight(v*2-1);r[m]=m-s,n[m]=S,a+=S}for(let m=0;m<n.length;m++)n[m]/=a;const o=[],h=[],l=[];for(let m=0;m<=s;m+=2){const v=Math.min(m+1,Math.floor(s));if(m===v)l.push({o:r[m],w:n[m]});else{const y=v===s,A=n[m]+n[v]*(y?.5:1),C=r[m]+1/(1+n[m]/n[v]);C===0?(l.push({o:r[m],w:n[m]}),l.push({o:r[m+1],w:n[m+1]})):(l.push({o:C,w:A}),l.push({o:-C,w:A}))}}for(let m=0;m<l.length;m++)h[m]=l[m].o,o[m]=l[m].w;r=h,n=o;const u=this.getEngine().getCaps().maxVaryingVectors,d=Math.max(u,0)-1;let f=Math.min(r.length,d),_="";_+=this._staticDefines,this._staticDefines.indexOf("DOF")!=-1&&(_+=`#define CENTER_WEIGHT ${this._glslFloat(n[f-1])}\r
`,f--);for(let m=0;m<f;m++)_+=`#define KERNEL_OFFSET${m} ${this._glslFloat(r[m])}\r
`,_+=`#define KERNEL_WEIGHT${m} ${this._glslFloat(n[m])}\r
`;let E=0;for(let m=d;m<r.length;m++)_+=`#define KERNEL_DEP_OFFSET${E} ${this._glslFloat(r[m])}\r
`,_+=`#define KERNEL_DEP_WEIGHT${E} ${this._glslFloat(n[m])}\r
`,E++;this.packedFloat&&(_+="#define PACKEDFLOAT 1"),this._blockCompilation=!1,super.updateEffect(_,null,null,{varyingCount:f,depCount:E},e,t)}_nearestBestKernel(e){const t=Math.round(e);for(const i of[t,t-1,t+1,t-2,t+2])if(i%2!==0&&Math.floor(i/2)%2===0&&i>0)return Math.max(i,3);return Math.max(t,3)}_gaussianWeight(e){const t=.3333333333333333,i=Math.sqrt(2*Math.PI)*t,s=-(e*e/(2*t*t));return 1/i*Math.exp(s)}_glslFloat(e,t=8){return e.toFixed(t).replace(/0+$/,"")}static _Parse(e,t,i,s){return ae.Parse(()=>new Jt(e.name,e.direction,e.kernel,e.options,t,e.renderTargetSamplingMode,i.getEngine(),e.reusable,e.textureType,void 0,!1),e,i,s)}}T([R("kernel")],Jt.prototype,"_kernel",void 0),T([R("packedFloat")],Jt.prototype,"_packedFloat",void 0),T([xn()],Jt.prototype,"direction",void 0),it("BABYLON.BlurPostProcess",Jt);class zs{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(e,t){this._defines[e]||(e<this._currentRank&&(this._currentRank=e),e>this._maxRank&&(this._maxRank=e),this._defines[e]=new Array),this._defines[e].push(t)}addCPUSkinningFallback(e,t){this._mesh=t,e<this._currentRank&&(this._currentRank=e),e>this._maxRank&&(this._maxRank=e)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(e,t){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,e=e.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),t._bonesComputationForcedToCPU=!0;const i=this._mesh.getScene();for(let s=0;s<i.meshes.length;s++){const r=i.meshes[s];if(!r.material){!this._mesh.material&&r.computeBonesUsingShaders&&r.numBoneInfluencers>0&&(r.computeBonesUsingShaders=!1);continue}if(!(!r.computeBonesUsingShaders||r.numBoneInfluencers===0)){if(r.material.getEffect()===t)r.computeBonesUsingShaders=!1;else if(r.subMeshes){for(const n of r.subMeshes)if(n.effect===t){r.computeBonesUsingShaders=!1;break}}}}}else{const i=this._defines[this._currentRank];if(i)for(let s=0;s<i.length;s++)e=e.replace("#define "+i[s],"");this._currentRank++}return e}}const ma="bayerDitherFunctions",Ea=`float bayerDither2(vec2 _P) {
return mod(2.0*_P.y+_P.x+1.0,4.0);
}
float bayerDither4(vec2 _P) {
vec2 P1=mod(_P,2.0); 
vec2 P2=floor(0.5*mod(_P,4.0)); 
return 4.0*bayerDither2(P1)+bayerDither2(P2);
}
float bayerDither8(vec2 _P) {
vec2 P1=mod(_P,2.0); 
vec2 P2=floor(0.5 *mod(_P,4.0)); 
vec2 P4=floor(0.25*mod(_P,8.0)); 
return 4.0*(4.0*bayerDither2(P1)+bayerDither2(P2))+bayerDither2(P4);
}
`;U.IncludesShadersStore[ma]=Ea;const va="shadowMapFragmentExtraDeclaration",Ta=`#if SM_FLOAT==0
#include<packingFunctions>
#endif
#if SM_SOFTTRANSPARENTSHADOW==1
#include<bayerDitherFunctions>
uniform float softTransparentShadowSM;
#endif
varying float vDepthMetricSM;
#if SM_USEDISTANCE==1
uniform vec3 lightDataSM;
varying vec3 vPositionWSM;
#endif
uniform vec3 biasAndScaleSM;
uniform vec2 depthValuesSM;
#if defined(SM_DEPTHCLAMP) && SM_DEPTHCLAMP==1
varying float zSM;
#endif
`;U.IncludesShadersStore[va]=Ta;const ba="clipPlaneFragmentDeclaration",Sa=`#ifdef CLIPPLANE
varying float fClipDistance;
#endif
#ifdef CLIPPLANE2
varying float fClipDistance2;
#endif
#ifdef CLIPPLANE3
varying float fClipDistance3;
#endif
#ifdef CLIPPLANE4
varying float fClipDistance4;
#endif
#ifdef CLIPPLANE5
varying float fClipDistance5;
#endif
#ifdef CLIPPLANE6
varying float fClipDistance6;
#endif
`;U.IncludesShadersStore[ba]=Sa;const xa="clipPlaneFragment",Ma=`#if defined(CLIPPLANE) || defined(CLIPPLANE2) || defined(CLIPPLANE3) || defined(CLIPPLANE4) || defined(CLIPPLANE5) || defined(CLIPPLANE6)
if (false) {}
#endif
#ifdef CLIPPLANE
else if (fClipDistance>0.0)
{
discard;
}
#endif
#ifdef CLIPPLANE2
else if (fClipDistance2>0.0)
{
discard;
}
#endif
#ifdef CLIPPLANE3
else if (fClipDistance3>0.0)
{
discard;
}
#endif
#ifdef CLIPPLANE4
else if (fClipDistance4>0.0)
{
discard;
}
#endif
#ifdef CLIPPLANE5
else if (fClipDistance5>0.0)
{
discard;
}
#endif
#ifdef CLIPPLANE6
else if (fClipDistance6>0.0)
{
discard;
}
#endif
`;U.IncludesShadersStore[xa]=Ma;const Aa="shadowMapFragment",Ra=`float depthSM=vDepthMetricSM;
#if defined(SM_DEPTHCLAMP) && SM_DEPTHCLAMP==1
#if SM_USEDISTANCE==1
depthSM=(length(vPositionWSM-lightDataSM)+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;
#else
#ifdef USE_REVERSE_DEPTHBUFFER
depthSM=(-zSM+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;
#else
depthSM=(zSM+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;
#endif
#endif
#ifdef USE_REVERSE_DEPTHBUFFER
gl_FragDepth=clamp(1.0-depthSM,0.0,1.0);
#else
gl_FragDepth=clamp(depthSM,0.0,1.0); 
#endif
#elif SM_USEDISTANCE==1
depthSM=(length(vPositionWSM-lightDataSM)+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;
#endif
#if SM_ESM==1
depthSM=clamp(exp(-min(87.,biasAndScaleSM.z*depthSM)),0.,1.);
#endif
#if SM_FLOAT==1
gl_FragColor=vec4(depthSM,1.0,1.0,1.0);
#else
gl_FragColor=pack(depthSM);
#endif
return;`;U.IncludesShadersStore[Aa]=Ra;const ya="shadowMapPixelShader",Ca=`#include<shadowMapFragmentExtraDeclaration>
#ifdef ALPHATEXTURE
varying vec2 vUV;
uniform sampler2D diffuseSampler;
#endif
#include<clipPlaneFragmentDeclaration>
#define CUSTOM_FRAGMENT_DEFINITIONS
void main(void)
{
#include<clipPlaneFragment>
#ifdef ALPHATEXTURE
float alphaFromAlphaTexture=texture2D(diffuseSampler,vUV).a;
#ifdef ALPHATESTVALUE
if (alphaFromAlphaTexture<ALPHATESTVALUE)
discard;
#endif
#endif
#if SM_SOFTTRANSPARENTSHADOW==1
#ifdef ALPHATEXTURE
if ((bayerDither8(floor(mod(gl_FragCoord.xy,8.0))))/64.0>=softTransparentShadowSM*alphaFromAlphaTexture) discard;
#else
if ((bayerDither8(floor(mod(gl_FragCoord.xy,8.0))))/64.0>=softTransparentShadowSM) discard;
#endif
#endif
#include<shadowMapFragment>
}`;U.ShadersStore[ya]=Ca;const Ia="bonesDeclaration",Pa=`#if NUM_BONE_INFLUENCERS>0
attribute vec4 matricesIndices;
attribute vec4 matricesWeights;
#if NUM_BONE_INFLUENCERS>4
attribute vec4 matricesIndicesExtra;
attribute vec4 matricesWeightsExtra;
#endif
#ifndef BAKED_VERTEX_ANIMATION_TEXTURE
#ifdef BONETEXTURE
uniform sampler2D boneSampler;
uniform float boneTextureWidth;
#else
uniform mat4 mBones[BonesPerMesh];
#ifdef BONES_VELOCITY_ENABLED
uniform mat4 mPreviousBones[BonesPerMesh];
#endif
#endif
#ifdef BONETEXTURE
#define inline
mat4 readMatrixFromRawSampler(sampler2D smp,float index)
{
float offset=index *4.0;
float dx=1.0/boneTextureWidth;
vec4 m0=texture2D(smp,vec2(dx*(offset+0.5),0.));
vec4 m1=texture2D(smp,vec2(dx*(offset+1.5),0.));
vec4 m2=texture2D(smp,vec2(dx*(offset+2.5),0.));
vec4 m3=texture2D(smp,vec2(dx*(offset+3.5),0.));
return mat4(m0,m1,m2,m3);
}
#endif
#endif
#endif
`;U.IncludesShadersStore[Ia]=Pa;const Da="bakedVertexAnimationDeclaration",Fa=`#ifdef BAKED_VERTEX_ANIMATION_TEXTURE
uniform float bakedVertexAnimationTime;
uniform vec2 bakedVertexAnimationTextureSizeInverted;
uniform vec4 bakedVertexAnimationSettings;
uniform sampler2D bakedVertexAnimationTexture;
#ifdef INSTANCES
attribute vec4 bakedVertexAnimationSettingsInstanced;
#endif
#define inline
mat4 readMatrixFromRawSamplerVAT(sampler2D smp,float index,float frame)
{
float offset=index*4.0;
float frameUV=(frame+0.5)*bakedVertexAnimationTextureSizeInverted.y;
float dx=bakedVertexAnimationTextureSizeInverted.x;
vec4 m0=texture2D(smp,vec2(dx*(offset+0.5),frameUV));
vec4 m1=texture2D(smp,vec2(dx*(offset+1.5),frameUV));
vec4 m2=texture2D(smp,vec2(dx*(offset+2.5),frameUV));
vec4 m3=texture2D(smp,vec2(dx*(offset+3.5),frameUV));
return mat4(m0,m1,m2,m3);
}
#endif
`;U.IncludesShadersStore[Da]=Fa;const wa="morphTargetsVertexGlobalDeclaration",Oa=`#ifdef MORPHTARGETS
uniform float morphTargetInfluences[NUM_MORPH_INFLUENCERS];
#ifdef MORPHTARGETS_TEXTURE 
precision mediump sampler2DArray; 
uniform float morphTargetTextureIndices[NUM_MORPH_INFLUENCERS];
uniform vec3 morphTargetTextureInfo;
uniform sampler2DArray morphTargets;
vec3 readVector3FromRawSampler(int targetIndex,float vertexIndex)
{ 
float y=floor(vertexIndex/morphTargetTextureInfo.y);
float x=vertexIndex-y*morphTargetTextureInfo.y;
vec3 textureUV=vec3((x+0.5)/morphTargetTextureInfo.y,(y+0.5)/morphTargetTextureInfo.z,morphTargetTextureIndices[targetIndex]);
return texture(morphTargets,textureUV).xyz;
}
#endif
#endif
`;U.IncludesShadersStore[wa]=Oa;const La="morphTargetsVertexDeclaration",Na=`#ifdef MORPHTARGETS
#ifndef MORPHTARGETS_TEXTURE
attribute vec3 position{X};
#ifdef MORPHTARGETS_NORMAL
attribute vec3 normal{X};
#endif
#ifdef MORPHTARGETS_TANGENT
attribute vec3 tangent{X};
#endif
#ifdef MORPHTARGETS_UV
attribute vec2 uv_{X};
#endif
#endif
#endif
`;U.IncludesShadersStore[La]=Na;const Ba="helperFunctions",Ua=`const float PI=3.1415926535897932384626433832795;
const float HALF_MIN=5.96046448e-08; 
const float LinearEncodePowerApprox=2.2;
const float GammaEncodePowerApprox=1.0/LinearEncodePowerApprox;
const vec3 LuminanceEncodeApprox=vec3(0.2126,0.7152,0.0722);
const float Epsilon=0.0000001;
#define saturate(x) clamp(x,0.0,1.0)
#define absEps(x) abs(x)+Epsilon
#define maxEps(x) max(x,Epsilon)
#define saturateEps(x) clamp(x,Epsilon,1.0)
mat3 transposeMat3(mat3 inMatrix) {
vec3 i0=inMatrix[0];
vec3 i1=inMatrix[1];
vec3 i2=inMatrix[2];
mat3 outMatrix=mat3(
vec3(i0.x,i1.x,i2.x),
vec3(i0.y,i1.y,i2.y),
vec3(i0.z,i1.z,i2.z)
);
return outMatrix;
}
mat3 inverseMat3(mat3 inMatrix) {
float a00=inMatrix[0][0],a01=inMatrix[0][1],a02=inMatrix[0][2];
float a10=inMatrix[1][0],a11=inMatrix[1][1],a12=inMatrix[1][2];
float a20=inMatrix[2][0],a21=inMatrix[2][1],a22=inMatrix[2][2];
float b01=a22*a11-a12*a21;
float b11=-a22*a10+a12*a20;
float b21=a21*a10-a11*a20;
float det=a00*b01+a01*b11+a02*b21;
return mat3(b01,(-a22*a01+a02*a21),(a12*a01-a02*a11),
b11,(a22*a00-a02*a20),(-a12*a00+a02*a10),
b21,(-a21*a00+a01*a20),(a11*a00-a01*a10))/det;
}
#if USE_EXACT_SRGB_CONVERSIONS
vec3 toLinearSpaceExact(vec3 color)
{
vec3 nearZeroSection=0.0773993808*color;
vec3 remainingSection=pow(0.947867299*(color+vec3(0.055)),vec3(2.4));
#if defined(WEBGL2) || defined(WEBGPU) || defined(NATIVE)
return mix(remainingSection,nearZeroSection,lessThanEqual(color,vec3(0.04045)));
#else
return
vec3(
color.r<=0.04045 ? nearZeroSection.r : remainingSection.r,
color.g<=0.04045 ? nearZeroSection.g : remainingSection.g,
color.b<=0.04045 ? nearZeroSection.b : remainingSection.b);
#endif
}
vec3 toGammaSpaceExact(vec3 color)
{
vec3 nearZeroSection=12.92*color;
vec3 remainingSection=1.055*pow(color,vec3(0.41666))-vec3(0.055);
#if defined(WEBGL2) || defined(WEBGPU) || defined(NATIVE)
return mix(remainingSection,nearZeroSection,lessThanEqual(color,vec3(0.0031308)));
#else
return
vec3(
color.r<=0.0031308 ? nearZeroSection.r : remainingSection.r,
color.g<=0.0031308 ? nearZeroSection.g : remainingSection.g,
color.b<=0.0031308 ? nearZeroSection.b : remainingSection.b);
#endif
}
#endif
float toLinearSpace(float color)
{
#if USE_EXACT_SRGB_CONVERSIONS
float nearZeroSection=0.0773993808*color;
float remainingSection=pow(0.947867299*(color+0.055),2.4);
return color<=0.04045 ? nearZeroSection : remainingSection;
#else
return pow(color,LinearEncodePowerApprox);
#endif
}
vec3 toLinearSpace(vec3 color)
{
#if USE_EXACT_SRGB_CONVERSIONS
return toLinearSpaceExact(color);
#else
return pow(color,vec3(LinearEncodePowerApprox));
#endif
}
vec4 toLinearSpace(vec4 color)
{
#if USE_EXACT_SRGB_CONVERSIONS
return vec4(toLinearSpaceExact(color.rgb),color.a);
#else
return vec4(pow(color.rgb,vec3(LinearEncodePowerApprox)),color.a);
#endif
}
float toGammaSpace(float color)
{
#if USE_EXACT_SRGB_CONVERSIONS
float nearZeroSection=12.92*color;
float remainingSection=1.055*pow(color,0.41666)-0.055;
return color<=0.0031308 ? nearZeroSection : remainingSection;
#else
return pow(color,GammaEncodePowerApprox);
#endif
}
vec3 toGammaSpace(vec3 color)
{
#if USE_EXACT_SRGB_CONVERSIONS
return toGammaSpaceExact(color);
#else
return pow(color,vec3(GammaEncodePowerApprox));
#endif
}
vec4 toGammaSpace(vec4 color)
{
#if USE_EXACT_SRGB_CONVERSIONS
return vec4(toGammaSpaceExact(color.rgb),color.a);
#else
return vec4(pow(color.rgb,vec3(GammaEncodePowerApprox)),color.a);
#endif
}
float square(float value)
{
return value*value;
}
vec3 square(vec3 value)
{
return value*value;
}
float pow5(float value) {
float sq=value*value;
return sq*sq*value;
}
float getLuminance(vec3 color)
{
return clamp(dot(color,LuminanceEncodeApprox),0.,1.);
}
float getRand(vec2 seed) {
return fract(sin(dot(seed.xy ,vec2(12.9898,78.233)))*43758.5453);
}
float dither(vec2 seed,float varianceAmount) {
float rand=getRand(seed);
float normVariance=varianceAmount/255.0;
float dither=mix(-normVariance,normVariance,rand);
return dither;
}
const float rgbdMaxRange=255.0;
vec4 toRGBD(vec3 color) {
float maxRGB=maxEps(max(color.r,max(color.g,color.b)));
float D =max(rgbdMaxRange/maxRGB,1.);
D =clamp(floor(D)/255.0,0.,1.);
vec3 rgb=color.rgb*D;
rgb=toGammaSpace(rgb);
return vec4(clamp(rgb,0.,1.),D); 
}
vec3 fromRGBD(vec4 rgbd) {
rgbd.rgb=toLinearSpace(rgbd.rgb);
return rgbd.rgb/rgbd.a;
}
vec3 parallaxCorrectNormal( vec3 vertexPos,vec3 origVec,vec3 cubeSize,vec3 cubePos ) {
vec3 invOrigVec=vec3(1.0,1.0,1.0)/origVec;
vec3 halfSize=cubeSize*0.5;
vec3 intersecAtMaxPlane=(cubePos+halfSize-vertexPos)*invOrigVec;
vec3 intersecAtMinPlane=(cubePos-halfSize-vertexPos)*invOrigVec;
vec3 largestIntersec=max(intersecAtMaxPlane,intersecAtMinPlane);
float distance=min(min(largestIntersec.x,largestIntersec.y),largestIntersec.z);
vec3 intersectPositionWS=vertexPos+origVec*distance;
return intersectPositionWS-cubePos;
}
`;U.IncludesShadersStore[Ba]=Ua;const ka="sceneVertexDeclaration",Va=`uniform mat4 viewProjection;
#ifdef MULTIVIEW
uniform mat4 viewProjectionR;
#endif
uniform mat4 view;
uniform mat4 projection;
uniform vec4 vEyePosition;
`;U.IncludesShadersStore[ka]=Va;const Wa="meshVertexDeclaration",za=`uniform mat4 world;
uniform float visibility;
`;U.IncludesShadersStore[Wa]=za;const Ga="shadowMapVertexDeclaration",Xa=`#include<sceneVertexDeclaration>
#include<meshVertexDeclaration>
`;U.IncludesShadersStore[Ga]=Xa;const Ha="sceneUboDeclaration",Ka=`layout(std140,column_major) uniform;
uniform Scene {
mat4 viewProjection;
#ifdef MULTIVIEW
mat4 viewProjectionR;
#endif 
mat4 view;
mat4 projection;
vec4 vEyePosition;
};
`;U.IncludesShadersStore[Ha]=Ka;const Ya="meshUboDeclaration",Za=`#ifdef WEBGL2
uniform mat4 world;
uniform float visibility;
#else
layout(std140,column_major) uniform;
uniform Mesh
{
mat4 world;
float visibility;
};
#endif
#define WORLD_UBO
`;U.IncludesShadersStore[Ya]=Za;const qa="shadowMapUboDeclaration",ja=`layout(std140,column_major) uniform;
#include<sceneUboDeclaration>
#include<meshUboDeclaration>
`;U.IncludesShadersStore[qa]=ja;const $a="shadowMapVertexExtraDeclaration",Qa=`#if SM_NORMALBIAS==1
uniform vec3 lightDataSM;
#endif
uniform vec3 biasAndScaleSM;
uniform vec2 depthValuesSM;
varying float vDepthMetricSM;
#if SM_USEDISTANCE==1
varying vec3 vPositionWSM;
#endif
#if defined(SM_DEPTHCLAMP) && SM_DEPTHCLAMP==1
varying float zSM;
#endif
`;U.IncludesShadersStore[$a]=Qa;const Ja="clipPlaneVertexDeclaration",eo=`#ifdef CLIPPLANE
uniform vec4 vClipPlane;
varying float fClipDistance;
#endif
#ifdef CLIPPLANE2
uniform vec4 vClipPlane2;
varying float fClipDistance2;
#endif
#ifdef CLIPPLANE3
uniform vec4 vClipPlane3;
varying float fClipDistance3;
#endif
#ifdef CLIPPLANE4
uniform vec4 vClipPlane4;
varying float fClipDistance4;
#endif
#ifdef CLIPPLANE5
uniform vec4 vClipPlane5;
varying float fClipDistance5;
#endif
#ifdef CLIPPLANE6
uniform vec4 vClipPlane6;
varying float fClipDistance6;
#endif
`;U.IncludesShadersStore[Ja]=eo;const to="morphTargetsVertexGlobal",io=`#ifdef MORPHTARGETS
#ifdef MORPHTARGETS_TEXTURE
float vertexID;
#endif
#endif
`;U.IncludesShadersStore[to]=io;const so="morphTargetsVertex",ro=`#ifdef MORPHTARGETS
#ifdef MORPHTARGETS_TEXTURE 
vertexID=float(gl_VertexID)*morphTargetTextureInfo.x;
positionUpdated+=(readVector3FromRawSampler({X},vertexID)-position)*morphTargetInfluences[{X}];
vertexID+=1.0;
#ifdef MORPHTARGETS_NORMAL
normalUpdated+=(readVector3FromRawSampler({X},vertexID) -normal)*morphTargetInfluences[{X}];
vertexID+=1.0;
#endif
#ifdef MORPHTARGETS_UV
uvUpdated+=(readVector3FromRawSampler({X},vertexID).xy-uv)*morphTargetInfluences[{X}];
vertexID+=1.0;
#endif
#ifdef MORPHTARGETS_TANGENT
tangentUpdated.xyz+=(readVector3FromRawSampler({X},vertexID) -tangent.xyz)*morphTargetInfluences[{X}];
#endif
#else
positionUpdated+=(position{X}-position)*morphTargetInfluences[{X}];
#ifdef MORPHTARGETS_NORMAL
normalUpdated+=(normal{X}-normal)*morphTargetInfluences[{X}];
#endif
#ifdef MORPHTARGETS_TANGENT
tangentUpdated.xyz+=(tangent{X}-tangent.xyz)*morphTargetInfluences[{X}];
#endif
#ifdef MORPHTARGETS_UV
uvUpdated+=(uv_{X}-uv)*morphTargetInfluences[{X}];
#endif
#endif
#endif
`;U.IncludesShadersStore[so]=ro;const no="instancesVertex",ao=`#ifdef INSTANCES
mat4 finalWorld=mat4(world0,world1,world2,world3);
#if defined(PREPASS_VELOCITY) || defined(VELOCITY)
mat4 finalPreviousWorld=mat4(previousWorld0,previousWorld1,previousWorld2,previousWorld3);
#endif
#ifdef THIN_INSTANCES
finalWorld=world*finalWorld;
#if defined(PREPASS_VELOCITY) || defined(VELOCITY)
finalPreviousWorld=previousWorld*finalPreviousWorld;
#endif
#endif
#else
mat4 finalWorld=world;
#if defined(PREPASS_VELOCITY) || defined(VELOCITY)
mat4 finalPreviousWorld=previousWorld;
#endif
#endif
`;U.IncludesShadersStore[no]=ao;const oo="bonesVertex",ho=`#ifndef BAKED_VERTEX_ANIMATION_TEXTURE
#if NUM_BONE_INFLUENCERS>0
mat4 influence;
#ifdef BONETEXTURE
influence=readMatrixFromRawSampler(boneSampler,matricesIndices[0])*matricesWeights[0];
#if NUM_BONE_INFLUENCERS>1
influence+=readMatrixFromRawSampler(boneSampler,matricesIndices[1])*matricesWeights[1];
#endif
#if NUM_BONE_INFLUENCERS>2
influence+=readMatrixFromRawSampler(boneSampler,matricesIndices[2])*matricesWeights[2];
#endif
#if NUM_BONE_INFLUENCERS>3
influence+=readMatrixFromRawSampler(boneSampler,matricesIndices[3])*matricesWeights[3];
#endif
#if NUM_BONE_INFLUENCERS>4
influence+=readMatrixFromRawSampler(boneSampler,matricesIndicesExtra[0])*matricesWeightsExtra[0];
#endif
#if NUM_BONE_INFLUENCERS>5
influence+=readMatrixFromRawSampler(boneSampler,matricesIndicesExtra[1])*matricesWeightsExtra[1];
#endif
#if NUM_BONE_INFLUENCERS>6
influence+=readMatrixFromRawSampler(boneSampler,matricesIndicesExtra[2])*matricesWeightsExtra[2];
#endif
#if NUM_BONE_INFLUENCERS>7
influence+=readMatrixFromRawSampler(boneSampler,matricesIndicesExtra[3])*matricesWeightsExtra[3];
#endif
#else
influence=mBones[int(matricesIndices[0])]*matricesWeights[0];
#if NUM_BONE_INFLUENCERS>1
influence+=mBones[int(matricesIndices[1])]*matricesWeights[1];
#endif
#if NUM_BONE_INFLUENCERS>2
influence+=mBones[int(matricesIndices[2])]*matricesWeights[2];
#endif
#if NUM_BONE_INFLUENCERS>3
influence+=mBones[int(matricesIndices[3])]*matricesWeights[3];
#endif
#if NUM_BONE_INFLUENCERS>4
influence+=mBones[int(matricesIndicesExtra[0])]*matricesWeightsExtra[0];
#endif
#if NUM_BONE_INFLUENCERS>5
influence+=mBones[int(matricesIndicesExtra[1])]*matricesWeightsExtra[1];
#endif
#if NUM_BONE_INFLUENCERS>6
influence+=mBones[int(matricesIndicesExtra[2])]*matricesWeightsExtra[2];
#endif
#if NUM_BONE_INFLUENCERS>7
influence+=mBones[int(matricesIndicesExtra[3])]*matricesWeightsExtra[3];
#endif
#endif
finalWorld=finalWorld*influence;
#endif
#endif
`;U.IncludesShadersStore[oo]=ho;const lo="bakedVertexAnimation",co=`#ifdef BAKED_VERTEX_ANIMATION_TEXTURE
{
#ifdef INSTANCES
#define BVASNAME bakedVertexAnimationSettingsInstanced
#else
#define BVASNAME bakedVertexAnimationSettings
#endif
float VATStartFrame=BVASNAME.x;
float VATEndFrame=BVASNAME.y;
float VATOffsetFrame=BVASNAME.z;
float VATSpeed=BVASNAME.w;
float totalFrames=VATEndFrame-VATStartFrame+1.0;
float time=bakedVertexAnimationTime*VATSpeed/totalFrames;
float frameCorrection=time<1.0 ? 0.0 : 1.0;
float numOfFrames=totalFrames-frameCorrection;
float VATFrameNum=fract(time)*numOfFrames;
VATFrameNum=mod(VATFrameNum+VATOffsetFrame,numOfFrames);
VATFrameNum=floor(VATFrameNum);
VATFrameNum+=VATStartFrame+frameCorrection;
mat4 VATInfluence;
VATInfluence=readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndices[0],VATFrameNum)*matricesWeights[0];
#if NUM_BONE_INFLUENCERS>1
VATInfluence+=readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndices[1],VATFrameNum)*matricesWeights[1];
#endif
#if NUM_BONE_INFLUENCERS>2
VATInfluence+=readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndices[2],VATFrameNum)*matricesWeights[2];
#endif
#if NUM_BONE_INFLUENCERS>3
VATInfluence+=readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndices[3],VATFrameNum)*matricesWeights[3];
#endif
#if NUM_BONE_INFLUENCERS>4
VATInfluence+=readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndicesExtra[0],VATFrameNum)*matricesWeightsExtra[0];
#endif
#if NUM_BONE_INFLUENCERS>5
VATInfluence+=readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndicesExtra[1],VATFrameNum)*matricesWeightsExtra[1];
#endif
#if NUM_BONE_INFLUENCERS>6
VATInfluence+=readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndicesExtra[2],VATFrameNum)*matricesWeightsExtra[2];
#endif
#if NUM_BONE_INFLUENCERS>7
VATInfluence+=readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndicesExtra[3],VATFrameNum)*matricesWeightsExtra[3];
#endif
finalWorld=finalWorld*VATInfluence;
}
#endif
`;U.IncludesShadersStore[lo]=co;const uo="shadowMapVertexNormalBias",fo=`#if SM_NORMALBIAS==1
#if SM_DIRECTIONINLIGHTDATA==1
vec3 worldLightDirSM=normalize(-lightDataSM.xyz);
#else
vec3 directionToLightSM=lightDataSM.xyz-worldPos.xyz;
vec3 worldLightDirSM=normalize(directionToLightSM);
#endif
float ndlSM=dot(vNormalW,worldLightDirSM);
float sinNLSM=sqrt(1.0-ndlSM*ndlSM);
float normalBiasSM=biasAndScaleSM.y*sinNLSM;
worldPos.xyz-=vNormalW*normalBiasSM;
#endif
`;U.IncludesShadersStore[uo]=fo;const _o="shadowMapVertexMetric",go=`#if SM_USEDISTANCE==1
vPositionWSM=worldPos.xyz;
#endif
#if SM_DEPTHTEXTURE==1
#ifdef IS_NDC_HALF_ZRANGE
#define BIASFACTOR 0.5
#else
#define BIASFACTOR 1.0
#endif
#ifdef USE_REVERSE_DEPTHBUFFER
gl_Position.z-=biasAndScaleSM.x*gl_Position.w*BIASFACTOR;
#else
gl_Position.z+=biasAndScaleSM.x*gl_Position.w*BIASFACTOR;
#endif
#endif
#if defined(SM_DEPTHCLAMP) && SM_DEPTHCLAMP==1
zSM=gl_Position.z;
gl_Position.z=0.0;
#elif SM_USEDISTANCE==0
#ifdef USE_REVERSE_DEPTHBUFFER
vDepthMetricSM=(-gl_Position.z+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;
#else
vDepthMetricSM=(gl_Position.z+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;
#endif
#endif
`;U.IncludesShadersStore[_o]=go;const po="clipPlaneVertex",mo=`#ifdef CLIPPLANE
fClipDistance=dot(worldPos,vClipPlane);
#endif
#ifdef CLIPPLANE2
fClipDistance2=dot(worldPos,vClipPlane2);
#endif
#ifdef CLIPPLANE3
fClipDistance3=dot(worldPos,vClipPlane3);
#endif
#ifdef CLIPPLANE4
fClipDistance4=dot(worldPos,vClipPlane4);
#endif
#ifdef CLIPPLANE5
fClipDistance5=dot(worldPos,vClipPlane5);
#endif
#ifdef CLIPPLANE6
fClipDistance6=dot(worldPos,vClipPlane6);
#endif
`;U.IncludesShadersStore[po]=mo;const Eo="shadowMapVertexShader",vo=`attribute vec3 position;
#ifdef NORMAL
attribute vec3 normal;
#endif
#include<bonesDeclaration>
#include<bakedVertexAnimationDeclaration>
#include<morphTargetsVertexGlobalDeclaration>
#include<morphTargetsVertexDeclaration>[0..maxSimultaneousMorphTargets]
#ifdef INSTANCES
attribute vec4 world0;
attribute vec4 world1;
attribute vec4 world2;
attribute vec4 world3;
#endif
#include<helperFunctions>
#include<__decl__shadowMapVertex>
#ifdef ALPHATEXTURE
varying vec2 vUV;
uniform mat4 diffuseMatrix;
#ifdef UV1
attribute vec2 uv;
#endif
#ifdef UV2
attribute vec2 uv2;
#endif
#endif
#include<shadowMapVertexExtraDeclaration>
#include<clipPlaneVertexDeclaration>
#define CUSTOM_VERTEX_DEFINITIONS
void main(void)
{
vec3 positionUpdated=position;
#ifdef UV1
vec2 uvUpdated=uv;
#endif
#ifdef NORMAL
vec3 normalUpdated=normal;
#endif
#include<morphTargetsVertexGlobal>
#include<morphTargetsVertex>[0..maxSimultaneousMorphTargets]
#include<instancesVertex>
#include<bonesVertex>
#include<bakedVertexAnimation>
vec4 worldPos=finalWorld*vec4(positionUpdated,1.0);
#ifdef NORMAL
mat3 normWorldSM=mat3(finalWorld);
#if defined(INSTANCES) && defined(THIN_INSTANCES)
vec3 vNormalW=normalUpdated/vec3(dot(normWorldSM[0],normWorldSM[0]),dot(normWorldSM[1],normWorldSM[1]),dot(normWorldSM[2],normWorldSM[2]));
vNormalW=normalize(normWorldSM*vNormalW);
#else
#ifdef NONUNIFORMSCALING
normWorldSM=transposeMat3(inverseMat3(normWorldSM));
#endif
vec3 vNormalW=normalize(normWorldSM*normalUpdated);
#endif
#endif
#include<shadowMapVertexNormalBias>
gl_Position=viewProjection*worldPos;
#include<shadowMapVertexMetric>
#ifdef ALPHATEXTURE
#ifdef UV1
vUV=vec2(diffuseMatrix*vec4(uvUpdated,1.0,0.0));
#endif
#ifdef UV2
vUV=vec2(diffuseMatrix*vec4(uv2,1.0,0.0));
#endif
#endif
#include<clipPlaneVertex>
}`;U.ShadersStore[Eo]=vo;const To="depthBoxBlurPixelShader",bo=`varying vec2 vUV;
uniform sampler2D textureSampler;
uniform vec2 screenSize;
#define CUSTOM_FRAGMENT_DEFINITIONS
void main(void)
{
vec4 colorDepth=vec4(0.0);
for (int x=-OFFSET; x<=OFFSET; x++)
for (int y=-OFFSET; y<=OFFSET; y++)
colorDepth+=texture2D(textureSampler,vUV+vec2(x,y)/screenSize);
gl_FragColor=(colorDepth/float((OFFSET*2+1)*(OFFSET*2+1)));
}`;U.ShadersStore[To]=bo;const So="shadowMapFragmentSoftTransparentShadow",xo=`#if SM_SOFTTRANSPARENTSHADOW==1
if ((bayerDither8(floor(mod(gl_FragCoord.xy,8.0))))/64.0>=softTransparentShadowSM*alpha) discard;
#endif
`;U.IncludesShadersStore[So]=xo;class G{constructor(e,t,i,s){this.onBeforeShadowMapRenderObservable=new F,this.onAfterShadowMapRenderObservable=new F,this.onBeforeShadowMapRenderMeshObservable=new F,this.onAfterShadowMapRenderMeshObservable=new F,this._bias=5e-5,this._normalBias=0,this._blurBoxOffset=1,this._blurScale=2,this._blurKernel=1,this._useKernelBlur=!1,this._filter=G.FILTER_NONE,this._filteringQuality=G.QUALITY_HIGH,this._contactHardeningLightSizeUVRatio=.1,this._darkness=0,this._transparencyShadow=!1,this.enableSoftTransparentShadow=!1,this.useOpacityTextureForTransparentShadow=!1,this.frustumEdgeFalloff=0,this.forceBackFacesOnly=!1,this._lightDirection=p.Zero(),this._viewMatrix=x.Zero(),this._projectionMatrix=x.Zero(),this._transformMatrix=x.Zero(),this._cachedPosition=new p(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._cachedDirection=new p(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._currentFaceIndex=0,this._currentFaceIndexCache=0,this._defaultTextureMatrix=x.Identity(),this._mapSize=e,this._light=t,this._scene=t.getScene(),this._camera=s??null;let r=t._shadowGenerators;r||(r=t._shadowGenerators=new Map),r.set(this._camera,this),this.id=t.id,this._useUBO=this._scene.getEngine().supportsUniformBuffers,this._useUBO&&(this._sceneUBOs=[],this._sceneUBOs.push(this._scene.createSceneUniformBuffer(`Scene for Shadow Generator (light "${this._light.name}")`))),G._SceneComponentInitialization(this._scene);const n=this._scene.getEngine().getCaps();i?n.textureFloatRender&&n.textureFloatLinearFiltering?this._textureType=1:n.textureHalfFloatRender&&n.textureHalfFloatLinearFiltering?this._textureType=2:this._textureType=0:n.textureHalfFloatRender&&n.textureHalfFloatLinearFiltering?this._textureType=2:n.textureFloatRender&&n.textureFloatLinearFiltering?this._textureType=1:this._textureType=0,this._initializeGenerator(),this._applyFilterValues()}get bias(){return this._bias}set bias(e){this._bias=e}get normalBias(){return this._normalBias}set normalBias(e){this._normalBias=e}get blurBoxOffset(){return this._blurBoxOffset}set blurBoxOffset(e){this._blurBoxOffset!==e&&(this._blurBoxOffset=e,this._disposeBlurPostProcesses())}get blurScale(){return this._blurScale}set blurScale(e){this._blurScale!==e&&(this._blurScale=e,this._disposeBlurPostProcesses())}get blurKernel(){return this._blurKernel}set blurKernel(e){this._blurKernel!==e&&(this._blurKernel=e,this._disposeBlurPostProcesses())}get useKernelBlur(){return this._useKernelBlur}set useKernelBlur(e){this._useKernelBlur!==e&&(this._useKernelBlur=e,this._disposeBlurPostProcesses())}get depthScale(){return this._depthScale!==void 0?this._depthScale:this._light.getDepthScale()}set depthScale(e){this._depthScale=e}_validateFilter(e){return e}get filter(){return this._filter}set filter(e){if(e=this._validateFilter(e),this._light.needCube()){if(e===G.FILTER_BLUREXPONENTIALSHADOWMAP){this.useExponentialShadowMap=!0;return}else if(e===G.FILTER_BLURCLOSEEXPONENTIALSHADOWMAP){this.useCloseExponentialShadowMap=!0;return}else if(e===G.FILTER_PCF||e===G.FILTER_PCSS){this.usePoissonSampling=!0;return}}if((e===G.FILTER_PCF||e===G.FILTER_PCSS)&&!this._scene.getEngine()._features.supportShadowSamplers){this.usePoissonSampling=!0;return}this._filter!==e&&(this._filter=e,this._disposeBlurPostProcesses(),this._applyFilterValues(),this._light._markMeshesAsLightDirty())}get usePoissonSampling(){return this.filter===G.FILTER_POISSONSAMPLING}set usePoissonSampling(e){const t=this._validateFilter(G.FILTER_POISSONSAMPLING);!e&&this.filter!==G.FILTER_POISSONSAMPLING||(this.filter=e?t:G.FILTER_NONE)}get useExponentialShadowMap(){return this.filter===G.FILTER_EXPONENTIALSHADOWMAP}set useExponentialShadowMap(e){const t=this._validateFilter(G.FILTER_EXPONENTIALSHADOWMAP);!e&&this.filter!==G.FILTER_EXPONENTIALSHADOWMAP||(this.filter=e?t:G.FILTER_NONE)}get useBlurExponentialShadowMap(){return this.filter===G.FILTER_BLUREXPONENTIALSHADOWMAP}set useBlurExponentialShadowMap(e){const t=this._validateFilter(G.FILTER_BLUREXPONENTIALSHADOWMAP);!e&&this.filter!==G.FILTER_BLUREXPONENTIALSHADOWMAP||(this.filter=e?t:G.FILTER_NONE)}get useCloseExponentialShadowMap(){return this.filter===G.FILTER_CLOSEEXPONENTIALSHADOWMAP}set useCloseExponentialShadowMap(e){const t=this._validateFilter(G.FILTER_CLOSEEXPONENTIALSHADOWMAP);!e&&this.filter!==G.FILTER_CLOSEEXPONENTIALSHADOWMAP||(this.filter=e?t:G.FILTER_NONE)}get useBlurCloseExponentialShadowMap(){return this.filter===G.FILTER_BLURCLOSEEXPONENTIALSHADOWMAP}set useBlurCloseExponentialShadowMap(e){const t=this._validateFilter(G.FILTER_BLURCLOSEEXPONENTIALSHADOWMAP);!e&&this.filter!==G.FILTER_BLURCLOSEEXPONENTIALSHADOWMAP||(this.filter=e?t:G.FILTER_NONE)}get usePercentageCloserFiltering(){return this.filter===G.FILTER_PCF}set usePercentageCloserFiltering(e){const t=this._validateFilter(G.FILTER_PCF);!e&&this.filter!==G.FILTER_PCF||(this.filter=e?t:G.FILTER_NONE)}get filteringQuality(){return this._filteringQuality}set filteringQuality(e){this._filteringQuality!==e&&(this._filteringQuality=e,this._disposeBlurPostProcesses(),this._applyFilterValues(),this._light._markMeshesAsLightDirty())}get useContactHardeningShadow(){return this.filter===G.FILTER_PCSS}set useContactHardeningShadow(e){const t=this._validateFilter(G.FILTER_PCSS);!e&&this.filter!==G.FILTER_PCSS||(this.filter=e?t:G.FILTER_NONE)}get contactHardeningLightSizeUVRatio(){return this._contactHardeningLightSizeUVRatio}set contactHardeningLightSizeUVRatio(e){this._contactHardeningLightSizeUVRatio=e}get darkness(){return this._darkness}set darkness(e){this.setDarkness(e)}getDarkness(){return this._darkness}setDarkness(e){return e>=1?this._darkness=1:e<=0?this._darkness=0:this._darkness=e,this}get transparencyShadow(){return this._transparencyShadow}set transparencyShadow(e){this.setTransparencyShadow(e)}setTransparencyShadow(e){return this._transparencyShadow=e,this}getShadowMap(){return this._shadowMap}getShadowMapForRendering(){return this._shadowMap2?this._shadowMap2:this._shadowMap}getClassName(){return G.CLASSNAME}addShadowCaster(e,t=!0){if(!this._shadowMap)return this;if(this._shadowMap.renderList||(this._shadowMap.renderList=[]),this._shadowMap.renderList.indexOf(e)===-1&&this._shadowMap.renderList.push(e),t)for(const i of e.getChildMeshes())this._shadowMap.renderList.indexOf(i)===-1&&this._shadowMap.renderList.push(i);return this}removeShadowCaster(e,t=!0){if(!this._shadowMap||!this._shadowMap.renderList)return this;const i=this._shadowMap.renderList.indexOf(e);if(i!==-1&&this._shadowMap.renderList.splice(i,1),t)for(const s of e.getChildren())this.removeShadowCaster(s);return this}getLight(){return this._light}_getCamera(){var e;return(e=this._camera)!==null&&e!==void 0?e:this._scene.activeCamera}get mapSize(){return this._mapSize}set mapSize(e){this._mapSize=e,this._light._markMeshesAsLightDirty(),this.recreateShadowMap()}_initializeGenerator(){this._light._markMeshesAsLightDirty(),this._initializeShadowMap()}_createTargetRenderTexture(){const e=this._scene.getEngine();e._features.supportDepthStencilTexture?(this._shadowMap=new _t(this._light.name+"_shadowMap",this._mapSize,this._scene,!1,!0,this._textureType,this._light.needCube(),void 0,!1,!1),this._shadowMap.createDepthStencilTexture(e.useReverseDepthBuffer?516:513,!0)):this._shadowMap=new _t(this._light.name+"_shadowMap",this._mapSize,this._scene,!1,!0,this._textureType,this._light.needCube())}_initializeShadowMap(){if(this._createTargetRenderTexture(),this._shadowMap===null)return;this._shadowMap.wrapU=N.CLAMP_ADDRESSMODE,this._shadowMap.wrapV=N.CLAMP_ADDRESSMODE,this._shadowMap.anisotropicFilteringLevel=1,this._shadowMap.updateSamplingMode(N.BILINEAR_SAMPLINGMODE),this._shadowMap.renderParticles=!1,this._shadowMap.ignoreCameraViewport=!0,this._storedUniqueId&&(this._shadowMap.uniqueId=this._storedUniqueId),this._shadowMap.customRenderFunction=this._renderForShadowMap.bind(this),this._shadowMap.customIsReadyFunction=()=>!0;const e=this._scene.getEngine();this._shadowMap.onBeforeBindObservable.add(()=>{var s;this._currentSceneUBO=this._scene.getSceneUniformBuffer(),(s=e._debugPushGroup)===null||s===void 0||s.call(e,`shadow map generation for pass id ${e.currentRenderPassId}`,1)}),this._shadowMap.onBeforeRenderObservable.add(s=>{this._sceneUBOs&&this._scene.setSceneUniformBuffer(this._sceneUBOs[0]),this._currentFaceIndex=s,this._filter===G.FILTER_PCF&&e.setColorWrite(!1),this.getTransformMatrix(),this._scene.setTransformMatrix(this._viewMatrix,this._projectionMatrix),this._useUBO&&(this._scene.getSceneUniformBuffer().unbindEffect(),this._scene.finalizeSceneUbo())}),this._shadowMap.onAfterUnbindObservable.add(()=>{var s,r;if(this._sceneUBOs&&this._scene.setSceneUniformBuffer(this._currentSceneUBO),this._scene.updateTransformMatrix(),this._filter===G.FILTER_PCF&&e.setColorWrite(!0),!this.useBlurExponentialShadowMap&&!this.useBlurCloseExponentialShadowMap){(s=e._debugPopGroup)===null||s===void 0||s.call(e,1);return}const n=this.getShadowMapForRendering();n&&(this._scene.postProcessManager.directRender(this._blurPostProcesses,n.renderTarget,!0),e.unBindFramebuffer(n.renderTarget,!0),(r=e._debugPopGroup)===null||r===void 0||r.call(e,1))});const t=new me(0,0,0,0),i=new me(1,1,1,1);this._shadowMap.onClearObservable.add(s=>{this._filter===G.FILTER_PCF?s.clear(i,!1,!0,!1):this.useExponentialShadowMap||this.useBlurExponentialShadowMap?s.clear(t,!0,!0,!1):s.clear(i,!0,!0,!1)}),this._shadowMap.onResizeObservable.add(s=>{this._storedUniqueId=this._shadowMap.uniqueId,this._mapSize=s.getRenderSize(),this._light._markMeshesAsLightDirty(),this.recreateShadowMap()});for(let s=We.MIN_RENDERINGGROUPS;s<We.MAX_RENDERINGGROUPS;s++)this._shadowMap.setRenderingAutoClearDepthStencil(s,!1)}_initializeBlurRTTAndPostProcesses(){const e=this._scene.getEngine(),t=this._mapSize/this.blurScale;(!this.useKernelBlur||this.blurScale!==1)&&(this._shadowMap2=new _t(this._light.name+"_shadowMap2",t,this._scene,!1,!0,this._textureType,void 0,void 0,!1),this._shadowMap2.wrapU=N.CLAMP_ADDRESSMODE,this._shadowMap2.wrapV=N.CLAMP_ADDRESSMODE,this._shadowMap2.updateSamplingMode(N.BILINEAR_SAMPLINGMODE)),this.useKernelBlur?(this._kernelBlurXPostprocess=new Jt(this._light.name+"KernelBlurX",new ve(1,0),this.blurKernel,1,null,N.BILINEAR_SAMPLINGMODE,e,!1,this._textureType),this._kernelBlurXPostprocess.width=t,this._kernelBlurXPostprocess.height=t,this._kernelBlurXPostprocess.externalTextureSamplerBinding=!0,this._kernelBlurXPostprocess.onApplyObservable.add(i=>{i.setTexture("textureSampler",this._shadowMap)}),this._kernelBlurYPostprocess=new Jt(this._light.name+"KernelBlurY",new ve(0,1),this.blurKernel,1,null,N.BILINEAR_SAMPLINGMODE,e,!1,this._textureType),this._kernelBlurXPostprocess.autoClear=!1,this._kernelBlurYPostprocess.autoClear=!1,this._textureType===0&&(this._kernelBlurXPostprocess.packedFloat=!0,this._kernelBlurYPostprocess.packedFloat=!0),this._blurPostProcesses=[this._kernelBlurXPostprocess,this._kernelBlurYPostprocess]):(this._boxBlurPostprocess=new Me(this._light.name+"DepthBoxBlur","depthBoxBlur",["screenSize","boxOffset"],[],1,null,N.BILINEAR_SAMPLINGMODE,e,!1,"#define OFFSET "+this._blurBoxOffset,this._textureType),this._boxBlurPostprocess.externalTextureSamplerBinding=!0,this._boxBlurPostprocess.onApplyObservable.add(i=>{i.setFloat2("screenSize",t,t),i.setTexture("textureSampler",this._shadowMap)}),this._boxBlurPostprocess.autoClear=!1,this._blurPostProcesses=[this._boxBlurPostprocess])}_renderForShadowMap(e,t,i,s){let r;if(s.length)for(r=0;r<s.length;r++)this._renderSubMeshForShadowMap(s.data[r]);for(r=0;r<e.length;r++)this._renderSubMeshForShadowMap(e.data[r]);for(r=0;r<t.length;r++)this._renderSubMeshForShadowMap(t.data[r]);if(this._transparencyShadow)for(r=0;r<i.length;r++)this._renderSubMeshForShadowMap(i.data[r],!0);else for(r=0;r<i.length;r++)i.data[r].getEffectiveMesh()._internalAbstractMeshDataInfo._isActiveIntermediate=!1}_bindCustomEffectForRenderSubMeshForShadowMap(e,t,i){t.setMatrix("viewProjection",this.getTransformMatrix())}_renderSubMeshForShadowMap(e,t=!1){var i,s;const r=e.getRenderingMesh(),n=e.getEffectiveMesh(),a=this._scene,o=a.getEngine(),h=e.getMaterial();if(n._internalAbstractMeshDataInfo._isActiveIntermediate=!1,!h||e.verticesCount===0||e._renderId===a.getRenderId())return;const l=n._getWorldMatrixDeterminant()<0;let u=(i=r.overrideMaterialSideOrientation)!==null&&i!==void 0?i:h.sideOrientation;l&&(u=u===0?1:0);const d=u===0;o.setState(h.backFaceCulling,void 0,void 0,d,h.cullBackFaces);const f=r._getInstancesRenderList(e._id,!!e.getReplacementMesh());if(f.mustReturn)return;const _=o.getCaps().instancedArrays&&(f.visibleInstances[e._id]!==null&&f.visibleInstances[e._id]!==void 0||r.hasThinInstances);if(!(this.customAllowRendering&&!this.customAllowRendering(e)))if(this.isReady(e,_,t)){e._renderId=a.getRenderId();const E=h.shadowDepthWrapper,m=(s=E==null?void 0:E.getEffect(e,this,o.currentRenderPassId))!==null&&s!==void 0?s:e._getDrawWrapper(),v=mi.GetEffect(m);o.enableEffect(m),_||r._bind(e,v,h.fillMode),this.getTransformMatrix(),v.setFloat3("biasAndScaleSM",this.bias,this.normalBias,this.depthScale),this.getLight().getTypeID()===he.LIGHTTYPEID_DIRECTIONALLIGHT?v.setVector3("lightDataSM",this._cachedDirection):v.setVector3("lightDataSM",this._cachedPosition);const S=this._getCamera();if(S&&v.setFloat2("depthValuesSM",this.getLight().getDepthMinZ(S),this.getLight().getDepthMinZ(S)+this.getLight().getDepthMaxZ(S)),t&&this.enableSoftTransparentShadow&&v.setFloat("softTransparentShadowSM",n.visibility*h.alpha),E)e._setMainDrawWrapperOverride(m),E.standalone?E.baseMaterial.bindForSubMesh(n.getWorldMatrix(),r,e):h.bindForSubMesh(n.getWorldMatrix(),r,e),e._setMainDrawWrapperOverride(null);else{if(this.useOpacityTextureForTransparentShadow){const A=h.opacityTexture;A&&(v.setTexture("diffuseSampler",A),v.setMatrix("diffuseMatrix",A.getTextureMatrix()||this._defaultTextureMatrix))}else if(h.needAlphaTesting()||h.needAlphaBlending()){const A=h.getAlphaTestTexture();A&&(v.setTexture("diffuseSampler",A),v.setMatrix("diffuseMatrix",A.getTextureMatrix()||this._defaultTextureMatrix))}if(r.useBones&&r.computeBonesUsingShaders&&r.skeleton){const A=r.skeleton;if(A.isUsingTextureForMatrices){const C=A.getTransformMatrixTexture(r);if(!C)return;v.setTexture("boneSampler",C),v.setFloat("boneTextureWidth",4*(A.bones.length+1))}else v.setMatrices("mBones",A.getTransformMatrices(r))}ie.BindMorphTargetParameters(r,v),r.morphTargetManager&&r.morphTargetManager.isUsingTextureForTargets&&r.morphTargetManager._bind(v),rs(v,h,a)}!this._useUBO&&!E&&this._bindCustomEffectForRenderSubMeshForShadowMap(e,v,n),ie.BindSceneUniformBuffer(v,this._scene.getSceneUniformBuffer()),this._scene.getSceneUniformBuffer().bindUniformBuffer();const y=n.getWorldMatrix();_&&(n.getMeshUniformBuffer().bindToEffect(v,"Mesh"),n.transferToEffect(y)),this.forceBackFacesOnly&&o.setState(!0,0,!1,!0,h.cullBackFaces),this.onBeforeShadowMapRenderMeshObservable.notifyObservers(r),this.onBeforeShadowMapRenderObservable.notifyObservers(v),r._processRendering(n,e,v,h.fillMode,f,_,(A,C)=>{n!==r&&!A?(r.getMeshUniformBuffer().bindToEffect(v,"Mesh"),r.transferToEffect(C)):(n.getMeshUniformBuffer().bindToEffect(v,"Mesh"),n.transferToEffect(A?C:y))}),this.forceBackFacesOnly&&o.setState(!0,0,!1,!1,h.cullBackFaces),this.onAfterShadowMapRenderObservable.notifyObservers(v),this.onAfterShadowMapRenderMeshObservable.notifyObservers(r)}else this._shadowMap&&this._shadowMap.resetRefreshCounter()}_applyFilterValues(){this._shadowMap&&(this.filter===G.FILTER_NONE||this.filter===G.FILTER_PCSS?this._shadowMap.updateSamplingMode(N.NEAREST_SAMPLINGMODE):this._shadowMap.updateSamplingMode(N.BILINEAR_SAMPLINGMODE))}forceCompilation(e,t){const i={useInstances:!1,...t},s=this.getShadowMap();if(!s){e&&e(this);return}const r=s.renderList;if(!r){e&&e(this);return}const n=new Array;for(const h of r)n.push(...h.subMeshes);if(n.length===0){e&&e(this);return}let a=0;const o=()=>{var h,l;if(!(!this._scene||!this._scene.getEngine())){for(;this.isReady(n[a],i.useInstances,(l=(h=n[a].getMaterial())===null||h===void 0?void 0:h.needAlphaBlendingForMesh(n[a].getMesh()))!==null&&l!==void 0?l:!1);)if(a++,a>=n.length){e&&e(this);return}setTimeout(o,16)}};o()}forceCompilationAsync(e){return new Promise(t=>{this.forceCompilation(()=>{t()},e)})}_isReadyCustomDefines(e,t,i){}_prepareShadowDefines(e,t,i,s){i.push("#define SM_LIGHTTYPE_"+this._light.getClassName().toUpperCase()),i.push("#define SM_FLOAT "+(this._textureType!==0?"1":"0")),i.push("#define SM_ESM "+(this.useExponentialShadowMap||this.useBlurExponentialShadowMap?"1":"0")),i.push("#define SM_DEPTHTEXTURE "+(this.usePercentageCloserFiltering||this.useContactHardeningShadow?"1":"0"));const r=e.getMesh();return i.push("#define SM_NORMALBIAS "+(this.normalBias&&r.isVerticesDataPresent(g.NormalKind)?"1":"0")),i.push("#define SM_DIRECTIONINLIGHTDATA "+(this.getLight().getTypeID()===he.LIGHTTYPEID_DIRECTIONALLIGHT?"1":"0")),i.push("#define SM_USEDISTANCE "+(this._light.needCube()?"1":"0")),i.push("#define SM_SOFTTRANSPARENTSHADOW "+(this.enableSoftTransparentShadow&&s?"1":"0")),this._isReadyCustomDefines(i,e,t),i}isReady(e,t,i){var s;const r=e.getMaterial(),n=r==null?void 0:r.shadowDepthWrapper;if(!r)return!1;const a=[];if(this._prepareShadowDefines(e,t,a,i),n){if(!n.isReadyForSubMesh(e,a,this,t,this._scene.getEngine().currentRenderPassId))return!1}else{const o=e._getDrawWrapper(void 0,!0);let h=o.effect,l=o.defines;const u=[g.PositionKind],d=e.getMesh();this.normalBias&&d.isVerticesDataPresent(g.NormalKind)&&(u.push(g.NormalKind),a.push("#define NORMAL"),d.nonUniformScaling&&a.push("#define NONUNIFORMSCALING"));const f=r==null?void 0:r.needAlphaTesting(),_=r==null?void 0:r.needAlphaBlending();if(r&&(f||_)){let y=null;if(this.useOpacityTextureForTransparentShadow?y=r.opacityTexture:y=r.getAlphaTestTexture(),y){if(!y.isReady())return!1;const A=(s=r.alphaCutOff)!==null&&s!==void 0?s:G.DEFAULT_ALPHA_CUTOFF;a.push("#define ALPHATEXTURE"),f&&a.push(`#define ALPHATESTVALUE ${A}${A%1===0?".":""}`),d.isVerticesDataPresent(g.UVKind)&&(u.push(g.UVKind),a.push("#define UV1")),d.isVerticesDataPresent(g.UV2Kind)&&y.coordinatesIndex===1&&(u.push(g.UV2Kind),a.push("#define UV2"))}}const E=new zs;if(d.useBones&&d.computeBonesUsingShaders&&d.skeleton){u.push(g.MatricesIndicesKind),u.push(g.MatricesWeightsKind),d.numBoneInfluencers>4&&(u.push(g.MatricesIndicesExtraKind),u.push(g.MatricesWeightsExtraKind));const y=d.skeleton;a.push("#define NUM_BONE_INFLUENCERS "+d.numBoneInfluencers),d.numBoneInfluencers>0&&E.addCPUSkinningFallback(0,d),y.isUsingTextureForMatrices?a.push("#define BONETEXTURE"):a.push("#define BonesPerMesh "+(y.bones.length+1))}else a.push("#define NUM_BONE_INFLUENCERS 0");const m=d.morphTargetManager;let v=0;if(m&&m.numInfluencers>0&&(a.push("#define MORPHTARGETS"),v=m.numInfluencers,a.push("#define NUM_MORPH_INFLUENCERS "+v),m.isUsingTextureForTargets&&a.push("#define MORPHTARGETS_TEXTURE"),ie.PrepareAttributesForMorphTargetsInfluencers(u,d,v)),Os(r,this._scene,a),t&&(a.push("#define INSTANCES"),ie.PushAttributesForInstances(u),e.getRenderingMesh().hasThinInstances&&a.push("#define THIN_INSTANCES")),this.customShaderOptions&&this.customShaderOptions.defines)for(const y of this.customShaderOptions.defines)a.indexOf(y)===-1&&a.push(y);const S=a.join(`
`);if(l!==S){l=S;let y="shadowMap";const A=["world","mBones","viewProjection","diffuseMatrix","lightDataSM","depthValuesSM","biasAndScaleSM","morphTargetInfluences","boneTextureWidth","softTransparentShadowSM","morphTargetTextureInfo","morphTargetTextureIndices"],C=["diffuseSampler","boneSampler","morphTargets"],b=["Scene","Mesh"];if(ss(A),this.customShaderOptions){if(y=this.customShaderOptions.shaderName,this.customShaderOptions.attributes)for(const L of this.customShaderOptions.attributes)u.indexOf(L)===-1&&u.push(L);if(this.customShaderOptions.uniforms)for(const L of this.customShaderOptions.uniforms)A.indexOf(L)===-1&&A.push(L);if(this.customShaderOptions.samplers)for(const L of this.customShaderOptions.samplers)C.indexOf(L)===-1&&C.push(L)}const M=this._scene.getEngine();h=M.createEffect(y,{attributes:u,uniformsNames:A,uniformBuffersNames:b,samplers:C,defines:S,fallbacks:E,onCompiled:null,onError:null,indexParameters:{maxSimultaneousMorphTargets:v}},M),o.setEffect(h,l)}if(!h.isReady())return!1}return(this.useBlurExponentialShadowMap||this.useBlurCloseExponentialShadowMap)&&(!this._blurPostProcesses||!this._blurPostProcesses.length)&&this._initializeBlurRTTAndPostProcesses(),!(this._kernelBlurXPostprocess&&!this._kernelBlurXPostprocess.isReady()||this._kernelBlurYPostprocess&&!this._kernelBlurYPostprocess.isReady()||this._boxBlurPostprocess&&!this._boxBlurPostprocess.isReady())}prepareDefines(e,t){const i=this._scene,s=this._light;!i.shadowsEnabled||!s.shadowEnabled||(e["SHADOW"+t]=!0,this.useContactHardeningShadow?(e["SHADOWPCSS"+t]=!0,this._filteringQuality===G.QUALITY_LOW?e["SHADOWLOWQUALITY"+t]=!0:this._filteringQuality===G.QUALITY_MEDIUM&&(e["SHADOWMEDIUMQUALITY"+t]=!0)):this.usePercentageCloserFiltering?(e["SHADOWPCF"+t]=!0,this._filteringQuality===G.QUALITY_LOW?e["SHADOWLOWQUALITY"+t]=!0:this._filteringQuality===G.QUALITY_MEDIUM&&(e["SHADOWMEDIUMQUALITY"+t]=!0)):this.usePoissonSampling?e["SHADOWPOISSON"+t]=!0:this.useExponentialShadowMap||this.useBlurExponentialShadowMap?e["SHADOWESM"+t]=!0:(this.useCloseExponentialShadowMap||this.useBlurCloseExponentialShadowMap)&&(e["SHADOWCLOSEESM"+t]=!0),s.needCube()&&(e["SHADOWCUBE"+t]=!0))}bindShadowLight(e,t){const i=this._light;if(!this._scene.shadowsEnabled||!i.shadowEnabled)return;const r=this._getCamera();if(!r)return;const n=this.getShadowMap();n&&(i.needCube()||t.setMatrix("lightMatrix"+e,this.getTransformMatrix()),this._filter===G.FILTER_PCF?(t.setDepthStencilTexture("shadowSampler"+e,this.getShadowMapForRendering()),i._uniformBuffer.updateFloat4("shadowsInfo",this.getDarkness(),n.getSize().width,1/n.getSize().width,this.frustumEdgeFalloff,e)):this._filter===G.FILTER_PCSS?(t.setDepthStencilTexture("shadowSampler"+e,this.getShadowMapForRendering()),t.setTexture("depthSampler"+e,this.getShadowMapForRendering()),i._uniformBuffer.updateFloat4("shadowsInfo",this.getDarkness(),1/n.getSize().width,this._contactHardeningLightSizeUVRatio*n.getSize().width,this.frustumEdgeFalloff,e)):(t.setTexture("shadowSampler"+e,this.getShadowMapForRendering()),i._uniformBuffer.updateFloat4("shadowsInfo",this.getDarkness(),this.blurScale/n.getSize().width,this.depthScale,this.frustumEdgeFalloff,e)),i._uniformBuffer.updateFloat2("depthValues",this.getLight().getDepthMinZ(r),this.getLight().getDepthMinZ(r)+this.getLight().getDepthMaxZ(r),e))}getTransformMatrix(){const e=this._scene;if(this._currentRenderId===e.getRenderId()&&this._currentFaceIndexCache===this._currentFaceIndex)return this._transformMatrix;this._currentRenderId=e.getRenderId(),this._currentFaceIndexCache=this._currentFaceIndex;let t=this._light.position;if(this._light.computeTransformedInformation()&&(t=this._light.transformedPosition),p.NormalizeToRef(this._light.getShadowDirection(this._currentFaceIndex),this._lightDirection),Math.abs(p.Dot(this._lightDirection,p.Up()))===1&&(this._lightDirection.z=1e-13),this._light.needProjectionMatrixCompute()||!this._cachedPosition||!this._cachedDirection||!t.equals(this._cachedPosition)||!this._lightDirection.equals(this._cachedDirection)){this._cachedPosition.copyFrom(t),this._cachedDirection.copyFrom(this._lightDirection),x.LookAtLHToRef(t,t.add(this._lightDirection),p.Up(),this._viewMatrix);const i=this.getShadowMap();if(i){const s=i.renderList;s&&this._light.setShadowProjectionMatrix(this._projectionMatrix,this._viewMatrix,s)}this._viewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix)}return this._transformMatrix}recreateShadowMap(){const e=this._shadowMap;if(!e)return;const t=e.renderList;if(this._disposeRTTandPostProcesses(),this._initializeGenerator(),this.filter=this._filter,this._applyFilterValues(),t){this._shadowMap.renderList||(this._shadowMap.renderList=[]);for(const i of t)this._shadowMap.renderList.push(i)}else this._shadowMap.renderList=null}_disposeBlurPostProcesses(){this._shadowMap2&&(this._shadowMap2.dispose(),this._shadowMap2=null),this._boxBlurPostprocess&&(this._boxBlurPostprocess.dispose(),this._boxBlurPostprocess=null),this._kernelBlurXPostprocess&&(this._kernelBlurXPostprocess.dispose(),this._kernelBlurXPostprocess=null),this._kernelBlurYPostprocess&&(this._kernelBlurYPostprocess.dispose(),this._kernelBlurYPostprocess=null),this._blurPostProcesses=[]}_disposeRTTandPostProcesses(){this._shadowMap&&(this._shadowMap.dispose(),this._shadowMap=null),this._disposeBlurPostProcesses()}_disposeSceneUBOs(){if(this._sceneUBOs){for(const e of this._sceneUBOs)e.dispose();this._sceneUBOs=[]}}dispose(){if(this._disposeRTTandPostProcesses(),this._disposeSceneUBOs(),this._light){if(this._light._shadowGenerators){const e=this._light._shadowGenerators.entries();for(let t=e.next();t.done!==!0;t=e.next()){const[i,s]=t.value;s===this&&this._light._shadowGenerators.delete(i)}this._light._shadowGenerators.size===0&&(this._light._shadowGenerators=null)}this._light._markMeshesAsLightDirty()}this.onBeforeShadowMapRenderMeshObservable.clear(),this.onBeforeShadowMapRenderObservable.clear(),this.onAfterShadowMapRenderMeshObservable.clear(),this.onAfterShadowMapRenderObservable.clear()}serialize(){var e;const t={},i=this.getShadowMap();if(!i)return t;if(t.className=this.getClassName(),t.lightId=this._light.id,t.cameraId=(e=this._camera)===null||e===void 0?void 0:e.id,t.id=this.id,t.mapSize=i.getRenderSize(),t.forceBackFacesOnly=this.forceBackFacesOnly,t.darkness=this.getDarkness(),t.transparencyShadow=this._transparencyShadow,t.frustumEdgeFalloff=this.frustumEdgeFalloff,t.bias=this.bias,t.normalBias=this.normalBias,t.usePercentageCloserFiltering=this.usePercentageCloserFiltering,t.useContactHardeningShadow=this.useContactHardeningShadow,t.contactHardeningLightSizeUVRatio=this.contactHardeningLightSizeUVRatio,t.filteringQuality=this.filteringQuality,t.useExponentialShadowMap=this.useExponentialShadowMap,t.useBlurExponentialShadowMap=this.useBlurExponentialShadowMap,t.useCloseExponentialShadowMap=this.useBlurExponentialShadowMap,t.useBlurCloseExponentialShadowMap=this.useBlurExponentialShadowMap,t.usePoissonSampling=this.usePoissonSampling,t.depthScale=this.depthScale,t.blurBoxOffset=this.blurBoxOffset,t.blurKernel=this.blurKernel,t.blurScale=this.blurScale,t.useKernelBlur=this.useKernelBlur,t.renderList=[],i.renderList)for(let s=0;s<i.renderList.length;s++){const r=i.renderList[s];t.renderList.push(r.id)}return t}static Parse(e,t,i){const s=t.getLightById(e.lightId),r=e.cameraId!==void 0?t.getCameraById(e.cameraId):null,n=i?i(e.mapSize,s,r):new G(e.mapSize,s,void 0,r),a=n.getShadowMap();for(let o=0;o<e.renderList.length;o++)t.getMeshesById(e.renderList[o]).forEach(function(l){a&&(a.renderList||(a.renderList=[]),a.renderList.push(l))});return e.id!==void 0&&(n.id=e.id),n.forceBackFacesOnly=!!e.forceBackFacesOnly,e.darkness!==void 0&&n.setDarkness(e.darkness),e.transparencyShadow&&n.setTransparencyShadow(!0),e.frustumEdgeFalloff!==void 0&&(n.frustumEdgeFalloff=e.frustumEdgeFalloff),e.bias!==void 0&&(n.bias=e.bias),e.normalBias!==void 0&&(n.normalBias=e.normalBias),e.usePercentageCloserFiltering?n.usePercentageCloserFiltering=!0:e.useContactHardeningShadow?n.useContactHardeningShadow=!0:e.usePoissonSampling?n.usePoissonSampling=!0:e.useExponentialShadowMap?n.useExponentialShadowMap=!0:e.useBlurExponentialShadowMap?n.useBlurExponentialShadowMap=!0:e.useCloseExponentialShadowMap?n.useCloseExponentialShadowMap=!0:e.useBlurCloseExponentialShadowMap?n.useBlurCloseExponentialShadowMap=!0:e.useVarianceShadowMap?n.useExponentialShadowMap=!0:e.useBlurVarianceShadowMap&&(n.useBlurExponentialShadowMap=!0),e.contactHardeningLightSizeUVRatio!==void 0&&(n.contactHardeningLightSizeUVRatio=e.contactHardeningLightSizeUVRatio),e.filteringQuality!==void 0&&(n.filteringQuality=e.filteringQuality),e.depthScale&&(n.depthScale=e.depthScale),e.blurScale&&(n.blurScale=e.blurScale),e.blurBoxOffset&&(n.blurBoxOffset=e.blurBoxOffset),e.useKernelBlur&&(n.useKernelBlur=e.useKernelBlur),e.blurKernel&&(n.blurKernel=e.blurKernel),n}}G.CLASSNAME="ShadowGenerator",G.FILTER_NONE=0,G.FILTER_EXPONENTIALSHADOWMAP=1,G.FILTER_POISSONSAMPLING=2,G.FILTER_BLUREXPONENTIALSHADOWMAP=3,G.FILTER_CLOSEEXPONENTIALSHADOWMAP=4,G.FILTER_BLURCLOSEEXPONENTIALSHADOWMAP=5,G.FILTER_PCF=6,G.FILTER_PCSS=7,G.QUALITY_HIGH=0,G.QUALITY_MEDIUM=1,G.QUALITY_LOW=2,G.DEFAULT_ALPHA_CUTOFF=.5,G._SceneComponentInitialization=c=>{throw $("ShadowGeneratorSceneComponent")};const Mo="depthPixelShader",Ao=`#ifdef ALPHATEST
varying vec2 vUV;
uniform sampler2D diffuseSampler;
#endif
#include<clipPlaneFragmentDeclaration>
varying float vDepthMetric;
#ifdef PACKED
#include<packingFunctions>
#endif
#define CUSTOM_FRAGMENT_DEFINITIONS
void main(void)
{
#include<clipPlaneFragment>
#ifdef ALPHATEST
if (texture2D(diffuseSampler,vUV).a<0.4)
discard;
#endif
#ifdef NONLINEARDEPTH
#ifdef PACKED
gl_FragColor=pack(gl_FragCoord.z);
#else
gl_FragColor=vec4(gl_FragCoord.z,0.0,0.0,0.0);
#endif
#else
#ifdef PACKED
gl_FragColor=pack(vDepthMetric);
#else
gl_FragColor=vec4(vDepthMetric,0.0,0.0,1.0);
#endif
#endif
}`;U.ShadersStore[Mo]=Ao;const Ro="instancesDeclaration",yo=`#ifdef INSTANCES
attribute vec4 world0;
attribute vec4 world1;
attribute vec4 world2;
attribute vec4 world3;
#ifdef INSTANCESCOLOR
attribute vec4 instanceColor;
#endif
#if defined(THIN_INSTANCES) && !defined(WORLD_UBO)
uniform mat4 world;
#endif
#if defined(VELOCITY) || defined(PREPASS_VELOCITY)
attribute vec4 previousWorld0;
attribute vec4 previousWorld1;
attribute vec4 previousWorld2;
attribute vec4 previousWorld3;
#ifdef THIN_INSTANCES
uniform mat4 previousWorld;
#endif
#endif
#else
#if !defined(WORLD_UBO)
uniform mat4 world;
#endif
#if defined(VELOCITY) || defined(PREPASS_VELOCITY)
uniform mat4 previousWorld;
#endif
#endif
`;U.IncludesShadersStore[Ro]=yo;const Co="depthVertexShader",Io=`attribute vec3 position;
#include<bonesDeclaration>
#include<bakedVertexAnimationDeclaration>
#include<morphTargetsVertexGlobalDeclaration>
#include<morphTargetsVertexDeclaration>[0..maxSimultaneousMorphTargets]
#include<clipPlaneVertexDeclaration>
#include<instancesDeclaration>
uniform mat4 viewProjection;
uniform vec2 depthValues;
#if defined(ALPHATEST) || defined(NEED_UV)
varying vec2 vUV;
uniform mat4 diffuseMatrix;
#ifdef UV1
attribute vec2 uv;
#endif
#ifdef UV2
attribute vec2 uv2;
#endif
#endif
varying float vDepthMetric;
#define CUSTOM_VERTEX_DEFINITIONS
void main(void)
{
vec3 positionUpdated=position;
#ifdef UV1
vec2 uvUpdated=uv;
#endif
#include<morphTargetsVertexGlobal>
#include<morphTargetsVertex>[0..maxSimultaneousMorphTargets]
#include<instancesVertex>
#include<bonesVertex>
#include<bakedVertexAnimation>
vec4 worldPos=finalWorld*vec4(positionUpdated,1.0);
#include<clipPlaneVertex>
gl_Position=viewProjection*worldPos;
#ifdef USE_REVERSE_DEPTHBUFFER
vDepthMetric=((-gl_Position.z+depthValues.x)/(depthValues.y));
#else
vDepthMetric=((gl_Position.z+depthValues.x)/(depthValues.y));
#endif
#if defined(ALPHATEST) || defined(BASIC_RENDER)
#ifdef UV1
vUV=vec2(diffuseMatrix*vec4(uvUpdated,1.0,0.0));
#endif
#ifdef UV2
vUV=vec2(diffuseMatrix*vec4(uv2,1.0,0.0));
#endif
#endif
}
`;U.ShadersStore[Co]=Io;class as{constructor(e,t=1,i=null,s=!1,r=N.TRILINEAR_SAMPLINGMODE){this.enabled=!0,this.forceDepthWriteTransparentMeshes=!1,this.useOnlyInActiveCamera=!1,this._scene=e,this._storeNonLinearDepth=s,this.isPacked=t===0,this.isPacked?this._clearColor=new me(1,1,1,1):this._clearColor=new me(1,0,0,1),as._SceneComponentInitialization(this._scene);const n=e.getEngine();this._camera=i,r!==N.NEAREST_SAMPLINGMODE&&(t===1&&!n._caps.textureFloatLinearFiltering&&(r=N.NEAREST_SAMPLINGMODE),t===2&&!n._caps.textureHalfFloatLinearFiltering&&(r=N.NEAREST_SAMPLINGMODE));const a=this.isPacked||!n._features.supportExtendedTextureFormats?5:6;this._depthMap=new _t("DepthRenderer",{width:n.getRenderWidth(),height:n.getRenderHeight()},this._scene,!1,!0,t,!1,r,void 0,void 0,void 0,a),this._depthMap.wrapU=N.CLAMP_ADDRESSMODE,this._depthMap.wrapV=N.CLAMP_ADDRESSMODE,this._depthMap.refreshRate=1,this._depthMap.renderParticles=!1,this._depthMap.renderList=null,this._depthMap.activeCamera=this._camera,this._depthMap.ignoreCameraViewport=!0,this._depthMap.useCameraPostProcesses=!1,this._depthMap.onClearObservable.add(h=>{h.clear(this._clearColor,!0,!0,!0)}),this._depthMap.onBeforeBindObservable.add(()=>{var h;(h=n._debugPushGroup)===null||h===void 0||h.call(n,"depth renderer",1)}),this._depthMap.onAfterUnbindObservable.add(()=>{var h;(h=n._debugPopGroup)===null||h===void 0||h.call(n,1)}),this._depthMap.customIsReadyFunction=(h,l,u)=>{if((u||l===0)&&h.subMeshes)for(let d=0;d<h.subMeshes.length;++d){const f=h.subMeshes[d],_=f.getRenderingMesh(),E=_._getInstancesRenderList(f._id,!!f.getReplacementMesh()),m=n.getCaps().instancedArrays&&(E.visibleInstances[f._id]!==null&&E.visibleInstances[f._id]!==void 0||_.hasThinInstances);if(!this.isReady(f,m))return!1}return!0};const o=h=>{var l,u;const d=h.getRenderingMesh(),f=h.getEffectiveMesh(),_=this._scene,E=_.getEngine(),m=h.getMaterial();if(f._internalAbstractMeshDataInfo._isActiveIntermediate=!1,!m||f.infiniteDistance||m.disableDepthWrite||h.verticesCount===0||h._renderId===_.getRenderId())return;const v=f._getWorldMatrixDeterminant()<0;let S=(l=d.overrideMaterialSideOrientation)!==null&&l!==void 0?l:m.sideOrientation;v&&(S=S===0?1:0);const y=S===0;E.setState(m.backFaceCulling,0,!1,y,m.cullBackFaces);const A=d._getInstancesRenderList(h._id,!!h.getReplacementMesh());if(A.mustReturn)return;const C=E.getCaps().instancedArrays&&(A.visibleInstances[h._id]!==null&&A.visibleInstances[h._id]!==void 0||d.hasThinInstances),b=this._camera||_.activeCamera;if(this.isReady(h,C)&&b){h._renderId=_.getRenderId();const M=(u=f._internalAbstractMeshDataInfo._materialForRenderPass)===null||u===void 0?void 0:u[E.currentRenderPassId];let L=h._getDrawWrapper();!L&&M&&(L=M._getDrawWrapper());const k=b.mode===j.ORTHOGRAPHIC_CAMERA;if(!L)return;const w=L.effect;E.enableEffect(L),C||d._bind(h,w,m.fillMode),M?M.bindForSubMesh(f.getWorldMatrix(),f,h):(w.setMatrix("viewProjection",_.getTransformMatrix()),w.setMatrix("world",f.getWorldMatrix()));let de,ce;if(k?(de=!E.useReverseDepthBuffer&&E.isNDCHalfZRange?0:1,ce=E.useReverseDepthBuffer&&E.isNDCHalfZRange?0:1):(de=E.useReverseDepthBuffer&&E.isNDCHalfZRange?b.minZ:E.isNDCHalfZRange?0:b.minZ,ce=E.useReverseDepthBuffer&&E.isNDCHalfZRange?0:b.maxZ),w.setFloat2("depthValues",de,de+ce),!M){if(m.needAlphaTesting()){const se=m.getAlphaTestTexture();se&&(w.setTexture("diffuseSampler",se),w.setMatrix("diffuseMatrix",se.getTextureMatrix()))}if(d.useBones&&d.computeBonesUsingShaders&&d.skeleton){const se=d.skeleton;if(se.isUsingTextureForMatrices){const te=se.getTransformMatrixTexture(d);if(!te)return;w.setTexture("boneSampler",te),w.setFloat("boneTextureWidth",4*(se.bones.length+1))}else w.setMatrices("mBones",se.getTransformMatrices(d))}rs(w,m,_),ie.BindMorphTargetParameters(d,w),d.morphTargetManager&&d.morphTargetManager.isUsingTextureForTargets&&d.morphTargetManager._bind(w)}d._processRendering(f,h,w,m.fillMode,A,C,(se,te)=>w.setMatrix("world",te))}};this._depthMap.customRenderFunction=(h,l,u,d)=>{let f;if(d.length)for(f=0;f<d.length;f++)o(d.data[f]);for(f=0;f<h.length;f++)o(h.data[f]);for(f=0;f<l.length;f++)o(l.data[f]);if(this.forceDepthWriteTransparentMeshes)for(f=0;f<u.length;f++)o(u.data[f]);else for(f=0;f<u.length;f++)u.data[f].getEffectiveMesh()._internalAbstractMeshDataInfo._isActiveIntermediate=!1}}setMaterialForRendering(e,t){this._depthMap.setMaterialForRendering(e,t)}isReady(e,t){var i;const s=this._scene.getEngine(),r=e.getMesh(),n=r.getScene(),a=(i=r._internalAbstractMeshDataInfo._materialForRenderPass)===null||i===void 0?void 0:i[s.currentRenderPassId];if(a)return a.isReadyForSubMesh(r,e,t);const o=e.getMaterial();if(!o||o.disableDepthWrite)return!1;const h=[],l=[g.PositionKind];if(o&&o.needAlphaTesting()&&o.getAlphaTestTexture()&&(h.push("#define ALPHATEST"),r.isVerticesDataPresent(g.UVKind)&&(l.push(g.UVKind),h.push("#define UV1")),r.isVerticesDataPresent(g.UV2Kind)&&(l.push(g.UV2Kind),h.push("#define UV2"))),r.useBones&&r.computeBonesUsingShaders){l.push(g.MatricesIndicesKind),l.push(g.MatricesWeightsKind),r.numBoneInfluencers>4&&(l.push(g.MatricesIndicesExtraKind),l.push(g.MatricesWeightsExtraKind)),h.push("#define NUM_BONE_INFLUENCERS "+r.numBoneInfluencers),h.push("#define BonesPerMesh "+(r.skeleton?r.skeleton.bones.length+1:0));const m=e.getRenderingMesh().skeleton;m!=null&&m.isUsingTextureForMatrices&&h.push("#define BONETEXTURE")}else h.push("#define NUM_BONE_INFLUENCERS 0");const u=r.morphTargetManager;let d=0;u&&u.numInfluencers>0&&(d=u.numInfluencers,h.push("#define MORPHTARGETS"),h.push("#define NUM_MORPH_INFLUENCERS "+d),u.isUsingTextureForTargets&&h.push("#define MORPHTARGETS_TEXTURE"),ie.PrepareAttributesForMorphTargetsInfluencers(l,r,d)),t&&(h.push("#define INSTANCES"),ie.PushAttributesForInstances(l),e.getRenderingMesh().hasThinInstances&&h.push("#define THIN_INSTANCES")),this._storeNonLinearDepth&&h.push("#define NONLINEARDEPTH"),this.isPacked&&h.push("#define PACKED"),Os(o,n,h);const f=e._getDrawWrapper(void 0,!0),_=f.defines,E=h.join(`
`);if(_!==E){const m=["world","mBones","boneTextureWidth","viewProjection","diffuseMatrix","depthValues","morphTargetInfluences","morphTargetTextureInfo","morphTargetTextureIndices"];ss(m),f.setEffect(s.createEffect("depth",l,m,["diffuseSampler","morphTargets","boneSampler"],E,void 0,void 0,void 0,{maxSimultaneousMorphTargets:d}),E)}return f.effect.isReady()}getDepthMap(){return this._depthMap}dispose(){const e=[];for(const t in this._scene._depthRenderer)this._scene._depthRenderer[t]===this&&e.push(t);if(e.length>0){this._depthMap.dispose();for(const t of e)delete this._scene._depthRenderer[t]}}}as._SceneComponentInitialization=c=>{throw $("DepthRendererSceneComponent")};const Po="minmaxReduxPixelShader",Do=`varying vec2 vUV;
uniform sampler2D textureSampler;
#if defined(INITIAL)
uniform sampler2D sourceTexture;
uniform vec2 texSize;
void main(void)
{
ivec2 coord=ivec2(vUV*(texSize-1.0));
float f1=texelFetch(sourceTexture,coord,0).r;
float f2=texelFetch(sourceTexture,coord+ivec2(1,0),0).r;
float f3=texelFetch(sourceTexture,coord+ivec2(1,1),0).r;
float f4=texelFetch(sourceTexture,coord+ivec2(0,1),0).r;
float minz=min(min(min(f1,f2),f3),f4);
#ifdef DEPTH_REDUX
float maxz=max(max(max(sign(1.0-f1)*f1,sign(1.0-f2)*f2),sign(1.0-f3)*f3),sign(1.0-f4)*f4);
#else
float maxz=max(max(max(f1,f2),f3),f4);
#endif
glFragColor=vec4(minz,maxz,0.,0.);
}
#elif defined(MAIN)
uniform vec2 texSize;
void main(void)
{
ivec2 coord=ivec2(vUV*(texSize-1.0));
vec2 f1=texelFetch(textureSampler,coord,0).rg;
vec2 f2=texelFetch(textureSampler,coord+ivec2(1,0),0).rg;
vec2 f3=texelFetch(textureSampler,coord+ivec2(1,1),0).rg;
vec2 f4=texelFetch(textureSampler,coord+ivec2(0,1),0).rg;
float minz=min(min(min(f1.x,f2.x),f3.x),f4.x);
float maxz=max(max(max(f1.y,f2.y),f3.y),f4.y);
glFragColor=vec4(minz,maxz,0.,0.);
}
#elif defined(ONEBEFORELAST)
uniform ivec2 texSize;
void main(void)
{
ivec2 coord=ivec2(vUV*vec2(texSize-1));
vec2 f1=texelFetch(textureSampler,coord % texSize,0).rg;
vec2 f2=texelFetch(textureSampler,(coord+ivec2(1,0)) % texSize,0).rg;
vec2 f3=texelFetch(textureSampler,(coord+ivec2(1,1)) % texSize,0).rg;
vec2 f4=texelFetch(textureSampler,(coord+ivec2(0,1)) % texSize,0).rg;
float minz=min(f1.x,f2.x);
float maxz=max(f1.y,f2.y);
glFragColor=vec4(minz,maxz,0.,0.);
}
#elif defined(LAST)
void main(void)
{
glFragColor=vec4(0.);
if (true) { 
discard;
}
}
#endif
`;U.ShadersStore[Po]=Do;class Fo{constructor(e){this.onAfterReductionPerformed=new F,this._forceFullscreenViewport=!0,this._activated=!1,this._camera=e,this._postProcessManager=new Qi(e.getScene()),this._onContextRestoredObserver=e.getEngine().onContextRestoredObservable.add(()=>{this._postProcessManager._rebuild()})}get sourceTexture(){return this._sourceTexture}setSourceTexture(e,t,i=2,s=!0){if(e===this._sourceTexture)return;this.dispose(!1),this._sourceTexture=e,this._reductionSteps=[],this._forceFullscreenViewport=s;const r=this._camera.getScene(),n=new Me("Initial reduction phase","minmaxRedux",["texSize"],["sourceTexture"],1,null,1,r.getEngine(),!1,"#define INITIAL"+(t?`
#define DEPTH_REDUX`:""),i,void 0,void 0,void 0,7);n.autoClear=!1,n.forceFullscreenViewport=s;let a=this._sourceTexture.getRenderWidth(),o=this._sourceTexture.getRenderHeight();n.onApply=((l,u)=>d=>{d.setTexture("sourceTexture",this._sourceTexture),d.setFloat2("texSize",l,u)})(a,o),this._reductionSteps.push(n);let h=1;for(;a>1||o>1;){a=Math.max(Math.round(a/2),1),o=Math.max(Math.round(o/2),1);const l=new Me("Reduction phase "+h,"minmaxRedux",["texSize"],null,{width:a,height:o},null,1,r.getEngine(),!1,"#define "+(a==1&&o==1?"LAST":a==1||o==1?"ONEBEFORELAST":"MAIN"),i,void 0,void 0,void 0,7);if(l.autoClear=!1,l.forceFullscreenViewport=s,l.onApply=((u,d)=>f=>{u==1||d==1?f.setInt2("texSize",u,d):f.setFloat2("texSize",u,d)})(a,o),this._reductionSteps.push(l),h++,a==1&&o==1){const u=(d,f,_)=>{const E=new Float32Array(4*d*f),m={min:0,max:0};return()=>{r.getEngine()._readTexturePixels(_.inputTexture.texture,d,f,-1,0,E,!1),m.min=E[0],m.max=E[1],this.onAfterReductionPerformed.notifyObservers(m)}};l.onAfterRenderObservable.add(u(a,o,l))}}}get refreshRate(){return this._sourceTexture?this._sourceTexture.refreshRate:-1}set refreshRate(e){this._sourceTexture&&(this._sourceTexture.refreshRate=e)}get activated(){return this._activated}activate(){this._onAfterUnbindObserver||!this._sourceTexture||(this._onAfterUnbindObserver=this._sourceTexture.onAfterUnbindObservable.add(()=>{var e,t;const i=this._camera.getScene().getEngine();(e=i._debugPushGroup)===null||e===void 0||e.call(i,"min max reduction",1),this._reductionSteps[0].activate(this._camera),this._postProcessManager.directRender(this._reductionSteps,this._reductionSteps[0].inputTexture,this._forceFullscreenViewport),i.unBindFramebuffer(this._reductionSteps[0].inputTexture,!1),(t=i._debugPopGroup)===null||t===void 0||t.call(i,1)}),this._activated=!0)}deactivate(){!this._onAfterUnbindObserver||!this._sourceTexture||(this._sourceTexture.onAfterUnbindObservable.remove(this._onAfterUnbindObserver),this._onAfterUnbindObserver=null,this._activated=!1)}dispose(e=!0){if(e&&(this.onAfterReductionPerformed.clear(),this._onContextRestoredObserver&&(this._camera.getEngine().onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null)),this.deactivate(),this._reductionSteps){for(let t=0;t<this._reductionSteps.length;++t)this._reductionSteps[t].dispose();this._reductionSteps=null}this._postProcessManager&&e&&this._postProcessManager.dispose(),this._sourceTexture=null}}class wo extends Fo{constructor(e){super(e)}get depthRenderer(){return this._depthRenderer}setDepthRenderer(e=null,t=2,i=!0){const s=this._camera.getScene();this._depthRenderer&&(delete s._depthRenderer[this._depthRendererId],this._depthRenderer.dispose(),this._depthRenderer=null),e===null&&(s._depthRenderer||(s._depthRenderer={}),e=this._depthRenderer=new as(s,t,this._camera,!1,1),e.enabled=!1,this._depthRendererId="minmax"+this._camera.id,s._depthRenderer[this._depthRendererId]=e),super.setSourceTexture(e.getDepthMap(),!0,t,i)}setSourceTexture(e,t,i=2,s=!0){super.setSourceTexture(e,t,i,s)}activate(){this._depthRenderer&&(this._depthRenderer.enabled=!0),super.activate()}deactivate(){super.deactivate(),this._depthRenderer&&(this._depthRenderer.enabled=!1)}dispose(e=!0){if(super.dispose(e),this._depthRenderer&&e){const t=this._depthRenderer.getDepthMap().getScene();t&&delete t._depthRenderer[this._depthRendererId],this._depthRenderer.dispose(),this._depthRenderer=null}}}const Nr=p.Up(),Oo=p.Zero(),Le=new p,xi=new p,os=new x;class ke extends G{constructor(e,t,i,s){if(!ke.IsSupported){O.Error("CascadedShadowMap is not supported by the current engine.");return}super(e,t,i,s),this.usePercentageCloserFiltering=!0}_validateFilter(e){return e===G.FILTER_NONE||e===G.FILTER_PCF||e===G.FILTER_PCSS?e:(console.error('Unsupported filter "'+e+'"!'),G.FILTER_NONE)}get numCascades(){return this._numCascades}set numCascades(e){e=Math.min(Math.max(e,ke.MIN_CASCADES_COUNT),ke.MAX_CASCADES_COUNT),e!==this._numCascades&&(this._numCascades=e,this.recreateShadowMap(),this._recreateSceneUBOs())}get freezeShadowCastersBoundingInfo(){return this._freezeShadowCastersBoundingInfo}set freezeShadowCastersBoundingInfo(e){this._freezeShadowCastersBoundingInfoObservable&&e&&(this._scene.onBeforeRenderObservable.remove(this._freezeShadowCastersBoundingInfoObservable),this._freezeShadowCastersBoundingInfoObservable=null),!this._freezeShadowCastersBoundingInfoObservable&&!e&&(this._freezeShadowCastersBoundingInfoObservable=this._scene.onBeforeRenderObservable.add(this._computeShadowCastersBoundingInfo.bind(this))),this._freezeShadowCastersBoundingInfo=e,e&&this._computeShadowCastersBoundingInfo()}_computeShadowCastersBoundingInfo(){if(this._scbiMin.copyFromFloats(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._scbiMax.copyFromFloats(Number.MIN_VALUE,Number.MIN_VALUE,Number.MIN_VALUE),this._shadowMap&&this._shadowMap.renderList){const e=this._shadowMap.renderList;for(let i=0;i<e.length;i++){const s=e[i];if(!s)continue;const r=s.getBoundingInfo(),n=r.boundingBox;this._scbiMin.minimizeInPlace(n.minimumWorld),this._scbiMax.maximizeInPlace(n.maximumWorld)}const t=this._scene.meshes;for(let i=0;i<t.length;i++){const s=t[i];if(!s||!s.isVisible||!s.isEnabled||!s.receiveShadows)continue;const r=s.getBoundingInfo(),n=r.boundingBox;this._scbiMin.minimizeInPlace(n.minimumWorld),this._scbiMax.maximizeInPlace(n.maximumWorld)}}this._shadowCastersBoundingInfo.reConstruct(this._scbiMin,this._scbiMax)}get shadowCastersBoundingInfo(){return this._shadowCastersBoundingInfo}set shadowCastersBoundingInfo(e){this._shadowCastersBoundingInfo=e}setMinMaxDistance(e,t){this._minDistance===e&&this._maxDistance===t||(e>t&&(e=0,t=1),e<0&&(e=0),t>1&&(t=1),this._minDistance=e,this._maxDistance=t,this._breaksAreDirty=!0)}get minDistance(){return this._minDistance}get maxDistance(){return this._maxDistance}getClassName(){return ke.CLASSNAME}getCascadeMinExtents(e){return e>=0&&e<this._numCascades?this._cascadeMinExtents[e]:null}getCascadeMaxExtents(e){return e>=0&&e<this._numCascades?this._cascadeMaxExtents[e]:null}get shadowMaxZ(){return this._getCamera()?this._shadowMaxZ:0}set shadowMaxZ(e){const t=this._getCamera();if(!t){this._shadowMaxZ=e;return}this._shadowMaxZ===e||e<t.minZ||e>t.maxZ||(this._shadowMaxZ=e,this._light._markMeshesAsLightDirty(),this._breaksAreDirty=!0)}get debug(){return this._debug}set debug(e){this._debug=e,this._light._markMeshesAsLightDirty()}get depthClamp(){return this._depthClamp}set depthClamp(e){this._depthClamp=e}get cascadeBlendPercentage(){return this._cascadeBlendPercentage}set cascadeBlendPercentage(e){this._cascadeBlendPercentage=e,this._light._markMeshesAsLightDirty()}get lambda(){return this._lambda}set lambda(e){const t=Math.min(Math.max(e,0),1);this._lambda!=t&&(this._lambda=t,this._breaksAreDirty=!0)}getCascadeViewMatrix(e){return e>=0&&e<this._numCascades?this._viewMatrices[e]:null}getCascadeProjectionMatrix(e){return e>=0&&e<this._numCascades?this._projectionMatrices[e]:null}getCascadeTransformMatrix(e){return e>=0&&e<this._numCascades?this._transformMatrices[e]:null}setDepthRenderer(e){this._depthRenderer=e,this._depthReducer&&this._depthReducer.setDepthRenderer(this._depthRenderer)}get autoCalcDepthBounds(){return this._autoCalcDepthBounds}set autoCalcDepthBounds(e){const t=this._getCamera();if(t){if(this._autoCalcDepthBounds=e,!e){this._depthReducer&&this._depthReducer.deactivate(),this.setMinMaxDistance(0,1);return}this._depthReducer||(this._depthReducer=new wo(t),this._depthReducer.onAfterReductionPerformed.add(i=>{let s=i.min,r=i.max;s>=r&&(s=0,r=1),(s!=this._minDistance||r!=this._maxDistance)&&this.setMinMaxDistance(s,r)}),this._depthReducer.setDepthRenderer(this._depthRenderer)),this._depthReducer.activate()}}get autoCalcDepthBoundsRefreshRate(){var e,t,i;return(i=(t=(e=this._depthReducer)===null||e===void 0?void 0:e.depthRenderer)===null||t===void 0?void 0:t.getDepthMap().refreshRate)!==null&&i!==void 0?i:-1}set autoCalcDepthBoundsRefreshRate(e){var t;!((t=this._depthReducer)===null||t===void 0)&&t.depthRenderer&&(this._depthReducer.depthRenderer.getDepthMap().refreshRate=e)}splitFrustum(){this._breaksAreDirty=!0}_splitFrustum(){const e=this._getCamera();if(!e)return;const t=e.minZ,i=e.maxZ,s=i-t,r=this._minDistance,n=this._shadowMaxZ<i&&this._shadowMaxZ>=t?Math.min((this._shadowMaxZ-t)/(i-t),this._maxDistance):this._maxDistance,a=t+r*s,o=t+n*s,h=o-a,l=o/a;for(let u=0;u<this._cascades.length;++u){const d=(u+1)/this._numCascades,f=a*l**d,_=a+h*d,E=this._lambda*(f-_)+_;this._cascades[u].prevBreakDistance=u===0?r:this._cascades[u-1].breakDistance,this._cascades[u].breakDistance=(E-t)/s,this._viewSpaceFrustumsZ[u]=E,this._frustumLengths[u]=(this._cascades[u].breakDistance-this._cascades[u].prevBreakDistance)*s}this._breaksAreDirty=!1}_computeMatrices(){const e=this._scene;if(!this._getCamera())return;p.NormalizeToRef(this._light.getShadowDirection(0),this._lightDirection),Math.abs(p.Dot(this._lightDirection,p.Up()))===1&&(this._lightDirection.z=1e-13),this._cachedDirection.copyFrom(this._lightDirection);const i=e.getEngine().useReverseDepthBuffer;for(let s=0;s<this._numCascades;++s){this._computeFrustumInWorldSpace(s),this._computeCascadeFrustum(s),this._cascadeMaxExtents[s].subtractToRef(this._cascadeMinExtents[s],Le),this._frustumCenter[s].addToRef(this._lightDirection.scale(this._cascadeMinExtents[s].z),this._shadowCameraPos[s]),x.LookAtLHToRef(this._shadowCameraPos[s],this._frustumCenter[s],Nr,this._viewMatrices[s]);let r=0,n=Le.z;const a=this._shadowCastersBoundingInfo;a.update(this._viewMatrices[s]),n=Math.min(n,a.boundingBox.maximumWorld.z),!this._depthClamp||this.filter===G.FILTER_PCSS?r=Math.min(r,a.boundingBox.minimumWorld.z):r=Math.max(r,a.boundingBox.minimumWorld.z),x.OrthoOffCenterLHToRef(this._cascadeMinExtents[s].x,this._cascadeMaxExtents[s].x,this._cascadeMinExtents[s].y,this._cascadeMaxExtents[s].y,i?n:r,i?r:n,this._projectionMatrices[s],e.getEngine().isNDCHalfZRange),this._cascadeMinExtents[s].z=r,this._cascadeMaxExtents[s].z=n,this._viewMatrices[s].multiplyToRef(this._projectionMatrices[s],this._transformMatrices[s]),p.TransformCoordinatesToRef(Oo,this._transformMatrices[s],Le),Le.scaleInPlace(this._mapSize/2),xi.copyFromFloats(Math.round(Le.x),Math.round(Le.y),Math.round(Le.z)),xi.subtractInPlace(Le).scaleInPlace(2/this._mapSize),x.TranslationToRef(xi.x,xi.y,0,os),this._projectionMatrices[s].multiplyToRef(os,this._projectionMatrices[s]),this._viewMatrices[s].multiplyToRef(this._projectionMatrices[s],this._transformMatrices[s]),this._transformMatrices[s].copyToArray(this._transformMatricesAsArray,s*16)}}_computeFrustumInWorldSpace(e){const t=this._getCamera();if(!t)return;const i=this._cascades[e].prevBreakDistance,s=this._cascades[e].breakDistance,r=this._scene.getEngine().isNDCHalfZRange;t.getViewMatrix();const n=x.Invert(t.getTransformationMatrix()),a=this._scene.getEngine().useReverseDepthBuffer?4:0;for(let o=0;o<ke._FrustumCornersNDCSpace.length;++o)Le.copyFrom(ke._FrustumCornersNDCSpace[(o+a)%ke._FrustumCornersNDCSpace.length]),r&&Le.z===-1&&(Le.z=0),p.TransformCoordinatesToRef(Le,n,this._frustumCornersWorldSpace[e][o]);for(let o=0;o<ke._FrustumCornersNDCSpace.length/2;++o)Le.copyFrom(this._frustumCornersWorldSpace[e][o+4]).subtractInPlace(this._frustumCornersWorldSpace[e][o]),xi.copyFrom(Le).scaleInPlace(i),Le.scaleInPlace(s),Le.addInPlace(this._frustumCornersWorldSpace[e][o]),this._frustumCornersWorldSpace[e][o+4].copyFrom(Le),this._frustumCornersWorldSpace[e][o].addInPlace(xi)}_computeCascadeFrustum(e){if(this._cascadeMinExtents[e].copyFromFloats(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._cascadeMaxExtents[e].copyFromFloats(Number.MIN_VALUE,Number.MIN_VALUE,Number.MIN_VALUE),this._frustumCenter[e].copyFromFloats(0,0,0),!!this._getCamera()){for(let i=0;i<this._frustumCornersWorldSpace[e].length;++i)this._frustumCenter[e].addInPlace(this._frustumCornersWorldSpace[e][i]);if(this._frustumCenter[e].scaleInPlace(1/this._frustumCornersWorldSpace[e].length),this.stabilizeCascades){let i=0;for(let s=0;s<this._frustumCornersWorldSpace[e].length;++s){const r=this._frustumCornersWorldSpace[e][s].subtractToRef(this._frustumCenter[e],Le).length();i=Math.max(i,r)}i=Math.ceil(i*16)/16,this._cascadeMaxExtents[e].copyFromFloats(i,i,i),this._cascadeMinExtents[e].copyFromFloats(-i,-i,-i)}else{const i=this._frustumCenter[e];this._frustumCenter[e].addToRef(this._lightDirection,Le),x.LookAtLHToRef(i,Le,Nr,os);for(let s=0;s<this._frustumCornersWorldSpace[e].length;++s)p.TransformCoordinatesToRef(this._frustumCornersWorldSpace[e][s],os,Le),this._cascadeMinExtents[e].minimizeInPlace(Le),this._cascadeMaxExtents[e].maximizeInPlace(Le)}}}_recreateSceneUBOs(){if(this._disposeSceneUBOs(),this._sceneUBOs)for(let e=0;e<this._numCascades;++e)this._sceneUBOs.push(this._scene.createSceneUniformBuffer(`Scene for CSM Shadow Generator (light "${this._light.name}" cascade #${e})`))}static get IsSupported(){const e=fe.LastCreatedEngine;return e?e._features.supportCSM:!1}_initializeGenerator(){var e,t,i,s,r,n,a,o,h,l,u,d,f,_,E,m,v,S,y,A;this.penumbraDarkness=(e=this.penumbraDarkness)!==null&&e!==void 0?e:1,this._numCascades=(t=this._numCascades)!==null&&t!==void 0?t:ke.DEFAULT_CASCADES_COUNT,this.stabilizeCascades=(i=this.stabilizeCascades)!==null&&i!==void 0?i:!1,this._freezeShadowCastersBoundingInfoObservable=(s=this._freezeShadowCastersBoundingInfoObservable)!==null&&s!==void 0?s:null,this.freezeShadowCastersBoundingInfo=(r=this.freezeShadowCastersBoundingInfo)!==null&&r!==void 0?r:!1,this._scbiMin=(n=this._scbiMin)!==null&&n!==void 0?n:new p(0,0,0),this._scbiMax=(a=this._scbiMax)!==null&&a!==void 0?a:new p(0,0,0),this._shadowCastersBoundingInfo=(o=this._shadowCastersBoundingInfo)!==null&&o!==void 0?o:new dt(new p(0,0,0),new p(0,0,0)),this._breaksAreDirty=(h=this._breaksAreDirty)!==null&&h!==void 0?h:!0,this._minDistance=(l=this._minDistance)!==null&&l!==void 0?l:0,this._maxDistance=(u=this._maxDistance)!==null&&u!==void 0?u:1,this._currentLayer=(d=this._currentLayer)!==null&&d!==void 0?d:0,this._shadowMaxZ=(E=(f=this._shadowMaxZ)!==null&&f!==void 0?f:(_=this._getCamera())===null||_===void 0?void 0:_.maxZ)!==null&&E!==void 0?E:1e4,this._debug=(m=this._debug)!==null&&m!==void 0?m:!1,this._depthClamp=(v=this._depthClamp)!==null&&v!==void 0?v:!0,this._cascadeBlendPercentage=(S=this._cascadeBlendPercentage)!==null&&S!==void 0?S:.1,this._lambda=(y=this._lambda)!==null&&y!==void 0?y:.5,this._autoCalcDepthBounds=(A=this._autoCalcDepthBounds)!==null&&A!==void 0?A:!1,this._recreateSceneUBOs(),super._initializeGenerator()}_createTargetRenderTexture(){const e=this._scene.getEngine(),t={width:this._mapSize,height:this._mapSize,layers:this.numCascades};this._shadowMap=new _t(this._light.name+"_CSMShadowMap",t,this._scene,!1,!0,this._textureType,!1,void 0,!1,!1,void 0),this._shadowMap.createDepthStencilTexture(e.useReverseDepthBuffer?516:513,!0)}_initializeShadowMap(){if(super._initializeShadowMap(),this._shadowMap===null)return;this._transformMatricesAsArray=new Float32Array(this._numCascades*16),this._viewSpaceFrustumsZ=new Array(this._numCascades),this._frustumLengths=new Array(this._numCascades),this._lightSizeUVCorrection=new Array(this._numCascades*2),this._depthCorrection=new Array(this._numCascades),this._cascades=[],this._viewMatrices=[],this._projectionMatrices=[],this._transformMatrices=[],this._cascadeMinExtents=[],this._cascadeMaxExtents=[],this._frustumCenter=[],this._shadowCameraPos=[],this._frustumCornersWorldSpace=[];for(let t=0;t<this._numCascades;++t){this._cascades[t]={prevBreakDistance:0,breakDistance:0},this._viewMatrices[t]=x.Zero(),this._projectionMatrices[t]=x.Zero(),this._transformMatrices[t]=x.Zero(),this._cascadeMinExtents[t]=new p,this._cascadeMaxExtents[t]=new p,this._frustumCenter[t]=new p,this._shadowCameraPos[t]=new p,this._frustumCornersWorldSpace[t]=new Array(ke._FrustumCornersNDCSpace.length);for(let i=0;i<ke._FrustumCornersNDCSpace.length;++i)this._frustumCornersWorldSpace[t][i]=new p}const e=this._scene.getEngine();this._shadowMap.onBeforeBindObservable.clear(),this._shadowMap.onBeforeRenderObservable.clear(),this._shadowMap.onBeforeRenderObservable.add(t=>{this._sceneUBOs&&this._scene.setSceneUniformBuffer(this._sceneUBOs[t]),this._currentLayer=t,this._filter===G.FILTER_PCF&&e.setColorWrite(!1),this._scene.setTransformMatrix(this.getCascadeViewMatrix(t),this.getCascadeProjectionMatrix(t)),this._useUBO&&(this._scene.getSceneUniformBuffer().unbindEffect(),this._scene.finalizeSceneUbo())}),this._shadowMap.onBeforeBindObservable.add(()=>{var t;this._currentSceneUBO=this._scene.getSceneUniformBuffer(),(t=e._debugPushGroup)===null||t===void 0||t.call(e,`cascaded shadow map generation for pass id ${e.currentRenderPassId}`,1),this._breaksAreDirty&&this._splitFrustum(),this._computeMatrices()}),this._splitFrustum()}_bindCustomEffectForRenderSubMeshForShadowMap(e,t){t.setMatrix("viewProjection",this.getCascadeTransformMatrix(this._currentLayer))}_isReadyCustomDefines(e){e.push("#define SM_DEPTHCLAMP "+(this._depthClamp&&this._filter!==G.FILTER_PCSS?"1":"0"))}prepareDefines(e,t){super.prepareDefines(e,t);const i=this._scene,s=this._light;if(!i.shadowsEnabled||!s.shadowEnabled)return;e["SHADOWCSM"+t]=!0,e["SHADOWCSMDEBUG"+t]=this.debug,e["SHADOWCSMNUM_CASCADES"+t]=this.numCascades,e["SHADOWCSM_RIGHTHANDED"+t]=i.useRightHandedSystem;const r=this._getCamera();r&&this._shadowMaxZ<r.maxZ&&(e["SHADOWCSMUSESHADOWMAXZ"+t]=!0),this.cascadeBlendPercentage===0&&(e["SHADOWCSMNOBLEND"+t]=!0)}bindShadowLight(e,t){const i=this._light;if(!this._scene.shadowsEnabled||!i.shadowEnabled)return;const r=this._getCamera();if(!r)return;const n=this.getShadowMap();if(!n)return;const a=n.getSize().width;if(t.setMatrices("lightMatrix"+e,this._transformMatricesAsArray),t.setArray("viewFrustumZ"+e,this._viewSpaceFrustumsZ),t.setFloat("cascadeBlendFactor"+e,this.cascadeBlendPercentage===0?1e4:1/this.cascadeBlendPercentage),t.setArray("frustumLengths"+e,this._frustumLengths),this._filter===G.FILTER_PCF)t.setDepthStencilTexture("shadowSampler"+e,n),i._uniformBuffer.updateFloat4("shadowsInfo",this.getDarkness(),a,1/a,this.frustumEdgeFalloff,e);else if(this._filter===G.FILTER_PCSS){for(let o=0;o<this._numCascades;++o)this._lightSizeUVCorrection[o*2+0]=o===0?1:(this._cascadeMaxExtents[0].x-this._cascadeMinExtents[0].x)/(this._cascadeMaxExtents[o].x-this._cascadeMinExtents[o].x),this._lightSizeUVCorrection[o*2+1]=o===0?1:(this._cascadeMaxExtents[0].y-this._cascadeMinExtents[0].y)/(this._cascadeMaxExtents[o].y-this._cascadeMinExtents[o].y),this._depthCorrection[o]=o===0?1:(this._cascadeMaxExtents[o].z-this._cascadeMinExtents[o].z)/(this._cascadeMaxExtents[0].z-this._cascadeMinExtents[0].z);t.setDepthStencilTexture("shadowSampler"+e,n),t.setTexture("depthSampler"+e,n),t.setArray2("lightSizeUVCorrection"+e,this._lightSizeUVCorrection),t.setArray("depthCorrection"+e,this._depthCorrection),t.setFloat("penumbraDarkness"+e,this.penumbraDarkness),i._uniformBuffer.updateFloat4("shadowsInfo",this.getDarkness(),1/a,this._contactHardeningLightSizeUVRatio*a,this.frustumEdgeFalloff,e)}else t.setTexture("shadowSampler"+e,n),i._uniformBuffer.updateFloat4("shadowsInfo",this.getDarkness(),a,1/a,this.frustumEdgeFalloff,e);i._uniformBuffer.updateFloat2("depthValues",this.getLight().getDepthMinZ(r),this.getLight().getDepthMinZ(r)+this.getLight().getDepthMaxZ(r),e)}getTransformMatrix(){return this.getCascadeTransformMatrix(0)}dispose(){super.dispose(),this._freezeShadowCastersBoundingInfoObservable&&(this._scene.onBeforeRenderObservable.remove(this._freezeShadowCastersBoundingInfoObservable),this._freezeShadowCastersBoundingInfoObservable=null),this._depthReducer&&(this._depthReducer.dispose(),this._depthReducer=null)}serialize(){const e=super.serialize(),t=this.getShadowMap();if(!t)return e;if(e.numCascades=this._numCascades,e.debug=this._debug,e.stabilizeCascades=this.stabilizeCascades,e.lambda=this._lambda,e.cascadeBlendPercentage=this.cascadeBlendPercentage,e.depthClamp=this._depthClamp,e.autoCalcDepthBounds=this.autoCalcDepthBounds,e.shadowMaxZ=this._shadowMaxZ,e.penumbraDarkness=this.penumbraDarkness,e.freezeShadowCastersBoundingInfo=this._freezeShadowCastersBoundingInfo,e.minDistance=this.minDistance,e.maxDistance=this.maxDistance,e.renderList=[],t.renderList)for(let i=0;i<t.renderList.length;i++){const s=t.renderList[i];e.renderList.push(s.id)}return e}static Parse(e,t){const i=G.Parse(e,t,(s,r,n)=>new ke(s,r,void 0,n));return e.numCascades!==void 0&&(i.numCascades=e.numCascades),e.debug!==void 0&&(i.debug=e.debug),e.stabilizeCascades!==void 0&&(i.stabilizeCascades=e.stabilizeCascades),e.lambda!==void 0&&(i.lambda=e.lambda),e.cascadeBlendPercentage!==void 0&&(i.cascadeBlendPercentage=e.cascadeBlendPercentage),e.depthClamp!==void 0&&(i.depthClamp=e.depthClamp),e.autoCalcDepthBounds!==void 0&&(i.autoCalcDepthBounds=e.autoCalcDepthBounds),e.shadowMaxZ!==void 0&&(i.shadowMaxZ=e.shadowMaxZ),e.penumbraDarkness!==void 0&&(i.penumbraDarkness=e.penumbraDarkness),e.freezeShadowCastersBoundingInfo!==void 0&&(i.freezeShadowCastersBoundingInfo=e.freezeShadowCastersBoundingInfo),e.minDistance!==void 0&&e.maxDistance!==void 0&&i.setMinMaxDistance(e.minDistance,e.maxDistance),i}}ke._FrustumCornersNDCSpace=[new p(-1,1,-1),new p(1,1,-1),new p(1,-1,-1),new p(-1,-1,-1),new p(-1,1,1),new p(1,1,1),new p(1,-1,1),new p(-1,-1,1)],ke.CLASSNAME="CascadedShadowGenerator",ke.DEFAULT_CASCADES_COUNT=4,ke.MIN_CASCADES_COUNT=2,ke.MAX_CASCADES_COUNT=4,ke._SceneComponentInitialization=c=>{throw $("ShadowGeneratorSceneComponent")},Zi.AddParser(q.NAME_SHADOWGENERATOR,(c,e)=>{if(c.shadowGenerators!==void 0&&c.shadowGenerators!==null)for(let t=0,i=c.shadowGenerators.length;t<i;t++){const s=c.shadowGenerators[t];s.className===ke.CLASSNAME?ke.Parse(s,e):G.Parse(s,e)}});class Lo{constructor(e){this.name=q.NAME_SHADOWGENERATOR,this.scene=e}register(){this.scene._gatherRenderTargetsStage.registerStep(q.STEP_GATHERRENDERTARGETS_SHADOWGENERATOR,this,this._gatherRenderTargets)}rebuild(){}serialize(e){e.shadowGenerators=[];const t=this.scene.lights;for(const i of t){const s=i.getShadowGenerators();if(s){const r=s.values();for(let n=r.next();n.done!==!0;n=r.next()){const a=n.value;e.shadowGenerators.push(a.serialize())}}}}addFromContainer(e){}removeFromContainer(e,t){}dispose(){}_gatherRenderTargets(e){const t=this.scene;if(this.scene.shadowsEnabled)for(let i=0;i<t.lights.length;i++){const s=t.lights[i],r=s.getShadowGenerators();if(s.isEnabled()&&s.shadowEnabled&&r){const n=r.values();for(let a=n.next();a.done!==!0;a=n.next()){const h=a.value.getShadowMap();t.textures.indexOf(h)!==-1&&e.push(h)}}}}}G._SceneComponentInitialization=c=>{let e=c._getComponent(q.NAME_SHADOWGENERATOR);e||(e=new Lo(c),c._addComponent(e))};const No={enableShadows:!0};function Br(c=No){const{enableShadows:e,shadowTransparency:t,intensity:i,scene:s}=c,r=new It("DirectionalLight",new p(-.3,-1,.4),s);r.position=new p(-50,65,-50),r.intensity=.65*i;const n=new ns("HemisphericLight",new p(1,1,0),s);return n.intensity=.4*i,e&&(r.shadowMinZ=1,r.shadowMaxZ=70,r.shadowGenerator=new G(2048,r),r.shadowGenerator.useCloseExponentialShadowMap=!0,r.shadowGenerator.darkness=t),{directional:r,hemispheric:n}}function Ur(c){let t=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23];const i=[0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0],s=[];let r=[];const n=c.width||c.size||1,a=c.height||c.size||1,o=c.depth||c.size||1,h=c.wrap||!1;let l=c.topBaseAt===void 0?1:c.topBaseAt,u=c.bottomBaseAt===void 0?0:c.bottomBaseAt;l=(l+4)%4,u=(u+4)%4;const d=[2,0,3,1],f=[2,0,1,3];let _=d[l],E=f[u],m=[1,-1,1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,-1,1,-1,-1,1,-1,1,1,1,1,-1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,-1,1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,1];if(h){t=[2,3,0,2,0,1,4,5,6,4,6,7,9,10,11,9,11,8,12,14,15,12,13,14],m=[-1,1,1,1,1,1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,1,1,1,-1,1,-1,-1,1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,-1,-1,-1];let M=[[1,1,1],[-1,1,1],[-1,1,-1],[1,1,-1]],L=[[-1,-1,1],[1,-1,1],[1,-1,-1],[-1,-1,-1]];const k=[17,18,19,16],w=[22,23,20,21];for(;_>0;)M.unshift(M.pop()),k.unshift(k.pop()),_--;for(;E>0;)L.unshift(L.pop()),w.unshift(w.pop()),E--;M=M.flat(),L=L.flat(),m=m.concat(M).concat(L),t.push(k[0],k[2],k[3],k[0],k[1],k[2]),t.push(w[0],w[2],w[3],w[0],w[1],w[2])}const v=[n/2,a/2,o/2];r=m.reduce((M,L,k)=>M.concat(L*v[k%3]),[]);const S=c.sideOrientation===0?0:c.sideOrientation||ee.DEFAULTSIDE,y=c.faceUV||new Array(6),A=c.faceColors,C=[];for(let M=0;M<6;M++)y[M]===void 0&&(y[M]=new Ce(0,0,1,1)),A&&A[M]===void 0&&(A[M]=new me(1,1,1,1));for(let M=0;M<6;M++)if(s.push(y[M].z,ft.UseOpenGLOrientationForUV?1-y[M].w:y[M].w),s.push(y[M].x,ft.UseOpenGLOrientationForUV?1-y[M].w:y[M].w),s.push(y[M].x,ft.UseOpenGLOrientationForUV?1-y[M].y:y[M].y),s.push(y[M].z,ft.UseOpenGLOrientationForUV?1-y[M].y:y[M].y),A)for(let L=0;L<4;L++)C.push(A[M].r,A[M].g,A[M].b,A[M].a);ee._ComputeSides(S,r,t,i,s,c.frontUVs,c.backUVs);const b=new ee;if(b.indices=t,b.positions=r,b.normals=i,b.uvs=s,A){const M=S===ee.DOUBLESIDE?C.concat(C):C;b.colors=M}return b}function Mi(c,e={},t=null){const i=new W(c,t);return e.sideOrientation=W._GetDefaultSideOrientation(e.sideOrientation),i._originalBuilderSideOrientation=e.sideOrientation,Ur(e).applyToMesh(i,e.updatable),i}ee.CreateBox=Ur,W.CreateBox=(c,e,t=null,i,s)=>Mi(c,{size:e,sideOrientation:s,updatable:i},t);class kr{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(e){e.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(e){}bindForSubMesh(e,t,i,s,r){if(t.prePassRenderer&&t.prePassRenderer.enabled&&t.prePassRenderer.currentRTisSceneRT&&t.prePassRenderer.getIndex(2)!==-1){this.previousWorldMatrices[i.uniqueId]||(this.previousWorldMatrices[i.uniqueId]=s.clone()),this.previousViewProjection||(this.previousViewProjection=t.getTransformMatrix().clone(),this.currentViewProjection=t.getTransformMatrix().clone());const n=t.getEngine();this.currentViewProjection.updateFlag!==t.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=n.frameId,this.previousViewProjection.copyFrom(this.currentViewProjection),this.currentViewProjection.copyFrom(t.getTransformMatrix())):this._lastUpdateFrameId!==n.frameId&&(this._lastUpdateFrameId=n.frameId,this.previousViewProjection.copyFrom(this.currentViewProjection)),e.setMatrix("previousWorld",this.previousWorldMatrices[i.uniqueId]),e.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[i.uniqueId]=s.clone()}}}class Vr extends P{constructor(e,t,i=!0){super(e,t),this._normalMatrix=new x,this._storeEffectOnSubMeshes=i}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(e,t){return e?!this._storeEffectOnSubMeshes||!e.subMeshes||e.subMeshes.length===0?!0:this.isReadyForSubMesh(e,e.subMeshes[0],t):!1}_isReadyForSubMesh(e){const t=e.materialDefines;return!!(!this.checkReadyOnEveryCall&&e.effect&&t&&t._renderId===this.getScene().getRenderId())}bindOnlyWorldMatrix(e){this._activeEffect.setMatrix("world",e)}bindOnlyNormalMatrix(e){this._activeEffect.setMatrix("normalMatrix",e)}bind(e,t){t&&this.bindForSubMesh(e,t,t.subMeshes[0])}_afterBind(e,t=null){super._afterBind(e,t),this.getScene()._cachedEffect=t,t&&(t._forceRebindOnNextCall=!1)}_mustRebind(e,t,i=1){return e.isCachedMaterialInvalid(this,t,i)}}class ue{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(e){this._DiffuseTextureEnabled!==e&&(this._DiffuseTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(e){this._DetailTextureEnabled!==e&&(this._DetailTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(e){this._AmbientTextureEnabled!==e&&(this._AmbientTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(e){this._OpacityTextureEnabled!==e&&(this._OpacityTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(e){this._ReflectionTextureEnabled!==e&&(this._ReflectionTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(e){this._EmissiveTextureEnabled!==e&&(this._EmissiveTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(e){this._SpecularTextureEnabled!==e&&(this._SpecularTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(e){this._BumpTextureEnabled!==e&&(this._BumpTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(e){this._LightmapTextureEnabled!==e&&(this._LightmapTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(e){this._RefractionTextureEnabled!==e&&(this._RefractionTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(e){this._ColorGradingTextureEnabled!==e&&(this._ColorGradingTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(e){this._FresnelEnabled!==e&&(this._FresnelEnabled=e,I.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(e){this._ClearCoatTextureEnabled!==e&&(this._ClearCoatTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(e){this._ClearCoatBumpTextureEnabled!==e&&(this._ClearCoatBumpTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(e){this._ClearCoatTintTextureEnabled!==e&&(this._ClearCoatTintTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(e){this._SheenTextureEnabled!==e&&(this._SheenTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(e){this._AnisotropicTextureEnabled!==e&&(this._AnisotropicTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(e){this._ThicknessTextureEnabled!==e&&(this._ThicknessTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(e){this._RefractionIntensityTextureEnabled!==e&&(this._RefractionIntensityTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set TranslucencyIntensityTextureEnabled(e){this._TranslucencyIntensityTextureEnabled!==e&&(this._TranslucencyIntensityTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(e){this._IridescenceTextureEnabled!==e&&(this._IridescenceTextureEnabled=e,I.MarkAllMaterialsAsDirty(1))}}ue._DiffuseTextureEnabled=!0,ue._DetailTextureEnabled=!0,ue._AmbientTextureEnabled=!0,ue._OpacityTextureEnabled=!0,ue._ReflectionTextureEnabled=!0,ue._EmissiveTextureEnabled=!0,ue._SpecularTextureEnabled=!0,ue._BumpTextureEnabled=!0,ue._LightmapTextureEnabled=!0,ue._RefractionTextureEnabled=!0,ue._ColorGradingTextureEnabled=!0,ue._FresnelEnabled=!0,ue._ClearCoatTextureEnabled=!0,ue._ClearCoatBumpTextureEnabled=!0,ue._ClearCoatTintTextureEnabled=!0,ue._SheenTextureEnabled=!0,ue._AnisotropicTextureEnabled=!0,ue._ThicknessTextureEnabled=!0,ue._RefractionIntensityTextureEnabled=!0,ue._TranslucencyIntensityTextureEnabled=!0,ue._IridescenceTextureEnabled=!0;const Bo="defaultFragmentDeclaration",Uo=`uniform vec4 vEyePosition;
uniform vec4 vDiffuseColor;
#ifdef SPECULARTERM
uniform vec4 vSpecularColor;
#endif
uniform vec3 vEmissiveColor;
uniform vec3 vAmbientColor;
uniform float visibility;
#ifdef DIFFUSE
uniform vec2 vDiffuseInfos;
#endif
#ifdef AMBIENT
uniform vec2 vAmbientInfos;
#endif
#ifdef OPACITY 
uniform vec2 vOpacityInfos;
#endif
#ifdef EMISSIVE
uniform vec2 vEmissiveInfos;
#endif
#ifdef LIGHTMAP
uniform vec2 vLightmapInfos;
#endif
#ifdef BUMP
uniform vec3 vBumpInfos;
uniform vec2 vTangentSpaceParams;
#endif
#ifdef ALPHATEST
uniform float alphaCutOff;
#endif
#if defined(REFLECTIONMAP_SPHERICAL) || defined(REFLECTIONMAP_PROJECTION) || defined(REFRACTION) || defined(PREPASS)
uniform mat4 view;
#endif
#ifdef REFRACTION
uniform vec4 vRefractionInfos;
#ifndef REFRACTIONMAP_3D
uniform mat4 refractionMatrix;
#endif
#ifdef REFRACTIONFRESNEL
uniform vec4 refractionLeftColor;
uniform vec4 refractionRightColor;
#endif
#if defined(USE_LOCAL_REFRACTIONMAP_CUBIC) && defined(REFRACTIONMAP_3D)
uniform vec3 vRefractionPosition;
uniform vec3 vRefractionSize; 
#endif
#endif
#if defined(SPECULAR) && defined(SPECULARTERM)
uniform vec2 vSpecularInfos;
#endif
#ifdef DIFFUSEFRESNEL
uniform vec4 diffuseLeftColor;
uniform vec4 diffuseRightColor;
#endif
#ifdef OPACITYFRESNEL
uniform vec4 opacityParts;
#endif
#ifdef EMISSIVEFRESNEL
uniform vec4 emissiveLeftColor;
uniform vec4 emissiveRightColor;
#endif
#ifdef REFLECTION
uniform vec2 vReflectionInfos;
#if defined(REFLECTIONMAP_PLANAR) || defined(REFLECTIONMAP_CUBIC) || defined(REFLECTIONMAP_PROJECTION) || defined(REFLECTIONMAP_EQUIRECTANGULAR) || defined(REFLECTIONMAP_SPHERICAL) || defined(REFLECTIONMAP_SKYBOX)
uniform mat4 reflectionMatrix;
#endif
#ifndef REFLECTIONMAP_SKYBOX
#if defined(USE_LOCAL_REFLECTIONMAP_CUBIC) && defined(REFLECTIONMAP_CUBIC)
uniform vec3 vReflectionPosition;
uniform vec3 vReflectionSize; 
#endif
#endif
#ifdef REFLECTIONFRESNEL
uniform vec4 reflectionLeftColor;
uniform vec4 reflectionRightColor;
#endif
#endif
#ifdef DETAIL
uniform vec4 vDetailInfos;
#endif
#define ADDITIONAL_FRAGMENT_DECLARATION
`;U.IncludesShadersStore[Bo]=Uo;const ko="defaultUboDeclaration",Vo=`layout(std140,column_major) uniform;
uniform Material
{
vec4 diffuseLeftColor;
vec4 diffuseRightColor;
vec4 opacityParts;
vec4 reflectionLeftColor;
vec4 reflectionRightColor;
vec4 refractionLeftColor;
vec4 refractionRightColor;
vec4 emissiveLeftColor;
vec4 emissiveRightColor;
vec2 vDiffuseInfos;
vec2 vAmbientInfos;
vec2 vOpacityInfos;
vec2 vReflectionInfos;
vec3 vReflectionPosition;
vec3 vReflectionSize;
vec2 vEmissiveInfos;
vec2 vLightmapInfos;
vec2 vSpecularInfos;
vec3 vBumpInfos;
mat4 diffuseMatrix;
mat4 ambientMatrix;
mat4 opacityMatrix;
mat4 reflectionMatrix;
mat4 emissiveMatrix;
mat4 lightmapMatrix;
mat4 specularMatrix;
mat4 bumpMatrix;
vec2 vTangentSpaceParams;
float pointSize;
float alphaCutOff;
mat4 refractionMatrix;
vec4 vRefractionInfos;
vec3 vRefractionPosition;
vec3 vRefractionSize;
vec4 vSpecularColor;
vec3 vEmissiveColor;
vec4 vDiffuseColor;
vec3 vAmbientColor;
#define ADDITIONAL_UBO_DECLARATION
};
#include<sceneUboDeclaration>
#include<meshUboDeclaration>
`;U.IncludesShadersStore[ko]=Vo;const Wo="prePassDeclaration",zo=`#ifdef PREPASS
#extension GL_EXT_draw_buffers : require
layout(location=0) out highp vec4 glFragData[{X}];highp vec4 gl_FragColor;
#ifdef PREPASS_DEPTH
varying highp vec3 vViewPos;
#endif
#ifdef PREPASS_VELOCITY
varying highp vec4 vCurrentPosition;varying highp vec4 vPreviousPosition;
#endif
#endif
`;U.IncludesShadersStore[Wo]=zo;const Go="oitDeclaration",Xo=`#ifdef ORDER_INDEPENDENT_TRANSPARENCY
#extension GL_EXT_draw_buffers : require
layout(location=0) out vec2 depth; 
layout(location=1) out vec4 frontColor;
layout(location=2) out vec4 backColor;
#define MAX_DEPTH 99999.0
highp vec4 gl_FragColor;
uniform sampler2D oitDepthSampler;
uniform sampler2D oitFrontColorSampler;
#endif
`;U.IncludesShadersStore[Go]=Xo;const Ho="mainUVVaryingDeclaration",Ko=`#ifdef MAINUV{X}
varying vec2 vMainUV{X};
#endif
`;U.IncludesShadersStore[Ho]=Ko;const Yo="lightFragmentDeclaration",Zo=`#ifdef LIGHT{X}
uniform vec4 vLightData{X};
uniform vec4 vLightDiffuse{X};
#ifdef SPECULARTERM
uniform vec4 vLightSpecular{X};
#else
vec4 vLightSpecular{X}=vec4(0.);
#endif
#ifdef SHADOW{X}
#ifdef SHADOWCSM{X}
uniform mat4 lightMatrix{X}[SHADOWCSMNUM_CASCADES{X}];
uniform float viewFrustumZ{X}[SHADOWCSMNUM_CASCADES{X}];
uniform float frustumLengths{X}[SHADOWCSMNUM_CASCADES{X}];
uniform float cascadeBlendFactor{X};
varying vec4 vPositionFromLight{X}[SHADOWCSMNUM_CASCADES{X}];
varying float vDepthMetric{X}[SHADOWCSMNUM_CASCADES{X}];
varying vec4 vPositionFromCamera{X};
#if defined(SHADOWPCSS{X})
uniform highp sampler2DArrayShadow shadowSampler{X};
uniform highp sampler2DArray depthSampler{X};
uniform vec2 lightSizeUVCorrection{X}[SHADOWCSMNUM_CASCADES{X}];
uniform float depthCorrection{X}[SHADOWCSMNUM_CASCADES{X}];
uniform float penumbraDarkness{X};
#elif defined(SHADOWPCF{X})
uniform highp sampler2DArrayShadow shadowSampler{X};
#else
uniform highp sampler2DArray shadowSampler{X};
#endif
#ifdef SHADOWCSMDEBUG{X}
const vec3 vCascadeColorsMultiplier{X}[8]=vec3[8]
(
vec3 ( 1.5,0.0,0.0 ),
vec3 ( 0.0,1.5,0.0 ),
vec3 ( 0.0,0.0,5.5 ),
vec3 ( 1.5,0.0,5.5 ),
vec3 ( 1.5,1.5,0.0 ),
vec3 ( 1.0,1.0,1.0 ),
vec3 ( 0.0,1.0,5.5 ),
vec3 ( 0.5,3.5,0.75 )
);
vec3 shadowDebug{X};
#endif
#ifdef SHADOWCSMUSESHADOWMAXZ{X}
int index{X}=-1;
#else
int index{X}=SHADOWCSMNUM_CASCADES{X}-1;
#endif
float diff{X}=0.;
#elif defined(SHADOWCUBE{X})
uniform samplerCube shadowSampler{X};
#else
varying vec4 vPositionFromLight{X};
varying float vDepthMetric{X};
#if defined(SHADOWPCSS{X})
uniform highp sampler2DShadow shadowSampler{X};
uniform highp sampler2D depthSampler{X};
#elif defined(SHADOWPCF{X})
uniform highp sampler2DShadow shadowSampler{X};
#else
uniform sampler2D shadowSampler{X};
#endif
uniform mat4 lightMatrix{X};
#endif
uniform vec4 shadowsInfo{X};
uniform vec2 depthValues{X};
#endif
#ifdef SPOTLIGHT{X}
uniform vec4 vLightDirection{X};
uniform vec4 vLightFalloff{X};
#elif defined(POINTLIGHT{X})
uniform vec4 vLightFalloff{X};
#elif defined(HEMILIGHT{X})
uniform vec3 vLightGround{X};
#endif
#ifdef PROJECTEDLIGHTTEXTURE{X}
uniform mat4 textureProjectionMatrix{X};
uniform sampler2D projectionLightSampler{X};
#endif
#endif
`;U.IncludesShadersStore[Yo]=Zo;const qo="lightUboDeclaration",jo=`#ifdef LIGHT{X}
uniform Light{X}
{
vec4 vLightData;
vec4 vLightDiffuse;
vec4 vLightSpecular;
#ifdef SPOTLIGHT{X}
vec4 vLightDirection;
vec4 vLightFalloff;
#elif defined(POINTLIGHT{X})
vec4 vLightFalloff;
#elif defined(HEMILIGHT{X})
vec3 vLightGround;
#endif
vec4 shadowsInfo;
vec2 depthValues;
} light{X};
#ifdef PROJECTEDLIGHTTEXTURE{X}
uniform mat4 textureProjectionMatrix{X};
uniform sampler2D projectionLightSampler{X};
#endif
#ifdef SHADOW{X}
#ifdef SHADOWCSM{X}
uniform mat4 lightMatrix{X}[SHADOWCSMNUM_CASCADES{X}];
uniform float viewFrustumZ{X}[SHADOWCSMNUM_CASCADES{X}];
uniform float frustumLengths{X}[SHADOWCSMNUM_CASCADES{X}];
uniform float cascadeBlendFactor{X};
varying vec4 vPositionFromLight{X}[SHADOWCSMNUM_CASCADES{X}];
varying float vDepthMetric{X}[SHADOWCSMNUM_CASCADES{X}];
varying vec4 vPositionFromCamera{X};
#if defined(SHADOWPCSS{X})
uniform highp sampler2DArrayShadow shadowSampler{X};
uniform highp sampler2DArray depthSampler{X};
uniform vec2 lightSizeUVCorrection{X}[SHADOWCSMNUM_CASCADES{X}];
uniform float depthCorrection{X}[SHADOWCSMNUM_CASCADES{X}];
uniform float penumbraDarkness{X};
#elif defined(SHADOWPCF{X})
uniform highp sampler2DArrayShadow shadowSampler{X};
#else
uniform highp sampler2DArray shadowSampler{X};
#endif
#ifdef SHADOWCSMDEBUG{X}
const vec3 vCascadeColorsMultiplier{X}[8]=vec3[8]
(
vec3 ( 1.5,0.0,0.0 ),
vec3 ( 0.0,1.5,0.0 ),
vec3 ( 0.0,0.0,5.5 ),
vec3 ( 1.5,0.0,5.5 ),
vec3 ( 1.5,1.5,0.0 ),
vec3 ( 1.0,1.0,1.0 ),
vec3 ( 0.0,1.0,5.5 ),
vec3 ( 0.5,3.5,0.75 )
);
vec3 shadowDebug{X};
#endif
#ifdef SHADOWCSMUSESHADOWMAXZ{X}
int index{X}=-1;
#else
int index{X}=SHADOWCSMNUM_CASCADES{X}-1;
#endif
float diff{X}=0.;
#elif defined(SHADOWCUBE{X})
uniform samplerCube shadowSampler{X}; 
#else
varying vec4 vPositionFromLight{X};
varying float vDepthMetric{X};
#if defined(SHADOWPCSS{X})
uniform highp sampler2DShadow shadowSampler{X};
uniform highp sampler2D depthSampler{X};
#elif defined(SHADOWPCF{X})
uniform highp sampler2DShadow shadowSampler{X};
#else
uniform sampler2D shadowSampler{X};
#endif
uniform mat4 lightMatrix{X};
#endif
#endif
#endif
`;U.IncludesShadersStore[qo]=jo;const $o="lightsFragmentFunctions",Qo=`struct lightingInfo
{
vec3 diffuse;
#ifdef SPECULARTERM
vec3 specular;
#endif
#ifdef NDOTL
float ndl;
#endif
};
lightingInfo computeLighting(vec3 viewDirectionW,vec3 vNormal,vec4 lightData,vec3 diffuseColor,vec3 specularColor,float range,float glossiness) {
lightingInfo result;
vec3 lightVectorW;
float attenuation=1.0;
if (lightData.w==0.)
{
vec3 direction=lightData.xyz-vPositionW;
attenuation=max(0.,1.0-length(direction)/range);
lightVectorW=normalize(direction);
}
else
{
lightVectorW=normalize(-lightData.xyz);
}
float ndl=max(0.,dot(vNormal,lightVectorW));
#ifdef NDOTL
result.ndl=ndl;
#endif
result.diffuse=ndl*diffuseColor*attenuation;
#ifdef SPECULARTERM
vec3 angleW=normalize(viewDirectionW+lightVectorW);
float specComp=max(0.,dot(vNormal,angleW));
specComp=pow(specComp,max(1.,glossiness));
result.specular=specComp*specularColor*attenuation;
#endif
return result;
}
lightingInfo computeSpotLighting(vec3 viewDirectionW,vec3 vNormal,vec4 lightData,vec4 lightDirection,vec3 diffuseColor,vec3 specularColor,float range,float glossiness) {
lightingInfo result;
vec3 direction=lightData.xyz-vPositionW;
vec3 lightVectorW=normalize(direction);
float attenuation=max(0.,1.0-length(direction)/range);
float cosAngle=max(0.,dot(lightDirection.xyz,-lightVectorW));
if (cosAngle>=lightDirection.w)
{
cosAngle=max(0.,pow(cosAngle,lightData.w));
attenuation*=cosAngle;
float ndl=max(0.,dot(vNormal,lightVectorW));
#ifdef NDOTL
result.ndl=ndl;
#endif
result.diffuse=ndl*diffuseColor*attenuation;
#ifdef SPECULARTERM
vec3 angleW=normalize(viewDirectionW+lightVectorW);
float specComp=max(0.,dot(vNormal,angleW));
specComp=pow(specComp,max(1.,glossiness));
result.specular=specComp*specularColor*attenuation;
#endif
return result;
}
result.diffuse=vec3(0.);
#ifdef SPECULARTERM
result.specular=vec3(0.);
#endif
#ifdef NDOTL
result.ndl=0.;
#endif
return result;
}
lightingInfo computeHemisphericLighting(vec3 viewDirectionW,vec3 vNormal,vec4 lightData,vec3 diffuseColor,vec3 specularColor,vec3 groundColor,float glossiness) {
lightingInfo result;
float ndl=dot(vNormal,lightData.xyz)*0.5+0.5;
#ifdef NDOTL
result.ndl=ndl;
#endif
result.diffuse=mix(groundColor,diffuseColor,ndl);
#ifdef SPECULARTERM
vec3 angleW=normalize(viewDirectionW+lightData.xyz);
float specComp=max(0.,dot(vNormal,angleW));
specComp=pow(specComp,max(1.,glossiness));
result.specular=specComp*specularColor;
#endif
return result;
}
#define inline
vec3 computeProjectionTextureDiffuseLighting(sampler2D projectionLightSampler,mat4 textureProjectionMatrix){
vec4 strq=textureProjectionMatrix*vec4(vPositionW,1.0);
strq/=strq.w;
vec3 textureColor=texture2D(projectionLightSampler,strq.xy).rgb;
return textureColor;
}`;U.IncludesShadersStore[$o]=Qo;const Jo="shadowsFragmentFunctions",eh=`#ifdef SHADOWS
#if defined(WEBGL2) || defined(WEBGPU) || defined(NATIVE)
#define TEXTUREFUNC(s,c,l) texture2DLodEXT(s,c,l)
#else
#define TEXTUREFUNC(s,c,b) texture2D(s,c,b)
#endif
#ifndef SHADOWFLOAT
float unpack(vec4 color)
{
const vec4 bit_shift=vec4(1.0/(255.0*255.0*255.0),1.0/(255.0*255.0),1.0/255.0,1.0);
return dot(color,bit_shift);
}
#endif
float computeFallOff(float value,vec2 clipSpace,float frustumEdgeFalloff)
{
float mask=smoothstep(1.0-frustumEdgeFalloff,1.00000012,clamp(dot(clipSpace,clipSpace),0.,1.));
return mix(value,1.0,mask);
}
#define inline
float computeShadowCube(vec3 lightPosition,samplerCube shadowSampler,float darkness,vec2 depthValues)
{
vec3 directionToLight=vPositionW-lightPosition;
float depth=length(directionToLight);
depth=(depth+depthValues.x)/(depthValues.y);
depth=clamp(depth,0.,1.0);
directionToLight=normalize(directionToLight);
directionToLight.y=-directionToLight.y;
#ifndef SHADOWFLOAT
float shadow=unpack(textureCube(shadowSampler,directionToLight));
#else
float shadow=textureCube(shadowSampler,directionToLight).x;
#endif
return depth>shadow ? darkness : 1.0;
}
#define inline
float computeShadowWithPoissonSamplingCube(vec3 lightPosition,samplerCube shadowSampler,float mapSize,float darkness,vec2 depthValues)
{
vec3 directionToLight=vPositionW-lightPosition;
float depth=length(directionToLight);
depth=(depth+depthValues.x)/(depthValues.y);
depth=clamp(depth,0.,1.0);
directionToLight=normalize(directionToLight);
directionToLight.y=-directionToLight.y;
float visibility=1.;
vec3 poissonDisk[4];
poissonDisk[0]=vec3(-1.0,1.0,-1.0);
poissonDisk[1]=vec3(1.0,-1.0,-1.0);
poissonDisk[2]=vec3(-1.0,-1.0,-1.0);
poissonDisk[3]=vec3(1.0,-1.0,1.0);
#ifndef SHADOWFLOAT
if (unpack(textureCube(shadowSampler,directionToLight+poissonDisk[0]*mapSize))<depth) visibility-=0.25;
if (unpack(textureCube(shadowSampler,directionToLight+poissonDisk[1]*mapSize))<depth) visibility-=0.25;
if (unpack(textureCube(shadowSampler,directionToLight+poissonDisk[2]*mapSize))<depth) visibility-=0.25;
if (unpack(textureCube(shadowSampler,directionToLight+poissonDisk[3]*mapSize))<depth) visibility-=0.25;
#else
if (textureCube(shadowSampler,directionToLight+poissonDisk[0]*mapSize).x<depth) visibility-=0.25;
if (textureCube(shadowSampler,directionToLight+poissonDisk[1]*mapSize).x<depth) visibility-=0.25;
if (textureCube(shadowSampler,directionToLight+poissonDisk[2]*mapSize).x<depth) visibility-=0.25;
if (textureCube(shadowSampler,directionToLight+poissonDisk[3]*mapSize).x<depth) visibility-=0.25;
#endif
return min(1.0,visibility+darkness);
}
#define inline
float computeShadowWithESMCube(vec3 lightPosition,samplerCube shadowSampler,float darkness,float depthScale,vec2 depthValues)
{
vec3 directionToLight=vPositionW-lightPosition;
float depth=length(directionToLight);
depth=(depth+depthValues.x)/(depthValues.y);
float shadowPixelDepth=clamp(depth,0.,1.0);
directionToLight=normalize(directionToLight);
directionToLight.y=-directionToLight.y;
#ifndef SHADOWFLOAT
float shadowMapSample=unpack(textureCube(shadowSampler,directionToLight));
#else
float shadowMapSample=textureCube(shadowSampler,directionToLight).x;
#endif
float esm=1.0-clamp(exp(min(87.,depthScale*shadowPixelDepth))*shadowMapSample,0.,1.-darkness); 
return esm;
}
#define inline
float computeShadowWithCloseESMCube(vec3 lightPosition,samplerCube shadowSampler,float darkness,float depthScale,vec2 depthValues)
{
vec3 directionToLight=vPositionW-lightPosition;
float depth=length(directionToLight);
depth=(depth+depthValues.x)/(depthValues.y);
float shadowPixelDepth=clamp(depth,0.,1.0);
directionToLight=normalize(directionToLight);
directionToLight.y=-directionToLight.y;
#ifndef SHADOWFLOAT
float shadowMapSample=unpack(textureCube(shadowSampler,directionToLight));
#else
float shadowMapSample=textureCube(shadowSampler,directionToLight).x;
#endif
float esm=clamp(exp(min(87.,-depthScale*(shadowPixelDepth-shadowMapSample))),darkness,1.);
return esm;
}
#if defined(WEBGL2) || defined(WEBGPU) || defined(NATIVE)
#define inline
float computeShadowCSM(float layer,vec4 vPositionFromLight,float depthMetric,highp sampler2DArray shadowSampler,float darkness,float frustumEdgeFalloff)
{
vec3 clipSpace=vPositionFromLight.xyz/vPositionFromLight.w;
vec2 uv=0.5*clipSpace.xy+vec2(0.5);
vec3 uvLayer=vec3(uv.x,uv.y,layer);
float shadowPixelDepth=clamp(depthMetric,0.,1.0);
#ifndef SHADOWFLOAT
float shadow=unpack(texture2D(shadowSampler,uvLayer));
#else
float shadow=texture2D(shadowSampler,uvLayer).x;
#endif
return shadowPixelDepth>shadow ? computeFallOff(darkness,clipSpace.xy,frustumEdgeFalloff) : 1.;
}
#endif
#define inline
float computeShadow(vec4 vPositionFromLight,float depthMetric,sampler2D shadowSampler,float darkness,float frustumEdgeFalloff)
{
vec3 clipSpace=vPositionFromLight.xyz/vPositionFromLight.w;
vec2 uv=0.5*clipSpace.xy+vec2(0.5);
if (uv.x<0. || uv.x>1.0 || uv.y<0. || uv.y>1.0)
{
return 1.0;
}
else
{
float shadowPixelDepth=clamp(depthMetric,0.,1.0);
#ifndef SHADOWFLOAT
float shadow=unpack(TEXTUREFUNC(shadowSampler,uv,0.));
#else
float shadow=TEXTUREFUNC(shadowSampler,uv,0.).x;
#endif
return shadowPixelDepth>shadow ? computeFallOff(darkness,clipSpace.xy,frustumEdgeFalloff) : 1.;
}
}
#define inline
float computeShadowWithPoissonSampling(vec4 vPositionFromLight,float depthMetric,sampler2D shadowSampler,float mapSize,float darkness,float frustumEdgeFalloff)
{
vec3 clipSpace=vPositionFromLight.xyz/vPositionFromLight.w;
vec2 uv=0.5*clipSpace.xy+vec2(0.5);
if (uv.x<0. || uv.x>1.0 || uv.y<0. || uv.y>1.0)
{
return 1.0;
}
else
{
float shadowPixelDepth=clamp(depthMetric,0.,1.0);
float visibility=1.;
vec2 poissonDisk[4];
poissonDisk[0]=vec2(-0.94201624,-0.39906216);
poissonDisk[1]=vec2(0.94558609,-0.76890725);
poissonDisk[2]=vec2(-0.094184101,-0.92938870);
poissonDisk[3]=vec2(0.34495938,0.29387760);
#ifndef SHADOWFLOAT
if (unpack(TEXTUREFUNC(shadowSampler,uv+poissonDisk[0]*mapSize,0.))<shadowPixelDepth) visibility-=0.25;
if (unpack(TEXTUREFUNC(shadowSampler,uv+poissonDisk[1]*mapSize,0.))<shadowPixelDepth) visibility-=0.25;
if (unpack(TEXTUREFUNC(shadowSampler,uv+poissonDisk[2]*mapSize,0.))<shadowPixelDepth) visibility-=0.25;
if (unpack(TEXTUREFUNC(shadowSampler,uv+poissonDisk[3]*mapSize,0.))<shadowPixelDepth) visibility-=0.25;
#else
if (TEXTUREFUNC(shadowSampler,uv+poissonDisk[0]*mapSize,0.).x<shadowPixelDepth) visibility-=0.25;
if (TEXTUREFUNC(shadowSampler,uv+poissonDisk[1]*mapSize,0.).x<shadowPixelDepth) visibility-=0.25;
if (TEXTUREFUNC(shadowSampler,uv+poissonDisk[2]*mapSize,0.).x<shadowPixelDepth) visibility-=0.25;
if (TEXTUREFUNC(shadowSampler,uv+poissonDisk[3]*mapSize,0.).x<shadowPixelDepth) visibility-=0.25;
#endif
return computeFallOff(min(1.0,visibility+darkness),clipSpace.xy,frustumEdgeFalloff);
}
}
#define inline
float computeShadowWithESM(vec4 vPositionFromLight,float depthMetric,sampler2D shadowSampler,float darkness,float depthScale,float frustumEdgeFalloff)
{
vec3 clipSpace=vPositionFromLight.xyz/vPositionFromLight.w;
vec2 uv=0.5*clipSpace.xy+vec2(0.5);
if (uv.x<0. || uv.x>1.0 || uv.y<0. || uv.y>1.0)
{
return 1.0;
}
else
{
float shadowPixelDepth=clamp(depthMetric,0.,1.0);
#ifndef SHADOWFLOAT
float shadowMapSample=unpack(TEXTUREFUNC(shadowSampler,uv,0.));
#else
float shadowMapSample=TEXTUREFUNC(shadowSampler,uv,0.).x;
#endif
float esm=1.0-clamp(exp(min(87.,depthScale*shadowPixelDepth))*shadowMapSample,0.,1.-darkness);
return computeFallOff(esm,clipSpace.xy,frustumEdgeFalloff);
}
}
#define inline
float computeShadowWithCloseESM(vec4 vPositionFromLight,float depthMetric,sampler2D shadowSampler,float darkness,float depthScale,float frustumEdgeFalloff)
{
vec3 clipSpace=vPositionFromLight.xyz/vPositionFromLight.w;
vec2 uv=0.5*clipSpace.xy+vec2(0.5);
if (uv.x<0. || uv.x>1.0 || uv.y<0. || uv.y>1.0)
{
return 1.0;
}
else
{
float shadowPixelDepth=clamp(depthMetric,0.,1.0); 
#ifndef SHADOWFLOAT
float shadowMapSample=unpack(TEXTUREFUNC(shadowSampler,uv,0.));
#else
float shadowMapSample=TEXTUREFUNC(shadowSampler,uv,0.).x;
#endif
float esm=clamp(exp(min(87.,-depthScale*(shadowPixelDepth-shadowMapSample))),darkness,1.);
return computeFallOff(esm,clipSpace.xy,frustumEdgeFalloff);
}
}
#ifdef IS_NDC_HALF_ZRANGE
#define ZINCLIP clipSpace.z
#else
#define ZINCLIP uvDepth.z
#endif
#if defined(WEBGL2) || defined(WEBGPU) || defined(NATIVE)
#define GREATEST_LESS_THAN_ONE 0.99999994
#define inline
float computeShadowWithCSMPCF1(float layer,vec4 vPositionFromLight,float depthMetric,highp sampler2DArrayShadow shadowSampler,float darkness,float frustumEdgeFalloff)
{
vec3 clipSpace=vPositionFromLight.xyz/vPositionFromLight.w;
vec3 uvDepth=vec3(0.5*clipSpace.xyz+vec3(0.5));
uvDepth.z=clamp(ZINCLIP,0.,GREATEST_LESS_THAN_ONE);
vec4 uvDepthLayer=vec4(uvDepth.x,uvDepth.y,layer,uvDepth.z);
float shadow=texture2D(shadowSampler,uvDepthLayer);
shadow=mix(darkness,1.,shadow);
return computeFallOff(shadow,clipSpace.xy,frustumEdgeFalloff);
}
#define inline
float computeShadowWithCSMPCF3(float layer,vec4 vPositionFromLight,float depthMetric,highp sampler2DArrayShadow shadowSampler,vec2 shadowMapSizeAndInverse,float darkness,float frustumEdgeFalloff)
{
vec3 clipSpace=vPositionFromLight.xyz/vPositionFromLight.w;
vec3 uvDepth=vec3(0.5*clipSpace.xyz+vec3(0.5));
uvDepth.z=clamp(ZINCLIP,0.,GREATEST_LESS_THAN_ONE);
vec2 uv=uvDepth.xy*shadowMapSizeAndInverse.x; 
uv+=0.5; 
vec2 st=fract(uv); 
vec2 base_uv=floor(uv)-0.5; 
base_uv*=shadowMapSizeAndInverse.y; 
vec2 uvw0=3.-2.*st;
vec2 uvw1=1.+2.*st;
vec2 u=vec2((2.-st.x)/uvw0.x-1.,st.x/uvw1.x+1.)*shadowMapSizeAndInverse.y;
vec2 v=vec2((2.-st.y)/uvw0.y-1.,st.y/uvw1.y+1.)*shadowMapSizeAndInverse.y;
float shadow=0.;
shadow+=uvw0.x*uvw0.y*texture2D(shadowSampler,vec4(base_uv.xy+vec2(u[0],v[0]),layer,uvDepth.z));
shadow+=uvw1.x*uvw0.y*texture2D(shadowSampler,vec4(base_uv.xy+vec2(u[1],v[0]),layer,uvDepth.z));
shadow+=uvw0.x*uvw1.y*texture2D(shadowSampler,vec4(base_uv.xy+vec2(u[0],v[1]),layer,uvDepth.z));
shadow+=uvw1.x*uvw1.y*texture2D(shadowSampler,vec4(base_uv.xy+vec2(u[1],v[1]),layer,uvDepth.z));
shadow=shadow/16.;
shadow=mix(darkness,1.,shadow);
return computeFallOff(shadow,clipSpace.xy,frustumEdgeFalloff);
}
#define inline
float computeShadowWithCSMPCF5(float layer,vec4 vPositionFromLight,float depthMetric,highp sampler2DArrayShadow shadowSampler,vec2 shadowMapSizeAndInverse,float darkness,float frustumEdgeFalloff)
{
vec3 clipSpace=vPositionFromLight.xyz/vPositionFromLight.w;
vec3 uvDepth=vec3(0.5*clipSpace.xyz+vec3(0.5));
uvDepth.z=clamp(ZINCLIP,0.,GREATEST_LESS_THAN_ONE);
vec2 uv=uvDepth.xy*shadowMapSizeAndInverse.x; 
uv+=0.5; 
vec2 st=fract(uv); 
vec2 base_uv=floor(uv)-0.5; 
base_uv*=shadowMapSizeAndInverse.y; 
vec2 uvw0=4.-3.*st;
vec2 uvw1=vec2(7.);
vec2 uvw2=1.+3.*st;
vec3 u=vec3((3.-2.*st.x)/uvw0.x-2.,(3.+st.x)/uvw1.x,st.x/uvw2.x+2.)*shadowMapSizeAndInverse.y;
vec3 v=vec3((3.-2.*st.y)/uvw0.y-2.,(3.+st.y)/uvw1.y,st.y/uvw2.y+2.)*shadowMapSizeAndInverse.y;
float shadow=0.;
shadow+=uvw0.x*uvw0.y*texture2D(shadowSampler,vec4(base_uv.xy+vec2(u[0],v[0]),layer,uvDepth.z));
shadow+=uvw1.x*uvw0.y*texture2D(shadowSampler,vec4(base_uv.xy+vec2(u[1],v[0]),layer,uvDepth.z));
shadow+=uvw2.x*uvw0.y*texture2D(shadowSampler,vec4(base_uv.xy+vec2(u[2],v[0]),layer,uvDepth.z));
shadow+=uvw0.x*uvw1.y*texture2D(shadowSampler,vec4(base_uv.xy+vec2(u[0],v[1]),layer,uvDepth.z));
shadow+=uvw1.x*uvw1.y*texture2D(shadowSampler,vec4(base_uv.xy+vec2(u[1],v[1]),layer,uvDepth.z));
shadow+=uvw2.x*uvw1.y*texture2D(shadowSampler,vec4(base_uv.xy+vec2(u[2],v[1]),layer,uvDepth.z));
shadow+=uvw0.x*uvw2.y*texture2D(shadowSampler,vec4(base_uv.xy+vec2(u[0],v[2]),layer,uvDepth.z));
shadow+=uvw1.x*uvw2.y*texture2D(shadowSampler,vec4(base_uv.xy+vec2(u[1],v[2]),layer,uvDepth.z));
shadow+=uvw2.x*uvw2.y*texture2D(shadowSampler,vec4(base_uv.xy+vec2(u[2],v[2]),layer,uvDepth.z));
shadow=shadow/144.;
shadow=mix(darkness,1.,shadow);
return computeFallOff(shadow,clipSpace.xy,frustumEdgeFalloff);
}
#define inline
float computeShadowWithPCF1(vec4 vPositionFromLight,float depthMetric,highp sampler2DShadow shadowSampler,float darkness,float frustumEdgeFalloff)
{
if (depthMetric>1.0 || depthMetric<0.0) {
return 1.0;
}
else
{
vec3 clipSpace=vPositionFromLight.xyz/vPositionFromLight.w;
vec3 uvDepth=vec3(0.5*clipSpace.xyz+vec3(0.5));
uvDepth.z=ZINCLIP;
float shadow=TEXTUREFUNC(shadowSampler,uvDepth,0.);
shadow=mix(darkness,1.,shadow);
return computeFallOff(shadow,clipSpace.xy,frustumEdgeFalloff);
}
}
#define inline
float computeShadowWithPCF3(vec4 vPositionFromLight,float depthMetric,highp sampler2DShadow shadowSampler,vec2 shadowMapSizeAndInverse,float darkness,float frustumEdgeFalloff)
{
if (depthMetric>1.0 || depthMetric<0.0) {
return 1.0;
}
else
{
vec3 clipSpace=vPositionFromLight.xyz/vPositionFromLight.w;
vec3 uvDepth=vec3(0.5*clipSpace.xyz+vec3(0.5));
uvDepth.z=ZINCLIP;
vec2 uv=uvDepth.xy*shadowMapSizeAndInverse.x; 
uv+=0.5; 
vec2 st=fract(uv); 
vec2 base_uv=floor(uv)-0.5; 
base_uv*=shadowMapSizeAndInverse.y; 
vec2 uvw0=3.-2.*st;
vec2 uvw1=1.+2.*st;
vec2 u=vec2((2.-st.x)/uvw0.x-1.,st.x/uvw1.x+1.)*shadowMapSizeAndInverse.y;
vec2 v=vec2((2.-st.y)/uvw0.y-1.,st.y/uvw1.y+1.)*shadowMapSizeAndInverse.y;
float shadow=0.;
shadow+=uvw0.x*uvw0.y*TEXTUREFUNC(shadowSampler,vec3(base_uv.xy+vec2(u[0],v[0]),uvDepth.z),0.);
shadow+=uvw1.x*uvw0.y*TEXTUREFUNC(shadowSampler,vec3(base_uv.xy+vec2(u[1],v[0]),uvDepth.z),0.);
shadow+=uvw0.x*uvw1.y*TEXTUREFUNC(shadowSampler,vec3(base_uv.xy+vec2(u[0],v[1]),uvDepth.z),0.);
shadow+=uvw1.x*uvw1.y*TEXTUREFUNC(shadowSampler,vec3(base_uv.xy+vec2(u[1],v[1]),uvDepth.z),0.);
shadow=shadow/16.;
shadow=mix(darkness,1.,shadow);
return computeFallOff(shadow,clipSpace.xy,frustumEdgeFalloff);
}
}
#define inline
float computeShadowWithPCF5(vec4 vPositionFromLight,float depthMetric,highp sampler2DShadow shadowSampler,vec2 shadowMapSizeAndInverse,float darkness,float frustumEdgeFalloff)
{
if (depthMetric>1.0 || depthMetric<0.0) {
return 1.0;
}
else
{
vec3 clipSpace=vPositionFromLight.xyz/vPositionFromLight.w;
vec3 uvDepth=vec3(0.5*clipSpace.xyz+vec3(0.5));
uvDepth.z=ZINCLIP;
vec2 uv=uvDepth.xy*shadowMapSizeAndInverse.x; 
uv+=0.5; 
vec2 st=fract(uv); 
vec2 base_uv=floor(uv)-0.5; 
base_uv*=shadowMapSizeAndInverse.y; 
vec2 uvw0=4.-3.*st;
vec2 uvw1=vec2(7.);
vec2 uvw2=1.+3.*st;
vec3 u=vec3((3.-2.*st.x)/uvw0.x-2.,(3.+st.x)/uvw1.x,st.x/uvw2.x+2.)*shadowMapSizeAndInverse.y;
vec3 v=vec3((3.-2.*st.y)/uvw0.y-2.,(3.+st.y)/uvw1.y,st.y/uvw2.y+2.)*shadowMapSizeAndInverse.y;
float shadow=0.;
shadow+=uvw0.x*uvw0.y*TEXTUREFUNC(shadowSampler,vec3(base_uv.xy+vec2(u[0],v[0]),uvDepth.z),0.);
shadow+=uvw1.x*uvw0.y*TEXTUREFUNC(shadowSampler,vec3(base_uv.xy+vec2(u[1],v[0]),uvDepth.z),0.);
shadow+=uvw2.x*uvw0.y*TEXTUREFUNC(shadowSampler,vec3(base_uv.xy+vec2(u[2],v[0]),uvDepth.z),0.);
shadow+=uvw0.x*uvw1.y*TEXTUREFUNC(shadowSampler,vec3(base_uv.xy+vec2(u[0],v[1]),uvDepth.z),0.);
shadow+=uvw1.x*uvw1.y*TEXTUREFUNC(shadowSampler,vec3(base_uv.xy+vec2(u[1],v[1]),uvDepth.z),0.);
shadow+=uvw2.x*uvw1.y*TEXTUREFUNC(shadowSampler,vec3(base_uv.xy+vec2(u[2],v[1]),uvDepth.z),0.);
shadow+=uvw0.x*uvw2.y*TEXTUREFUNC(shadowSampler,vec3(base_uv.xy+vec2(u[0],v[2]),uvDepth.z),0.);
shadow+=uvw1.x*uvw2.y*TEXTUREFUNC(shadowSampler,vec3(base_uv.xy+vec2(u[1],v[2]),uvDepth.z),0.);
shadow+=uvw2.x*uvw2.y*TEXTUREFUNC(shadowSampler,vec3(base_uv.xy+vec2(u[2],v[2]),uvDepth.z),0.);
shadow=shadow/144.;
shadow=mix(darkness,1.,shadow);
return computeFallOff(shadow,clipSpace.xy,frustumEdgeFalloff);
}
}
const vec3 PoissonSamplers32[64]=vec3[64](
vec3(0.06407013,0.05409927,0.),
vec3(0.7366577,0.5789394,0.),
vec3(-0.6270542,-0.5320278,0.),
vec3(-0.4096107,0.8411095,0.),
vec3(0.6849564,-0.4990818,0.),
vec3(-0.874181,-0.04579735,0.),
vec3(0.9989998,0.0009880066,0.),
vec3(-0.004920578,-0.9151649,0.),
vec3(0.1805763,0.9747483,0.),
vec3(-0.2138451,0.2635818,0.),
vec3(0.109845,0.3884785,0.),
vec3(0.06876755,-0.3581074,0.),
vec3(0.374073,-0.7661266,0.),
vec3(0.3079132,-0.1216763,0.),
vec3(-0.3794335,-0.8271583,0.),
vec3(-0.203878,-0.07715034,0.),
vec3(0.5912697,0.1469799,0.),
vec3(-0.88069,0.3031784,0.),
vec3(0.5040108,0.8283722,0.),
vec3(-0.5844124,0.5494877,0.),
vec3(0.6017799,-0.1726654,0.),
vec3(-0.5554981,0.1559997,0.),
vec3(-0.3016369,-0.3900928,0.),
vec3(-0.5550632,-0.1723762,0.),
vec3(0.925029,0.2995041,0.),
vec3(-0.2473137,0.5538505,0.),
vec3(0.9183037,-0.2862392,0.),
vec3(0.2469421,0.6718712,0.),
vec3(0.3916397,-0.4328209,0.),
vec3(-0.03576927,-0.6220032,0.),
vec3(-0.04661255,0.7995201,0.),
vec3(0.4402924,0.3640312,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.),
vec3(0.,0.,0.)
);
const vec3 PoissonSamplers64[64]=vec3[64](
vec3(-0.613392,0.617481,0.),
vec3(0.170019,-0.040254,0.),
vec3(-0.299417,0.791925,0.),
vec3(0.645680,0.493210,0.),
vec3(-0.651784,0.717887,0.),
vec3(0.421003,0.027070,0.),
vec3(-0.817194,-0.271096,0.),
vec3(-0.705374,-0.668203,0.),
vec3(0.977050,-0.108615,0.),
vec3(0.063326,0.142369,0.),
vec3(0.203528,0.214331,0.),
vec3(-0.667531,0.326090,0.),
vec3(-0.098422,-0.295755,0.),
vec3(-0.885922,0.215369,0.),
vec3(0.566637,0.605213,0.),
vec3(0.039766,-0.396100,0.),
vec3(0.751946,0.453352,0.),
vec3(0.078707,-0.715323,0.),
vec3(-0.075838,-0.529344,0.),
vec3(0.724479,-0.580798,0.),
vec3(0.222999,-0.215125,0.),
vec3(-0.467574,-0.405438,0.),
vec3(-0.248268,-0.814753,0.),
vec3(0.354411,-0.887570,0.),
vec3(0.175817,0.382366,0.),
vec3(0.487472,-0.063082,0.),
vec3(-0.084078,0.898312,0.),
vec3(0.488876,-0.783441,0.),
vec3(0.470016,0.217933,0.),
vec3(-0.696890,-0.549791,0.),
vec3(-0.149693,0.605762,0.),
vec3(0.034211,0.979980,0.),
vec3(0.503098,-0.308878,0.),
vec3(-0.016205,-0.872921,0.),
vec3(0.385784,-0.393902,0.),
vec3(-0.146886,-0.859249,0.),
vec3(0.643361,0.164098,0.),
vec3(0.634388,-0.049471,0.),
vec3(-0.688894,0.007843,0.),
vec3(0.464034,-0.188818,0.),
vec3(-0.440840,0.137486,0.),
vec3(0.364483,0.511704,0.),
vec3(0.034028,0.325968,0.),
vec3(0.099094,-0.308023,0.),
vec3(0.693960,-0.366253,0.),
vec3(0.678884,-0.204688,0.),
vec3(0.001801,0.780328,0.),
vec3(0.145177,-0.898984,0.),
vec3(0.062655,-0.611866,0.),
vec3(0.315226,-0.604297,0.),
vec3(-0.780145,0.486251,0.),
vec3(-0.371868,0.882138,0.),
vec3(0.200476,0.494430,0.),
vec3(-0.494552,-0.711051,0.),
vec3(0.612476,0.705252,0.),
vec3(-0.578845,-0.768792,0.),
vec3(-0.772454,-0.090976,0.),
vec3(0.504440,0.372295,0.),
vec3(0.155736,0.065157,0.),
vec3(0.391522,0.849605,0.),
vec3(-0.620106,-0.328104,0.),
vec3(0.789239,-0.419965,0.),
vec3(-0.545396,0.538133,0.),
vec3(-0.178564,-0.596057,0.)
);
#define inline
float computeShadowWithCSMPCSS(float layer,vec4 vPositionFromLight,float depthMetric,highp sampler2DArray depthSampler,highp sampler2DArrayShadow shadowSampler,float shadowMapSizeInverse,float lightSizeUV,float darkness,float frustumEdgeFalloff,int searchTapCount,int pcfTapCount,vec3[64] poissonSamplers,vec2 lightSizeUVCorrection,float depthCorrection,float penumbraDarkness)
{
vec3 clipSpace=vPositionFromLight.xyz/vPositionFromLight.w;
vec3 uvDepth=vec3(0.5*clipSpace.xyz+vec3(0.5));
uvDepth.z=clamp(ZINCLIP,0.,GREATEST_LESS_THAN_ONE);
vec4 uvDepthLayer=vec4(uvDepth.x,uvDepth.y,layer,uvDepth.z);
float blockerDepth=0.0;
float sumBlockerDepth=0.0;
float numBlocker=0.0;
for (int i=0; i<searchTapCount; i ++) {
blockerDepth=texture2D(depthSampler,vec3(uvDepth.xy+(lightSizeUV*lightSizeUVCorrection*shadowMapSizeInverse*PoissonSamplers32[i].xy),layer)).r;
if (blockerDepth<depthMetric) {
sumBlockerDepth+=blockerDepth;
numBlocker++;
}
}
float avgBlockerDepth=sumBlockerDepth/numBlocker;
float AAOffset=shadowMapSizeInverse*10.;
float penumbraRatio=((depthMetric-avgBlockerDepth)*depthCorrection+AAOffset);
vec4 filterRadius=vec4(penumbraRatio*lightSizeUV*lightSizeUVCorrection*shadowMapSizeInverse,0.,0.);
float random=getRand(vPositionFromLight.xy);
float rotationAngle=random*3.1415926;
vec2 rotationVector=vec2(cos(rotationAngle),sin(rotationAngle));
float shadow=0.;
for (int i=0; i<pcfTapCount; i++) {
vec4 offset=vec4(poissonSamplers[i],0.);
offset=vec4(offset.x*rotationVector.x-offset.y*rotationVector.y,offset.y*rotationVector.x+offset.x*rotationVector.y,0.,0.);
shadow+=texture2D(shadowSampler,uvDepthLayer+offset*filterRadius);
}
shadow/=float(pcfTapCount);
shadow=mix(shadow,1.,min((depthMetric-avgBlockerDepth)*depthCorrection*penumbraDarkness,1.));
shadow=mix(darkness,1.,shadow);
if (numBlocker<1.0) {
return 1.0;
}
else
{
return computeFallOff(shadow,clipSpace.xy,frustumEdgeFalloff);
}
}
#define inline
float computeShadowWithPCSS(vec4 vPositionFromLight,float depthMetric,sampler2D depthSampler,highp sampler2DShadow shadowSampler,float shadowMapSizeInverse,float lightSizeUV,float darkness,float frustumEdgeFalloff,int searchTapCount,int pcfTapCount,vec3[64] poissonSamplers)
{
if (depthMetric>1.0 || depthMetric<0.0) {
return 1.0;
}
else
{
vec3 clipSpace=vPositionFromLight.xyz/vPositionFromLight.w;
vec3 uvDepth=vec3(0.5*clipSpace.xyz+vec3(0.5));
uvDepth.z=ZINCLIP;
float blockerDepth=0.0;
float sumBlockerDepth=0.0;
float numBlocker=0.0;
for (int i=0; i<searchTapCount; i ++) {
blockerDepth=TEXTUREFUNC(depthSampler,uvDepth.xy+(lightSizeUV*shadowMapSizeInverse*PoissonSamplers32[i].xy),0.).r;
if (blockerDepth<depthMetric) {
sumBlockerDepth+=blockerDepth;
numBlocker++;
}
}
if (numBlocker<1.0) {
return 1.0;
}
else
{
float avgBlockerDepth=sumBlockerDepth/numBlocker;
float AAOffset=shadowMapSizeInverse*10.;
float penumbraRatio=((depthMetric-avgBlockerDepth)+AAOffset);
float filterRadius=penumbraRatio*lightSizeUV*shadowMapSizeInverse;
float random=getRand(vPositionFromLight.xy);
float rotationAngle=random*3.1415926;
vec2 rotationVector=vec2(cos(rotationAngle),sin(rotationAngle));
float shadow=0.;
for (int i=0; i<pcfTapCount; i++) {
vec3 offset=poissonSamplers[i];
offset=vec3(offset.x*rotationVector.x-offset.y*rotationVector.y,offset.y*rotationVector.x+offset.x*rotationVector.y,0.);
shadow+=TEXTUREFUNC(shadowSampler,uvDepth+offset*filterRadius,0.);
}
shadow/=float(pcfTapCount);
shadow=mix(shadow,1.,depthMetric-avgBlockerDepth);
shadow=mix(darkness,1.,shadow);
return computeFallOff(shadow,clipSpace.xy,frustumEdgeFalloff);
}
}
}
#define inline
float computeShadowWithPCSS16(vec4 vPositionFromLight,float depthMetric,sampler2D depthSampler,highp sampler2DShadow shadowSampler,float shadowMapSizeInverse,float lightSizeUV,float darkness,float frustumEdgeFalloff)
{
return computeShadowWithPCSS(vPositionFromLight,depthMetric,depthSampler,shadowSampler,shadowMapSizeInverse,lightSizeUV,darkness,frustumEdgeFalloff,16,16,PoissonSamplers32);
}
#define inline
float computeShadowWithPCSS32(vec4 vPositionFromLight,float depthMetric,sampler2D depthSampler,highp sampler2DShadow shadowSampler,float shadowMapSizeInverse,float lightSizeUV,float darkness,float frustumEdgeFalloff)
{
return computeShadowWithPCSS(vPositionFromLight,depthMetric,depthSampler,shadowSampler,shadowMapSizeInverse,lightSizeUV,darkness,frustumEdgeFalloff,16,32,PoissonSamplers32);
}
#define inline
float computeShadowWithPCSS64(vec4 vPositionFromLight,float depthMetric,sampler2D depthSampler,highp sampler2DShadow shadowSampler,float shadowMapSizeInverse,float lightSizeUV,float darkness,float frustumEdgeFalloff)
{
return computeShadowWithPCSS(vPositionFromLight,depthMetric,depthSampler,shadowSampler,shadowMapSizeInverse,lightSizeUV,darkness,frustumEdgeFalloff,32,64,PoissonSamplers64);
}
#define inline
float computeShadowWithCSMPCSS16(float layer,vec4 vPositionFromLight,float depthMetric,highp sampler2DArray depthSampler,highp sampler2DArrayShadow shadowSampler,float shadowMapSizeInverse,float lightSizeUV,float darkness,float frustumEdgeFalloff,vec2 lightSizeUVCorrection,float depthCorrection,float penumbraDarkness)
{
return computeShadowWithCSMPCSS(layer,vPositionFromLight,depthMetric,depthSampler,shadowSampler,shadowMapSizeInverse,lightSizeUV,darkness,frustumEdgeFalloff,16,16,PoissonSamplers32,lightSizeUVCorrection,depthCorrection,penumbraDarkness);
}
#define inline
float computeShadowWithCSMPCSS32(float layer,vec4 vPositionFromLight,float depthMetric,highp sampler2DArray depthSampler,highp sampler2DArrayShadow shadowSampler,float shadowMapSizeInverse,float lightSizeUV,float darkness,float frustumEdgeFalloff,vec2 lightSizeUVCorrection,float depthCorrection,float penumbraDarkness)
{
return computeShadowWithCSMPCSS(layer,vPositionFromLight,depthMetric,depthSampler,shadowSampler,shadowMapSizeInverse,lightSizeUV,darkness,frustumEdgeFalloff,16,32,PoissonSamplers32,lightSizeUVCorrection,depthCorrection,penumbraDarkness);
}
#define inline
float computeShadowWithCSMPCSS64(float layer,vec4 vPositionFromLight,float depthMetric,highp sampler2DArray depthSampler,highp sampler2DArrayShadow shadowSampler,float shadowMapSizeInverse,float lightSizeUV,float darkness,float frustumEdgeFalloff,vec2 lightSizeUVCorrection,float depthCorrection,float penumbraDarkness)
{
return computeShadowWithCSMPCSS(layer,vPositionFromLight,depthMetric,depthSampler,shadowSampler,shadowMapSizeInverse,lightSizeUV,darkness,frustumEdgeFalloff,32,64,PoissonSamplers64,lightSizeUVCorrection,depthCorrection,penumbraDarkness);
}
#endif
#endif
`;U.IncludesShadersStore[Jo]=eh;const th="samplerFragmentDeclaration",ih=`#ifdef _DEFINENAME_
#if _DEFINENAME_DIRECTUV==1
#define v_VARYINGNAME_UV vMainUV1
#elif _DEFINENAME_DIRECTUV==2
#define v_VARYINGNAME_UV vMainUV2
#elif _DEFINENAME_DIRECTUV==3
#define v_VARYINGNAME_UV vMainUV3
#elif _DEFINENAME_DIRECTUV==4
#define v_VARYINGNAME_UV vMainUV4
#elif _DEFINENAME_DIRECTUV==5
#define v_VARYINGNAME_UV vMainUV5
#elif _DEFINENAME_DIRECTUV==6
#define v_VARYINGNAME_UV vMainUV6
#else
varying vec2 v_VARYINGNAME_UV;
#endif
uniform sampler2D _SAMPLERNAME_Sampler;
#endif
`;U.IncludesShadersStore[th]=ih;const sh="fresnelFunction",rh=`#ifdef FRESNEL
float computeFresnelTerm(vec3 viewDirection,vec3 worldNormal,float bias,float power)
{
float fresnelTerm=pow(bias+abs(dot(viewDirection,worldNormal)),power);
return clamp(fresnelTerm,0.,1.);
}
#endif
`;U.IncludesShadersStore[sh]=rh;const nh="reflectionFunction",ah=`vec3 computeFixedEquirectangularCoords(vec4 worldPos,vec3 worldNormal,vec3 direction)
{
float lon=atan(direction.z,direction.x);
float lat=acos(direction.y);
vec2 sphereCoords=vec2(lon,lat)*RECIPROCAL_PI2*2.0;
float s=sphereCoords.x*0.5+0.5;
float t=sphereCoords.y;
return vec3(s,t,0); 
}
vec3 computeMirroredFixedEquirectangularCoords(vec4 worldPos,vec3 worldNormal,vec3 direction)
{
float lon=atan(direction.z,direction.x);
float lat=acos(direction.y);
vec2 sphereCoords=vec2(lon,lat)*RECIPROCAL_PI2*2.0;
float s=sphereCoords.x*0.5+0.5;
float t=sphereCoords.y;
return vec3(1.0-s,t,0); 
}
vec3 computeEquirectangularCoords(vec4 worldPos,vec3 worldNormal,vec3 eyePosition,mat4 reflectionMatrix)
{
vec3 cameraToVertex=normalize(worldPos.xyz-eyePosition);
vec3 r=normalize(reflect(cameraToVertex,worldNormal));
r=vec3(reflectionMatrix*vec4(r,0));
float lon=atan(r.z,r.x);
float lat=acos(r.y);
vec2 sphereCoords=vec2(lon,lat)*RECIPROCAL_PI2*2.0;
float s=sphereCoords.x*0.5+0.5;
float t=sphereCoords.y;
return vec3(s,t,0);
}
vec3 computeSphericalCoords(vec4 worldPos,vec3 worldNormal,mat4 view,mat4 reflectionMatrix)
{
vec3 viewDir=normalize(vec3(view*worldPos));
vec3 viewNormal=normalize(vec3(view*vec4(worldNormal,0.0)));
vec3 r=reflect(viewDir,viewNormal);
r=vec3(reflectionMatrix*vec4(r,0));
r.z=r.z-1.0;
float m=2.0*length(r);
return vec3(r.x/m+0.5,1.0-r.y/m-0.5,0);
}
vec3 computePlanarCoords(vec4 worldPos,vec3 worldNormal,vec3 eyePosition,mat4 reflectionMatrix)
{
vec3 viewDir=worldPos.xyz-eyePosition;
vec3 coords=normalize(reflect(viewDir,worldNormal));
return vec3(reflectionMatrix*vec4(coords,1));
}
vec3 computeCubicCoords(vec4 worldPos,vec3 worldNormal,vec3 eyePosition,mat4 reflectionMatrix)
{
vec3 viewDir=normalize(worldPos.xyz-eyePosition);
vec3 coords=reflect(viewDir,worldNormal);
coords=vec3(reflectionMatrix*vec4(coords,0));
#ifdef INVERTCUBICMAP
coords.y*=-1.0;
#endif
return coords;
}
vec3 computeCubicLocalCoords(vec4 worldPos,vec3 worldNormal,vec3 eyePosition,mat4 reflectionMatrix,vec3 reflectionSize,vec3 reflectionPosition)
{
vec3 viewDir=normalize(worldPos.xyz-eyePosition);
vec3 coords=reflect(viewDir,worldNormal);
coords=parallaxCorrectNormal(worldPos.xyz,coords,reflectionSize,reflectionPosition);
coords=vec3(reflectionMatrix*vec4(coords,0));
#ifdef INVERTCUBICMAP
coords.y*=-1.0;
#endif
return coords;
}
vec3 computeProjectionCoords(vec4 worldPos,mat4 view,mat4 reflectionMatrix)
{
return vec3(reflectionMatrix*(view*worldPos));
}
vec3 computeSkyBoxCoords(vec3 positionW,mat4 reflectionMatrix)
{
return vec3(reflectionMatrix*vec4(positionW,1.));
}
#ifdef REFLECTION
vec3 computeReflectionCoords(vec4 worldPos,vec3 worldNormal)
{
#ifdef REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED
vec3 direction=normalize(vDirectionW);
return computeMirroredFixedEquirectangularCoords(worldPos,worldNormal,direction);
#endif
#ifdef REFLECTIONMAP_EQUIRECTANGULAR_FIXED
vec3 direction=normalize(vDirectionW);
return computeFixedEquirectangularCoords(worldPos,worldNormal,direction);
#endif
#ifdef REFLECTIONMAP_EQUIRECTANGULAR
return computeEquirectangularCoords(worldPos,worldNormal,vEyePosition.xyz,reflectionMatrix);
#endif
#ifdef REFLECTIONMAP_SPHERICAL
return computeSphericalCoords(worldPos,worldNormal,view,reflectionMatrix);
#endif
#ifdef REFLECTIONMAP_PLANAR
return computePlanarCoords(worldPos,worldNormal,vEyePosition.xyz,reflectionMatrix);
#endif
#ifdef REFLECTIONMAP_CUBIC
#ifdef USE_LOCAL_REFLECTIONMAP_CUBIC
return computeCubicLocalCoords(worldPos,worldNormal,vEyePosition.xyz,reflectionMatrix,vReflectionSize,vReflectionPosition);
#else
return computeCubicCoords(worldPos,worldNormal,vEyePosition.xyz,reflectionMatrix);
#endif
#endif
#ifdef REFLECTIONMAP_PROJECTION
return computeProjectionCoords(worldPos,view,reflectionMatrix);
#endif
#ifdef REFLECTIONMAP_SKYBOX
return computeSkyBoxCoords(vPositionUVW,reflectionMatrix);
#endif
#ifdef REFLECTIONMAP_EXPLICIT
return vec3(0,0,0);
#endif
}
#endif
`;U.IncludesShadersStore[nh]=ah;const oh="imageProcessingDeclaration",hh=`#ifdef EXPOSURE
uniform float exposureLinear;
#endif
#ifdef CONTRAST
uniform float contrast;
#endif
#if defined(VIGNETTE) || defined(DITHER)
uniform vec2 vInverseScreenSize;
#endif
#ifdef VIGNETTE
uniform vec4 vignetteSettings1;
uniform vec4 vignetteSettings2;
#endif
#ifdef COLORCURVES
uniform vec4 vCameraColorCurveNegative;
uniform vec4 vCameraColorCurveNeutral;
uniform vec4 vCameraColorCurvePositive;
#endif
#ifdef COLORGRADING
#ifdef COLORGRADING3D
uniform highp sampler3D txColorTransform;
#else
uniform sampler2D txColorTransform;
#endif
uniform vec4 colorTransformSettings;
#endif
#ifdef DITHER
uniform float ditherIntensity;
#endif
`;U.IncludesShadersStore[oh]=hh;const lh="imageProcessingFunctions",ch=`#if defined(COLORGRADING) && !defined(COLORGRADING3D)
/** 
* Polyfill for SAMPLE_TEXTURE_3D,which is unsupported in WebGL.
* sampler3dSetting.x=textureOffset (0.5/textureSize).
* sampler3dSetting.y=textureSize.
*/
#define inline
vec3 sampleTexture3D(sampler2D colorTransform,vec3 color,vec2 sampler3dSetting)
{
float sliceSize=2.0*sampler3dSetting.x; 
#ifdef SAMPLER3DGREENDEPTH
float sliceContinuous=(color.g-sampler3dSetting.x)*sampler3dSetting.y;
#else
float sliceContinuous=(color.b-sampler3dSetting.x)*sampler3dSetting.y;
#endif
float sliceInteger=floor(sliceContinuous);
float sliceFraction=sliceContinuous-sliceInteger;
#ifdef SAMPLER3DGREENDEPTH
vec2 sliceUV=color.rb;
#else
vec2 sliceUV=color.rg;
#endif
sliceUV.x*=sliceSize;
sliceUV.x+=sliceInteger*sliceSize;
sliceUV=saturate(sliceUV);
vec4 slice0Color=texture2D(colorTransform,sliceUV);
sliceUV.x+=sliceSize;
sliceUV=saturate(sliceUV);
vec4 slice1Color=texture2D(colorTransform,sliceUV);
vec3 result=mix(slice0Color.rgb,slice1Color.rgb,sliceFraction);
#ifdef SAMPLER3DBGRMAP
color.rgb=result.rgb;
#else
color.rgb=result.bgr;
#endif
return color;
}
#endif
#ifdef TONEMAPPING_ACES
const mat3 ACESInputMat=mat3(
vec3(0.59719,0.07600,0.02840),
vec3(0.35458,0.90834,0.13383),
vec3(0.04823,0.01566,0.83777)
);
const mat3 ACESOutputMat=mat3(
vec3( 1.60475,-0.10208,-0.00327),
vec3(-0.53108, 1.10813,-0.07276),
vec3(-0.07367,-0.00605, 1.07602)
);
vec3 RRTAndODTFit(vec3 v)
{
vec3 a=v*(v+0.0245786)-0.000090537;
vec3 b=v*(0.983729*v+0.4329510)+0.238081;
return a/b;
}
vec3 ACESFitted(vec3 color)
{
color=ACESInputMat*color;
color=RRTAndODTFit(color);
color=ACESOutputMat*color;
color=saturate(color);
return color;
}
#endif
#define CUSTOM_IMAGEPROCESSINGFUNCTIONS_DEFINITIONS
vec4 applyImageProcessing(vec4 result) {
#define CUSTOM_IMAGEPROCESSINGFUNCTIONS_UPDATERESULT_ATSTART
#ifdef EXPOSURE
result.rgb*=exposureLinear;
#endif
#ifdef VIGNETTE
vec2 viewportXY=gl_FragCoord.xy*vInverseScreenSize;
viewportXY=viewportXY*2.0-1.0;
vec3 vignetteXY1=vec3(viewportXY*vignetteSettings1.xy+vignetteSettings1.zw,1.0);
float vignetteTerm=dot(vignetteXY1,vignetteXY1);
float vignette=pow(vignetteTerm,vignetteSettings2.w);
vec3 vignetteColor=vignetteSettings2.rgb;
#ifdef VIGNETTEBLENDMODEMULTIPLY
vec3 vignetteColorMultiplier=mix(vignetteColor,vec3(1,1,1),vignette);
result.rgb*=vignetteColorMultiplier;
#endif
#ifdef VIGNETTEBLENDMODEOPAQUE
result.rgb=mix(vignetteColor,result.rgb,vignette);
#endif
#endif
#ifdef TONEMAPPING
#ifdef TONEMAPPING_ACES
result.rgb=ACESFitted(result.rgb);
#else
const float tonemappingCalibration=1.590579;
result.rgb=1.0-exp2(-tonemappingCalibration*result.rgb);
#endif
#endif
result.rgb=toGammaSpace(result.rgb);
result.rgb=saturate(result.rgb);
#ifdef CONTRAST
vec3 resultHighContrast=result.rgb*result.rgb*(3.0-2.0*result.rgb);
if (contrast<1.0) {
result.rgb=mix(vec3(0.5,0.5,0.5),result.rgb,contrast);
} else {
result.rgb=mix(result.rgb,resultHighContrast,contrast-1.0);
}
#endif
#ifdef COLORGRADING
vec3 colorTransformInput=result.rgb*colorTransformSettings.xxx+colorTransformSettings.yyy;
#ifdef COLORGRADING3D
vec3 colorTransformOutput=texture(txColorTransform,colorTransformInput).rgb;
#else
vec3 colorTransformOutput=sampleTexture3D(txColorTransform,colorTransformInput,colorTransformSettings.yz).rgb;
#endif
result.rgb=mix(result.rgb,colorTransformOutput,colorTransformSettings.www);
#endif
#ifdef COLORCURVES
float luma=getLuminance(result.rgb);
vec2 curveMix=clamp(vec2(luma*3.0-1.5,luma*-3.0+1.5),vec2(0.0),vec2(1.0));
vec4 colorCurve=vCameraColorCurveNeutral+curveMix.x*vCameraColorCurvePositive-curveMix.y*vCameraColorCurveNegative;
result.rgb*=colorCurve.rgb;
result.rgb=mix(vec3(luma),result.rgb,colorCurve.a);
#endif
#ifdef DITHER
float rand=getRand(gl_FragCoord.xy*vInverseScreenSize);
float dither=mix(-ditherIntensity,ditherIntensity,rand);
result.rgb=saturate(result.rgb+vec3(dither));
#endif
#define CUSTOM_IMAGEPROCESSINGFUNCTIONS_UPDATERESULT_ATEND
return result;
}`;U.IncludesShadersStore[lh]=ch;const uh="bumpFragmentMainFunctions",dh=`#if defined(BUMP) || defined(CLEARCOAT_BUMP) || defined(ANISOTROPIC) || defined(DETAIL)
#if defined(TANGENT) && defined(NORMAL) 
varying mat3 vTBN;
#endif
#ifdef OBJECTSPACE_NORMALMAP
uniform mat4 normalMatrix;
#endif
vec3 perturbNormalBase(mat3 cotangentFrame,vec3 normal,float scale)
{
#ifdef NORMALXYSCALE
normal=normalize(normal*vec3(scale,scale,1.0));
#endif
return normalize(cotangentFrame*normal);
}
vec3 perturbNormal(mat3 cotangentFrame,vec3 textureSample,float scale)
{
return perturbNormalBase(cotangentFrame,textureSample*2.0-1.0,scale);
}
mat3 cotangent_frame(vec3 normal,vec3 p,vec2 uv,vec2 tangentSpaceParams)
{
vec3 dp1=dFdx(p);
vec3 dp2=dFdy(p);
vec2 duv1=dFdx(uv);
vec2 duv2=dFdy(uv);
vec3 dp2perp=cross(dp2,normal);
vec3 dp1perp=cross(normal,dp1);
vec3 tangent=dp2perp*duv1.x+dp1perp*duv2.x;
vec3 bitangent=dp2perp*duv1.y+dp1perp*duv2.y;
tangent*=tangentSpaceParams.x;
bitangent*=tangentSpaceParams.y;
float det=max(dot(tangent,tangent),dot(bitangent,bitangent));
float invmax=det==0.0 ? 0.0 : inversesqrt(det);
return mat3(tangent*invmax,bitangent*invmax,normal);
}
#endif
`;U.IncludesShadersStore[uh]=dh;const fh="bumpFragmentFunctions",_h=`#if defined(BUMP)
#include<samplerFragmentDeclaration>(_DEFINENAME_,BUMP,_VARYINGNAME_,Bump,_SAMPLERNAME_,bump)
#endif
#if defined(DETAIL)
#include<samplerFragmentDeclaration>(_DEFINENAME_,DETAIL,_VARYINGNAME_,Detail,_SAMPLERNAME_,detail)
#endif
#if defined(BUMP) && defined(PARALLAX)
const float minSamples=4.;
const float maxSamples=15.;
const int iMaxSamples=15;
vec2 parallaxOcclusion(vec3 vViewDirCoT,vec3 vNormalCoT,vec2 texCoord,float parallaxScale) {
float parallaxLimit=length(vViewDirCoT.xy)/vViewDirCoT.z;
parallaxLimit*=parallaxScale;
vec2 vOffsetDir=normalize(vViewDirCoT.xy);
vec2 vMaxOffset=vOffsetDir*parallaxLimit;
float numSamples=maxSamples+(dot(vViewDirCoT,vNormalCoT)*(minSamples-maxSamples));
float stepSize=1.0/numSamples;
float currRayHeight=1.0;
vec2 vCurrOffset=vec2(0,0);
vec2 vLastOffset=vec2(0,0);
float lastSampledHeight=1.0;
float currSampledHeight=1.0;
bool keepWorking=true;
for (int i=0; i<iMaxSamples; i++)
{
currSampledHeight=texture2D(bumpSampler,texCoord+vCurrOffset).w;
if (!keepWorking)
{
}
else if (currSampledHeight>currRayHeight)
{
float delta1=currSampledHeight-currRayHeight;
float delta2=(currRayHeight+stepSize)-lastSampledHeight;
float ratio=delta1/(delta1+delta2);
vCurrOffset=(ratio)* vLastOffset+(1.0-ratio)*vCurrOffset;
keepWorking=false;
}
else
{
currRayHeight-=stepSize;
vLastOffset=vCurrOffset;
vCurrOffset+=stepSize*vMaxOffset;
lastSampledHeight=currSampledHeight;
}
}
return vCurrOffset;
}
vec2 parallaxOffset(vec3 viewDir,float heightScale)
{
float height=texture2D(bumpSampler,vBumpUV).w;
vec2 texCoordOffset=heightScale*viewDir.xy*height;
return -texCoordOffset;
}
#endif
`;U.IncludesShadersStore[fh]=_h;const gh="logDepthDeclaration",ph=`#ifdef LOGARITHMICDEPTH
uniform float logarithmicDepthConstant;
varying float vFragmentDepth;
#endif
`;U.IncludesShadersStore[gh]=ph;const mh="fogFragmentDeclaration",Eh=`#ifdef FOG
#define FOGMODE_NONE 0.
#define FOGMODE_EXP 1.
#define FOGMODE_EXP2 2.
#define FOGMODE_LINEAR 3.
#define E 2.71828
uniform vec4 vFogInfos;
uniform vec3 vFogColor;
varying vec3 vFogDistance;
float CalcFogFactor()
{
float fogCoeff=1.0;
float fogStart=vFogInfos.y;
float fogEnd=vFogInfos.z;
float fogDensity=vFogInfos.w;
float fogDistance=length(vFogDistance);
if (FOGMODE_LINEAR==vFogInfos.x)
{
fogCoeff=(fogEnd-fogDistance)/(fogEnd-fogStart);
}
else if (FOGMODE_EXP==vFogInfos.x)
{
fogCoeff=1.0/pow(E,fogDistance*fogDensity);
}
else if (FOGMODE_EXP2==vFogInfos.x)
{
fogCoeff=1.0/pow(E,fogDistance*fogDistance*fogDensity*fogDensity);
}
return clamp(fogCoeff,0.0,1.0);
}
#endif
`;U.IncludesShadersStore[mh]=Eh;const vh="bumpFragment",Th=`vec2 uvOffset=vec2(0.0,0.0);
#if defined(BUMP) || defined(PARALLAX) || defined(DETAIL)
#ifdef NORMALXYSCALE
float normalScale=1.0;
#elif defined(BUMP)
float normalScale=vBumpInfos.y;
#else
float normalScale=1.0;
#endif
#if defined(TANGENT) && defined(NORMAL)
mat3 TBN=vTBN;
#elif defined(BUMP)
vec2 TBNUV=gl_FrontFacing ? vBumpUV : -vBumpUV;
mat3 TBN=cotangent_frame(normalW*normalScale,vPositionW,TBNUV,vTangentSpaceParams);
#else
vec2 TBNUV=gl_FrontFacing ? vDetailUV : -vDetailUV;
mat3 TBN=cotangent_frame(normalW*normalScale,vPositionW,TBNUV,vec2(1.,1.));
#endif
#elif defined(ANISOTROPIC)
#if defined(TANGENT) && defined(NORMAL)
mat3 TBN=vTBN;
#else
vec2 TBNUV=gl_FrontFacing ? vMainUV1 : -vMainUV1;
mat3 TBN=cotangent_frame(normalW,vPositionW,TBNUV,vec2(1.,1.));
#endif
#endif
#ifdef PARALLAX
mat3 invTBN=transposeMat3(TBN);
#ifdef PARALLAXOCCLUSION
uvOffset=parallaxOcclusion(invTBN*-viewDirectionW,invTBN*normalW,vBumpUV,vBumpInfos.z);
#else
uvOffset=parallaxOffset(invTBN*viewDirectionW,vBumpInfos.z);
#endif
#endif
#ifdef DETAIL
vec4 detailColor=texture2D(detailSampler,vDetailUV+uvOffset);
vec2 detailNormalRG=detailColor.wy*2.0-1.0;
float detailNormalB=sqrt(1.-saturate(dot(detailNormalRG,detailNormalRG)));
vec3 detailNormal=vec3(detailNormalRG,detailNormalB);
#endif
#ifdef BUMP
#ifdef OBJECTSPACE_NORMALMAP
normalW=normalize(texture2D(bumpSampler,vBumpUV).xyz *2.0-1.0);
normalW=normalize(mat3(normalMatrix)*normalW);
#elif !defined(DETAIL)
normalW=perturbNormal(TBN,texture2D(bumpSampler,vBumpUV+uvOffset).xyz,vBumpInfos.y);
#else
vec3 bumpNormal=texture2D(bumpSampler,vBumpUV+uvOffset).xyz*2.0-1.0;
#if DETAIL_NORMALBLENDMETHOD==0 
detailNormal.xy*=vDetailInfos.z;
vec3 blendedNormal=normalize(vec3(bumpNormal.xy+detailNormal.xy,bumpNormal.z*detailNormal.z));
#elif DETAIL_NORMALBLENDMETHOD==1 
detailNormal.xy*=vDetailInfos.z;
bumpNormal+=vec3(0.0,0.0,1.0);
detailNormal*=vec3(-1.0,-1.0,1.0);
vec3 blendedNormal=bumpNormal*dot(bumpNormal,detailNormal)/bumpNormal.z-detailNormal;
#endif
normalW=perturbNormalBase(TBN,blendedNormal,vBumpInfos.y);
#endif
#elif defined(DETAIL)
detailNormal.xy*=vDetailInfos.z;
normalW=perturbNormalBase(TBN,detailNormal,vDetailInfos.z);
#endif
`;U.IncludesShadersStore[vh]=Th;const bh="depthPrePass",Sh=`#ifdef DEPTHPREPASS
gl_FragColor=vec4(0.,0.,0.,1.0);
return;
#endif
`;U.IncludesShadersStore[bh]=Sh;const xh="lightFragment",Mh=`#ifdef LIGHT{X}
#if defined(SHADOWONLY) || defined(LIGHTMAP) && defined(LIGHTMAPEXCLUDED{X}) && defined(LIGHTMAPNOSPECULAR{X})
#else
#ifdef PBR
#ifdef SPOTLIGHT{X}
preInfo=computePointAndSpotPreLightingInfo(light{X}.vLightData,viewDirectionW,normalW);
#elif defined(POINTLIGHT{X})
preInfo=computePointAndSpotPreLightingInfo(light{X}.vLightData,viewDirectionW,normalW);
#elif defined(HEMILIGHT{X})
preInfo=computeHemisphericPreLightingInfo(light{X}.vLightData,viewDirectionW,normalW);
#elif defined(DIRLIGHT{X})
preInfo=computeDirectionalPreLightingInfo(light{X}.vLightData,viewDirectionW,normalW);
#endif
preInfo.NdotV=NdotV;
#ifdef SPOTLIGHT{X}
#ifdef LIGHT_FALLOFF_GLTF{X}
preInfo.attenuation=computeDistanceLightFalloff_GLTF(preInfo.lightDistanceSquared,light{X}.vLightFalloff.y);
preInfo.attenuation*=computeDirectionalLightFalloff_GLTF(light{X}.vLightDirection.xyz,preInfo.L,light{X}.vLightFalloff.z,light{X}.vLightFalloff.w);
#elif defined(LIGHT_FALLOFF_PHYSICAL{X})
preInfo.attenuation=computeDistanceLightFalloff_Physical(preInfo.lightDistanceSquared);
preInfo.attenuation*=computeDirectionalLightFalloff_Physical(light{X}.vLightDirection.xyz,preInfo.L,light{X}.vLightDirection.w);
#elif defined(LIGHT_FALLOFF_STANDARD{X})
preInfo.attenuation=computeDistanceLightFalloff_Standard(preInfo.lightOffset,light{X}.vLightFalloff.x);
preInfo.attenuation*=computeDirectionalLightFalloff_Standard(light{X}.vLightDirection.xyz,preInfo.L,light{X}.vLightDirection.w,light{X}.vLightData.w);
#else
preInfo.attenuation=computeDistanceLightFalloff(preInfo.lightOffset,preInfo.lightDistanceSquared,light{X}.vLightFalloff.x,light{X}.vLightFalloff.y);
preInfo.attenuation*=computeDirectionalLightFalloff(light{X}.vLightDirection.xyz,preInfo.L,light{X}.vLightDirection.w,light{X}.vLightData.w,light{X}.vLightFalloff.z,light{X}.vLightFalloff.w);
#endif
#elif defined(POINTLIGHT{X})
#ifdef LIGHT_FALLOFF_GLTF{X}
preInfo.attenuation=computeDistanceLightFalloff_GLTF(preInfo.lightDistanceSquared,light{X}.vLightFalloff.y);
#elif defined(LIGHT_FALLOFF_PHYSICAL{X})
preInfo.attenuation=computeDistanceLightFalloff_Physical(preInfo.lightDistanceSquared);
#elif defined(LIGHT_FALLOFF_STANDARD{X})
preInfo.attenuation=computeDistanceLightFalloff_Standard(preInfo.lightOffset,light{X}.vLightFalloff.x);
#else
preInfo.attenuation=computeDistanceLightFalloff(preInfo.lightOffset,preInfo.lightDistanceSquared,light{X}.vLightFalloff.x,light{X}.vLightFalloff.y);
#endif
#else
preInfo.attenuation=1.0;
#endif
#ifdef HEMILIGHT{X}
preInfo.roughness=roughness;
#else
preInfo.roughness=adjustRoughnessFromLightProperties(roughness,light{X}.vLightSpecular.a,preInfo.lightDistance);
#endif
#ifdef IRIDESCENCE
preInfo.iridescenceIntensity=iridescenceIntensity;
#endif
#ifdef HEMILIGHT{X}
info.diffuse=computeHemisphericDiffuseLighting(preInfo,light{X}.vLightDiffuse.rgb,light{X}.vLightGround);
#elif defined(SS_TRANSLUCENCY)
info.diffuse=computeDiffuseAndTransmittedLighting(preInfo,light{X}.vLightDiffuse.rgb,subSurfaceOut.transmittance);
#else
info.diffuse=computeDiffuseLighting(preInfo,light{X}.vLightDiffuse.rgb);
#endif
#ifdef SPECULARTERM
#ifdef ANISOTROPIC
info.specular=computeAnisotropicSpecularLighting(preInfo,viewDirectionW,normalW,anisotropicOut.anisotropicTangent,anisotropicOut.anisotropicBitangent,anisotropicOut.anisotropy,clearcoatOut.specularEnvironmentR0,specularEnvironmentR90,AARoughnessFactors.x,light{X}.vLightDiffuse.rgb);
#else
info.specular=computeSpecularLighting(preInfo,normalW,clearcoatOut.specularEnvironmentR0,specularEnvironmentR90,AARoughnessFactors.x,light{X}.vLightDiffuse.rgb);
#endif
#endif
#ifdef SHEEN
#ifdef SHEEN_LINKWITHALBEDO
preInfo.roughness=sheenOut.sheenIntensity;
#else
#ifdef HEMILIGHT{X}
preInfo.roughness=sheenOut.sheenRoughness;
#else
preInfo.roughness=adjustRoughnessFromLightProperties(sheenOut.sheenRoughness,light{X}.vLightSpecular.a,preInfo.lightDistance);
#endif
#endif
info.sheen=computeSheenLighting(preInfo,normalW,sheenOut.sheenColor,specularEnvironmentR90,AARoughnessFactors.x,light{X}.vLightDiffuse.rgb);
#endif
#ifdef CLEARCOAT
#ifdef HEMILIGHT{X}
preInfo.roughness=clearcoatOut.clearCoatRoughness;
#else
preInfo.roughness=adjustRoughnessFromLightProperties(clearcoatOut.clearCoatRoughness,light{X}.vLightSpecular.a,preInfo.lightDistance);
#endif
info.clearCoat=computeClearCoatLighting(preInfo,clearcoatOut.clearCoatNormalW,clearcoatOut.clearCoatAARoughnessFactors.x,clearcoatOut.clearCoatIntensity,light{X}.vLightDiffuse.rgb);
#ifdef CLEARCOAT_TINT
absorption=computeClearCoatLightingAbsorption(clearcoatOut.clearCoatNdotVRefract,preInfo.L,clearcoatOut.clearCoatNormalW,clearcoatOut.clearCoatColor,clearcoatOut.clearCoatThickness,clearcoatOut.clearCoatIntensity);
info.diffuse*=absorption;
#ifdef SPECULARTERM
info.specular*=absorption;
#endif
#endif
info.diffuse*=info.clearCoat.w;
#ifdef SPECULARTERM
info.specular*=info.clearCoat.w;
#endif
#ifdef SHEEN
info.sheen*=info.clearCoat.w;
#endif
#endif
#else
#ifdef SPOTLIGHT{X}
info=computeSpotLighting(viewDirectionW,normalW,light{X}.vLightData,light{X}.vLightDirection,light{X}.vLightDiffuse.rgb,light{X}.vLightSpecular.rgb,light{X}.vLightDiffuse.a,glossiness);
#elif defined(HEMILIGHT{X})
info=computeHemisphericLighting(viewDirectionW,normalW,light{X}.vLightData,light{X}.vLightDiffuse.rgb,light{X}.vLightSpecular.rgb,light{X}.vLightGround,glossiness);
#elif defined(POINTLIGHT{X}) || defined(DIRLIGHT{X})
info=computeLighting(viewDirectionW,normalW,light{X}.vLightData,light{X}.vLightDiffuse.rgb,light{X}.vLightSpecular.rgb,light{X}.vLightDiffuse.a,glossiness);
#endif
#endif
#ifdef PROJECTEDLIGHTTEXTURE{X}
info.diffuse*=computeProjectionTextureDiffuseLighting(projectionLightSampler{X},textureProjectionMatrix{X});
#endif
#endif
#ifdef SHADOW{X}
#ifdef SHADOWCSM{X}
for (int i=0; i<SHADOWCSMNUM_CASCADES{X}; i++) 
{
#ifdef SHADOWCSM_RIGHTHANDED{X}
diff{X}=viewFrustumZ{X}[i]+vPositionFromCamera{X}.z;
#else
diff{X}=viewFrustumZ{X}[i]-vPositionFromCamera{X}.z;
#endif
if (diff{X}>=0.) {
index{X}=i;
break;
}
}
#ifdef SHADOWCSMUSESHADOWMAXZ{X}
if (index{X}>=0)
#endif
{
#if defined(SHADOWPCF{X})
#if defined(SHADOWLOWQUALITY{X})
shadow=computeShadowWithCSMPCF1(float(index{X}),vPositionFromLight{X}[index{X}],vDepthMetric{X}[index{X}],shadowSampler{X},light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#elif defined(SHADOWMEDIUMQUALITY{X})
shadow=computeShadowWithCSMPCF3(float(index{X}),vPositionFromLight{X}[index{X}],vDepthMetric{X}[index{X}],shadowSampler{X},light{X}.shadowsInfo.yz,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#else
shadow=computeShadowWithCSMPCF5(float(index{X}),vPositionFromLight{X}[index{X}],vDepthMetric{X}[index{X}],shadowSampler{X},light{X}.shadowsInfo.yz,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#endif
#elif defined(SHADOWPCSS{X})
#if defined(SHADOWLOWQUALITY{X})
shadow=computeShadowWithCSMPCSS16(float(index{X}),vPositionFromLight{X}[index{X}],vDepthMetric{X}[index{X}],depthSampler{X},shadowSampler{X},light{X}.shadowsInfo.y,light{X}.shadowsInfo.z,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w,lightSizeUVCorrection{X}[index{X}],depthCorrection{X}[index{X}],penumbraDarkness{X});
#elif defined(SHADOWMEDIUMQUALITY{X})
shadow=computeShadowWithCSMPCSS32(float(index{X}),vPositionFromLight{X}[index{X}],vDepthMetric{X}[index{X}],depthSampler{X},shadowSampler{X},light{X}.shadowsInfo.y,light{X}.shadowsInfo.z,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w,lightSizeUVCorrection{X}[index{X}],depthCorrection{X}[index{X}],penumbraDarkness{X});
#else
shadow=computeShadowWithCSMPCSS64(float(index{X}),vPositionFromLight{X}[index{X}],vDepthMetric{X}[index{X}],depthSampler{X},shadowSampler{X},light{X}.shadowsInfo.y,light{X}.shadowsInfo.z,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w,lightSizeUVCorrection{X}[index{X}],depthCorrection{X}[index{X}],penumbraDarkness{X});
#endif
#else
shadow=computeShadowCSM(float(index{X}),vPositionFromLight{X}[index{X}],vDepthMetric{X}[index{X}],shadowSampler{X},light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#endif
#ifdef SHADOWCSMDEBUG{X}
shadowDebug{X}=vec3(shadow)*vCascadeColorsMultiplier{X}[index{X}];
#endif
#ifndef SHADOWCSMNOBLEND{X}
float frustumLength=frustumLengths{X}[index{X}];
float diffRatio=clamp(diff{X}/frustumLength,0.,1.)*cascadeBlendFactor{X};
if (index{X}<(SHADOWCSMNUM_CASCADES{X}-1) && diffRatio<1.)
{
index{X}+=1;
float nextShadow=0.;
#if defined(SHADOWPCF{X})
#if defined(SHADOWLOWQUALITY{X})
nextShadow=computeShadowWithCSMPCF1(float(index{X}),vPositionFromLight{X}[index{X}],vDepthMetric{X}[index{X}],shadowSampler{X},light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#elif defined(SHADOWMEDIUMQUALITY{X})
nextShadow=computeShadowWithCSMPCF3(float(index{X}),vPositionFromLight{X}[index{X}],vDepthMetric{X}[index{X}],shadowSampler{X},light{X}.shadowsInfo.yz,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#else
nextShadow=computeShadowWithCSMPCF5(float(index{X}),vPositionFromLight{X}[index{X}],vDepthMetric{X}[index{X}],shadowSampler{X},light{X}.shadowsInfo.yz,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#endif
#elif defined(SHADOWPCSS{X})
#if defined(SHADOWLOWQUALITY{X})
nextShadow=computeShadowWithCSMPCSS16(float(index{X}),vPositionFromLight{X}[index{X}],vDepthMetric{X}[index{X}],depthSampler{X},shadowSampler{X},light{X}.shadowsInfo.y,light{X}.shadowsInfo.z,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w,lightSizeUVCorrection{X}[index{X}],depthCorrection{X}[index{X}],penumbraDarkness{X});
#elif defined(SHADOWMEDIUMQUALITY{X})
nextShadow=computeShadowWithCSMPCSS32(float(index{X}),vPositionFromLight{X}[index{X}],vDepthMetric{X}[index{X}],depthSampler{X},shadowSampler{X},light{X}.shadowsInfo.y,light{X}.shadowsInfo.z,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w,lightSizeUVCorrection{X}[index{X}],depthCorrection{X}[index{X}],penumbraDarkness{X});
#else
nextShadow=computeShadowWithCSMPCSS64(float(index{X}),vPositionFromLight{X}[index{X}],vDepthMetric{X}[index{X}],depthSampler{X},shadowSampler{X},light{X}.shadowsInfo.y,light{X}.shadowsInfo.z,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w,lightSizeUVCorrection{X}[index{X}],depthCorrection{X}[index{X}],penumbraDarkness{X});
#endif
#else
nextShadow=computeShadowCSM(float(index{X}),vPositionFromLight{X}[index{X}],vDepthMetric{X}[index{X}],shadowSampler{X},light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#endif
shadow=mix(nextShadow,shadow,diffRatio);
#ifdef SHADOWCSMDEBUG{X}
shadowDebug{X}=mix(vec3(nextShadow)*vCascadeColorsMultiplier{X}[index{X}],shadowDebug{X},diffRatio);
#endif
}
#endif
}
#elif defined(SHADOWCLOSEESM{X})
#if defined(SHADOWCUBE{X})
shadow=computeShadowWithCloseESMCube(light{X}.vLightData.xyz,shadowSampler{X},light{X}.shadowsInfo.x,light{X}.shadowsInfo.z,light{X}.depthValues);
#else
shadow=computeShadowWithCloseESM(vPositionFromLight{X},vDepthMetric{X},shadowSampler{X},light{X}.shadowsInfo.x,light{X}.shadowsInfo.z,light{X}.shadowsInfo.w);
#endif
#elif defined(SHADOWESM{X})
#if defined(SHADOWCUBE{X})
shadow=computeShadowWithESMCube(light{X}.vLightData.xyz,shadowSampler{X},light{X}.shadowsInfo.x,light{X}.shadowsInfo.z,light{X}.depthValues);
#else
shadow=computeShadowWithESM(vPositionFromLight{X},vDepthMetric{X},shadowSampler{X},light{X}.shadowsInfo.x,light{X}.shadowsInfo.z,light{X}.shadowsInfo.w);
#endif
#elif defined(SHADOWPOISSON{X})
#if defined(SHADOWCUBE{X})
shadow=computeShadowWithPoissonSamplingCube(light{X}.vLightData.xyz,shadowSampler{X},light{X}.shadowsInfo.y,light{X}.shadowsInfo.x,light{X}.depthValues);
#else
shadow=computeShadowWithPoissonSampling(vPositionFromLight{X},vDepthMetric{X},shadowSampler{X},light{X}.shadowsInfo.y,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#endif
#elif defined(SHADOWPCF{X})
#if defined(SHADOWLOWQUALITY{X})
shadow=computeShadowWithPCF1(vPositionFromLight{X},vDepthMetric{X},shadowSampler{X},light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#elif defined(SHADOWMEDIUMQUALITY{X})
shadow=computeShadowWithPCF3(vPositionFromLight{X},vDepthMetric{X},shadowSampler{X},light{X}.shadowsInfo.yz,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#else
shadow=computeShadowWithPCF5(vPositionFromLight{X},vDepthMetric{X},shadowSampler{X},light{X}.shadowsInfo.yz,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#endif
#elif defined(SHADOWPCSS{X})
#if defined(SHADOWLOWQUALITY{X})
shadow=computeShadowWithPCSS16(vPositionFromLight{X},vDepthMetric{X},depthSampler{X},shadowSampler{X},light{X}.shadowsInfo.y,light{X}.shadowsInfo.z,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#elif defined(SHADOWMEDIUMQUALITY{X})
shadow=computeShadowWithPCSS32(vPositionFromLight{X},vDepthMetric{X},depthSampler{X},shadowSampler{X},light{X}.shadowsInfo.y,light{X}.shadowsInfo.z,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#else
shadow=computeShadowWithPCSS64(vPositionFromLight{X},vDepthMetric{X},depthSampler{X},shadowSampler{X},light{X}.shadowsInfo.y,light{X}.shadowsInfo.z,light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#endif
#else
#if defined(SHADOWCUBE{X})
shadow=computeShadowCube(light{X}.vLightData.xyz,shadowSampler{X},light{X}.shadowsInfo.x,light{X}.depthValues);
#else
shadow=computeShadow(vPositionFromLight{X},vDepthMetric{X},shadowSampler{X},light{X}.shadowsInfo.x,light{X}.shadowsInfo.w);
#endif
#endif
#ifdef SHADOWONLY
#ifndef SHADOWINUSE
#define SHADOWINUSE
#endif
globalShadow+=shadow;
shadowLightCount+=1.0;
#endif
#else
shadow=1.;
#endif
#ifndef SHADOWONLY
#ifdef CUSTOMUSERLIGHTING
diffuseBase+=computeCustomDiffuseLighting(info,diffuseBase,shadow);
#ifdef SPECULARTERM
specularBase+=computeCustomSpecularLighting(info,specularBase,shadow);
#endif
#elif defined(LIGHTMAP) && defined(LIGHTMAPEXCLUDED{X})
diffuseBase+=lightmapColor.rgb*shadow;
#ifdef SPECULARTERM
#ifndef LIGHTMAPNOSPECULAR{X}
specularBase+=info.specular*shadow*lightmapColor.rgb;
#endif
#endif
#ifdef CLEARCOAT
#ifndef LIGHTMAPNOSPECULAR{X}
clearCoatBase+=info.clearCoat.rgb*shadow*lightmapColor.rgb;
#endif
#endif
#ifdef SHEEN
#ifndef LIGHTMAPNOSPECULAR{X}
sheenBase+=info.sheen.rgb*shadow;
#endif
#endif
#else
#ifdef SHADOWCSMDEBUG{X}
diffuseBase+=info.diffuse*shadowDebug{X};
#else 
diffuseBase+=info.diffuse*shadow;
#endif
#ifdef SPECULARTERM
specularBase+=info.specular*shadow;
#endif
#ifdef CLEARCOAT
clearCoatBase+=info.clearCoat.rgb*shadow;
#endif
#ifdef SHEEN
sheenBase+=info.sheen.rgb*shadow;
#endif
#endif
#endif
#endif
`;U.IncludesShadersStore[xh]=Mh;const Ah="logDepthFragment",Rh=`#ifdef LOGARITHMICDEPTH
gl_FragDepthEXT=log2(vFragmentDepth)*logarithmicDepthConstant*0.5;
#endif
`;U.IncludesShadersStore[Ah]=Rh;const yh="fogFragment",Ch=`#ifdef FOG
float fog=CalcFogFactor();
#ifdef PBR
fog=toLinearSpace(fog);
#endif
color.rgb=mix(vFogColor,color.rgb,fog);
#endif
`;U.IncludesShadersStore[yh]=Ch;const Ih="oitFragment",Ph=`#ifdef ORDER_INDEPENDENT_TRANSPARENCY
float fragDepth=gl_FragCoord.z; 
#ifdef ORDER_INDEPENDENT_TRANSPARENCY_16BITS
uint halfFloat=packHalf2x16(vec2(fragDepth));
vec2 full=unpackHalf2x16(halfFloat);
fragDepth=full.x;
#endif
ivec2 fragCoord=ivec2(gl_FragCoord.xy);
vec2 lastDepth=texelFetch(oitDepthSampler,fragCoord,0).rg;
vec4 lastFrontColor=texelFetch(oitFrontColorSampler,fragCoord,0);
depth.rg=vec2(-MAX_DEPTH);
frontColor=lastFrontColor;
backColor=vec4(0.0);
#ifdef USE_REVERSE_DEPTHBUFFER
float furthestDepth=-lastDepth.x;
float nearestDepth=lastDepth.y;
#else
float nearestDepth=-lastDepth.x;
float furthestDepth=lastDepth.y;
#endif
float alphaMultiplier=1.0-lastFrontColor.a;
#ifdef USE_REVERSE_DEPTHBUFFER
if (fragDepth>nearestDepth || fragDepth<furthestDepth) {
#else
if (fragDepth<nearestDepth || fragDepth>furthestDepth) {
#endif
return;
}
#ifdef USE_REVERSE_DEPTHBUFFER
if (fragDepth<nearestDepth && fragDepth>furthestDepth) {
#else
if (fragDepth>nearestDepth && fragDepth<furthestDepth) {
#endif
depth.rg=vec2(-fragDepth,fragDepth);
return;
}
#endif
`;U.IncludesShadersStore[Ih]=Ph;const Dh="defaultPixelShader",Fh=`#include<__decl__defaultFragment>
#if defined(BUMP) || !defined(NORMAL)
#extension GL_OES_standard_derivatives : enable
#endif
#include<prePassDeclaration>[SCENE_MRT_COUNT]
#include<oitDeclaration>
#define CUSTOM_FRAGMENT_BEGIN
#ifdef LOGARITHMICDEPTH
#extension GL_EXT_frag_depth : enable
#endif
#define RECIPROCAL_PI2 0.15915494
varying vec3 vPositionW;
#ifdef NORMAL
varying vec3 vNormalW;
#endif
#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)
varying vec4 vColor;
#endif
#include<mainUVVaryingDeclaration>[1..7]
#include<helperFunctions>
#include<__decl__lightFragment>[0..maxSimultaneousLights]
#include<lightsFragmentFunctions>
#include<shadowsFragmentFunctions>
#include<samplerFragmentDeclaration>(_DEFINENAME_,DIFFUSE,_VARYINGNAME_,Diffuse,_SAMPLERNAME_,diffuse)
#include<samplerFragmentDeclaration>(_DEFINENAME_,AMBIENT,_VARYINGNAME_,Ambient,_SAMPLERNAME_,ambient)
#include<samplerFragmentDeclaration>(_DEFINENAME_,OPACITY,_VARYINGNAME_,Opacity,_SAMPLERNAME_,opacity)
#include<samplerFragmentDeclaration>(_DEFINENAME_,EMISSIVE,_VARYINGNAME_,Emissive,_SAMPLERNAME_,emissive)
#include<samplerFragmentDeclaration>(_DEFINENAME_,LIGHTMAP,_VARYINGNAME_,Lightmap,_SAMPLERNAME_,lightmap)
#ifdef REFRACTION
#ifdef REFRACTIONMAP_3D
uniform samplerCube refractionCubeSampler;
#else
uniform sampler2D refraction2DSampler;
#endif
#endif
#if defined(SPECULARTERM)
#include<samplerFragmentDeclaration>(_DEFINENAME_,SPECULAR,_VARYINGNAME_,Specular,_SAMPLERNAME_,specular)
#endif
#include<fresnelFunction>
#ifdef REFLECTION
#ifdef REFLECTIONMAP_3D
uniform samplerCube reflectionCubeSampler;
#else
uniform sampler2D reflection2DSampler;
#endif
#ifdef REFLECTIONMAP_SKYBOX
varying vec3 vPositionUVW;
#else
#if defined(REFLECTIONMAP_EQUIRECTANGULAR_FIXED) || defined(REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED)
varying vec3 vDirectionW;
#endif
#endif
#include<reflectionFunction>
#endif
#include<imageProcessingDeclaration>
#include<imageProcessingFunctions>
#include<bumpFragmentMainFunctions>
#include<bumpFragmentFunctions>
#include<clipPlaneFragmentDeclaration>
#include<logDepthDeclaration>
#include<fogFragmentDeclaration>
#define CUSTOM_FRAGMENT_DEFINITIONS
void main(void) {
#define CUSTOM_FRAGMENT_MAIN_BEGIN
#include<clipPlaneFragment>
vec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);
vec4 baseColor=vec4(1.,1.,1.,1.);
vec3 diffuseColor=vDiffuseColor.rgb;
float alpha=vDiffuseColor.a;
#ifdef NORMAL
vec3 normalW=normalize(vNormalW);
#else
vec3 normalW=normalize(-cross(dFdx(vPositionW),dFdy(vPositionW)));
#endif
#include<bumpFragment>
#ifdef TWOSIDEDLIGHTING
normalW=gl_FrontFacing ? normalW : -normalW;
#endif
#ifdef DIFFUSE
baseColor=texture2D(diffuseSampler,vDiffuseUV+uvOffset);
#if defined(ALPHATEST) && !defined(ALPHATEST_AFTERALLALPHACOMPUTATIONS)
if (baseColor.a<alphaCutOff)
discard;
#endif
#ifdef ALPHAFROMDIFFUSE
alpha*=baseColor.a;
#endif
#define CUSTOM_FRAGMENT_UPDATE_ALPHA
baseColor.rgb*=vDiffuseInfos.y;
#endif
#include<depthPrePass>
#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)
baseColor.rgb*=vColor.rgb;
#endif
#ifdef DETAIL
baseColor.rgb=baseColor.rgb*2.0*mix(0.5,detailColor.r,vDetailInfos.y);
#endif
#define CUSTOM_FRAGMENT_UPDATE_DIFFUSE
vec3 baseAmbientColor=vec3(1.,1.,1.);
#ifdef AMBIENT
baseAmbientColor=texture2D(ambientSampler,vAmbientUV+uvOffset).rgb*vAmbientInfos.y;
#endif
#define CUSTOM_FRAGMENT_BEFORE_LIGHTS
#ifdef SPECULARTERM
float glossiness=vSpecularColor.a;
vec3 specularColor=vSpecularColor.rgb;
#ifdef SPECULAR
vec4 specularMapColor=texture2D(specularSampler,vSpecularUV+uvOffset);
specularColor=specularMapColor.rgb;
#ifdef GLOSSINESS
glossiness=glossiness*specularMapColor.a;
#endif
#endif
#else
float glossiness=0.;
#endif
vec3 diffuseBase=vec3(0.,0.,0.);
lightingInfo info;
#ifdef SPECULARTERM
vec3 specularBase=vec3(0.,0.,0.);
#endif
float shadow=1.;
#ifdef LIGHTMAP
vec4 lightmapColor=texture2D(lightmapSampler,vLightmapUV+uvOffset);
#ifdef RGBDLIGHTMAP
lightmapColor.rgb=fromRGBD(lightmapColor);
#endif
lightmapColor.rgb*=vLightmapInfos.y;
#endif
#include<lightFragment>[0..maxSimultaneousLights]
vec4 refractionColor=vec4(0.,0.,0.,1.);
#ifdef REFRACTION
vec3 refractionVector=normalize(refract(-viewDirectionW,normalW,vRefractionInfos.y));
#ifdef REFRACTIONMAP_3D
#ifdef USE_LOCAL_REFRACTIONMAP_CUBIC
refractionVector=parallaxCorrectNormal(vPositionW,refractionVector,vRefractionSize,vRefractionPosition);
#endif
refractionVector.y=refractionVector.y*vRefractionInfos.w;
if (dot(refractionVector,viewDirectionW)<1.0) {
refractionColor=textureCube(refractionCubeSampler,refractionVector);
}
#else
vec3 vRefractionUVW=vec3(refractionMatrix*(view*vec4(vPositionW+refractionVector*vRefractionInfos.z,1.0)));
vec2 refractionCoords=vRefractionUVW.xy/vRefractionUVW.z;
refractionCoords.y=1.0-refractionCoords.y;
refractionColor=texture2D(refraction2DSampler,refractionCoords);
#endif
#ifdef RGBDREFRACTION
refractionColor.rgb=fromRGBD(refractionColor);
#endif
#ifdef IS_REFRACTION_LINEAR
refractionColor.rgb=toGammaSpace(refractionColor.rgb);
#endif
refractionColor.rgb*=vRefractionInfos.x;
#endif
vec4 reflectionColor=vec4(0.,0.,0.,1.);
#ifdef REFLECTION
vec3 vReflectionUVW=computeReflectionCoords(vec4(vPositionW,1.0),normalW);
#ifdef REFLECTIONMAP_OPPOSITEZ
vReflectionUVW.z*=-1.0;
#endif
#ifdef REFLECTIONMAP_3D
#ifdef ROUGHNESS
float bias=vReflectionInfos.y;
#ifdef SPECULARTERM
#ifdef SPECULAR
#ifdef GLOSSINESS
bias*=(1.0-specularMapColor.a);
#endif
#endif
#endif
reflectionColor=textureCube(reflectionCubeSampler,vReflectionUVW,bias);
#else
reflectionColor=textureCube(reflectionCubeSampler,vReflectionUVW);
#endif
#else
vec2 coords=vReflectionUVW.xy;
#ifdef REFLECTIONMAP_PROJECTION
coords/=vReflectionUVW.z;
#endif
coords.y=1.0-coords.y;
reflectionColor=texture2D(reflection2DSampler,coords);
#endif
#ifdef RGBDREFLECTION
reflectionColor.rgb=fromRGBD(reflectionColor);
#endif
#ifdef IS_REFLECTION_LINEAR
reflectionColor.rgb=toGammaSpace(reflectionColor.rgb);
#endif
reflectionColor.rgb*=vReflectionInfos.x;
#ifdef REFLECTIONFRESNEL
float reflectionFresnelTerm=computeFresnelTerm(viewDirectionW,normalW,reflectionRightColor.a,reflectionLeftColor.a);
#ifdef REFLECTIONFRESNELFROMSPECULAR
#ifdef SPECULARTERM
reflectionColor.rgb*=specularColor.rgb*(1.0-reflectionFresnelTerm)+reflectionFresnelTerm*reflectionRightColor.rgb;
#else
reflectionColor.rgb*=reflectionLeftColor.rgb*(1.0-reflectionFresnelTerm)+reflectionFresnelTerm*reflectionRightColor.rgb;
#endif
#else
reflectionColor.rgb*=reflectionLeftColor.rgb*(1.0-reflectionFresnelTerm)+reflectionFresnelTerm*reflectionRightColor.rgb;
#endif
#endif
#endif
#ifdef REFRACTIONFRESNEL
float refractionFresnelTerm=computeFresnelTerm(viewDirectionW,normalW,refractionRightColor.a,refractionLeftColor.a);
refractionColor.rgb*=refractionLeftColor.rgb*(1.0-refractionFresnelTerm)+refractionFresnelTerm*refractionRightColor.rgb;
#endif
#ifdef OPACITY
vec4 opacityMap=texture2D(opacitySampler,vOpacityUV+uvOffset);
#ifdef OPACITYRGB
opacityMap.rgb=opacityMap.rgb*vec3(0.3,0.59,0.11);
alpha*=(opacityMap.x+opacityMap.y+opacityMap.z)* vOpacityInfos.y;
#else
alpha*=opacityMap.a*vOpacityInfos.y;
#endif
#endif
#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)
alpha*=vColor.a;
#endif
#ifdef OPACITYFRESNEL
float opacityFresnelTerm=computeFresnelTerm(viewDirectionW,normalW,opacityParts.z,opacityParts.w);
alpha+=opacityParts.x*(1.0-opacityFresnelTerm)+opacityFresnelTerm*opacityParts.y;
#endif
#ifdef ALPHATEST
#ifdef ALPHATEST_AFTERALLALPHACOMPUTATIONS
if (alpha<alphaCutOff)
discard;
#endif
#ifndef ALPHABLEND
alpha=1.0;
#endif
#endif
vec3 emissiveColor=vEmissiveColor;
#ifdef EMISSIVE
emissiveColor+=texture2D(emissiveSampler,vEmissiveUV+uvOffset).rgb*vEmissiveInfos.y;
#endif
#ifdef EMISSIVEFRESNEL
float emissiveFresnelTerm=computeFresnelTerm(viewDirectionW,normalW,emissiveRightColor.a,emissiveLeftColor.a);
emissiveColor*=emissiveLeftColor.rgb*(1.0-emissiveFresnelTerm)+emissiveFresnelTerm*emissiveRightColor.rgb;
#endif
#ifdef DIFFUSEFRESNEL
float diffuseFresnelTerm=computeFresnelTerm(viewDirectionW,normalW,diffuseRightColor.a,diffuseLeftColor.a);
diffuseBase*=diffuseLeftColor.rgb*(1.0-diffuseFresnelTerm)+diffuseFresnelTerm*diffuseRightColor.rgb;
#endif
#ifdef EMISSIVEASILLUMINATION
vec3 finalDiffuse=clamp(diffuseBase*diffuseColor+vAmbientColor,0.0,1.0)*baseColor.rgb;
#else
#ifdef LINKEMISSIVEWITHDIFFUSE
vec3 finalDiffuse=clamp((diffuseBase+emissiveColor)*diffuseColor+vAmbientColor,0.0,1.0)*baseColor.rgb;
#else
vec3 finalDiffuse=clamp(diffuseBase*diffuseColor+emissiveColor+vAmbientColor,0.0,1.0)*baseColor.rgb;
#endif
#endif
#ifdef SPECULARTERM
vec3 finalSpecular=specularBase*specularColor;
#ifdef SPECULAROVERALPHA
alpha=clamp(alpha+dot(finalSpecular,vec3(0.3,0.59,0.11)),0.,1.);
#endif
#else
vec3 finalSpecular=vec3(0.0);
#endif
#ifdef REFLECTIONOVERALPHA
alpha=clamp(alpha+dot(reflectionColor.rgb,vec3(0.3,0.59,0.11)),0.,1.);
#endif
#ifdef EMISSIVEASILLUMINATION
vec4 color=vec4(clamp(finalDiffuse*baseAmbientColor+finalSpecular+reflectionColor.rgb+emissiveColor+refractionColor.rgb,0.0,1.0),alpha);
#else
vec4 color=vec4(finalDiffuse*baseAmbientColor+finalSpecular+reflectionColor.rgb+refractionColor.rgb,alpha);
#endif
#ifdef LIGHTMAP
#ifndef LIGHTMAPEXCLUDED
#ifdef USELIGHTMAPASSHADOWMAP
color.rgb*=lightmapColor.rgb;
#else
color.rgb+=lightmapColor.rgb;
#endif
#endif
#endif
#define CUSTOM_FRAGMENT_BEFORE_FOG
color.rgb=max(color.rgb,0.);
#include<logDepthFragment>
#include<fogFragment>
#ifdef IMAGEPROCESSINGPOSTPROCESS
color.rgb=toLinearSpace(color.rgb);
#else
#ifdef IMAGEPROCESSING
color.rgb=toLinearSpace(color.rgb);
color=applyImageProcessing(color);
#endif
#endif
color.a*=visibility;
#ifdef PREMULTIPLYALPHA
color.rgb*=color.a;
#endif
#define CUSTOM_FRAGMENT_BEFORE_FRAGCOLOR
#ifdef PREPASS
float writeGeometryInfo=color.a>0.4 ? 1.0 : 0.0;
gl_FragData[0]=color; 
#ifdef PREPASS_POSITION
gl_FragData[PREPASS_POSITION_INDEX]=vec4(vPositionW,writeGeometryInfo);
#endif
#ifdef PREPASS_VELOCITY
vec2 a=(vCurrentPosition.xy/vCurrentPosition.w)*0.5+0.5;
vec2 b=(vPreviousPosition.xy/vPreviousPosition.w)*0.5+0.5;
vec2 velocity=abs(a-b);
velocity=vec2(pow(velocity.x,1.0/3.0),pow(velocity.y,1.0/3.0))*sign(a-b)*0.5+0.5;
gl_FragData[PREPASS_VELOCITY_INDEX]=vec4(velocity,0.0,writeGeometryInfo);
#endif
#ifdef PREPASS_IRRADIANCE
gl_FragData[PREPASS_IRRADIANCE_INDEX]=vec4(0.0,0.0,0.0,writeGeometryInfo); 
#endif
#ifdef PREPASS_DEPTH
gl_FragData[PREPASS_DEPTH_INDEX]=vec4(vViewPos.z,0.0,0.0,writeGeometryInfo); 
#endif
#ifdef PREPASS_NORMAL
gl_FragData[PREPASS_NORMAL_INDEX]=vec4((view*vec4(normalW,0.0)).rgb,writeGeometryInfo); 
#endif
#ifdef PREPASS_ALBEDO_SQRT
gl_FragData[PREPASS_ALBEDO_SQRT_INDEX]=vec4(0.0,0.0,0.0,writeGeometryInfo); 
#endif
#ifdef PREPASS_REFLECTIVITY
#if defined(SPECULARTERM)
#if defined(SPECULAR)
gl_FragData[PREPASS_REFLECTIVITY_INDEX]=vec4(specularMapColor)*writeGeometryInfo; 
#else
gl_FragData[PREPASS_REFLECTIVITY_INDEX]=vec4(specularColor,1.0)*writeGeometryInfo;
#endif
#else
gl_FragData[PREPASS_REFLECTIVITY_INDEX]=vec4(0.0,0.0,0.0,1.0)*writeGeometryInfo;
#endif
#endif
#endif
#if !defined(PREPASS) || defined(WEBGL2)
gl_FragColor=color;
#endif
#include<oitFragment>
#if ORDER_INDEPENDENT_TRANSPARENCY
if (fragDepth==nearestDepth) {
frontColor.rgb+=color.rgb*color.a*alphaMultiplier;
frontColor.a=1.0-alphaMultiplier*(1.0-color.a);
} else {
backColor+=color;
}
#endif
#define CUSTOM_FRAGMENT_MAIN_END
}
`;U.ShadersStore[Dh]=Fh;const wh="defaultVertexDeclaration",Oh=`uniform mat4 viewProjection;
uniform mat4 view;
#ifdef DIFFUSE
uniform mat4 diffuseMatrix;
uniform vec2 vDiffuseInfos;
#endif
#ifdef AMBIENT
uniform mat4 ambientMatrix;
uniform vec2 vAmbientInfos;
#endif
#ifdef OPACITY
uniform mat4 opacityMatrix;
uniform vec2 vOpacityInfos;
#endif
#ifdef EMISSIVE
uniform vec2 vEmissiveInfos;
uniform mat4 emissiveMatrix;
#endif
#ifdef LIGHTMAP
uniform vec2 vLightmapInfos;
uniform mat4 lightmapMatrix;
#endif
#if defined(SPECULAR) && defined(SPECULARTERM)
uniform vec2 vSpecularInfos;
uniform mat4 specularMatrix;
#endif
#ifdef BUMP
uniform vec3 vBumpInfos;
uniform mat4 bumpMatrix;
#endif
#ifdef REFLECTION
uniform mat4 reflectionMatrix;
#endif
#ifdef POINTSIZE
uniform float pointSize;
#endif
#ifdef DETAIL
uniform vec4 vDetailInfos;
uniform mat4 detailMatrix;
#endif
#define ADDITIONAL_VERTEX_DECLARATION
`;U.IncludesShadersStore[wh]=Oh;const Lh="uvAttributeDeclaration",Nh=`#ifdef UV{X}
attribute vec2 uv{X};
#endif
`;U.IncludesShadersStore[Lh]=Nh;const Bh="prePassVertexDeclaration",Uh=`#ifdef PREPASS
#ifdef PREPASS_DEPTH
varying vec3 vViewPos;
#endif
#ifdef PREPASS_VELOCITY
uniform mat4 previousViewProjection;
varying vec4 vCurrentPosition;
varying vec4 vPreviousPosition;
#endif
#endif
`;U.IncludesShadersStore[Bh]=Uh;const kh="samplerVertexDeclaration",Vh=`#if defined(_DEFINENAME_) && _DEFINENAME_DIRECTUV==0
varying vec2 v_VARYINGNAME_UV;
#endif
`;U.IncludesShadersStore[kh]=Vh;const Wh="bumpVertexDeclaration",zh=`#if defined(BUMP) || defined(PARALLAX) || defined(CLEARCOAT_BUMP) || defined(ANISOTROPIC)
#if defined(TANGENT) && defined(NORMAL) 
varying mat3 vTBN;
#endif
#endif
`;U.IncludesShadersStore[Wh]=zh;const Gh="fogVertexDeclaration",Xh=`#ifdef FOG
varying vec3 vFogDistance;
#endif
`;U.IncludesShadersStore[Gh]=Xh;const Hh="lightVxFragmentDeclaration",Kh=`#ifdef LIGHT{X}
uniform vec4 vLightData{X};
uniform vec4 vLightDiffuse{X};
#ifdef SPECULARTERM
uniform vec4 vLightSpecular{X};
#else
vec4 vLightSpecular{X}=vec4(0.);
#endif
#ifdef SHADOW{X}
#ifdef SHADOWCSM{X}
uniform mat4 lightMatrix{X}[SHADOWCSMNUM_CASCADES{X}];
varying vec4 vPositionFromLight{X}[SHADOWCSMNUM_CASCADES{X}];
varying float vDepthMetric{X}[SHADOWCSMNUM_CASCADES{X}];
varying vec4 vPositionFromCamera{X};
#elif defined(SHADOWCUBE{X})
#else
varying vec4 vPositionFromLight{X};
varying float vDepthMetric{X};
uniform mat4 lightMatrix{X};
#endif
uniform vec4 shadowsInfo{X};
uniform vec2 depthValues{X};
#endif
#ifdef SPOTLIGHT{X}
uniform vec4 vLightDirection{X};
uniform vec4 vLightFalloff{X};
#elif defined(POINTLIGHT{X})
uniform vec4 vLightFalloff{X};
#elif defined(HEMILIGHT{X})
uniform vec3 vLightGround{X};
#endif
#endif
`;U.IncludesShadersStore[Hh]=Kh;const Yh="lightVxUboDeclaration",Zh=`#ifdef LIGHT{X}
uniform Light{X}
{
vec4 vLightData;
vec4 vLightDiffuse;
vec4 vLightSpecular;
#ifdef SPOTLIGHT{X}
vec4 vLightDirection;
vec4 vLightFalloff;
#elif defined(POINTLIGHT{X})
vec4 vLightFalloff;
#elif defined(HEMILIGHT{X})
vec3 vLightGround;
#endif
vec4 shadowsInfo;
vec2 depthValues;
} light{X};
#ifdef SHADOW{X}
#ifdef SHADOWCSM{X}
uniform mat4 lightMatrix{X}[SHADOWCSMNUM_CASCADES{X}];
varying vec4 vPositionFromLight{X}[SHADOWCSMNUM_CASCADES{X}];
varying float vDepthMetric{X}[SHADOWCSMNUM_CASCADES{X}];
varying vec4 vPositionFromCamera{X};
#elif defined(SHADOWCUBE{X})
#else
varying vec4 vPositionFromLight{X};
varying float vDepthMetric{X};
uniform mat4 lightMatrix{X};
#endif
#endif
#endif
`;U.IncludesShadersStore[Yh]=Zh;const qh="prePassVertex",jh=`#ifdef PREPASS_DEPTH
vViewPos=(view*worldPos).rgb;
#endif
#if defined(PREPASS_VELOCITY) && defined(BONES_VELOCITY_ENABLED)
vCurrentPosition=viewProjection*worldPos;
#if NUM_BONE_INFLUENCERS>0
mat4 previousInfluence;
previousInfluence=mPreviousBones[int(matricesIndices[0])]*matricesWeights[0];
#if NUM_BONE_INFLUENCERS>1
previousInfluence+=mPreviousBones[int(matricesIndices[1])]*matricesWeights[1];
#endif 
#if NUM_BONE_INFLUENCERS>2
previousInfluence+=mPreviousBones[int(matricesIndices[2])]*matricesWeights[2];
#endif 
#if NUM_BONE_INFLUENCERS>3
previousInfluence+=mPreviousBones[int(matricesIndices[3])]*matricesWeights[3];
#endif
#if NUM_BONE_INFLUENCERS>4
previousInfluence+=mPreviousBones[int(matricesIndicesExtra[0])]*matricesWeightsExtra[0];
#endif 
#if NUM_BONE_INFLUENCERS>5
previousInfluence+=mPreviousBones[int(matricesIndicesExtra[1])]*matricesWeightsExtra[1];
#endif 
#if NUM_BONE_INFLUENCERS>6
previousInfluence+=mPreviousBones[int(matricesIndicesExtra[2])]*matricesWeightsExtra[2];
#endif 
#if NUM_BONE_INFLUENCERS>7
previousInfluence+=mPreviousBones[int(matricesIndicesExtra[3])]*matricesWeightsExtra[3];
#endif
vPreviousPosition=previousViewProjection*finalPreviousWorld*previousInfluence*vec4(positionUpdated,1.0);
#else
vPreviousPosition=previousViewProjection*finalPreviousWorld*vec4(positionUpdated,1.0);
#endif
#endif
`;U.IncludesShadersStore[qh]=jh;const $h="uvVariableDeclaration",Qh=`#if !defined(UV{X}) && defined(MAINUV{X})
vec2 uv{X}=vec2(0.,0.);
#endif
#ifdef MAINUV{X}
vMainUV{X}=uv{X};
#endif
`;U.IncludesShadersStore[$h]=Qh;const Jh="samplerVertexImplementation",el=`#if defined(_DEFINENAME_) && _DEFINENAME_DIRECTUV==0
if (v_INFONAME_==0.)
{
v_VARYINGNAME_UV=vec2(_MATRIXNAME_Matrix*vec4(uvUpdated,1.0,0.0));
}
#ifdef UV2
else if (v_INFONAME_==1.)
{
v_VARYINGNAME_UV=vec2(_MATRIXNAME_Matrix*vec4(uv2,1.0,0.0));
}
#endif
#ifdef UV3
else if (v_INFONAME_==2.)
{
v_VARYINGNAME_UV=vec2(_MATRIXNAME_Matrix*vec4(uv3,1.0,0.0));
}
#endif
#ifdef UV4
else if (v_INFONAME_==3.)
{
v_VARYINGNAME_UV=vec2(_MATRIXNAME_Matrix*vec4(uv4,1.0,0.0));
}
#endif
#ifdef UV5
else if (v_INFONAME_==4.)
{
v_VARYINGNAME_UV=vec2(_MATRIXNAME_Matrix*vec4(uv5,1.0,0.0));
}
#endif
#ifdef UV6
else if (v_INFONAME_==5.)
{
v_VARYINGNAME_UV=vec2(_MATRIXNAME_Matrix*vec4(uv6,1.0,0.0));
}
#endif
#endif
`;U.IncludesShadersStore[Jh]=el;const tl="bumpVertex",il=`#if defined(BUMP) || defined(PARALLAX) || defined(CLEARCOAT_BUMP) || defined(ANISOTROPIC)
#if defined(TANGENT) && defined(NORMAL)
vec3 tbnNormal=normalize(normalUpdated);
vec3 tbnTangent=normalize(tangentUpdated.xyz);
vec3 tbnBitangent=cross(tbnNormal,tbnTangent)*tangentUpdated.w;
vTBN=mat3(finalWorld)*mat3(tbnTangent,tbnBitangent,tbnNormal);
#endif
#endif
`;U.IncludesShadersStore[tl]=il;const sl="fogVertex",rl=`#ifdef FOG
vFogDistance=(view*worldPos).xyz;
#endif
`;U.IncludesShadersStore[sl]=rl;const nl="shadowsVertex",al=`#ifdef SHADOWS
#if defined(SHADOWCSM{X})
vPositionFromCamera{X}=view*worldPos;
for (int i=0; i<SHADOWCSMNUM_CASCADES{X}; i++) {
vPositionFromLight{X}[i]=lightMatrix{X}[i]*worldPos;
#ifdef USE_REVERSE_DEPTHBUFFER
vDepthMetric{X}[i]=(-vPositionFromLight{X}[i].z+light{X}.depthValues.x)/light{X}.depthValues.y;
#else
vDepthMetric{X}[i]=(vPositionFromLight{X}[i].z+light{X}.depthValues.x)/light{X}.depthValues.y;
#endif
}
#elif defined(SHADOW{X}) && !defined(SHADOWCUBE{X})
vPositionFromLight{X}=lightMatrix{X}*worldPos;
#ifdef USE_REVERSE_DEPTHBUFFER
vDepthMetric{X}=(-vPositionFromLight{X}.z+light{X}.depthValues.x)/light{X}.depthValues.y;
#else
vDepthMetric{X}=(vPositionFromLight{X}.z+light{X}.depthValues.x)/light{X}.depthValues.y;
#endif
#endif
#endif
`;U.IncludesShadersStore[nl]=al;const ol="vertexColorMixing",hl=`#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)
vColor=vec4(1.0);
#ifdef VERTEXCOLOR
#ifdef VERTEXALPHA
vColor*=color;
#else
vColor.rgb*=color.rgb;
#endif
#endif
#ifdef INSTANCESCOLOR
vColor*=instanceColor;
#endif
#endif
`;U.IncludesShadersStore[ol]=hl;const ll="pointCloudVertex",cl=`#if defined(POINTSIZE) && !defined(WEBGPU)
gl_PointSize=pointSize;
#endif
`;U.IncludesShadersStore[ll]=cl;const ul="logDepthVertex",dl=`#ifdef LOGARITHMICDEPTH
vFragmentDepth=1.0+gl_Position.w;
gl_Position.z=log2(max(0.000001,vFragmentDepth))*logarithmicDepthConstant;
#endif
`;U.IncludesShadersStore[ul]=dl;const fl="defaultVertexShader",_l=`#include<__decl__defaultVertex>
#define CUSTOM_VERTEX_BEGIN
attribute vec3 position;
#ifdef NORMAL
attribute vec3 normal;
#endif
#ifdef TANGENT
attribute vec4 tangent;
#endif
#ifdef UV1
attribute vec2 uv;
#endif
#include<uvAttributeDeclaration>[2..7]
#ifdef VERTEXCOLOR
attribute vec4 color;
#endif
#include<helperFunctions>
#include<bonesDeclaration>
#include<bakedVertexAnimationDeclaration>
#include<instancesDeclaration>
#include<prePassVertexDeclaration>
#include<mainUVVaryingDeclaration>[1..7]
#include<samplerVertexDeclaration>(_DEFINENAME_,DIFFUSE,_VARYINGNAME_,Diffuse)
#include<samplerVertexDeclaration>(_DEFINENAME_,DETAIL,_VARYINGNAME_,Detail)
#include<samplerVertexDeclaration>(_DEFINENAME_,AMBIENT,_VARYINGNAME_,Ambient)
#include<samplerVertexDeclaration>(_DEFINENAME_,OPACITY,_VARYINGNAME_,Opacity)
#include<samplerVertexDeclaration>(_DEFINENAME_,EMISSIVE,_VARYINGNAME_,Emissive)
#include<samplerVertexDeclaration>(_DEFINENAME_,LIGHTMAP,_VARYINGNAME_,Lightmap)
#if defined(SPECULARTERM)
#include<samplerVertexDeclaration>(_DEFINENAME_,SPECULAR,_VARYINGNAME_,Specular)
#endif
#include<samplerVertexDeclaration>(_DEFINENAME_,BUMP,_VARYINGNAME_,Bump)
varying vec3 vPositionW;
#ifdef NORMAL
varying vec3 vNormalW;
#endif
#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)
varying vec4 vColor;
#endif
#include<bumpVertexDeclaration>
#include<clipPlaneVertexDeclaration>
#include<fogVertexDeclaration>
#include<__decl__lightVxFragment>[0..maxSimultaneousLights]
#include<morphTargetsVertexGlobalDeclaration>
#include<morphTargetsVertexDeclaration>[0..maxSimultaneousMorphTargets]
#ifdef REFLECTIONMAP_SKYBOX
varying vec3 vPositionUVW;
#endif
#if defined(REFLECTIONMAP_EQUIRECTANGULAR_FIXED) || defined(REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED)
varying vec3 vDirectionW;
#endif
#include<logDepthDeclaration>
#define CUSTOM_VERTEX_DEFINITIONS
void main(void) {
#define CUSTOM_VERTEX_MAIN_BEGIN
vec3 positionUpdated=position;
#ifdef NORMAL
vec3 normalUpdated=normal;
#endif
#ifdef TANGENT
vec4 tangentUpdated=tangent;
#endif
#ifdef UV1
vec2 uvUpdated=uv;
#endif
#include<morphTargetsVertexGlobal>
#include<morphTargetsVertex>[0..maxSimultaneousMorphTargets]
#ifdef REFLECTIONMAP_SKYBOX
vPositionUVW=positionUpdated;
#endif
#define CUSTOM_VERTEX_UPDATE_POSITION
#define CUSTOM_VERTEX_UPDATE_NORMAL
#include<instancesVertex>
#if defined(PREPASS) && defined(PREPASS_VELOCITY) && !defined(BONES_VELOCITY_ENABLED)
vCurrentPosition=viewProjection*finalWorld*vec4(positionUpdated,1.0);
vPreviousPosition=previousViewProjection*finalPreviousWorld*vec4(positionUpdated,1.0);
#endif
#include<bonesVertex>
#include<bakedVertexAnimation>
vec4 worldPos=finalWorld*vec4(positionUpdated,1.0);
#ifdef NORMAL
mat3 normalWorld=mat3(finalWorld);
#if defined(INSTANCES) && defined(THIN_INSTANCES)
vNormalW=normalUpdated/vec3(dot(normalWorld[0],normalWorld[0]),dot(normalWorld[1],normalWorld[1]),dot(normalWorld[2],normalWorld[2]));
vNormalW=normalize(normalWorld*vNormalW);
#else
#ifdef NONUNIFORMSCALING
normalWorld=transposeMat3(inverseMat3(normalWorld));
#endif
vNormalW=normalize(normalWorld*normalUpdated);
#endif
#endif
#define CUSTOM_VERTEX_UPDATE_WORLDPOS
#ifdef MULTIVIEW
if (gl_ViewID_OVR==0u) {
gl_Position=viewProjection*worldPos;
} else {
gl_Position=viewProjectionR*worldPos;
}
#else
gl_Position=viewProjection*worldPos;
#endif
vPositionW=vec3(worldPos);
#include<prePassVertex>
#if defined(REFLECTIONMAP_EQUIRECTANGULAR_FIXED) || defined(REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED)
vDirectionW=normalize(vec3(finalWorld*vec4(positionUpdated,0.0)));
#endif
#ifndef UV1
vec2 uvUpdated=vec2(0.,0.);
#endif
#ifdef MAINUV1
vMainUV1=uvUpdated;
#endif
#include<uvVariableDeclaration>[2..7]
#include<samplerVertexImplementation>(_DEFINENAME_,DIFFUSE,_VARYINGNAME_,Diffuse,_MATRIXNAME_,diffuse,_INFONAME_,DiffuseInfos.x)
#include<samplerVertexImplementation>(_DEFINENAME_,DETAIL,_VARYINGNAME_,Detail,_MATRIXNAME_,detail,_INFONAME_,DetailInfos.x)
#include<samplerVertexImplementation>(_DEFINENAME_,AMBIENT,_VARYINGNAME_,Ambient,_MATRIXNAME_,ambient,_INFONAME_,AmbientInfos.x)
#include<samplerVertexImplementation>(_DEFINENAME_,OPACITY,_VARYINGNAME_,Opacity,_MATRIXNAME_,opacity,_INFONAME_,OpacityInfos.x)
#include<samplerVertexImplementation>(_DEFINENAME_,EMISSIVE,_VARYINGNAME_,Emissive,_MATRIXNAME_,emissive,_INFONAME_,EmissiveInfos.x)
#include<samplerVertexImplementation>(_DEFINENAME_,LIGHTMAP,_VARYINGNAME_,Lightmap,_MATRIXNAME_,lightmap,_INFONAME_,LightmapInfos.x)
#if defined(SPECULARTERM)
#include<samplerVertexImplementation>(_DEFINENAME_,SPECULAR,_VARYINGNAME_,Specular,_MATRIXNAME_,specular,_INFONAME_,SpecularInfos.x)
#endif
#include<samplerVertexImplementation>(_DEFINENAME_,BUMP,_VARYINGNAME_,Bump,_MATRIXNAME_,bump,_INFONAME_,BumpInfos.x)
#include<bumpVertex>
#include<clipPlaneVertex>
#include<fogVertex>
#include<shadowsVertex>[0..maxSimultaneousLights]
#include<vertexColorMixing>
#include<pointCloudVertex>
#include<logDepthVertex>
#define CUSTOM_VERTEX_MAIN_END
}
`;U.ShadersStore[fl]=_l;const gl=new RegExp("^([gimus]+)!");class ei{constructor(e){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=e,this._scene=e.getScene(),this._engine=this._scene.getEngine()}_addPlugin(e){for(let s=0;s<this._plugins.length;++s)if(this._plugins[s].name===e.name)throw`Plugin "${e.name}" already added to the material "${this._material.name}"!`;if(this._material._uniformBufferLayoutBuilt)throw`The plugin "${e.name}" can't be added to the material "${this._material.name}" because this material has already been used for rendering! Please add plugins to materials before any rendering with this material occurs.`;const t=e.getClassName();ei._MaterialPluginClassToMainDefine[t]||(ei._MaterialPluginClassToMainDefine[t]="MATERIALPLUGIN_"+ ++ei._MaterialPluginCounter),this._material._callbackPluginEventGeneric=this._handlePluginEvent.bind(this),this._plugins.push(e),this._plugins.sort((s,r)=>s.priority-r.priority),this._codeInjectionPoints={};const i={};i[ei._MaterialPluginClassToMainDefine[t]]={type:"boolean",default:!0};for(const s of this._plugins)s.collectDefines(i),this._collectPointNames("vertex",s.getCustomCode("vertex")),this._collectPointNames("fragment",s.getCustomCode("fragment"));this._defineNamesFromPlugins=i}_activatePlugin(e){this._activePlugins.indexOf(e)===-1&&(this._activePlugins.push(e),this._activePlugins.sort((t,i)=>t.priority-i.priority),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),e.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(e),this._activePluginsForExtraEvents.sort((t,i)=>t.priority-i.priority),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(e){for(let t=0;t<this._plugins.length;++t)if(this._plugins[t].name===e)return this._plugins[t];return null}_handlePluginEventIsReadyForSubMesh(e){let t=!0;for(const i of this._activePlugins)t=t&&i.isReadyForSubMesh(e.defines,this._scene,this._engine,e.subMesh);e.isReadyForSubMesh=t}_handlePluginEventPrepareDefinesBeforeAttributes(e){for(const t of this._activePlugins)t.prepareDefinesBeforeAttributes(e.defines,this._scene,e.mesh)}_handlePluginEventPrepareDefines(e){for(const t of this._activePlugins)t.prepareDefines(e.defines,this._scene,e.mesh)}_handlePluginEventHardBindForSubMesh(e){for(const t of this._activePluginsForExtraEvents)t.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,e.subMesh)}_handlePluginEventBindForSubMesh(e){for(const t of this._activePlugins)t.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,e.subMesh)}_handlePluginEventHasRenderTargetTextures(e){let t=!1;for(const i of this._activePluginsForExtraEvents)if(t=i.hasRenderTargetTextures(),t)break;e.hasRenderTargetTextures=t}_handlePluginEventFillRenderTargetTextures(e){for(const t of this._activePluginsForExtraEvents)t.fillRenderTargetTextures(e.renderTargets)}_handlePluginEvent(e,t){switch(e){case Qe.GetActiveTextures:{const i=t;for(const s of this._activePlugins)s.getActiveTextures(i.activeTextures);break}case Qe.GetAnimatables:{const i=t;for(const s of this._activePlugins)s.getAnimatables(i.animatables);break}case Qe.HasTexture:{const i=t;let s=!1;for(const r of this._activePlugins)if(s=r.hasTexture(i.texture),s)break;i.hasTexture=s;break}case Qe.Disposed:{const i=t;for(const s of this._plugins)s.dispose(i.forceDisposeTextures);break}case Qe.GetDefineNames:{const i=t;i.defineNames=this._defineNamesFromPlugins;break}case Qe.PrepareEffect:{const i=t;for(const s of this._activePlugins)i.fallbackRank=s.addFallbacks(i.defines,i.fallbacks,i.fallbackRank),s.getAttributes(i.attributes,this._scene,i.mesh);this._uniformList.length>0&&i.uniforms.push(...this._uniformList),this._samplerList.length>0&&i.samplers.push(...this._samplerList),this._uboList.length>0&&i.uniformBuffersNames.push(...this._uboList),i.customCode=this._injectCustomCode(i.customCode);break}case Qe.PrepareUniformBuffer:{const i=t;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];for(const s of this._plugins){const r=s.getUniforms();if(r){if(r.ubo)for(const n of r.ubo)i.ubo.addUniform(n.name,n.size),this._uboDeclaration+=`${n.type} ${n.name};\r
`,this._uniformList.push(n.name);r.vertex&&(this._vertexDeclaration+=r.vertex+`\r
`),r.fragment&&(this._fragmentDeclaration+=r.fragment+`\r
`)}s.getSamplers(this._samplerList),s.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(e,t){if(t)for(const i in t)this._codeInjectionPoints[e]||(this._codeInjectionPoints[e]={}),this._codeInjectionPoints[e][i]=!0}_injectCustomCode(e){return(t,i)=>{var s;e&&(i=e(t,i)),this._uboDeclaration&&(i=i.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(i=i.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(i=i.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const r=(s=this._codeInjectionPoints)===null||s===void 0?void 0:s[t];if(!r)return i;for(let n in r){let a="";for(const o of this._activePlugins){const h=o.getCustomCode(t);h!=null&&h[n]&&(a+=h[n]+`\r
`)}if(a.length>0)if(n.charAt(0)==="!"){n=n.substring(1);let o="g";if(n.charAt(0)==="!")o="",n=n.substring(1);else{const d=gl.exec(n);d&&d.length>=2&&(o=d[1],n=n.substring(o.length+1))}o.indexOf("g")<0&&(o+="g");const h=i,l=new RegExp(n,o);let u=l.exec(h);for(;u!==null;){let d=a;for(let f=0;f<u.length;++f)d=d.replace("$"+f,u[f]);i=i.replace(u[0],d),u=l.exec(h)}}else{const o="#define "+n;i=i.replace(o,`\r
`+a+`\r
`+o)}}return i}}}ei._MaterialPluginClassToMainDefine={},ei._MaterialPluginCounter=0;class hs{constructor(e,t,i,s,r=!0,n=!1){this.priority=500,this.registerForExtraEvents=!1,this._material=e,this.name=t,this.priority=i,e.pluginManager||(e.pluginManager=new ei(e)),this._pluginDefineNames=s,this._pluginManager=e.pluginManager,r&&this._pluginManager._addPlugin(this),n&&this._enable(!0),this.markAllDefinesAsDirty=e._dirtyCallbacks[63]}_enable(e){e&&this._pluginManager._activatePlugin(this)}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(e,t,i,s){return!0}hardBindForSubMesh(e,t,i,s){}bindForSubMesh(e,t,i,s){}dispose(e){}getCustomCode(e){return null}collectDefines(e){if(this._pluginDefineNames)for(const t of Object.keys(this._pluginDefineNames)){if(t[0]==="_")continue;const i=typeof this._pluginDefineNames[t];e[t]={type:i==="number"?"number":i==="string"?"string":i==="boolean"?"boolean":"object",default:this._pluginDefineNames[t]}}}prepareDefinesBeforeAttributes(e,t,i){}prepareDefines(e,t,i){}hasTexture(e){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(e){}getActiveTextures(e){}getAnimatables(e){}addFallbacks(e,t,i){return i}getSamplers(e){}getAttributes(e,t,i){}getUniformBuffersNames(e){}getUniforms(){return{}}copyTo(e){ae.Clone(()=>e,this)}serialize(){return ae.Serialize(this)}parse(e,t,i){ae.Parse(()=>this,e,t,i)}}T([R()],hs.prototype,"name",void 0),T([R()],hs.prototype,"priority",void 0),T([R()],hs.prototype,"registerForExtraEvents",void 0);class pl extends ys{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class pi extends hs{constructor(e,t=!0){super(e,"DetailMap",140,new pl,t),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=P.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=e._dirtyCallbacks[1]}_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isReadyForSubMesh(e,t,i){return this._isEnabled?!(e._areTexturesDirty&&t.texturesEnabled&&i.getCaps().standardDerivatives&&this._texture&&ue.DetailTextureEnabled&&!this._texture.isReady()):!0}prepareDefines(e,t){if(this._isEnabled){e.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const i=t.getEngine();e._areTexturesDirty&&(i.getCaps().standardDerivatives&&this._texture&&ue.DetailTextureEnabled&&this._isEnabled?(ie.PrepareDefinesForMergedUV(this._texture,e,"DETAIL"),e.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):e.DETAIL=!1)}else e.DETAIL=!1}bindForSubMesh(e,t){if(!this._isEnabled)return;const i=this._material.isFrozen;(!e.useUbo||!i||!e.isSync)&&this._texture&&ue.DetailTextureEnabled&&(e.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),ie.BindTextureMatrix(this._texture,e,"detail")),t.texturesEnabled&&this._texture&&ue.DetailTextureEnabled&&e.setTexture("detailSampler",this._texture)}hasTexture(e){return this._texture===e}getActiveTextures(e){this._texture&&e.push(this._texture)}getAnimatables(e){this._texture&&this._texture.animations&&this._texture.animations.length>0&&e.push(this._texture)}dispose(e){var t;e&&((t=this._texture)===null||t===void 0||t.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(e){e.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}T([mt("detailTexture"),be("_markAllSubMeshesAsTexturesDirty")],pi.prototype,"texture",void 0),T([R()],pi.prototype,"diffuseBlendLevel",void 0),T([R()],pi.prototype,"roughnessBlendLevel",void 0),T([R()],pi.prototype,"bumpLevel",void 0),T([R(),be("_markAllSubMeshesAsTexturesDirty")],pi.prototype,"normalBlendMethod",void 0),T([R(),be("_markAllSubMeshesAsTexturesDirty")],pi.prototype,"isEnabled",void 0);const Gs={effect:null,subMesh:null};class ml extends ys{constructor(e){super(e),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=!1,this.TONEMAPPING_ACES=!1,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.rebuild()}setReflectionMode(e){const t=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const i of t)this[i]=i===e}}class B extends Vr{constructor(e,t){super(e,t),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new re(0,0,0),this.diffuseColor=new re(1,1,1),this.specularColor=new re(1,1,1),this.emissiveColor=new re(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._renderTargets=new $e(16),this._worldViewProjectionMatrix=x.Zero(),this._globalAmbientColor=new re(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new pi(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new kr,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),B.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),B.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(e){this._attachImageProcessingConfiguration(e),this._markAllSubMeshesAsTexturesDirty()}_attachImageProcessingConfiguration(e){e!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),e?this._imageProcessingConfiguration=e:this._imageProcessingConfiguration=this.getScene().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add(()=>{this._markAllSubMeshesAsImageProcessingDirty()})))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(e){this.imageProcessingConfiguration.colorCurvesEnabled=e}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(e){this.imageProcessingConfiguration.colorGradingEnabled=e}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(e){this._imageProcessingConfiguration.toneMappingEnabled=e}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(e){this._imageProcessingConfiguration.exposure=e}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(e){this._imageProcessingConfiguration.contrast=e}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(e){this._imageProcessingConfiguration.colorGradingTexture=e}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(e){this._imageProcessingConfiguration.colorCurves=e}get canRenderToMRT(){return!0}get hasRenderTargetTextures(){return B.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget||B.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget?!0:this._cacheHasRenderTargetTextures}getClassName(){return"StandardMaterial"}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(e){this._useLogarithmicDepth=e&&this.getScene().getEngine().getCaps().fragmentDepthSupported,this._markAllSubMeshesAsMiscDirty()}needAlphaBlending(){return this._disableAlphaBlending?!1:this.alpha<1||this._opacityTexture!=null||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled}needAlphaTesting(){return this._forceAlphaTest?!0:this._hasAlphaChannel()&&(this._transparencyMode==null||this._transparencyMode===P.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return this._diffuseTexture!=null&&this._diffuseTexture.hasAlpha&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==P.MATERIAL_OPAQUE}_hasAlphaChannel(){return this._diffuseTexture!=null&&this._diffuseTexture.hasAlpha||this._opacityTexture!=null}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(e,t,i=!1){if(this._uniformBufferLayoutBuilt||this.buildUniformLayout(),t.effect&&this.isFrozen&&t.effect._wasPreviouslyReady&&t.effect._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(this._callbackPluginEventGeneric(Qe.GetDefineNames,this._eventInfo),t.materialDefines=new ml(this._eventInfo.defineNames));const s=this.getScene(),r=t.materialDefines;if(this._isReadyForSubMesh(t))return!0;const n=s.getEngine();r._needNormals=ie.PrepareDefinesForLights(s,e,r,!0,this._maxSimultaneousLights,this._disableLighting),ie.PrepareDefinesForMultiview(s,r);const a=this.needAlphaBlendingForMesh(e)&&this.getScene().useOrderIndependentTransparency;if(ie.PrepareDefinesForPrePass(s,r,this.canRenderToMRT&&!a),ie.PrepareDefinesForOIT(s,r,a),r._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,r._needUVs=!1;for(let h=1;h<=6;++h)r["MAINUV"+h]=!1;if(s.texturesEnabled){if(r.DIFFUSEDIRECTUV=0,r.BUMPDIRECTUV=0,r.AMBIENTDIRECTUV=0,r.OPACITYDIRECTUV=0,r.EMISSIVEDIRECTUV=0,r.SPECULARDIRECTUV=0,r.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&B.DiffuseTextureEnabled)if(this._diffuseTexture.isReadyOrNotBlocking())ie.PrepareDefinesForMergedUV(this._diffuseTexture,r,"DIFFUSE");else return!1;else r.DIFFUSE=!1;if(this._ambientTexture&&B.AmbientTextureEnabled)if(this._ambientTexture.isReadyOrNotBlocking())ie.PrepareDefinesForMergedUV(this._ambientTexture,r,"AMBIENT");else return!1;else r.AMBIENT=!1;if(this._opacityTexture&&B.OpacityTextureEnabled)if(this._opacityTexture.isReadyOrNotBlocking())ie.PrepareDefinesForMergedUV(this._opacityTexture,r,"OPACITY"),r.OPACITYRGB=this._opacityTexture.getAlphaFromRGB;else return!1;else r.OPACITY=!1;if(this._reflectionTexture&&B.ReflectionTextureEnabled)if(this._reflectionTexture.isReadyOrNotBlocking()){switch(r._needNormals=!0,r.REFLECTION=!0,r.ROUGHNESS=this._roughness>0,r.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,r.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===N.INVCUBIC_MODE,r.REFLECTIONMAP_3D=this._reflectionTexture.isCube,r.REFLECTIONMAP_OPPOSITEZ=r.REFLECTIONMAP_3D&&this.getScene().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,r.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case N.EXPLICIT_MODE:r.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case N.PLANAR_MODE:r.setReflectionMode("REFLECTIONMAP_PLANAR");break;case N.PROJECTION_MODE:r.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case N.SKYBOX_MODE:r.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case N.SPHERICAL_MODE:r.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case N.EQUIRECTANGULAR_MODE:r.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case N.FIXED_EQUIRECTANGULAR_MODE:r.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case N.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:r.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case N.CUBIC_MODE:case N.INVCUBIC_MODE:default:r.setReflectionMode("REFLECTIONMAP_CUBIC");break}r.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else return!1;else r.REFLECTION=!1,r.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&B.EmissiveTextureEnabled)if(this._emissiveTexture.isReadyOrNotBlocking())ie.PrepareDefinesForMergedUV(this._emissiveTexture,r,"EMISSIVE");else return!1;else r.EMISSIVE=!1;if(this._lightmapTexture&&B.LightmapTextureEnabled)if(this._lightmapTexture.isReadyOrNotBlocking())ie.PrepareDefinesForMergedUV(this._lightmapTexture,r,"LIGHTMAP"),r.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,r.RGBDLIGHTMAP=this._lightmapTexture.isRGBD;else return!1;else r.LIGHTMAP=!1;if(this._specularTexture&&B.SpecularTextureEnabled)if(this._specularTexture.isReadyOrNotBlocking())ie.PrepareDefinesForMergedUV(this._specularTexture,r,"SPECULAR"),r.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha;else return!1;else r.SPECULAR=!1;if(s.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&B.BumpTextureEnabled){if(this._bumpTexture.isReady())ie.PrepareDefinesForMergedUV(this._bumpTexture,r,"BUMP"),r.PARALLAX=this._useParallax,r.PARALLAXOCCLUSION=this._useParallaxOcclusion;else return!1;r.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else r.BUMP=!1,r.PARALLAX=!1,r.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&B.RefractionTextureEnabled)if(this._refractionTexture.isReadyOrNotBlocking())r._needUVs=!0,r.REFRACTION=!0,r.REFRACTIONMAP_3D=this._refractionTexture.isCube,r.RGBDREFRACTION=this._refractionTexture.isRGBD,r.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize;else return!1;else r.REFRACTION=!1;r.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else r.DIFFUSE=!1,r.AMBIENT=!1,r.OPACITY=!1,r.REFLECTION=!1,r.EMISSIVE=!1,r.LIGHTMAP=!1,r.BUMP=!1,r.REFRACTION=!1;r.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),r.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,r.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,r.SPECULAROVERALPHA=this._useSpecularOverAlpha,r.PREMULTIPLYALPHA=this.alphaMode===7||this.alphaMode===8,r.ALPHATEST_AFTERALLALPHACOMPUTATIONS=this.transparencyMode!==null,r.ALPHABLEND=this.transparencyMode===null||this.needAlphaBlendingForMesh(e)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=r,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(r._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(r),r.IS_REFLECTION_LINEAR=this.reflectionTexture!=null&&!this.reflectionTexture.gammaSpace,r.IS_REFRACTION_LINEAR=this.refractionTexture!=null&&!this.refractionTexture.gammaSpace}r._areFresnelDirty&&(B.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(r.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,r.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,r.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,r.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,r.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,r.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,r._needNormals=!0,r.FRESNEL=!0):r.FRESNEL=!1),ie.PrepareDefinesForMisc(e,s,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e)||this._forceAlphaTest,r),ie.PrepareDefinesForFrameBoundValues(s,n,this,r,i,null,t.getRenderingMesh().hasThinInstances),this._eventInfo.defines=r,this._eventInfo.mesh=e,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),ie.PrepareDefinesForAttributes(e,r,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let o=!1;if(r.isDirty){const h=r._areLightsDisposed;r.markAsProcessed();const l=new zs;r.REFLECTION&&l.addFallback(0,"REFLECTION"),r.SPECULAR&&l.addFallback(0,"SPECULAR"),r.BUMP&&l.addFallback(0,"BUMP"),r.PARALLAX&&l.addFallback(1,"PARALLAX"),r.PARALLAXOCCLUSION&&l.addFallback(0,"PARALLAXOCCLUSION"),r.SPECULAROVERALPHA&&l.addFallback(0,"SPECULAROVERALPHA"),r.FOG&&l.addFallback(1,"FOG"),r.POINTSIZE&&l.addFallback(0,"POINTSIZE"),r.LOGARITHMICDEPTH&&l.addFallback(0,"LOGARITHMICDEPTH"),ie.HandleFallbacksForShadows(r,l,this._maxSimultaneousLights),r.SPECULARTERM&&l.addFallback(0,"SPECULARTERM"),r.DIFFUSEFRESNEL&&l.addFallback(1,"DIFFUSEFRESNEL"),r.OPACITYFRESNEL&&l.addFallback(2,"OPACITYFRESNEL"),r.REFLECTIONFRESNEL&&l.addFallback(3,"REFLECTIONFRESNEL"),r.EMISSIVEFRESNEL&&l.addFallback(4,"EMISSIVEFRESNEL"),r.FRESNEL&&l.addFallback(4,"FRESNEL"),r.MULTIVIEW&&l.addFallback(0,"MULTIVIEW");const u=[g.PositionKind];r.NORMAL&&u.push(g.NormalKind),r.TANGENT&&u.push(g.TangentKind);for(let A=1;A<=6;++A)r["UV"+A]&&u.push(`uv${A===1?"":A}`);r.VERTEXCOLOR&&u.push(g.ColorKind),ie.PrepareAttributesForBones(u,e,r,l),ie.PrepareAttributesForInstances(u,r),ie.PrepareAttributesForMorphTargets(u,e,r),ie.PrepareAttributesForBakedVertexAnimation(u,e,r);let d="default";const f=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices"],_=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler"],E=["Material","Scene","Mesh"];this._eventInfo.fallbacks=l,this._eventInfo.fallbackRank=0,this._eventInfo.defines=r,this._eventInfo.uniforms=f,this._eventInfo.attributes=u,this._eventInfo.samplers=_,this._eventInfo.uniformBuffersNames=E,this._eventInfo.customCode=void 0,this._eventInfo.mesh=e,this._callbackPluginEventGeneric(Qe.PrepareEffect,this._eventInfo),kr.AddUniforms(f),pe&&(pe.PrepareUniforms(f,r),pe.PrepareSamplers(_,r)),ie.PrepareUniformsAndSamplersList({uniformsNames:f,uniformBuffersNames:E,samplers:_,defines:r,maxSimultaneousLights:this._maxSimultaneousLights}),ss(f);const m={};this.customShaderNameResolve&&(d=this.customShaderNameResolve(d,f,E,_,r,u,m));const v=r.toString(),S=t.effect;let y=s.getEngine().createEffect(d,{attributes:u,uniformsNames:f,uniformBuffersNames:E,samplers:_,defines:v,fallbacks:l,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:r.NUM_MORPH_INFLUENCERS},processFinalCode:m.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:r.PREPASS},n);if(this._eventInfo.customCode=void 0,y)if(this._onEffectCreatedObservable&&(Gs.effect=y,Gs.subMesh=t,this._onEffectCreatedObservable.notifyObservers(Gs)),this.allowShaderHotSwapping&&S&&!y.isReady()){if(y=S,r.markAsUnprocessed(),o=this.isFrozen,h)return r._areLightsDisposed=!0,!1}else s.resetCachedMaterial(),t.setEffect(y,r,this._materialContext)}return!t.effect||!t.effect.isReady()?!1:(r._renderId=s.getRenderId(),t.effect._wasPreviouslyReady=!o,t.effect._wasPreviouslyUsingInstances=i,s.performancePriority!==Ct.BackwardCompatible&&(this.checkReadyOnlyOnce=!0),!0)}buildUniformLayout(){const e=this._uniformBuffer;e.addUniform("diffuseLeftColor",4),e.addUniform("diffuseRightColor",4),e.addUniform("opacityParts",4),e.addUniform("reflectionLeftColor",4),e.addUniform("reflectionRightColor",4),e.addUniform("refractionLeftColor",4),e.addUniform("refractionRightColor",4),e.addUniform("emissiveLeftColor",4),e.addUniform("emissiveRightColor",4),e.addUniform("vDiffuseInfos",2),e.addUniform("vAmbientInfos",2),e.addUniform("vOpacityInfos",2),e.addUniform("vReflectionInfos",2),e.addUniform("vReflectionPosition",3),e.addUniform("vReflectionSize",3),e.addUniform("vEmissiveInfos",2),e.addUniform("vLightmapInfos",2),e.addUniform("vSpecularInfos",2),e.addUniform("vBumpInfos",3),e.addUniform("diffuseMatrix",16),e.addUniform("ambientMatrix",16),e.addUniform("opacityMatrix",16),e.addUniform("reflectionMatrix",16),e.addUniform("emissiveMatrix",16),e.addUniform("lightmapMatrix",16),e.addUniform("specularMatrix",16),e.addUniform("bumpMatrix",16),e.addUniform("vTangentSpaceParams",2),e.addUniform("pointSize",1),e.addUniform("alphaCutOff",1),e.addUniform("refractionMatrix",16),e.addUniform("vRefractionInfos",4),e.addUniform("vRefractionPosition",3),e.addUniform("vRefractionSize",3),e.addUniform("vSpecularColor",4),e.addUniform("vEmissiveColor",3),e.addUniform("vDiffuseColor",4),e.addUniform("vAmbientColor",3),super.buildUniformLayout()}bindForSubMesh(e,t,i){var s;const r=this.getScene(),n=i.materialDefines;if(!n)return;const a=i.effect;if(!a)return;this._activeEffect=a,t.getMeshUniformBuffer().bindToEffect(a,"Mesh"),t.transferToEffect(e),this._uniformBuffer.bindToEffect(a,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,r,t,e,this.isFrozen),this._eventInfo.subMesh=i,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),n.OBJECTSPACE_NORMALMAP&&(e.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const o=a._forceRebindOnNextCall||this._mustRebind(r,a,t.visibility);ie.BindBonesParameters(t,a);const h=this._uniformBuffer;if(o){if(this.bindViewProjection(a),!h.useUbo||!this.isFrozen||!h.isSync||a._forceRebindOnNextCall){if(B.FresnelEnabled&&n.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(h.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),h.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&h.updateColor4("opacityParts",new re(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(h.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),h.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(h.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),h.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(h.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),h.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),r.texturesEnabled){if(this._diffuseTexture&&B.DiffuseTextureEnabled&&(h.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),ie.BindTextureMatrix(this._diffuseTexture,h,"diffuse")),this._ambientTexture&&B.AmbientTextureEnabled&&(h.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),ie.BindTextureMatrix(this._ambientTexture,h,"ambient")),this._opacityTexture&&B.OpacityTextureEnabled&&(h.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),ie.BindTextureMatrix(this._opacityTexture,h,"opacity")),this._hasAlphaChannel()&&h.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&B.ReflectionTextureEnabled&&(h.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),h.updateMatrix("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize)){const l=this._reflectionTexture;h.updateVector3("vReflectionPosition",l.boundingBoxPosition),h.updateVector3("vReflectionSize",l.boundingBoxSize)}if(this._emissiveTexture&&B.EmissiveTextureEnabled&&(h.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),ie.BindTextureMatrix(this._emissiveTexture,h,"emissive")),this._lightmapTexture&&B.LightmapTextureEnabled&&(h.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),ie.BindTextureMatrix(this._lightmapTexture,h,"lightmap")),this._specularTexture&&B.SpecularTextureEnabled&&(h.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),ie.BindTextureMatrix(this._specularTexture,h,"specular")),this._bumpTexture&&r.getEngine().getCaps().standardDerivatives&&B.BumpTextureEnabled&&(h.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),ie.BindTextureMatrix(this._bumpTexture,h,"bump"),r._mirroredCameraPosition?h.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):h.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&B.RefractionTextureEnabled){let l=1;if(this._refractionTexture.isCube||(h.updateMatrix("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(l=this._refractionTexture.depth)),h.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,l,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const u=this._refractionTexture;h.updateVector3("vRefractionPosition",u.boundingBoxPosition),h.updateVector3("vRefractionSize",u.boundingBoxSize)}}}this.pointsCloud&&h.updateFloat("pointSize",this.pointSize),n.SPECULARTERM&&h.updateColor4("vSpecularColor",this.specularColor,this.specularPower),h.updateColor3("vEmissiveColor",B.EmissiveTextureEnabled?this.emissiveColor:re.BlackReadOnly),h.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),r.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),h.updateColor3("vAmbientColor",this._globalAmbientColor)}r.texturesEnabled&&(this._diffuseTexture&&B.DiffuseTextureEnabled&&a.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&B.AmbientTextureEnabled&&a.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&B.OpacityTextureEnabled&&a.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&B.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?a.setTexture("reflectionCubeSampler",this._reflectionTexture):a.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&B.EmissiveTextureEnabled&&a.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&B.LightmapTextureEnabled&&a.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&B.SpecularTextureEnabled&&a.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&r.getEngine().getCaps().standardDerivatives&&B.BumpTextureEnabled&&a.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&B.RefractionTextureEnabled&&(this._refractionTexture.isCube?a.setTexture("refractionCubeSampler",this._refractionTexture):a.setTexture("refraction2DSampler",this._refractionTexture))),this.getScene().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(t)&&this.getScene().depthPeelingRenderer.bind(a),this._eventInfo.subMesh=i,this._callbackPluginEventBindForSubMesh(this._eventInfo),rs(a,this,r),this.bindEyePosition(a)}else r.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);(o||!this.isFrozen)&&(r.lightsEnabled&&!this._disableLighting&&ie.BindLights(r,t,a,n,this._maxSimultaneousLights),(r.fogEnabled&&t.applyFog&&r.fogMode!==ne.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||t.receiveShadows||n.PREPASS)&&this.bindView(a),ie.BindFogParameters(r,t,a),n.NUM_MORPH_INFLUENCERS&&ie.BindMorphTargetParameters(t,a),n.BAKED_VERTEX_ANIMATION_TEXTURE&&((s=t.bakedVertexAnimationManager)===null||s===void 0||s.bind(a,n.INSTANCES)),this.useLogarithmicDepth&&ie.BindLogDepth(n,a,r),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)),this._afterBind(t,this._activeEffect),h.update()}getAnimatables(){const e=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&e.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&e.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&e.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&e.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&e.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&e.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&e.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&e.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&e.push(this._refractionTexture),e}getActiveTextures(){const e=super.getActiveTextures();return this._diffuseTexture&&e.push(this._diffuseTexture),this._ambientTexture&&e.push(this._ambientTexture),this._opacityTexture&&e.push(this._opacityTexture),this._reflectionTexture&&e.push(this._reflectionTexture),this._emissiveTexture&&e.push(this._emissiveTexture),this._specularTexture&&e.push(this._specularTexture),this._bumpTexture&&e.push(this._bumpTexture),this._lightmapTexture&&e.push(this._lightmapTexture),this._refractionTexture&&e.push(this._refractionTexture),e}hasTexture(e){return!!(super.hasTexture(e)||this._diffuseTexture===e||this._ambientTexture===e||this._opacityTexture===e||this._reflectionTexture===e||this._emissiveTexture===e||this._specularTexture===e||this._bumpTexture===e||this._lightmapTexture===e||this._refractionTexture===e)}dispose(e,t){var i,s,r,n,a,o,h,l,u;t&&((i=this._diffuseTexture)===null||i===void 0||i.dispose(),(s=this._ambientTexture)===null||s===void 0||s.dispose(),(r=this._opacityTexture)===null||r===void 0||r.dispose(),(n=this._reflectionTexture)===null||n===void 0||n.dispose(),(a=this._emissiveTexture)===null||a===void 0||a.dispose(),(o=this._specularTexture)===null||o===void 0||o.dispose(),(h=this._bumpTexture)===null||h===void 0||h.dispose(),(l=this._lightmapTexture)===null||l===void 0||l.dispose(),(u=this._refractionTexture)===null||u===void 0||u.dispose()),this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(e,t)}clone(e){const t=ae.Clone(()=>new B(e,this.getScene()),this);return t.name=e,t.id=e,this.stencil.copyTo(t.stencil),t}static Parse(e,t,i){const s=ae.Parse(()=>new B(e.name,t),e,t,i);return e.stencil&&s.stencil.parse(e.stencil,t,i),s}static get DiffuseTextureEnabled(){return ue.DiffuseTextureEnabled}static set DiffuseTextureEnabled(e){ue.DiffuseTextureEnabled=e}static get DetailTextureEnabled(){return ue.DetailTextureEnabled}static set DetailTextureEnabled(e){ue.DetailTextureEnabled=e}static get AmbientTextureEnabled(){return ue.AmbientTextureEnabled}static set AmbientTextureEnabled(e){ue.AmbientTextureEnabled=e}static get OpacityTextureEnabled(){return ue.OpacityTextureEnabled}static set OpacityTextureEnabled(e){ue.OpacityTextureEnabled=e}static get ReflectionTextureEnabled(){return ue.ReflectionTextureEnabled}static set ReflectionTextureEnabled(e){ue.ReflectionTextureEnabled=e}static get EmissiveTextureEnabled(){return ue.EmissiveTextureEnabled}static set EmissiveTextureEnabled(e){ue.EmissiveTextureEnabled=e}static get SpecularTextureEnabled(){return ue.SpecularTextureEnabled}static set SpecularTextureEnabled(e){ue.SpecularTextureEnabled=e}static get BumpTextureEnabled(){return ue.BumpTextureEnabled}static set BumpTextureEnabled(e){ue.BumpTextureEnabled=e}static get LightmapTextureEnabled(){return ue.LightmapTextureEnabled}static set LightmapTextureEnabled(e){ue.LightmapTextureEnabled=e}static get RefractionTextureEnabled(){return ue.RefractionTextureEnabled}static set RefractionTextureEnabled(e){ue.RefractionTextureEnabled=e}static get ColorGradingTextureEnabled(){return ue.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(e){ue.ColorGradingTextureEnabled=e}static get FresnelEnabled(){return ue.FresnelEnabled}static set FresnelEnabled(e){ue.FresnelEnabled=e}}T([mt("diffuseTexture")],B.prototype,"_diffuseTexture",void 0),T([be("_markAllSubMeshesAsTexturesAndMiscDirty")],B.prototype,"diffuseTexture",void 0),T([mt("ambientTexture")],B.prototype,"_ambientTexture",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"ambientTexture",void 0),T([mt("opacityTexture")],B.prototype,"_opacityTexture",void 0),T([be("_markAllSubMeshesAsTexturesAndMiscDirty")],B.prototype,"opacityTexture",void 0),T([mt("reflectionTexture")],B.prototype,"_reflectionTexture",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"reflectionTexture",void 0),T([mt("emissiveTexture")],B.prototype,"_emissiveTexture",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"emissiveTexture",void 0),T([mt("specularTexture")],B.prototype,"_specularTexture",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"specularTexture",void 0),T([mt("bumpTexture")],B.prototype,"_bumpTexture",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"bumpTexture",void 0),T([mt("lightmapTexture")],B.prototype,"_lightmapTexture",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"lightmapTexture",void 0),T([mt("refractionTexture")],B.prototype,"_refractionTexture",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"refractionTexture",void 0),T([ci("ambient")],B.prototype,"ambientColor",void 0),T([ci("diffuse")],B.prototype,"diffuseColor",void 0),T([ci("specular")],B.prototype,"specularColor",void 0),T([ci("emissive")],B.prototype,"emissiveColor",void 0),T([R()],B.prototype,"specularPower",void 0),T([R("useAlphaFromDiffuseTexture")],B.prototype,"_useAlphaFromDiffuseTexture",void 0),T([be("_markAllSubMeshesAsTexturesAndMiscDirty")],B.prototype,"useAlphaFromDiffuseTexture",void 0),T([R("useEmissiveAsIllumination")],B.prototype,"_useEmissiveAsIllumination",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useEmissiveAsIllumination",void 0),T([R("linkEmissiveWithDiffuse")],B.prototype,"_linkEmissiveWithDiffuse",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"linkEmissiveWithDiffuse",void 0),T([R("useSpecularOverAlpha")],B.prototype,"_useSpecularOverAlpha",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useSpecularOverAlpha",void 0),T([R("useReflectionOverAlpha")],B.prototype,"_useReflectionOverAlpha",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useReflectionOverAlpha",void 0),T([R("disableLighting")],B.prototype,"_disableLighting",void 0),T([be("_markAllSubMeshesAsLightsDirty")],B.prototype,"disableLighting",void 0),T([R("useObjectSpaceNormalMap")],B.prototype,"_useObjectSpaceNormalMap",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useObjectSpaceNormalMap",void 0),T([R("useParallax")],B.prototype,"_useParallax",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useParallax",void 0),T([R("useParallaxOcclusion")],B.prototype,"_useParallaxOcclusion",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useParallaxOcclusion",void 0),T([R()],B.prototype,"parallaxScaleBias",void 0),T([R("roughness")],B.prototype,"_roughness",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"roughness",void 0),T([R()],B.prototype,"indexOfRefraction",void 0),T([R()],B.prototype,"invertRefractionY",void 0),T([R()],B.prototype,"alphaCutOff",void 0),T([R("useLightmapAsShadowmap")],B.prototype,"_useLightmapAsShadowmap",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useLightmapAsShadowmap",void 0),T([Ni("diffuseFresnelParameters")],B.prototype,"_diffuseFresnelParameters",void 0),T([be("_markAllSubMeshesAsFresnelDirty")],B.prototype,"diffuseFresnelParameters",void 0),T([Ni("opacityFresnelParameters")],B.prototype,"_opacityFresnelParameters",void 0),T([be("_markAllSubMeshesAsFresnelAndMiscDirty")],B.prototype,"opacityFresnelParameters",void 0),T([Ni("reflectionFresnelParameters")],B.prototype,"_reflectionFresnelParameters",void 0),T([be("_markAllSubMeshesAsFresnelDirty")],B.prototype,"reflectionFresnelParameters",void 0),T([Ni("refractionFresnelParameters")],B.prototype,"_refractionFresnelParameters",void 0),T([be("_markAllSubMeshesAsFresnelDirty")],B.prototype,"refractionFresnelParameters",void 0),T([Ni("emissiveFresnelParameters")],B.prototype,"_emissiveFresnelParameters",void 0),T([be("_markAllSubMeshesAsFresnelDirty")],B.prototype,"emissiveFresnelParameters",void 0),T([R("useReflectionFresnelFromSpecular")],B.prototype,"_useReflectionFresnelFromSpecular",void 0),T([be("_markAllSubMeshesAsFresnelDirty")],B.prototype,"useReflectionFresnelFromSpecular",void 0),T([R("useGlossinessFromSpecularMapAlpha")],B.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useGlossinessFromSpecularMapAlpha",void 0),T([R("maxSimultaneousLights")],B.prototype,"_maxSimultaneousLights",void 0),T([be("_markAllSubMeshesAsLightsDirty")],B.prototype,"maxSimultaneousLights",void 0),T([R("invertNormalMapX")],B.prototype,"_invertNormalMapX",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"invertNormalMapX",void 0),T([R("invertNormalMapY")],B.prototype,"_invertNormalMapY",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"invertNormalMapY",void 0),T([R("twoSidedLighting")],B.prototype,"_twoSidedLighting",void 0),T([be("_markAllSubMeshesAsTexturesDirty")],B.prototype,"twoSidedLighting",void 0),T([R()],B.prototype,"useLogarithmicDepth",null),it("BABYLON.StandardMaterial",B),ne.DefaultMaterialFactory=c=>new B("default material",c);const El="imageProcessingCompatibility",vl=`#ifdef IMAGEPROCESSINGPOSTPROCESS
gl_FragColor.rgb=pow(gl_FragColor.rgb,vec3(2.2));
#endif
`;U.IncludesShadersStore[El]=vl;const Tl="shadowOnlyPixelShader",bl=`precision highp float;
uniform vec4 vEyePosition;
uniform float alpha;
uniform vec3 shadowColor;
varying vec3 vPositionW;
#ifdef NORMAL
varying vec3 vNormalW;
#endif
#include<helperFunctions>
#include<__decl__lightFragment>[0..maxSimultaneousLights]
#include<lightsFragmentFunctions>
#include<shadowsFragmentFunctions>
#include<clipPlaneFragmentDeclaration>
#include<fogFragmentDeclaration>
#define CUSTOM_FRAGMENT_DEFINITIONS
void main(void) {
#define CUSTOM_FRAGMENT_MAIN_BEGIN
#include<clipPlaneFragment>
vec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);
#ifdef NORMAL
vec3 normalW=normalize(vNormalW);
#else
vec3 normalW=vec3(1.0,1.0,1.0);
#endif
vec3 diffuseBase=vec3(0.,0.,0.);
lightingInfo info;
float shadow=1.;
float glossiness=0.;
#include<lightFragment>[0..1]
vec4 color=vec4(shadowColor,(1.0-clamp(shadow,0.,1.))*alpha);
#include<fogFragment>
gl_FragColor=color;
#include<imageProcessingCompatibility>
#define CUSTOM_FRAGMENT_MAIN_END
}`;U.ShadersStore[Tl]=bl;const Sl="shadowOnlyVertexShader",xl=`precision highp float;
attribute vec3 position;
#ifdef NORMAL
attribute vec3 normal;
#endif
#include<bonesDeclaration>
#include<bakedVertexAnimationDeclaration>
#include<instancesDeclaration>
uniform mat4 view;
uniform mat4 viewProjection;
#ifdef POINTSIZE
uniform float pointSize;
#endif
varying vec3 vPositionW;
#ifdef NORMAL
varying vec3 vNormalW;
#endif
#ifdef VERTEXCOLOR
varying vec4 vColor;
#endif
#include<clipPlaneVertexDeclaration>
#include<fogVertexDeclaration>
#include<__decl__lightFragment>[0..maxSimultaneousLights]
#define CUSTOM_VERTEX_DEFINITIONS
void main(void) {
#define CUSTOM_VERTEX_MAIN_BEGIN
#include<instancesVertex>
#include<bonesVertex>
#include<bakedVertexAnimation>
vec4 worldPos=finalWorld*vec4(position,1.0);
gl_Position=viewProjection*worldPos;
vPositionW=vec3(worldPos);
#ifdef NORMAL
vNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));
#endif
#include<clipPlaneVertex>
#include<fogVertex>
#include<shadowsVertex>[0..maxSimultaneousLights]
#if defined(POINTSIZE) && !defined(WEBGPU)
gl_PointSize=pointSize;
#endif
#define CUSTOM_VERTEX_MAIN_END
}
`;U.ShadersStore[Sl]=xl;class Ml extends ys{constructor(){super(),this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.POINTSIZE=!1,this.FOG=!1,this.NORMAL=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.INSTANCES=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.rebuild()}}class ki extends Vr{constructor(e,t){super(e,t),this._needAlphaBlending=!0,this.shadowColor=re.Black()}needAlphaBlending(){return this._needAlphaBlending}needAlphaTesting(){return!1}getAlphaTestTexture(){return null}get activeLight(){return this._activeLight}set activeLight(e){this._activeLight=e}_getFirstShadowLightForMesh(e){for(const t of e.lightSources)if(t.shadowEnabled)return t;return null}isReadyForSubMesh(e,t,i){var s;if(this.isFrozen&&t.effect&&t.effect._wasPreviouslyReady&&t.effect._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(t.materialDefines=new Ml);const r=t.materialDefines,n=this.getScene();if(this._isReadyForSubMesh(t))return!0;const a=n.getEngine();if(this._activeLight){for(const h of e.lightSources)if(h.shadowEnabled){if(this._activeLight===h)break;const l=e.lightSources.indexOf(this._activeLight);l!==-1&&(e.lightSources.splice(l,1),e.lightSources.splice(0,0,this._activeLight));break}}ie.PrepareDefinesForFrameBoundValues(n,a,this,r,!!i),ie.PrepareDefinesForMisc(e,n,!1,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e),r),r._needNormals=ie.PrepareDefinesForLights(n,e,r,!1,1);const o=(s=this._getFirstShadowLightForMesh(e))===null||s===void 0?void 0:s.getShadowGenerator();if(this._needAlphaBlending=!0,o&&o.getClassName&&o.getClassName()==="CascadedShadowGenerator"){const h=o;this._needAlphaBlending=!h.autoCalcDepthBounds}if(ie.PrepareDefinesForAttributes(e,r,!1,!0),r.isDirty){r.markAsProcessed(),n.resetCachedMaterial();const h=new zs;r.FOG&&h.addFallback(1,"FOG"),ie.HandleFallbacksForShadows(r,h,1),r.NUM_BONE_INFLUENCERS>0&&h.addCPUSkinningFallback(0,e),r.IMAGEPROCESSINGPOSTPROCESS=n.imageProcessingConfiguration.applyByPostProcess;const l=[g.PositionKind];r.NORMAL&&l.push(g.NormalKind),ie.PrepareAttributesForBones(l,e,r,h),ie.PrepareAttributesForInstances(l,r);const u="shadowOnly",d=r.toString(),f=["world","view","viewProjection","vEyePosition","vLightsType","vFogInfos","vFogColor","pointSize","alpha","shadowColor","mBones"],_=new Array,E=new Array;ss(f),ie.PrepareUniformsAndSamplersList({uniformsNames:f,uniformBuffersNames:E,samplers:_,defines:r,maxSimultaneousLights:1}),t.setEffect(n.getEngine().createEffect(u,{attributes:l,uniformsNames:f,uniformBuffersNames:E,samplers:_,defines:d,fallbacks:h,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:1}},a),r,this._materialContext)}return!t.effect||!t.effect.isReady()?!1:(r._renderId=n.getRenderId(),t.effect._wasPreviouslyReady=!0,t.effect._wasPreviouslyUsingInstances=!!i,!0)}bindForSubMesh(e,t,i){const s=this.getScene(),r=i.materialDefines;if(!r)return;const n=i.effect;if(n){if(this._activeEffect=n,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",s.getTransformMatrix()),ie.BindBonesParameters(t,this._activeEffect),this._mustRebind(s,n)&&(rs(n,this,s),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._activeEffect.setFloat("alpha",this.alpha),this._activeEffect.setColor3("shadowColor",this.shadowColor),s.bindEyePosition(n)),s.lightsEnabled){ie.BindLights(s,t,this._activeEffect,r,1);const a=this._getFirstShadowLightForMesh(t);a&&(a._renderId=-1)}(s.fogEnabled&&t.applyFog&&s.fogMode!==ne.FOGMODE_NONE||r.SHADOWCSM0)&&this._activeEffect.setMatrix("view",s.getViewMatrix()),ie.BindFogParameters(s,t,this._activeEffect),this._afterBind(t,this._activeEffect)}}clone(e){return ae.Clone(()=>new ki(e,this.getScene()),this)}serialize(){const e=super.serialize();return e.customType="BABYLON.ShadowOnlyMaterial",e}getClassName(){return"ShadowOnlyMaterial"}static Parse(e,t,i){return ae.Parse(()=>new ki(e.name,t),e,t,i)}}it("BABYLON.ShadowOnlyMaterial",ki);const Al={aspect:300/150,enableDebugging:!1,enableShadows:!0};class Rl{constructor(e){bt(this,"size",9.5);this.config={...Al,...e},this.create()}create(e){this.destroy(),Object.assign(this.config,e);const{aspect:t,enableDebugging:i=!0,enableShadows:s}=this.config,r=30;let n;this.box=new J("diceBox"),i?(n=new B("diceBox_material"),n.alpha=.7,n.diffuseColor=new re(1,1,0)):s&&(n=new ki("shadowOnly",this.config.scene));const a=Mi("ground",{width:this.size*2,height:1,depth:this.size*2},this.config.scene);if(a.scaling=new p(t,1,1),a.material=n,a.receiveShadows=!0,a.setParent(this.box),i){const o=Mi("wallTop",{width:this.size,height:r,depth:1},this.config.scene);o.position.y=r/2,o.position.z=this.size/-2,o.scaling=new p(t,1,1),o.material=n,o.setParent(this.box);const h=Mi("wallRight",{width:1,height:r,depth:this.size},this.config.scene);h.position.x=this.size*t/2,h.position.y=r/2,h.material=n,h.setParent(this.box);const l=Mi("wallBottom",{width:this.size,height:r,depth:1},this.config.scene);l.position.y=r/2,l.position.z=this.size/2,l.scaling=new p(t,1,1),l.material=n,l.setParent(this.box);const u=Mi("wallLeft",{width:1,height:r,depth:this.size},this.config.scene);u.position.x=this.size*t/-2,u.position.y=r/2,u.material=n,u.setParent(this.box)}}destroy(){this.box&&this.box.dispose()}}var ti;(function(c){c[c.Clean=0]="Clean",c[c.Stop=1]="Stop",c[c.Sync=2]="Sync",c[c.NoSync=3]="NoSync"})(ti||(ti={}));class le{static get ForceFullSceneLoadingForIncremental(){return Oe.ForceFullSceneLoadingForIncremental}static set ForceFullSceneLoadingForIncremental(e){Oe.ForceFullSceneLoadingForIncremental=e}static get ShowLoadingScreen(){return Oe.ShowLoadingScreen}static set ShowLoadingScreen(e){Oe.ShowLoadingScreen=e}static get loggingLevel(){return Oe.loggingLevel}static set loggingLevel(e){Oe.loggingLevel=e}static get CleanBoneMatrixWeights(){return Oe.CleanBoneMatrixWeights}static set CleanBoneMatrixWeights(e){Oe.CleanBoneMatrixWeights=e}static GetDefaultPlugin(){return le._RegisteredPlugins[".babylon"]}static _GetPluginForExtension(e){const t=le._RegisteredPlugins[e];return t||(O.Warn("Unable to find a plugin to load "+e+" files. Trying to use .babylon default plugin. To load from a specific filetype (eg. gltf) see: https://doc.babylonjs.com/features/featuresDeepDive/importers/loadingFileTypes"),le.GetDefaultPlugin())}static _GetPluginForDirectLoad(e){for(const t in le._RegisteredPlugins){const i=le._RegisteredPlugins[t].plugin;if(i.canDirectLoad&&i.canDirectLoad(e))return le._RegisteredPlugins[t]}return le.GetDefaultPlugin()}static _GetPluginForFilename(e){const t=e.indexOf("?");t!==-1&&(e=e.substring(0,t));const i=e.lastIndexOf("."),s=e.substring(i,e.length).toLowerCase();return le._GetPluginForExtension(s)}static _GetDirectLoad(e){return e.substr(0,5)==="data:"?e.substr(5):null}static _FormatErrorMessage(e,t,i){let s="Unable to load from "+e.url;return t?s+=`: ${t}`:i&&(s+=`: ${i}`),s}static _LoadData(e,t,i,s,r,n,a){const o=le._GetDirectLoad(e.url),h=a?le._GetPluginForExtension(a):o?le._GetPluginForDirectLoad(e.url):le._GetPluginForFilename(e.url);let l;if(h.plugin.createPlugin!==void 0?l=h.plugin.createPlugin():l=h.plugin,!l)throw"The loader plugin corresponding to the file type you are trying to load has not been found. If using es6, please import the plugin you wish to use before.";if(le.OnPluginActivatedObservable.notifyObservers(l),o&&(l.canDirectLoad&&l.canDirectLoad(e.url)||!Ms(e.url))){if(l.directLoad){const y=l.directLoad(t,o);y.then?y.then(A=>{i(l,A)}).catch(A=>{r("Error in directLoad of _loadData: "+A,A)}):i(l,y)}else i(l,o);return l}const u=h.isBinary,d=(y,A)=>{if(t.isDisposed){r("Scene has been disposed");return}i(l,y,A)};let f=null,_=!1;const E=l.onDisposeObservable;E&&E.add(()=>{_=!0,f&&(f.abort(),f=null),n()});const m=()=>{if(_)return;const y=(C,b)=>{r(C==null?void 0:C.statusText,b)},A=e.file||e.url;f=l.loadFile?l.loadFile(t,A,d,s,u,y):t._loadFile(A,d,s,!0,u,y)},v=t.getEngine();let S=v.enableOfflineSupport;if(S){let y=!1;for(const A of t.disableOfflineSupportExceptionRules)if(A.test(e.url)){y=!0;break}S=!y}return S&&I.OfflineProviderFactory?t.offlineProvider=I.OfflineProviderFactory(e.url,m,v.disableManifestCheck):m(),l}static _GetFileInfo(e,t){let i,s,r=null;if(!t)i=e,s=H.GetFilename(e),e=H.GetFolderPath(e);else if(t.name){const n=t;i=`file:${n.name}`,s=n.name,r=n}else if(typeof t=="string"&&t.startsWith("data:"))i=t,s="";else{const n=t;if(n.substr(0,1)==="/")return H.Error("Wrong sceneFilename parameter"),null;i=e+n,s=n}return{url:i,rootUrl:e,name:s,file:r}}static GetPluginForExtension(e){return le._GetPluginForExtension(e).plugin}static IsPluginForExtensionAvailable(e){return!!le._RegisteredPlugins[e]}static RegisterPlugin(e){if(typeof e.extensions=="string"){const t=e.extensions;le._RegisteredPlugins[t.toLowerCase()]={plugin:e,isBinary:!1}}else{const t=e.extensions;Object.keys(t).forEach(i=>{le._RegisteredPlugins[i.toLowerCase()]={plugin:e,isBinary:t[i].isBinary}})}}static ImportMesh(e,t,i="",s=fe.LastCreatedScene,r=null,n=null,a=null,o=null){if(!s)return O.Error("No scene available to import mesh to"),null;const h=le._GetFileInfo(t,i);if(!h)return null;const l={};s.addPendingData(l);const u=()=>{s.removePendingData(l)},d=(E,m)=>{const v=le._FormatErrorMessage(h,E,m);a?a(s,v,new Nt(v,oi.SceneLoaderError,m)):O.Error(v),u()},f=n?E=>{try{n(E)}catch(m){d("Error in onProgress callback: "+m,m)}}:void 0,_=(E,m,v,S,y,A,C)=>{if(s.importedMeshesFiles.push(h.url),r)try{r(E,m,v,S,y,A,C)}catch(b){d("Error in onSuccess callback: "+b,b)}s.removePendingData(l)};return le._LoadData(h,s,(E,m,v)=>{if(E.rewriteRootURL&&(h.rootUrl=E.rewriteRootURL(h.rootUrl,v)),E.importMesh){const S=E,y=new Array,A=new Array,C=new Array;if(!S.importMesh(e,s,m,h.rootUrl,y,A,C,d))return;s.loadingPluginName=E.name,_(y,A,C,[],[],[],[])}else E.importMeshAsync(e,s,m,h.rootUrl,f,h.name).then(y=>{s.loadingPluginName=E.name,_(y.meshes,y.particleSystems,y.skeletons,y.animationGroups,y.transformNodes,y.geometries,y.lights)}).catch(y=>{d(y.message,y)})},f,d,u,o)}static ImportMeshAsync(e,t,i="",s=fe.LastCreatedScene,r=null,n=null){return new Promise((a,o)=>{le.ImportMesh(e,t,i,s,(h,l,u,d,f,_,E)=>{a({meshes:h,particleSystems:l,skeletons:u,animationGroups:d,transformNodes:f,geometries:_,lights:E})},r,(h,l,u)=>{o(u||new Error(l))},n)})}static Load(e,t="",i=fe.LastCreatedEngine,s=null,r=null,n=null,a=null){return i?le.Append(e,t,new ne(i),s,r,n,a):(H.Error("No engine available"),null)}static LoadAsync(e,t="",i=fe.LastCreatedEngine,s=null,r=null){return new Promise((n,a)=>{le.Load(e,t,i,o=>{n(o)},s,(o,h,l)=>{a(l||new Error(h))},r)})}static Append(e,t="",i=fe.LastCreatedScene,s=null,r=null,n=null,a=null){if(!i)return O.Error("No scene available to append to"),null;const o=le._GetFileInfo(e,t);if(!o)return null;const h={};i.addPendingData(h);const l=()=>{i.removePendingData(h)};le.ShowLoadingScreen&&!this._ShowingLoadingScreen&&(this._ShowingLoadingScreen=!0,i.getEngine().displayLoadingUI(),i.executeWhenReady(()=>{i.getEngine().hideLoadingUI(),this._ShowingLoadingScreen=!1}));const u=(_,E)=>{const m=le._FormatErrorMessage(o,_,E);n?n(i,m,new Nt(m,oi.SceneLoaderError,E)):O.Error(m),l()},d=r?_=>{try{r(_)}catch(E){u("Error in onProgress callback",E)}}:void 0,f=()=>{if(s)try{s(i)}catch(_){u("Error in onSuccess callback",_)}i.removePendingData(h)};return le._LoadData(o,i,(_,E)=>{if(_.load){if(!_.load(i,E,o.rootUrl,u))return;i.loadingPluginName=_.name,f()}else _.loadAsync(i,E,o.rootUrl,d,o.name).then(()=>{i.loadingPluginName=_.name,f()}).catch(v=>{u(v.message,v)})},d,u,l,a)}static AppendAsync(e,t="",i=fe.LastCreatedScene,s=null,r=null){return new Promise((n,a)=>{le.Append(e,t,i,o=>{n(o)},s,(o,h,l)=>{a(l||new Error(h))},r)})}static LoadAssetContainer(e,t="",i=fe.LastCreatedScene,s=null,r=null,n=null,a=null){if(!i)return O.Error("No scene available to load asset container to"),null;const o=le._GetFileInfo(e,t);if(!o)return null;const h={};i.addPendingData(h);const l=()=>{i.removePendingData(h)},u=(_,E)=>{const m=le._FormatErrorMessage(o,_,E);n?n(i,m,new Nt(m,oi.SceneLoaderError,E)):O.Error(m),l()},d=r?_=>{try{r(_)}catch(E){u("Error in onProgress callback",E)}}:void 0,f=_=>{if(s)try{s(_)}catch(E){u("Error in onSuccess callback",E)}i.removePendingData(h)};return le._LoadData(o,i,(_,E)=>{if(_.loadAssetContainer){const v=_.loadAssetContainer(i,E,o.rootUrl,u);if(!v)return;i.loadingPluginName=_.name,f(v)}else _.loadAssetContainerAsync?_.loadAssetContainerAsync(i,E,o.rootUrl,d,o.name).then(v=>{i.loadingPluginName=_.name,f(v)}).catch(v=>{u(v.message,v)}):u("LoadAssetContainer is not supported by this plugin. Plugin did not provide a loadAssetContainer or loadAssetContainerAsync method.")},d,u,l,a)}static LoadAssetContainerAsync(e,t="",i=fe.LastCreatedScene,s=null,r=null){return new Promise((n,a)=>{le.LoadAssetContainer(e,t,i,o=>{n(o)},s,(o,h,l)=>{a(l||new Error(h))},r)})}static ImportAnimations(e,t="",i=fe.LastCreatedScene,s=!0,r=ti.Clean,n=null,a=null,o=null,h=null,l=null){if(!i){O.Error("No scene available to load animations to");return}if(s){for(const _ of i.animatables)_.reset();i.stopAllAnimations(),i.animationGroups.slice().forEach(_=>{_.dispose()}),i.getNodes().forEach(_=>{_.animations&&(_.animations=[])})}else switch(r){case ti.Clean:i.animationGroups.slice().forEach(f=>{f.dispose()});break;case ti.Stop:i.animationGroups.forEach(f=>{f.stop()});break;case ti.Sync:i.animationGroups.forEach(f=>{f.reset(),f.restart()});break;case ti.NoSync:break;default:O.Error("Unknown animation group loading mode value '"+r+"'");return}const u=i.animatables.length,d=f=>{f.mergeAnimationsTo(i,i.animatables.slice(u),n),f.dispose(),i.onAnimationFileImportedObservable.notifyObservers(i),a&&a(i)};this.LoadAssetContainer(e,t,i,d,o,h,l)}static ImportAnimationsAsync(e,t="",i=fe.LastCreatedScene,s=!0,r=ti.Clean,n=null,a=null,o=null,h=null,l=null){return new Promise((u,d)=>{le.ImportAnimations(e,t,i,s,r,n,f=>{u(f)},o,(f,_,E)=>{d(E||new Error(_))},l)})}}le.NO_LOGGING=0,le.MINIMAL_LOGGING=1,le.SUMMARY_LOGGING=2,le.DETAILED_LOGGING=3,le.OnPluginActivatedObservable=new F,le._RegisteredPlugins={},le._ShowingLoadingScreen=!1;class _e{constructor(e,t,i=Number.MAX_VALUE){this.origin=e,this.direction=t,this.length=i}clone(){return new _e(this.origin.clone(),this.direction.clone(),this.length)}intersectsBoxMinMax(e,t,i=0){const s=_e._TmpVector3[0].copyFromFloats(e.x-i,e.y-i,e.z-i),r=_e._TmpVector3[1].copyFromFloats(t.x+i,t.y+i,t.z+i);let n=0,a=Number.MAX_VALUE,o,h,l,u;if(Math.abs(this.direction.x)<1e-7){if(this.origin.x<s.x||this.origin.x>r.x)return!1}else if(o=1/this.direction.x,h=(s.x-this.origin.x)*o,l=(r.x-this.origin.x)*o,l===-1/0&&(l=1/0),h>l&&(u=h,h=l,l=u),n=Math.max(h,n),a=Math.min(l,a),n>a)return!1;if(Math.abs(this.direction.y)<1e-7){if(this.origin.y<s.y||this.origin.y>r.y)return!1}else if(o=1/this.direction.y,h=(s.y-this.origin.y)*o,l=(r.y-this.origin.y)*o,l===-1/0&&(l=1/0),h>l&&(u=h,h=l,l=u),n=Math.max(h,n),a=Math.min(l,a),n>a)return!1;if(Math.abs(this.direction.z)<1e-7){if(this.origin.z<s.z||this.origin.z>r.z)return!1}else if(o=1/this.direction.z,h=(s.z-this.origin.z)*o,l=(r.z-this.origin.z)*o,l===-1/0&&(l=1/0),h>l&&(u=h,h=l,l=u),n=Math.max(h,n),a=Math.min(l,a),n>a)return!1;return!0}intersectsBox(e,t=0){return this.intersectsBoxMinMax(e.minimum,e.maximum,t)}intersectsSphere(e,t=0){const i=e.center.x-this.origin.x,s=e.center.y-this.origin.y,r=e.center.z-this.origin.z,n=i*i+s*s+r*r,a=e.radius+t,o=a*a;if(n<=o)return!0;const h=i*this.direction.x+s*this.direction.y+r*this.direction.z;return h<0?!1:n-h*h<=o}intersectsTriangle(e,t,i){const s=_e._TmpVector3[0],r=_e._TmpVector3[1],n=_e._TmpVector3[2],a=_e._TmpVector3[3],o=_e._TmpVector3[4];t.subtractToRef(e,s),i.subtractToRef(e,r),p.CrossToRef(this.direction,r,n);const h=p.Dot(s,n);if(h===0)return null;const l=1/h;this.origin.subtractToRef(e,a);const u=p.Dot(a,n)*l;if(u<0||u>1)return null;p.CrossToRef(a,s,o);const d=p.Dot(this.direction,o)*l;if(d<0||u+d>1)return null;const f=p.Dot(r,o)*l;return f>this.length?null:new Ds(1-u-d,u,f)}intersectsPlane(e){let t;const i=p.Dot(e.normal,this.direction);if(Math.abs(i)<999999997475243e-21)return null;{const s=p.Dot(e.normal,this.origin);return t=(-e.d-s)/i,t<0?t<-999999997475243e-21?null:0:t}}intersectsAxis(e,t=0){switch(e){case"y":{const i=(this.origin.y-t)/this.direction.y;return i>0?null:new p(this.origin.x+this.direction.x*-i,t,this.origin.z+this.direction.z*-i)}case"x":{const i=(this.origin.x-t)/this.direction.x;return i>0?null:new p(t,this.origin.y+this.direction.y*-i,this.origin.z+this.direction.z*-i)}case"z":{const i=(this.origin.z-t)/this.direction.z;return i>0?null:new p(this.origin.x+this.direction.x*-i,this.origin.y+this.direction.y*-i,t)}default:return null}}intersectsMesh(e,t){const i=D.Matrix[0];return e.getWorldMatrix().invertToRef(i),this._tmpRay?_e.TransformToRef(this,i,this._tmpRay):this._tmpRay=_e.Transform(this,i),e.intersects(this._tmpRay,t)}intersectsMeshes(e,t,i){i?i.length=0:i=[];for(let s=0;s<e.length;s++){const r=this.intersectsMesh(e[s],t);r.hit&&i.push(r)}return i.sort(this._comparePickingInfo),i}_comparePickingInfo(e,t){return e.distance<t.distance?-1:e.distance>t.distance?1:0}intersectionSegment(e,t,i){const s=this.origin,r=D.Vector3[0],n=D.Vector3[1],a=D.Vector3[2],o=D.Vector3[3];t.subtractToRef(e,r),this.direction.scaleToRef(_e._Rayl,a),s.addToRef(a,n),e.subtractToRef(s,o);const h=p.Dot(r,r),l=p.Dot(r,a),u=p.Dot(a,a),d=p.Dot(r,o),f=p.Dot(a,o),_=h*u-l*l;let E,m=_,v,S=_;_<_e._Smallnum?(E=0,m=1,v=f,S=u):(E=l*f-u*d,v=h*f-l*d,E<0?(E=0,v=f,S=u):E>m&&(E=m,v=f+l,S=u)),v<0?(v=0,-d<0?E=0:-d>h?E=m:(E=-d,m=h)):v>S&&(v=S,-d+l<0?E=0:-d+l>h?E=m:(E=-d+l,m=h));const y=Math.abs(E)<_e._Smallnum?0:E/m,A=Math.abs(v)<_e._Smallnum?0:v/S,C=D.Vector3[4];a.scaleToRef(A,C);const b=D.Vector3[5];r.scaleToRef(y,b),b.addInPlace(o);const M=D.Vector3[6];return b.subtractToRef(C,M),A>0&&A<=this.length&&M.lengthSquared()<i*i?b.length():-1}update(e,t,i,s,r,n,a,o=!1){if(o){_e._RayDistant||(_e._RayDistant=_e.Zero()),_e._RayDistant.unprojectRayToRef(e,t,i,s,x.IdentityReadOnly,n,a);const h=D.Matrix[0];r.invertToRef(h),_e.TransformToRef(_e._RayDistant,h,this)}else this.unprojectRayToRef(e,t,i,s,r,n,a);return this}static Zero(){return new _e(p.Zero(),p.Zero())}static CreateNew(e,t,i,s,r,n,a){return _e.Zero().update(e,t,i,s,r,n,a)}static CreateNewFromTo(e,t,i=x.IdentityReadOnly){const s=t.subtract(e),r=Math.sqrt(s.x*s.x+s.y*s.y+s.z*s.z);return s.normalize(),_e.Transform(new _e(e,s,r),i)}static Transform(e,t){const i=new _e(new p(0,0,0),new p(0,0,0));return _e.TransformToRef(e,t,i),i}static TransformToRef(e,t,i){p.TransformCoordinatesToRef(e.origin,t,i.origin),p.TransformNormalToRef(e.direction,t,i.direction),i.length=e.length;const s=i.direction,r=s.length();if(!(r===0||r===1)){const n=1/r;s.x*=n,s.y*=n,s.z*=n,i.length*=r}}unprojectRayToRef(e,t,i,s,r,n,a){var o;const h=D.Matrix[0];r.multiplyToRef(n,h),h.multiplyToRef(a,h),h.invert();const l=D.Vector3[0];l.x=e/i*2-1,l.y=-(t/s*2-1),l.z=!((o=fe.LastCreatedEngine)===null||o===void 0)&&o.isNDCHalfZRange?0:-1;const u=D.Vector3[1].copyFromFloats(l.x,l.y,1-1e-8),d=D.Vector3[2],f=D.Vector3[3];p._UnprojectFromInvertedMatrixToRef(l,h,d),p._UnprojectFromInvertedMatrixToRef(u,h,f),this.origin.copyFrom(d),f.subtractToRef(d,this.direction),this.direction.normalize()}}_e._TmpVector3=Be.BuildArray(6,p.Zero),_e._RayDistant=_e.Zero(),_e._Smallnum=1e-8,_e._Rayl=1e9,ne.prototype.createPickingRay=function(c,e,t,i,s=!1){const r=_e.Zero();return this.createPickingRayToRef(c,e,t,r,i,s),r},ne.prototype.createPickingRayToRef=function(c,e,t,i,s,r=!1,n=!1){const a=this.getEngine();if(!s){if(!this.activeCamera)return this;s=this.activeCamera}const h=s.viewport.toGlobal(a.getRenderWidth(),a.getRenderHeight());return c=c/a.getHardwareScalingLevel()-h.x,e=e/a.getHardwareScalingLevel()-(a.getRenderHeight()-h.y-h.height),i.update(c,e,h.width,h.height,t||x.IdentityReadOnly,r?x.IdentityReadOnly:s.getViewMatrix(),s.getProjectionMatrix(),n),this},ne.prototype.createPickingRayInCameraSpace=function(c,e,t){const i=_e.Zero();return this.createPickingRayInCameraSpaceToRef(c,e,i,t),i},ne.prototype.createPickingRayInCameraSpaceToRef=function(c,e,t,i){if(!Ut)return this;const s=this.getEngine();if(!i){if(!this.activeCamera)throw new Error("Active camera not set");i=this.activeCamera}const n=i.viewport.toGlobal(s.getRenderWidth(),s.getRenderHeight()),a=x.Identity();return c=c/s.getHardwareScalingLevel()-n.x,e=e/s.getHardwareScalingLevel()-(s.getRenderHeight()-n.y-n.height),t.update(c,e,n.width,n.height,a,a,i.getProjectionMatrix()),this},ne.prototype._internalPickForMesh=function(c,e,t,i,s,r,n,a){const o=e(i,t.enableDistantPicking),h=t.intersects(o,s,n,r,i,a);return!h||!h.hit||!s&&c!=null&&h.distance>=c.distance?null:h},ne.prototype._internalPick=function(c,e,t,i,s){let r=null;for(let n=0;n<this.meshes.length;n++){const a=this.meshes[n];if(e){if(!e(a))continue}else if(!a.isEnabled()||!a.isVisible||!a.isPickable)continue;const o=a.getWorldMatrix();if(a.hasThinInstances&&a.thinInstanceEnablePicking){const h=this._internalPickForMesh(r,c,a,o,!0,!0,s);if(h){if(i)return h;const l=D.Matrix[1],u=a.thinInstanceGetWorldMatrices();for(let d=0;d<u.length;d++){u[d].multiplyToRef(o,l);const _=this._internalPickForMesh(r,c,a,l,t,i,s,!0);if(_&&(r=_,r.thinInstanceIndex=d,t))return r}}}else{const h=this._internalPickForMesh(r,c,a,o,t,i,s);if(h&&(r=h,t))return r}}return r||new Ut},ne.prototype._internalMultiPick=function(c,e,t){if(!Ut)return null;const i=new Array;for(let s=0;s<this.meshes.length;s++){const r=this.meshes[s];if(e){if(!e(r))continue}else if(!r.isEnabled()||!r.isVisible||!r.isPickable)continue;const n=r.getWorldMatrix();if(r.hasThinInstances&&r.thinInstanceEnablePicking){if(this._internalPickForMesh(null,c,r,n,!0,!0,t)){const o=D.Matrix[1],h=r.thinInstanceGetWorldMatrices();for(let l=0;l<h.length;l++){h[l].multiplyToRef(n,o);const d=this._internalPickForMesh(null,c,r,o,!1,!1,t,!0);d&&(d.thinInstanceIndex=l,i.push(d))}}}else{const a=this._internalPickForMesh(null,c,r,n,!1,!1,t);a&&i.push(a)}}return i},ne.prototype.pickWithBoundingInfo=function(c,e,t,i,s){if(!Ut)return null;const r=this._internalPick(n=>(this._tempPickingRay||(this._tempPickingRay=_e.Zero()),this.createPickingRayToRef(c,e,n,this._tempPickingRay,s||null),this._tempPickingRay),t,i,!0);return r&&(r.ray=this.createPickingRay(c,e,x.Identity(),s||null)),r},Object.defineProperty(ne.prototype,"_pickingAvailable",{get:()=>!0,enumerable:!1,configurable:!1}),ne.prototype.pick=function(c,e,t,i,s,r,n=!1){const a=this._internalPick((o,h)=>(this._tempPickingRay||(this._tempPickingRay=_e.Zero()),this.createPickingRayToRef(c,e,o,this._tempPickingRay,s||null,!1,h),this._tempPickingRay),t,i,!1,r);return a&&(a.ray=this.createPickingRay(c,e,x.Identity(),s||null)),a},ne.prototype.pickWithRay=function(c,e,t,i){const s=this._internalPick(r=>(this._pickWithRayInverseMatrix||(this._pickWithRayInverseMatrix=x.Identity()),r.invertToRef(this._pickWithRayInverseMatrix),this._cachedRayForTransform||(this._cachedRayForTransform=_e.Zero()),_e.TransformToRef(c,this._pickWithRayInverseMatrix,this._cachedRayForTransform),this._cachedRayForTransform),e,t,!1,i);return s&&(s.ray=c),s},ne.prototype.multiPick=function(c,e,t,i,s){return this._internalMultiPick(r=>this.createPickingRay(c,e,r,i||null),t,s)},ne.prototype.multiPickWithRay=function(c,e,t){return this._internalMultiPick(i=>(this._pickWithRayInverseMatrix||(this._pickWithRayInverseMatrix=x.Identity()),i.invertToRef(this._pickWithRayInverseMatrix),this._cachedRayForTransform||(this._cachedRayForTransform=_e.Zero()),_e.TransformToRef(c,this._pickWithRayInverseMatrix,this._cachedRayForTransform),this._cachedRayForTransform),e,t)},j.prototype.getForwardRay=function(c=100,e,t){return this.getForwardRayToRef(new _e(p.Zero(),p.Zero(),c),c,e,t)},j.prototype.getForwardRayToRef=function(c,e=100,t,i){return t||(t=this.getWorldMatrix()),c.length=e,i?c.origin.copyFrom(i):c.origin.copyFrom(this.position),D.Vector3[2].set(0,0,this._scene.useRightHandedSystem?-1:1),p.TransformNormalToRef(D.Vector3[2],t,D.Vector3[3]),p.NormalizeToRef(D.Vector3[3],c.direction),c};var yl=function(c,e,t){for(var i in e)if(c.name===e[i])return t.push(c.id),!0;return c.parentId&&t.indexOf(c.parentId)!==-1?(t.push(c.id),!0):!1},ls=function(c,e){return c+" of "+(e?e.file+" from "+e.name+" version: "+e.version+", exporter version: "+e.exporter_version:"unknown")};le.RegisterPlugin({name:"babylon.js",extensions:".json",canDirectLoad:function(c){return c.indexOf("json")!==-1,!0},importMesh:function(c,e,t,i,s,r,n,a){var o="importMesh has failed JSON parse";try{var h=JSON.parse(t);h.physicsEnabled=!1,h==null||h.meshes.map(S=>delete S.physicsImpostor),o="";var l=le.loggingLevel===le.DETAILED_LOGGING;c?Array.isArray(c)||(c=[c]):c=null;var u=new Array;if(h.meshes!==void 0&&h.meshes!==null){var d,f;for(d=0,f=h.meshes.length;d<f;d++){var _=h.meshes[d];if(c===null||yl(_,c,u)){c!==null&&delete c[c.indexOf(_.name)];var E=W.Parse(_,e,i);s.push(E),o+=`
	Mesh `+E.toString(l)}}var m;for(d=0,f=e.meshes.length;d<f;d++)m=e.meshes[d],m._waitingParentId&&(m.parent=e.getLastEntryByID(m._waitingParentId),m._waitingParentId=null),m.computeWorldMatrix(!0)}return!0}catch(S){var v=ls("importMesh",h?h.producer:"Unknown")+o;if(a)a(v,S);else throw O.Log(v),S}finally{o!==null&&le.loggingLevel!==le.NO_LOGGING&&O.Log(ls("importMesh",h?h.producer:"Unknown")+(le.loggingLevel!==le.MINIMAL_LOGGING?o:""))}return!1},load:function(c,e,t,i){var s="importScene has failed JSON parse";try{var r=JSON.parse(e);s="",r.clearColor!==void 0&&r.clearColor!==null&&(c.clearColor=Color4.FromArray(r.clearColor));var n=loadAssetContainer(c,e,t,i,!0);return!!n}catch(o){var a=ls("importScene",r?r.producer:"Unknown")+s;if(i)i(a,o);else throw O.Log(a),o}finally{s!==null&&le.loggingLevel!==le.NO_LOGGING&&O.Log(ls("importScene",r?r.producer:"Unknown")+(le.loggingLevel!==le.MINIMAL_LOGGING?s:""))}return!1},loadAssetContainer:function(c,e,t,i){var s=loadAssetContainer(c,e,t,i);return s}}),W._instancedMeshFactory=(c,e)=>{const t=new Cl(c,e);if(e.instancedBuffers){t.instancedBuffers={};for(const i in e.instancedBuffers)t.instancedBuffers[i]=e.instancedBuffers[i]}return t};class Cl extends ot{constructor(e,t){super(e,t.getScene()),this._indexInSourceMeshInstanceArray=-1,this._distanceToCamera=0,t.addInstance(this),this._sourceMesh=t,this._unIndexed=t._unIndexed,this.position.copyFrom(t.position),this.rotation.copyFrom(t.rotation),this.scaling.copyFrom(t.scaling),t.rotationQuaternion&&(this.rotationQuaternion=t.rotationQuaternion.clone()),this.animations=t.animations.slice();for(const i of t.getAnimationRanges())i!=null&&this.createAnimationRange(i.name,i.from,i.to);this.infiniteDistance=t.infiniteDistance,this.setPivotMatrix(t.getPivotMatrix()),this.refreshBoundingInfo(!0,!0),this._syncSubMeshes()}getClassName(){return"InstancedMesh"}get lightSources(){return this._sourceMesh._lightSources}_resyncLightSources(){}_resyncLightSource(){}_removeLightSource(){}get receiveShadows(){return this._sourceMesh.receiveShadows}get material(){return this._sourceMesh.material}get visibility(){return this._sourceMesh.visibility}get skeleton(){return this._sourceMesh.skeleton}get renderingGroupId(){return this._sourceMesh.renderingGroupId}set renderingGroupId(e){!this._sourceMesh||e===this._sourceMesh.renderingGroupId||O.Warn("Note - setting renderingGroupId of an instanced mesh has no effect on the scene")}getTotalVertices(){return this._sourceMesh?this._sourceMesh.getTotalVertices():0}getTotalIndices(){return this._sourceMesh.getTotalIndices()}get sourceMesh(){return this._sourceMesh}createInstance(e){return this._sourceMesh.createInstance(e)}isReady(e=!1){return this._sourceMesh.isReady(e,!0)}getVerticesData(e,t){return this._sourceMesh.getVerticesData(e,t)}setVerticesData(e,t,i,s){return this.sourceMesh&&this.sourceMesh.setVerticesData(e,t,i,s),this.sourceMesh}updateVerticesData(e,t,i,s){return this.sourceMesh&&this.sourceMesh.updateVerticesData(e,t,i,s),this.sourceMesh}setIndices(e,t=null){return this.sourceMesh&&this.sourceMesh.setIndices(e,t),this.sourceMesh}isVerticesDataPresent(e){return this._sourceMesh.isVerticesDataPresent(e)}getIndices(){return this._sourceMesh.getIndices()}get _positions(){return this._sourceMesh._positions}refreshBoundingInfo(e=!1,t=!1){if(this.hasBoundingInfo&&this.getBoundingInfo().isLocked)return this;const i=this._sourceMesh.geometry?this._sourceMesh.geometry.boundingBias:null;return this._refreshBoundingInfo(this._sourceMesh._getPositionData(e,t),i),this}_preActivate(){return this._currentLOD&&this._currentLOD._preActivate(),this}_activate(e,t){if(super._activate(e,t),this._sourceMesh.subMeshes||O.Warn("Instances should only be created for meshes with geometry."),this._currentLOD){if(this._currentLOD._getWorldMatrixDeterminant()>=0!=this._getWorldMatrixDeterminant()>=0)return this._internalAbstractMeshDataInfo._actAsRegularMesh=!0,!0;if(this._internalAbstractMeshDataInfo._actAsRegularMesh=!1,this._currentLOD._registerInstanceForRenderId(this,e),t){if(!this._currentLOD._internalAbstractMeshDataInfo._isActiveIntermediate)return this._currentLOD._internalAbstractMeshDataInfo._onlyForInstancesIntermediate=!0,!0}else if(!this._currentLOD._internalAbstractMeshDataInfo._isActive)return this._currentLOD._internalAbstractMeshDataInfo._onlyForInstances=!0,!0}return!1}_postActivate(){this._sourceMesh.edgesShareWithInstances&&this._sourceMesh._edgesRenderer&&this._sourceMesh._edgesRenderer.isEnabled&&this._sourceMesh._renderingGroup?(this._sourceMesh._renderingGroup._edgesRenderers.pushNoDuplicate(this._sourceMesh._edgesRenderer),this._sourceMesh._edgesRenderer.customInstances.push(this.getWorldMatrix())):this._edgesRenderer&&this._edgesRenderer.isEnabled&&this._sourceMesh._renderingGroup&&this._sourceMesh._renderingGroup._edgesRenderers.push(this._edgesRenderer)}getWorldMatrix(){if(this._currentLOD&&this._currentLOD.billboardMode!==J.BILLBOARDMODE_NONE&&this._currentLOD._masterMesh!==this){this._billboardWorldMatrix||(this._billboardWorldMatrix=new x);const e=this._currentLOD._masterMesh;return this._currentLOD._masterMesh=this,D.Vector3[7].copyFrom(this._currentLOD.position),this._currentLOD.position.set(0,0,0),this._billboardWorldMatrix.copyFrom(this._currentLOD.computeWorldMatrix(!0)),this._currentLOD.position.copyFrom(D.Vector3[7]),this._currentLOD._masterMesh=e,this._billboardWorldMatrix}return super.getWorldMatrix()}get isAnInstance(){return!0}getLOD(e){if(!e)return this;const t=this.sourceMesh.getLODLevels();if(!t||t.length===0)this._currentLOD=this.sourceMesh;else{const i=this.getBoundingInfo();this._currentLOD=this.sourceMesh.getLOD(e,i.boundingSphere)}return this._currentLOD}_preActivateForIntermediateRendering(e){return this.sourceMesh._preActivateForIntermediateRendering(e)}_syncSubMeshes(){if(this.releaseSubMeshes(),this._sourceMesh.subMeshes)for(let e=0;e<this._sourceMesh.subMeshes.length;e++)this._sourceMesh.subMeshes[e].clone(this,this._sourceMesh);return this}_generatePointsArray(){return this._sourceMesh._generatePointsArray()}_updateBoundingInfo(){return this.hasBoundingInfo?this.getBoundingInfo().update(this.worldMatrixFromCache):this.buildBoundingInfo(this.absolutePosition,this.absolutePosition,this.worldMatrixFromCache),this._updateSubMeshesBoundingInfo(this.worldMatrixFromCache),this}clone(e,t=null,i,s){const r=(s||this._sourceMesh).createInstance(e);if(vs.DeepCopy(this,r,["name","subMeshes","uniqueId","parent","lightSources","receiveShadows","material","visibility","skeleton","sourceMesh","isAnInstance","facetNb","isFacetDataEnabled","isBlocked","useBones","hasInstances","collider","edgesRenderer","forward","up","right","absolutePosition","absoluteScaling","absoluteRotationQuaternion","isWorldMatrixFrozen","nonUniformScaling","behaviors","worldMatrixFromCache","hasThinInstances","hasBoundingInfo"],[]),this.refreshBoundingInfo(),t&&(r.parent=t),!i)for(let n=0;n<this.getScene().meshes.length;n++){const a=this.getScene().meshes[n];a.parent===this&&a.clone(a.name,r)}return r.computeWorldMatrix(!0),this.onClonedObservable.notifyObservers(r),r}dispose(e,t=!1){this._sourceMesh.removeInstance(this),super.dispose(e,t)}_serializeAsParent(e){super._serializeAsParent(e),e.parentId=this._sourceMesh.uniqueId,e.parentInstanceIndex=this._indexInSourceMeshInstanceArray}instantiateHierarchy(e=null,t,i){const s=this.clone("Clone of "+(this.name||this.id),e||this.parent,!0,t&&t.newSourcedMesh);s&&i&&i(this,s);for(const r of this.getChildTransformNodes(!0))r.instantiateHierarchy(s,t,i);return s}}W.prototype.registerInstancedBuffer=function(c,e){var t,i;if((i=(t=this._userInstancedBuffersStorage)===null||t===void 0?void 0:t.vertexBuffers[c])===null||i===void 0||i.dispose(),!this.instancedBuffers){this.instancedBuffers={};for(const s of this.instances)s.instancedBuffers={};this._userInstancedBuffersStorage||(this._userInstancedBuffersStorage={data:{},vertexBuffers:{},strides:{},sizes:{},vertexArrayObjects:this.getEngine().getCaps().vertexArrayObject?{}:void 0})}this.instancedBuffers[c]=null,this._userInstancedBuffersStorage.strides[c]=e,this._userInstancedBuffersStorage.sizes[c]=e*32,this._userInstancedBuffersStorage.data[c]=new Float32Array(this._userInstancedBuffersStorage.sizes[c]),this._userInstancedBuffersStorage.vertexBuffers[c]=new g(this.getEngine(),this._userInstancedBuffersStorage.data[c],c,!0,!1,e,!0);for(const s of this.instances)s.instancedBuffers[c]=null;this._invalidateInstanceVertexArrayObject(),this._markSubMeshesAsAttributesDirty()},W.prototype._processInstancedBuffers=function(c,e){const t=c?c.length:0;for(const i in this.instancedBuffers){let s=this._userInstancedBuffersStorage.sizes[i];const r=this._userInstancedBuffersStorage.strides[i],n=(t+1)*r;for(;s<n;)s*=2;this._userInstancedBuffersStorage.data[i].length!=s&&(this._userInstancedBuffersStorage.data[i]=new Float32Array(s),this._userInstancedBuffersStorage.sizes[i]=s,this._userInstancedBuffersStorage.vertexBuffers[i]&&(this._userInstancedBuffersStorage.vertexBuffers[i].dispose(),this._userInstancedBuffersStorage.vertexBuffers[i]=null));const a=this._userInstancedBuffersStorage.data[i];let o=0;if(e){const h=this.instancedBuffers[i];h.toArray?h.toArray(a,o):h.copyToArray?h.copyToArray(a,o):a[o]=h,o+=r}for(let h=0;h<t;h++){const u=c[h].instancedBuffers[i];u.toArray?u.toArray(a,o):u.copyToArray?u.copyToArray(a,o):a[o]=u,o+=r}this._userInstancedBuffersStorage.vertexBuffers[i]?this._userInstancedBuffersStorage.vertexBuffers[i].updateDirectly(a,0):(this._userInstancedBuffersStorage.vertexBuffers[i]=new g(this.getEngine(),this._userInstancedBuffersStorage.data[i],i,!0,!1,r,!0),this._invalidateInstanceVertexArrayObject())}},W.prototype._invalidateInstanceVertexArrayObject=function(){if(!(!this._userInstancedBuffersStorage||this._userInstancedBuffersStorage.vertexArrayObjects===void 0)){for(const c in this._userInstancedBuffersStorage.vertexArrayObjects)this.getEngine().releaseVertexArrayObject(this._userInstancedBuffersStorage.vertexArrayObjects[c]);this._userInstancedBuffersStorage.vertexArrayObjects={}}},W.prototype._disposeInstanceSpecificData=function(){for(this._instanceDataStorage.instancesBuffer&&(this._instanceDataStorage.instancesBuffer.dispose(),this._instanceDataStorage.instancesBuffer=null);this.instances.length;)this.instances[0].dispose();for(const c in this.instancedBuffers)this._userInstancedBuffersStorage.vertexBuffers[c]&&this._userInstancedBuffersStorage.vertexBuffers[c].dispose();this._invalidateInstanceVertexArrayObject(),this.instancedBuffers={}};const Wr=c=>JSON.parse(JSON.stringify(c)),Il={assetPath:"",enableShadows:!1,groupId:null,id:null,lights:[],rollId:null,scene:null},Xt=class{constructor(e,t){bt(this,"value",0);bt(this,"asleep",!1);this.config={...Il,...e},this.id=this.config.id!==void 0?this.config.id:Date.now(),this.dieType=this.config.sides,this.comboKey=`${this.config.theme}_${this.dieType}`,this.scene=t,this.createInstance()}createInstance(){const e=`${this.config.meshName}_${this.dieType}_${this.config.theme}${this.config.colorSuffix}`,t=`${e}-instance-${this.id}`,i=this.scene.getMeshByName(e).createInstance(t);if(this.config.colorSuffix.length>0){const s=re.FromHexString(this.config.themeColor);i.instancedBuffers.customColor=s}i.position.y=-100,i.scaling=new p(i.scaling.x*this.config.scale,i.scaling.y*this.config.scale,i.scaling.z*this.config.scale),this.config.enableShadows&&this.config.lights.directional.shadowGenerator.addShadowCaster(i),this.mesh=i}static async loadDie(e,t){const{sides:i,theme:s="default",meshName:r,colorSuffix:n}=e,a=r+"_"+i,o=a+"_"+s+n;let h=t.getMeshByName(o);return h||(h=t.getMeshByName(a).clone(o)),h.material||(h.material=t.getMaterialByName(s+n),n.length>0&&h.registerInstancedBuffer("customColor",3)),e}static async loadModels(e,t){const{meshFilePath:i,meshName:s,scale:r,d4FaceDown:n=!0}=e;let a=!1,o=!1;const h=await fetch(`${i}`).then(l=>{if(l.ok){const u=l.headers.get("content-type");if(u&&u.indexOf("application/json")!==-1)return l.json();if(l.type&&l.type==="basic")return l.json();throw new Error(`Incorrect contentType: ${u}. Expected "application/json" or "basic"`)}else throw new Error(`Unable to load 3D mesh file: '${i}'. Request rejected with status ${l.status}: ${l.statusText}`)}).catch(l=>console.error(l));if(h)return le.ImportMeshAsync(null,null,"data:"+JSON.stringify(h),t).then(l=>{if(l.meshes.forEach(u=>{u.name==="__root__"&&u.dispose(),u.name.includes("collider")&&(u.scaling=new p(u.scaling.x*.9,u.scaling.y*.9,u.scaling.z*.9)),a||(a=u.name==="d100"),o||(o=u.name==="d10"),u.setEnabled(!1),u.freezeNormals(),u.freezeWorldMatrix(),u.isPickable=!1,u.doNotSyncBoundingInfo=!0,u.name=s+"_"+u.name}),!a&&o&&(t.getMeshByName(s+"_d10").clone(s+"_d100"),t.getMeshByName(s+"_d10_collider").clone(s+"_d100_collider"),h.colliderFaceMap&&(h.colliderFaceMap.d100=Wr(h.colliderFaceMap.d10),Object.values(h.colliderFaceMap.d100).forEach((u,d)=>{h.colliderFaceMap.d100[d]=u*(u===10?0:10)}))),!h.colliderFaceMap)throw new Error(`'colliderFaceMap' data not found in ${i}. Without the colliderFaceMap data dice values can not be resolved.`);t.themeData[s]={},t.themeData[s].colliderFaceMap=h.colliderFaceMap,t.themeData[s].d4FaceDown=n}).catch(l=>console.error(l)),h.meshes.filter(l=>l.name.includes("collider"))}updateConfig(e){this.config={...this.config,...e}}static setVector3(e,t,i){return Xt.vector3.set(e,t,i)}static getVector3(){return Xt.vector3}static async getRollResult(e,t){const i=(s=e)=>new Promise((r,n)=>{const a=e.config.parentMesh||e.config.meshName,o=t.themeData[a].colliderFaceMap,h=t.themeData[a].d4FaceDown;if(!o[s.dieType])throw new Error(`No colliderFaceMap data for ${s.dieType}`);const l=t.getMeshByName(`${a}_${s.dieType}_collider`).createInstance(`${a}_${s.dieType}-hitbox-${s.id}`);l.isPickable=!0,l.isVisible=!0,l.setEnabled(!0),l.position=s.mesh.position,l.rotationQuaternion=s.mesh.rotationQuaternion;let u=Xt.setVector3(0,1,0);s.dieType==="d4"&&h&&(u=Xt.setVector3(0,-1,0)),Xt.ray.direction=u,Xt.ray.origin=e.mesh.position;const d=t.pickWithRay(Xt.ray);if(l.dispose(),s.value=o[s.dieType][d.faceId],s.value===void 0)throw new Error(`colliderFaceMap Error: No value found for ${s.dieType} mesh face ${d.faceId}`);return r(s.value)}).catch(r=>console.error(r));return e.mesh?await i():e.value}};let Pt=Xt;bt(Pt,"ray",new _e(p.Zero(),p.Zero(),1)),bt(Pt,"vector3",p.Zero());class Pl{constructor(){}}class ii extends B{constructor(e,t){super(e,t),this.CustomParts=new Pl,this.customShaderNameResolve=this.Builder,this.FragmentShader=Pe.ShadersStore.defaultPixelShader,this.VertexShader=Pe.ShadersStore.defaultVertexShader}AttachAfterBind(e,t){if(this._newUniformInstances)for(const i in this._newUniformInstances){const s=i.toString().split("-");s[0]=="vec2"?t.setVector2(s[1],this._newUniformInstances[i]):s[0]=="vec3"?t.setVector3(s[1],this._newUniformInstances[i]):s[0]=="vec4"?t.setVector4(s[1],this._newUniformInstances[i]):s[0]=="mat4"?t.setMatrix(s[1],this._newUniformInstances[i]):s[0]=="float"&&t.setFloat(s[1],this._newUniformInstances[i])}if(this._newSamplerInstances)for(const i in this._newSamplerInstances){const s=i.toString().split("-");s[0]=="sampler2D"&&this._newSamplerInstances[i].isReady&&this._newSamplerInstances[i].isReady()&&t.setTexture(s[1],this._newSamplerInstances[i])}}ReviewUniform(e,t){if(e=="uniform"&&this._newUniforms)for(let i=0;i<this._newUniforms.length;i++)this._customUniform[i].indexOf("sampler")==-1&&t.push(this._newUniforms[i]);if(e=="sampler"&&this._newUniforms)for(let i=0;i<this._newUniforms.length;i++)this._customUniform[i].indexOf("sampler")!=-1&&t.push(this._newUniforms[i]);return t}Builder(e,t,i,s,r,n){if(n&&this._customAttributes&&this._customAttributes.length>0&&n.push(...this._customAttributes),this.ReviewUniform("uniform",t),this.ReviewUniform("sampler",s),this._isCreatedShader)return this._createdShaderName;this._isCreatedShader=!1,ii.ShaderIndexer++;const a="custom_"+ii.ShaderIndexer,o=this._afterBind.bind(this);return this._afterBind=(h,l)=>{if(l){this.AttachAfterBind(h,l);try{o(h,l)}catch{}}},Pe.ShadersStore[a+"VertexShader"]=this.VertexShader.replace("#define CUSTOM_VERTEX_BEGIN",this.CustomParts.Vertex_Begin?this.CustomParts.Vertex_Begin:"").replace("#define CUSTOM_VERTEX_DEFINITIONS",(this._customUniform?this._customUniform.join(`
`):"")+(this.CustomParts.Vertex_Definitions?this.CustomParts.Vertex_Definitions:"")).replace("#define CUSTOM_VERTEX_MAIN_BEGIN",this.CustomParts.Vertex_MainBegin?this.CustomParts.Vertex_MainBegin:"").replace("#define CUSTOM_VERTEX_UPDATE_POSITION",this.CustomParts.Vertex_Before_PositionUpdated?this.CustomParts.Vertex_Before_PositionUpdated:"").replace("#define CUSTOM_VERTEX_UPDATE_NORMAL",this.CustomParts.Vertex_Before_NormalUpdated?this.CustomParts.Vertex_Before_NormalUpdated:"").replace("#define CUSTOM_VERTEX_MAIN_END",this.CustomParts.Vertex_MainEnd?this.CustomParts.Vertex_MainEnd:""),this.CustomParts.Vertex_After_WorldPosComputed&&(Pe.ShadersStore[a+"VertexShader"]=Pe.ShadersStore[a+"VertexShader"].replace("#define CUSTOM_VERTEX_UPDATE_WORLDPOS",this.CustomParts.Vertex_After_WorldPosComputed)),Pe.ShadersStore[a+"PixelShader"]=this.FragmentShader.replace("#define CUSTOM_FRAGMENT_BEGIN",this.CustomParts.Fragment_Begin?this.CustomParts.Fragment_Begin:"").replace("#define CUSTOM_FRAGMENT_MAIN_BEGIN",this.CustomParts.Fragment_MainBegin?this.CustomParts.Fragment_MainBegin:"").replace("#define CUSTOM_FRAGMENT_DEFINITIONS",(this._customUniform?this._customUniform.join(`
`):"")+(this.CustomParts.Fragment_Definitions?this.CustomParts.Fragment_Definitions:"")).replace("#define CUSTOM_FRAGMENT_UPDATE_DIFFUSE",this.CustomParts.Fragment_Custom_Diffuse?this.CustomParts.Fragment_Custom_Diffuse:"").replace("#define CUSTOM_FRAGMENT_UPDATE_ALPHA",this.CustomParts.Fragment_Custom_Alpha?this.CustomParts.Fragment_Custom_Alpha:"").replace("#define CUSTOM_FRAGMENT_BEFORE_LIGHTS",this.CustomParts.Fragment_Before_Lights?this.CustomParts.Fragment_Before_Lights:"").replace("#define CUSTOM_FRAGMENT_BEFORE_FRAGCOLOR",this.CustomParts.Fragment_Before_FragColor?this.CustomParts.Fragment_Before_FragColor:"").replace("#define CUSTOM_FRAGMENT_MAIN_END",this.CustomParts.Fragment_MainEnd?this.CustomParts.Fragment_MainEnd:""),this.CustomParts.Fragment_Before_Fog&&(Pe.ShadersStore[a+"PixelShader"]=Pe.ShadersStore[a+"PixelShader"].replace("#define CUSTOM_FRAGMENT_BEFORE_FOG",this.CustomParts.Fragment_Before_Fog)),this._isCreatedShader=!0,this._createdShaderName=a,a}AddUniform(e,t,i){return this._customUniform||(this._customUniform=new Array,this._newUniforms=new Array,this._newSamplerInstances={},this._newUniformInstances={}),i&&(t.indexOf("sampler")!=-1?this._newSamplerInstances[t+"-"+e]=i:this._newUniformInstances[t+"-"+e]=i),this._customUniform.push("uniform "+t+" "+e+";"),this._newUniforms.push(e),this}AddAttribute(e){return this._customAttributes||(this._customAttributes=[]),this._customAttributes.push(e),this}Fragment_Begin(e){return this.CustomParts.Fragment_Begin=e,this}Fragment_Definitions(e){return this.CustomParts.Fragment_Definitions=e,this}Fragment_MainBegin(e){return this.CustomParts.Fragment_MainBegin=e,this}Fragment_MainEnd(e){return this.CustomParts.Fragment_MainEnd=e,this}Fragment_Custom_Diffuse(e){return this.CustomParts.Fragment_Custom_Diffuse=e.replace("result","diffuseColor"),this}Fragment_Custom_Alpha(e){return this.CustomParts.Fragment_Custom_Alpha=e.replace("result","alpha"),this}Fragment_Before_Lights(e){return this.CustomParts.Fragment_Before_Lights=e,this}Fragment_Before_Fog(e){return this.CustomParts.Fragment_Before_Fog=e,this}Fragment_Before_FragColor(e){return this.CustomParts.Fragment_Before_FragColor=e.replace("result","color"),this}Vertex_Begin(e){return this.CustomParts.Vertex_Begin=e,this}Vertex_Definitions(e){return this.CustomParts.Vertex_Definitions=e,this}Vertex_MainBegin(e){return this.CustomParts.Vertex_MainBegin=e,this}Vertex_Before_PositionUpdated(e){return this.CustomParts.Vertex_Before_PositionUpdated=e.replace("result","positionUpdated"),this}Vertex_Before_NormalUpdated(e){return this.CustomParts.Vertex_Before_NormalUpdated=e.replace("result","normalUpdated"),this}Vertex_After_WorldPosComputed(e){return this.CustomParts.Vertex_After_WorldPosComputed=e,this}Vertex_MainEnd(e){return this.CustomParts.Vertex_MainEnd=e,this}}ii.ShaderIndexer=1,it("BABYLON.CustomMaterial",ii),ii.prototype.clone=function(c){const e=this,t=ae.Clone(()=>new ii(c,this.getScene()),this);return t.name=c,t.id=c,t.CustomParts.Fragment_Begin=e.CustomParts.Fragment_Begin,t.CustomParts.Fragment_Definitions=e.CustomParts.Fragment_Definitions,t.CustomParts.Fragment_MainBegin=e.CustomParts.Fragment_MainBegin,t.CustomParts.Fragment_Custom_Diffuse=e.CustomParts.Fragment_Custom_Diffuse,t.CustomParts.Fragment_Before_Lights=e.CustomParts.Fragment_Before_Lights,t.CustomParts.Fragment_Before_Fog=e.CustomParts.Fragment_Before_Fog,t.CustomParts.Fragment_Custom_Alpha=e.CustomParts.Fragment_Custom_Alpha,t.CustomParts.Fragment_Before_FragColor=e.CustomParts.Fragment_Before_FragColor,t.CustomParts.Vertex_Begin=e.CustomParts.Vertex_Begin,t.CustomParts.Vertex_Definitions=e.CustomParts.Vertex_Definitions,t.CustomParts.Vertex_MainBegin=e.CustomParts.Vertex_MainBegin,t.CustomParts.Vertex_Before_PositionUpdated=e.CustomParts.Vertex_Before_PositionUpdated,t.CustomParts.Vertex_Before_NormalUpdated=e.CustomParts.Vertex_Before_NormalUpdated,t.CustomParts.Vertex_After_WorldPosComputed=e.CustomParts.Vertex_After_WorldPosComputed,t.CustomParts.Vertex_MainEnd=e.CustomParts.Vertex_MainEnd,t};class Dl{constructor(e){bt(this,"loadedThemes",{});bt(this,"themeData",{});this.scene=e.scene}async loadStandardMaterial(e){const{theme:t,material:i}=e,s=new B(t,this.scene);i.diffuseTexture&&(s.diffuseTexture=await this.getTexture("diffuse",e)),i.bumpTexture&&(s.bumpTexture=await this.getTexture("bump",e)),i.specularTexture&&(s.specularTexture=await this.getTexture("specular",e)),s.allowShaderHotSwapping=!1}async loadColorMaterial(e){const{theme:t,material:i}=e,s=new ii(t+"_light",this.scene),r=Wr(e);i.diffuseTexture&&i.diffuseTexture.light&&(r.material.diffuseTexture=e.material.diffuseTexture.light,s.diffuseTexture=await this.getTexture("diffuse",r)),i.bumpTexture&&(s.bumpTexture=await this.getTexture("bump",e)),i.specularTexture&&(s.specularTexture=await this.getTexture("specular",e)),s.allowShaderHotSwapping=!1,s.Vertex_Definitions(`
      attribute vec3 customColor;
      varying vec3 vColor;
    `).Vertex_MainEnd(`
      vColor = customColor;
    `).Fragment_Definitions(`
      varying vec3 vColor;
    `).Fragment_Custom_Diffuse(`
      baseColor.rgb = mix(vColor.rgb, baseColor.rgb, baseColor.a);
    `),s.AddAttribute("customColor");const n=s.clone(t+"_dark");i.diffuseTexture&&i.diffuseTexture.dark&&(r.material.diffuseTexture=e.material.diffuseTexture.dark,n.diffuseTexture=await this.getTexture("diffuse",r)),n.AddAttribute("customColor")}async getTexture(e,t){const{basePath:i,material:s,theme:r}=t;let n;const a=e+"Level",o=e+"Texture";try{switch(e){case"diffuse":n=await this.importTextureAsync(`${i}/${s[o]}`,r),s[a]&&(n.level=s[a]);break;case"bump":n=await this.importTextureAsync(`${i}/${s[o]}`,r),s[a]&&(n.level=s[a]);break;case"specular":n=await this.importTextureAsync(`${i}/${s[o]}`,r),s.specularPower&&(n.specularPower=s.specularPower);break;default:throw new Error(`Texture type: ${e} is not supported`)}}catch(h){console.error(h)}return n}async importTextureAsync(e,t){return new Promise((i,s)=>{let r=e.match(/^(.*\/)(.*)$/),n=new N(e,this.scene,void 0,!0,void 0,()=>i(n),()=>s(`Unable to load texture '${r[2]}' for theme: '${t}'. Check that your assetPath is configured correctly and that the files exist at path: '${r[1]}'`))}).catch(i=>console.error(i))}async load(e){const{material:t}=e;t.type==="color"?await this.loadColorMaterial(e):t.type==="standard"?await this.loadStandardMaterial(e):console.error(`Material type: ${t.type} not supported`)}}class Fl{constructor(e){nt(this,us);bt(this,"config");bt(this,"initialized",!1);nt(this,Xe,{});nt(this,Ai,0);nt(this,Ft,0);nt(this,Ri,[]);nt(this,Mt,void 0);nt(this,Tt,void 0);nt(this,Je,void 0);nt(this,cs,void 0);nt(this,At,void 0);nt(this,Vi,void 0);nt(this,Wi,void 0);nt(this,gt,void 0);nt(this,zi,{});bt(this,"noop",()=>{});bt(this,"diceBufferView",new Float32Array(8e3));this.onInitComplete=e.onInitComplete||this.noop,this.onThemeLoaded=e.onThemeLoaded||this.noop,this.onRollResult=e.onRollResult||this.noop,this.onRollComplete=e.onRollComplete||this.noop,this.onDieRemoved=e.onDieRemoved||this.noop,this.initialized=this.initScene(e)}async initScene(e){lt(this,Mt,e.canvas),Y(this,Mt).width=e.width,Y(this,Mt).height=e.height,this.config=e.options,lt(this,Tt,gn(Y(this,Mt))),lt(this,Je,Kn({engine:Y(this,Tt)})),lt(this,cs,Yn({engine:Y(this,Tt),scene:Y(this,Je)})),lt(this,At,Br({enableShadows:this.config.enableShadows,shadowTransparency:this.config.shadowTransparency,intensity:this.config.lightIntensity,scene:Y(this,Je)})),lt(this,Vi,new Rl({enableShadows:this.config.enableShadows,aspect:Y(this,Mt).width/Y(this,Mt).height,lights:Y(this,At),scene:Y(this,Je)})),lt(this,Wi,new Dl({scene:Y(this,Je)})),this.onInitComplete()}connect(e){lt(this,gt,e),Y(this,gt).postMessage({action:"initBuffer",diceBuffer:this.diceBufferView.buffer},[this.diceBufferView.buffer]),Y(this,gt).onmessage=t=>{switch(t.data.action){case"updates":this.updatesFromPhysics(t.data.diceBuffer);break;default:console.error("action from physicsWorker not found in offscreen worker");break}}}updateConfig(e){const t=this.config;this.config=e,t.enableShadows!==this.config.enableShadows&&(Object.values(Y(this,At)).forEach(i=>i.dispose()),lt(this,At,Br({enableShadows:this.config.enableShadows}))),t.scale!==this.config.scale&&Object.values(Y(this,Xe)).forEach(({mesh:i})=>{i&&(i.scaling=new p(this.config.scale,this.config.scale,this.config.scale))}),t.shadowTransparency!==this.config.shadowTransparency&&(Y(this,At).directional.shadowGenerator.darkness=this.config.shadowTransparency),t.lightIntensity!==this.config.lightIntensity&&(Y(this,At).directional.intensity=.65*this.config.lightIntensity,Y(this,At).hemispheric.intensity=.4*this.config.lightIntensity)}render(e){Y(this,Tt).runRenderLoop(this.renderLoop.bind(this)),Y(this,gt).postMessage({action:"resumeSimulation",newStartPoint:e})}renderLoop(){Y(this,Ft)&&Y(this,Ft)===Object.keys(Y(this,Xe)).length?(Y(this,Tt).stopRenderLoop(),Y(this,gt).postMessage({action:"stopSimulation"}),this.onRollComplete()):Y(this,Je).render()}async loadTheme(e){const{theme:t,basePath:i,material:s,meshFilePath:r,meshName:n}=e;if(await Y(this,Wi).load({theme:t,basePath:i,material:s}),!Object.keys(Y(this,zi)).includes(n)){Y(this,zi)[n]=r;const a=await Pt.loadModels({meshFilePath:r,meshName:n},Y(this,Je));if(!a)throw new Error("No colliders returned from the 3D mesh file. Low poly colliders are expected to be in the same file as the high poly dice and the mesh name contains the word 'collider'");Y(this,gt).postMessage({action:"loadModels",options:{colliders:a,meshName:n}})}this.onThemeLoaded({id:t})}clear(){!Object.keys(Y(this,Xe)).length&&!Y(this,Ft)||(this.diceBufferView.byteLength&&this.diceBufferView.fill(0),Y(this,Ri).forEach(e=>clearTimeout(e)),Y(this,Tt).stopRenderLoop(),Object.values(Y(this,Xe)).forEach(e=>{e.mesh&&e.mesh.dispose()}),lt(this,Xe,{}),lt(this,Ai,0),lt(this,Ft,0),Y(this,Je).render())}add(e){Pt.loadDie(e,Y(this,Je)).then(t=>{Y(this,Ri).push(setTimeout(()=>{zr(this,us,Gr).call(this,t)},yi(this,Ai)._++*this.config.delay))})}addNonDie(e){Y(this,Tt).activeRenderLoops.length===0&&this.render(!1);const{id:t,value:i,...s}=e,r={id:t,value:i,config:s};Y(this,Xe)[t]=r,setTimeout(()=>{Y(this,Ri).push(setTimeout(()=>{this.handleAsleep(r)},yi(this,Ai)._++*this.config.delay))},10)}remove(e){const t=Y(this,Xe)[e.id];t.hasOwnProperty("d10Instance")&&(Y(this,Xe)[t.d10Instance.id].mesh&&(Y(this,Xe)[t.d10Instance.id].mesh.dispose(),Y(this,gt).postMessage({action:"removeDie",id:t.d10Instance.id})),delete Y(this,Xe)[t.d10Instance.id],yi(this,Ft)._--),Y(this,Xe)[e.id].mesh&&Y(this,Xe)[e.id].mesh.dispose(),delete Y(this,Xe)[e.id],yi(this,Ft)._--,Y(this,Je).render(),this.onDieRemoved(e.rollId)}updatesFromPhysics(e){this.diceBufferView=new Float32Array(e);let t=1;for(let i=0,s=this.diceBufferView[0];i<s;i++){if(!Object.keys(Y(this,Xe)).length)continue;const r=Y(this,Xe)[`${this.diceBufferView[t]}`];if(!r){console.log("Error: die not available in scene to animate");break}if(this.diceBufferView[t+1]===-1)this.handleAsleep(r);else{const n=this.diceBufferView[t+1],a=this.diceBufferView[t+2],o=this.diceBufferView[t+3],h=this.diceBufferView[t+4],l=this.diceBufferView[t+5],u=this.diceBufferView[t+6],d=this.diceBufferView[t+7];r.mesh.position.set(n,a,o),r.mesh.rotationQuaternion.set(h,l,u,d)}t=t+8}requestAnimationFrame(()=>{Y(this,gt).postMessage({action:"stepSimulation",diceBuffer:this.diceBufferView.buffer},[this.diceBufferView.buffer])})}async handleAsleep(e){var t,i;if(e.asleep=!0,await Pt.getRollResult(e,Y(this,Je)),e.d10Instance||e.dieParent){if((t=e==null?void 0:e.d10Instance)!=null&&t.asleep||(i=e==null?void 0:e.dieParent)!=null&&i.asleep){const s=e.config.sides===100?e:e.dieParent,r=e.config.sides===10?e:e.d10Instance;r.value===0&&s.value===0?s.value=100:s.value=s.value+r.value,this.onRollResult({rollId:s.config.rollId,value:s.value})}}else e.config.sides===10&&e.value===0&&(e.value=10),this.onRollResult({rollId:e.config.rollId,value:e.value});yi(this,Ft)._++}resize(e){const t=Y(this,Mt).width=e.width,i=Y(this,Mt).height=e.height;Y(this,Vi).create({aspect:t/i}),Y(this,Tt).resize()}}Xe=new WeakMap,Ai=new WeakMap,Ft=new WeakMap,Ri=new WeakMap,Mt=new WeakMap,Tt=new WeakMap,Je=new WeakMap,cs=new WeakMap,At=new WeakMap,Vi=new WeakMap,Wi=new WeakMap,gt=new WeakMap,zi=new WeakMap,us=new WeakSet,Gr=async function(e){Y(this,Tt).activeRenderLoops.length===0&&this.render(e.newStartPoint);const t={...e,assetPath:this.config.assetPath,enableShadows:this.config.enableShadows,scale:this.config.scale,lights:Y(this,At)},i=new Pt(t,Y(this,Je));return Y(this,Xe)[i.id]=i,Y(this,gt).postMessage({action:"addDie",options:{sides:e.sides,scale:this.config.scale,id:i.id,newStartPoint:e.newStartPoint,theme:e.theme,meshName:e.meshName}}),e.sides===100&&(i.d10Instance=await Pt.loadDie({...t,sides:10,id:i.id+1e4},Y(this,Je)).then(s=>{const r=new Pt(s,Y(this,Je));return r.dieParent=i,r}),Y(this,Xe)[`${i.d10Instance.id}`]=i.d10Instance,Y(this,gt).postMessage({action:"addDie",options:{sides:10,scale:this.config.scale,id:i.d10Instance.id,theme:e.theme,meshName:e.meshName}})),i};let Dt;self.onmessage=async c=>{switch(c.data.action){case"rollDie":Dt.physicsWorkerPort.postMessage({action:"roll"});break;case"addDie":Dt.add(c.data.options);break;case"addNonDie":Dt.addNonDie(c.data.options);break;case"loadTheme":await Dt.loadTheme(c.data.options).catch(e=>console.error(e));break;case"clearDice":Dt.clear();break;case"removeDie":Dt.remove(c.data.options);break;case"resize":Dt.resize(c.data.options);break;case"init":Dt=new Fl({...c.data,onInitComplete:()=>{self.postMessage({action:"init-complete"})},onThemeLoaded:({id:e})=>{self.postMessage({action:"theme-loaded",id:e})},onRollResult:({rollId:e,value:t})=>{self.postMessage({action:"roll-result",die:{rollId:e,value:t}})},onRollComplete:()=>{self.postMessage({action:"roll-complete"})},onDieRemoved:e=>{self.postMessage({action:"die-removed",rollId:e})}});break;case"updateConfig":Dt.updateConfig(c.data.options);break;case"connect":Dt.connect(c.data.port),self.postMessage({action:"connect-complete"});break;default:console.error("action not found in offscreen worker")}}})();
",R=typeof window<"u"&&window.Blob&&new Blob([atob(W)],{type:"text/javascript;charset=utf-8"});function h(){const l=R&&(window.URL||window.webkitURL).createObjectURL(R);try{return l?new Worker(l):new Worker("data:application/javascript;base64,"+W)}finally{l&&(window.URL||window.webkitURL).revokeObjectURL(l)}}var a,y,p,Y;class u{constructor(l){c(this,p),V(this,"initialized",!1),V(this,"offscreenWorkerInit",!1),V(this,"themeLoadedInit",!1),V(this,"pendingThemePromises",{}),c(this,a,void 0),c(this,y,void 0),V(this,"onRollResult",(()=>{})),V(this,"onRollComplete",(()=>{})),this.onInitComplete=l.onInitComplete,m(this,a,l.canvas.transferControlToOffscreen()),m(this,y,new h),b(this,y).init=new Promise(((l,Z)=>{this.offscreenWorkerInit=l})),this.initialized=((l,Z,X)=>(d(this,Z,"access private method"),X))(0,p,Y).call(this,l)}connect(l){b(this,y).postMessage({action:"connect",port:l},[l])}updateConfig(l){b(this,y).postMessage({action:"updateConfig",options:l})}resize(l){b(this,y).postMessage({action:"resize",options:l})}async loadTheme(l){return new Promise(((Z,X)=>{if(Object.keys(this.pendingThemePromises).includes(l.theme))return Z();this.pendingThemePromises[l.theme]=Z,b(this,y).postMessage({action:"loadTheme",options:l})})).catch((l=>console.error(l)))}clear(){b(this,y).postMessage({action:"clearDice"})}add(l){b(this,y).postMessage({action:"addDie",options:l})}addNonDie(l){b(this,y).postMessage({action:"addNonDie",options:l})}remove(l){b(this,y).postMessage({action:"removeDie",options:l})}}a=new WeakMap,y=new WeakMap,p=new WeakSet,Y=async function(l){return b(this,y).postMessage({action:"init",canvas:b(this,a),width:l.canvas.clientWidth,height:l.canvas.clientHeight,options:l.options},[b(this,a)]),b(this,y).onmessage=l=>{switch(l.data.action){case"init-complete":this.offscreenWorkerInit();break;case"connect-complete":break;case"theme-loaded":l.data.id&&this.pendingThemePromises[l.data.id](l.data.id);break;case"roll-result":this.onRollResult(l.data.die);break;case"roll-complete":this.onRollComplete();break;case"die-removed":this.onDieRemoved(l.data.rollId)}},await b(this,y).init,this.onInitComplete(!0),!0}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"file":"518.index.js","mappings":"gHAAA,IAAIA,EAAIC,OAAOC,eAEXC,EAAI,CAACC,EAAGC,EAAGC,KADP,EAACF,EAAGC,EAAGC,KAAMD,KAAKD,EAAIJ,EAAEI,EAAGC,EAAG,CAAEE,YAAY,EAAIC,cAAc,EAAIC,UAAU,EAAIC,MAAOJ,IAAOF,EAAEC,GAAKC,CAAC,EACxFK,CAAEP,EAAe,iBAALC,EAAgBA,EAAI,GAAKA,EAAGC,GAAIA,GAAIM,EAAI,CAACR,EAAGC,EAAGC,KAC/E,IAAKD,EAAEQ,IAAIT,GACT,MAAMU,UAAU,UAAYR,EAAE,EAE9BS,EAAI,CAACX,EAAGC,EAAGC,KAAOM,EAAER,EAAGC,EAAG,2BAA4BC,EAAIA,EAAEU,KAAKZ,GAAKC,EAAEY,IAAIb,IAAKc,EAAI,CAACd,EAAGC,EAAGC,KAC9F,GAAID,EAAEQ,IAAIT,GACR,MAAMU,UAAU,qDAClBT,aAAac,QAAUd,EAAEe,IAAIhB,GAAKC,EAAEgB,IAAIjB,EAAGE,EAAE,EAC5CgB,EAAI,CAAClB,EAAGC,EAAGC,EAAGiB,KAAOX,EAAER,EAAGC,EAAG,0BAA2BkB,EAAIA,EAAEP,KAAKZ,EAAGE,GAAKD,EAAEgB,IAAIjB,EAAGE,GAAIA,GAE3F,MAAMkB,EAAI,2qy2CAA4qy2CC,SAAWC,OAAS,KAAOA,OAAOC,MAAQ,IAAIA,KAAK,CAACC,KAAKJ,IAAK,CAAEK,KAAM,kCAC5vy2C,SAASC,IACP,MAAM1B,EAAIqB,IAAMC,OAAOK,KAAOL,OAAOM,WAAWC,gBAAgBR,GAChE,IACE,OAAOrB,EAAI,IAAI8B,OAAO9B,GAAK,IAAI8B,OAAO,sCAAwCV,EAChF,CAAE,QACApB,IAAMsB,OAAOK,KAAOL,OAAOM,WAAWG,gBAAgB/B,EACxD,CACF,CACA,IAAIgC,EAAGC,EAAGC,EAAGC,EACb,MAAMC,EAEJC,YAAYpC,GAEVa,EAAEwB,KAAMJ,GACRnC,EAAEuC,KAAM,eAAe,GACvBvC,EAAEuC,KAAM,uBAAuB,GAC/BvC,EAAEuC,KAAM,mBAAmB,GAC3BvC,EAAEuC,KAAM,uBAAwB,CAAC,GACjCxB,EAAEwB,KAAMN,OAAG,GACXlB,EAAEwB,KAAML,OAAG,GAEXlC,EAAEuC,KAAM,gBAAgB,SAGxBvC,EAAEuC,KAAM,kBAAkB,SAE1BA,KAAKC,eAAiBtC,EAAEsC,eAAgBrB,EAAEoB,KAAMN,EAAG/B,EAAEuC,OAAOC,8BAA+BvB,EAAEoB,KAAML,EAAG,IAAIP,GAAMf,EAAE2B,KAAML,GAAGS,KAAO,IAAIC,SAAQ,CAACzC,EAAGiB,KAChJmB,KAAKM,oBAAsB1C,CAAC,IAC1BoC,KAAKO,YA9BL,EAAC7C,EAAGC,EAAGC,KAAOM,EA8BO8B,KA9BFrC,EAAG,yBAA0BC,GA8B7B4C,CAAER,EAAMJ,EAAGC,GAAGvB,KAAK0B,KAAMrC,EAClD,CACA8C,QAAQ9C,GACNU,EAAE2B,KAAML,GAAGe,YAAY,CACrBC,OAAQ,UACRC,KAAMjD,GACL,CAACA,GACN,CACAkD,aAAalD,GACXU,EAAE2B,KAAML,GAAGe,YAAY,CAAEC,OAAQ,eAAgBG,QAASnD,GAC5D,CACAoD,OAAOpD,GACLU,EAAE2B,KAAML,GAAGe,YAAY,CAAEC,OAAQ,SAAUG,QAASnD,GACtD,CACAqD,gBAAgBrD,GACd,OAAO,IAAI0C,SAAQ,CAACzC,EAAGiB,KACrB,GAAItB,OAAO0D,KAAKjB,KAAKkB,sBAAsBC,SAASxD,EAAEyD,OACpD,OAAOxD,IACToC,KAAKkB,qBAAqBvD,EAAEyD,OAASxD,EAAGS,EAAE2B,KAAML,GAAGe,YAAY,CAAEC,OAAQ,YAAaG,QAASnD,GAAI,IAClG0D,OAAOzD,GAAM0D,QAAQC,MAAM3D,IAChC,CACA4D,QACEnD,EAAE2B,KAAML,GAAGe,YAAY,CAAEC,OAAQ,aACnC,CACAjC,IAAIf,GACFU,EAAE2B,KAAML,GAAGe,YAAY,CAAEC,OAAQ,SAAUG,QAASnD,GACtD,CACA8D,UAAU9D,GACRU,EAAE2B,KAAML,GAAGe,YAAY,CAAEC,OAAQ,YAAaG,QAASnD,GACzD,CACA+D,OAAO/D,GACLU,EAAE2B,KAAML,GAAGe,YAAY,CAAEC,OAAQ,YAAaG,QAASnD,GACzD,EAEF+B,EAAI,IAAIiC,QAAWhC,EAAI,IAAIgC,QAAW/B,EAAI,IAAInB,QAAWoB,EAAImB,eAAerD,GAC1E,OAAOU,EAAE2B,KAAML,GAAGe,YAAY,CAC5BC,OAAQ,OACRT,OAAQ7B,EAAE2B,KAAMN,GAChBkC,MAAOjE,EAAEuC,OAAO2B,YAChBC,OAAQnE,EAAEuC,OAAO6B,aACjBjB,QAASnD,EAAEmD,SACV,CAACzC,EAAE2B,KAAMN,KAAMrB,EAAE2B,KAAML,GAAGqC,UAAapE,IACxC,OAAQA,EAAEqE,KAAKtB,QACb,IAAK,gBACHX,KAAKM,sBACL,MACF,IAAK,mBACH,MACF,IAAK,eACH1C,EAAEqE,KAAKC,IAAMlC,KAAKkB,qBAAqBtD,EAAEqE,KAAKC,IAAItE,EAAEqE,KAAKC,IACzD,MACF,IAAK,cACHlC,KAAKmC,aAAavE,EAAEqE,KAAKG,KACzB,MACF,IAAK,gBACHpC,KAAKqC,iBACL,MACF,IAAK,cACHrC,KAAKsC,aAAa1E,EAAEqE,KAAKM,QAE7B,QACOlE,EAAE2B,KAAML,GAAGS,KAAMJ,KAAKC,gBAAe,IAAK,CACrD,C","sources":["webpack:///./node_modules/@3d-dice/dice-box/dist/world.offscreen.js"],"sourcesContent":["var u = Object.defineProperty;\nvar J = (X, l, Z) => l in X ? u(X, l, { enumerable: !0, configurable: !0, writable: !0, value: Z }) : X[l] = Z;\nvar d = (X, l, Z) => (J(X, typeof l != \"symbol\" ? l + \"\" : l, Z), Z), R = (X, l, Z) => {\n  if (!l.has(X))\n    throw TypeError(\"Cannot \" + Z);\n};\nvar V = (X, l, Z) => (R(X, l, \"read from private field\"), Z ? Z.call(X) : l.get(X)), m = (X, l, Z) => {\n  if (l.has(X))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  l instanceof WeakSet ? l.add(X) : l.set(X, Z);\n}, h = (X, l, Z, c) => (R(X, l, \"write to private field\"), c ? c.call(X, Z) : l.set(X, Z), Z);\nvar a = (X, l, Z) => (R(X, l, \"access private method\"), Z);\nconst p = \"dmFyIExsPU9iamVjdC5kZWZpbmVQcm9wZXJ0eTt2YXIgTmw9KFgsU2UseWUpPT5TZSBpbiBYP0xsKFgsU2Use2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnllfSk6WFtTZV09eWU7dmFyIGJ0PShYLFNlLHllKT0+KE5sKFgsdHlwZW9mIFNlIT0ic3ltYm9sIj9TZSsiIjpTZSx5ZSkseWUpLGpzPShYLFNlLHllKT0+e2lmKCFTZS5oYXMoWCkpdGhyb3cgVHlwZUVycm9yKCJDYW5ub3QgIit5ZSl9O3ZhciBZPShYLFNlLHllKT0+KGpzKFgsU2UsInJlYWQgZnJvbSBwcml2YXRlIGZpZWxkIikseWU/eWUuY2FsbChYKTpTZS5nZXQoWCkpLG50PShYLFNlLHllKT0+e2lmKFNlLmhhcyhYKSl0aHJvdyBUeXBlRXJyb3IoIkNhbm5vdCBhZGQgdGhlIHNhbWUgcHJpdmF0ZSBtZW1iZXIgbW9yZSB0aGFuIG9uY2UiKTtTZSBpbnN0YW5jZW9mIFdlYWtTZXQ/U2UuYWRkKFgpOlNlLnNldChYLHllKX0sbHQ9KFgsU2UseWUseGUpPT4oanMoWCxTZSwid3JpdGUgdG8gcHJpdmF0ZSBmaWVsZCIpLHhlP3hlLmNhbGwoWCx5ZSk6U2Uuc2V0KFgseWUpLHllKSx5aT0oWCxTZSx5ZSx4ZSk9Pih7c2V0IF8oQmUpe2x0KFgsU2UsQmUseWUpfSxnZXQgXygpe3JldHVybiBZKFgsU2UseGUpfX0pLHpyPShYLFNlLHllKT0+KGpzKFgsU2UsImFjY2VzcyBwcml2YXRlIG1ldGhvZCIpLHllKTsoZnVuY3Rpb24oKXt2YXIgWGUsQWksRnQsUmksTXQsVHQsSmUsY3MsQXQsVmksV2ksZ3QsemksdXMsR3I7InVzZSBzdHJpY3QiO2NsYXNzIFh7c3RhdGljIFdpdGhpbkVwc2lsb24oZSx0LGk9MTQwMTI5OGUtNTEpe3JldHVybiBNYXRoLmFicyhlLXQpPD1pfXN0YXRpYyBUb0hleChlKXtjb25zdCB0PWUudG9TdHJpbmcoMTYpO3JldHVybiBlPD0xNT8oIjAiK3QpLnRvVXBwZXJDYXNlKCk6dC50b1VwcGVyQ2FzZSgpfXN0YXRpYyBTaWduKGUpe3JldHVybiBlPStlLGU9PT0wfHxpc05hTihlKT9lOmU+MD8xOi0xfXN0YXRpYyBDbGFtcChlLHQ9MCxpPTEpe3JldHVybiBNYXRoLm1pbihpLE1hdGgubWF4KHQsZSkpfXN0YXRpYyBMb2cyKGUpe3JldHVybiBNYXRoLmxvZyhlKSpNYXRoLkxPRzJFfXN0YXRpYyBJTG9nMihlKXtpZihNYXRoLmxvZzIpcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5sb2cyKGUpKTtpZihlPDApcmV0dXJuIE5hTjtpZihlPT09MClyZXR1cm4tMS8wO2xldCB0PTA7aWYoZTwxKXtmb3IoO2U8MTspdCsrLGU9ZSoyO3Q9LXR9ZWxzZSBpZihlPjEpZm9yKDtlPjE7KXQrKyxlPU1hdGguZmxvb3IoZS8yKTtyZXR1cm4gdH1zdGF0aWMgUmVwZWF0KGUsdCl7cmV0dXJuIGUtTWF0aC5mbG9vcihlL3QpKnR9c3RhdGljIE5vcm1hbGl6ZShlLHQsaSl7cmV0dXJuKGUtdCkvKGktdCl9c3RhdGljIERlbm9ybWFsaXplKGUsdCxpKXtyZXR1cm4gZSooaS10KSt0fXN0YXRpYyBEZWx0YUFuZ2xlKGUsdCl7bGV0IGk9WC5SZXBlYXQodC1lLDM2MCk7cmV0dXJuIGk+MTgwJiYoaS09MzYwKSxpfXN0YXRpYyBQaW5nUG9uZyhlLHQpe2NvbnN0IGk9WC5SZXBlYXQoZSx0KjIpO3JldHVybiB0LU1hdGguYWJzKGktdCl9c3RhdGljIFNtb290aFN0ZXAoZSx0LGkpe2xldCBzPVguQ2xhbXAoaSk7cmV0dXJuIHM9LTIqcypzKnMrMypzKnMsdCpzK2UqKDEtcyl9c3RhdGljIE1vdmVUb3dhcmRzKGUsdCxpKXtsZXQgcz0wO3JldHVybiBNYXRoLmFicyh0LWUpPD1pP3M9dDpzPWUrWC5TaWduKHQtZSkqaSxzfXN0YXRpYyBNb3ZlVG93YXJkc0FuZ2xlKGUsdCxpKXtjb25zdCBzPVguRGVsdGFBbmdsZShlLHQpO2xldCByPTA7cmV0dXJuLWk8cyYmczxpP3I9dDoodD1lK3Mscj1YLk1vdmVUb3dhcmRzKGUsdCxpKSkscn1zdGF0aWMgTGVycChlLHQsaSl7cmV0dXJuIGUrKHQtZSkqaX1zdGF0aWMgTGVycEFuZ2xlKGUsdCxpKXtsZXQgcz1YLlJlcGVhdCh0LWUsMzYwKTtyZXR1cm4gcz4xODAmJihzLT0zNjApLGUrcypYLkNsYW1wKGkpfXN0YXRpYyBJbnZlcnNlTGVycChlLHQsaSl7bGV0IHM9MDtyZXR1cm4gZSE9dD9zPVguQ2xhbXAoKGktZSkvKHQtZSkpOnM9MCxzfXN0YXRpYyBIZXJtaXRlKGUsdCxpLHMscil7Y29uc3Qgbj1yKnIsYT1yKm4sbz0yKmEtMypuKzEsaD0tMiphKzMqbixsPWEtMipuK3IsdT1hLW47cmV0dXJuIGUqbytpKmgrdCpsK3MqdX1zdGF0aWMgSGVybWl0ZTFzdERlcml2YXRpdmUoZSx0LGkscyxyKXtjb25zdCBuPXIqcjtyZXR1cm4obi1yKSo2KmUrKDMqbi00KnIrMSkqdCsoLW4rcikqNippKygzKm4tMipyKSpzfXN0YXRpYyBSYW5kb21SYW5nZShlLHQpe3JldHVybiBlPT09dD9lOk1hdGgucmFuZG9tKCkqKHQtZSkrZX1zdGF0aWMgUmFuZ2VUb1BlcmNlbnQoZSx0LGkpe3JldHVybihlLXQpLyhpLXQpfXN0YXRpYyBQZXJjZW50VG9SYW5nZShlLHQsaSl7cmV0dXJuKGktdCkqZSt0fXN0YXRpYyBOb3JtYWxpemVSYWRpYW5zKGUpe3JldHVybiBlLT1YLlR3b1BpKk1hdGguZmxvb3IoKGUrTWF0aC5QSSkvWC5Ud29QaSksZX1zdGF0aWMgSENGKGUsdCl7Y29uc3QgaT1lJXQ7cmV0dXJuIGk9PT0wP3Q6WC5IQ0YodCxpKX19WC5Ud29QaT1NYXRoLlBJKjI7Y29uc3QgU2U9MS8yLjIseWU9Mi4yLHhlPS4wMDE7Y2xhc3MgQmV7c3RhdGljIEJ1aWxkQXJyYXkoZSx0KXtjb25zdCBpPVtdO2ZvcihsZXQgcz0wO3M8ZTsrK3MpaS5wdXNoKHQoKSk7cmV0dXJuIGl9c3RhdGljIEJ1aWxkVHVwbGUoZSx0KXtyZXR1cm4gQmUuQnVpbGRBcnJheShlLHQpfX1mdW5jdGlvbiBYcihjLGUsdCl7Y29uc3QgaT1jW2VdO2lmKHR5cGVvZiBpIT0iZnVuY3Rpb24iKXJldHVybiBudWxsO2NvbnN0IHM9ZnVuY3Rpb24oKXtjb25zdCByPWMubGVuZ3RoLG49cy5wcmV2aW91cy5hcHBseShjLGFyZ3VtZW50cyk7cmV0dXJuIHQoZSxyKSxufTtyZXR1cm4gaS5uZXh0PXMscy5wcmV2aW91cz1pLGNbZV09cywoKT0+e2NvbnN0IHI9cy5wcmV2aW91cztpZighcilyZXR1cm47Y29uc3Qgbj1zLm5leHQ7bj8oci5uZXh0PW4sbi5wcmV2aW91cz1yKTooci5uZXh0PXZvaWQgMCxjW2VdPXIpLHMubmV4dD12b2lkIDAscy5wcmV2aW91cz12b2lkIDB9fWNvbnN0IEhyPVsicHVzaCIsInNwbGljZSIsInBvcCIsInNoaWZ0IiwidW5zaGlmdCJdO2Z1bmN0aW9uICRzKGMsZSl7Y29uc3QgdD1Ici5tYXAoaT0+WHIoYyxpLGUpKTtyZXR1cm4oKT0+e3QuZm9yRWFjaChpPT57aT09bnVsbHx8aSgpfSl9fWNvbnN0IFFzPXt9O2Z1bmN0aW9uIGl0KGMsZSl7UXNbY109ZX1mdW5jdGlvbiByaShjKXtyZXR1cm4gUXNbY119Y2xhc3MgVWV7c3RhdGljIFNldE1hdHJpeFByZWNpc2lvbihlKXtpZihVZS5NYXRyaXhUcmFja1ByZWNpc2lvbkNoYW5nZT0hMSxlJiYhVWUuTWF0cml4VXNlNjRCaXRzJiZVZS5NYXRyaXhUcmFja2VkTWF0cmljZXMpZm9yKGxldCB0PTA7dDxVZS5NYXRyaXhUcmFja2VkTWF0cmljZXMubGVuZ3RoOysrdCl7Y29uc3QgaT1VZS5NYXRyaXhUcmFja2VkTWF0cmljZXNbdF0scz1pLl9tO2kuX209bmV3IEFycmF5KDE2KTtmb3IobGV0IHI9MDtyPDE2OysrcilpLl9tW3JdPXNbcl19VWUuTWF0cml4VXNlNjRCaXRzPWUsVWUuTWF0cml4Q3VycmVudFR5cGU9VWUuTWF0cml4VXNlNjRCaXRzP0FycmF5OkZsb2F0MzJBcnJheSxVZS5NYXRyaXhUcmFja2VkTWF0cmljZXM9bnVsbH19VWUuTWF0cml4VXNlNjRCaXRzPSExLFVlLk1hdHJpeFRyYWNrUHJlY2lzaW9uQ2hhbmdlPSEwLFVlLk1hdHJpeEN1cnJlbnRUeXBlPUZsb2F0MzJBcnJheSxVZS5NYXRyaXhUcmFja2VkTWF0cmljZXM9W107Y2xhc3MgZmV7c3RhdGljIGdldCBMYXN0Q3JlYXRlZEVuZ2luZSgpe3JldHVybiB0aGlzLkluc3RhbmNlcy5sZW5ndGg9PT0wP251bGw6dGhpcy5JbnN0YW5jZXNbdGhpcy5JbnN0YW5jZXMubGVuZ3RoLTFdfXN0YXRpYyBnZXQgTGFzdENyZWF0ZWRTY2VuZSgpe3JldHVybiB0aGlzLl9MYXN0Q3JlYXRlZFNjZW5lfX1mZS5JbnN0YW5jZXM9bmV3IEFycmF5LGZlLl9MYXN0Q3JlYXRlZFNjZW5lPW51bGwsZmUuVXNlRmFsbGJhY2tUZXh0dXJlPSEwLGZlLkZhbGxiYWNrVGV4dHVyZT0iIjtjb25zdCBzdD1jPT5wYXJzZUludChjLnRvU3RyaW5nKCkucmVwbGFjZSgvXFcvZywiIikpO2NsYXNzIHZle2NvbnN0cnVjdG9yKGU9MCx0PTApe3RoaXMueD1lLHRoaXMueT10fXRvU3RyaW5nKCl7cmV0dXJuYHtYOiAke3RoaXMueH0gWTogJHt0aGlzLnl9fWB9Z2V0Q2xhc3NOYW1lKCl7cmV0dXJuIlZlY3RvcjIifWdldEhhc2hDb2RlKCl7Y29uc3QgZT1zdCh0aGlzLngpLHQ9c3QodGhpcy55KTtsZXQgaT1lO3JldHVybiBpPWkqMzk3XnQsaX10b0FycmF5KGUsdD0wKXtyZXR1cm4gZVt0XT10aGlzLngsZVt0KzFdPXRoaXMueSx0aGlzfWZyb21BcnJheShlLHQ9MCl7cmV0dXJuIHZlLkZyb21BcnJheVRvUmVmKGUsdCx0aGlzKSx0aGlzfWFzQXJyYXkoKXtjb25zdCBlPW5ldyBBcnJheTtyZXR1cm4gdGhpcy50b0FycmF5KGUsMCksZX1jb3B5RnJvbShlKXtyZXR1cm4gdGhpcy54PWUueCx0aGlzLnk9ZS55LHRoaXN9Y29weUZyb21GbG9hdHMoZSx0KXtyZXR1cm4gdGhpcy54PWUsdGhpcy55PXQsdGhpc31zZXQoZSx0KXtyZXR1cm4gdGhpcy5jb3B5RnJvbUZsb2F0cyhlLHQpfWFkZChlKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy54K2UueCx0aGlzLnkrZS55KX1hZGRUb1JlZihlLHQpe3JldHVybiB0Lng9dGhpcy54K2UueCx0Lnk9dGhpcy55K2UueSx0fWFkZEluUGxhY2UoZSl7cmV0dXJuIHRoaXMueCs9ZS54LHRoaXMueSs9ZS55LHRoaXN9YWRkVmVjdG9yMyhlKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy54K2UueCx0aGlzLnkrZS55KX1zdWJ0cmFjdChlKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy54LWUueCx0aGlzLnktZS55KX1zdWJ0cmFjdFRvUmVmKGUsdCl7cmV0dXJuIHQueD10aGlzLngtZS54LHQueT10aGlzLnktZS55LHR9c3VidHJhY3RJblBsYWNlKGUpe3JldHVybiB0aGlzLngtPWUueCx0aGlzLnktPWUueSx0aGlzfW11bHRpcGx5SW5QbGFjZShlKXtyZXR1cm4gdGhpcy54Kj1lLngsdGhpcy55Kj1lLnksdGhpc31tdWx0aXBseShlKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy54KmUueCx0aGlzLnkqZS55KX1tdWx0aXBseVRvUmVmKGUsdCl7cmV0dXJuIHQueD10aGlzLngqZS54LHQueT10aGlzLnkqZS55LHR9bXVsdGlwbHlCeUZsb2F0cyhlLHQpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3Rvcih0aGlzLngqZSx0aGlzLnkqdCl9ZGl2aWRlKGUpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3Rvcih0aGlzLngvZS54LHRoaXMueS9lLnkpfWRpdmlkZVRvUmVmKGUsdCl7cmV0dXJuIHQueD10aGlzLngvZS54LHQueT10aGlzLnkvZS55LHR9ZGl2aWRlSW5QbGFjZShlKXtyZXR1cm4gdGhpcy5kaXZpZGVUb1JlZihlLHRoaXMpfW5lZ2F0ZSgpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3RvcigtdGhpcy54LC10aGlzLnkpfW5lZ2F0ZUluUGxhY2UoKXtyZXR1cm4gdGhpcy54Kj0tMSx0aGlzLnkqPS0xLHRoaXN9bmVnYXRlVG9SZWYoZSl7cmV0dXJuIGUuY29weUZyb21GbG9hdHModGhpcy54Ki0xLHRoaXMueSotMSl9c2NhbGVJblBsYWNlKGUpe3JldHVybiB0aGlzLngqPWUsdGhpcy55Kj1lLHRoaXN9c2NhbGUoZSl7Y29uc3QgdD1uZXcgdGhpcy5jb25zdHJ1Y3RvcigwLDApO3JldHVybiB0aGlzLnNjYWxlVG9SZWYoZSx0KSx0fXNjYWxlVG9SZWYoZSx0KXtyZXR1cm4gdC54PXRoaXMueCplLHQueT10aGlzLnkqZSx0fXNjYWxlQW5kQWRkVG9SZWYoZSx0KXtyZXR1cm4gdC54Kz10aGlzLngqZSx0LnkrPXRoaXMueSplLHR9ZXF1YWxzKGUpe3JldHVybiBlJiZ0aGlzLng9PT1lLngmJnRoaXMueT09PWUueX1lcXVhbHNXaXRoRXBzaWxvbihlLHQ9eGUpe3JldHVybiBlJiZYLldpdGhpbkVwc2lsb24odGhpcy54LGUueCx0KSYmWC5XaXRoaW5FcHNpbG9uKHRoaXMueSxlLnksdCl9Zmxvb3IoKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IoTWF0aC5mbG9vcih0aGlzLngpLE1hdGguZmxvb3IodGhpcy55KSl9ZnJhY3QoKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy54LU1hdGguZmxvb3IodGhpcy54KSx0aGlzLnktTWF0aC5mbG9vcih0aGlzLnkpKX1yb3RhdGVUb1JlZihlLHQpe2NvbnN0IGk9TWF0aC5jb3MoZSkscz1NYXRoLnNpbihlKTtyZXR1cm4gdC54PWkqdGhpcy54LXMqdGhpcy55LHQueT1zKnRoaXMueCtpKnRoaXMueSx0fWxlbmd0aCgpe3JldHVybiBNYXRoLnNxcnQodGhpcy54KnRoaXMueCt0aGlzLnkqdGhpcy55KX1sZW5ndGhTcXVhcmVkKCl7cmV0dXJuIHRoaXMueCp0aGlzLngrdGhpcy55KnRoaXMueX1ub3JtYWxpemUoKXtyZXR1cm4gdmUuTm9ybWFsaXplVG9SZWYodGhpcyx0aGlzKSx0aGlzfWNsb25lKCl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMueCx0aGlzLnkpfXN0YXRpYyBaZXJvKCl7cmV0dXJuIG5ldyB2ZSgwLDApfXN0YXRpYyBPbmUoKXtyZXR1cm4gbmV3IHZlKDEsMSl9c3RhdGljIGdldCBaZXJvUmVhZE9ubHkoKXtyZXR1cm4gdmUuX1plcm9SZWFkT25seX1zdGF0aWMgRnJvbUFycmF5KGUsdD0wKXtyZXR1cm4gbmV3IHZlKGVbdF0sZVt0KzFdKX1zdGF0aWMgRnJvbUFycmF5VG9SZWYoZSx0LGkpe3JldHVybiBpLng9ZVt0XSxpLnk9ZVt0KzFdLGl9c3RhdGljIENhdG11bGxSb20oZSx0LGkscyxyKXtjb25zdCBuPXIqcixhPXIqbixvPS41KigyKnQueCsoLWUueCtpLngpKnIrKDIqZS54LTUqdC54KzQqaS54LXMueCkqbisoLWUueCszKnQueC0zKmkueCtzLngpKmEpLGg9LjUqKDIqdC55KygtZS55K2kueSkqcisoMiplLnktNSp0LnkrNCppLnktcy55KSpuKygtZS55KzMqdC55LTMqaS55K3MueSkqYSk7cmV0dXJuIG5ldyBlLmNvbnN0cnVjdG9yKG8saCl9c3RhdGljIENsYW1wKGUsdCxpKXtsZXQgcz1lLng7cz1zPmkueD9pLng6cyxzPXM8dC54P3QueDpzO2xldCByPWUueTtyZXR1cm4gcj1yPmkueT9pLnk6cixyPXI8dC55P3QueTpyLG5ldyBlLmNvbnN0cnVjdG9yKHMscil9c3RhdGljIEhlcm1pdGUoZSx0LGkscyxyKXtjb25zdCBuPXIqcixhPXIqbixvPTIqYS0zKm4rMSxoPS0yKmErMypuLGw9YS0yKm4rcix1PWEtbixkPWUueCpvK2kueCpoK3QueCpsK3MueCp1LGY9ZS55Km8raS55KmgrdC55Kmwrcy55KnU7cmV0dXJuIG5ldyBlLmNvbnN0cnVjdG9yKGQsZil9c3RhdGljIEhlcm1pdGUxc3REZXJpdmF0aXZlKGUsdCxpLHMscil7Y29uc3Qgbj1uZXcgZS5jb25zdHJ1Y3RvcjtyZXR1cm4gdGhpcy5IZXJtaXRlMXN0RGVyaXZhdGl2ZVRvUmVmKGUsdCxpLHMscixuKSxufXN0YXRpYyBIZXJtaXRlMXN0RGVyaXZhdGl2ZVRvUmVmKGUsdCxpLHMscixuKXtjb25zdCBhPXIqcjtyZXR1cm4gbi54PShhLXIpKjYqZS54KygzKmEtNCpyKzEpKnQueCsoLWErcikqNippLngrKDMqYS0yKnIpKnMueCxuLnk9KGEtcikqNiplLnkrKDMqYS00KnIrMSkqdC55KygtYStyKSo2KmkueSsoMyphLTIqcikqcy55LG59c3RhdGljIExlcnAoZSx0LGkpe2NvbnN0IHM9ZS54Kyh0LngtZS54KSppLHI9ZS55Kyh0LnktZS55KSppO3JldHVybiBuZXcgZS5jb25zdHJ1Y3RvcihzLHIpfXN0YXRpYyBEb3QoZSx0KXtyZXR1cm4gZS54KnQueCtlLnkqdC55fXN0YXRpYyBOb3JtYWxpemUoZSl7Y29uc3QgdD1uZXcgZS5jb25zdHJ1Y3RvcjtyZXR1cm4gdGhpcy5Ob3JtYWxpemVUb1JlZihlLHQpLHR9c3RhdGljIE5vcm1hbGl6ZVRvUmVmKGUsdCl7Y29uc3QgaT1lLmxlbmd0aCgpO3JldHVybiBpPT09MHx8KHQueD1lLngvaSx0Lnk9ZS55L2kpLHR9c3RhdGljIE1pbmltaXplKGUsdCl7Y29uc3QgaT1lLng8dC54P2UueDp0Lngscz1lLnk8dC55P2UueTp0Lnk7cmV0dXJuIG5ldyBlLmNvbnN0cnVjdG9yKGkscyl9c3RhdGljIE1heGltaXplKGUsdCl7Y29uc3QgaT1lLng+dC54P2UueDp0Lngscz1lLnk+dC55P2UueTp0Lnk7cmV0dXJuIG5ldyBlLmNvbnN0cnVjdG9yKGkscyl9c3RhdGljIFRyYW5zZm9ybShlLHQpe2NvbnN0IGk9bmV3IGUuY29uc3RydWN0b3I7cmV0dXJuIHZlLlRyYW5zZm9ybVRvUmVmKGUsdCxpKSxpfXN0YXRpYyBUcmFuc2Zvcm1Ub1JlZihlLHQsaSl7Y29uc3Qgcz10Lm0scj1lLngqc1swXStlLnkqc1s0XStzWzEyXSxuPWUueCpzWzFdK2UueSpzWzVdK3NbMTNdO3JldHVybiBpLng9cixpLnk9bixpfXN0YXRpYyBQb2ludEluVHJpYW5nbGUoZSx0LGkscyl7Y29uc3Qgcj0uNSooLWkueSpzLngrdC55KigtaS54K3MueCkrdC54KihpLnktcy55KStpLngqcy55KSxuPXI8MD8tMToxLGE9KHQueSpzLngtdC54KnMueSsocy55LXQueSkqZS54Kyh0Lngtcy54KSplLnkpKm4sbz0odC54KmkueS10LnkqaS54Kyh0LnktaS55KSplLngrKGkueC10LngpKmUueSkqbjtyZXR1cm4gYT4wJiZvPjAmJmErbzwyKnIqbn1zdGF0aWMgRGlzdGFuY2UoZSx0KXtyZXR1cm4gTWF0aC5zcXJ0KHZlLkRpc3RhbmNlU3F1YXJlZChlLHQpKX1zdGF0aWMgRGlzdGFuY2VTcXVhcmVkKGUsdCl7Y29uc3QgaT1lLngtdC54LHM9ZS55LXQueTtyZXR1cm4gaSppK3Mqc31zdGF0aWMgQ2VudGVyKGUsdCl7Y29uc3QgaT1uZXcgZS5jb25zdHJ1Y3RvcjtyZXR1cm4gdmUuQ2VudGVyVG9SZWYoZSx0LGkpfXN0YXRpYyBDZW50ZXJUb1JlZihlLHQsaSl7cmV0dXJuIGkuY29weUZyb21GbG9hdHMoKGUueCt0LngpLzIsKGUueSt0LnkpLzIpfXN0YXRpYyBEaXN0YW5jZU9mUG9pbnRGcm9tU2VnbWVudChlLHQsaSl7Y29uc3Qgcz12ZS5EaXN0YW5jZVNxdWFyZWQodCxpKTtpZihzPT09MClyZXR1cm4gdmUuRGlzdGFuY2UoZSx0KTtjb25zdCByPWkuc3VidHJhY3QodCksbj1NYXRoLm1heCgwLE1hdGgubWluKDEsdmUuRG90KGUuc3VidHJhY3QodCkscikvcykpLGE9dC5hZGQoci5tdWx0aXBseUJ5RmxvYXRzKG4sbikpO3JldHVybiB2ZS5EaXN0YW5jZShlLGEpfX12ZS5fWmVyb1JlYWRPbmx5PXZlLlplcm8oKTtjbGFzcyBwe2NvbnN0cnVjdG9yKGU9MCx0PTAsaT0wKXt0aGlzLl9pc0RpcnR5PSEwLHRoaXMuX3g9ZSx0aGlzLl95PXQsdGhpcy5fej1pfWdldCB4KCl7cmV0dXJuIHRoaXMuX3h9c2V0IHgoZSl7dGhpcy5feD1lLHRoaXMuX2lzRGlydHk9ITB9Z2V0IHkoKXtyZXR1cm4gdGhpcy5feX1zZXQgeShlKXt0aGlzLl95PWUsdGhpcy5faXNEaXJ0eT0hMH1nZXQgeigpe3JldHVybiB0aGlzLl96fXNldCB6KGUpe3RoaXMuX3o9ZSx0aGlzLl9pc0RpcnR5PSEwfXRvU3RyaW5nKCl7cmV0dXJuYHtYOiAke3RoaXMuX3h9IFk6ICR7dGhpcy5feX0gWjogJHt0aGlzLl96fX1gfWdldENsYXNzTmFtZSgpe3JldHVybiJWZWN0b3IzIn1nZXRIYXNoQ29kZSgpe2NvbnN0IGU9c3QodGhpcy5feCksdD1zdCh0aGlzLl95KSxpPXN0KHRoaXMuX3opO2xldCBzPWU7cmV0dXJuIHM9cyozOTdedCxzPXMqMzk3Xmksc31hc0FycmF5KCl7Y29uc3QgZT1bXTtyZXR1cm4gdGhpcy50b0FycmF5KGUsMCksZX10b0FycmF5KGUsdD0wKXtyZXR1cm4gZVt0XT10aGlzLl94LGVbdCsxXT10aGlzLl95LGVbdCsyXT10aGlzLl96LHRoaXN9ZnJvbUFycmF5KGUsdD0wKXtyZXR1cm4gcC5Gcm9tQXJyYXlUb1JlZihlLHQsdGhpcyksdGhpc310b1F1YXRlcm5pb24oKXtyZXR1cm4gWi5Sb3RhdGlvbllhd1BpdGNoUm9sbCh0aGlzLl95LHRoaXMuX3gsdGhpcy5feil9YWRkSW5QbGFjZShlKXtyZXR1cm4gdGhpcy5hZGRJblBsYWNlRnJvbUZsb2F0cyhlLl94LGUuX3ksZS5feil9YWRkSW5QbGFjZUZyb21GbG9hdHMoZSx0LGkpe3JldHVybiB0aGlzLngrPWUsdGhpcy55Kz10LHRoaXMueis9aSx0aGlzfWFkZChlKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy5feCtlLl94LHRoaXMuX3krZS5feSx0aGlzLl96K2UuX3opfWFkZFRvUmVmKGUsdCl7cmV0dXJuIHQuY29weUZyb21GbG9hdHModGhpcy5feCtlLl94LHRoaXMuX3krZS5feSx0aGlzLl96K2UuX3opfXN1YnRyYWN0SW5QbGFjZShlKXtyZXR1cm4gdGhpcy54LT1lLl94LHRoaXMueS09ZS5feSx0aGlzLnotPWUuX3osdGhpc31zdWJ0cmFjdChlKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy5feC1lLl94LHRoaXMuX3ktZS5feSx0aGlzLl96LWUuX3opfXN1YnRyYWN0VG9SZWYoZSx0KXtyZXR1cm4gdGhpcy5zdWJ0cmFjdEZyb21GbG9hdHNUb1JlZihlLl94LGUuX3ksZS5feix0KX1zdWJ0cmFjdEZyb21GbG9hdHMoZSx0LGkpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3Rvcih0aGlzLl94LWUsdGhpcy5feS10LHRoaXMuX3otaSl9c3VidHJhY3RGcm9tRmxvYXRzVG9SZWYoZSx0LGkscyl7cmV0dXJuIHMuY29weUZyb21GbG9hdHModGhpcy5feC1lLHRoaXMuX3ktdCx0aGlzLl96LWkpfW5lZ2F0ZSgpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3RvcigtdGhpcy5feCwtdGhpcy5feSwtdGhpcy5feil9bmVnYXRlSW5QbGFjZSgpe3JldHVybiB0aGlzLngqPS0xLHRoaXMueSo9LTEsdGhpcy56Kj0tMSx0aGlzfW5lZ2F0ZVRvUmVmKGUpe3JldHVybiBlLmNvcHlGcm9tRmxvYXRzKHRoaXMuX3gqLTEsdGhpcy5feSotMSx0aGlzLl96Ki0xKX1zY2FsZUluUGxhY2UoZSl7cmV0dXJuIHRoaXMueCo9ZSx0aGlzLnkqPWUsdGhpcy56Kj1lLHRoaXN9c2NhbGUoZSl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMuX3gqZSx0aGlzLl95KmUsdGhpcy5feiplKX1zY2FsZVRvUmVmKGUsdCl7cmV0dXJuIHQuY29weUZyb21GbG9hdHModGhpcy5feCplLHRoaXMuX3kqZSx0aGlzLl96KmUpfWdldE5vcm1hbFRvUmVmKGUpe2NvbnN0IHQ9dGhpcy5sZW5ndGgoKTtsZXQgaT1NYXRoLmFjb3ModGhpcy55L3QpO2NvbnN0IHM9TWF0aC5hdGFuMih0aGlzLnosdGhpcy54KTtpPk1hdGguUEkvMj9pLT1NYXRoLlBJLzI6aSs9TWF0aC5QSS8yO2NvbnN0IHI9dCpNYXRoLnNpbihpKSpNYXRoLmNvcyhzKSxuPXQqTWF0aC5jb3MoaSksYT10Kk1hdGguc2luKGkpKk1hdGguc2luKHMpO3JldHVybiBlLnNldChyLG4sYSksZX1hcHBseVJvdGF0aW9uUXVhdGVybmlvblRvUmVmKGUsdCl7Y29uc3QgaT1lLncqdGhpcy54K2UueSp0aGlzLnotZS56KnRoaXMueSxzPWUudyp0aGlzLnkrZS56KnRoaXMueC1lLngqdGhpcy56LHI9ZS53KnRoaXMueitlLngqdGhpcy55LWUueSp0aGlzLngsbj0tZS54KnRoaXMueC1lLnkqdGhpcy55LWUueip0aGlzLno7cmV0dXJuIHQueD1pKmUudytuKi1lLngrcyotZS56LXIqLWUueSx0Lnk9cyplLncrbiotZS55K3IqLWUueC1pKi1lLnosdC56PXIqZS53K24qLWUueitpKi1lLnktcyotZS54LHR9YXBwbHlSb3RhdGlvblF1YXRlcm5pb25JblBsYWNlKGUpe3JldHVybiB0aGlzLmFwcGx5Um90YXRpb25RdWF0ZXJuaW9uVG9SZWYoZSx0aGlzKX1hcHBseVJvdGF0aW9uUXVhdGVybmlvbihlKXtyZXR1cm4gdGhpcy5hcHBseVJvdGF0aW9uUXVhdGVybmlvblRvUmVmKGUsbmV3IHRoaXMuY29uc3RydWN0b3IpfXNjYWxlQW5kQWRkVG9SZWYoZSx0KXtyZXR1cm4gdC5hZGRJblBsYWNlRnJvbUZsb2F0cyh0aGlzLl94KmUsdGhpcy5feSplLHRoaXMuX3oqZSl9cHJvamVjdE9uUGxhbmUoZSx0KXtjb25zdCBpPW5ldyB0aGlzLmNvbnN0cnVjdG9yO3JldHVybiB0aGlzLnByb2plY3RPblBsYW5lVG9SZWYoZSx0LGkpLGl9cHJvamVjdE9uUGxhbmVUb1JlZihlLHQsaSl7Y29uc3Qgcz1lLm5vcm1hbCxyPWUuZCxuPUsuVmVjdG9yM1swXTt0aGlzLnN1YnRyYWN0VG9SZWYodCxuKSxuLm5vcm1hbGl6ZSgpO2NvbnN0IGE9cC5Eb3QobixzKTtpZihNYXRoLmFicyhhKTxNYXRoLnBvdygxMCwtMTApKWkuc2V0QWxsKDEvMCk7ZWxzZXtjb25zdCBvPS0ocC5Eb3QodCxzKStyKS9hLGg9bi5zY2FsZUluUGxhY2Uobyk7dC5hZGRUb1JlZihoLGkpfXJldHVybiBpfWVxdWFscyhlKXtyZXR1cm4gZSYmdGhpcy5feD09PWUuX3gmJnRoaXMuX3k9PT1lLl95JiZ0aGlzLl96PT09ZS5fen1lcXVhbHNXaXRoRXBzaWxvbihlLHQ9eGUpe3JldHVybiBlJiZYLldpdGhpbkVwc2lsb24odGhpcy5feCxlLl94LHQpJiZYLldpdGhpbkVwc2lsb24odGhpcy5feSxlLl95LHQpJiZYLldpdGhpbkVwc2lsb24odGhpcy5feixlLl96LHQpfWVxdWFsc1RvRmxvYXRzKGUsdCxpKXtyZXR1cm4gdGhpcy5feD09PWUmJnRoaXMuX3k9PT10JiZ0aGlzLl96PT09aX1tdWx0aXBseUluUGxhY2UoZSl7cmV0dXJuIHRoaXMueCo9ZS5feCx0aGlzLnkqPWUuX3ksdGhpcy56Kj1lLl96LHRoaXN9bXVsdGlwbHkoZSl7cmV0dXJuIHRoaXMubXVsdGlwbHlCeUZsb2F0cyhlLl94LGUuX3ksZS5feil9bXVsdGlwbHlUb1JlZihlLHQpe3JldHVybiB0LmNvcHlGcm9tRmxvYXRzKHRoaXMuX3gqZS5feCx0aGlzLl95KmUuX3ksdGhpcy5feiplLl96KX1tdWx0aXBseUJ5RmxvYXRzKGUsdCxpKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy5feCplLHRoaXMuX3kqdCx0aGlzLl96KmkpfWRpdmlkZShlKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy5feC9lLl94LHRoaXMuX3kvZS5feSx0aGlzLl96L2UuX3opfWRpdmlkZVRvUmVmKGUsdCl7cmV0dXJuIHQuY29weUZyb21GbG9hdHModGhpcy5feC9lLl94LHRoaXMuX3kvZS5feSx0aGlzLl96L2UuX3opfWRpdmlkZUluUGxhY2UoZSl7cmV0dXJuIHRoaXMuZGl2aWRlVG9SZWYoZSx0aGlzKX1taW5pbWl6ZUluUGxhY2UoZSl7cmV0dXJuIHRoaXMubWluaW1pemVJblBsYWNlRnJvbUZsb2F0cyhlLl94LGUuX3ksZS5feil9bWF4aW1pemVJblBsYWNlKGUpe3JldHVybiB0aGlzLm1heGltaXplSW5QbGFjZUZyb21GbG9hdHMoZS5feCxlLl95LGUuX3opfW1pbmltaXplSW5QbGFjZUZyb21GbG9hdHMoZSx0LGkpe3JldHVybiBlPHRoaXMuX3gmJih0aGlzLng9ZSksdDx0aGlzLl95JiYodGhpcy55PXQpLGk8dGhpcy5feiYmKHRoaXMuej1pKSx0aGlzfW1heGltaXplSW5QbGFjZUZyb21GbG9hdHMoZSx0LGkpe3JldHVybiBlPnRoaXMuX3gmJih0aGlzLng9ZSksdD50aGlzLl95JiYodGhpcy55PXQpLGk+dGhpcy5feiYmKHRoaXMuej1pKSx0aGlzfWlzTm9uVW5pZm9ybVdpdGhpbkVwc2lsb24oZSl7Y29uc3QgdD1NYXRoLmFicyh0aGlzLl94KSxpPU1hdGguYWJzKHRoaXMuX3kpO2lmKCFYLldpdGhpbkVwc2lsb24odCxpLGUpKXJldHVybiEwO2NvbnN0IHM9TWF0aC5hYnModGhpcy5feik7cmV0dXJuIVguV2l0aGluRXBzaWxvbih0LHMsZSl8fCFYLldpdGhpbkVwc2lsb24oaSxzLGUpfWdldCBpc05vblVuaWZvcm0oKXtjb25zdCBlPU1hdGguYWJzKHRoaXMuX3gpLHQ9TWF0aC5hYnModGhpcy5feSk7aWYoZSE9PXQpcmV0dXJuITA7Y29uc3QgaT1NYXRoLmFicyh0aGlzLl96KTtyZXR1cm4gZSE9PWl9Zmxvb3IoKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IoTWF0aC5mbG9vcih0aGlzLl94KSxNYXRoLmZsb29yKHRoaXMuX3kpLE1hdGguZmxvb3IodGhpcy5feikpfWZyYWN0KCl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMuX3gtTWF0aC5mbG9vcih0aGlzLl94KSx0aGlzLl95LU1hdGguZmxvb3IodGhpcy5feSksdGhpcy5fei1NYXRoLmZsb29yKHRoaXMuX3opKX1sZW5ndGgoKXtyZXR1cm4gTWF0aC5zcXJ0KHRoaXMuX3gqdGhpcy5feCt0aGlzLl95KnRoaXMuX3krdGhpcy5feip0aGlzLl96KX1sZW5ndGhTcXVhcmVkKCl7cmV0dXJuIHRoaXMuX3gqdGhpcy5feCt0aGlzLl95KnRoaXMuX3krdGhpcy5feip0aGlzLl96fWdldCBoYXNBWmVyb0NvbXBvbmVudCgpe3JldHVybiB0aGlzLl94KnRoaXMuX3kqdGhpcy5fej09PTB9bm9ybWFsaXplKCl7cmV0dXJuIHRoaXMubm9ybWFsaXplRnJvbUxlbmd0aCh0aGlzLmxlbmd0aCgpKX1yZW9yZGVySW5QbGFjZShlKXtyZXR1cm4gZT1lLnRvTG93ZXJDYXNlKCksZT09PSJ4eXoiP3RoaXM6KEsuVmVjdG9yM1swXS5jb3B5RnJvbSh0aGlzKSxbIngiLCJ5IiwieiJdLmZvckVhY2goKHQsaSk9Pnt0aGlzW3RdPUsuVmVjdG9yM1swXVtlW2ldXX0pLHRoaXMpfXJvdGF0ZUJ5UXVhdGVybmlvblRvUmVmKGUsdCl7cmV0dXJuIGUudG9Sb3RhdGlvbk1hdHJpeChLLk1hdHJpeFswXSkscC5UcmFuc2Zvcm1Db29yZGluYXRlc1RvUmVmKHRoaXMsSy5NYXRyaXhbMF0sdCksdH1yb3RhdGVCeVF1YXRlcm5pb25Bcm91bmRQb2ludFRvUmVmKGUsdCxpKXtyZXR1cm4gdGhpcy5zdWJ0cmFjdFRvUmVmKHQsSy5WZWN0b3IzWzBdKSxLLlZlY3RvcjNbMF0ucm90YXRlQnlRdWF0ZXJuaW9uVG9SZWYoZSxLLlZlY3RvcjNbMF0pLHQuYWRkVG9SZWYoSy5WZWN0b3IzWzBdLGkpLGl9Y3Jvc3MoZSl7Y29uc3QgdD1uZXcgdGhpcy5jb25zdHJ1Y3RvcjtyZXR1cm4gcC5Dcm9zc1RvUmVmKHRoaXMsZSx0KX1ub3JtYWxpemVGcm9tTGVuZ3RoKGUpe3JldHVybiBlPT09MHx8ZT09PTE/dGhpczp0aGlzLnNjYWxlSW5QbGFjZSgxL2UpfW5vcm1hbGl6ZVRvTmV3KCl7Y29uc3QgZT1uZXcgdGhpcy5jb25zdHJ1Y3RvcigwLDAsMCk7cmV0dXJuIHRoaXMubm9ybWFsaXplVG9SZWYoZSksZX1ub3JtYWxpemVUb1JlZihlKXtjb25zdCB0PXRoaXMubGVuZ3RoKCk7cmV0dXJuIHQ9PT0wfHx0PT09MT9lLmNvcHlGcm9tRmxvYXRzKHRoaXMuX3gsdGhpcy5feSx0aGlzLl96KTp0aGlzLnNjYWxlVG9SZWYoMS90LGUpfWNsb25lKCl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMuX3gsdGhpcy5feSx0aGlzLl96KX1jb3B5RnJvbShlKXtyZXR1cm4gdGhpcy5jb3B5RnJvbUZsb2F0cyhlLl94LGUuX3ksZS5feil9Y29weUZyb21GbG9hdHMoZSx0LGkpe3JldHVybiB0aGlzLng9ZSx0aGlzLnk9dCx0aGlzLno9aSx0aGlzfXNldChlLHQsaSl7cmV0dXJuIHRoaXMuY29weUZyb21GbG9hdHMoZSx0LGkpfXNldEFsbChlKXtyZXR1cm4gdGhpcy54PXRoaXMueT10aGlzLno9ZSx0aGlzfXN0YXRpYyBHZXRDbGlwRmFjdG9yKGUsdCxpLHMpe2NvbnN0IHI9cC5Eb3QoZSxpKS1zLG49cC5Eb3QodCxpKS1zO3JldHVybiByLyhyLW4pfXN0YXRpYyBHZXRBbmdsZUJldHdlZW5WZWN0b3JzKGUsdCxpKXtjb25zdCBzPWUubm9ybWFsaXplVG9SZWYoSy5WZWN0b3IzWzFdKSxyPXQubm9ybWFsaXplVG9SZWYoSy5WZWN0b3IzWzJdKTtsZXQgbj1wLkRvdChzLHIpO249WC5DbGFtcChuLC0xLDEpO2NvbnN0IGE9TWF0aC5hY29zKG4pLG89Sy5WZWN0b3IzWzNdO3JldHVybiBwLkNyb3NzVG9SZWYocyxyLG8pLHAuRG90KG8saSk+MD9pc05hTihhKT8wOmE6aXNOYU4oYSk/LU1hdGguUEk6LU1hdGguYWNvcyhuKX1zdGF0aWMgR2V0QW5nbGVCZXR3ZWVuVmVjdG9yc09uUGxhbmUoZSx0LGkpe0suVmVjdG9yM1swXS5jb3B5RnJvbShlKTtjb25zdCBzPUsuVmVjdG9yM1swXTtLLlZlY3RvcjNbMV0uY29weUZyb20odCk7Y29uc3Qgcj1LLlZlY3RvcjNbMV07Sy5WZWN0b3IzWzJdLmNvcHlGcm9tKGkpO2NvbnN0IG49Sy5WZWN0b3IzWzJdLGE9Sy5WZWN0b3IzWzNdLG89Sy5WZWN0b3IzWzRdO3Mubm9ybWFsaXplKCksci5ub3JtYWxpemUoKSxuLm5vcm1hbGl6ZSgpLHAuQ3Jvc3NUb1JlZihuLHMsYSkscC5Dcm9zc1RvUmVmKGEsbixvKTtjb25zdCBoPU1hdGguYXRhbjIocC5Eb3QocixhKSxwLkRvdChyLG8pKTtyZXR1cm4gWC5Ob3JtYWxpemVSYWRpYW5zKGgpfXN0YXRpYyBQaXRjaFlhd1JvbGxUb01vdmVCZXR3ZWVuUG9pbnRzVG9SZWYoZSx0LGkpe2NvbnN0IHM9RC5WZWN0b3IzWzBdO3JldHVybiB0LnN1YnRyYWN0VG9SZWYoZSxzKSxpLnk9TWF0aC5hdGFuMihzLngscy56KXx8MCxpLng9TWF0aC5hdGFuMihNYXRoLnNxcnQocy54KioyK3MueioqMikscy55KXx8MCxpLno9MCxpfXN0YXRpYyBQaXRjaFlhd1JvbGxUb01vdmVCZXR3ZWVuUG9pbnRzKGUsdCl7Y29uc3QgaT1wLlplcm8oKTtyZXR1cm4gcC5QaXRjaFlhd1JvbGxUb01vdmVCZXR3ZWVuUG9pbnRzVG9SZWYoZSx0LGkpfXN0YXRpYyBTbGVycFRvUmVmKGUsdCxpLHMpe2k9WC5DbGFtcChpLDAsMSk7Y29uc3Qgcj1LLlZlY3RvcjNbMF0sbj1LLlZlY3RvcjNbMV07ci5jb3B5RnJvbShlKTtjb25zdCBhPXIubGVuZ3RoKCk7ci5ub3JtYWxpemVGcm9tTGVuZ3RoKGEpLG4uY29weUZyb20odCk7Y29uc3Qgbz1uLmxlbmd0aCgpO24ubm9ybWFsaXplRnJvbUxlbmd0aChvKTtjb25zdCBoPXAuRG90KHIsbik7bGV0IGwsdTtpZihoPDEteGUpe2NvbnN0IGQ9TWF0aC5hY29zKGgpLGY9MS9NYXRoLnNpbihkKTtsPU1hdGguc2luKCgxLWkpKmQpKmYsdT1NYXRoLnNpbihpKmQpKmZ9ZWxzZSBsPTEtaSx1PWk7cmV0dXJuIHIuc2NhbGVJblBsYWNlKGwpLG4uc2NhbGVJblBsYWNlKHUpLHMuY29weUZyb20ocikuYWRkSW5QbGFjZShuKSxzLnNjYWxlSW5QbGFjZShYLkxlcnAoYSxvLGkpKSxzfXN0YXRpYyBTbW9vdGhUb1JlZihlLHQsaSxzLHIpe3JldHVybiBwLlNsZXJwVG9SZWYoZSx0LHM9PT0wPzE6aS9zLHIpLHJ9c3RhdGljIEZyb21BcnJheShlLHQ9MCl7cmV0dXJuIG5ldyBwKGVbdF0sZVt0KzFdLGVbdCsyXSl9c3RhdGljIEZyb21GbG9hdEFycmF5KGUsdCl7cmV0dXJuIHAuRnJvbUFycmF5KGUsdCl9c3RhdGljIEZyb21BcnJheVRvUmVmKGUsdCxpKXtyZXR1cm4gaS54PWVbdF0saS55PWVbdCsxXSxpLno9ZVt0KzJdLGl9c3RhdGljIEZyb21GbG9hdEFycmF5VG9SZWYoZSx0LGkpe3JldHVybiBwLkZyb21BcnJheVRvUmVmKGUsdCxpKX1zdGF0aWMgRnJvbUZsb2F0c1RvUmVmKGUsdCxpLHMpe3JldHVybiBzLmNvcHlGcm9tRmxvYXRzKGUsdCxpKSxzfXN0YXRpYyBaZXJvKCl7cmV0dXJuIG5ldyBwKDAsMCwwKX1zdGF0aWMgT25lKCl7cmV0dXJuIG5ldyBwKDEsMSwxKX1zdGF0aWMgVXAoKXtyZXR1cm4gbmV3IHAoMCwxLDApfXN0YXRpYyBnZXQgVXBSZWFkT25seSgpe3JldHVybiBwLl9VcFJlYWRPbmx5fXN0YXRpYyBnZXQgRG93blJlYWRPbmx5KCl7cmV0dXJuIHAuX0Rvd25SZWFkT25seX1zdGF0aWMgZ2V0IFJpZ2h0UmVhZE9ubHkoKXtyZXR1cm4gcC5fUmlnaHRSZWFkT25seX1zdGF0aWMgZ2V0IExlZnRSZWFkT25seSgpe3JldHVybiBwLl9MZWZ0UmVhZE9ubHl9c3RhdGljIGdldCBMZWZ0SGFuZGVkRm9yd2FyZFJlYWRPbmx5KCl7cmV0dXJuIHAuX0xlZnRIYW5kZWRGb3J3YXJkUmVhZE9ubHl9c3RhdGljIGdldCBSaWdodEhhbmRlZEZvcndhcmRSZWFkT25seSgpe3JldHVybiBwLl9SaWdodEhhbmRlZEZvcndhcmRSZWFkT25seX1zdGF0aWMgZ2V0IFplcm9SZWFkT25seSgpe3JldHVybiBwLl9aZXJvUmVhZE9ubHl9c3RhdGljIERvd24oKXtyZXR1cm4gbmV3IHAoMCwtMSwwKX1zdGF0aWMgRm9yd2FyZChlPSExKXtyZXR1cm4gbmV3IHAoMCwwLGU/LTE6MSl9c3RhdGljIEJhY2t3YXJkKGU9ITEpe3JldHVybiBuZXcgcCgwLDAsZT8xOi0xKX1zdGF0aWMgUmlnaHQoKXtyZXR1cm4gbmV3IHAoMSwwLDApfXN0YXRpYyBMZWZ0KCl7cmV0dXJuIG5ldyBwKC0xLDAsMCl9c3RhdGljIFRyYW5zZm9ybUNvb3JkaW5hdGVzKGUsdCl7Y29uc3QgaT1wLlplcm8oKTtyZXR1cm4gcC5UcmFuc2Zvcm1Db29yZGluYXRlc1RvUmVmKGUsdCxpKSxpfXN0YXRpYyBUcmFuc2Zvcm1Db29yZGluYXRlc1RvUmVmKGUsdCxpKXtyZXR1cm4gcC5UcmFuc2Zvcm1Db29yZGluYXRlc0Zyb21GbG9hdHNUb1JlZihlLl94LGUuX3ksZS5feix0LGkpLGl9c3RhdGljIFRyYW5zZm9ybUNvb3JkaW5hdGVzRnJvbUZsb2F0c1RvUmVmKGUsdCxpLHMscil7Y29uc3Qgbj1zLm0sYT1lKm5bMF0rdCpuWzRdK2kqbls4XStuWzEyXSxvPWUqblsxXSt0Km5bNV0raSpuWzldK25bMTNdLGg9ZSpuWzJdK3Qqbls2XStpKm5bMTBdK25bMTRdLGw9MS8oZSpuWzNdK3Qqbls3XStpKm5bMTFdK25bMTVdKTtyZXR1cm4gci54PWEqbCxyLnk9bypsLHIuej1oKmwscn1zdGF0aWMgVHJhbnNmb3JtTm9ybWFsKGUsdCl7Y29uc3QgaT1wLlplcm8oKTtyZXR1cm4gcC5UcmFuc2Zvcm1Ob3JtYWxUb1JlZihlLHQsaSksaX1zdGF0aWMgVHJhbnNmb3JtTm9ybWFsVG9SZWYoZSx0LGkpe3JldHVybiB0aGlzLlRyYW5zZm9ybU5vcm1hbEZyb21GbG9hdHNUb1JlZihlLl94LGUuX3ksZS5feix0LGkpLGl9c3RhdGljIFRyYW5zZm9ybU5vcm1hbEZyb21GbG9hdHNUb1JlZihlLHQsaSxzLHIpe2NvbnN0IG49cy5tO3JldHVybiByLng9ZSpuWzBdK3Qqbls0XStpKm5bOF0sci55PWUqblsxXSt0Km5bNV0raSpuWzldLHIuej1lKm5bMl0rdCpuWzZdK2kqblsxMF0scn1zdGF0aWMgQ2F0bXVsbFJvbShlLHQsaSxzLHIpe2NvbnN0IG49cipyLGE9cipuLG89LjUqKDIqdC5feCsoLWUuX3graS5feCkqcisoMiplLl94LTUqdC5feCs0KmkuX3gtcy5feCkqbisoLWUuX3grMyp0Ll94LTMqaS5feCtzLl94KSphKSxoPS41KigyKnQuX3krKC1lLl95K2kuX3kpKnIrKDIqZS5feS01KnQuX3krNCppLl95LXMuX3kpKm4rKC1lLl95KzMqdC5feS0zKmkuX3krcy5feSkqYSksbD0uNSooMip0Ll96KygtZS5feitpLl96KSpyKygyKmUuX3otNSp0Ll96KzQqaS5fei1zLl96KSpuKygtZS5feiszKnQuX3otMyppLl96K3MuX3opKmEpO3JldHVybiBuZXcgZS5jb25zdHJ1Y3RvcihvLGgsbCl9c3RhdGljIENsYW1wKGUsdCxpKXtjb25zdCBzPW5ldyBlLmNvbnN0cnVjdG9yO3JldHVybiBwLkNsYW1wVG9SZWYoZSx0LGkscyksc31zdGF0aWMgQ2xhbXBUb1JlZihlLHQsaSxzKXtsZXQgcj1lLl94O3I9cj5pLl94P2kuX3g6cixyPXI8dC5feD90Ll94OnI7bGV0IG49ZS5feTtuPW4+aS5feT9pLl95Om4sbj1uPHQuX3k/dC5feTpuO2xldCBhPWUuX3o7cmV0dXJuIGE9YT5pLl96P2kuX3o6YSxhPWE8dC5fej90Ll96OmEscy5jb3B5RnJvbUZsb2F0cyhyLG4sYSksc31zdGF0aWMgQ2hlY2tFeHRlbmRzKGUsdCxpKXt0Lm1pbmltaXplSW5QbGFjZShlKSxpLm1heGltaXplSW5QbGFjZShlKX1zdGF0aWMgSGVybWl0ZShlLHQsaSxzLHIpe2NvbnN0IG49cipyLGE9cipuLG89MiphLTMqbisxLGg9LTIqYSszKm4sbD1hLTIqbityLHU9YS1uLGQ9ZS5feCpvK2kuX3gqaCt0Ll94Kmwrcy5feCp1LGY9ZS5feSpvK2kuX3kqaCt0Ll95Kmwrcy5feSp1LF89ZS5feipvK2kuX3oqaCt0Ll96Kmwrcy5feip1O3JldHVybiBuZXcgZS5jb25zdHJ1Y3RvcihkLGYsXyl9c3RhdGljIEhlcm1pdGUxc3REZXJpdmF0aXZlKGUsdCxpLHMscil7Y29uc3Qgbj1uZXcgZS5jb25zdHJ1Y3RvcjtyZXR1cm4gdGhpcy5IZXJtaXRlMXN0RGVyaXZhdGl2ZVRvUmVmKGUsdCxpLHMscixuKSxufXN0YXRpYyBIZXJtaXRlMXN0RGVyaXZhdGl2ZVRvUmVmKGUsdCxpLHMscixuKXtjb25zdCBhPXIqcjtyZXR1cm4gbi54PShhLXIpKjYqZS54KygzKmEtNCpyKzEpKnQueCsoLWErcikqNippLngrKDMqYS0yKnIpKnMueCxuLnk9KGEtcikqNiplLnkrKDMqYS00KnIrMSkqdC55KygtYStyKSo2KmkueSsoMyphLTIqcikqcy55LG4uej0oYS1yKSo2KmUueisoMyphLTQqcisxKSp0LnorKC1hK3IpKjYqaS56KygzKmEtMipyKSpzLnosbn1zdGF0aWMgTGVycChlLHQsaSl7Y29uc3Qgcz1uZXcgZS5jb25zdHJ1Y3RvcigwLDAsMCk7cmV0dXJuIHAuTGVycFRvUmVmKGUsdCxpLHMpLHN9c3RhdGljIExlcnBUb1JlZihlLHQsaSxzKXtyZXR1cm4gcy54PWUuX3grKHQuX3gtZS5feCkqaSxzLnk9ZS5feSsodC5feS1lLl95KSppLHMuej1lLl96Kyh0Ll96LWUuX3opKmksc31zdGF0aWMgRG90KGUsdCl7cmV0dXJuIGUuX3gqdC5feCtlLl95KnQuX3krZS5feip0Ll96fXN0YXRpYyBDcm9zcyhlLHQpe2NvbnN0IGk9bmV3IGUuY29uc3RydWN0b3I7cmV0dXJuIHAuQ3Jvc3NUb1JlZihlLHQsaSksaX1zdGF0aWMgQ3Jvc3NUb1JlZihlLHQsaSl7Y29uc3Qgcz1lLl95KnQuX3otZS5feip0Ll95LHI9ZS5feip0Ll94LWUuX3gqdC5feixuPWUuX3gqdC5feS1lLl95KnQuX3g7cmV0dXJuIGkuY29weUZyb21GbG9hdHMocyxyLG4pLGl9c3RhdGljIE5vcm1hbGl6ZShlKXtjb25zdCB0PXAuWmVybygpO3JldHVybiBwLk5vcm1hbGl6ZVRvUmVmKGUsdCksdH1zdGF0aWMgTm9ybWFsaXplVG9SZWYoZSx0KXtyZXR1cm4gZS5ub3JtYWxpemVUb1JlZih0KSx0fXN0YXRpYyBQcm9qZWN0KGUsdCxpLHMpe2NvbnN0IHI9bmV3IGUuY29uc3RydWN0b3I7cmV0dXJuIHAuUHJvamVjdFRvUmVmKGUsdCxpLHMscikscn1zdGF0aWMgUHJvamVjdFRvUmVmKGUsdCxpLHMscil7Y29uc3Qgbj1zLndpZHRoLGE9cy5oZWlnaHQsbz1zLngsaD1zLnksbD1LLk1hdHJpeFsxXTt4LkZyb21WYWx1ZXNUb1JlZihuLzIsMCwwLDAsMCwtYS8yLDAsMCwwLDAsLjUsMCxvK24vMixhLzIraCwuNSwxLGwpO2NvbnN0IHU9Sy5NYXRyaXhbMF07cmV0dXJuIHQubXVsdGlwbHlUb1JlZihpLHUpLHUubXVsdGlwbHlUb1JlZihsLHUpLHAuVHJhbnNmb3JtQ29vcmRpbmF0ZXNUb1JlZihlLHUscikscn1zdGF0aWMgUmVmbGVjdChlLHQpe3JldHVybiB0aGlzLlJlZmxlY3RUb1JlZihlLHQsbmV3IHApfXN0YXRpYyBSZWZsZWN0VG9SZWYoZSx0LGkpe2NvbnN0IHM9RC5WZWN0b3IzWzBdO3JldHVybiBzLmNvcHlGcm9tKHQpLnNjYWxlSW5QbGFjZSgyKnAuRG90KGUsdCkpLGkuY29weUZyb20oZSkuc3VidHJhY3RJblBsYWNlKHMpfXN0YXRpYyBfVW5wcm9qZWN0RnJvbUludmVydGVkTWF0cml4VG9SZWYoZSx0LGkpe3AuVHJhbnNmb3JtQ29vcmRpbmF0ZXNUb1JlZihlLHQsaSk7Y29uc3Qgcz10Lm0scj1lLl94KnNbM10rZS5feSpzWzddK2UuX3oqc1sxMV0rc1sxNV07cmV0dXJuIFguV2l0aGluRXBzaWxvbihyLDEpJiZpLnNjYWxlSW5QbGFjZSgxL3IpLGl9c3RhdGljIFVucHJvamVjdEZyb21UcmFuc2Zvcm0oZSx0LGkscyxyKXtyZXR1cm4gdGhpcy5VbnByb2plY3QoZSx0LGkscyxyLHguSWRlbnRpdHlSZWFkT25seSl9c3RhdGljIFVucHJvamVjdChlLHQsaSxzLHIsbil7Y29uc3QgYT1uZXcgZS5jb25zdHJ1Y3RvcjtyZXR1cm4gcC5VbnByb2plY3RUb1JlZihlLHQsaSxzLHIsbixhKSxhfXN0YXRpYyBVbnByb2plY3RUb1JlZihlLHQsaSxzLHIsbixhKXtyZXR1cm4gcC5VbnByb2plY3RGbG9hdHNUb1JlZihlLl94LGUuX3ksZS5feix0LGkscyxyLG4sYSksYX1zdGF0aWMgVW5wcm9qZWN0RmxvYXRzVG9SZWYoZSx0LGkscyxyLG4sYSxvLGgpe3ZhciBsO2NvbnN0IHU9Sy5NYXRyaXhbMF07bi5tdWx0aXBseVRvUmVmKGEsdSksdS5tdWx0aXBseVRvUmVmKG8sdSksdS5pbnZlcnQoKTtjb25zdCBkPUsuVmVjdG9yM1swXTtyZXR1cm4gZC54PWUvcyoyLTEsZC55PS0odC9yKjItMSksISgobD1mZS5MYXN0Q3JlYXRlZEVuZ2luZSk9PT1udWxsfHxsPT09dm9pZCAwKSYmbC5pc05EQ0hhbGZaUmFuZ2U/ZC56PWk6ZC56PTIqaS0xLHAuX1VucHJvamVjdEZyb21JbnZlcnRlZE1hdHJpeFRvUmVmKGQsdSxoKSxofXN0YXRpYyBNaW5pbWl6ZShlLHQpe2NvbnN0IGk9bmV3IGUuY29uc3RydWN0b3I7cmV0dXJuIGkuY29weUZyb20oZSksaS5taW5pbWl6ZUluUGxhY2UodCksaX1zdGF0aWMgTWF4aW1pemUoZSx0KXtjb25zdCBpPW5ldyBlLmNvbnN0cnVjdG9yO3JldHVybiBpLmNvcHlGcm9tKGUpLGkubWF4aW1pemVJblBsYWNlKHQpLGl9c3RhdGljIERpc3RhbmNlKGUsdCl7cmV0dXJuIE1hdGguc3FydChwLkRpc3RhbmNlU3F1YXJlZChlLHQpKX1zdGF0aWMgRGlzdGFuY2VTcXVhcmVkKGUsdCl7Y29uc3QgaT1lLl94LXQuX3gscz1lLl95LXQuX3kscj1lLl96LXQuX3o7cmV0dXJuIGkqaStzKnMrcipyfXN0YXRpYyBQcm9qZWN0T25UcmlhbmdsZVRvUmVmKGUsdCxpLHMscil7Y29uc3Qgbj1LLlZlY3RvcjNbMF0sYT1LLlZlY3RvcjNbMV0sbz1LLlZlY3RvcjNbMl0saD1LLlZlY3RvcjNbM10sbD1LLlZlY3RvcjNbNF07aS5zdWJ0cmFjdFRvUmVmKHQsbikscy5zdWJ0cmFjdFRvUmVmKHQsYSkscy5zdWJ0cmFjdFRvUmVmKGksbyk7Y29uc3QgdT1uLmxlbmd0aCgpLGQ9YS5sZW5ndGgoKSxmPW8ubGVuZ3RoKCk7aWYodTx4ZXx8ZDx4ZXx8Zjx4ZSlyZXR1cm4gci5jb3B5RnJvbSh0KSxwLkRpc3RhbmNlKGUsdCk7ZS5zdWJ0cmFjdFRvUmVmKHQsbCkscC5Dcm9zc1RvUmVmKG4sYSxoKTtjb25zdCBfPWgubGVuZ3RoKCk7aWYoXzx4ZSlyZXR1cm4gci5jb3B5RnJvbSh0KSxwLkRpc3RhbmNlKGUsdCk7aC5ub3JtYWxpemVGcm9tTGVuZ3RoKF8pO2xldCBFPWwubGVuZ3RoKCk7aWYoRTx4ZSlyZXR1cm4gci5jb3B5RnJvbSh0KSwwO2wubm9ybWFsaXplRnJvbUxlbmd0aChFKTtjb25zdCBtPXAuRG90KGgsbCksdj1LLlZlY3RvcjNbNV0sUz1LLlZlY3RvcjNbNl07di5jb3B5RnJvbShoKS5zY2FsZUluUGxhY2UoLUUqbSksUy5jb3B5RnJvbShlKS5hZGRJblBsYWNlKHYpO2NvbnN0IHk9Sy5WZWN0b3IzWzRdLEE9Sy5WZWN0b3IzWzVdLEM9Sy5WZWN0b3IzWzddLGI9Sy5WZWN0b3IzWzhdO3kuY29weUZyb20obikuc2NhbGVJblBsYWNlKDEvdSksYi5jb3B5RnJvbShhKS5zY2FsZUluUGxhY2UoMS9kKSx5LmFkZEluUGxhY2UoYikuc2NhbGVJblBsYWNlKC0xKSxBLmNvcHlGcm9tKG4pLnNjYWxlSW5QbGFjZSgtMS91KSxiLmNvcHlGcm9tKG8pLnNjYWxlSW5QbGFjZSgxL2YpLEEuYWRkSW5QbGFjZShiKS5zY2FsZUluUGxhY2UoLTEpLEMuY29weUZyb20obykuc2NhbGVJblBsYWNlKC0xL2YpLGIuY29weUZyb20oYSkuc2NhbGVJblBsYWNlKC0xL2QpLEMuYWRkSW5QbGFjZShiKS5zY2FsZUluUGxhY2UoLTEpO2NvbnN0IE09Sy5WZWN0b3IzWzldO2xldCBMO00uY29weUZyb20oUykuc3VidHJhY3RJblBsYWNlKHQpLHAuQ3Jvc3NUb1JlZih5LE0sYiksTD1wLkRvdChiLGgpO2NvbnN0IGs9TDtNLmNvcHlGcm9tKFMpLnN1YnRyYWN0SW5QbGFjZShpKSxwLkNyb3NzVG9SZWYoQSxNLGIpLEw9cC5Eb3QoYixoKTtjb25zdCB3PUw7TS5jb3B5RnJvbShTKS5zdWJ0cmFjdEluUGxhY2UocykscC5Dcm9zc1RvUmVmKEMsTSxiKSxMPXAuRG90KGIsaCk7Y29uc3QgZGU9TCxjZT1LLlZlY3RvcjNbMTBdO2xldCBzZSx0ZTtrPjAmJnc8MD8oY2UuY29weUZyb20obiksc2U9dCx0ZT1pKTp3PjAmJmRlPDA/KGNlLmNvcHlGcm9tKG8pLHNlPWksdGU9cyk6KGNlLmNvcHlGcm9tKGEpLnNjYWxlSW5QbGFjZSgtMSksc2U9cyx0ZT10KTtjb25zdCBGZT1LLlZlY3RvcjNbOV0sd2U9Sy5WZWN0b3IzWzRdO2lmKHNlLnN1YnRyYWN0VG9SZWYoUyxiKSx0ZS5zdWJ0cmFjdFRvUmVmKFMsRmUpLHAuQ3Jvc3NUb1JlZihiLEZlLHdlKSwhKHAuRG90KHdlLGgpPDApKXJldHVybiByLmNvcHlGcm9tKFMpLE1hdGguYWJzKEUqbSk7Y29uc3QgS2U9Sy5WZWN0b3IzWzVdO3AuQ3Jvc3NUb1JlZihjZSx3ZSxLZSksS2Uubm9ybWFsaXplKCk7Y29uc3QgWWU9Sy5WZWN0b3IzWzldO1llLmNvcHlGcm9tKHNlKS5zdWJ0cmFjdEluUGxhY2UoUyk7Y29uc3QgcHQ9WWUubGVuZ3RoKCk7aWYocHQ8eGUpcmV0dXJuIHIuY29weUZyb20oc2UpLHAuRGlzdGFuY2UoZSxzZSk7WWUubm9ybWFsaXplRnJvbUxlbmd0aChwdCk7Y29uc3QgaHQ9cC5Eb3QoS2UsWWUpLHd0PUsuVmVjdG9yM1s3XTt3dC5jb3B5RnJvbShTKS5hZGRJblBsYWNlKEtlLnNjYWxlSW5QbGFjZShwdCpodCkpLGIuY29weUZyb20od3QpLnN1YnRyYWN0SW5QbGFjZShzZSksRT1jZS5sZW5ndGgoKSxjZS5ub3JtYWxpemVGcm9tTGVuZ3RoKEUpO2xldCBzaT1wLkRvdChiLGNlKS9NYXRoLm1heChFLHhlKTtyZXR1cm4gc2k9WC5DbGFtcChzaSwwLDEpLHd0LmNvcHlGcm9tKHNlKS5hZGRJblBsYWNlKGNlLnNjYWxlSW5QbGFjZShzaSpFKSksci5jb3B5RnJvbSh3dCkscC5EaXN0YW5jZShlLHd0KX1zdGF0aWMgQ2VudGVyKGUsdCl7cmV0dXJuIHAuQ2VudGVyVG9SZWYoZSx0LHAuWmVybygpKX1zdGF0aWMgQ2VudGVyVG9SZWYoZSx0LGkpe3JldHVybiBpLmNvcHlGcm9tRmxvYXRzKChlLl94K3QuX3gpLzIsKGUuX3krdC5feSkvMiwoZS5feit0Ll96KS8yKX1zdGF0aWMgUm90YXRpb25Gcm9tQXhpcyhlLHQsaSl7Y29uc3Qgcz1uZXcgZS5jb25zdHJ1Y3RvcjtyZXR1cm4gcC5Sb3RhdGlvbkZyb21BeGlzVG9SZWYoZSx0LGkscyksc31zdGF0aWMgUm90YXRpb25Gcm9tQXhpc1RvUmVmKGUsdCxpLHMpe2NvbnN0IHI9Sy5RdWF0ZXJuaW9uWzBdO3JldHVybiBaLlJvdGF0aW9uUXVhdGVybmlvbkZyb21BeGlzVG9SZWYoZSx0LGksciksci50b0V1bGVyQW5nbGVzVG9SZWYocyksc319cC5fVXBSZWFkT25seT1wLlVwKCkscC5fRG93blJlYWRPbmx5PXAuRG93bigpLHAuX0xlZnRIYW5kZWRGb3J3YXJkUmVhZE9ubHk9cC5Gb3J3YXJkKCExKSxwLl9SaWdodEhhbmRlZEZvcndhcmRSZWFkT25seT1wLkZvcndhcmQoITApLHAuX1JpZ2h0UmVhZE9ubHk9cC5SaWdodCgpLHAuX0xlZnRSZWFkT25seT1wLkxlZnQoKSxwLl9aZXJvUmVhZE9ubHk9cC5aZXJvKCk7Y2xhc3MgQ2V7Y29uc3RydWN0b3IoZT0wLHQ9MCxpPTAscz0wKXt0aGlzLng9ZSx0aGlzLnk9dCx0aGlzLno9aSx0aGlzLnc9c310b1N0cmluZygpe3JldHVybmB7WDogJHt0aGlzLnh9IFk6ICR7dGhpcy55fSBaOiAke3RoaXMuen0gVzogJHt0aGlzLnd9fWB9Z2V0Q2xhc3NOYW1lKCl7cmV0dXJuIlZlY3RvcjQifWdldEhhc2hDb2RlKCl7Y29uc3QgZT1zdCh0aGlzLngpLHQ9c3QodGhpcy55KSxpPXN0KHRoaXMueikscz1zdCh0aGlzLncpO2xldCByPWU7cmV0dXJuIHI9ciozOTdedCxyPXIqMzk3Xmkscj1yKjM5N15zLHJ9YXNBcnJheSgpe2NvbnN0IGU9bmV3IEFycmF5O3JldHVybiB0aGlzLnRvQXJyYXkoZSwwKSxlfXRvQXJyYXkoZSx0KXtyZXR1cm4gdD09PXZvaWQgMCYmKHQ9MCksZVt0XT10aGlzLngsZVt0KzFdPXRoaXMueSxlW3QrMl09dGhpcy56LGVbdCszXT10aGlzLncsdGhpc31mcm9tQXJyYXkoZSx0PTApe3JldHVybiBDZS5Gcm9tQXJyYXlUb1JlZihlLHQsdGhpcyksdGhpc31hZGRJblBsYWNlKGUpe3JldHVybiB0aGlzLngrPWUueCx0aGlzLnkrPWUueSx0aGlzLnorPWUueix0aGlzLncrPWUudyx0aGlzfWFkZChlKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy54K2UueCx0aGlzLnkrZS55LHRoaXMueitlLnosdGhpcy53K2Uudyl9YWRkVG9SZWYoZSx0KXtyZXR1cm4gdC54PXRoaXMueCtlLngsdC55PXRoaXMueStlLnksdC56PXRoaXMueitlLnosdC53PXRoaXMudytlLncsdH1zdWJ0cmFjdEluUGxhY2UoZSl7cmV0dXJuIHRoaXMueC09ZS54LHRoaXMueS09ZS55LHRoaXMuei09ZS56LHRoaXMudy09ZS53LHRoaXN9c3VidHJhY3QoZSl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMueC1lLngsdGhpcy55LWUueSx0aGlzLnotZS56LHRoaXMudy1lLncpfXN1YnRyYWN0VG9SZWYoZSx0KXtyZXR1cm4gdC54PXRoaXMueC1lLngsdC55PXRoaXMueS1lLnksdC56PXRoaXMuei1lLnosdC53PXRoaXMudy1lLncsdH1zdWJ0cmFjdEZyb21GbG9hdHMoZSx0LGkscyl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMueC1lLHRoaXMueS10LHRoaXMuei1pLHRoaXMudy1zKX1zdWJ0cmFjdEZyb21GbG9hdHNUb1JlZihlLHQsaSxzLHIpe3JldHVybiByLng9dGhpcy54LWUsci55PXRoaXMueS10LHIuej10aGlzLnotaSxyLnc9dGhpcy53LXMscn1uZWdhdGUoKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IoLXRoaXMueCwtdGhpcy55LC10aGlzLnosLXRoaXMudyl9bmVnYXRlSW5QbGFjZSgpe3JldHVybiB0aGlzLngqPS0xLHRoaXMueSo9LTEsdGhpcy56Kj0tMSx0aGlzLncqPS0xLHRoaXN9bmVnYXRlVG9SZWYoZSl7cmV0dXJuIGUuY29weUZyb21GbG9hdHModGhpcy54Ki0xLHRoaXMueSotMSx0aGlzLnoqLTEsdGhpcy53Ki0xKX1zY2FsZUluUGxhY2UoZSl7cmV0dXJuIHRoaXMueCo9ZSx0aGlzLnkqPWUsdGhpcy56Kj1lLHRoaXMudyo9ZSx0aGlzfXNjYWxlKGUpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3Rvcih0aGlzLngqZSx0aGlzLnkqZSx0aGlzLnoqZSx0aGlzLncqZSl9c2NhbGVUb1JlZihlLHQpe3JldHVybiB0Lng9dGhpcy54KmUsdC55PXRoaXMueSplLHQuej10aGlzLnoqZSx0Lnc9dGhpcy53KmUsdH1zY2FsZUFuZEFkZFRvUmVmKGUsdCl7cmV0dXJuIHQueCs9dGhpcy54KmUsdC55Kz10aGlzLnkqZSx0LnorPXRoaXMueiplLHQudys9dGhpcy53KmUsdH1lcXVhbHMoZSl7cmV0dXJuIGUmJnRoaXMueD09PWUueCYmdGhpcy55PT09ZS55JiZ0aGlzLno9PT1lLnomJnRoaXMudz09PWUud31lcXVhbHNXaXRoRXBzaWxvbihlLHQ9eGUpe3JldHVybiBlJiZYLldpdGhpbkVwc2lsb24odGhpcy54LGUueCx0KSYmWC5XaXRoaW5FcHNpbG9uKHRoaXMueSxlLnksdCkmJlguV2l0aGluRXBzaWxvbih0aGlzLnosZS56LHQpJiZYLldpdGhpbkVwc2lsb24odGhpcy53LGUudyx0KX1lcXVhbHNUb0Zsb2F0cyhlLHQsaSxzKXtyZXR1cm4gdGhpcy54PT09ZSYmdGhpcy55PT09dCYmdGhpcy56PT09aSYmdGhpcy53PT09c31tdWx0aXBseUluUGxhY2UoZSl7cmV0dXJuIHRoaXMueCo9ZS54LHRoaXMueSo9ZS55LHRoaXMueio9ZS56LHRoaXMudyo9ZS53LHRoaXN9bXVsdGlwbHkoZSl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMueCplLngsdGhpcy55KmUueSx0aGlzLnoqZS56LHRoaXMudyplLncpfW11bHRpcGx5VG9SZWYoZSx0KXtyZXR1cm4gdC54PXRoaXMueCplLngsdC55PXRoaXMueSplLnksdC56PXRoaXMueiplLnosdC53PXRoaXMudyplLncsdH1tdWx0aXBseUJ5RmxvYXRzKGUsdCxpLHMpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3Rvcih0aGlzLngqZSx0aGlzLnkqdCx0aGlzLnoqaSx0aGlzLncqcyl9ZGl2aWRlKGUpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3Rvcih0aGlzLngvZS54LHRoaXMueS9lLnksdGhpcy56L2Uueix0aGlzLncvZS53KX1kaXZpZGVUb1JlZihlLHQpe3JldHVybiB0Lng9dGhpcy54L2UueCx0Lnk9dGhpcy55L2UueSx0Lno9dGhpcy56L2Uueix0Lnc9dGhpcy53L2Uudyx0fWRpdmlkZUluUGxhY2UoZSl7cmV0dXJuIHRoaXMuZGl2aWRlVG9SZWYoZSx0aGlzKX1taW5pbWl6ZUluUGxhY2UoZSl7cmV0dXJuIGUueDx0aGlzLngmJih0aGlzLng9ZS54KSxlLnk8dGhpcy55JiYodGhpcy55PWUueSksZS56PHRoaXMueiYmKHRoaXMuej1lLnopLGUudzx0aGlzLncmJih0aGlzLnc9ZS53KSx0aGlzfW1heGltaXplSW5QbGFjZShlKXtyZXR1cm4gZS54PnRoaXMueCYmKHRoaXMueD1lLngpLGUueT50aGlzLnkmJih0aGlzLnk9ZS55KSxlLno+dGhpcy56JiYodGhpcy56PWUueiksZS53PnRoaXMudyYmKHRoaXMudz1lLncpLHRoaXN9Zmxvb3IoKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IoTWF0aC5mbG9vcih0aGlzLngpLE1hdGguZmxvb3IodGhpcy55KSxNYXRoLmZsb29yKHRoaXMueiksTWF0aC5mbG9vcih0aGlzLncpKX1mcmFjdCgpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3Rvcih0aGlzLngtTWF0aC5mbG9vcih0aGlzLngpLHRoaXMueS1NYXRoLmZsb29yKHRoaXMueSksdGhpcy56LU1hdGguZmxvb3IodGhpcy56KSx0aGlzLnctTWF0aC5mbG9vcih0aGlzLncpKX1sZW5ndGgoKXtyZXR1cm4gTWF0aC5zcXJ0KHRoaXMueCp0aGlzLngrdGhpcy55KnRoaXMueSt0aGlzLnoqdGhpcy56K3RoaXMudyp0aGlzLncpfWxlbmd0aFNxdWFyZWQoKXtyZXR1cm4gdGhpcy54KnRoaXMueCt0aGlzLnkqdGhpcy55K3RoaXMueip0aGlzLnordGhpcy53KnRoaXMud31ub3JtYWxpemUoKXtjb25zdCBlPXRoaXMubGVuZ3RoKCk7cmV0dXJuIGU9PT0wP3RoaXM6dGhpcy5zY2FsZUluUGxhY2UoMS9lKX10b1ZlY3RvcjMoKXtyZXR1cm4gbmV3IHAodGhpcy54LHRoaXMueSx0aGlzLnopfWNsb25lKCl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMueCx0aGlzLnksdGhpcy56LHRoaXMudyl9Y29weUZyb20oZSl7cmV0dXJuIHRoaXMueD1lLngsdGhpcy55PWUueSx0aGlzLno9ZS56LHRoaXMudz1lLncsdGhpc31jb3B5RnJvbUZsb2F0cyhlLHQsaSxzKXtyZXR1cm4gdGhpcy54PWUsdGhpcy55PXQsdGhpcy56PWksdGhpcy53PXMsdGhpc31zZXQoZSx0LGkscyl7cmV0dXJuIHRoaXMuY29weUZyb21GbG9hdHMoZSx0LGkscyl9c2V0QWxsKGUpe3JldHVybiB0aGlzLng9dGhpcy55PXRoaXMuej10aGlzLnc9ZSx0aGlzfXN0YXRpYyBGcm9tQXJyYXkoZSx0KXtyZXR1cm4gdHx8KHQ9MCksbmV3IENlKGVbdF0sZVt0KzFdLGVbdCsyXSxlW3QrM10pfXN0YXRpYyBGcm9tQXJyYXlUb1JlZihlLHQsaSl7cmV0dXJuIGkueD1lW3RdLGkueT1lW3QrMV0saS56PWVbdCsyXSxpLnc9ZVt0KzNdLGl9c3RhdGljIEZyb21GbG9hdEFycmF5VG9SZWYoZSx0LGkpe3JldHVybiBDZS5Gcm9tQXJyYXlUb1JlZihlLHQsaSksaX1zdGF0aWMgRnJvbUZsb2F0c1RvUmVmKGUsdCxpLHMscil7cmV0dXJuIHIueD1lLHIueT10LHIuej1pLHIudz1zLHJ9c3RhdGljIFplcm8oKXtyZXR1cm4gbmV3IENlKDAsMCwwLDApfXN0YXRpYyBPbmUoKXtyZXR1cm4gbmV3IENlKDEsMSwxLDEpfXN0YXRpYyBnZXQgWmVyb1JlYWRPbmx5KCl7cmV0dXJuIENlLl9aZXJvUmVhZE9ubHl9c3RhdGljIE5vcm1hbGl6ZShlKXtjb25zdCB0PUNlLlplcm8oKTtyZXR1cm4gQ2UuTm9ybWFsaXplVG9SZWYoZSx0KSx0fXN0YXRpYyBOb3JtYWxpemVUb1JlZihlLHQpe3JldHVybiB0LmNvcHlGcm9tKGUpLHQubm9ybWFsaXplKCksdH1zdGF0aWMgTWluaW1pemUoZSx0KXtjb25zdCBpPW5ldyBlLmNvbnN0cnVjdG9yO3JldHVybiBpLmNvcHlGcm9tKGUpLGkubWluaW1pemVJblBsYWNlKHQpLGl9c3RhdGljIE1heGltaXplKGUsdCl7Y29uc3QgaT1uZXcgZS5jb25zdHJ1Y3RvcjtyZXR1cm4gaS5jb3B5RnJvbShlKSxpLm1heGltaXplSW5QbGFjZSh0KSxpfXN0YXRpYyBEaXN0YW5jZShlLHQpe3JldHVybiBNYXRoLnNxcnQoQ2UuRGlzdGFuY2VTcXVhcmVkKGUsdCkpfXN0YXRpYyBEaXN0YW5jZVNxdWFyZWQoZSx0KXtjb25zdCBpPWUueC10Lngscz1lLnktdC55LHI9ZS56LXQueixuPWUudy10Lnc7cmV0dXJuIGkqaStzKnMrcipyK24qbn1zdGF0aWMgQ2VudGVyKGUsdCl7cmV0dXJuIENlLkNlbnRlclRvUmVmKGUsdCxDZS5aZXJvKCkpfXN0YXRpYyBDZW50ZXJUb1JlZihlLHQsaSl7cmV0dXJuIGkuY29weUZyb21GbG9hdHMoKGUueCt0LngpLzIsKGUueSt0LnkpLzIsKGUueit0LnopLzIsKGUudyt0LncpLzIpfXN0YXRpYyBUcmFuc2Zvcm1Db29yZGluYXRlcyhlLHQpe2NvbnN0IGk9Q2UuWmVybygpO3JldHVybiBDZS5UcmFuc2Zvcm1Db29yZGluYXRlc1RvUmVmKGUsdCxpKSxpfXN0YXRpYyBUcmFuc2Zvcm1Db29yZGluYXRlc1RvUmVmKGUsdCxpKXtyZXR1cm4gQ2UuVHJhbnNmb3JtQ29vcmRpbmF0ZXNGcm9tRmxvYXRzVG9SZWYoZS5feCxlLl95LGUuX3osdCxpKSxpfXN0YXRpYyBUcmFuc2Zvcm1Db29yZGluYXRlc0Zyb21GbG9hdHNUb1JlZihlLHQsaSxzLHIpe2NvbnN0IG49cy5tLGE9ZSpuWzBdK3Qqbls0XStpKm5bOF0rblsxMl0sbz1lKm5bMV0rdCpuWzVdK2kqbls5XStuWzEzXSxoPWUqblsyXSt0Km5bNl0raSpuWzEwXStuWzE0XSxsPWUqblszXSt0Km5bN10raSpuWzExXStuWzE1XTtyZXR1cm4gci54PWEsci55PW8sci56PWgsci53PWwscn1zdGF0aWMgVHJhbnNmb3JtTm9ybWFsKGUsdCl7Y29uc3QgaT1uZXcgZS5jb25zdHJ1Y3RvcjtyZXR1cm4gQ2UuVHJhbnNmb3JtTm9ybWFsVG9SZWYoZSx0LGkpLGl9c3RhdGljIFRyYW5zZm9ybU5vcm1hbFRvUmVmKGUsdCxpKXtjb25zdCBzPXQubSxyPWUueCpzWzBdK2UueSpzWzRdK2UueipzWzhdLG49ZS54KnNbMV0rZS55KnNbNV0rZS56KnNbOV0sYT1lLngqc1syXStlLnkqc1s2XStlLnoqc1sxMF07cmV0dXJuIGkueD1yLGkueT1uLGkuej1hLGkudz1lLncsaX1zdGF0aWMgVHJhbnNmb3JtTm9ybWFsRnJvbUZsb2F0c1RvUmVmKGUsdCxpLHMscixuKXtjb25zdCBhPXIubTtyZXR1cm4gbi54PWUqYVswXSt0KmFbNF0raSphWzhdLG4ueT1lKmFbMV0rdCphWzVdK2kqYVs5XSxuLno9ZSphWzJdK3QqYVs2XStpKmFbMTBdLG4udz1zLG59c3RhdGljIEZyb21WZWN0b3IzKGUsdD0wKXtyZXR1cm4gbmV3IENlKGUuX3gsZS5feSxlLl96LHQpfX1DZS5fWmVyb1JlYWRPbmx5PUNlLlplcm8oKTtjbGFzcyBae2NvbnN0cnVjdG9yKGU9MCx0PTAsaT0wLHM9MSl7dGhpcy5faXNEaXJ0eT0hMCx0aGlzLl94PWUsdGhpcy5feT10LHRoaXMuX3o9aSx0aGlzLl93PXN9Z2V0IHgoKXtyZXR1cm4gdGhpcy5feH1zZXQgeChlKXt0aGlzLl94PWUsdGhpcy5faXNEaXJ0eT0hMH1nZXQgeSgpe3JldHVybiB0aGlzLl95fXNldCB5KGUpe3RoaXMuX3k9ZSx0aGlzLl9pc0RpcnR5PSEwfWdldCB6KCl7cmV0dXJuIHRoaXMuX3p9c2V0IHooZSl7dGhpcy5fej1lLHRoaXMuX2lzRGlydHk9ITB9Z2V0IHcoKXtyZXR1cm4gdGhpcy5fd31zZXQgdyhlKXt0aGlzLl93PWUsdGhpcy5faXNEaXJ0eT0hMH10b1N0cmluZygpe3JldHVybmB7WDogJHt0aGlzLl94fSBZOiAke3RoaXMuX3l9IFo6ICR7dGhpcy5fen0gVzogJHt0aGlzLl93fX1gfWdldENsYXNzTmFtZSgpe3JldHVybiJRdWF0ZXJuaW9uIn1nZXRIYXNoQ29kZSgpe2NvbnN0IGU9c3QodGhpcy5feCksdD1zdCh0aGlzLl95KSxpPXN0KHRoaXMuX3opLHM9c3QodGhpcy5fdyk7bGV0IHI9ZTtyZXR1cm4gcj1yKjM5N150LHI9ciozOTdeaSxyPXIqMzk3XnMscn1hc0FycmF5KCl7cmV0dXJuW3RoaXMuX3gsdGhpcy5feSx0aGlzLl96LHRoaXMuX3ddfXRvQXJyYXkoZSx0PTApe3JldHVybiBlW3RdPXRoaXMueCxlW3QrMV09dGhpcy55LGVbdCsyXT10aGlzLnosZVt0KzNdPXRoaXMudyx0aGlzfWVxdWFscyhlKXtyZXR1cm4gZSYmdGhpcy5feD09PWUuX3gmJnRoaXMuX3k9PT1lLl95JiZ0aGlzLl96PT09ZS5feiYmdGhpcy5fdz09PWUuX3d9ZXF1YWxzV2l0aEVwc2lsb24oZSx0PXhlKXtyZXR1cm4gZSYmWC5XaXRoaW5FcHNpbG9uKHRoaXMuX3gsZS5feCx0KSYmWC5XaXRoaW5FcHNpbG9uKHRoaXMuX3ksZS5feSx0KSYmWC5XaXRoaW5FcHNpbG9uKHRoaXMuX3osZS5feix0KSYmWC5XaXRoaW5FcHNpbG9uKHRoaXMuX3csZS5fdyx0KX1jbG9uZSgpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3Rvcih0aGlzLl94LHRoaXMuX3ksdGhpcy5feix0aGlzLl93KX1jb3B5RnJvbShlKXtyZXR1cm4gdGhpcy54PWUuX3gsdGhpcy55PWUuX3ksdGhpcy56PWUuX3osdGhpcy53PWUuX3csdGhpc31jb3B5RnJvbUZsb2F0cyhlLHQsaSxzKXtyZXR1cm4gdGhpcy54PWUsdGhpcy55PXQsdGhpcy56PWksdGhpcy53PXMsdGhpc31zZXQoZSx0LGkscyl7cmV0dXJuIHRoaXMuY29weUZyb21GbG9hdHMoZSx0LGkscyl9YWRkKGUpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3Rvcih0aGlzLl94K2UuX3gsdGhpcy5feStlLl95LHRoaXMuX3orZS5feix0aGlzLl93K2UuX3cpfWFkZEluUGxhY2UoZSl7cmV0dXJuIHRoaXMuX3grPWUuX3gsdGhpcy5feSs9ZS5feSx0aGlzLl96Kz1lLl96LHRoaXMuX3crPWUuX3csdGhpc31zdWJ0cmFjdChlKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy5feC1lLl94LHRoaXMuX3ktZS5feSx0aGlzLl96LWUuX3osdGhpcy5fdy1lLl93KX1zdWJ0cmFjdEluUGxhY2UoZSl7cmV0dXJuIHRoaXMuX3gtPWUuX3gsdGhpcy5feS09ZS5feSx0aGlzLl96LT1lLl96LHRoaXMuX3ctPWUuX3csdGhpc31zY2FsZShlKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy5feCplLHRoaXMuX3kqZSx0aGlzLl96KmUsdGhpcy5fdyplKX1zY2FsZVRvUmVmKGUsdCl7cmV0dXJuIHQueD10aGlzLl94KmUsdC55PXRoaXMuX3kqZSx0Lno9dGhpcy5feiplLHQudz10aGlzLl93KmUsdH1zY2FsZUluUGxhY2UoZSl7cmV0dXJuIHRoaXMueCo9ZSx0aGlzLnkqPWUsdGhpcy56Kj1lLHRoaXMudyo9ZSx0aGlzfXNjYWxlQW5kQWRkVG9SZWYoZSx0KXtyZXR1cm4gdC54Kz10aGlzLl94KmUsdC55Kz10aGlzLl95KmUsdC56Kz10aGlzLl96KmUsdC53Kz10aGlzLl93KmUsdH1tdWx0aXBseShlKXtjb25zdCB0PW5ldyB0aGlzLmNvbnN0cnVjdG9yKDAsMCwwLDEpO3JldHVybiB0aGlzLm11bHRpcGx5VG9SZWYoZSx0KSx0fW11bHRpcGx5VG9SZWYoZSx0KXtjb25zdCBpPXRoaXMuX3gqZS5fdyt0aGlzLl95KmUuX3otdGhpcy5feiplLl95K3RoaXMuX3cqZS5feCxzPS10aGlzLl94KmUuX3ordGhpcy5feSplLl93K3RoaXMuX3oqZS5feCt0aGlzLl93KmUuX3kscj10aGlzLl94KmUuX3ktdGhpcy5feSplLl94K3RoaXMuX3oqZS5fdyt0aGlzLl93KmUuX3osbj0tdGhpcy5feCplLl94LXRoaXMuX3kqZS5feS10aGlzLl96KmUuX3ordGhpcy5fdyplLl93O3JldHVybiB0LmNvcHlGcm9tRmxvYXRzKGkscyxyLG4pLHR9bXVsdGlwbHlJblBsYWNlKGUpe3JldHVybiB0aGlzLm11bHRpcGx5VG9SZWYoZSx0aGlzKSx0aGlzfWNvbmp1Z2F0ZVRvUmVmKGUpe3JldHVybiBlLmNvcHlGcm9tRmxvYXRzKC10aGlzLl94LC10aGlzLl95LC10aGlzLl96LHRoaXMuX3cpLGV9Y29uanVnYXRlSW5QbGFjZSgpe3JldHVybiB0aGlzLngqPS0xLHRoaXMueSo9LTEsdGhpcy56Kj0tMSx0aGlzfWNvbmp1Z2F0ZSgpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3RvcigtdGhpcy5feCwtdGhpcy5feSwtdGhpcy5feix0aGlzLl93KX1pbnZlcnQoKXtjb25zdCBlPXRoaXMuY29uanVnYXRlKCksdD10aGlzLmxlbmd0aFNxdWFyZWQoKTtyZXR1cm4gdD09MHx8dD09MXx8ZS5zY2FsZUluUGxhY2UoMS90KSxlfWludmVydEluUGxhY2UoKXt0aGlzLmNvbmp1Z2F0ZUluUGxhY2UoKTtjb25zdCBlPXRoaXMubGVuZ3RoU3F1YXJlZCgpO3JldHVybiBlPT0wfHxlPT0xP3RoaXM6KHRoaXMuc2NhbGVJblBsYWNlKDEvZSksdGhpcyl9bGVuZ3RoU3F1YXJlZCgpe3JldHVybiB0aGlzLl94KnRoaXMuX3grdGhpcy5feSp0aGlzLl95K3RoaXMuX3oqdGhpcy5feit0aGlzLl93KnRoaXMuX3d9bGVuZ3RoKCl7cmV0dXJuIE1hdGguc3FydCh0aGlzLmxlbmd0aFNxdWFyZWQoKSl9bm9ybWFsaXplKCl7Y29uc3QgZT10aGlzLmxlbmd0aCgpO2lmKGU9PT0wKXJldHVybiB0aGlzO2NvbnN0IHQ9MS9lO3JldHVybiB0aGlzLnNjYWxlSW5QbGFjZSh0KSx0aGlzfW5vcm1hbGl6ZVRvTmV3KCl7Y29uc3QgZT10aGlzLmxlbmd0aCgpO2lmKGU9PT0wKXJldHVybiB0aGlzLmNsb25lKCk7Y29uc3QgdD0xL2U7cmV0dXJuIHRoaXMuc2NhbGUodCl9dG9FdWxlckFuZ2xlcygpe2NvbnN0IGU9cC5aZXJvKCk7cmV0dXJuIHRoaXMudG9FdWxlckFuZ2xlc1RvUmVmKGUpLGV9dG9FdWxlckFuZ2xlc1RvUmVmKGUpe2NvbnN0IHQ9dGhpcy5feixpPXRoaXMuX3gscz10aGlzLl95LHI9dGhpcy5fdyxuPXMqdC1pKnIsYT0uNDk5OTk5OTtpZihuPC1hKWUueT0yKk1hdGguYXRhbjIocyxyKSxlLng9TWF0aC5QSS8yLGUuej0wO2Vsc2UgaWYobj5hKWUueT0yKk1hdGguYXRhbjIocyxyKSxlLng9LU1hdGguUEkvMixlLno9MDtlbHNle2NvbnN0IG89cipyLGg9dCp0LGw9aSppLHU9cypzO2Uuej1NYXRoLmF0YW4yKDIqKGkqcyt0KnIpLC1oLWwrdStvKSxlLng9TWF0aC5hc2luKC0yKm4pLGUueT1NYXRoLmF0YW4yKDIqKHQqaStzKnIpLGgtbC11K28pfXJldHVybiBlfXRvUm90YXRpb25NYXRyaXgoZSl7cmV0dXJuIHguRnJvbVF1YXRlcm5pb25Ub1JlZih0aGlzLGUpLGV9ZnJvbVJvdGF0aW9uTWF0cml4KGUpe3JldHVybiBaLkZyb21Sb3RhdGlvbk1hdHJpeFRvUmVmKGUsdGhpcyksdGhpc31zdGF0aWMgRnJvbVJvdGF0aW9uTWF0cml4KGUpe2NvbnN0IHQ9bmV3IFo7cmV0dXJuIFouRnJvbVJvdGF0aW9uTWF0cml4VG9SZWYoZSx0KSx0fXN0YXRpYyBGcm9tUm90YXRpb25NYXRyaXhUb1JlZihlLHQpe2NvbnN0IGk9ZS5tLHM9aVswXSxyPWlbNF0sbj1pWzhdLGE9aVsxXSxvPWlbNV0saD1pWzldLGw9aVsyXSx1PWlbNl0sZD1pWzEwXSxmPXMrbytkO2xldCBfO3JldHVybiBmPjA/KF89LjUvTWF0aC5zcXJ0KGYrMSksdC53PS4yNS9fLHQueD0odS1oKSpfLHQueT0obi1sKSpfLHQuej0oYS1yKSpfKTpzPm8mJnM+ZD8oXz0yKk1hdGguc3FydCgxK3Mtby1kKSx0Lnc9KHUtaCkvXyx0Lng9LjI1Kl8sdC55PShyK2EpL18sdC56PShuK2wpL18pOm8+ZD8oXz0yKk1hdGguc3FydCgxK28tcy1kKSx0Lnc9KG4tbCkvXyx0Lng9KHIrYSkvXyx0Lnk9LjI1Kl8sdC56PShoK3UpL18pOihfPTIqTWF0aC5zcXJ0KDErZC1zLW8pLHQudz0oYS1yKS9fLHQueD0obitsKS9fLHQueT0oaCt1KS9fLHQuej0uMjUqXyksdH1zdGF0aWMgRG90KGUsdCl7cmV0dXJuIGUuX3gqdC5feCtlLl95KnQuX3krZS5feip0Ll96K2UuX3cqdC5fd31zdGF0aWMgQXJlQ2xvc2UoZSx0LGk9LjEpe2NvbnN0IHM9Wi5Eb3QoZSx0KTtyZXR1cm4gMS1zKnM8PWl9c3RhdGljIFNtb290aFRvUmVmKGUsdCxpLHMscil7bGV0IG49cz09PTA/MTppL3M7cmV0dXJuIG49WC5DbGFtcChuLDAsMSksWi5TbGVycFRvUmVmKGUsdCxuLHIpLHJ9c3RhdGljIFplcm8oKXtyZXR1cm4gbmV3IFooMCwwLDAsMCl9c3RhdGljIEludmVyc2UoZSl7cmV0dXJuIG5ldyBlLmNvbnN0cnVjdG9yKC1lLl94LC1lLl95LC1lLl96LGUuX3cpfXN0YXRpYyBJbnZlcnNlVG9SZWYoZSx0KXtyZXR1cm4gdC5zZXQoLWUuX3gsLWUuX3ksLWUuX3osZS5fdyksdH1zdGF0aWMgSWRlbnRpdHkoKXtyZXR1cm4gbmV3IFooMCwwLDAsMSl9c3RhdGljIElzSWRlbnRpdHkoZSl7cmV0dXJuIGUmJmUuX3g9PT0wJiZlLl95PT09MCYmZS5fej09PTAmJmUuX3c9PT0xfXN0YXRpYyBSb3RhdGlvbkF4aXMoZSx0KXtyZXR1cm4gWi5Sb3RhdGlvbkF4aXNUb1JlZihlLHQsbmV3IFopfXN0YXRpYyBSb3RhdGlvbkF4aXNUb1JlZihlLHQsaSl7Y29uc3Qgcz1NYXRoLnNpbih0LzIpO3JldHVybiBlLm5vcm1hbGl6ZSgpLGkudz1NYXRoLmNvcyh0LzIpLGkueD1lLl94KnMsaS55PWUuX3kqcyxpLno9ZS5feipzLGl9c3RhdGljIEZyb21BcnJheShlLHQpe3JldHVybiB0fHwodD0wKSxuZXcgWihlW3RdLGVbdCsxXSxlW3QrMl0sZVt0KzNdKX1zdGF0aWMgRnJvbUFycmF5VG9SZWYoZSx0LGkpe3JldHVybiBpLng9ZVt0XSxpLnk9ZVt0KzFdLGkuej1lW3QrMl0saS53PWVbdCszXSxpfXN0YXRpYyBGcm9tRXVsZXJBbmdsZXMoZSx0LGkpe2NvbnN0IHM9bmV3IFo7cmV0dXJuIFouUm90YXRpb25ZYXdQaXRjaFJvbGxUb1JlZih0LGUsaSxzKSxzfXN0YXRpYyBGcm9tRXVsZXJBbmdsZXNUb1JlZihlLHQsaSxzKXtyZXR1cm4gWi5Sb3RhdGlvbllhd1BpdGNoUm9sbFRvUmVmKHQsZSxpLHMpLHN9c3RhdGljIEZyb21FdWxlclZlY3RvcihlKXtjb25zdCB0PW5ldyBaO3JldHVybiBaLlJvdGF0aW9uWWF3UGl0Y2hSb2xsVG9SZWYoZS5feSxlLl94LGUuX3osdCksdH1zdGF0aWMgRnJvbUV1bGVyVmVjdG9yVG9SZWYoZSx0KXtyZXR1cm4gWi5Sb3RhdGlvbllhd1BpdGNoUm9sbFRvUmVmKGUuX3ksZS5feCxlLl96LHQpLHR9c3RhdGljIEZyb21Vbml0VmVjdG9yc1RvUmVmKGUsdCxpKXtjb25zdCBzPXAuRG90KGUsdCkrMTtyZXR1cm4gczx4ZT9NYXRoLmFicyhlLngpPk1hdGguYWJzKGUueik/aS5zZXQoLWUueSxlLngsMCwwKTppLnNldCgwLC1lLnosZS55LDApOihwLkNyb3NzVG9SZWYoZSx0LEQuVmVjdG9yM1swXSksaS5zZXQoRC5WZWN0b3IzWzBdLngsRC5WZWN0b3IzWzBdLnksRC5WZWN0b3IzWzBdLnoscykpLGkubm9ybWFsaXplKCl9c3RhdGljIFJvdGF0aW9uWWF3UGl0Y2hSb2xsKGUsdCxpKXtjb25zdCBzPW5ldyBaO3JldHVybiBaLlJvdGF0aW9uWWF3UGl0Y2hSb2xsVG9SZWYoZSx0LGkscyksc31zdGF0aWMgUm90YXRpb25ZYXdQaXRjaFJvbGxUb1JlZihlLHQsaSxzKXtjb25zdCByPWkqLjUsbj10Ki41LGE9ZSouNSxvPU1hdGguc2luKHIpLGg9TWF0aC5jb3MociksbD1NYXRoLnNpbihuKSx1PU1hdGguY29zKG4pLGQ9TWF0aC5zaW4oYSksZj1NYXRoLmNvcyhhKTtyZXR1cm4gcy54PWYqbCpoK2QqdSpvLHMueT1kKnUqaC1mKmwqbyxzLno9Zip1Km8tZCpsKmgscy53PWYqdSpoK2QqbCpvLHN9c3RhdGljIFJvdGF0aW9uQWxwaGFCZXRhR2FtbWEoZSx0LGkpe2NvbnN0IHM9bmV3IFo7cmV0dXJuIFouUm90YXRpb25BbHBoYUJldGFHYW1tYVRvUmVmKGUsdCxpLHMpLHN9c3RhdGljIFJvdGF0aW9uQWxwaGFCZXRhR2FtbWFUb1JlZihlLHQsaSxzKXtjb25zdCByPShpK2UpKi41LG49KGktZSkqLjUsYT10Ki41O3JldHVybiBzLng9TWF0aC5jb3MobikqTWF0aC5zaW4oYSkscy55PU1hdGguc2luKG4pKk1hdGguc2luKGEpLHMuej1NYXRoLnNpbihyKSpNYXRoLmNvcyhhKSxzLnc9TWF0aC5jb3MocikqTWF0aC5jb3MoYSksc31zdGF0aWMgUm90YXRpb25RdWF0ZXJuaW9uRnJvbUF4aXMoZSx0LGkpe2NvbnN0IHM9bmV3IFooMCwwLDAsMCk7cmV0dXJuIFouUm90YXRpb25RdWF0ZXJuaW9uRnJvbUF4aXNUb1JlZihlLHQsaSxzKSxzfXN0YXRpYyBSb3RhdGlvblF1YXRlcm5pb25Gcm9tQXhpc1RvUmVmKGUsdCxpLHMpe2NvbnN0IHI9Sy5NYXRyaXhbMF07cmV0dXJuIHguRnJvbVhZWkF4ZXNUb1JlZihlLm5vcm1hbGl6ZSgpLHQubm9ybWFsaXplKCksaS5ub3JtYWxpemUoKSxyKSxaLkZyb21Sb3RhdGlvbk1hdHJpeFRvUmVmKHIscyksc31zdGF0aWMgRnJvbUxvb2tEaXJlY3Rpb25MSChlLHQpe2NvbnN0IGk9bmV3IFo7cmV0dXJuIFouRnJvbUxvb2tEaXJlY3Rpb25MSFRvUmVmKGUsdCxpKSxpfXN0YXRpYyBGcm9tTG9va0RpcmVjdGlvbkxIVG9SZWYoZSx0LGkpe2NvbnN0IHM9Sy5NYXRyaXhbMF07cmV0dXJuIHguTG9va0RpcmVjdGlvbkxIVG9SZWYoZSx0LHMpLFouRnJvbVJvdGF0aW9uTWF0cml4VG9SZWYocyxpKSxpfXN0YXRpYyBGcm9tTG9va0RpcmVjdGlvblJIKGUsdCl7Y29uc3QgaT1uZXcgWjtyZXR1cm4gWi5Gcm9tTG9va0RpcmVjdGlvblJIVG9SZWYoZSx0LGkpLGl9c3RhdGljIEZyb21Mb29rRGlyZWN0aW9uUkhUb1JlZihlLHQsaSl7Y29uc3Qgcz1LLk1hdHJpeFswXTtyZXR1cm4geC5Mb29rRGlyZWN0aW9uUkhUb1JlZihlLHQscyksWi5Gcm9tUm90YXRpb25NYXRyaXhUb1JlZihzLGkpfXN0YXRpYyBTbGVycChlLHQsaSl7Y29uc3Qgcz1aLklkZW50aXR5KCk7cmV0dXJuIFouU2xlcnBUb1JlZihlLHQsaSxzKSxzfXN0YXRpYyBTbGVycFRvUmVmKGUsdCxpLHMpe2xldCByLG4sYT1lLl94KnQuX3grZS5feSp0Ll95K2UuX3oqdC5feitlLl93KnQuX3csbz0hMTtpZihhPDAmJihvPSEwLGE9LWEpLGE+Ljk5OTk5OSluPTEtaSxyPW8/LWk6aTtlbHNle2NvbnN0IGg9TWF0aC5hY29zKGEpLGw9MS9NYXRoLnNpbihoKTtuPU1hdGguc2luKCgxLWkpKmgpKmwscj1vPy1NYXRoLnNpbihpKmgpKmw6TWF0aC5zaW4oaSpoKSpsfXJldHVybiBzLng9biplLl94K3IqdC5feCxzLnk9biplLl95K3IqdC5feSxzLno9biplLl96K3IqdC5feixzLnc9biplLl93K3IqdC5fdyxzfXN0YXRpYyBIZXJtaXRlKGUsdCxpLHMscil7Y29uc3Qgbj1yKnIsYT1yKm4sbz0yKmEtMypuKzEsaD0tMiphKzMqbixsPWEtMipuK3IsdT1hLW4sZD1lLl94Km8raS5feCpoK3QuX3gqbCtzLl94KnUsZj1lLl95Km8raS5feSpoK3QuX3kqbCtzLl95KnUsXz1lLl96Km8raS5feipoK3QuX3oqbCtzLl96KnUsRT1lLl93Km8raS5fdypoK3QuX3cqbCtzLl93KnU7cmV0dXJuIG5ldyBlLmNvbnN0cnVjdG9yKGQsZixfLEUpfXN0YXRpYyBIZXJtaXRlMXN0RGVyaXZhdGl2ZShlLHQsaSxzLHIpe2NvbnN0IG49bmV3IGUuY29uc3RydWN0b3I7cmV0dXJuIHRoaXMuSGVybWl0ZTFzdERlcml2YXRpdmVUb1JlZihlLHQsaSxzLHIsbiksbn1zdGF0aWMgSGVybWl0ZTFzdERlcml2YXRpdmVUb1JlZihlLHQsaSxzLHIsbil7Y29uc3QgYT1yKnI7cmV0dXJuIG4ueD0oYS1yKSo2KmUueCsoMyphLTQqcisxKSp0LngrKC1hK3IpKjYqaS54KygzKmEtMipyKSpzLngsbi55PShhLXIpKjYqZS55KygzKmEtNCpyKzEpKnQueSsoLWErcikqNippLnkrKDMqYS0yKnIpKnMueSxuLno9KGEtcikqNiplLnorKDMqYS00KnIrMSkqdC56KygtYStyKSo2KmkueisoMyphLTIqcikqcy56LG4udz0oYS1yKSo2KmUudysoMyphLTQqcisxKSp0LncrKC1hK3IpKjYqaS53KygzKmEtMipyKSpzLncsbn19Y2xhc3MgeHtjb25zdHJ1Y3Rvcigpe3RoaXMuX2lzSWRlbnRpdHk9ITEsdGhpcy5faXNJZGVudGl0eURpcnR5PSEwLHRoaXMuX2lzSWRlbnRpdHkzeDI9ITAsdGhpcy5faXNJZGVudGl0eTN4MkRpcnR5PSEwLHRoaXMudXBkYXRlRmxhZz0tMSxVZS5NYXRyaXhUcmFja1ByZWNpc2lvbkNoYW5nZSYmVWUuTWF0cml4VHJhY2tlZE1hdHJpY2VzLnB1c2godGhpcyksdGhpcy5fbT1uZXcgVWUuTWF0cml4Q3VycmVudFR5cGUoMTYpLHRoaXMubWFya0FzVXBkYXRlZCgpfXN0YXRpYyBnZXQgVXNlNjRCaXRzKCl7cmV0dXJuIFVlLk1hdHJpeFVzZTY0Qml0c31nZXQgbSgpe3JldHVybiB0aGlzLl9tfW1hcmtBc1VwZGF0ZWQoKXt0aGlzLnVwZGF0ZUZsYWc9eC5fVXBkYXRlRmxhZ1NlZWQrKyx0aGlzLl9pc0lkZW50aXR5PSExLHRoaXMuX2lzSWRlbnRpdHkzeDI9ITEsdGhpcy5faXNJZGVudGl0eURpcnR5PSEwLHRoaXMuX2lzSWRlbnRpdHkzeDJEaXJ0eT0hMH1fdXBkYXRlSWRlbnRpdHlTdGF0dXMoZSx0PSExLGk9ITEscz0hMCl7dGhpcy5faXNJZGVudGl0eT1lLHRoaXMuX2lzSWRlbnRpdHkzeDI9ZXx8aSx0aGlzLl9pc0lkZW50aXR5RGlydHk9dGhpcy5faXNJZGVudGl0eT8hMTp0LHRoaXMuX2lzSWRlbnRpdHkzeDJEaXJ0eT10aGlzLl9pc0lkZW50aXR5M3gyPyExOnN9aXNJZGVudGl0eSgpe2lmKHRoaXMuX2lzSWRlbnRpdHlEaXJ0eSl7dGhpcy5faXNJZGVudGl0eURpcnR5PSExO2NvbnN0IGU9dGhpcy5fbTt0aGlzLl9pc0lkZW50aXR5PWVbMF09PT0xJiZlWzFdPT09MCYmZVsyXT09PTAmJmVbM109PT0wJiZlWzRdPT09MCYmZVs1XT09PTEmJmVbNl09PT0wJiZlWzddPT09MCYmZVs4XT09PTAmJmVbOV09PT0wJiZlWzEwXT09PTEmJmVbMTFdPT09MCYmZVsxMl09PT0wJiZlWzEzXT09PTAmJmVbMTRdPT09MCYmZVsxNV09PT0xfXJldHVybiB0aGlzLl9pc0lkZW50aXR5fWlzSWRlbnRpdHlBczN4Migpe3JldHVybiB0aGlzLl9pc0lkZW50aXR5M3gyRGlydHkmJih0aGlzLl9pc0lkZW50aXR5M3gyRGlydHk9ITEsdGhpcy5fbVswXSE9PTF8fHRoaXMuX21bNV0hPT0xfHx0aGlzLl9tWzE1XSE9PTE/dGhpcy5faXNJZGVudGl0eTN4Mj0hMTp0aGlzLl9tWzFdIT09MHx8dGhpcy5fbVsyXSE9PTB8fHRoaXMuX21bM10hPT0wfHx0aGlzLl9tWzRdIT09MHx8dGhpcy5fbVs2XSE9PTB8fHRoaXMuX21bN10hPT0wfHx0aGlzLl9tWzhdIT09MHx8dGhpcy5fbVs5XSE9PTB8fHRoaXMuX21bMTBdIT09MHx8dGhpcy5fbVsxMV0hPT0wfHx0aGlzLl9tWzEyXSE9PTB8fHRoaXMuX21bMTNdIT09MHx8dGhpcy5fbVsxNF0hPT0wP3RoaXMuX2lzSWRlbnRpdHkzeDI9ITE6dGhpcy5faXNJZGVudGl0eTN4Mj0hMCksdGhpcy5faXNJZGVudGl0eTN4Mn1kZXRlcm1pbmFudCgpe2lmKHRoaXMuX2lzSWRlbnRpdHk9PT0hMClyZXR1cm4gMTtjb25zdCBlPXRoaXMuX20sdD1lWzBdLGk9ZVsxXSxzPWVbMl0scj1lWzNdLG49ZVs0XSxhPWVbNV0sbz1lWzZdLGg9ZVs3XSxsPWVbOF0sdT1lWzldLGQ9ZVsxMF0sZj1lWzExXSxfPWVbMTJdLEU9ZVsxM10sbT1lWzE0XSx2PWVbMTVdLFM9ZCp2LW0qZix5PXUqdi1FKmYsQT11Km0tRSpkLEM9bCp2LV8qZixiPWwqbS1kKl8sTT1sKkUtXyp1LEw9KyhhKlMtbyp5K2gqQSksaz0tKG4qUy1vKkMraCpiKSx3PSsobip5LWEqQytoKk0pLGRlPS0obipBLWEqYitvKk0pO3JldHVybiB0KkwraSprK3MqdytyKmRlfXRvQXJyYXkoKXtyZXR1cm4gdGhpcy5fbX1hc0FycmF5KCl7cmV0dXJuIHRoaXMuX219aW52ZXJ0KCl7cmV0dXJuIHRoaXMuaW52ZXJ0VG9SZWYodGhpcyksdGhpc31yZXNldCgpe3JldHVybiB4LkZyb21WYWx1ZXNUb1JlZigwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLHRoaXMpLHRoaXMuX3VwZGF0ZUlkZW50aXR5U3RhdHVzKCExKSx0aGlzfWFkZChlKXtjb25zdCB0PW5ldyB0aGlzLmNvbnN0cnVjdG9yO3JldHVybiB0aGlzLmFkZFRvUmVmKGUsdCksdH1hZGRUb1JlZihlLHQpe2NvbnN0IGk9dGhpcy5fbSxzPXQuX20scj1lLm07Zm9yKGxldCBuPTA7bjwxNjtuKyspc1tuXT1pW25dK3Jbbl07cmV0dXJuIHQubWFya0FzVXBkYXRlZCgpLHR9YWRkVG9TZWxmKGUpe2NvbnN0IHQ9dGhpcy5fbSxpPWUubTtmb3IobGV0IHM9MDtzPDE2O3MrKyl0W3NdKz1pW3NdO3JldHVybiB0aGlzLm1hcmtBc1VwZGF0ZWQoKSx0aGlzfWludmVydFRvUmVmKGUpe2lmKHRoaXMuX2lzSWRlbnRpdHk9PT0hMClyZXR1cm4geC5JZGVudGl0eVRvUmVmKGUpLGU7Y29uc3QgdD10aGlzLl9tLGk9dFswXSxzPXRbMV0scj10WzJdLG49dFszXSxhPXRbNF0sbz10WzVdLGg9dFs2XSxsPXRbN10sdT10WzhdLGQ9dFs5XSxmPXRbMTBdLF89dFsxMV0sRT10WzEyXSxtPXRbMTNdLHY9dFsxNF0sUz10WzE1XSx5PWYqUy12Kl8sQT1kKlMtbSpfLEM9ZCp2LW0qZixiPXUqUy1FKl8sTT11KnYtZipFLEw9dSptLUUqZCxrPSsobyp5LWgqQStsKkMpLHc9LShhKnktaCpiK2wqTSksZGU9KyhhKkEtbypiK2wqTCksY2U9LShhKkMtbypNK2gqTCksc2U9aSprK3MqdytyKmRlK24qY2U7aWYoc2U9PT0wKXJldHVybiBlLmNvcHlGcm9tKHRoaXMpLGU7Y29uc3QgdGU9MS9zZSxGZT1oKlMtdipsLHdlPW8qUy1tKmwsSGU9byp2LW0qaCxLZT1hKlMtRSpsLFllPWEqdi1FKmgscHQ9YSptLUUqbyxodD1oKl8tZipsLHd0PW8qXy1kKmwsc2k9bypmLWQqaCxkcz1hKl8tdSpsLGZzPWEqZi11KmgsX3M9YSpkLXUqbyxYcz0tKHMqeS1yKkErbipDKSxIcz0rKGkqeS1yKmIrbipNKSxLcz0tKGkqQS1zKmIrbipMKSxZcz0rKGkqQy1zKk0rcipMKSxacz0rKHMqRmUtcip3ZStuKkhlKSxxcz0tKGkqRmUtcipLZStuKlllKSxIdD0rKGkqd2UtcypLZStuKnB0KSxLdD0tKGkqSGUtcypZZStyKnB0KSxZdD0tKHMqaHQtcip3dCtuKnNpKSxadD0rKGkqaHQtcipkcytuKmZzKSx3bD0tKGkqd3QtcypkcytuKl9zKSxPbD0rKGkqc2ktcypmcytyKl9zKTtyZXR1cm4geC5Gcm9tVmFsdWVzVG9SZWYoayp0ZSxYcyp0ZSxacyp0ZSxZdCp0ZSx3KnRlLEhzKnRlLHFzKnRlLFp0KnRlLGRlKnRlLEtzKnRlLEh0KnRlLHdsKnRlLGNlKnRlLFlzKnRlLEt0KnRlLE9sKnRlLGUpLGV9YWRkQXRJbmRleChlLHQpe3JldHVybiB0aGlzLl9tW2VdKz10LHRoaXMubWFya0FzVXBkYXRlZCgpLHRoaXN9bXVsdGlwbHlBdEluZGV4KGUsdCl7cmV0dXJuIHRoaXMuX21bZV0qPXQsdGhpcy5tYXJrQXNVcGRhdGVkKCksdGhpc31zZXRUcmFuc2xhdGlvbkZyb21GbG9hdHMoZSx0LGkpe3JldHVybiB0aGlzLl9tWzEyXT1lLHRoaXMuX21bMTNdPXQsdGhpcy5fbVsxNF09aSx0aGlzLm1hcmtBc1VwZGF0ZWQoKSx0aGlzfWFkZFRyYW5zbGF0aW9uRnJvbUZsb2F0cyhlLHQsaSl7cmV0dXJuIHRoaXMuX21bMTJdKz1lLHRoaXMuX21bMTNdKz10LHRoaXMuX21bMTRdKz1pLHRoaXMubWFya0FzVXBkYXRlZCgpLHRoaXN9c2V0VHJhbnNsYXRpb24oZSl7cmV0dXJuIHRoaXMuc2V0VHJhbnNsYXRpb25Gcm9tRmxvYXRzKGUuX3gsZS5feSxlLl96KX1nZXRUcmFuc2xhdGlvbigpe3JldHVybiBuZXcgcCh0aGlzLl9tWzEyXSx0aGlzLl9tWzEzXSx0aGlzLl9tWzE0XSl9Z2V0VHJhbnNsYXRpb25Ub1JlZihlKXtyZXR1cm4gZS54PXRoaXMuX21bMTJdLGUueT10aGlzLl9tWzEzXSxlLno9dGhpcy5fbVsxNF0sZX1yZW1vdmVSb3RhdGlvbkFuZFNjYWxpbmcoKXtjb25zdCBlPXRoaXMubTtyZXR1cm4geC5Gcm9tVmFsdWVzVG9SZWYoMSwwLDAsMCwwLDEsMCwwLDAsMCwxLDAsZVsxMl0sZVsxM10sZVsxNF0sZVsxNV0sdGhpcyksdGhpcy5fdXBkYXRlSWRlbnRpdHlTdGF0dXMoZVsxMl09PT0wJiZlWzEzXT09PTAmJmVbMTRdPT09MCYmZVsxNV09PT0xKSx0aGlzfW11bHRpcGx5KGUpe2NvbnN0IHQ9bmV3IHRoaXMuY29uc3RydWN0b3I7cmV0dXJuIHRoaXMubXVsdGlwbHlUb1JlZihlLHQpLHR9Y29weUZyb20oZSl7ZS5jb3B5VG9BcnJheSh0aGlzLl9tKTtjb25zdCB0PWU7cmV0dXJuIHRoaXMudXBkYXRlRmxhZz10LnVwZGF0ZUZsYWcsdGhpcy5fdXBkYXRlSWRlbnRpdHlTdGF0dXModC5faXNJZGVudGl0eSx0Ll9pc0lkZW50aXR5RGlydHksdC5faXNJZGVudGl0eTN4Mix0Ll9pc0lkZW50aXR5M3gyRGlydHkpLHRoaXN9Y29weVRvQXJyYXkoZSx0PTApe2NvbnN0IGk9dGhpcy5fbTtyZXR1cm4gZVt0XT1pWzBdLGVbdCsxXT1pWzFdLGVbdCsyXT1pWzJdLGVbdCszXT1pWzNdLGVbdCs0XT1pWzRdLGVbdCs1XT1pWzVdLGVbdCs2XT1pWzZdLGVbdCs3XT1pWzddLGVbdCs4XT1pWzhdLGVbdCs5XT1pWzldLGVbdCsxMF09aVsxMF0sZVt0KzExXT1pWzExXSxlW3QrMTJdPWlbMTJdLGVbdCsxM109aVsxM10sZVt0KzE0XT1pWzE0XSxlW3QrMTVdPWlbMTVdLHRoaXN9bXVsdGlwbHlUb1JlZihlLHQpe3JldHVybiB0aGlzLl9pc0lkZW50aXR5Pyh0LmNvcHlGcm9tKGUpLHQpOmUuX2lzSWRlbnRpdHk/KHQuY29weUZyb20odGhpcyksdCk6KHRoaXMubXVsdGlwbHlUb0FycmF5KGUsdC5fbSwwKSx0Lm1hcmtBc1VwZGF0ZWQoKSx0KX1tdWx0aXBseVRvQXJyYXkoZSx0LGkpe2NvbnN0IHM9dGhpcy5fbSxyPWUubSxuPXNbMF0sYT1zWzFdLG89c1syXSxoPXNbM10sbD1zWzRdLHU9c1s1XSxkPXNbNl0sZj1zWzddLF89c1s4XSxFPXNbOV0sbT1zWzEwXSx2PXNbMTFdLFM9c1sxMl0seT1zWzEzXSxBPXNbMTRdLEM9c1sxNV0sYj1yWzBdLE09clsxXSxMPXJbMl0saz1yWzNdLHc9cls0XSxkZT1yWzVdLGNlPXJbNl0sc2U9cls3XSx0ZT1yWzhdLEZlPXJbOV0sd2U9clsxMF0sSGU9clsxMV0sS2U9clsxMl0sWWU9clsxM10scHQ9clsxNF0saHQ9clsxNV07cmV0dXJuIHRbaV09bipiK2EqdytvKnRlK2gqS2UsdFtpKzFdPW4qTSthKmRlK28qRmUraCpZZSx0W2krMl09bipMK2EqY2Urbyp3ZStoKnB0LHRbaSszXT1uKmsrYSpzZStvKkhlK2gqaHQsdFtpKzRdPWwqYit1KncrZCp0ZStmKktlLHRbaSs1XT1sKk0rdSpkZStkKkZlK2YqWWUsdFtpKzZdPWwqTCt1KmNlK2Qqd2UrZipwdCx0W2krN109bCprK3Uqc2UrZCpIZStmKmh0LHRbaSs4XT1fKmIrRSp3K20qdGUrdipLZSx0W2krOV09XypNK0UqZGUrbSpGZSt2KlllLHRbaSsxMF09XypMK0UqY2UrbSp3ZSt2KnB0LHRbaSsxMV09XyprK0Uqc2UrbSpIZSt2Kmh0LHRbaSsxMl09UypiK3kqdytBKnRlK0MqS2UsdFtpKzEzXT1TKk0reSpkZStBKkZlK0MqWWUsdFtpKzE0XT1TKkwreSpjZStBKndlK0MqcHQsdFtpKzE1XT1TKmsreSpzZStBKkhlK0MqaHQsdGhpc31lcXVhbHMoZSl7Y29uc3QgdD1lO2lmKCF0KXJldHVybiExO2lmKCh0aGlzLl9pc0lkZW50aXR5fHx0Ll9pc0lkZW50aXR5KSYmIXRoaXMuX2lzSWRlbnRpdHlEaXJ0eSYmIXQuX2lzSWRlbnRpdHlEaXJ0eSlyZXR1cm4gdGhpcy5faXNJZGVudGl0eSYmdC5faXNJZGVudGl0eTtjb25zdCBpPXRoaXMubSxzPXQubTtyZXR1cm4gaVswXT09PXNbMF0mJmlbMV09PT1zWzFdJiZpWzJdPT09c1syXSYmaVszXT09PXNbM10mJmlbNF09PT1zWzRdJiZpWzVdPT09c1s1XSYmaVs2XT09PXNbNl0mJmlbN109PT1zWzddJiZpWzhdPT09c1s4XSYmaVs5XT09PXNbOV0mJmlbMTBdPT09c1sxMF0mJmlbMTFdPT09c1sxMV0mJmlbMTJdPT09c1sxMl0mJmlbMTNdPT09c1sxM10mJmlbMTRdPT09c1sxNF0mJmlbMTVdPT09c1sxNV19Y2xvbmUoKXtjb25zdCBlPW5ldyB0aGlzLmNvbnN0cnVjdG9yO3JldHVybiBlLmNvcHlGcm9tKHRoaXMpLGV9Z2V0Q2xhc3NOYW1lKCl7cmV0dXJuIk1hdHJpeCJ9Z2V0SGFzaENvZGUoKXtsZXQgZT1zdCh0aGlzLl9tWzBdKTtmb3IobGV0IHQ9MTt0PDE2O3QrKyllPWUqMzk3XnN0KHRoaXMuX21bdF0pO3JldHVybiBlfWRlY29tcG9zZVRvVHJhbnNmb3JtTm9kZShlKXtyZXR1cm4gZS5yb3RhdGlvblF1YXRlcm5pb249ZS5yb3RhdGlvblF1YXRlcm5pb258fG5ldyBaLHRoaXMuZGVjb21wb3NlKGUuc2NhbGluZyxlLnJvdGF0aW9uUXVhdGVybmlvbixlLnBvc2l0aW9uKX1kZWNvbXBvc2UoZSx0LGkscyl7aWYodGhpcy5faXNJZGVudGl0eSlyZXR1cm4gaSYmaS5zZXRBbGwoMCksZSYmZS5zZXRBbGwoMSksdCYmdC5jb3B5RnJvbUZsb2F0cygwLDAsMCwxKSwhMDtjb25zdCByPXRoaXMuX207aWYoaSYmaS5jb3B5RnJvbUZsb2F0cyhyWzEyXSxyWzEzXSxyWzE0XSksZT1lfHxLLlZlY3RvcjNbMF0sZS54PU1hdGguc3FydChyWzBdKnJbMF0rclsxXSpyWzFdK3JbMl0qclsyXSksZS55PU1hdGguc3FydChyWzRdKnJbNF0rcls1XSpyWzVdK3JbNl0qcls2XSksZS56PU1hdGguc3FydChyWzhdKnJbOF0rcls5XSpyWzldK3JbMTBdKnJbMTBdKSxzKXtjb25zdCBuPXMuc2NhbGluZy54PDA/LTE6MSxhPXMuc2NhbGluZy55PDA/LTE6MSxvPXMuc2NhbGluZy56PDA/LTE6MTtlLngqPW4sZS55Kj1hLGUueio9b31lbHNlIHRoaXMuZGV0ZXJtaW5hbnQoKTw9MCYmKGUueSo9LTEpO2lmKGUuX3g9PT0wfHxlLl95PT09MHx8ZS5fej09PTApcmV0dXJuIHQmJnQuY29weUZyb21GbG9hdHMoMCwwLDAsMSksITE7aWYodCl7Y29uc3Qgbj0xL2UuX3gsYT0xL2UuX3ksbz0xL2UuX3o7eC5Gcm9tVmFsdWVzVG9SZWYoclswXSpuLHJbMV0qbixyWzJdKm4sMCxyWzRdKmEscls1XSphLHJbNl0qYSwwLHJbOF0qbyxyWzldKm8sclsxMF0qbywwLDAsMCwwLDEsSy5NYXRyaXhbMF0pLFouRnJvbVJvdGF0aW9uTWF0cml4VG9SZWYoSy5NYXRyaXhbMF0sdCl9cmV0dXJuITB9Z2V0Um93KGUpe2lmKGU8MHx8ZT4zKXJldHVybiBudWxsO2NvbnN0IHQ9ZSo0O3JldHVybiBuZXcgQ2UodGhpcy5fbVt0KzBdLHRoaXMuX21bdCsxXSx0aGlzLl9tW3QrMl0sdGhpcy5fbVt0KzNdKX1nZXRSb3dUb1JlZihlLHQpe2lmKGU+PTAmJmU8Myl7Y29uc3QgaT1lKjQ7dC54PXRoaXMuX21baSswXSx0Lnk9dGhpcy5fbVtpKzFdLHQuej10aGlzLl9tW2krMl0sdC53PXRoaXMuX21baSszXX1yZXR1cm4gdH1zZXRSb3coZSx0KXtyZXR1cm4gdGhpcy5zZXRSb3dGcm9tRmxvYXRzKGUsdC54LHQueSx0LnosdC53KX10cmFuc3Bvc2UoKXtjb25zdCBlPW5ldyB0aGlzLmNvbnN0cnVjdG9yO3JldHVybiB4LlRyYW5zcG9zZVRvUmVmKHRoaXMsZSksZX10cmFuc3Bvc2VUb1JlZihlKXtyZXR1cm4geC5UcmFuc3Bvc2VUb1JlZih0aGlzLGUpLGV9c2V0Um93RnJvbUZsb2F0cyhlLHQsaSxzLHIpe2lmKGU8MHx8ZT4zKXJldHVybiB0aGlzO2NvbnN0IG49ZSo0O3JldHVybiB0aGlzLl9tW24rMF09dCx0aGlzLl9tW24rMV09aSx0aGlzLl9tW24rMl09cyx0aGlzLl9tW24rM109cix0aGlzLm1hcmtBc1VwZGF0ZWQoKSx0aGlzfXNjYWxlKGUpe2NvbnN0IHQ9bmV3IHRoaXMuY29uc3RydWN0b3I7cmV0dXJuIHRoaXMuc2NhbGVUb1JlZihlLHQpLHR9c2NhbGVUb1JlZihlLHQpe2ZvcihsZXQgaT0wO2k8MTY7aSsrKXQuX21baV09dGhpcy5fbVtpXSplO3JldHVybiB0Lm1hcmtBc1VwZGF0ZWQoKSx0fXNjYWxlQW5kQWRkVG9SZWYoZSx0KXtmb3IobGV0IGk9MDtpPDE2O2krKyl0Ll9tW2ldKz10aGlzLl9tW2ldKmU7cmV0dXJuIHQubWFya0FzVXBkYXRlZCgpLHR9dG9Ob3JtYWxNYXRyaXgoZSl7Y29uc3QgdD1LLk1hdHJpeFswXTt0aGlzLmludmVydFRvUmVmKHQpLHQudHJhbnNwb3NlVG9SZWYoZSk7Y29uc3QgaT1lLl9tO3JldHVybiB4LkZyb21WYWx1ZXNUb1JlZihpWzBdLGlbMV0saVsyXSwwLGlbNF0saVs1XSxpWzZdLDAsaVs4XSxpWzldLGlbMTBdLDAsMCwwLDAsMSxlKSxlfWdldFJvdGF0aW9uTWF0cml4KCl7Y29uc3QgZT1uZXcgdGhpcy5jb25zdHJ1Y3RvcjtyZXR1cm4gdGhpcy5nZXRSb3RhdGlvbk1hdHJpeFRvUmVmKGUpLGV9Z2V0Um90YXRpb25NYXRyaXhUb1JlZihlKXtjb25zdCB0PUsuVmVjdG9yM1swXTtpZighdGhpcy5kZWNvbXBvc2UodCkpcmV0dXJuIHguSWRlbnRpdHlUb1JlZihlKSxlO2NvbnN0IGk9dGhpcy5fbSxzPTEvdC5feCxyPTEvdC5feSxuPTEvdC5fejtyZXR1cm4geC5Gcm9tVmFsdWVzVG9SZWYoaVswXSpzLGlbMV0qcyxpWzJdKnMsMCxpWzRdKnIsaVs1XSpyLGlbNl0qciwwLGlbOF0qbixpWzldKm4saVsxMF0qbiwwLDAsMCwwLDEsZSksZX10b2dnbGVNb2RlbE1hdHJpeEhhbmRJblBsYWNlKCl7Y29uc3QgZT10aGlzLl9tO3JldHVybiBlWzJdKj0tMSxlWzZdKj0tMSxlWzhdKj0tMSxlWzldKj0tMSxlWzE0XSo9LTEsdGhpcy5tYXJrQXNVcGRhdGVkKCksdGhpc310b2dnbGVQcm9qZWN0aW9uTWF0cml4SGFuZEluUGxhY2UoKXtjb25zdCBlPXRoaXMuX207cmV0dXJuIGVbOF0qPS0xLGVbOV0qPS0xLGVbMTBdKj0tMSxlWzExXSo9LTEsdGhpcy5tYXJrQXNVcGRhdGVkKCksdGhpc31zdGF0aWMgRnJvbUFycmF5KGUsdD0wKXtjb25zdCBpPW5ldyB4O3JldHVybiB4LkZyb21BcnJheVRvUmVmKGUsdCxpKSxpfXN0YXRpYyBGcm9tQXJyYXlUb1JlZihlLHQsaSl7Zm9yKGxldCBzPTA7czwxNjtzKyspaS5fbVtzXT1lW3MrdF07cmV0dXJuIGkubWFya0FzVXBkYXRlZCgpLGl9c3RhdGljIEZyb21GbG9hdDMyQXJyYXlUb1JlZlNjYWxlZChlLHQsaSxzKXtmb3IobGV0IHI9MDtyPDE2O3IrKylzLl9tW3JdPWVbcit0XSppO3JldHVybiBzLm1hcmtBc1VwZGF0ZWQoKSxzfXN0YXRpYyBnZXQgSWRlbnRpdHlSZWFkT25seSgpe3JldHVybiB4Ll9JZGVudGl0eVJlYWRPbmx5fXN0YXRpYyBGcm9tVmFsdWVzVG9SZWYoZSx0LGkscyxyLG4sYSxvLGgsbCx1LGQsZixfLEUsbSx2KXtjb25zdCBTPXYuX207U1swXT1lLFNbMV09dCxTWzJdPWksU1szXT1zLFNbNF09cixTWzVdPW4sU1s2XT1hLFNbN109byxTWzhdPWgsU1s5XT1sLFNbMTBdPXUsU1sxMV09ZCxTWzEyXT1mLFNbMTNdPV8sU1sxNF09RSxTWzE1XT1tLHYubWFya0FzVXBkYXRlZCgpfXN0YXRpYyBGcm9tVmFsdWVzKGUsdCxpLHMscixuLGEsbyxoLGwsdSxkLGYsXyxFLG0pe2NvbnN0IHY9bmV3IHgsUz12Ll9tO3JldHVybiBTWzBdPWUsU1sxXT10LFNbMl09aSxTWzNdPXMsU1s0XT1yLFNbNV09bixTWzZdPWEsU1s3XT1vLFNbOF09aCxTWzldPWwsU1sxMF09dSxTWzExXT1kLFNbMTJdPWYsU1sxM109XyxTWzE0XT1FLFNbMTVdPW0sdi5tYXJrQXNVcGRhdGVkKCksdn1zdGF0aWMgQ29tcG9zZShlLHQsaSl7Y29uc3Qgcz1uZXcgeDtyZXR1cm4geC5Db21wb3NlVG9SZWYoZSx0LGkscyksc31zdGF0aWMgQ29tcG9zZVRvUmVmKGUsdCxpLHMpe2NvbnN0IHI9cy5fbSxuPXQuX3gsYT10Ll95LG89dC5feixoPXQuX3csbD1uK24sdT1hK2EsZD1vK28sZj1uKmwsXz1uKnUsRT1uKmQsbT1hKnUsdj1hKmQsUz1vKmQseT1oKmwsQT1oKnUsQz1oKmQsYj1lLl94LE09ZS5feSxMPWUuX3o7cmV0dXJuIHJbMF09KDEtKG0rUykpKmIsclsxXT0oXytDKSpiLHJbMl09KEUtQSkqYixyWzNdPTAscls0XT0oXy1DKSpNLHJbNV09KDEtKGYrUykpKk0scls2XT0odit5KSpNLHJbN109MCxyWzhdPShFK0EpKkwscls5XT0odi15KSpMLHJbMTBdPSgxLShmK20pKSpMLHJbMTFdPTAsclsxMl09aS5feCxyWzEzXT1pLl95LHJbMTRdPWkuX3osclsxNV09MSxzLm1hcmtBc1VwZGF0ZWQoKSxzfXN0YXRpYyBJZGVudGl0eSgpe2NvbnN0IGU9eC5Gcm9tVmFsdWVzKDEsMCwwLDAsMCwxLDAsMCwwLDAsMSwwLDAsMCwwLDEpO3JldHVybiBlLl91cGRhdGVJZGVudGl0eVN0YXR1cyghMCksZX1zdGF0aWMgSWRlbnRpdHlUb1JlZihlKXtyZXR1cm4geC5Gcm9tVmFsdWVzVG9SZWYoMSwwLDAsMCwwLDEsMCwwLDAsMCwxLDAsMCwwLDAsMSxlKSxlLl91cGRhdGVJZGVudGl0eVN0YXR1cyghMCksZX1zdGF0aWMgWmVybygpe2NvbnN0IGU9eC5Gcm9tVmFsdWVzKDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDApO3JldHVybiBlLl91cGRhdGVJZGVudGl0eVN0YXR1cyghMSksZX1zdGF0aWMgUm90YXRpb25YKGUpe2NvbnN0IHQ9bmV3IHg7cmV0dXJuIHguUm90YXRpb25YVG9SZWYoZSx0KSx0fXN0YXRpYyBJbnZlcnQoZSl7Y29uc3QgdD1uZXcgZS5jb25zdHJ1Y3RvcjtyZXR1cm4gZS5pbnZlcnRUb1JlZih0KSx0fXN0YXRpYyBSb3RhdGlvblhUb1JlZihlLHQpe2NvbnN0IGk9TWF0aC5zaW4oZSkscz1NYXRoLmNvcyhlKTtyZXR1cm4geC5Gcm9tVmFsdWVzVG9SZWYoMSwwLDAsMCwwLHMsaSwwLDAsLWkscywwLDAsMCwwLDEsdCksdC5fdXBkYXRlSWRlbnRpdHlTdGF0dXMocz09PTEmJmk9PT0wKSx0fXN0YXRpYyBSb3RhdGlvblkoZSl7Y29uc3QgdD1uZXcgeDtyZXR1cm4geC5Sb3RhdGlvbllUb1JlZihlLHQpLHR9c3RhdGljIFJvdGF0aW9uWVRvUmVmKGUsdCl7Y29uc3QgaT1NYXRoLnNpbihlKSxzPU1hdGguY29zKGUpO3JldHVybiB4LkZyb21WYWx1ZXNUb1JlZihzLDAsLWksMCwwLDEsMCwwLGksMCxzLDAsMCwwLDAsMSx0KSx0Ll91cGRhdGVJZGVudGl0eVN0YXR1cyhzPT09MSYmaT09PTApLHR9c3RhdGljIFJvdGF0aW9uWihlKXtjb25zdCB0PW5ldyB4O3JldHVybiB4LlJvdGF0aW9uWlRvUmVmKGUsdCksdH1zdGF0aWMgUm90YXRpb25aVG9SZWYoZSx0KXtjb25zdCBpPU1hdGguc2luKGUpLHM9TWF0aC5jb3MoZSk7cmV0dXJuIHguRnJvbVZhbHVlc1RvUmVmKHMsaSwwLDAsLWkscywwLDAsMCwwLDEsMCwwLDAsMCwxLHQpLHQuX3VwZGF0ZUlkZW50aXR5U3RhdHVzKHM9PT0xJiZpPT09MCksdH1zdGF0aWMgUm90YXRpb25BeGlzKGUsdCl7Y29uc3QgaT1uZXcgeDtyZXR1cm4geC5Sb3RhdGlvbkF4aXNUb1JlZihlLHQsaSksaX1zdGF0aWMgUm90YXRpb25BeGlzVG9SZWYoZSx0LGkpe2NvbnN0IHM9TWF0aC5zaW4oLXQpLHI9TWF0aC5jb3MoLXQpLG49MS1yO2Uubm9ybWFsaXplKCk7Y29uc3QgYT1pLl9tO3JldHVybiBhWzBdPWUuX3gqZS5feCpuK3IsYVsxXT1lLl94KmUuX3kqbi1lLl96KnMsYVsyXT1lLl94KmUuX3oqbitlLl95KnMsYVszXT0wLGFbNF09ZS5feSplLl94Km4rZS5feipzLGFbNV09ZS5feSplLl95Km4rcixhWzZdPWUuX3kqZS5feipuLWUuX3gqcyxhWzddPTAsYVs4XT1lLl96KmUuX3gqbi1lLl95KnMsYVs5XT1lLl96KmUuX3kqbitlLl94KnMsYVsxMF09ZS5feiplLl96Km4rcixhWzExXT0wLGFbMTJdPTAsYVsxM109MCxhWzE0XT0wLGFbMTVdPTEsaS5tYXJrQXNVcGRhdGVkKCksaX1zdGF0aWMgUm90YXRpb25BbGlnblRvUmVmKGUsdCxpKXtjb25zdCBzPXAuRG90KHQsZSkscj1pLl9tO2lmKHM8LTEreGUpclswXT0tMSxyWzFdPTAsclsyXT0wLHJbM109MCxyWzRdPTAscls1XT0tMSxyWzZdPTAscls3XT0wLHJbOF09MCxyWzldPTAsclsxMF09MSxyWzExXT0wO2Vsc2V7Y29uc3Qgbj1wLkNyb3NzKHQsZSksYT0xLygxK3MpO3JbMF09bi5feCpuLl94KmErcyxyWzFdPW4uX3kqbi5feCphLW4uX3osclsyXT1uLl96Km4uX3gqYStuLl95LHJbM109MCxyWzRdPW4uX3gqbi5feSphK24uX3oscls1XT1uLl95Km4uX3kqYStzLHJbNl09bi5feipuLl95KmEtbi5feCxyWzddPTAscls4XT1uLl94Km4uX3oqYS1uLl95LHJbOV09bi5feSpuLl96KmErbi5feCxyWzEwXT1uLl96Km4uX3oqYStzLHJbMTFdPTB9cmV0dXJuIHJbMTJdPTAsclsxM109MCxyWzE0XT0wLHJbMTVdPTEsaS5tYXJrQXNVcGRhdGVkKCksaX1zdGF0aWMgUm90YXRpb25ZYXdQaXRjaFJvbGwoZSx0LGkpe2NvbnN0IHM9bmV3IHg7cmV0dXJuIHguUm90YXRpb25ZYXdQaXRjaFJvbGxUb1JlZihlLHQsaSxzKSxzfXN0YXRpYyBSb3RhdGlvbllhd1BpdGNoUm9sbFRvUmVmKGUsdCxpLHMpe3JldHVybiBaLlJvdGF0aW9uWWF3UGl0Y2hSb2xsVG9SZWYoZSx0LGksSy5RdWF0ZXJuaW9uWzBdKSxLLlF1YXRlcm5pb25bMF0udG9Sb3RhdGlvbk1hdHJpeChzKSxzfXN0YXRpYyBTY2FsaW5nKGUsdCxpKXtjb25zdCBzPW5ldyB4O3JldHVybiB4LlNjYWxpbmdUb1JlZihlLHQsaSxzKSxzfXN0YXRpYyBTY2FsaW5nVG9SZWYoZSx0LGkscyl7cmV0dXJuIHguRnJvbVZhbHVlc1RvUmVmKGUsMCwwLDAsMCx0LDAsMCwwLDAsaSwwLDAsMCwwLDEscykscy5fdXBkYXRlSWRlbnRpdHlTdGF0dXMoZT09PTEmJnQ9PT0xJiZpPT09MSksc31zdGF0aWMgVHJhbnNsYXRpb24oZSx0LGkpe2NvbnN0IHM9bmV3IHg7cmV0dXJuIHguVHJhbnNsYXRpb25Ub1JlZihlLHQsaSxzKSxzfXN0YXRpYyBUcmFuc2xhdGlvblRvUmVmKGUsdCxpLHMpe3JldHVybiB4LkZyb21WYWx1ZXNUb1JlZigxLDAsMCwwLDAsMSwwLDAsMCwwLDEsMCxlLHQsaSwxLHMpLHMuX3VwZGF0ZUlkZW50aXR5U3RhdHVzKGU9PT0wJiZ0PT09MCYmaT09PTApLHN9c3RhdGljIExlcnAoZSx0LGkpe2NvbnN0IHM9bmV3IGUuY29uc3RydWN0b3I7cmV0dXJuIHguTGVycFRvUmVmKGUsdCxpLHMpLHN9c3RhdGljIExlcnBUb1JlZihlLHQsaSxzKXtjb25zdCByPXMuX20sbj1lLm0sYT10Lm07Zm9yKGxldCBvPTA7bzwxNjtvKyspcltvXT1uW29dKigxLWkpK2Fbb10qaTtyZXR1cm4gcy5tYXJrQXNVcGRhdGVkKCksc31zdGF0aWMgRGVjb21wb3NlTGVycChlLHQsaSl7Y29uc3Qgcz1uZXcgZS5jb25zdHJ1Y3RvcjtyZXR1cm4geC5EZWNvbXBvc2VMZXJwVG9SZWYoZSx0LGkscyksc31zdGF0aWMgRGVjb21wb3NlTGVycFRvUmVmKGUsdCxpLHMpe2NvbnN0IHI9Sy5WZWN0b3IzWzBdLG49Sy5RdWF0ZXJuaW9uWzBdLGE9Sy5WZWN0b3IzWzFdO2UuZGVjb21wb3NlKHIsbixhKTtjb25zdCBvPUsuVmVjdG9yM1syXSxoPUsuUXVhdGVybmlvblsxXSxsPUsuVmVjdG9yM1szXTt0LmRlY29tcG9zZShvLGgsbCk7Y29uc3QgdT1LLlZlY3RvcjNbNF07cC5MZXJwVG9SZWYocixvLGksdSk7Y29uc3QgZD1LLlF1YXRlcm5pb25bMl07Wi5TbGVycFRvUmVmKG4saCxpLGQpO2NvbnN0IGY9Sy5WZWN0b3IzWzVdO3JldHVybiBwLkxlcnBUb1JlZihhLGwsaSxmKSx4LkNvbXBvc2VUb1JlZih1LGQsZixzKSxzfXN0YXRpYyBMb29rQXRMSChlLHQsaSl7Y29uc3Qgcz1uZXcgeDtyZXR1cm4geC5Mb29rQXRMSFRvUmVmKGUsdCxpLHMpLHN9c3RhdGljIExvb2tBdExIVG9SZWYoZSx0LGkscyl7Y29uc3Qgcj1LLlZlY3RvcjNbMF0sbj1LLlZlY3RvcjNbMV0sYT1LLlZlY3RvcjNbMl07dC5zdWJ0cmFjdFRvUmVmKGUsYSksYS5ub3JtYWxpemUoKSxwLkNyb3NzVG9SZWYoaSxhLHIpO2NvbnN0IG89ci5sZW5ndGhTcXVhcmVkKCk7bz09PTA/ci54PTE6ci5ub3JtYWxpemVGcm9tTGVuZ3RoKE1hdGguc3FydChvKSkscC5Dcm9zc1RvUmVmKGEscixuKSxuLm5vcm1hbGl6ZSgpO2NvbnN0IGg9LXAuRG90KHIsZSksbD0tcC5Eb3QobixlKSx1PS1wLkRvdChhLGUpO3guRnJvbVZhbHVlc1RvUmVmKHIuX3gsbi5feCxhLl94LDAsci5feSxuLl95LGEuX3ksMCxyLl96LG4uX3osYS5feiwwLGgsbCx1LDEscyl9c3RhdGljIExvb2tBdFJIKGUsdCxpKXtjb25zdCBzPW5ldyB4O3JldHVybiB4Lkxvb2tBdFJIVG9SZWYoZSx0LGkscyksc31zdGF0aWMgTG9va0F0UkhUb1JlZihlLHQsaSxzKXtjb25zdCByPUsuVmVjdG9yM1swXSxuPUsuVmVjdG9yM1sxXSxhPUsuVmVjdG9yM1syXTtlLnN1YnRyYWN0VG9SZWYodCxhKSxhLm5vcm1hbGl6ZSgpLHAuQ3Jvc3NUb1JlZihpLGEscik7Y29uc3Qgbz1yLmxlbmd0aFNxdWFyZWQoKTtvPT09MD9yLng9MTpyLm5vcm1hbGl6ZUZyb21MZW5ndGgoTWF0aC5zcXJ0KG8pKSxwLkNyb3NzVG9SZWYoYSxyLG4pLG4ubm9ybWFsaXplKCk7Y29uc3QgaD0tcC5Eb3QocixlKSxsPS1wLkRvdChuLGUpLHU9LXAuRG90KGEsZSk7cmV0dXJuIHguRnJvbVZhbHVlc1RvUmVmKHIuX3gsbi5feCxhLl94LDAsci5feSxuLl95LGEuX3ksMCxyLl96LG4uX3osYS5feiwwLGgsbCx1LDEscyksc31zdGF0aWMgTG9va0RpcmVjdGlvbkxIKGUsdCl7Y29uc3QgaT1uZXcgeDtyZXR1cm4geC5Mb29rRGlyZWN0aW9uTEhUb1JlZihlLHQsaSksaX1zdGF0aWMgTG9va0RpcmVjdGlvbkxIVG9SZWYoZSx0LGkpe2NvbnN0IHM9Sy5WZWN0b3IzWzBdO3MuY29weUZyb20oZSkscy5zY2FsZUluUGxhY2UoLTEpO2NvbnN0IHI9Sy5WZWN0b3IzWzFdO3JldHVybiBwLkNyb3NzVG9SZWYodCxzLHIpLHguRnJvbVZhbHVlc1RvUmVmKHIuX3gsci5feSxyLl96LDAsdC5feCx0Ll95LHQuX3osMCxzLl94LHMuX3kscy5feiwwLDAsMCwwLDEsaSksaX1zdGF0aWMgTG9va0RpcmVjdGlvblJIKGUsdCl7Y29uc3QgaT1uZXcgeDtyZXR1cm4geC5Mb29rRGlyZWN0aW9uUkhUb1JlZihlLHQsaSksaX1zdGF0aWMgTG9va0RpcmVjdGlvblJIVG9SZWYoZSx0LGkpe2NvbnN0IHM9Sy5WZWN0b3IzWzJdO3JldHVybiBwLkNyb3NzVG9SZWYodCxlLHMpLHguRnJvbVZhbHVlc1RvUmVmKHMuX3gscy5feSxzLl96LDAsdC5feCx0Ll95LHQuX3osMCxlLl94LGUuX3ksZS5feiwwLDAsMCwwLDEsaSksaX1zdGF0aWMgT3J0aG9MSChlLHQsaSxzLHIpe2NvbnN0IG49bmV3IHg7cmV0dXJuIHguT3J0aG9MSFRvUmVmKGUsdCxpLHMsbixyKSxufXN0YXRpYyBPcnRob0xIVG9SZWYoZSx0LGkscyxyLG4pe2NvbnN0IGE9aSxvPXMsaD0yL2UsbD0yL3QsdT0yLyhvLWEpLGQ9LShvK2EpLyhvLWEpO3JldHVybiB4LkZyb21WYWx1ZXNUb1JlZihoLDAsMCwwLDAsbCwwLDAsMCwwLHUsMCwwLDAsZCwxLHIpLG4mJnIubXVsdGlwbHlUb1JlZihxdCxyKSxyLl91cGRhdGVJZGVudGl0eVN0YXR1cyhoPT09MSYmbD09PTEmJnU9PT0xJiZkPT09MCkscn1zdGF0aWMgT3J0aG9PZmZDZW50ZXJMSChlLHQsaSxzLHIsbixhKXtjb25zdCBvPW5ldyB4O3JldHVybiB4Lk9ydGhvT2ZmQ2VudGVyTEhUb1JlZihlLHQsaSxzLHIsbixvLGEpLG99c3RhdGljIE9ydGhvT2ZmQ2VudGVyTEhUb1JlZihlLHQsaSxzLHIsbixhLG8pe2NvbnN0IGg9cixsPW4sdT0yLyh0LWUpLGQ9Mi8ocy1pKSxmPTIvKGwtaCksXz0tKGwraCkvKGwtaCksRT0oZSt0KS8oZS10KSxtPShzK2kpLyhpLXMpO3JldHVybiB4LkZyb21WYWx1ZXNUb1JlZih1LDAsMCwwLDAsZCwwLDAsMCwwLGYsMCxFLG0sXywxLGEpLG8mJmEubXVsdGlwbHlUb1JlZihxdCxhKSxhLm1hcmtBc1VwZGF0ZWQoKSxhfXN0YXRpYyBPcnRob09mZkNlbnRlclJIKGUsdCxpLHMscixuLGEpe2NvbnN0IG89bmV3IHg7cmV0dXJuIHguT3J0aG9PZmZDZW50ZXJSSFRvUmVmKGUsdCxpLHMscixuLG8sYSksb31zdGF0aWMgT3J0aG9PZmZDZW50ZXJSSFRvUmVmKGUsdCxpLHMscixuLGEsbyl7cmV0dXJuIHguT3J0aG9PZmZDZW50ZXJMSFRvUmVmKGUsdCxpLHMscixuLGEsbyksYS5fbVsxMF0qPS0xLGF9c3RhdGljIFBlcnNwZWN0aXZlTEgoZSx0LGkscyxyLG49MCl7Y29uc3QgYT1uZXcgeCxvPWksaD1zLGw9MipvL2UsdT0yKm8vdCxkPShoK28pLyhoLW8pLGY9LTIqaCpvLyhoLW8pLF89TWF0aC50YW4obik7cmV0dXJuIHguRnJvbVZhbHVlc1RvUmVmKGwsMCwwLDAsMCx1LDAsXywwLDAsZCwxLDAsMCxmLDAsYSksciYmYS5tdWx0aXBseVRvUmVmKHF0LGEpLGEuX3VwZGF0ZUlkZW50aXR5U3RhdHVzKCExKSxhfXN0YXRpYyBQZXJzcGVjdGl2ZUZvdkxIKGUsdCxpLHMscixuPTAsYT0hMSl7Y29uc3Qgbz1uZXcgeDtyZXR1cm4geC5QZXJzcGVjdGl2ZUZvdkxIVG9SZWYoZSx0LGkscyxvLCEwLHIsbixhKSxvfXN0YXRpYyBQZXJzcGVjdGl2ZUZvdkxIVG9SZWYoZSx0LGkscyxyLG49ITAsYSxvPTAsaD0hMSl7Y29uc3QgbD1pLHU9cyxkPTEvTWF0aC50YW4oZSouNSksZj1uP2QvdDpkLF89bj9kOmQqdCxFPWgmJmw9PT0wPy0xOnUhPT0wPyh1K2wpLyh1LWwpOjEsbT1oJiZsPT09MD8yKnU6dSE9PTA/LTIqdSpsLyh1LWwpOi0yKmwsdj1NYXRoLnRhbihvKTtyZXR1cm4geC5Gcm9tVmFsdWVzVG9SZWYoZiwwLDAsMCwwLF8sMCx2LDAsMCxFLDEsMCwwLG0sMCxyKSxhJiZyLm11bHRpcGx5VG9SZWYocXQsciksci5fdXBkYXRlSWRlbnRpdHlTdGF0dXMoITEpLHJ9c3RhdGljIFBlcnNwZWN0aXZlRm92UmV2ZXJzZUxIVG9SZWYoZSx0LGkscyxyLG49ITAsYSxvPTApe2NvbnN0IGg9MS9NYXRoLnRhbihlKi41KSxsPW4/aC90OmgsdT1uP2g6aCp0LGQ9TWF0aC50YW4obyk7cmV0dXJuIHguRnJvbVZhbHVlc1RvUmVmKGwsMCwwLDAsMCx1LDAsZCwwLDAsLWksMSwwLDAsMSwwLHIpLGEmJnIubXVsdGlwbHlUb1JlZihxdCxyKSxyLl91cGRhdGVJZGVudGl0eVN0YXR1cyghMSkscn1zdGF0aWMgUGVyc3BlY3RpdmVGb3ZSSChlLHQsaSxzLHIsbj0wLGE9ITEpe2NvbnN0IG89bmV3IHg7cmV0dXJuIHguUGVyc3BlY3RpdmVGb3ZSSFRvUmVmKGUsdCxpLHMsbywhMCxyLG4sYSksb31zdGF0aWMgUGVyc3BlY3RpdmVGb3ZSSFRvUmVmKGUsdCxpLHMscixuPSEwLGEsbz0wLGg9ITEpe2NvbnN0IGw9aSx1PXMsZD0xL01hdGgudGFuKGUqLjUpLGY9bj9kL3Q6ZCxfPW4/ZDpkKnQsRT1oJiZsPT09MD8xOnUhPT0wPy0odStsKS8odS1sKTotMSxtPWgmJmw9PT0wPzIqdTp1IT09MD8tMip1KmwvKHUtbCk6LTIqbCx2PU1hdGgudGFuKG8pO3JldHVybiB4LkZyb21WYWx1ZXNUb1JlZihmLDAsMCwwLDAsXywwLHYsMCwwLEUsLTEsMCwwLG0sMCxyKSxhJiZyLm11bHRpcGx5VG9SZWYocXQsciksci5fdXBkYXRlSWRlbnRpdHlTdGF0dXMoITEpLHJ9c3RhdGljIFBlcnNwZWN0aXZlRm92UmV2ZXJzZVJIVG9SZWYoZSx0LGkscyxyLG49ITAsYSxvPTApe2NvbnN0IGg9MS9NYXRoLnRhbihlKi41KSxsPW4/aC90OmgsdT1uP2g6aCp0LGQ9TWF0aC50YW4obyk7cmV0dXJuIHguRnJvbVZhbHVlc1RvUmVmKGwsMCwwLDAsMCx1LDAsZCwwLDAsLWksLTEsMCwwLC0xLDAsciksYSYmci5tdWx0aXBseVRvUmVmKHF0LHIpLHIuX3VwZGF0ZUlkZW50aXR5U3RhdHVzKCExKSxyfXN0YXRpYyBQZXJzcGVjdGl2ZUZvdldlYlZSVG9SZWYoZSx0LGkscyxyPSExLG4sYT0wKXtjb25zdCBvPXI/LTE6MSxoPU1hdGgudGFuKGUudXBEZWdyZWVzKk1hdGguUEkvMTgwKSxsPU1hdGgudGFuKGUuZG93bkRlZ3JlZXMqTWF0aC5QSS8xODApLHU9TWF0aC50YW4oZS5sZWZ0RGVncmVlcypNYXRoLlBJLzE4MCksZD1NYXRoLnRhbihlLnJpZ2h0RGVncmVlcypNYXRoLlBJLzE4MCksZj0yLyh1K2QpLF89Mi8oaCtsKSxFPU1hdGgudGFuKGEpLG09cy5fbTtyZXR1cm4gbVswXT1mLG1bMV09bVsyXT1tWzNdPW1bNF09MCxtWzVdPV8sbVs2XT0wLG1bN109RSxtWzhdPSh1LWQpKmYqLjUsbVs5XT0tKChoLWwpKl8qLjUpLG1bMTBdPS1pLyh0LWkpLG1bMTFdPTEqbyxtWzEyXT1tWzEzXT1tWzE1XT0wLG1bMTRdPS0oMippKnQpLyhpLXQpLG4mJnMubXVsdGlwbHlUb1JlZihxdCxzKSxzLm1hcmtBc1VwZGF0ZWQoKSxzfXN0YXRpYyBHZXRGaW5hbE1hdHJpeChlLHQsaSxzLHIsbil7Y29uc3QgYT1lLndpZHRoLG89ZS5oZWlnaHQsaD1lLngsbD1lLnksdT14LkZyb21WYWx1ZXMoYS8yLDAsMCwwLDAsLW8vMiwwLDAsMCwwLG4tciwwLGgrYS8yLG8vMitsLHIsMSksZD1uZXcgdC5jb25zdHJ1Y3RvcjtyZXR1cm4gdC5tdWx0aXBseVRvUmVmKGksZCksZC5tdWx0aXBseVRvUmVmKHMsZCksZC5tdWx0aXBseVRvUmVmKHUsZCl9c3RhdGljIEdldEFzTWF0cml4MngyKGUpe2NvbnN0IHQ9ZS5tLGk9W3RbMF0sdFsxXSx0WzRdLHRbNV1dO3JldHVybiBVZS5NYXRyaXhVc2U2NEJpdHM/aTpuZXcgRmxvYXQzMkFycmF5KGkpfXN0YXRpYyBHZXRBc01hdHJpeDN4MyhlKXtjb25zdCB0PWUubSxpPVt0WzBdLHRbMV0sdFsyXSx0WzRdLHRbNV0sdFs2XSx0WzhdLHRbOV0sdFsxMF1dO3JldHVybiBVZS5NYXRyaXhVc2U2NEJpdHM/aTpuZXcgRmxvYXQzMkFycmF5KGkpfXN0YXRpYyBUcmFuc3Bvc2UoZSl7Y29uc3QgdD1uZXcgZS5jb25zdHJ1Y3RvcjtyZXR1cm4geC5UcmFuc3Bvc2VUb1JlZihlLHQpLHR9c3RhdGljIFRyYW5zcG9zZVRvUmVmKGUsdCl7Y29uc3QgaT10Ll9tLHM9ZS5tO3JldHVybiBpWzBdPXNbMF0saVsxXT1zWzRdLGlbMl09c1s4XSxpWzNdPXNbMTJdLGlbNF09c1sxXSxpWzVdPXNbNV0saVs2XT1zWzldLGlbN109c1sxM10saVs4XT1zWzJdLGlbOV09c1s2XSxpWzEwXT1zWzEwXSxpWzExXT1zWzE0XSxpWzEyXT1zWzNdLGlbMTNdPXNbN10saVsxNF09c1sxMV0saVsxNV09c1sxNV0sdC5tYXJrQXNVcGRhdGVkKCksdC5fdXBkYXRlSWRlbnRpdHlTdGF0dXMoZS5faXNJZGVudGl0eSxlLl9pc0lkZW50aXR5RGlydHkpLHR9c3RhdGljIFJlZmxlY3Rpb24oZSl7Y29uc3QgdD1uZXcgeDtyZXR1cm4geC5SZWZsZWN0aW9uVG9SZWYoZSx0KSx0fXN0YXRpYyBSZWZsZWN0aW9uVG9SZWYoZSx0KXtlLm5vcm1hbGl6ZSgpO2NvbnN0IGk9ZS5ub3JtYWwueCxzPWUubm9ybWFsLnkscj1lLm5vcm1hbC56LG49LTIqaSxhPS0yKnMsbz0tMipyO3JldHVybiB4LkZyb21WYWx1ZXNUb1JlZihuKmkrMSxhKmksbyppLDAsbipzLGEqcysxLG8qcywwLG4qcixhKnIsbypyKzEsMCxuKmUuZCxhKmUuZCxvKmUuZCwxLHQpLHR9c3RhdGljIEZyb21YWVpBeGVzVG9SZWYoZSx0LGkscyl7cmV0dXJuIHguRnJvbVZhbHVlc1RvUmVmKGUuX3gsZS5feSxlLl96LDAsdC5feCx0Ll95LHQuX3osMCxpLl94LGkuX3ksaS5feiwwLDAsMCwwLDEscyksc31zdGF0aWMgRnJvbVF1YXRlcm5pb25Ub1JlZihlLHQpe2NvbnN0IGk9ZS5feCplLl94LHM9ZS5feSplLl95LHI9ZS5feiplLl96LG49ZS5feCplLl95LGE9ZS5feiplLl93LG89ZS5feiplLl94LGg9ZS5feSplLl93LGw9ZS5feSplLl96LHU9ZS5feCplLl93O3JldHVybiB0Ll9tWzBdPTEtMioocytyKSx0Ll9tWzFdPTIqKG4rYSksdC5fbVsyXT0yKihvLWgpLHQuX21bM109MCx0Ll9tWzRdPTIqKG4tYSksdC5fbVs1XT0xLTIqKHIraSksdC5fbVs2XT0yKihsK3UpLHQuX21bN109MCx0Ll9tWzhdPTIqKG8raCksdC5fbVs5XT0yKihsLXUpLHQuX21bMTBdPTEtMioocytpKSx0Ll9tWzExXT0wLHQuX21bMTJdPTAsdC5fbVsxM109MCx0Ll9tWzE0XT0wLHQuX21bMTVdPTEsdC5tYXJrQXNVcGRhdGVkKCksdH19eC5fVXBkYXRlRmxhZ1NlZWQ9MCx4Ll9JZGVudGl0eVJlYWRPbmx5PXguSWRlbnRpdHkoKTtjbGFzcyBLe31LLlZlY3RvcjM9QmUuQnVpbGRUdXBsZSgxMSxwLlplcm8pLEsuTWF0cml4PUJlLkJ1aWxkVHVwbGUoMix4LklkZW50aXR5KSxLLlF1YXRlcm5pb249QmUuQnVpbGRUdXBsZSgzLFouWmVybyk7Y2xhc3MgRHt9RC5WZWN0b3IyPUJlLkJ1aWxkVHVwbGUoMyx2ZS5aZXJvKSxELlZlY3RvcjM9QmUuQnVpbGRUdXBsZSgxMyxwLlplcm8pLEQuVmVjdG9yND1CZS5CdWlsZFR1cGxlKDMsQ2UuWmVybyksRC5RdWF0ZXJuaW9uPUJlLkJ1aWxkVHVwbGUoMixaLlplcm8pLEQuTWF0cml4PUJlLkJ1aWxkVHVwbGUoOCx4LklkZW50aXR5KSxpdCgiQkFCWUxPTi5WZWN0b3IyIix2ZSksaXQoIkJBQllMT04uVmVjdG9yMyIscCksaXQoIkJBQllMT04uVmVjdG9yNCIsQ2UpLGl0KCJCQUJZTE9OLk1hdHJpeCIseCk7Y29uc3QgcXQ9eC5Gcm9tVmFsdWVzKDEsMCwwLDAsMCwxLDAsMCwwLDAsLjUsMCwwLDAsLjUsMSk7Y2xhc3MgS3J7Y29uc3RydWN0b3IoZSx0PSExLGkscyl7dGhpcy5pbml0aWFsaXplKGUsdCxpLHMpfWluaXRpYWxpemUoZSx0PSExLGkscyl7cmV0dXJuIHRoaXMubWFzaz1lLHRoaXMuc2tpcE5leHRPYnNlcnZlcnM9dCx0aGlzLnRhcmdldD1pLHRoaXMuY3VycmVudFRhcmdldD1zLHRoaXN9fWNsYXNzIFlye2NvbnN0cnVjdG9yKGUsdCxpPW51bGwpe3RoaXMuY2FsbGJhY2s9ZSx0aGlzLm1hc2s9dCx0aGlzLnNjb3BlPWksdGhpcy5fd2lsbEJlVW5yZWdpc3RlcmVkPSExLHRoaXMudW5yZWdpc3Rlck9uTmV4dENhbGw9ITF9fWNsYXNzIEZ7Y29uc3RydWN0b3IoZSl7dGhpcy5fb2JzZXJ2ZXJzPW5ldyBBcnJheSx0aGlzLl9udW1PYnNlcnZlcnNNYXJrZWRBc0RlbGV0ZWQ9MCx0aGlzLl9ldmVudFN0YXRlPW5ldyBLcigwKSxlJiYodGhpcy5fb25PYnNlcnZlckFkZGVkPWUpfXN0YXRpYyBGcm9tUHJvbWlzZShlLHQpe2NvbnN0IGk9bmV3IEY7cmV0dXJuIGUudGhlbihzPT57aS5ub3RpZnlPYnNlcnZlcnMocyl9KS5jYXRjaChzPT57aWYodCl0Lm5vdGlmeU9ic2VydmVycyhzKTtlbHNlIHRocm93IHN9KSxpfWdldCBvYnNlcnZlcnMoKXtyZXR1cm4gdGhpcy5fb2JzZXJ2ZXJzfWFkZChlLHQ9LTEsaT0hMSxzPW51bGwscj0hMSl7aWYoIWUpcmV0dXJuIG51bGw7Y29uc3Qgbj1uZXcgWXIoZSx0LHMpO3JldHVybiBuLnVucmVnaXN0ZXJPbk5leHRDYWxsPXIsaT90aGlzLl9vYnNlcnZlcnMudW5zaGlmdChuKTp0aGlzLl9vYnNlcnZlcnMucHVzaChuKSx0aGlzLl9vbk9ic2VydmVyQWRkZWQmJnRoaXMuX29uT2JzZXJ2ZXJBZGRlZChuKSxufWFkZE9uY2UoZSl7cmV0dXJuIHRoaXMuYWRkKGUsdm9pZCAwLHZvaWQgMCx2b2lkIDAsITApfXJlbW92ZShlKXtyZXR1cm4gZSYmdGhpcy5fb2JzZXJ2ZXJzLmluZGV4T2YoZSkhPT0tMT8odGhpcy5fZGVmZXJVbnJlZ2lzdGVyKGUpLCEwKTohMX1yZW1vdmVDYWxsYmFjayhlLHQpe2ZvcihsZXQgaT0wO2k8dGhpcy5fb2JzZXJ2ZXJzLmxlbmd0aDtpKyspe2NvbnN0IHM9dGhpcy5fb2JzZXJ2ZXJzW2ldO2lmKCFzLl93aWxsQmVVbnJlZ2lzdGVyZWQmJnMuY2FsbGJhY2s9PT1lJiYoIXR8fHQ9PT1zLnNjb3BlKSlyZXR1cm4gdGhpcy5fZGVmZXJVbnJlZ2lzdGVyKHMpLCEwfXJldHVybiExfV9kZWZlclVucmVnaXN0ZXIoZSl7dGhpcy5fbnVtT2JzZXJ2ZXJzTWFya2VkQXNEZWxldGVkKyssZS51bnJlZ2lzdGVyT25OZXh0Q2FsbD0hMSxlLl93aWxsQmVVbnJlZ2lzdGVyZWQ9ITAsc2V0VGltZW91dCgoKT0+e3RoaXMuX3JlbW92ZShlKX0sMCl9X3JlbW92ZShlKXtpZighZSlyZXR1cm4hMTtjb25zdCB0PXRoaXMuX29ic2VydmVycy5pbmRleE9mKGUpO3JldHVybiB0IT09LTE/KHRoaXMuX251bU9ic2VydmVyc01hcmtlZEFzRGVsZXRlZC0tLHRoaXMuX29ic2VydmVycy5zcGxpY2UodCwxKSwhMCk6ITF9bWFrZU9ic2VydmVyVG9wUHJpb3JpdHkoZSl7dGhpcy5fcmVtb3ZlKGUpLHRoaXMuX29ic2VydmVycy51bnNoaWZ0KGUpfW1ha2VPYnNlcnZlckJvdHRvbVByaW9yaXR5KGUpe3RoaXMuX3JlbW92ZShlKSx0aGlzLl9vYnNlcnZlcnMucHVzaChlKX1ub3RpZnlPYnNlcnZlcnMoZSx0PS0xLGkscyxyKXtpZighdGhpcy5fb2JzZXJ2ZXJzLmxlbmd0aClyZXR1cm4hMDtjb25zdCBuPXRoaXMuX2V2ZW50U3RhdGU7bi5tYXNrPXQsbi50YXJnZXQ9aSxuLmN1cnJlbnRUYXJnZXQ9cyxuLnNraXBOZXh0T2JzZXJ2ZXJzPSExLG4ubGFzdFJldHVyblZhbHVlPWUsbi51c2VySW5mbz1yO2Zvcihjb25zdCBhIG9mIHRoaXMuX29ic2VydmVycylpZighYS5fd2lsbEJlVW5yZWdpc3RlcmVkJiYoYS5tYXNrJnQmJihhLnVucmVnaXN0ZXJPbk5leHRDYWxsJiZ0aGlzLl9kZWZlclVucmVnaXN0ZXIoYSksYS5zY29wZT9uLmxhc3RSZXR1cm5WYWx1ZT1hLmNhbGxiYWNrLmFwcGx5KGEuc2NvcGUsW2Usbl0pOm4ubGFzdFJldHVyblZhbHVlPWEuY2FsbGJhY2soZSxuKSksbi5za2lwTmV4dE9ic2VydmVycykpcmV0dXJuITE7cmV0dXJuITB9bm90aWZ5T2JzZXJ2ZXIoZSx0LGk9LTEpe2lmKGUuX3dpbGxCZVVucmVnaXN0ZXJlZClyZXR1cm47Y29uc3Qgcz10aGlzLl9ldmVudFN0YXRlO3MubWFzaz1pLHMuc2tpcE5leHRPYnNlcnZlcnM9ITEsZS51bnJlZ2lzdGVyT25OZXh0Q2FsbCYmdGhpcy5fZGVmZXJVbnJlZ2lzdGVyKGUpLGUuY2FsbGJhY2sodCxzKX1oYXNPYnNlcnZlcnMoKXtyZXR1cm4gdGhpcy5fb2JzZXJ2ZXJzLmxlbmd0aC10aGlzLl9udW1PYnNlcnZlcnNNYXJrZWRBc0RlbGV0ZWQ+MH1jbGVhcigpe3RoaXMuX29ic2VydmVycz1uZXcgQXJyYXksdGhpcy5fb25PYnNlcnZlckFkZGVkPW51bGx9Y2xvbmUoKXtjb25zdCBlPW5ldyBGO3JldHVybiBlLl9vYnNlcnZlcnM9dGhpcy5fb2JzZXJ2ZXJzLnNsaWNlKDApLGV9aGFzU3BlY2lmaWNNYXNrKGU9LTEpe2Zvcihjb25zdCB0IG9mIHRoaXMuX29ic2VydmVycylpZih0Lm1hc2smZXx8dC5tYXNrPT09ZSlyZXR1cm4hMDtyZXR1cm4hMX19Y2xhc3MgWnJ7Y29uc3RydWN0b3IoKXt0aGlzLnNhbXBsaW5nTW9kZT0tMSx0aGlzLl91c2VNaXBNYXBzPSEwLHRoaXMuX2NhY2hlZFdyYXBVPW51bGwsdGhpcy5fY2FjaGVkV3JhcFY9bnVsbCx0aGlzLl9jYWNoZWRXcmFwUj1udWxsLHRoaXMuX2NhY2hlZEFuaXNvdHJvcGljRmlsdGVyaW5nTGV2ZWw9bnVsbCx0aGlzLl9jb21wYXJpc29uRnVuY3Rpb249MH1nZXQgd3JhcFUoKXtyZXR1cm4gdGhpcy5fY2FjaGVkV3JhcFV9c2V0IHdyYXBVKGUpe3RoaXMuX2NhY2hlZFdyYXBVPWV9Z2V0IHdyYXBWKCl7cmV0dXJuIHRoaXMuX2NhY2hlZFdyYXBWfXNldCB3cmFwVihlKXt0aGlzLl9jYWNoZWRXcmFwVj1lfWdldCB3cmFwUigpe3JldHVybiB0aGlzLl9jYWNoZWRXcmFwUn1zZXQgd3JhcFIoZSl7dGhpcy5fY2FjaGVkV3JhcFI9ZX1nZXQgYW5pc290cm9waWNGaWx0ZXJpbmdMZXZlbCgpe3JldHVybiB0aGlzLl9jYWNoZWRBbmlzb3Ryb3BpY0ZpbHRlcmluZ0xldmVsfXNldCBhbmlzb3Ryb3BpY0ZpbHRlcmluZ0xldmVsKGUpe3RoaXMuX2NhY2hlZEFuaXNvdHJvcGljRmlsdGVyaW5nTGV2ZWw9ZX1nZXQgY29tcGFyaXNvbkZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbXBhcmlzb25GdW5jdGlvbn1zZXQgY29tcGFyaXNvbkZ1bmN0aW9uKGUpe3RoaXMuX2NvbXBhcmlzb25GdW5jdGlvbj1lfWdldCB1c2VNaXBNYXBzKCl7cmV0dXJuIHRoaXMuX3VzZU1pcE1hcHN9c2V0IHVzZU1pcE1hcHMoZSl7dGhpcy5fdXNlTWlwTWFwcz1lfXNldFBhcmFtZXRlcnMoZT0xLHQ9MSxpPTEscz0xLHI9MixuPTApe3JldHVybiB0aGlzLl9jYWNoZWRXcmFwVT1lLHRoaXMuX2NhY2hlZFdyYXBWPXQsdGhpcy5fY2FjaGVkV3JhcFI9aSx0aGlzLl9jYWNoZWRBbmlzb3Ryb3BpY0ZpbHRlcmluZ0xldmVsPXMsdGhpcy5zYW1wbGluZ01vZGU9cix0aGlzLl9jb21wYXJpc29uRnVuY3Rpb249bix0aGlzfWNvbXBhcmVTYW1wbGVyKGUpe3JldHVybiB0aGlzLl9jYWNoZWRXcmFwVT09PWUuX2NhY2hlZFdyYXBVJiZ0aGlzLl9jYWNoZWRXcmFwVj09PWUuX2NhY2hlZFdyYXBWJiZ0aGlzLl9jYWNoZWRXcmFwUj09PWUuX2NhY2hlZFdyYXBSJiZ0aGlzLl9jYWNoZWRBbmlzb3Ryb3BpY0ZpbHRlcmluZ0xldmVsPT09ZS5fY2FjaGVkQW5pc290cm9waWNGaWx0ZXJpbmdMZXZlbCYmdGhpcy5zYW1wbGluZ01vZGU9PT1lLnNhbXBsaW5nTW9kZSYmdGhpcy5fY29tcGFyaXNvbkZ1bmN0aW9uPT09ZS5fY29tcGFyaXNvbkZ1bmN0aW9uJiZ0aGlzLl91c2VNaXBNYXBzPT09ZS5fdXNlTWlwTWFwc319dmFyIE5lOyhmdW5jdGlvbihjKXtjW2MuVW5rbm93bj0wXT0iVW5rbm93biIsY1tjLlVybD0xXT0iVXJsIixjW2MuVGVtcD0yXT0iVGVtcCIsY1tjLlJhdz0zXT0iUmF3IixjW2MuRHluYW1pYz00XT0iRHluYW1pYyIsY1tjLlJlbmRlclRhcmdldD01XT0iUmVuZGVyVGFyZ2V0IixjW2MuTXVsdGlSZW5kZXJUYXJnZXQ9Nl09Ik11bHRpUmVuZGVyVGFyZ2V0IixjW2MuQ3ViZT03XT0iQ3ViZSIsY1tjLkN1YmVSYXc9OF09IkN1YmVSYXciLGNbYy5DdWJlUHJlZmlsdGVyZWQ9OV09IkN1YmVQcmVmaWx0ZXJlZCIsY1tjLlJhdzNEPTEwXT0iUmF3M0QiLGNbYy5SYXcyREFycmF5PTExXT0iUmF3MkRBcnJheSIsY1tjLkRlcHRoU3RlbmNpbD0xMl09IkRlcHRoU3RlbmNpbCIsY1tjLkN1YmVSYXdSR0JEPTEzXT0iQ3ViZVJhd1JHQkQiLGNbYy5EZXB0aD0xNF09IkRlcHRoIn0pKE5lfHwoTmU9e30pKTtjbGFzcyBPdCBleHRlbmRzIFpye2NvbnN0cnVjdG9yKGUsdCxpPSExKXtzdXBlcigpLHRoaXMuaXNSZWFkeT0hMSx0aGlzLmlzQ3ViZT0hMSx0aGlzLmlzM0Q9ITEsdGhpcy5pczJEQXJyYXk9ITEsdGhpcy5pc011bHRpdmlldz0hMSx0aGlzLnVybD0iIix0aGlzLmdlbmVyYXRlTWlwTWFwcz0hMSx0aGlzLnNhbXBsZXM9MCx0aGlzLnR5cGU9LTEsdGhpcy5mb3JtYXQ9LTEsdGhpcy5vbkxvYWRlZE9ic2VydmFibGU9bmV3IEYsdGhpcy5vbkVycm9yT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uUmVidWlsZENhbGxiYWNrPW51bGwsdGhpcy53aWR0aD0wLHRoaXMuaGVpZ2h0PTAsdGhpcy5kZXB0aD0wLHRoaXMuYmFzZVdpZHRoPTAsdGhpcy5iYXNlSGVpZ2h0PTAsdGhpcy5iYXNlRGVwdGg9MCx0aGlzLmludmVydFk9ITEsdGhpcy5faW52ZXJ0VlNjYWxlPSExLHRoaXMuX2Fzc29jaWF0ZWRDaGFubmVsPS0xLHRoaXMuX3NvdXJjZT1OZS5Vbmtub3duLHRoaXMuX2J1ZmZlcj1udWxsLHRoaXMuX2J1ZmZlclZpZXc9bnVsbCx0aGlzLl9idWZmZXJWaWV3QXJyYXk9bnVsbCx0aGlzLl9idWZmZXJWaWV3QXJyYXlBcnJheT1udWxsLHRoaXMuX3NpemU9MCx0aGlzLl9leHRlbnNpb249IiIsdGhpcy5fZmlsZXM9bnVsbCx0aGlzLl93b3JraW5nQ2FudmFzPW51bGwsdGhpcy5fd29ya2luZ0NvbnRleHQ9bnVsbCx0aGlzLl9jYWNoZWRDb29yZGluYXRlc01vZGU9bnVsbCx0aGlzLl9pc0Rpc2FibGVkPSExLHRoaXMuX2NvbXByZXNzaW9uPW51bGwsdGhpcy5fc3BoZXJpY2FsUG9seW5vbWlhbD1udWxsLHRoaXMuX3NwaGVyaWNhbFBvbHlub21pYWxQcm9taXNlPW51bGwsdGhpcy5fc3BoZXJpY2FsUG9seW5vbWlhbENvbXB1dGVkPSExLHRoaXMuX2xvZEdlbmVyYXRpb25TY2FsZT0wLHRoaXMuX2xvZEdlbmVyYXRpb25PZmZzZXQ9MCx0aGlzLl91c2VTUkdCQnVmZmVyPSExLHRoaXMuX2xvZFRleHR1cmVIaWdoPW51bGwsdGhpcy5fbG9kVGV4dHVyZU1pZD1udWxsLHRoaXMuX2xvZFRleHR1cmVMb3c9bnVsbCx0aGlzLl9pc1JHQkQ9ITEsdGhpcy5fbGluZWFyU3BlY3VsYXJMT0Q9ITEsdGhpcy5faXJyYWRpYW5jZVRleHR1cmU9bnVsbCx0aGlzLl9oYXJkd2FyZVRleHR1cmU9bnVsbCx0aGlzLl9tYXhMb2RMZXZlbD1udWxsLHRoaXMuX3JlZmVyZW5jZXM9MSx0aGlzLl9nYW1tYVNwYWNlPW51bGwsdGhpcy5fZW5naW5lPWUsdGhpcy5fc291cmNlPXQsdGhpcy5fdW5pcXVlSWQ9T3QuX0NvdW50ZXIrKyxpfHwodGhpcy5faGFyZHdhcmVUZXh0dXJlPWUuX2NyZWF0ZUhhcmR3YXJlVGV4dHVyZSgpKX1nZXQgdXNlTWlwTWFwcygpe3JldHVybiB0aGlzLmdlbmVyYXRlTWlwTWFwc31zZXQgdXNlTWlwTWFwcyhlKXt0aGlzLmdlbmVyYXRlTWlwTWFwcz1lfWdldCB1bmlxdWVJZCgpe3JldHVybiB0aGlzLl91bmlxdWVJZH1fc2V0VW5pcXVlSWQoZSl7dGhpcy5fdW5pcXVlSWQ9ZX1nZXRFbmdpbmUoKXtyZXR1cm4gdGhpcy5fZW5naW5lfWdldCBzb3VyY2UoKXtyZXR1cm4gdGhpcy5fc291cmNlfWluY3JlbWVudFJlZmVyZW5jZXMoKXt0aGlzLl9yZWZlcmVuY2VzKyt9dXBkYXRlU2l6ZShlLHQsaT0xKXt0aGlzLl9lbmdpbmUudXBkYXRlVGV4dHVyZURpbWVuc2lvbnModGhpcyxlLHQsaSksdGhpcy53aWR0aD1lLHRoaXMuaGVpZ2h0PXQsdGhpcy5kZXB0aD1pLHRoaXMuYmFzZVdpZHRoPWUsdGhpcy5iYXNlSGVpZ2h0PXQsdGhpcy5iYXNlRGVwdGg9aSx0aGlzLl9zaXplPWUqdCppfV9yZWJ1aWxkKCl7dmFyIGU7aWYodGhpcy5pc1JlYWR5PSExLHRoaXMuX2NhY2hlZENvb3JkaW5hdGVzTW9kZT1udWxsLHRoaXMuX2NhY2hlZFdyYXBVPW51bGwsdGhpcy5fY2FjaGVkV3JhcFY9bnVsbCx0aGlzLl9jYWNoZWRXcmFwUj1udWxsLHRoaXMuX2NhY2hlZEFuaXNvdHJvcGljRmlsdGVyaW5nTGV2ZWw9bnVsbCx0aGlzLm9uUmVidWlsZENhbGxiYWNrKXtjb25zdCBpPXRoaXMub25SZWJ1aWxkQ2FsbGJhY2sodGhpcykscz1yPT57ci5fc3dhcEFuZERpZSh0aGlzLCExKSx0aGlzLmlzUmVhZHk9aS5pc1JlYWR5fTtpLmlzQXN5bmM/aS5wcm94eS50aGVuKHMpOnMoaS5wcm94eSk7cmV0dXJufWxldCB0O3N3aXRjaCh0aGlzLnNvdXJjZSl7Y2FzZSBOZS5UZW1wOmJyZWFrO2Nhc2UgTmUuVXJsOnQ9dGhpcy5fZW5naW5lLmNyZWF0ZVRleHR1cmUoKGU9dGhpcy5fb3JpZ2luYWxVcmwpIT09bnVsbCYmZSE9PXZvaWQgMD9lOnRoaXMudXJsLCF0aGlzLmdlbmVyYXRlTWlwTWFwcyx0aGlzLmludmVydFksbnVsbCx0aGlzLnNhbXBsaW5nTW9kZSxpPT57aS5fc3dhcEFuZERpZSh0aGlzLCExKSx0aGlzLmlzUmVhZHk9ITB9LG51bGwsdGhpcy5fYnVmZmVyLHZvaWQgMCx0aGlzLmZvcm1hdCx0aGlzLl9leHRlbnNpb24sdm9pZCAwLHZvaWQgMCx2b2lkIDAsdGhpcy5fdXNlU1JHQkJ1ZmZlcik7cmV0dXJuO2Nhc2UgTmUuUmF3OnQ9dGhpcy5fZW5naW5lLmNyZWF0ZVJhd1RleHR1cmUodGhpcy5fYnVmZmVyVmlldyx0aGlzLmJhc2VXaWR0aCx0aGlzLmJhc2VIZWlnaHQsdGhpcy5mb3JtYXQsdGhpcy5nZW5lcmF0ZU1pcE1hcHMsdGhpcy5pbnZlcnRZLHRoaXMuc2FtcGxpbmdNb2RlLHRoaXMuX2NvbXByZXNzaW9uLHRoaXMudHlwZSx2b2lkIDAsdGhpcy5fdXNlU1JHQkJ1ZmZlciksdC5fc3dhcEFuZERpZSh0aGlzLCExKSx0aGlzLmlzUmVhZHk9ITA7YnJlYWs7Y2FzZSBOZS5SYXczRDp0PXRoaXMuX2VuZ2luZS5jcmVhdGVSYXdUZXh0dXJlM0QodGhpcy5fYnVmZmVyVmlldyx0aGlzLmJhc2VXaWR0aCx0aGlzLmJhc2VIZWlnaHQsdGhpcy5iYXNlRGVwdGgsdGhpcy5mb3JtYXQsdGhpcy5nZW5lcmF0ZU1pcE1hcHMsdGhpcy5pbnZlcnRZLHRoaXMuc2FtcGxpbmdNb2RlLHRoaXMuX2NvbXByZXNzaW9uLHRoaXMudHlwZSksdC5fc3dhcEFuZERpZSh0aGlzLCExKSx0aGlzLmlzUmVhZHk9ITA7YnJlYWs7Y2FzZSBOZS5SYXcyREFycmF5OnQ9dGhpcy5fZW5naW5lLmNyZWF0ZVJhd1RleHR1cmUyREFycmF5KHRoaXMuX2J1ZmZlclZpZXcsdGhpcy5iYXNlV2lkdGgsdGhpcy5iYXNlSGVpZ2h0LHRoaXMuYmFzZURlcHRoLHRoaXMuZm9ybWF0LHRoaXMuZ2VuZXJhdGVNaXBNYXBzLHRoaXMuaW52ZXJ0WSx0aGlzLnNhbXBsaW5nTW9kZSx0aGlzLl9jb21wcmVzc2lvbix0aGlzLnR5cGUpLHQuX3N3YXBBbmREaWUodGhpcywhMSksdGhpcy5pc1JlYWR5PSEwO2JyZWFrO2Nhc2UgTmUuRHluYW1pYzp0PXRoaXMuX2VuZ2luZS5jcmVhdGVEeW5hbWljVGV4dHVyZSh0aGlzLmJhc2VXaWR0aCx0aGlzLmJhc2VIZWlnaHQsdGhpcy5nZW5lcmF0ZU1pcE1hcHMsdGhpcy5zYW1wbGluZ01vZGUpLHQuX3N3YXBBbmREaWUodGhpcywhMSksdGhpcy5fZW5naW5lLnVwZGF0ZUR5bmFtaWNUZXh0dXJlKHRoaXMsdGhpcy5fZW5naW5lLmdldFJlbmRlcmluZ0NhbnZhcygpLHRoaXMuaW52ZXJ0WSx2b2lkIDAsdm9pZCAwLCEwKTticmVhaztjYXNlIE5lLkN1YmU6dD10aGlzLl9lbmdpbmUuY3JlYXRlQ3ViZVRleHR1cmUodGhpcy51cmwsbnVsbCx0aGlzLl9maWxlcywhdGhpcy5nZW5lcmF0ZU1pcE1hcHMsKCk9Pnt0Ll9zd2FwQW5kRGllKHRoaXMsITEpLHRoaXMuaXNSZWFkeT0hMH0sbnVsbCx0aGlzLmZvcm1hdCx0aGlzLl9leHRlbnNpb24sITEsMCwwLG51bGwsdm9pZCAwLHRoaXMuX3VzZVNSR0JCdWZmZXIpO3JldHVybjtjYXNlIE5lLkN1YmVSYXc6dD10aGlzLl9lbmdpbmUuY3JlYXRlUmF3Q3ViZVRleHR1cmUodGhpcy5fYnVmZmVyVmlld0FycmF5LHRoaXMud2lkdGgsdGhpcy5mb3JtYXQsdGhpcy50eXBlLHRoaXMuZ2VuZXJhdGVNaXBNYXBzLHRoaXMuaW52ZXJ0WSx0aGlzLnNhbXBsaW5nTW9kZSx0aGlzLl9jb21wcmVzc2lvbiksdC5fc3dhcEFuZERpZSh0aGlzLCExKSx0aGlzLmlzUmVhZHk9ITA7YnJlYWs7Y2FzZSBOZS5DdWJlUmF3UkdCRDpyZXR1cm47Y2FzZSBOZS5DdWJlUHJlZmlsdGVyZWQ6dD10aGlzLl9lbmdpbmUuY3JlYXRlUHJlZmlsdGVyZWRDdWJlVGV4dHVyZSh0aGlzLnVybCxudWxsLHRoaXMuX2xvZEdlbmVyYXRpb25TY2FsZSx0aGlzLl9sb2RHZW5lcmF0aW9uT2Zmc2V0LGk9PntpJiZpLl9zd2FwQW5kRGllKHRoaXMsITEpLHRoaXMuaXNSZWFkeT0hMH0sbnVsbCx0aGlzLmZvcm1hdCx0aGlzLl9leHRlbnNpb24pLHQuX3NwaGVyaWNhbFBvbHlub21pYWw9dGhpcy5fc3BoZXJpY2FsUG9seW5vbWlhbDtyZXR1cm59fV9zd2FwQW5kRGllKGUsdD0hMCl7dmFyIGk7KGk9dGhpcy5faGFyZHdhcmVUZXh0dXJlKT09PW51bGx8fGk9PT12b2lkIDB8fGkuc2V0VXNhZ2UoZS5fc291cmNlLHRoaXMuZ2VuZXJhdGVNaXBNYXBzLHRoaXMuaXNDdWJlLHRoaXMud2lkdGgsdGhpcy5oZWlnaHQpLGUuX2hhcmR3YXJlVGV4dHVyZT10aGlzLl9oYXJkd2FyZVRleHR1cmUsdCYmKGUuX2lzUkdCRD10aGlzLl9pc1JHQkQpLHRoaXMuX2xvZFRleHR1cmVIaWdoJiYoZS5fbG9kVGV4dHVyZUhpZ2gmJmUuX2xvZFRleHR1cmVIaWdoLmRpc3Bvc2UoKSxlLl9sb2RUZXh0dXJlSGlnaD10aGlzLl9sb2RUZXh0dXJlSGlnaCksdGhpcy5fbG9kVGV4dHVyZU1pZCYmKGUuX2xvZFRleHR1cmVNaWQmJmUuX2xvZFRleHR1cmVNaWQuZGlzcG9zZSgpLGUuX2xvZFRleHR1cmVNaWQ9dGhpcy5fbG9kVGV4dHVyZU1pZCksdGhpcy5fbG9kVGV4dHVyZUxvdyYmKGUuX2xvZFRleHR1cmVMb3cmJmUuX2xvZFRleHR1cmVMb3cuZGlzcG9zZSgpLGUuX2xvZFRleHR1cmVMb3c9dGhpcy5fbG9kVGV4dHVyZUxvdyksdGhpcy5faXJyYWRpYW5jZVRleHR1cmUmJihlLl9pcnJhZGlhbmNlVGV4dHVyZSYmZS5faXJyYWRpYW5jZVRleHR1cmUuZGlzcG9zZSgpLGUuX2lycmFkaWFuY2VUZXh0dXJlPXRoaXMuX2lycmFkaWFuY2VUZXh0dXJlKTtjb25zdCBzPXRoaXMuX2VuZ2luZS5nZXRMb2FkZWRUZXh0dXJlc0NhY2hlKCk7bGV0IHI9cy5pbmRleE9mKHRoaXMpO3IhPT0tMSYmcy5zcGxpY2UociwxKSxyPXMuaW5kZXhPZihlKSxyPT09LTEmJnMucHVzaChlKX1kaXNwb3NlKCl7dGhpcy5fcmVmZXJlbmNlcy0tLHRoaXMub25Mb2FkZWRPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkVycm9yT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMuX3JlZmVyZW5jZXM9PT0wJiYodGhpcy5fZW5naW5lLl9yZWxlYXNlVGV4dHVyZSh0aGlzKSx0aGlzLl9oYXJkd2FyZVRleHR1cmU9bnVsbCl9fU90Ll9Db3VudGVyPTA7ZnVuY3Rpb24gamUoKXtyZXR1cm4gdHlwZW9mIHdpbmRvdzwidSJ9ZnVuY3Rpb24gSnMoKXtyZXR1cm4gdHlwZW9mIG5hdmlnYXRvcjwidSJ9ZnVuY3Rpb24gQ2koKXtyZXR1cm4gdHlwZW9mIGRvY3VtZW50PCJ1In1mdW5jdGlvbiBncyhjKXtsZXQgZT0iIix0PWMuZmlyc3RDaGlsZDtmb3IoO3Q7KXQubm9kZVR5cGU9PT0zJiYoZSs9dC50ZXh0Q29udGVudCksdD10Lm5leHRTaWJsaW5nO3JldHVybiBlfWNvbnN0IHBzPXtJc1dpbmRvd09iamVjdEV4aXN0OmplLElzTmF2aWdhdG9yQXZhaWxhYmxlOkpzLElzRG9jdW1lbnRBdmFpbGFibGU6Q2ksR2V0RE9NVGV4dENvbnRlbnQ6Z3N9O2Z1bmN0aW9uICQoYyl7cmV0dXJuYCR7Y30gbmVlZHMgdG8gYmUgaW1wb3J0ZWQgYmVmb3JlIGFzIGl0IGNvbnRhaW5zIGEgc2lkZS1lZmZlY3QgcmVxdWlyZWQgYnkgeW91ciBjb2RlLmB9Y2xhc3MgT3tzdGF0aWMgX0NoZWNrTGltaXQoZSx0KXtsZXQgaT1PLl9Mb2dMaW1pdE91dHB1dHNbZV07cmV0dXJuIGk/aS5jdXJyZW50Kys6KGk9e2xpbWl0OnQsY3VycmVudDoxfSxPLl9Mb2dMaW1pdE91dHB1dHNbZV09aSksaS5jdXJyZW50PD1pLmxpbWl0fXN0YXRpYyBfR2VuZXJhdGVMaW1pdE1lc3NhZ2UoZSx0PTEpe3ZhciBpO2NvbnN0IHM9Ty5fTG9nTGltaXRPdXRwdXRzW2VdO2lmKCFzfHwhTy5NZXNzYWdlTGltaXRSZWFjaGVkKXJldHVybjtjb25zdCByPXRoaXMuX0xldmVsc1t0XTtzLmN1cnJlbnQ9PT1zLmxpbWl0JiZPW3IubmFtZV0oTy5NZXNzYWdlTGltaXRSZWFjaGVkLnJlcGxhY2UoLyVMSU1JVCUvZywiIitzLmxpbWl0KS5yZXBsYWNlKC8lVFlQRSUvZywoaT1yLm5hbWUpIT09bnVsbCYmaSE9PXZvaWQgMD9pOiIiKSl9c3RhdGljIF9BZGRMb2dFbnRyeShlKXtPLl9Mb2dDYWNoZT1lK08uX0xvZ0NhY2hlLE8uT25OZXdDYWNoZUVudHJ5JiZPLk9uTmV3Q2FjaGVFbnRyeShlKX1zdGF0aWMgX0Zvcm1hdE1lc3NhZ2UoZSl7Y29uc3QgdD1zPT5zPDEwPyIwIitzOiIiK3MsaT1uZXcgRGF0ZTtyZXR1cm4iWyIrdChpLmdldEhvdXJzKCkpKyI6Iit0KGkuZ2V0TWludXRlcygpKSsiOiIrdChpLmdldFNlY29uZHMoKSkrIl06ICIrZX1zdGF0aWMgX0xvZ0Rpc2FibGVkKGUsdCl7fXN0YXRpYyBfTG9nRW5hYmxlZChlPTEsdCxpKXtpZihpIT09dm9pZCAwJiYhTy5fQ2hlY2tMaW1pdCh0LGkpKXJldHVybjtjb25zdCBzPU8uX0Zvcm1hdE1lc3NhZ2UodCkscj10aGlzLl9MZXZlbHNbZV07ci5sb2dGdW5jJiZyLmxvZ0Z1bmMoIkJKUyAtICIrcyk7Y29uc3Qgbj1gPGRpdiBzdHlsZT0nY29sb3I6JHtyLmNvbG9yfSc+JHtzfTwvZGl2Pjxicj5gO08uX0FkZExvZ0VudHJ5KG4pLE8uX0dlbmVyYXRlTGltaXRNZXNzYWdlKHQsZSl9c3RhdGljIGdldCBMb2dDYWNoZSgpe3JldHVybiBPLl9Mb2dDYWNoZX1zdGF0aWMgQ2xlYXJMb2dDYWNoZSgpe08uX0xvZ0NhY2hlPSIiLE8uX0xvZ0xpbWl0T3V0cHV0cz17fSxPLmVycm9yc0NvdW50PTB9c3RhdGljIHNldCBMb2dMZXZlbHMoZSl7Ty5Mb2c9Ty5fTG9nRGlzYWJsZWQsTy5XYXJuPU8uX0xvZ0Rpc2FibGVkLE8uRXJyb3I9Ty5fTG9nRGlzYWJsZWQsW08uTWVzc2FnZUxvZ0xldmVsLE8uV2FybmluZ0xvZ0xldmVsLE8uRXJyb3JMb2dMZXZlbF0uZm9yRWFjaCh0PT57aWYoKGUmdCk9PT10KXtjb25zdCBpPXRoaXMuX0xldmVsc1t0XTtPW2kubmFtZV09Ty5fTG9nRW5hYmxlZC5iaW5kKE8sdCl9fSl9fU8uTm9uZUxvZ0xldmVsPTAsTy5NZXNzYWdlTG9nTGV2ZWw9MSxPLldhcm5pbmdMb2dMZXZlbD0yLE8uRXJyb3JMb2dMZXZlbD00LE8uQWxsTG9nTGV2ZWw9NyxPLk1lc3NhZ2VMaW1pdFJlYWNoZWQ9IlRvbyBtYW55ICVUWVBFJXMgKCVMSU1JVCUpLCBubyBtb3JlICVUWVBFJXMgd2lsbCBiZSByZXBvcnRlZCBmb3IgdGhpcyBtZXNzYWdlLiIsTy5fTG9nQ2FjaGU9IiIsTy5fTG9nTGltaXRPdXRwdXRzPXt9LE8uX0xldmVscz1be30se2NvbG9yOiJ3aGl0ZSIsbG9nRnVuYzpjb25zb2xlLmxvZyxuYW1lOiJMb2cifSx7Y29sb3I6Im9yYW5nZSIsbG9nRnVuYzpjb25zb2xlLndhcm4sbmFtZToiV2FybiJ9LHt9LHtjb2xvcjoicmVkIixsb2dGdW5jOmNvbnNvbGUuZXJyb3IsbmFtZToiRXJyb3IifV0sTy5lcnJvcnNDb3VudD0wLE8uTG9nPU8uX0xvZ0VuYWJsZWQuYmluZChPLE8uTWVzc2FnZUxvZ0xldmVsKSxPLldhcm49Ty5fTG9nRW5hYmxlZC5iaW5kKE8sTy5XYXJuaW5nTG9nTGV2ZWwpLE8uRXJyb3I9Ty5fTG9nRW5hYmxlZC5iaW5kKE8sTy5FcnJvckxvZ0xldmVsKTtjb25zdCBxcj0iYXR0cmlidXRlIixqcj0idmFyeWluZyI7Y2xhc3MgSWl7Y29uc3RydWN0b3IoKXt0aGlzLmNoaWxkcmVuPVtdfWlzVmFsaWQoZSl7cmV0dXJuITB9cHJvY2VzcyhlLHQpe3ZhciBpLHMscixuLGEsbztsZXQgaD0iIjtpZih0aGlzLmxpbmUpe2xldCBsPXRoaXMubGluZTtjb25zdCB1PXQucHJvY2Vzc29yO2lmKHUpe3UubGluZVByb2Nlc3NvciYmKGw9dS5saW5lUHJvY2Vzc29yKGwsdC5pc0ZyYWdtZW50LHQucHJvY2Vzc2luZ0NvbnRleHQpKTtjb25zdCBkPShzPShpPXQucHJvY2Vzc29yKT09PW51bGx8fGk9PT12b2lkIDA/dm9pZCAwOmkuYXR0cmlidXRlS2V5d29yZE5hbWUpIT09bnVsbCYmcyE9PXZvaWQgMD9zOnFyLGY9dC5pc0ZyYWdtZW50JiYoISgocj10LnByb2Nlc3Nvcik9PT1udWxsfHxyPT09dm9pZCAwKSYmci52YXJ5aW5nRnJhZ21lbnRLZXl3b3JkTmFtZSk/KG49dC5wcm9jZXNzb3IpPT09bnVsbHx8bj09PXZvaWQgMD92b2lkIDA6bi52YXJ5aW5nRnJhZ21lbnRLZXl3b3JkTmFtZTohdC5pc0ZyYWdtZW50JiYoISgoYT10LnByb2Nlc3Nvcik9PT1udWxsfHxhPT09dm9pZCAwKSYmYS52YXJ5aW5nVmVydGV4S2V5d29yZE5hbWUpPyhvPXQucHJvY2Vzc29yKT09PW51bGx8fG89PT12b2lkIDA/dm9pZCAwOm8udmFyeWluZ1ZlcnRleEtleXdvcmROYW1lOmpyOyF0LmlzRnJhZ21lbnQmJnUuYXR0cmlidXRlUHJvY2Vzc29yJiZ0aGlzLmxpbmUuc3RhcnRzV2l0aChkKT9sPXUuYXR0cmlidXRlUHJvY2Vzc29yKHRoaXMubGluZSxlLHQucHJvY2Vzc2luZ0NvbnRleHQpOnUudmFyeWluZ1Byb2Nlc3NvciYmdGhpcy5saW5lLnN0YXJ0c1dpdGgoZik/bD11LnZhcnlpbmdQcm9jZXNzb3IodGhpcy5saW5lLHQuaXNGcmFnbWVudCxlLHQucHJvY2Vzc2luZ0NvbnRleHQpOnUudW5pZm9ybVByb2Nlc3NvciYmdS51bmlmb3JtUmVnZXhwJiZ1LnVuaWZvcm1SZWdleHAudGVzdCh0aGlzLmxpbmUpP3QubG9va0ZvckNsb3NpbmdCcmFja2V0Rm9yVW5pZm9ybUJ1ZmZlcnx8KGw9dS51bmlmb3JtUHJvY2Vzc29yKHRoaXMubGluZSx0LmlzRnJhZ21lbnQsZSx0LnByb2Nlc3NpbmdDb250ZXh0KSk6dS51bmlmb3JtQnVmZmVyUHJvY2Vzc29yJiZ1LnVuaWZvcm1CdWZmZXJSZWdleHAmJnUudW5pZm9ybUJ1ZmZlclJlZ2V4cC50ZXN0KHRoaXMubGluZSk/dC5sb29rRm9yQ2xvc2luZ0JyYWNrZXRGb3JVbmlmb3JtQnVmZmVyfHwobD11LnVuaWZvcm1CdWZmZXJQcm9jZXNzb3IodGhpcy5saW5lLHQuaXNGcmFnbWVudCx0LnByb2Nlc3NpbmdDb250ZXh0KSx0Lmxvb2tGb3JDbG9zaW5nQnJhY2tldEZvclVuaWZvcm1CdWZmZXI9ITApOnUudGV4dHVyZVByb2Nlc3NvciYmdS50ZXh0dXJlUmVnZXhwJiZ1LnRleHR1cmVSZWdleHAudGVzdCh0aGlzLmxpbmUpP2w9dS50ZXh0dXJlUHJvY2Vzc29yKHRoaXMubGluZSx0LmlzRnJhZ21lbnQsZSx0LnByb2Nlc3NpbmdDb250ZXh0KToodS51bmlmb3JtUHJvY2Vzc29yfHx1LnVuaWZvcm1CdWZmZXJQcm9jZXNzb3IpJiZ0aGlzLmxpbmUuc3RhcnRzV2l0aCgidW5pZm9ybSIpJiYhdC5sb29rRm9yQ2xvc2luZ0JyYWNrZXRGb3JVbmlmb3JtQnVmZmVyJiYoL3VuaWZvcm1ccysoPzooPzpoaWdocCk/fCg/Omxvd3ApPylccyooXFMrKVxzKyhcUyspXHMqOy8udGVzdCh0aGlzLmxpbmUpP3UudW5pZm9ybVByb2Nlc3NvciYmKGw9dS51bmlmb3JtUHJvY2Vzc29yKHRoaXMubGluZSx0LmlzRnJhZ21lbnQsZSx0LnByb2Nlc3NpbmdDb250ZXh0KSk6dS51bmlmb3JtQnVmZmVyUHJvY2Vzc29yJiYobD11LnVuaWZvcm1CdWZmZXJQcm9jZXNzb3IodGhpcy5saW5lLHQuaXNGcmFnbWVudCx0LnByb2Nlc3NpbmdDb250ZXh0KSx0Lmxvb2tGb3JDbG9zaW5nQnJhY2tldEZvclVuaWZvcm1CdWZmZXI9ITApKSx0Lmxvb2tGb3JDbG9zaW5nQnJhY2tldEZvclVuaWZvcm1CdWZmZXImJnRoaXMubGluZS5pbmRleE9mKCJ9IikhPT0tMSYmKHQubG9va0ZvckNsb3NpbmdCcmFja2V0Rm9yVW5pZm9ybUJ1ZmZlcj0hMSx1LmVuZE9mVW5pZm9ybUJ1ZmZlclByb2Nlc3NvciYmKGw9dS5lbmRPZlVuaWZvcm1CdWZmZXJQcm9jZXNzb3IodGhpcy5saW5lLHQuaXNGcmFnbWVudCx0LnByb2Nlc3NpbmdDb250ZXh0KSkpfWgrPWwrYFxyCmB9cmV0dXJuIHRoaXMuY2hpbGRyZW4uZm9yRWFjaChsPT57aCs9bC5wcm9jZXNzKGUsdCl9KSx0aGlzLmFkZGl0aW9uYWxEZWZpbmVLZXkmJihlW3RoaXMuYWRkaXRpb25hbERlZmluZUtleV09dGhpcy5hZGRpdGlvbmFsRGVmaW5lVmFsdWV8fCJ0cnVlIiksaH19Y2xhc3MgJHJ7Y29uc3RydWN0b3IoKXt0aGlzLl9saW5lcz1bXX1nZXQgY3VycmVudExpbmUoKXtyZXR1cm4gdGhpcy5fbGluZXNbdGhpcy5saW5lSW5kZXhdfWdldCBjYW5SZWFkKCl7cmV0dXJuIHRoaXMubGluZUluZGV4PHRoaXMuX2xpbmVzLmxlbmd0aC0xfXNldCBsaW5lcyhlKXt0aGlzLl9saW5lcy5sZW5ndGg9MDtmb3IoY29uc3QgdCBvZiBlKXtpZih0WzBdPT09IiMiKXt0aGlzLl9saW5lcy5wdXNoKHQpO2NvbnRpbnVlfWlmKHQudHJpbSgpLnN0YXJ0c1dpdGgoIi8vIikpe3RoaXMuX2xpbmVzLnB1c2godCk7Y29udGludWV9Y29uc3QgaT10LnNwbGl0KCI7Iik7Zm9yKGxldCBzPTA7czxpLmxlbmd0aDtzKyspe2xldCByPWlbc107cj1yLnRyaW0oKSxyJiZ0aGlzLl9saW5lcy5wdXNoKHIrKHMhPT1pLmxlbmd0aC0xPyI7IjoiIikpfX19fWNsYXNzIG1zIGV4dGVuZHMgSWl7cHJvY2VzcyhlLHQpe2ZvcihsZXQgaT0wO2k8dGhpcy5jaGlsZHJlbi5sZW5ndGg7aSsrKXtjb25zdCBzPXRoaXMuY2hpbGRyZW5baV07aWYocy5pc1ZhbGlkKGUpKXJldHVybiBzLnByb2Nlc3MoZSx0KX1yZXR1cm4iIn19Y2xhc3MgUXIgZXh0ZW5kcyBJaXtpc1ZhbGlkKGUpe3JldHVybiB0aGlzLnRlc3RFeHByZXNzaW9uLmlzVHJ1ZShlKX19Y2xhc3MgZXR7aXNUcnVlKGUpe3JldHVybiEwfXN0YXRpYyBwb3N0Zml4VG9JbmZpeChlKXtjb25zdCB0PVtdO2Zvcihjb25zdCBpIG9mIGUpaWYoZXQuX09wZXJhdG9yUHJpb3JpdHlbaV09PT12b2lkIDApdC5wdXNoKGkpO2Vsc2V7Y29uc3Qgcz10W3QubGVuZ3RoLTFdLHI9dFt0Lmxlbmd0aC0yXTt0Lmxlbmd0aC09Mix0LnB1c2goYCgke3J9JHtpfSR7c30pYCl9cmV0dXJuIHRbdC5sZW5ndGgtMV19c3RhdGljIGluZml4VG9Qb3N0Zml4KGUpe2NvbnN0IHQ9W107bGV0IGk9LTE7Y29uc3Qgcz0oKT0+e2g9aC50cmltKCksaCE9PSIiJiYodC5wdXNoKGgpLGg9IiIpfSxyPWw9PntpPGV0Ll9TdGFjay5sZW5ndGgtMSYmKGV0Ll9TdGFja1srK2ldPWwpfSxuPSgpPT5ldC5fU3RhY2tbaV0sYT0oKT0+aT09PS0xPyIhIUlOVkFMSUQgRVhQUkVTU0lPTiEhIjpldC5fU3RhY2tbaS0tXTtsZXQgbz0wLGg9IiI7Zm9yKDtvPGUubGVuZ3RoOyl7Y29uc3QgbD1lLmNoYXJBdChvKSx1PW88ZS5sZW5ndGgtMT9lLnN1YnN0cihvLDIpOiIiO2lmKGw9PT0iKCIpaD0iIixyKGwpO2Vsc2UgaWYobD09PSIpIil7Zm9yKHMoKTtpIT09LTEmJm4oKSE9PSIoIjspdC5wdXNoKGEoKSk7YSgpfWVsc2UgaWYoZXQuX09wZXJhdG9yUHJpb3JpdHlbdV0+MSl7Zm9yKHMoKTtpIT09LTEmJmV0Ll9PcGVyYXRvclByaW9yaXR5W24oKV0+PWV0Ll9PcGVyYXRvclByaW9yaXR5W3VdOyl0LnB1c2goYSgpKTtyKHUpLG8rK31lbHNlIGgrPWw7bysrfWZvcihzKCk7aSE9PS0xOyluKCk9PT0iKCI/YSgpOnQucHVzaChhKCkpO3JldHVybiB0fX1ldC5fT3BlcmF0b3JQcmlvcml0eT17IikiOjAsIigiOjEsInx8IjoyLCImJiI6M30sZXQuX1N0YWNrPVsiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIiwiIl07Y2xhc3MgR2kgZXh0ZW5kcyBldHtjb25zdHJ1Y3RvcihlLHQ9ITEpe3N1cGVyKCksdGhpcy5kZWZpbmU9ZSx0aGlzLm5vdD10fWlzVHJ1ZShlKXtsZXQgdD1lW3RoaXMuZGVmaW5lXSE9PXZvaWQgMDtyZXR1cm4gdGhpcy5ub3QmJih0PSF0KSx0fX1jbGFzcyBKciBleHRlbmRzIGV0e2lzVHJ1ZShlKXtyZXR1cm4gdGhpcy5sZWZ0T3BlcmFuZC5pc1RydWUoZSl8fHRoaXMucmlnaHRPcGVyYW5kLmlzVHJ1ZShlKX19Y2xhc3MgZW4gZXh0ZW5kcyBldHtpc1RydWUoZSl7cmV0dXJuIHRoaXMubGVmdE9wZXJhbmQuaXNUcnVlKGUpJiZ0aGlzLnJpZ2h0T3BlcmFuZC5pc1RydWUoZSl9fWNsYXNzIHRuIGV4dGVuZHMgZXR7Y29uc3RydWN0b3IoZSx0LGkpe3N1cGVyKCksdGhpcy5kZWZpbmU9ZSx0aGlzLm9wZXJhbmQ9dCx0aGlzLnRlc3RWYWx1ZT1pfWlzVHJ1ZShlKXtsZXQgdD1lW3RoaXMuZGVmaW5lXTt0PT09dm9pZCAwJiYodD10aGlzLmRlZmluZSk7bGV0IGk9ITE7Y29uc3Qgcz1wYXJzZUludCh0KSxyPXBhcnNlSW50KHRoaXMudGVzdFZhbHVlKTtzd2l0Y2godGhpcy5vcGVyYW5kKXtjYXNlIj4iOmk9cz5yO2JyZWFrO2Nhc2UiPCI6aT1zPHI7YnJlYWs7Y2FzZSI8PSI6aT1zPD1yO2JyZWFrO2Nhc2UiPj0iOmk9cz49cjticmVhaztjYXNlIj09IjppPXM9PT1yO2JyZWFrfXJldHVybiBpfX12YXIgWmU7KGZ1bmN0aW9uKGMpe2NbYy5HTFNMPTBdPSJHTFNMIixjW2MuV0dTTD0xXT0iV0dTTCJ9KShaZXx8KFplPXt9KSk7Y29uc3Qgc249L2RlZmluZWRccyo/XCgoLis/KVwpL2csRXM9L2RlZmluZWRccyo/XFsoLis/KVxdL2csZXI9LyNpbmNsdWRlXHM/PCguKyk+KFwoKC4qKVwpKSooXFsoLiopXF0pKi9nO2NsYXNzIG5pe3N0YXRpYyBJbml0aWFsaXplKGUpe2UucHJvY2Vzc29yJiZlLnByb2Nlc3Nvci5pbml0aWFsaXplU2hhZGVycyYmZS5wcm9jZXNzb3IuaW5pdGlhbGl6ZVNoYWRlcnMoZS5wcm9jZXNzaW5nQ29udGV4dCl9c3RhdGljIFByb2Nlc3MoZSx0LGkscyl7dmFyIHI7ISgocj10LnByb2Nlc3Nvcik9PT1udWxsfHxyPT09dm9pZCAwKSYmci5wcmVQcm9jZXNzU2hhZGVyQ29kZSYmKGU9dC5wcm9jZXNzb3IucHJlUHJvY2Vzc1NoYWRlckNvZGUoZSx0LmlzRnJhZ21lbnQpKSx0aGlzLl9Qcm9jZXNzSW5jbHVkZXMoZSx0LG49Pnt0LnByb2Nlc3NDb2RlQWZ0ZXJJbmNsdWRlcyYmKG49dC5wcm9jZXNzQ29kZUFmdGVySW5jbHVkZXModC5pc0ZyYWdtZW50PyJmcmFnbWVudCI6InZlcnRleCIsbikpO2NvbnN0IGE9dGhpcy5fUHJvY2Vzc1NoYWRlckNvbnZlcnNpb24obix0LHMpO2koYSxuKX0pfXN0YXRpYyBQcmVQcm9jZXNzKGUsdCxpLHMpe3ZhciByOyEoKHI9dC5wcm9jZXNzb3IpPT09bnVsbHx8cj09PXZvaWQgMCkmJnIucHJlUHJvY2Vzc1NoYWRlckNvZGUmJihlPXQucHJvY2Vzc29yLnByZVByb2Nlc3NTaGFkZXJDb2RlKGUsdC5pc0ZyYWdtZW50KSksdGhpcy5fUHJvY2Vzc0luY2x1ZGVzKGUsdCxuPT57dC5wcm9jZXNzQ29kZUFmdGVySW5jbHVkZXMmJihuPXQucHJvY2Vzc0NvZGVBZnRlckluY2x1ZGVzKHQuaXNGcmFnbWVudD8iZnJhZ21lbnQiOiJ2ZXJ0ZXgiLG4pKTtjb25zdCBhPXRoaXMuX0FwcGx5UHJlUHJvY2Vzc2luZyhuLHQscyk7aShhLG4pfSl9c3RhdGljIEZpbmFsaXplKGUsdCxpKXtyZXR1cm4haS5wcm9jZXNzb3J8fCFpLnByb2Nlc3Nvci5maW5hbGl6ZVNoYWRlcnM/e3ZlcnRleENvZGU6ZSxmcmFnbWVudENvZGU6dH06aS5wcm9jZXNzb3IuZmluYWxpemVTaGFkZXJzKGUsdCxpLnByb2Nlc3NpbmdDb250ZXh0KX1zdGF0aWMgX1Byb2Nlc3NQcmVjaXNpb24oZSx0KXt2YXIgaTtpZighKChpPXQucHJvY2Vzc29yKT09PW51bGx8fGk9PT12b2lkIDApJiZpLm5vUHJlY2lzaW9uKXJldHVybiBlO2NvbnN0IHM9dC5zaG91bGRVc2VIaWdoUHJlY2lzaW9uU2hhZGVyO3JldHVybiBlLmluZGV4T2YoInByZWNpc2lvbiBoaWdocCBmbG9hdCIpPT09LTE/cz9lPWBwcmVjaXNpb24gaGlnaHAgZmxvYXQ7CmArZTplPWBwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKYCtlOnN8fChlPWUucmVwbGFjZSgicHJlY2lzaW9uIGhpZ2hwIGZsb2F0IiwicHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQiKSksZX1zdGF0aWMgX0V4dHJhY3RPcGVyYXRpb24oZSl7Y29uc3QgaT0vZGVmaW5lZFwoKC4rKVwpLy5leGVjKGUpO2lmKGkmJmkubGVuZ3RoKXJldHVybiBuZXcgR2koaVsxXS50cmltKCksZVswXT09PSIhIik7Y29uc3Qgcz1bIj09IiwiPj0iLCI8PSIsIjwiLCI+Il07bGV0IHI9IiIsbj0wO2ZvcihyIG9mIHMpaWYobj1lLmluZGV4T2Yociksbj4tMSlicmVhaztpZihuPT09LTEpcmV0dXJuIG5ldyBHaShlKTtjb25zdCBhPWUuc3Vic3RyaW5nKDAsbikudHJpbSgpLG89ZS5zdWJzdHJpbmcobityLmxlbmd0aCkudHJpbSgpO3JldHVybiBuZXcgdG4oYSxyLG8pfXN0YXRpYyBfQnVpbGRTdWJFeHByZXNzaW9uKGUpe2U9ZS5yZXBsYWNlKHNuLCJkZWZpbmVkWyQxXSIpO2NvbnN0IHQ9ZXQuaW5maXhUb1Bvc3RmaXgoZSksaT1bXTtmb3IoY29uc3QgciBvZiB0KWlmKHIhPT0ifHwiJiZyIT09IiYmIilpLnB1c2gocik7ZWxzZSBpZihpLmxlbmd0aD49Mil7bGV0IG49aVtpLmxlbmd0aC0xXSxhPWlbaS5sZW5ndGgtMl07aS5sZW5ndGgtPTI7Y29uc3Qgbz1yPT0iJiYiP25ldyBlbjpuZXcgSnI7dHlwZW9mIG49PSJzdHJpbmciJiYobj1uLnJlcGxhY2UoRXMsImRlZmluZWQoJDEpIikpLHR5cGVvZiBhPT0ic3RyaW5nIiYmKGE9YS5yZXBsYWNlKEVzLCJkZWZpbmVkKCQxKSIpKSxvLmxlZnRPcGVyYW5kPXR5cGVvZiBhPT0ic3RyaW5nIj90aGlzLl9FeHRyYWN0T3BlcmF0aW9uKGEpOmEsby5yaWdodE9wZXJhbmQ9dHlwZW9mIG49PSJzdHJpbmciP3RoaXMuX0V4dHJhY3RPcGVyYXRpb24obik6bixpLnB1c2gobyl9bGV0IHM9aVtpLmxlbmd0aC0xXTtyZXR1cm4gdHlwZW9mIHM9PSJzdHJpbmciJiYocz1zLnJlcGxhY2UoRXMsImRlZmluZWQoJDEpIikpLHR5cGVvZiBzPT0ic3RyaW5nIj90aGlzLl9FeHRyYWN0T3BlcmF0aW9uKHMpOnN9c3RhdGljIF9CdWlsZEV4cHJlc3Npb24oZSx0KXtjb25zdCBpPW5ldyBRcixzPWUuc3Vic3RyaW5nKDAsdCk7bGV0IHI9ZS5zdWJzdHJpbmcodCk7cmV0dXJuIHI9ci5zdWJzdHJpbmcoMCwoci5pbmRleE9mKCIvLyIpKzF8fHIubGVuZ3RoKzEpLTEpLnRyaW0oKSxzPT09IiNpZmRlZiI/aS50ZXN0RXhwcmVzc2lvbj1uZXcgR2kocik6cz09PSIjaWZuZGVmIj9pLnRlc3RFeHByZXNzaW9uPW5ldyBHaShyLCEwKTppLnRlc3RFeHByZXNzaW9uPXRoaXMuX0J1aWxkU3ViRXhwcmVzc2lvbihyKSxpfXN0YXRpYyBfTW92ZUN1cnNvcldpdGhpbklmKGUsdCxpKXtsZXQgcz1lLmN1cnJlbnRMaW5lO2Zvcig7dGhpcy5fTW92ZUN1cnNvcihlLGkpOyl7cz1lLmN1cnJlbnRMaW5lO2NvbnN0IHI9cy5zdWJzdHJpbmcoMCw1KS50b0xvd2VyQ2FzZSgpO2lmKHI9PT0iI2Vsc2UiKXtjb25zdCBuPW5ldyBJaTt0LmNoaWxkcmVuLnB1c2gobiksdGhpcy5fTW92ZUN1cnNvcihlLG4pO3JldHVybn1lbHNlIGlmKHI9PT0iI2VsaWYiKXtjb25zdCBuPXRoaXMuX0J1aWxkRXhwcmVzc2lvbihzLDUpO3QuY2hpbGRyZW4ucHVzaChuKSxpPW59fX1zdGF0aWMgX01vdmVDdXJzb3IoZSx0KXtmb3IoO2UuY2FuUmVhZDspe2UubGluZUluZGV4Kys7Y29uc3QgaT1lLmN1cnJlbnRMaW5lLHI9LygjaWZkZWYpfCgjZWxzZSl8KCNlbGlmKXwoI2VuZGlmKXwoI2lmbmRlZil8KCNpZikvLmV4ZWMoaSk7aWYociYmci5sZW5ndGgpc3dpdGNoKHJbMF0pe2Nhc2UiI2lmZGVmIjp7Y29uc3QgYT1uZXcgbXM7dC5jaGlsZHJlbi5wdXNoKGEpO2NvbnN0IG89dGhpcy5fQnVpbGRFeHByZXNzaW9uKGksNik7YS5jaGlsZHJlbi5wdXNoKG8pLHRoaXMuX01vdmVDdXJzb3JXaXRoaW5JZihlLGEsbyk7YnJlYWt9Y2FzZSIjZWxzZSI6Y2FzZSIjZWxpZiI6cmV0dXJuITA7Y2FzZSIjZW5kaWYiOnJldHVybiExO2Nhc2UiI2lmbmRlZiI6e2NvbnN0IGE9bmV3IG1zO3QuY2hpbGRyZW4ucHVzaChhKTtjb25zdCBvPXRoaXMuX0J1aWxkRXhwcmVzc2lvbihpLDcpO2EuY2hpbGRyZW4ucHVzaChvKSx0aGlzLl9Nb3ZlQ3Vyc29yV2l0aGluSWYoZSxhLG8pO2JyZWFrfWNhc2UiI2lmIjp7Y29uc3QgYT1uZXcgbXMsbz10aGlzLl9CdWlsZEV4cHJlc3Npb24oaSwzKTt0LmNoaWxkcmVuLnB1c2goYSksYS5jaGlsZHJlbi5wdXNoKG8pLHRoaXMuX01vdmVDdXJzb3JXaXRoaW5JZihlLGEsbyk7YnJlYWt9fWVsc2V7Y29uc3Qgbj1uZXcgSWk7aWYobi5saW5lPWksdC5jaGlsZHJlbi5wdXNoKG4pLGlbMF09PT0iIyImJmlbMV09PT0iZCIpe2NvbnN0IGE9aS5yZXBsYWNlKCI7IiwiIikuc3BsaXQoIiAiKTtuLmFkZGl0aW9uYWxEZWZpbmVLZXk9YVsxXSxhLmxlbmd0aD09PTMmJihuLmFkZGl0aW9uYWxEZWZpbmVWYWx1ZT1hWzJdKX19fXJldHVybiExfXN0YXRpYyBfRXZhbHVhdGVQcmVQcm9jZXNzb3JzKGUsdCxpKXtjb25zdCBzPW5ldyBJaSxyPW5ldyAkcjtyZXR1cm4gci5saW5lSW5kZXg9LTEsci5saW5lcz1lLnNwbGl0KGAKYCksdGhpcy5fTW92ZUN1cnNvcihyLHMpLHMucHJvY2Vzcyh0LGkpfXN0YXRpYyBfUHJlcGFyZVByZVByb2Nlc3NvcnMoZSx0KXt2YXIgaTtjb25zdCBzPWUuZGVmaW5lcyxyPXt9O2Zvcihjb25zdCBuIG9mIHMpe2NvbnN0IG89bi5yZXBsYWNlKCIjZGVmaW5lIiwiIikucmVwbGFjZSgiOyIsIiIpLnRyaW0oKS5zcGxpdCgiICIpO3Jbb1swXV09by5sZW5ndGg+MT9vWzFdOiIifXJldHVybigoaT1lLnByb2Nlc3Nvcik9PT1udWxsfHxpPT09dm9pZCAwP3ZvaWQgMDppLnNoYWRlckxhbmd1YWdlKT09PVplLkdMU0wmJihyLkdMX0VTPSJ0cnVlIiksci5fX1ZFUlNJT05fXz1lLnZlcnNpb24scltlLnBsYXRmb3JtTmFtZV09InRydWUiLHQuX2dldEdsb2JhbERlZmluZXMocikscn1zdGF0aWMgX1Byb2Nlc3NTaGFkZXJDb252ZXJzaW9uKGUsdCxpKXtsZXQgcz10aGlzLl9Qcm9jZXNzUHJlY2lzaW9uKGUsdCk7aWYoIXQucHJvY2Vzc29yfHx0LnByb2Nlc3Nvci5zaGFkZXJMYW5ndWFnZT09PVplLkdMU0wmJnMuaW5kZXhPZigiI3ZlcnNpb24gMyIpIT09LTEmJihzPXMucmVwbGFjZSgiI3ZlcnNpb24gMzAwIGVzIiwiIiksIXQucHJvY2Vzc29yLnBhcnNlR0xFUzMpKXJldHVybiBzO2NvbnN0IHI9dC5kZWZpbmVzLG49dGhpcy5fUHJlcGFyZVByZVByb2Nlc3NvcnModCxpKTtyZXR1cm4gdC5wcm9jZXNzb3IucHJlUHJvY2Vzc29yJiYocz10LnByb2Nlc3Nvci5wcmVQcm9jZXNzb3IocyxyLHQuaXNGcmFnbWVudCx0LnByb2Nlc3NpbmdDb250ZXh0KSkscz10aGlzLl9FdmFsdWF0ZVByZVByb2Nlc3NvcnMocyxuLHQpLHQucHJvY2Vzc29yLnBvc3RQcm9jZXNzb3ImJihzPXQucHJvY2Vzc29yLnBvc3RQcm9jZXNzb3IocyxyLHQuaXNGcmFnbWVudCx0LnByb2Nlc3NpbmdDb250ZXh0LGkpKSxpLl9mZWF0dXJlcy5uZWVkU2hhZGVyQ29kZUlubGluaW5nJiYocz1pLmlubGluZVNoYWRlckNvZGUocykpLHN9c3RhdGljIF9BcHBseVByZVByb2Nlc3NpbmcoZSx0LGkpe3ZhciBzLHI7bGV0IG49ZTtjb25zdCBhPXQuZGVmaW5lcyxvPXRoaXMuX1ByZXBhcmVQcmVQcm9jZXNzb3JzKHQsaSk7cmV0dXJuISgocz10LnByb2Nlc3Nvcik9PT1udWxsfHxzPT09dm9pZCAwKSYmcy5wcmVQcm9jZXNzb3ImJihuPXQucHJvY2Vzc29yLnByZVByb2Nlc3NvcihuLGEsdC5pc0ZyYWdtZW50LHQucHJvY2Vzc2luZ0NvbnRleHQpKSxuPXRoaXMuX0V2YWx1YXRlUHJlUHJvY2Vzc29ycyhuLG8sdCksISgocj10LnByb2Nlc3Nvcik9PT1udWxsfHxyPT09dm9pZCAwKSYmci5wb3N0UHJvY2Vzc29yJiYobj10LnByb2Nlc3Nvci5wb3N0UHJvY2Vzc29yKG4sYSx0LmlzRnJhZ21lbnQsdC5wcm9jZXNzaW5nQ29udGV4dCxpKSksaS5fZmVhdHVyZXMubmVlZFNoYWRlckNvZGVJbmxpbmluZyYmKG49aS5pbmxpbmVTaGFkZXJDb2RlKG4pKSxufXN0YXRpYyBfUHJvY2Vzc0luY2x1ZGVzKGUsdCxpKXtsZXQgcz1lci5leGVjKGUpLHI9bmV3IFN0cmluZyhlKSxuPSExO2Zvcig7cyE9bnVsbDspe2xldCBhPXNbMV07aWYoYS5pbmRleE9mKCJfX2RlY2xfXyIpIT09LTEmJihhPWEucmVwbGFjZSgvX19kZWNsX18vLCIiKSx0LnN1cHBvcnRzVW5pZm9ybUJ1ZmZlcnMmJihhPWEucmVwbGFjZSgvVmVydGV4LywiVWJvIiksYT1hLnJlcGxhY2UoL0ZyYWdtZW50LywiVWJvIikpLGE9YSsiRGVjbGFyYXRpb24iKSx0LmluY2x1ZGVzU2hhZGVyc1N0b3JlW2FdKXtsZXQgbz10LmluY2x1ZGVzU2hhZGVyc1N0b3JlW2FdO2lmKHNbMl0pe2NvbnN0IGg9c1szXS5zcGxpdCgiLCIpO2ZvcihsZXQgbD0wO2w8aC5sZW5ndGg7bCs9Mil7Y29uc3QgdT1uZXcgUmVnRXhwKGhbbF0sImciKSxkPWhbbCsxXTtvPW8ucmVwbGFjZSh1LGQpfX1pZihzWzRdKXtjb25zdCBoPXNbNV07aWYoaC5pbmRleE9mKCIuLiIpIT09LTEpe2NvbnN0IGw9aC5zcGxpdCgiLi4iKSx1PXBhcnNlSW50KGxbMF0pO2xldCBkPXBhcnNlSW50KGxbMV0pLGY9by5zbGljZSgwKTtvPSIiLGlzTmFOKGQpJiYoZD10LmluZGV4UGFyYW1ldGVyc1tsWzFdXSk7Zm9yKGxldCBfPXU7XzxkO18rKyl0LnN1cHBvcnRzVW5pZm9ybUJ1ZmZlcnN8fChmPWYucmVwbGFjZSgvbGlnaHRce1hcfS4oXHcqKS9nLChFLG0pPT5tKyJ7WH0iKSksbys9Zi5yZXBsYWNlKC9ce1hcfS9nLF8udG9TdHJpbmcoKSkrYApgfWVsc2UgdC5zdXBwb3J0c1VuaWZvcm1CdWZmZXJzfHwobz1vLnJlcGxhY2UoL2xpZ2h0XHtYXH0uKFx3KikvZywobCx1KT0+dSsie1h9IikpLG89by5yZXBsYWNlKC9ce1hcfS9nLGgpfXI9ci5yZXBsYWNlKHNbMF0sbyksbj1ufHxvLmluZGV4T2YoIiNpbmNsdWRlPCIpPj0wfHxvLmluZGV4T2YoIiNpbmNsdWRlIDwiKT49MH1lbHNle2NvbnN0IG89dC5zaGFkZXJzUmVwb3NpdG9yeSsiU2hhZGVyc0luY2x1ZGUvIithKyIuZngiO25pLl9GaWxlVG9vbHNMb2FkRmlsZShvLGg9Pnt0LmluY2x1ZGVzU2hhZGVyc1N0b3JlW2FdPWgsdGhpcy5fUHJvY2Vzc0luY2x1ZGVzKHIsdCxpKX0pO3JldHVybn1zPWVyLmV4ZWMoZSl9bj90aGlzLl9Qcm9jZXNzSW5jbHVkZXMoci50b1N0cmluZygpLHQsaSk6aShyKX1zdGF0aWMgX0ZpbGVUb29sc0xvYWRGaWxlKGUsdCxpLHMscixuKXt0aHJvdyAkKCJGaWxlVG9vbHMiKX19Y2xhc3MgVXtzdGF0aWMgR2V0U2hhZGVyc1JlcG9zaXRvcnkoZT1aZS5HTFNMKXtyZXR1cm4gZT09PVplLkdMU0w/VS5TaGFkZXJzUmVwb3NpdG9yeTpVLlNoYWRlcnNSZXBvc2l0b3J5V0dTTH1zdGF0aWMgR2V0U2hhZGVyc1N0b3JlKGU9WmUuR0xTTCl7cmV0dXJuIGU9PT1aZS5HTFNMP1UuU2hhZGVyc1N0b3JlOlUuU2hhZGVyc1N0b3JlV0dTTH1zdGF0aWMgR2V0SW5jbHVkZXNTaGFkZXJzU3RvcmUoZT1aZS5HTFNMKXtyZXR1cm4gZT09PVplLkdMU0w/VS5JbmNsdWRlc1NoYWRlcnNTdG9yZTpVLkluY2x1ZGVzU2hhZGVyc1N0b3JlV0dTTH19VS5TaGFkZXJzUmVwb3NpdG9yeT0ic3JjL1NoYWRlcnMvIixVLlNoYWRlcnNTdG9yZT17fSxVLkluY2x1ZGVzU2hhZGVyc1N0b3JlPXt9LFUuU2hhZGVyc1JlcG9zaXRvcnlXR1NMPSJzcmMvU2hhZGVyc1dHU0wvIixVLlNoYWRlcnNTdG9yZVdHU0w9e30sVS5JbmNsdWRlc1NoYWRlcnNTdG9yZVdHU0w9e307Y2xhc3MgUGV7Y29uc3RydWN0b3IoZSx0LGkscz1udWxsLHIsbj1udWxsLGE9bnVsbCxvPW51bGwsaD1udWxsLGwsdT0iIixkPVplLkdMU0wpe3ZhciBmLF8sRTt0aGlzLm5hbWU9bnVsbCx0aGlzLmRlZmluZXM9IiIsdGhpcy5vbkNvbXBpbGVkPW51bGwsdGhpcy5vbkVycm9yPW51bGwsdGhpcy5vbkJpbmQ9bnVsbCx0aGlzLnVuaXF1ZUlkPTAsdGhpcy5vbkNvbXBpbGVPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25FcnJvck9ic2VydmFibGU9bmV3IEYsdGhpcy5fb25CaW5kT2JzZXJ2YWJsZT1udWxsLHRoaXMuX3dhc1ByZXZpb3VzbHlSZWFkeT0hMSx0aGlzLl9mb3JjZVJlYmluZE9uTmV4dENhbGw9ITEsdGhpcy5fd2FzUHJldmlvdXNseVVzaW5nSW5zdGFuY2VzPW51bGwsdGhpcy5faXNEaXNwb3NlZD0hMSx0aGlzLl9ib25lc0NvbXB1dGF0aW9uRm9yY2VkVG9DUFU9ITEsdGhpcy5fdW5pZm9ybUJ1ZmZlcnNOYW1lcz17fSx0aGlzLl9tdWx0aVRhcmdldD0hMSx0aGlzLl9zYW1wbGVycz17fSx0aGlzLl9pc1JlYWR5PSExLHRoaXMuX2NvbXBpbGF0aW9uRXJyb3I9IiIsdGhpcy5fYWxsRmFsbGJhY2tzUHJvY2Vzc2VkPSExLHRoaXMuX3VuaWZvcm1zPXt9LHRoaXMuX2tleT0iIix0aGlzLl9mYWxsYmFja3M9bnVsbCx0aGlzLl92ZXJ0ZXhTb3VyY2VDb2RlT3ZlcnJpZGU9IiIsdGhpcy5fZnJhZ21lbnRTb3VyY2VDb2RlT3ZlcnJpZGU9IiIsdGhpcy5fdHJhbnNmb3JtRmVlZGJhY2tWYXJ5aW5ncz1udWxsLHRoaXMuX3BpcGVsaW5lQ29udGV4dD1udWxsLHRoaXMuX3ZlcnRleFNvdXJjZUNvZGU9IiIsdGhpcy5fZnJhZ21lbnRTb3VyY2VDb2RlPSIiLHRoaXMuX3ZlcnRleFNvdXJjZUNvZGVCZWZvcmVNaWdyYXRpb249IiIsdGhpcy5fZnJhZ21lbnRTb3VyY2VDb2RlQmVmb3JlTWlncmF0aW9uPSIiLHRoaXMuX3Jhd1ZlcnRleFNvdXJjZUNvZGU9IiIsdGhpcy5fcmF3RnJhZ21lbnRTb3VyY2VDb2RlPSIiLHRoaXMubmFtZT1lLHRoaXMuX2tleT11O2xldCBtLHY9bnVsbDtpZih0LmF0dHJpYnV0ZXMpe2NvbnN0IGs9dDtpZih0aGlzLl9lbmdpbmU9aSx0aGlzLl9hdHRyaWJ1dGVzTmFtZXM9ay5hdHRyaWJ1dGVzLHRoaXMuX3VuaWZvcm1zTmFtZXM9ay51bmlmb3Jtc05hbWVzLmNvbmNhdChrLnNhbXBsZXJzKSx0aGlzLl9zYW1wbGVyTGlzdD1rLnNhbXBsZXJzLnNsaWNlKCksdGhpcy5kZWZpbmVzPWsuZGVmaW5lcyx0aGlzLm9uRXJyb3I9ay5vbkVycm9yLHRoaXMub25Db21waWxlZD1rLm9uQ29tcGlsZWQsdGhpcy5fZmFsbGJhY2tzPWsuZmFsbGJhY2tzLHRoaXMuX2luZGV4UGFyYW1ldGVycz1rLmluZGV4UGFyYW1ldGVycyx0aGlzLl90cmFuc2Zvcm1GZWVkYmFja1ZhcnlpbmdzPWsudHJhbnNmb3JtRmVlZGJhY2tWYXJ5aW5nc3x8bnVsbCx0aGlzLl9tdWx0aVRhcmdldD0hIWsubXVsdGlUYXJnZXQsdGhpcy5fc2hhZGVyTGFuZ3VhZ2U9KGY9ay5zaGFkZXJMYW5ndWFnZSkhPT1udWxsJiZmIT09dm9pZCAwP2Y6WmUuR0xTTCxrLnVuaWZvcm1CdWZmZXJzTmFtZXMpe3RoaXMuX3VuaWZvcm1CdWZmZXJzTmFtZXNMaXN0PWsudW5pZm9ybUJ1ZmZlcnNOYW1lcy5zbGljZSgpO2ZvcihsZXQgdz0wO3c8ay51bmlmb3JtQnVmZmVyc05hbWVzLmxlbmd0aDt3KyspdGhpcy5fdW5pZm9ybUJ1ZmZlcnNOYW1lc1trLnVuaWZvcm1CdWZmZXJzTmFtZXNbd11dPXd9dj0oXz1rLnByb2Nlc3NGaW5hbENvZGUpIT09bnVsbCYmXyE9PXZvaWQgMD9fOm51bGwsbT0oRT1rLnByb2Nlc3NDb2RlQWZ0ZXJJbmNsdWRlcykhPT1udWxsJiZFIT09dm9pZCAwP0U6dm9pZCAwfWVsc2UgdGhpcy5fZW5naW5lPXIsdGhpcy5kZWZpbmVzPW4/PyIiLHRoaXMuX3VuaWZvcm1zTmFtZXM9aS5jb25jYXQocyksdGhpcy5fc2FtcGxlckxpc3Q9cz9zLnNsaWNlKCk6W10sdGhpcy5fYXR0cmlidXRlc05hbWVzPXQsdGhpcy5fdW5pZm9ybUJ1ZmZlcnNOYW1lc0xpc3Q9W10sdGhpcy5fc2hhZGVyTGFuZ3VhZ2U9ZCx0aGlzLm9uRXJyb3I9aCx0aGlzLm9uQ29tcGlsZWQ9byx0aGlzLl9pbmRleFBhcmFtZXRlcnM9bCx0aGlzLl9mYWxsYmFja3M9YTt0aGlzLl9hdHRyaWJ1dGVMb2NhdGlvbkJ5TmFtZT17fSx0aGlzLnVuaXF1ZUlkPVBlLl9VbmlxdWVJZFNlZWQrKztsZXQgUyx5O2NvbnN0IEE9amUoKT90aGlzLl9lbmdpbmUuZ2V0SG9zdERvY3VtZW50KCk6bnVsbDtlLnZlcnRleFNvdXJjZT9TPSJzb3VyY2U6IitlLnZlcnRleFNvdXJjZTplLnZlcnRleEVsZW1lbnQ/KFM9QT9BLmdldEVsZW1lbnRCeUlkKGUudmVydGV4RWxlbWVudCk6bnVsbCxTfHwoUz1lLnZlcnRleEVsZW1lbnQpKTpTPWUudmVydGV4fHxlLGUuZnJhZ21lbnRTb3VyY2U/eT0ic291cmNlOiIrZS5mcmFnbWVudFNvdXJjZTplLmZyYWdtZW50RWxlbWVudD8oeT1BP0EuZ2V0RWxlbWVudEJ5SWQoZS5mcmFnbWVudEVsZW1lbnQpOm51bGwseXx8KHk9ZS5mcmFnbWVudEVsZW1lbnQpKTp5PWUuZnJhZ21lbnR8fGUsdGhpcy5fcHJvY2Vzc2luZ0NvbnRleHQ9dGhpcy5fZW5naW5lLl9nZXRTaGFkZXJQcm9jZXNzaW5nQ29udGV4dCh0aGlzLl9zaGFkZXJMYW5ndWFnZSk7bGV0IEM9e2RlZmluZXM6dGhpcy5kZWZpbmVzLnNwbGl0KGAKYCksaW5kZXhQYXJhbWV0ZXJzOnRoaXMuX2luZGV4UGFyYW1ldGVycyxpc0ZyYWdtZW50OiExLHNob3VsZFVzZUhpZ2hQcmVjaXNpb25TaGFkZXI6dGhpcy5fZW5naW5lLl9zaG91bGRVc2VIaWdoUHJlY2lzaW9uU2hhZGVyLHByb2Nlc3Nvcjp0aGlzLl9lbmdpbmUuX2dldFNoYWRlclByb2Nlc3Nvcih0aGlzLl9zaGFkZXJMYW5ndWFnZSksc3VwcG9ydHNVbmlmb3JtQnVmZmVyczp0aGlzLl9lbmdpbmUuc3VwcG9ydHNVbmlmb3JtQnVmZmVycyxzaGFkZXJzUmVwb3NpdG9yeTpVLkdldFNoYWRlcnNSZXBvc2l0b3J5KHRoaXMuX3NoYWRlckxhbmd1YWdlKSxpbmNsdWRlc1NoYWRlcnNTdG9yZTpVLkdldEluY2x1ZGVzU2hhZGVyc1N0b3JlKHRoaXMuX3NoYWRlckxhbmd1YWdlKSx2ZXJzaW9uOih0aGlzLl9lbmdpbmUudmVyc2lvbioxMDApLnRvU3RyaW5nKCkscGxhdGZvcm1OYW1lOnRoaXMuX2VuZ2luZS5zaGFkZXJQbGF0Zm9ybU5hbWUscHJvY2Vzc2luZ0NvbnRleHQ6dGhpcy5fcHJvY2Vzc2luZ0NvbnRleHQsaXNORENIYWxmWlJhbmdlOnRoaXMuX2VuZ2luZS5pc05EQ0hhbGZaUmFuZ2UsdXNlUmV2ZXJzZURlcHRoQnVmZmVyOnRoaXMuX2VuZ2luZS51c2VSZXZlcnNlRGVwdGhCdWZmZXIscHJvY2Vzc0NvZGVBZnRlckluY2x1ZGVzOm19O2NvbnN0IGI9W3ZvaWQgMCx2b2lkIDBdLE09KCk9PntpZihiWzBdJiZiWzFdKXtDLmlzRnJhZ21lbnQ9ITA7Y29uc3Rbayx3XT1iO25pLlByb2Nlc3ModyxDLChkZSxjZSk9Pnt0aGlzLl9mcmFnbWVudFNvdXJjZUNvZGVCZWZvcmVNaWdyYXRpb249Y2UsdiYmKGRlPXYoImZyYWdtZW50IixkZSkpO2NvbnN0IHNlPW5pLkZpbmFsaXplKGssZGUsQyk7dGhpcy5fdXNlRmluYWxDb2RlKHNlLnZlcnRleENvZGUsc2UuZnJhZ21lbnRDb2RlLGUpfSx0aGlzLl9lbmdpbmUpfX07dGhpcy5fbG9hZFNoYWRlcihTLCJWZXJ0ZXgiLCIiLGs9PntuaS5Jbml0aWFsaXplKEMpLG5pLlByb2Nlc3MoayxDLCh3LGRlKT0+e3RoaXMuX3Jhd1ZlcnRleFNvdXJjZUNvZGU9ayx0aGlzLl92ZXJ0ZXhTb3VyY2VDb2RlQmVmb3JlTWlncmF0aW9uPWRlLHYmJih3PXYoInZlcnRleCIsdykpLGJbMF09dyxNKCl9LHRoaXMuX2VuZ2luZSl9KSx0aGlzLl9sb2FkU2hhZGVyKHksIkZyYWdtZW50IiwiUGl4ZWwiLGs9Pnt0aGlzLl9yYXdGcmFnbWVudFNvdXJjZUNvZGU9ayxiWzFdPWssTSgpfSksQz1udWxsO2NvbnN0IEw9ZnVuY3Rpb24oayl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BpcGVsaW5lQ29udGV4dCYmdGhpcy5fcGlwZWxpbmVDb250ZXh0W2tdLmFwcGx5KHRoaXMuX3BpcGVsaW5lQ29udGV4dCxhcmd1bWVudHMpLHRoaXN9fTtbIkludD8iLCJVSW50PyIsIkludEFycmF5PyIsIlVJbnRBcnJheT8iLCJBcnJheT8iLCJDb2xvcj8iLCJWZWN0b3I/IiwiRmxvYXQ/IiwiTWF0cmljZXMiLCJNYXRyaXgiLCJNYXRyaXgzeDMiLCJNYXRyaXgyeDIiLCJRdWF0ZXJuaW9uIiwiRGlyZWN0Q29sb3I0Il0uZm9yRWFjaChrPT57Y29uc3Qgdz1gc2V0JHtrfWA7dy5lbmRzV2l0aCgiPyIpP1siIiwyLDMsNF0uZm9yRWFjaChkZT0+e3RoaXNbdy5zbGljZSgwLC0xKStkZV09dGhpc1t3LnNsaWNlKDAsLTEpK2RlXXx8TCh3LnNsaWNlKDAsLTEpK2RlKS5iaW5kKHRoaXMpfSk6dGhpc1t3XT10aGlzW3ddfHxMKHcpLmJpbmQodGhpcyl9KX1zdGF0aWMgZ2V0IFNoYWRlcnNSZXBvc2l0b3J5KCl7cmV0dXJuIFUuU2hhZGVyc1JlcG9zaXRvcnl9c3RhdGljIHNldCBTaGFkZXJzUmVwb3NpdG9yeShlKXtVLlNoYWRlcnNSZXBvc2l0b3J5PWV9Z2V0IG9uQmluZE9ic2VydmFibGUoKXtyZXR1cm4gdGhpcy5fb25CaW5kT2JzZXJ2YWJsZXx8KHRoaXMuX29uQmluZE9ic2VydmFibGU9bmV3IEYpLHRoaXMuX29uQmluZE9ic2VydmFibGV9X3VzZUZpbmFsQ29kZShlLHQsaSl7aWYoaSl7Y29uc3Qgcz1pLnZlcnRleEVsZW1lbnR8fGkudmVydGV4fHxpLnNwZWN0b3JOYW1lfHxpLHI9aS5mcmFnbWVudEVsZW1lbnR8fGkuZnJhZ21lbnR8fGkuc3BlY3Rvck5hbWV8fGk7dGhpcy5fdmVydGV4U291cmNlQ29kZT0odGhpcy5fc2hhZGVyTGFuZ3VhZ2U9PT1aZS5XR1NMPyIvLyI6IiIpKyIjZGVmaW5lIFNIQURFUl9OQU1FIHZlcnRleDoiK3MrYApgK2UsdGhpcy5fZnJhZ21lbnRTb3VyY2VDb2RlPSh0aGlzLl9zaGFkZXJMYW5ndWFnZT09PVplLldHU0w/Ii8vIjoiIikrIiNkZWZpbmUgU0hBREVSX05BTUUgZnJhZ21lbnQ6IityK2AKYCt0fWVsc2UgdGhpcy5fdmVydGV4U291cmNlQ29kZT1lLHRoaXMuX2ZyYWdtZW50U291cmNlQ29kZT10O3RoaXMuX3ByZXBhcmVFZmZlY3QoKX1nZXQga2V5KCl7cmV0dXJuIHRoaXMuX2tleX1pc1JlYWR5KCl7dHJ5e3JldHVybiB0aGlzLl9pc1JlYWR5SW50ZXJuYWwoKX1jYXRjaHtyZXR1cm4hMX19X2lzUmVhZHlJbnRlcm5hbCgpe3JldHVybiB0aGlzLl9pc1JlYWR5PyEwOnRoaXMuX3BpcGVsaW5lQ29udGV4dD90aGlzLl9waXBlbGluZUNvbnRleHQuaXNSZWFkeTohMX1nZXRFbmdpbmUoKXtyZXR1cm4gdGhpcy5fZW5naW5lfWdldFBpcGVsaW5lQ29udGV4dCgpe3JldHVybiB0aGlzLl9waXBlbGluZUNvbnRleHR9Z2V0QXR0cmlidXRlc05hbWVzKCl7cmV0dXJuIHRoaXMuX2F0dHJpYnV0ZXNOYW1lc31nZXRBdHRyaWJ1dGVMb2NhdGlvbihlKXtyZXR1cm4gdGhpcy5fYXR0cmlidXRlc1tlXX1nZXRBdHRyaWJ1dGVMb2NhdGlvbkJ5TmFtZShlKXtyZXR1cm4gdGhpcy5fYXR0cmlidXRlTG9jYXRpb25CeU5hbWVbZV19Z2V0QXR0cmlidXRlc0NvdW50KCl7cmV0dXJuIHRoaXMuX2F0dHJpYnV0ZXMubGVuZ3RofWdldFVuaWZvcm1JbmRleChlKXtyZXR1cm4gdGhpcy5fdW5pZm9ybXNOYW1lcy5pbmRleE9mKGUpfWdldFVuaWZvcm0oZSl7cmV0dXJuIHRoaXMuX3VuaWZvcm1zW2VdfWdldFNhbXBsZXJzKCl7cmV0dXJuIHRoaXMuX3NhbXBsZXJMaXN0fWdldFVuaWZvcm1OYW1lcygpe3JldHVybiB0aGlzLl91bmlmb3Jtc05hbWVzfWdldFVuaWZvcm1CdWZmZXJzTmFtZXMoKXtyZXR1cm4gdGhpcy5fdW5pZm9ybUJ1ZmZlcnNOYW1lc0xpc3R9Z2V0SW5kZXhQYXJhbWV0ZXJzKCl7cmV0dXJuIHRoaXMuX2luZGV4UGFyYW1ldGVyc31nZXRDb21waWxhdGlvbkVycm9yKCl7cmV0dXJuIHRoaXMuX2NvbXBpbGF0aW9uRXJyb3J9YWxsRmFsbGJhY2tzUHJvY2Vzc2VkKCl7cmV0dXJuIHRoaXMuX2FsbEZhbGxiYWNrc1Byb2Nlc3NlZH1leGVjdXRlV2hlbkNvbXBpbGVkKGUpe2lmKHRoaXMuaXNSZWFkeSgpKXtlKHRoaXMpO3JldHVybn10aGlzLm9uQ29tcGlsZU9ic2VydmFibGUuYWRkKHQ9PntlKHQpfSksKCF0aGlzLl9waXBlbGluZUNvbnRleHR8fHRoaXMuX3BpcGVsaW5lQ29udGV4dC5pc0FzeW5jKSYmc2V0VGltZW91dCgoKT0+e3RoaXMuX2NoZWNrSXNSZWFkeShudWxsKX0sMTYpfV9jaGVja0lzUmVhZHkoZSl7dHJ5e2lmKHRoaXMuX2lzUmVhZHlJbnRlcm5hbCgpKXJldHVybn1jYXRjaCh0KXt0aGlzLl9wcm9jZXNzQ29tcGlsYXRpb25FcnJvcnModCxlKTtyZXR1cm59dGhpcy5faXNEaXNwb3NlZHx8c2V0VGltZW91dCgoKT0+e3RoaXMuX2NoZWNrSXNSZWFkeShlKX0sMTYpfV9sb2FkU2hhZGVyKGUsdCxpLHMpe2lmKHR5cGVvZiBIVE1MRWxlbWVudDwidSImJmUgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCl7Y29uc3QgYT1ncyhlKTtzKGEpO3JldHVybn1pZihlLnN1YnN0cigwLDcpPT09InNvdXJjZToiKXtzKGUuc3Vic3RyKDcpKTtyZXR1cm59aWYoZS5zdWJzdHIoMCw3KT09PSJiYXNlNjQ6Iil7Y29uc3QgYT13aW5kb3cuYXRvYihlLnN1YnN0cig3KSk7cyhhKTtyZXR1cm59Y29uc3Qgcj1VLkdldFNoYWRlcnNTdG9yZSh0aGlzLl9zaGFkZXJMYW5ndWFnZSk7aWYocltlK3QrIlNoYWRlciJdKXtzKHJbZSt0KyJTaGFkZXIiXSk7cmV0dXJufWlmKGkmJnJbZStpKyJTaGFkZXIiXSl7cyhyW2UraSsiU2hhZGVyIl0pO3JldHVybn1sZXQgbjtlWzBdPT09Ii4ifHxlWzBdPT09Ii8ifHxlLmluZGV4T2YoImh0dHAiKT4tMT9uPWU6bj1VLkdldFNoYWRlcnNSZXBvc2l0b3J5KHRoaXMuX3NoYWRlckxhbmd1YWdlKStlLHRoaXMuX2VuZ2luZS5fbG9hZEZpbGUobisiLiIrdC50b0xvd2VyQ2FzZSgpKyIuZngiLHMpfWdldCB2ZXJ0ZXhTb3VyY2VDb2RlKCl7dmFyIGUsdDtyZXR1cm4gdGhpcy5fdmVydGV4U291cmNlQ29kZU92ZXJyaWRlJiZ0aGlzLl9mcmFnbWVudFNvdXJjZUNvZGVPdmVycmlkZT90aGlzLl92ZXJ0ZXhTb3VyY2VDb2RlT3ZlcnJpZGU6KHQ9KGU9dGhpcy5fcGlwZWxpbmVDb250ZXh0KT09PW51bGx8fGU9PT12b2lkIDA/dm9pZCAwOmUuX2dldFZlcnRleFNoYWRlckNvZGUoKSkhPT1udWxsJiZ0IT09dm9pZCAwP3Q6dGhpcy5fdmVydGV4U291cmNlQ29kZX1nZXQgZnJhZ21lbnRTb3VyY2VDb2RlKCl7dmFyIGUsdDtyZXR1cm4gdGhpcy5fdmVydGV4U291cmNlQ29kZU92ZXJyaWRlJiZ0aGlzLl9mcmFnbWVudFNvdXJjZUNvZGVPdmVycmlkZT90aGlzLl9mcmFnbWVudFNvdXJjZUNvZGVPdmVycmlkZToodD0oZT10aGlzLl9waXBlbGluZUNvbnRleHQpPT09bnVsbHx8ZT09PXZvaWQgMD92b2lkIDA6ZS5fZ2V0RnJhZ21lbnRTaGFkZXJDb2RlKCkpIT09bnVsbCYmdCE9PXZvaWQgMD90OnRoaXMuX2ZyYWdtZW50U291cmNlQ29kZX1nZXQgdmVydGV4U291cmNlQ29kZUJlZm9yZU1pZ3JhdGlvbigpe3JldHVybiB0aGlzLl92ZXJ0ZXhTb3VyY2VDb2RlQmVmb3JlTWlncmF0aW9ufWdldCBmcmFnbWVudFNvdXJjZUNvZGVCZWZvcmVNaWdyYXRpb24oKXtyZXR1cm4gdGhpcy5fZnJhZ21lbnRTb3VyY2VDb2RlQmVmb3JlTWlncmF0aW9ufWdldCByYXdWZXJ0ZXhTb3VyY2VDb2RlKCl7cmV0dXJuIHRoaXMuX3Jhd1ZlcnRleFNvdXJjZUNvZGV9Z2V0IHJhd0ZyYWdtZW50U291cmNlQ29kZSgpe3JldHVybiB0aGlzLl9yYXdGcmFnbWVudFNvdXJjZUNvZGV9X3JlYnVpbGRQcm9ncmFtKGUsdCxpLHMpe3RoaXMuX2lzUmVhZHk9ITEsdGhpcy5fdmVydGV4U291cmNlQ29kZU92ZXJyaWRlPWUsdGhpcy5fZnJhZ21lbnRTb3VyY2VDb2RlT3ZlcnJpZGU9dCx0aGlzLm9uRXJyb3I9KHIsbik9PntzJiZzKG4pfSx0aGlzLm9uQ29tcGlsZWQ9KCk9Pntjb25zdCByPXRoaXMuZ2V0RW5naW5lKCkuc2NlbmVzO2lmKHIpZm9yKGxldCBuPTA7bjxyLmxlbmd0aDtuKyspcltuXS5tYXJrQWxsTWF0ZXJpYWxzQXNEaXJ0eSg2Myk7dGhpcy5fcGlwZWxpbmVDb250ZXh0Ll9oYW5kbGVzU3BlY3RvclJlYnVpbGRDYWxsYmFjayhpKX0sdGhpcy5fZmFsbGJhY2tzPW51bGwsdGhpcy5fcHJlcGFyZUVmZmVjdCgpfV9wcmVwYXJlRWZmZWN0KCl7Y29uc3QgZT10aGlzLl9hdHRyaWJ1dGVzTmFtZXMsdD10aGlzLmRlZmluZXMsaT10aGlzLl9waXBlbGluZUNvbnRleHQ7dGhpcy5faXNSZWFkeT0hMTt0cnl7Y29uc3Qgcz10aGlzLl9lbmdpbmU7dGhpcy5fcGlwZWxpbmVDb250ZXh0PXMuY3JlYXRlUGlwZWxpbmVDb250ZXh0KHRoaXMuX3Byb2Nlc3NpbmdDb250ZXh0KSx0aGlzLl9waXBlbGluZUNvbnRleHQuX25hbWU9dGhpcy5fa2V5O2NvbnN0IHI9dGhpcy5fcmVidWlsZFByb2dyYW0uYmluZCh0aGlzKTt0aGlzLl92ZXJ0ZXhTb3VyY2VDb2RlT3ZlcnJpZGUmJnRoaXMuX2ZyYWdtZW50U291cmNlQ29kZU92ZXJyaWRlP3MuX3ByZXBhcmVQaXBlbGluZUNvbnRleHQodGhpcy5fcGlwZWxpbmVDb250ZXh0LHRoaXMuX3ZlcnRleFNvdXJjZUNvZGVPdmVycmlkZSx0aGlzLl9mcmFnbWVudFNvdXJjZUNvZGVPdmVycmlkZSwhMCx0aGlzLl9yYXdWZXJ0ZXhTb3VyY2VDb2RlLHRoaXMuX3Jhd0ZyYWdtZW50U291cmNlQ29kZSxyLG51bGwsdGhpcy5fdHJhbnNmb3JtRmVlZGJhY2tWYXJ5aW5ncyx0aGlzLl9rZXkpOnMuX3ByZXBhcmVQaXBlbGluZUNvbnRleHQodGhpcy5fcGlwZWxpbmVDb250ZXh0LHRoaXMuX3ZlcnRleFNvdXJjZUNvZGUsdGhpcy5fZnJhZ21lbnRTb3VyY2VDb2RlLCExLHRoaXMuX3Jhd1ZlcnRleFNvdXJjZUNvZGUsdGhpcy5fcmF3RnJhZ21lbnRTb3VyY2VDb2RlLHIsdCx0aGlzLl90cmFuc2Zvcm1GZWVkYmFja1ZhcnlpbmdzLHRoaXMuX2tleSkscy5fZXhlY3V0ZVdoZW5SZW5kZXJpbmdTdGF0ZUlzQ29tcGlsZWQodGhpcy5fcGlwZWxpbmVDb250ZXh0LCgpPT57aWYodGhpcy5fYXR0cmlidXRlcz1bXSx0aGlzLl9waXBlbGluZUNvbnRleHQuX2ZpbGxFZmZlY3RJbmZvcm1hdGlvbih0aGlzLHRoaXMuX3VuaWZvcm1CdWZmZXJzTmFtZXMsdGhpcy5fdW5pZm9ybXNOYW1lcyx0aGlzLl91bmlmb3Jtcyx0aGlzLl9zYW1wbGVyTGlzdCx0aGlzLl9zYW1wbGVycyxlLHRoaXMuX2F0dHJpYnV0ZXMpLGUpZm9yKGxldCBuPTA7bjxlLmxlbmd0aDtuKyspe2NvbnN0IGE9ZVtuXTt0aGlzLl9hdHRyaWJ1dGVMb2NhdGlvbkJ5TmFtZVthXT10aGlzLl9hdHRyaWJ1dGVzW25dfXMuYmluZFNhbXBsZXJzKHRoaXMpLHRoaXMuX2NvbXBpbGF0aW9uRXJyb3I9IiIsdGhpcy5faXNSZWFkeT0hMCx0aGlzLm9uQ29tcGlsZWQmJnRoaXMub25Db21waWxlZCh0aGlzKSx0aGlzLm9uQ29tcGlsZU9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLHRoaXMub25Db21waWxlT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMuX2ZhbGxiYWNrcyYmdGhpcy5fZmFsbGJhY2tzLnVuQmluZE1lc2goKSxpJiZ0aGlzLmdldEVuZ2luZSgpLl9kZWxldGVQaXBlbGluZUNvbnRleHQoaSl9KSx0aGlzLl9waXBlbGluZUNvbnRleHQuaXNBc3luYyYmdGhpcy5fY2hlY2tJc1JlYWR5KGkpfWNhdGNoKHMpe3RoaXMuX3Byb2Nlc3NDb21waWxhdGlvbkVycm9ycyhzLGkpfX1fZ2V0U2hhZGVyQ29kZUFuZEVycm9yTGluZShlLHQsaSl7Y29uc3Qgcz1pPy9GUkFHTUVOVCBTSEFERVIgRVJST1I6IDA6KFxkKz8pOi86L1ZFUlRFWCBTSEFERVIgRVJST1I6IDA6KFxkKz8pOi87bGV0IHI9bnVsbDtpZih0JiZlKXtjb25zdCBuPXQubWF0Y2gocyk7aWYobiYmbi5sZW5ndGg9PT0yKXtjb25zdCBhPXBhcnNlSW50KG5bMV0pLG89ZS5zcGxpdChgCmAsLTEpO28ubGVuZ3RoPj1hJiYocj1gT2ZmZW5kaW5nIGxpbmUgWyR7YX1dIGluICR7aT8iZnJhZ21lbnQiOiJ2ZXJ0ZXgifSBjb2RlOiAke29bYS0xXX1gKX19cmV0dXJuW2Uscl19X3Byb2Nlc3NDb21waWxhdGlvbkVycm9ycyhlLHQ9bnVsbCl7dmFyIGkscyxyO3RoaXMuX2NvbXBpbGF0aW9uRXJyb3I9ZS5tZXNzYWdlO2NvbnN0IG49dGhpcy5fYXR0cmlidXRlc05hbWVzLGE9dGhpcy5fZmFsbGJhY2tzO2lmKE8uRXJyb3IoIlVuYWJsZSB0byBjb21waWxlIGVmZmVjdDoiKSxPLkVycm9yKCJVbmlmb3JtczogIit0aGlzLl91bmlmb3Jtc05hbWVzLm1hcChmdW5jdGlvbihoKXtyZXR1cm4iICIraH0pKSxPLkVycm9yKCJBdHRyaWJ1dGVzOiAiK24ubWFwKGZ1bmN0aW9uKGgpe3JldHVybiIgIitofSkpLE8uRXJyb3IoYERlZmluZXM6XHIKYCt0aGlzLmRlZmluZXMpLFBlLkxvZ1NoYWRlckNvZGVPbkNvbXBpbGF0aW9uRXJyb3Ipe2xldCBoPW51bGwsbD1udWxsLHU9bnVsbDshKChpPXRoaXMuX3BpcGVsaW5lQ29udGV4dCk9PT1udWxsfHxpPT09dm9pZCAwKSYmaS5fZ2V0VmVydGV4U2hhZGVyQ29kZSgpJiYoW3UsaF09dGhpcy5fZ2V0U2hhZGVyQ29kZUFuZEVycm9yTGluZSh0aGlzLl9waXBlbGluZUNvbnRleHQuX2dldFZlcnRleFNoYWRlckNvZGUoKSx0aGlzLl9jb21waWxhdGlvbkVycm9yLCExKSx1JiYoTy5FcnJvcigiVmVydGV4IGNvZGU6IiksTy5FcnJvcih1KSkpLCEoKHM9dGhpcy5fcGlwZWxpbmVDb250ZXh0KT09PW51bGx8fHM9PT12b2lkIDApJiZzLl9nZXRGcmFnbWVudFNoYWRlckNvZGUoKSYmKFt1LGxdPXRoaXMuX2dldFNoYWRlckNvZGVBbmRFcnJvckxpbmUoKHI9dGhpcy5fcGlwZWxpbmVDb250ZXh0KT09PW51bGx8fHI9PT12b2lkIDA/dm9pZCAwOnIuX2dldEZyYWdtZW50U2hhZGVyQ29kZSgpLHRoaXMuX2NvbXBpbGF0aW9uRXJyb3IsITApLHUmJihPLkVycm9yKCJGcmFnbWVudCBjb2RlOiIpLE8uRXJyb3IodSkpKSxoJiZPLkVycm9yKGgpLGwmJk8uRXJyb3IobCl9Ty5FcnJvcigiRXJyb3I6ICIrdGhpcy5fY29tcGlsYXRpb25FcnJvcik7Y29uc3Qgbz0oKT0+e3RoaXMub25FcnJvciYmdGhpcy5vbkVycm9yKHRoaXMsdGhpcy5fY29tcGlsYXRpb25FcnJvciksdGhpcy5vbkVycm9yT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyl9O3QmJih0aGlzLl9waXBlbGluZUNvbnRleHQ9dCx0aGlzLl9pc1JlYWR5PSEwLG8oKSksYT8odGhpcy5fcGlwZWxpbmVDb250ZXh0PW51bGwsYS5oYXNNb3JlRmFsbGJhY2tzPyh0aGlzLl9hbGxGYWxsYmFja3NQcm9jZXNzZWQ9ITEsTy5FcnJvcigiVHJ5aW5nIG5leHQgZmFsbGJhY2suIiksdGhpcy5kZWZpbmVzPWEucmVkdWNlKHRoaXMuZGVmaW5lcyx0aGlzKSx0aGlzLl9wcmVwYXJlRWZmZWN0KCkpOih0aGlzLl9hbGxGYWxsYmFja3NQcm9jZXNzZWQ9ITAsbygpLHRoaXMub25FcnJvck9ic2VydmFibGUuY2xlYXIoKSx0aGlzLl9mYWxsYmFja3MmJnRoaXMuX2ZhbGxiYWNrcy51bkJpbmRNZXNoKCkpKToodGhpcy5fYWxsRmFsbGJhY2tzUHJvY2Vzc2VkPSEwLHR8fG8oKSl9Z2V0IGlzU3VwcG9ydGVkKCl7cmV0dXJuIHRoaXMuX2NvbXBpbGF0aW9uRXJyb3I9PT0iIn1fYmluZFRleHR1cmUoZSx0KXt0aGlzLl9lbmdpbmUuX2JpbmRUZXh0dXJlKHRoaXMuX3NhbXBsZXJzW2VdLHQsZSl9c2V0VGV4dHVyZShlLHQpe3RoaXMuX2VuZ2luZS5zZXRUZXh0dXJlKHRoaXMuX3NhbXBsZXJzW2VdLHRoaXMuX3VuaWZvcm1zW2VdLHQsZSl9c2V0RGVwdGhTdGVuY2lsVGV4dHVyZShlLHQpe3RoaXMuX2VuZ2luZS5zZXREZXB0aFN0ZW5jaWxUZXh0dXJlKHRoaXMuX3NhbXBsZXJzW2VdLHRoaXMuX3VuaWZvcm1zW2VdLHQsZSl9c2V0VGV4dHVyZUFycmF5KGUsdCl7Y29uc3QgaT1lKyJFeCI7aWYodGhpcy5fc2FtcGxlckxpc3QuaW5kZXhPZihpKyIwIik9PT0tMSl7Y29uc3Qgcz10aGlzLl9zYW1wbGVyTGlzdC5pbmRleE9mKGUpO2ZvcihsZXQgbj0xO248dC5sZW5ndGg7bisrKXtjb25zdCBhPWkrKG4tMSkudG9TdHJpbmcoKTt0aGlzLl9zYW1wbGVyTGlzdC5zcGxpY2UocytuLDAsYSl9bGV0IHI9MDtmb3IoY29uc3QgbiBvZiB0aGlzLl9zYW1wbGVyTGlzdCl0aGlzLl9zYW1wbGVyc1tuXT1yLHIrPTF9dGhpcy5fZW5naW5lLnNldFRleHR1cmVBcnJheSh0aGlzLl9zYW1wbGVyc1tlXSx0aGlzLl91bmlmb3Jtc1tlXSx0LGUpfXNldFRleHR1cmVGcm9tUG9zdFByb2Nlc3MoZSx0KXt0aGlzLl9lbmdpbmUuc2V0VGV4dHVyZUZyb21Qb3N0UHJvY2Vzcyh0aGlzLl9zYW1wbGVyc1tlXSx0LGUpfXNldFRleHR1cmVGcm9tUG9zdFByb2Nlc3NPdXRwdXQoZSx0KXt0aGlzLl9lbmdpbmUuc2V0VGV4dHVyZUZyb21Qb3N0UHJvY2Vzc091dHB1dCh0aGlzLl9zYW1wbGVyc1tlXSx0LGUpfWJpbmRVbmlmb3JtQnVmZmVyKGUsdCl7Y29uc3QgaT10aGlzLl91bmlmb3JtQnVmZmVyc05hbWVzW3RdO2k9PT12b2lkIDB8fFBlLl9CYXNlQ2FjaGVbaV09PT1lJiZ0aGlzLl9lbmdpbmUuX2ZlYXR1cmVzLnVzZVVCT0JpbmRpbmdDYWNoZXx8KFBlLl9CYXNlQ2FjaGVbaV09ZSx0aGlzLl9lbmdpbmUuYmluZFVuaWZvcm1CdWZmZXJCYXNlKGUsaSx0KSl9YmluZFVuaWZvcm1CbG9jayhlLHQpe3RoaXMuX2VuZ2luZS5iaW5kVW5pZm9ybUJsb2NrKHRoaXMuX3BpcGVsaW5lQ29udGV4dCxlLHQpfXNldEZsb2F0QXJyYXkoZSx0KXtyZXR1cm4gdGhpcy5fcGlwZWxpbmVDb250ZXh0LnNldEFycmF5KGUsdCksdGhpc31zZXRGbG9hdEFycmF5MihlLHQpe3JldHVybiB0aGlzLl9waXBlbGluZUNvbnRleHQuc2V0QXJyYXkyKGUsdCksdGhpc31zZXRGbG9hdEFycmF5MyhlLHQpe3JldHVybiB0aGlzLl9waXBlbGluZUNvbnRleHQuc2V0QXJyYXkzKGUsdCksdGhpc31zZXRGbG9hdEFycmF5NChlLHQpe3JldHVybiB0aGlzLl9waXBlbGluZUNvbnRleHQuc2V0QXJyYXk0KGUsdCksdGhpc31zZXRCb29sKGUsdCl7cmV0dXJuIHRoaXMuX3BpcGVsaW5lQ29udGV4dC5zZXRJbnQoZSx0PzE6MCksdGhpc31kaXNwb3NlKCl7dmFyIGU7KGU9dGhpcy5fcGlwZWxpbmVDb250ZXh0KT09PW51bGx8fGU9PT12b2lkIDB8fGUuZGlzcG9zZSgpLHRoaXMuX2VuZ2luZS5fcmVsZWFzZUVmZmVjdCh0aGlzKSx0aGlzLl9pc0Rpc3Bvc2VkPSEwfXN0YXRpYyBSZWdpc3RlclNoYWRlcihlLHQsaSxzPVplLkdMU0wpe3QmJihVLkdldFNoYWRlcnNTdG9yZShzKVtgJHtlfVBpeGVsU2hhZGVyYF09dCksaSYmKFUuR2V0U2hhZGVyc1N0b3JlKHMpW2Ake2V9VmVydGV4U2hhZGVyYF09aSl9c3RhdGljIFJlc2V0Q2FjaGUoKXtQZS5fQmFzZUNhY2hlPXt9fX1QZS5Mb2dTaGFkZXJDb2RlT25Db21waWxhdGlvbkVycm9yPSEwLFBlLl9VbmlxdWVJZFNlZWQ9MCxQZS5fQmFzZUNhY2hlPXt9LFBlLlNoYWRlcnNTdG9yZT1VLlNoYWRlcnNTdG9yZSxQZS5JbmNsdWRlc1NoYWRlcnNTdG9yZT1VLkluY2x1ZGVzU2hhZGVyc1N0b3JlO2NsYXNzIHJue2NvbnN0cnVjdG9yKGU9ITApe3RoaXMuX2lzRGVwdGhUZXN0RGlydHk9ITEsdGhpcy5faXNEZXB0aE1hc2tEaXJ0eT0hMSx0aGlzLl9pc0RlcHRoRnVuY0RpcnR5PSExLHRoaXMuX2lzQ3VsbEZhY2VEaXJ0eT0hMSx0aGlzLl9pc0N1bGxEaXJ0eT0hMSx0aGlzLl9pc1pPZmZzZXREaXJ0eT0hMSx0aGlzLl9pc0Zyb250RmFjZURpcnR5PSExLGUmJnRoaXMucmVzZXQoKX1nZXQgaXNEaXJ0eSgpe3JldHVybiB0aGlzLl9pc0RlcHRoRnVuY0RpcnR5fHx0aGlzLl9pc0RlcHRoVGVzdERpcnR5fHx0aGlzLl9pc0RlcHRoTWFza0RpcnR5fHx0aGlzLl9pc0N1bGxGYWNlRGlydHl8fHRoaXMuX2lzQ3VsbERpcnR5fHx0aGlzLl9pc1pPZmZzZXREaXJ0eXx8dGhpcy5faXNGcm9udEZhY2VEaXJ0eX1nZXQgek9mZnNldCgpe3JldHVybiB0aGlzLl96T2Zmc2V0fXNldCB6T2Zmc2V0KGUpe3RoaXMuX3pPZmZzZXQhPT1lJiYodGhpcy5fek9mZnNldD1lLHRoaXMuX2lzWk9mZnNldERpcnR5PSEwKX1nZXQgek9mZnNldFVuaXRzKCl7cmV0dXJuIHRoaXMuX3pPZmZzZXRVbml0c31zZXQgek9mZnNldFVuaXRzKGUpe3RoaXMuX3pPZmZzZXRVbml0cyE9PWUmJih0aGlzLl96T2Zmc2V0VW5pdHM9ZSx0aGlzLl9pc1pPZmZzZXREaXJ0eT0hMCl9Z2V0IGN1bGxGYWNlKCl7cmV0dXJuIHRoaXMuX2N1bGxGYWNlfXNldCBjdWxsRmFjZShlKXt0aGlzLl9jdWxsRmFjZSE9PWUmJih0aGlzLl9jdWxsRmFjZT1lLHRoaXMuX2lzQ3VsbEZhY2VEaXJ0eT0hMCl9Z2V0IGN1bGwoKXtyZXR1cm4gdGhpcy5fY3VsbH1zZXQgY3VsbChlKXt0aGlzLl9jdWxsIT09ZSYmKHRoaXMuX2N1bGw9ZSx0aGlzLl9pc0N1bGxEaXJ0eT0hMCl9Z2V0IGRlcHRoRnVuYygpe3JldHVybiB0aGlzLl9kZXB0aEZ1bmN9c2V0IGRlcHRoRnVuYyhlKXt0aGlzLl9kZXB0aEZ1bmMhPT1lJiYodGhpcy5fZGVwdGhGdW5jPWUsdGhpcy5faXNEZXB0aEZ1bmNEaXJ0eT0hMCl9Z2V0IGRlcHRoTWFzaygpe3JldHVybiB0aGlzLl9kZXB0aE1hc2t9c2V0IGRlcHRoTWFzayhlKXt0aGlzLl9kZXB0aE1hc2shPT1lJiYodGhpcy5fZGVwdGhNYXNrPWUsdGhpcy5faXNEZXB0aE1hc2tEaXJ0eT0hMCl9Z2V0IGRlcHRoVGVzdCgpe3JldHVybiB0aGlzLl9kZXB0aFRlc3R9c2V0IGRlcHRoVGVzdChlKXt0aGlzLl9kZXB0aFRlc3QhPT1lJiYodGhpcy5fZGVwdGhUZXN0PWUsdGhpcy5faXNEZXB0aFRlc3REaXJ0eT0hMCl9Z2V0IGZyb250RmFjZSgpe3JldHVybiB0aGlzLl9mcm9udEZhY2V9c2V0IGZyb250RmFjZShlKXt0aGlzLl9mcm9udEZhY2UhPT1lJiYodGhpcy5fZnJvbnRGYWNlPWUsdGhpcy5faXNGcm9udEZhY2VEaXJ0eT0hMCl9cmVzZXQoKXt0aGlzLl9kZXB0aE1hc2s9ITAsdGhpcy5fZGVwdGhUZXN0PSEwLHRoaXMuX2RlcHRoRnVuYz1udWxsLHRoaXMuX2N1bGxGYWNlPW51bGwsdGhpcy5fY3VsbD1udWxsLHRoaXMuX3pPZmZzZXQ9MCx0aGlzLl96T2Zmc2V0VW5pdHM9MCx0aGlzLl9mcm9udEZhY2U9bnVsbCx0aGlzLl9pc0RlcHRoVGVzdERpcnR5PSEwLHRoaXMuX2lzRGVwdGhNYXNrRGlydHk9ITAsdGhpcy5faXNEZXB0aEZ1bmNEaXJ0eT0hMSx0aGlzLl9pc0N1bGxGYWNlRGlydHk9ITEsdGhpcy5faXNDdWxsRGlydHk9ITEsdGhpcy5faXNaT2Zmc2V0RGlydHk9ITAsdGhpcy5faXNGcm9udEZhY2VEaXJ0eT0hMX1hcHBseShlKXt0aGlzLmlzRGlydHkmJih0aGlzLl9pc0N1bGxEaXJ0eSYmKHRoaXMuY3VsbD9lLmVuYWJsZShlLkNVTExfRkFDRSk6ZS5kaXNhYmxlKGUuQ1VMTF9GQUNFKSx0aGlzLl9pc0N1bGxEaXJ0eT0hMSksdGhpcy5faXNDdWxsRmFjZURpcnR5JiYoZS5jdWxsRmFjZSh0aGlzLmN1bGxGYWNlKSx0aGlzLl9pc0N1bGxGYWNlRGlydHk9ITEpLHRoaXMuX2lzRGVwdGhNYXNrRGlydHkmJihlLmRlcHRoTWFzayh0aGlzLmRlcHRoTWFzayksdGhpcy5faXNEZXB0aE1hc2tEaXJ0eT0hMSksdGhpcy5faXNEZXB0aFRlc3REaXJ0eSYmKHRoaXMuZGVwdGhUZXN0P2UuZW5hYmxlKGUuREVQVEhfVEVTVCk6ZS5kaXNhYmxlKGUuREVQVEhfVEVTVCksdGhpcy5faXNEZXB0aFRlc3REaXJ0eT0hMSksdGhpcy5faXNEZXB0aEZ1bmNEaXJ0eSYmKGUuZGVwdGhGdW5jKHRoaXMuZGVwdGhGdW5jKSx0aGlzLl9pc0RlcHRoRnVuY0RpcnR5PSExKSx0aGlzLl9pc1pPZmZzZXREaXJ0eSYmKHRoaXMuek9mZnNldHx8dGhpcy56T2Zmc2V0VW5pdHM/KGUuZW5hYmxlKGUuUE9MWUdPTl9PRkZTRVRfRklMTCksZS5wb2x5Z29uT2Zmc2V0KHRoaXMuek9mZnNldCx0aGlzLnpPZmZzZXRVbml0cykpOmUuZGlzYWJsZShlLlBPTFlHT05fT0ZGU0VUX0ZJTEwpLHRoaXMuX2lzWk9mZnNldERpcnR5PSExKSx0aGlzLl9pc0Zyb250RmFjZURpcnR5JiYoZS5mcm9udEZhY2UodGhpcy5mcm9udEZhY2UpLHRoaXMuX2lzRnJvbnRGYWNlRGlydHk9ITEpKX19Y2xhc3MgTHR7Y29uc3RydWN0b3IoKXt0aGlzLnJlc2V0KCl9cmVzZXQoKXt0aGlzLmVuYWJsZWQ9ITEsdGhpcy5tYXNrPTI1NSx0aGlzLmZ1bmM9THQuQUxXQVlTLHRoaXMuZnVuY1JlZj0xLHRoaXMuZnVuY01hc2s9MjU1LHRoaXMub3BTdGVuY2lsRmFpbD1MdC5LRUVQLHRoaXMub3BEZXB0aEZhaWw9THQuS0VFUCx0aGlzLm9wU3RlbmNpbERlcHRoUGFzcz1MdC5SRVBMQUNFfWdldCBzdGVuY2lsRnVuYygpe3JldHVybiB0aGlzLmZ1bmN9c2V0IHN0ZW5jaWxGdW5jKGUpe3RoaXMuZnVuYz1lfWdldCBzdGVuY2lsRnVuY1JlZigpe3JldHVybiB0aGlzLmZ1bmNSZWZ9c2V0IHN0ZW5jaWxGdW5jUmVmKGUpe3RoaXMuZnVuY1JlZj1lfWdldCBzdGVuY2lsRnVuY01hc2soKXtyZXR1cm4gdGhpcy5mdW5jTWFza31zZXQgc3RlbmNpbEZ1bmNNYXNrKGUpe3RoaXMuZnVuY01hc2s9ZX1nZXQgc3RlbmNpbE9wU3RlbmNpbEZhaWwoKXtyZXR1cm4gdGhpcy5vcFN0ZW5jaWxGYWlsfXNldCBzdGVuY2lsT3BTdGVuY2lsRmFpbChlKXt0aGlzLm9wU3RlbmNpbEZhaWw9ZX1nZXQgc3RlbmNpbE9wRGVwdGhGYWlsKCl7cmV0dXJuIHRoaXMub3BEZXB0aEZhaWx9c2V0IHN0ZW5jaWxPcERlcHRoRmFpbChlKXt0aGlzLm9wRGVwdGhGYWlsPWV9Z2V0IHN0ZW5jaWxPcFN0ZW5jaWxEZXB0aFBhc3MoKXtyZXR1cm4gdGhpcy5vcFN0ZW5jaWxEZXB0aFBhc3N9c2V0IHN0ZW5jaWxPcFN0ZW5jaWxEZXB0aFBhc3MoZSl7dGhpcy5vcFN0ZW5jaWxEZXB0aFBhc3M9ZX1nZXQgc3RlbmNpbE1hc2soKXtyZXR1cm4gdGhpcy5tYXNrfXNldCBzdGVuY2lsTWFzayhlKXt0aGlzLm1hc2s9ZX1nZXQgc3RlbmNpbFRlc3QoKXtyZXR1cm4gdGhpcy5lbmFibGVkfXNldCBzdGVuY2lsVGVzdChlKXt0aGlzLmVuYWJsZWQ9ZX19THQuQUxXQVlTPTUxOSxMdC5LRUVQPTc2ODAsTHQuUkVQTEFDRT03NjgxO2NsYXNzIG5ue2NvbnN0cnVjdG9yKCl7dGhpcy5fYmxlbmRGdW5jdGlvblBhcmFtZXRlcnM9bmV3IEFycmF5KDQpLHRoaXMuX2JsZW5kRXF1YXRpb25QYXJhbWV0ZXJzPW5ldyBBcnJheSgyKSx0aGlzLl9ibGVuZENvbnN0YW50cz1uZXcgQXJyYXkoNCksdGhpcy5faXNCbGVuZENvbnN0YW50c0RpcnR5PSExLHRoaXMuX2FscGhhQmxlbmQ9ITEsdGhpcy5faXNBbHBoYUJsZW5kRGlydHk9ITEsdGhpcy5faXNCbGVuZEZ1bmN0aW9uUGFyYW1ldGVyc0RpcnR5PSExLHRoaXMuX2lzQmxlbmRFcXVhdGlvblBhcmFtZXRlcnNEaXJ0eT0hMSx0aGlzLnJlc2V0KCl9Z2V0IGlzRGlydHkoKXtyZXR1cm4gdGhpcy5faXNBbHBoYUJsZW5kRGlydHl8fHRoaXMuX2lzQmxlbmRGdW5jdGlvblBhcmFtZXRlcnNEaXJ0eXx8dGhpcy5faXNCbGVuZEVxdWF0aW9uUGFyYW1ldGVyc0RpcnR5fWdldCBhbHBoYUJsZW5kKCl7cmV0dXJuIHRoaXMuX2FscGhhQmxlbmR9c2V0IGFscGhhQmxlbmQoZSl7dGhpcy5fYWxwaGFCbGVuZCE9PWUmJih0aGlzLl9hbHBoYUJsZW5kPWUsdGhpcy5faXNBbHBoYUJsZW5kRGlydHk9ITApfXNldEFscGhhQmxlbmRDb25zdGFudHMoZSx0LGkscyl7dGhpcy5fYmxlbmRDb25zdGFudHNbMF09PT1lJiZ0aGlzLl9ibGVuZENvbnN0YW50c1sxXT09PXQmJnRoaXMuX2JsZW5kQ29uc3RhbnRzWzJdPT09aSYmdGhpcy5fYmxlbmRDb25zdGFudHNbM109PT1zfHwodGhpcy5fYmxlbmRDb25zdGFudHNbMF09ZSx0aGlzLl9ibGVuZENvbnN0YW50c1sxXT10LHRoaXMuX2JsZW5kQ29uc3RhbnRzWzJdPWksdGhpcy5fYmxlbmRDb25zdGFudHNbM109cyx0aGlzLl9pc0JsZW5kQ29uc3RhbnRzRGlydHk9ITApfXNldEFscGhhQmxlbmRGdW5jdGlvblBhcmFtZXRlcnMoZSx0LGkscyl7dGhpcy5fYmxlbmRGdW5jdGlvblBhcmFtZXRlcnNbMF09PT1lJiZ0aGlzLl9ibGVuZEZ1bmN0aW9uUGFyYW1ldGVyc1sxXT09PXQmJnRoaXMuX2JsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzWzJdPT09aSYmdGhpcy5fYmxlbmRGdW5jdGlvblBhcmFtZXRlcnNbM109PT1zfHwodGhpcy5fYmxlbmRGdW5jdGlvblBhcmFtZXRlcnNbMF09ZSx0aGlzLl9ibGVuZEZ1bmN0aW9uUGFyYW1ldGVyc1sxXT10LHRoaXMuX2JsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzWzJdPWksdGhpcy5fYmxlbmRGdW5jdGlvblBhcmFtZXRlcnNbM109cyx0aGlzLl9pc0JsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzRGlydHk9ITApfXNldEFscGhhRXF1YXRpb25QYXJhbWV0ZXJzKGUsdCl7dGhpcy5fYmxlbmRFcXVhdGlvblBhcmFtZXRlcnNbMF09PT1lJiZ0aGlzLl9ibGVuZEVxdWF0aW9uUGFyYW1ldGVyc1sxXT09PXR8fCh0aGlzLl9ibGVuZEVxdWF0aW9uUGFyYW1ldGVyc1swXT1lLHRoaXMuX2JsZW5kRXF1YXRpb25QYXJhbWV0ZXJzWzFdPXQsdGhpcy5faXNCbGVuZEVxdWF0aW9uUGFyYW1ldGVyc0RpcnR5PSEwKX1yZXNldCgpe3RoaXMuX2FscGhhQmxlbmQ9ITEsdGhpcy5fYmxlbmRGdW5jdGlvblBhcmFtZXRlcnNbMF09bnVsbCx0aGlzLl9ibGVuZEZ1bmN0aW9uUGFyYW1ldGVyc1sxXT1udWxsLHRoaXMuX2JsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzWzJdPW51bGwsdGhpcy5fYmxlbmRGdW5jdGlvblBhcmFtZXRlcnNbM109bnVsbCx0aGlzLl9ibGVuZEVxdWF0aW9uUGFyYW1ldGVyc1swXT1udWxsLHRoaXMuX2JsZW5kRXF1YXRpb25QYXJhbWV0ZXJzWzFdPW51bGwsdGhpcy5fYmxlbmRDb25zdGFudHNbMF09bnVsbCx0aGlzLl9ibGVuZENvbnN0YW50c1sxXT1udWxsLHRoaXMuX2JsZW5kQ29uc3RhbnRzWzJdPW51bGwsdGhpcy5fYmxlbmRDb25zdGFudHNbM109bnVsbCx0aGlzLl9pc0FscGhhQmxlbmREaXJ0eT0hMCx0aGlzLl9pc0JsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzRGlydHk9ITEsdGhpcy5faXNCbGVuZEVxdWF0aW9uUGFyYW1ldGVyc0RpcnR5PSExLHRoaXMuX2lzQmxlbmRDb25zdGFudHNEaXJ0eT0hMX1hcHBseShlKXt0aGlzLmlzRGlydHkmJih0aGlzLl9pc0FscGhhQmxlbmREaXJ0eSYmKHRoaXMuX2FscGhhQmxlbmQ/ZS5lbmFibGUoZS5CTEVORCk6ZS5kaXNhYmxlKGUuQkxFTkQpLHRoaXMuX2lzQWxwaGFCbGVuZERpcnR5PSExKSx0aGlzLl9pc0JsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzRGlydHkmJihlLmJsZW5kRnVuY1NlcGFyYXRlKHRoaXMuX2JsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzWzBdLHRoaXMuX2JsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzWzFdLHRoaXMuX2JsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzWzJdLHRoaXMuX2JsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzWzNdKSx0aGlzLl9pc0JsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzRGlydHk9ITEpLHRoaXMuX2lzQmxlbmRFcXVhdGlvblBhcmFtZXRlcnNEaXJ0eSYmKGUuYmxlbmRFcXVhdGlvblNlcGFyYXRlKHRoaXMuX2JsZW5kRXF1YXRpb25QYXJhbWV0ZXJzWzBdLHRoaXMuX2JsZW5kRXF1YXRpb25QYXJhbWV0ZXJzWzFdKSx0aGlzLl9pc0JsZW5kRXF1YXRpb25QYXJhbWV0ZXJzRGlydHk9ITEpLHRoaXMuX2lzQmxlbmRDb25zdGFudHNEaXJ0eSYmKGUuYmxlbmRDb2xvcih0aGlzLl9ibGVuZENvbnN0YW50c1swXSx0aGlzLl9ibGVuZENvbnN0YW50c1sxXSx0aGlzLl9ibGVuZENvbnN0YW50c1syXSx0aGlzLl9ibGVuZENvbnN0YW50c1szXSksdGhpcy5faXNCbGVuZENvbnN0YW50c0RpcnR5PSExKSl9fWNsYXNzIGFue2NvbnN0cnVjdG9yKCl7dGhpcy5zaGFkZXJMYW5ndWFnZT1aZS5HTFNMfXBvc3RQcm9jZXNzb3IoZSx0LGkscyxyKXtpZighci5nZXRDYXBzKCkuZHJhd0J1ZmZlcnNFeHRlbnNpb24pe2NvbnN0IG49LyNleHRlbnNpb24uK0dMX0VYVF9kcmF3X2J1ZmZlcnMuKyhlbmFibGV8cmVxdWlyZSkvZztlPWUucmVwbGFjZShuLCIiKX1yZXR1cm4gZX19Y2xhc3Mgb257Y29uc3RydWN0b3IoKXt0aGlzLnNoYWRlckxhbmd1YWdlPVplLkdMU0x9YXR0cmlidXRlUHJvY2Vzc29yKGUpe3JldHVybiBlLnJlcGxhY2UoImF0dHJpYnV0ZSIsImluIil9dmFyeWluZ1Byb2Nlc3NvcihlLHQpe3JldHVybiBlLnJlcGxhY2UoInZhcnlpbmciLHQ/ImluIjoib3V0Iil9cG9zdFByb2Nlc3NvcihlLHQsaSl7Y29uc3Qgcz1lLnNlYXJjaCgvI2V4dGVuc2lvbi4rR0xfRVhUX2RyYXdfYnVmZmVycy4rcmVxdWlyZS8pIT09LTEscj0vI2V4dGVuc2lvbi4rKEdMX09WUl9tdWx0aXZpZXcyfEdMX09FU19zdGFuZGFyZF9kZXJpdmF0aXZlc3xHTF9FWFRfc2hhZGVyX3RleHR1cmVfbG9kfEdMX0VYVF9mcmFnX2RlcHRofEdMX0VYVF9kcmF3X2J1ZmZlcnMpLisoZW5hYmxlfHJlcXVpcmUpL2c7aWYoZT1lLnJlcGxhY2UociwiIiksZT1lLnJlcGxhY2UoL3RleHR1cmUyRFxzKlwoL2csInRleHR1cmUoIiksaSllPWUucmVwbGFjZSgvdGV4dHVyZTJETG9kRVhUXHMqXCgvZywidGV4dHVyZUxvZCgiKSxlPWUucmVwbGFjZSgvdGV4dHVyZUN1YmVMb2RFWFRccypcKC9nLCJ0ZXh0dXJlTG9kKCIpLGU9ZS5yZXBsYWNlKC90ZXh0dXJlQ3ViZVxzKlwoL2csInRleHR1cmUoIiksZT1lLnJlcGxhY2UoL2dsX0ZyYWdEZXB0aEVYVC9nLCJnbF9GcmFnRGVwdGgiKSxlPWUucmVwbGFjZSgvZ2xfRnJhZ0NvbG9yL2csImdsRnJhZ0NvbG9yIiksZT1lLnJlcGxhY2UoL2dsX0ZyYWdEYXRhL2csImdsRnJhZ0RhdGEiKSxlPWUucmVwbGFjZSgvdm9pZFxzKz9tYWluXHMqXCgvZywocz8iIjpgbGF5b3V0KGxvY2F0aW9uID0gMCkgb3V0IHZlYzQgZ2xGcmFnQ29sb3I7CmApKyJ2b2lkIG1haW4oIik7ZWxzZSBpZih0LmluZGV4T2YoIiNkZWZpbmUgTVVMVElWSUVXIikhPT0tMSlyZXR1cm5gI2V4dGVuc2lvbiBHTF9PVlJfbXVsdGl2aWV3MiA6IHJlcXVpcmUKbGF5b3V0IChudW1fdmlld3MgPSAyKSBpbjsKYCtlO3JldHVybiBlfX1jbGFzcyBQaXtjb25zdHJ1Y3Rvcigpe3RoaXMucmVmZXJlbmNlcz0wLHRoaXMuY2FwYWNpdHk9MCx0aGlzLmlzMzJCaXRzPSExLHRoaXMudW5pcXVlSWQ9UGkuX0NvdW50ZXIrK31nZXQgdW5kZXJseWluZ1Jlc291cmNlKCl7cmV0dXJuIG51bGx9fVBpLl9Db3VudGVyPTA7Y2xhc3MgRGkgZXh0ZW5kcyBQaXtjb25zdHJ1Y3RvcihlKXtzdXBlcigpLHRoaXMuX2J1ZmZlcj1lfWdldCB1bmRlcmx5aW5nUmVzb3VyY2UoKXtyZXR1cm4gdGhpcy5fYnVmZmVyfX1jb25zdCBobj1bIkludCIsIkludDIiLCJJbnQzIiwiSW50NCIsIlVJbnQiLCJVSW50MiIsIlVJbnQzIiwiVUludDQiLCJWZWN0b3IyIiwiVmVjdG9yMyIsIlZlY3RvcjQiLCJGbG9hdDIiLCJGbG9hdCIsIkZsb2F0MyIsIkZsb2F0NCIsIlF1YXRlcm5pb24iLCJDb2xvcjMiLCJDb2xvcjQiLCJEaXJlY3RDb2xvcjQiXTtjbGFzcyBsbntjb25zdHJ1Y3Rvcigpe3RoaXMuX3ZhbHVlQ2FjaGU9e30sdGhpcy52ZXJ0ZXhDb21waWxhdGlvbkVycm9yPW51bGwsdGhpcy5mcmFnbWVudENvbXBpbGF0aW9uRXJyb3I9bnVsbCx0aGlzLnByb2dyYW1MaW5rRXJyb3I9bnVsbCx0aGlzLnByb2dyYW1WYWxpZGF0aW9uRXJyb3I9bnVsbDtjb25zdCBlPVtdLHQ9ZnVuY3Rpb24oKXtlLmxlbmd0aD0wLEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KGUsYXJndW1lbnRzKSxlWzBdPXRoaXMuX3VuaWZvcm1zW2VbMF1dfSxpPXM9Pntjb25zdCByPWhuLmluY2x1ZGVzKHMuc3Vic3RyaW5nKDMpKSYmIkZsb2F0TiI7aWYocil7Y29uc3Qgbj10aGlzW2BfY2FjaGUke3J9YF07cmV0dXJuIGZ1bmN0aW9uKCl7Y29uc3QgYT10aGlzLmVuZ2luZVtzXTt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKSxuLmFwcGx5KHRoaXMsYXJndW1lbnRzKSYmKGEuYXBwbHkodGhpcy5lbmdpbmUsZSl8fCh0aGlzLl92YWx1ZUNhY2hlW2FyZ3VtZW50c1swXV09bnVsbCkpfX1lbHNlIHJldHVybiBmdW5jdGlvbigpe2NvbnN0IG49dGhpcy5lbmdpbmVbc107dC5hcHBseSh0aGlzLGFyZ3VtZW50cyksYXJndW1lbnRzWzFdIT09dm9pZCAwJiYodGhpcy5fdmFsdWVDYWNoZVthcmd1bWVudHNbMF1dPW51bGwsbi5hcHBseSh0aGlzLmVuZ2luZSxlKSl9fTtbIkludD8iLCJVSW50PyIsIkludEFycmF5PyIsIlVJbnRBcnJheT8iLCJBcnJheT8iLCJGbG9hdD8iLCJNYXRyaWNlcyIsIk1hdHJpeDN4MyIsIk1hdHJpeDJ4MiJdLmZvckVhY2gocz0+e2NvbnN0IHI9YHNldCR7c31gO3RoaXNbcl18fChyLmVuZHNXaXRoKCI/Iik/WyIiLDIsMyw0XS5mb3JFYWNoKG49Pnt0aGlzW3Iuc2xpY2UoMCwtMSkrbl09dGhpc1tyLnNsaWNlKDAsLTEpK25dfHxpKHIuc2xpY2UoMCwtMSkrbikuYmluZCh0aGlzKX0pOnRoaXNbcl09dGhpc1tyXXx8aShyKS5iaW5kKHRoaXMpKX0pfWdldCBpc0FzeW5jKCl7cmV0dXJuIHRoaXMuaXNQYXJhbGxlbENvbXBpbGVkfWdldCBpc1JlYWR5KCl7cmV0dXJuIHRoaXMucHJvZ3JhbT90aGlzLmlzUGFyYWxsZWxDb21waWxlZD90aGlzLmVuZ2luZS5faXNSZW5kZXJpbmdTdGF0ZUNvbXBpbGVkKHRoaXMpOiEwOiExfV9oYW5kbGVzU3BlY3RvclJlYnVpbGRDYWxsYmFjayhlKXtlJiZ0aGlzLnByb2dyYW0mJmUodGhpcy5wcm9ncmFtKX1fZmlsbEVmZmVjdEluZm9ybWF0aW9uKGUsdCxpLHMscixuLGEsbyl7Y29uc3QgaD10aGlzLmVuZ2luZTtpZihoLnN1cHBvcnRzVW5pZm9ybUJ1ZmZlcnMpZm9yKGNvbnN0IGQgaW4gdCllLmJpbmRVbmlmb3JtQmxvY2soZCx0W2RdKTt0aGlzLmVuZ2luZS5nZXRVbmlmb3Jtcyh0aGlzLGkpLmZvckVhY2goKGQsZik9PntzW2lbZl1dPWR9KSx0aGlzLl91bmlmb3Jtcz1zO2xldCB1O2Zvcih1PTA7dTxyLmxlbmd0aDt1KyspZS5nZXRVbmlmb3JtKHJbdV0pPT1udWxsJiYoci5zcGxpY2UodSwxKSx1LS0pO3IuZm9yRWFjaCgoZCxmKT0+e25bZF09Zn0pO2Zvcihjb25zdCBkIG9mIGguZ2V0QXR0cmlidXRlcyh0aGlzLGEpKW8ucHVzaChkKX1kaXNwb3NlKCl7dGhpcy5fdW5pZm9ybXM9e319X2NhY2hlTWF0cml4KGUsdCl7Y29uc3QgaT10aGlzLl92YWx1ZUNhY2hlW2VdLHM9dC51cGRhdGVGbGFnO3JldHVybiBpIT09dm9pZCAwJiZpPT09cz8hMToodGhpcy5fdmFsdWVDYWNoZVtlXT1zLCEwKX1fY2FjaGVGbG9hdE4oZSx0LGkscyxyKXtsZXQgbj10aGlzLl92YWx1ZUNhY2hlW2FyZ3VtZW50c1swXV07aWYoIW58fG4ubGVuZ3RoIT09YXJndW1lbnRzLmxlbmd0aC0xKXJldHVybiBuPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSx0aGlzLl92YWx1ZUNhY2hlW2FyZ3VtZW50c1swXV09biwhMDtsZXQgYT0hMTtmb3IobGV0IG89MDtvPG4ubGVuZ3RoOysrbyluW29dIT09YXJndW1lbnRzW28rMV0mJihuW29dPWFyZ3VtZW50c1tvKzFdLGE9ITApO3JldHVybiBhfV9jYWNoZUZsb2F0MihlLHQsaSl7cmV0dXJuIHRoaXMuX2NhY2hlRmxvYXROKGUsdCxpKX1fY2FjaGVGbG9hdDMoZSx0LGkscyl7cmV0dXJuIHRoaXMuX2NhY2hlRmxvYXROKGUsdCxpLHMpfV9jYWNoZUZsb2F0NChlLHQsaSxzLHIpe3JldHVybiB0aGlzLl9jYWNoZUZsb2F0TihlLHQsaSxzLHIpfXNldE1hdHJpeChlLHQpe3RoaXMuX2NhY2hlTWF0cml4KGUsdCkmJih0aGlzLmVuZ2luZS5zZXRNYXRyaWNlcyh0aGlzLl91bmlmb3Jtc1tlXSx0LnRvQXJyYXkoKSl8fCh0aGlzLl92YWx1ZUNhY2hlW2VdPW51bGwpKX1zZXRWZWN0b3IyKGUsdCl7dGhpcy5zZXRGbG9hdDIoZSx0LngsdC55KX1zZXRWZWN0b3IzKGUsdCl7dGhpcy5zZXRGbG9hdDMoZSx0LngsdC55LHQueil9c2V0VmVjdG9yNChlLHQpe3RoaXMuc2V0RmxvYXQ0KGUsdC54LHQueSx0LnosdC53KX1zZXRRdWF0ZXJuaW9uKGUsdCl7dGhpcy5zZXRGbG9hdDQoZSx0LngsdC55LHQueix0LncpfXNldENvbG9yMyhlLHQpe3RoaXMuc2V0RmxvYXQzKGUsdC5yLHQuZyx0LmIpfXNldENvbG9yNChlLHQsaSl7dGhpcy5zZXRGbG9hdDQoZSx0LnIsdC5nLHQuYixpKX1zZXREaXJlY3RDb2xvcjQoZSx0KXt0aGlzLnNldEZsb2F0NChlLHQucix0LmcsdC5iLHQuYSl9X2dldFZlcnRleFNoYWRlckNvZGUoKXtyZXR1cm4gdGhpcy52ZXJ0ZXhTaGFkZXI/dGhpcy5lbmdpbmUuX2dldFNoYWRlclNvdXJjZSh0aGlzLnZlcnRleFNoYWRlcik6bnVsbH1fZ2V0RnJhZ21lbnRTaGFkZXJDb2RlKCl7cmV0dXJuIHRoaXMuZnJhZ21lbnRTaGFkZXI/dGhpcy5lbmdpbmUuX2dldFNoYWRlclNvdXJjZSh0aGlzLmZyYWdtZW50U2hhZGVyKTpudWxsfX1jbGFzcyB0cntjb25zdHJ1Y3RvcihlPW51bGwsdCl7aWYodGhpcy5fTVNBQVJlbmRlckJ1ZmZlcj1udWxsLHRoaXMuX2NvbnRleHQ9dCwhZSYmKGU9dC5jcmVhdGVUZXh0dXJlKCksIWUpKXRocm93IG5ldyBFcnJvcigiVW5hYmxlIHRvIGNyZWF0ZSB3ZWJHTCB0ZXh0dXJlIik7dGhpcy5zZXQoZSl9Z2V0IHVuZGVybHlpbmdSZXNvdXJjZSgpe3JldHVybiB0aGlzLl93ZWJHTFRleHR1cmV9c2V0VXNhZ2UoKXt9c2V0KGUpe3RoaXMuX3dlYkdMVGV4dHVyZT1lfXJlc2V0KCl7dGhpcy5fd2ViR0xUZXh0dXJlPW51bGwsdGhpcy5fTVNBQVJlbmRlckJ1ZmZlcj1udWxsfXJlbGVhc2UoKXt0aGlzLl9NU0FBUmVuZGVyQnVmZmVyJiYodGhpcy5fY29udGV4dC5kZWxldGVSZW5kZXJidWZmZXIodGhpcy5fTVNBQVJlbmRlckJ1ZmZlciksdGhpcy5fTVNBQVJlbmRlckJ1ZmZlcj1udWxsKSx0aGlzLl93ZWJHTFRleHR1cmUmJnRoaXMuX2NvbnRleHQuZGVsZXRlVGV4dHVyZSh0aGlzLl93ZWJHTFRleHR1cmUpLHRoaXMucmVzZXQoKX19Y2xhc3MgbWl7Y29uc3RydWN0b3IoZSx0PSEwKXt0aGlzLmVmZmVjdD1udWxsLHRoaXMuZGVmaW5lcz1udWxsLHRoaXMuZHJhd0NvbnRleHQ9ZS5jcmVhdGVEcmF3Q29udGV4dCgpLHQmJih0aGlzLm1hdGVyaWFsQ29udGV4dD1lLmNyZWF0ZU1hdGVyaWFsQ29udGV4dCgpKX1zdGF0aWMgSXNXcmFwcGVyKGUpe3JldHVybiBlLmdldFBpcGVsaW5lQ29udGV4dD09PXZvaWQgMH1zdGF0aWMgR2V0RWZmZWN0KGUpe3JldHVybiBlLmdldFBpcGVsaW5lQ29udGV4dD09PXZvaWQgMD9lLmVmZmVjdDplfXNldEVmZmVjdChlLHQsaT0hMCl7dmFyIHM7dGhpcy5lZmZlY3Q9ZSx0IT09dm9pZCAwJiYodGhpcy5kZWZpbmVzPXQpLGkmJigocz10aGlzLmRyYXdDb250ZXh0KT09PW51bGx8fHM9PT12b2lkIDB8fHMucmVzZXQoKSl9ZGlzcG9zZSgpe3ZhciBlOyhlPXRoaXMuZHJhd0NvbnRleHQpPT09bnVsbHx8ZT09PXZvaWQgMHx8ZS5kaXNwb3NlKCl9fWNsYXNzIGNue2NvbnN0cnVjdG9yKGU9ITApe3RoaXMuX2lzU3RlbmNpbFRlc3REaXJ0eT0hMSx0aGlzLl9pc1N0ZW5jaWxNYXNrRGlydHk9ITEsdGhpcy5faXNTdGVuY2lsRnVuY0RpcnR5PSExLHRoaXMuX2lzU3RlbmNpbE9wRGlydHk9ITEsdGhpcy51c2VTdGVuY2lsR2xvYmFsT25seT0hMSxlJiZ0aGlzLnJlc2V0KCl9Z2V0IGlzRGlydHkoKXtyZXR1cm4gdGhpcy5faXNTdGVuY2lsVGVzdERpcnR5fHx0aGlzLl9pc1N0ZW5jaWxNYXNrRGlydHl8fHRoaXMuX2lzU3RlbmNpbEZ1bmNEaXJ0eXx8dGhpcy5faXNTdGVuY2lsT3BEaXJ0eX1nZXQgZnVuYygpe3JldHVybiB0aGlzLl9mdW5jfXNldCBmdW5jKGUpe3RoaXMuX2Z1bmMhPT1lJiYodGhpcy5fZnVuYz1lLHRoaXMuX2lzU3RlbmNpbEZ1bmNEaXJ0eT0hMCl9Z2V0IGZ1bmNSZWYoKXtyZXR1cm4gdGhpcy5fZnVuY1JlZn1zZXQgZnVuY1JlZihlKXt0aGlzLl9mdW5jUmVmIT09ZSYmKHRoaXMuX2Z1bmNSZWY9ZSx0aGlzLl9pc1N0ZW5jaWxGdW5jRGlydHk9ITApfWdldCBmdW5jTWFzaygpe3JldHVybiB0aGlzLl9mdW5jTWFza31zZXQgZnVuY01hc2soZSl7dGhpcy5fZnVuY01hc2shPT1lJiYodGhpcy5fZnVuY01hc2s9ZSx0aGlzLl9pc1N0ZW5jaWxGdW5jRGlydHk9ITApfWdldCBvcFN0ZW5jaWxGYWlsKCl7cmV0dXJuIHRoaXMuX29wU3RlbmNpbEZhaWx9c2V0IG9wU3RlbmNpbEZhaWwoZSl7dGhpcy5fb3BTdGVuY2lsRmFpbCE9PWUmJih0aGlzLl9vcFN0ZW5jaWxGYWlsPWUsdGhpcy5faXNTdGVuY2lsT3BEaXJ0eT0hMCl9Z2V0IG9wRGVwdGhGYWlsKCl7cmV0dXJuIHRoaXMuX29wRGVwdGhGYWlsfXNldCBvcERlcHRoRmFpbChlKXt0aGlzLl9vcERlcHRoRmFpbCE9PWUmJih0aGlzLl9vcERlcHRoRmFpbD1lLHRoaXMuX2lzU3RlbmNpbE9wRGlydHk9ITApfWdldCBvcFN0ZW5jaWxEZXB0aFBhc3MoKXtyZXR1cm4gdGhpcy5fb3BTdGVuY2lsRGVwdGhQYXNzfXNldCBvcFN0ZW5jaWxEZXB0aFBhc3MoZSl7dGhpcy5fb3BTdGVuY2lsRGVwdGhQYXNzIT09ZSYmKHRoaXMuX29wU3RlbmNpbERlcHRoUGFzcz1lLHRoaXMuX2lzU3RlbmNpbE9wRGlydHk9ITApfWdldCBtYXNrKCl7cmV0dXJuIHRoaXMuX21hc2t9c2V0IG1hc2soZSl7dGhpcy5fbWFzayE9PWUmJih0aGlzLl9tYXNrPWUsdGhpcy5faXNTdGVuY2lsTWFza0RpcnR5PSEwKX1nZXQgZW5hYmxlZCgpe3JldHVybiB0aGlzLl9lbmFibGVkfXNldCBlbmFibGVkKGUpe3RoaXMuX2VuYWJsZWQhPT1lJiYodGhpcy5fZW5hYmxlZD1lLHRoaXMuX2lzU3RlbmNpbFRlc3REaXJ0eT0hMCl9cmVzZXQoKXt2YXIgZTt0aGlzLnN0ZW5jaWxNYXRlcmlhbD12b2lkIDAsKGU9dGhpcy5zdGVuY2lsR2xvYmFsKT09PW51bGx8fGU9PT12b2lkIDB8fGUucmVzZXQoKSx0aGlzLl9pc1N0ZW5jaWxUZXN0RGlydHk9ITAsdGhpcy5faXNTdGVuY2lsTWFza0RpcnR5PSEwLHRoaXMuX2lzU3RlbmNpbEZ1bmNEaXJ0eT0hMCx0aGlzLl9pc1N0ZW5jaWxPcERpcnR5PSEwfWFwcGx5KGUpe3ZhciB0O2lmKCFlKXJldHVybjtjb25zdCBpPSF0aGlzLnVzZVN0ZW5jaWxHbG9iYWxPbmx5JiYhISghKCh0PXRoaXMuc3RlbmNpbE1hdGVyaWFsKT09PW51bGx8fHQ9PT12b2lkIDApJiZ0LmVuYWJsZWQpO3RoaXMuZW5hYmxlZD1pP3RoaXMuc3RlbmNpbE1hdGVyaWFsLmVuYWJsZWQ6dGhpcy5zdGVuY2lsR2xvYmFsLmVuYWJsZWQsdGhpcy5mdW5jPWk/dGhpcy5zdGVuY2lsTWF0ZXJpYWwuZnVuYzp0aGlzLnN0ZW5jaWxHbG9iYWwuZnVuYyx0aGlzLmZ1bmNSZWY9aT90aGlzLnN0ZW5jaWxNYXRlcmlhbC5mdW5jUmVmOnRoaXMuc3RlbmNpbEdsb2JhbC5mdW5jUmVmLHRoaXMuZnVuY01hc2s9aT90aGlzLnN0ZW5jaWxNYXRlcmlhbC5mdW5jTWFzazp0aGlzLnN0ZW5jaWxHbG9iYWwuZnVuY01hc2ssdGhpcy5vcFN0ZW5jaWxGYWlsPWk/dGhpcy5zdGVuY2lsTWF0ZXJpYWwub3BTdGVuY2lsRmFpbDp0aGlzLnN0ZW5jaWxHbG9iYWwub3BTdGVuY2lsRmFpbCx0aGlzLm9wRGVwdGhGYWlsPWk/dGhpcy5zdGVuY2lsTWF0ZXJpYWwub3BEZXB0aEZhaWw6dGhpcy5zdGVuY2lsR2xvYmFsLm9wRGVwdGhGYWlsLHRoaXMub3BTdGVuY2lsRGVwdGhQYXNzPWk/dGhpcy5zdGVuY2lsTWF0ZXJpYWwub3BTdGVuY2lsRGVwdGhQYXNzOnRoaXMuc3RlbmNpbEdsb2JhbC5vcFN0ZW5jaWxEZXB0aFBhc3MsdGhpcy5tYXNrPWk/dGhpcy5zdGVuY2lsTWF0ZXJpYWwubWFzazp0aGlzLnN0ZW5jaWxHbG9iYWwubWFzayx0aGlzLmlzRGlydHkmJih0aGlzLl9pc1N0ZW5jaWxUZXN0RGlydHkmJih0aGlzLmVuYWJsZWQ/ZS5lbmFibGUoZS5TVEVOQ0lMX1RFU1QpOmUuZGlzYWJsZShlLlNURU5DSUxfVEVTVCksdGhpcy5faXNTdGVuY2lsVGVzdERpcnR5PSExKSx0aGlzLl9pc1N0ZW5jaWxNYXNrRGlydHkmJihlLnN0ZW5jaWxNYXNrKHRoaXMubWFzayksdGhpcy5faXNTdGVuY2lsTWFza0RpcnR5PSExKSx0aGlzLl9pc1N0ZW5jaWxGdW5jRGlydHkmJihlLnN0ZW5jaWxGdW5jKHRoaXMuZnVuYyx0aGlzLmZ1bmNSZWYsdGhpcy5mdW5jTWFzayksdGhpcy5faXNTdGVuY2lsRnVuY0RpcnR5PSExKSx0aGlzLl9pc1N0ZW5jaWxPcERpcnR5JiYoZS5zdGVuY2lsT3AodGhpcy5vcFN0ZW5jaWxGYWlsLHRoaXMub3BEZXB0aEZhaWwsdGhpcy5vcFN0ZW5jaWxEZXB0aFBhc3MpLHRoaXMuX2lzU3RlbmNpbE9wRGlydHk9ITEpKX19Y2xhc3MgYWl7c3RhdGljIGdldCBOb3coKXtyZXR1cm4gcHMuSXNXaW5kb3dPYmplY3RFeGlzdCgpJiZ3aW5kb3cucGVyZm9ybWFuY2UmJndpbmRvdy5wZXJmb3JtYW5jZS5ub3c/d2luZG93LnBlcmZvcm1hbmNlLm5vdygpOkRhdGUubm93KCl9fWNsYXNzIHVue31jbGFzcyBvZXtjb25zdHJ1Y3RvcihlLHQsaSxzKXt0aGlzLl9uYW1lPSJXZWJHTCIsdGhpcy5mb3JjZVBPVFRleHR1cmVzPSExLHRoaXMuaXNGdWxsc2NyZWVuPSExLHRoaXMuY3VsbEJhY2tGYWNlcz1udWxsLHRoaXMucmVuZGVyRXZlbkluQmFja2dyb3VuZD0hMCx0aGlzLnByZXZlbnRDYWNoZVdpcGVCZXR3ZWVuRnJhbWVzPSExLHRoaXMudmFsaWRhdGVTaGFkZXJQcm9ncmFtcz0hMSx0aGlzLl91c2VSZXZlcnNlRGVwdGhCdWZmZXI9ITEsdGhpcy5pc05EQ0hhbGZaUmFuZ2U9ITEsdGhpcy5oYXNPcmlnaW5Cb3R0b21MZWZ0PSEwLHRoaXMuZGlzYWJsZVVuaWZvcm1CdWZmZXJzPSExLHRoaXMub25EaXNwb3NlT2JzZXJ2YWJsZT1uZXcgRix0aGlzLl9mcmFtZUlkPTAsdGhpcy5fdW5pZm9ybUJ1ZmZlcnM9bmV3IEFycmF5LHRoaXMuX3N0b3JhZ2VCdWZmZXJzPW5ldyBBcnJheSx0aGlzLl93ZWJHTFZlcnNpb249MSx0aGlzLl93aW5kb3dJc0JhY2tncm91bmQ9ITEsdGhpcy5faGlnaFByZWNpc2lvblNoYWRlcnNBbGxvd2VkPSEwLHRoaXMuX2JhZE9TPSExLHRoaXMuX2JhZERlc2t0b3BPUz0hMSx0aGlzLl9yZW5kZXJpbmdRdWV1ZUxhdW5jaGVkPSExLHRoaXMuX2FjdGl2ZVJlbmRlckxvb3BzPW5ldyBBcnJheSx0aGlzLm9uQ29udGV4dExvc3RPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25Db250ZXh0UmVzdG9yZWRPYnNlcnZhYmxlPW5ldyBGLHRoaXMuX2NvbnRleHRXYXNMb3N0PSExLHRoaXMuX2RvTm90SGFuZGxlQ29udGV4dExvc3Q9ITEsdGhpcy5kaXNhYmxlVmVydGV4QXJyYXlPYmplY3RzPSExLHRoaXMuX2NvbG9yV3JpdGU9ITAsdGhpcy5fY29sb3JXcml0ZUNoYW5nZWQ9ITAsdGhpcy5fZGVwdGhDdWxsaW5nU3RhdGU9bmV3IHJuLHRoaXMuX3N0ZW5jaWxTdGF0ZUNvbXBvc2VyPW5ldyBjbix0aGlzLl9zdGVuY2lsU3RhdGU9bmV3IEx0LHRoaXMuX2FscGhhU3RhdGU9bmV3IG5uLHRoaXMuX2FscGhhTW9kZT0xLHRoaXMuX2FscGhhRXF1YXRpb249MCx0aGlzLl9pbnRlcm5hbFRleHR1cmVzQ2FjaGU9bmV3IEFycmF5LHRoaXMuX3JlbmRlclRhcmdldFdyYXBwZXJDYWNoZT1uZXcgQXJyYXksdGhpcy5fYWN0aXZlQ2hhbm5lbD0wLHRoaXMuX2N1cnJlbnRUZXh0dXJlQ2hhbm5lbD0tMSx0aGlzLl9ib3VuZFRleHR1cmVzQ2FjaGU9e30sdGhpcy5fY29tcGlsZWRFZmZlY3RzPXt9LHRoaXMuX3ZlcnRleEF0dHJpYkFycmF5c0VuYWJsZWQ9W10sdGhpcy5fdWludEluZGljZXNDdXJyZW50bHlTZXQ9ITEsdGhpcy5fY3VycmVudEJvdW5kQnVmZmVyPW5ldyBBcnJheSx0aGlzLl9jdXJyZW50RnJhbWVidWZmZXI9bnVsbCx0aGlzLl9kdW1teUZyYW1lYnVmZmVyPW51bGwsdGhpcy5fY3VycmVudEJ1ZmZlclBvaW50ZXJzPW5ldyBBcnJheSx0aGlzLl9jdXJyZW50SW5zdGFuY2VMb2NhdGlvbnM9bmV3IEFycmF5LHRoaXMuX2N1cnJlbnRJbnN0YW5jZUJ1ZmZlcnM9bmV3IEFycmF5LHRoaXMuX3Zhb1JlY29yZEluUHJvZ3Jlc3M9ITEsdGhpcy5fbXVzdFdpcGVWZXJ0ZXhBdHRyaWJ1dGVzPSExLHRoaXMuX25leHRGcmVlVGV4dHVyZVNsb3RzPW5ldyBBcnJheSx0aGlzLl9tYXhTaW11bHRhbmVvdXNUZXh0dXJlcz0wLHRoaXMuX21heE1TQUFTYW1wbGVzT3ZlcnJpZGU9bnVsbCx0aGlzLl9hY3RpdmVSZXF1ZXN0cz1uZXcgQXJyYXksdGhpcy5hZGFwdFRvRGV2aWNlUmF0aW89ITEsdGhpcy5fbGFzdERldmljZVBpeGVsUmF0aW89MSx0aGlzLl90cmFuc2Zvcm1UZXh0dXJlVXJsPW51bGwsdGhpcy5ob3N0SW5mb3JtYXRpb249e2lzTW9iaWxlOiExfSx0aGlzLnByZW11bHRpcGxpZWRBbHBoYT0hMCx0aGlzLm9uQmVmb3JlVGV4dHVyZUluaXRPYnNlcnZhYmxlPW5ldyBGLHRoaXMuX2lzV2ViR1BVPSExLHRoaXMuX3NuYXBzaG90UmVuZGVyaW5nTW9kZT0wLHRoaXMuX3VzZUV4YWN0U3JnYkNvbnZlcnNpb25zPSExLHRoaXMuX3ZpZXdwb3J0Q2FjaGVkPXt4OjAseTowLHo6MCx3OjB9LHRoaXMuX3VucGFja0ZsaXBZQ2FjaGVkPW51bGwsdGhpcy5lbmFibGVVbnBhY2tGbGlwWUNhY2hlZD0hMCx0aGlzLl9ib3VuZFVuaWZvcm1zPXt9LHRoaXMuc3RhcnRUaW1lPWFpLk5vdztsZXQgcj1udWxsO2lmKGk9aXx8e30sdGhpcy5fY3JlYXRpb25PcHRpb25zPWksdGhpcy5hZGFwdFRvRGV2aWNlUmF0aW89cz8/ITEsdGhpcy5fc3RlbmNpbFN0YXRlQ29tcG9zZXIuc3RlbmNpbEdsb2JhbD10aGlzLl9zdGVuY2lsU3RhdGUsVWUuU2V0TWF0cml4UHJlY2lzaW9uKCEhaS51c2VIaWdoUHJlY2lzaW9uTWF0cml4KSwhZSlyZXR1cm47aWYocz1zfHxpLmFkYXB0VG9EZXZpY2VSYXRpb3x8ITEsZS5nZXRDb250ZXh0KXtpZihyPWUsdGhpcy5fcmVuZGVyaW5nQ2FudmFzPXIsdCE9PXZvaWQgMCYmKGkuYW50aWFsaWFzPXQpLGkuZGV0ZXJtaW5pc3RpY0xvY2tzdGVwPT09dm9pZCAwJiYoaS5kZXRlcm1pbmlzdGljTG9ja3N0ZXA9ITEpLGkubG9ja3N0ZXBNYXhTdGVwcz09PXZvaWQgMCYmKGkubG9ja3N0ZXBNYXhTdGVwcz00KSxpLnRpbWVTdGVwPT09dm9pZCAwJiYoaS50aW1lU3RlcD0xLzYwKSxpLnByZXNlcnZlRHJhd2luZ0J1ZmZlcj09PXZvaWQgMCYmKGkucHJlc2VydmVEcmF3aW5nQnVmZmVyPSExKSxpLmF1ZGlvRW5naW5lPT09dm9pZCAwJiYoaS5hdWRpb0VuZ2luZT0hMCksaS5hdWRpb0VuZ2luZU9wdGlvbnMhPT12b2lkIDAmJmkuYXVkaW9FbmdpbmVPcHRpb25zLmF1ZGlvQ29udGV4dCE9PXZvaWQgMCYmKHRoaXMuX2F1ZGlvQ29udGV4dD1pLmF1ZGlvRW5naW5lT3B0aW9ucy5hdWRpb0NvbnRleHQpLGkuYXVkaW9FbmdpbmVPcHRpb25zIT09dm9pZCAwJiZpLmF1ZGlvRW5naW5lT3B0aW9ucy5hdWRpb0Rlc3RpbmF0aW9uIT09dm9pZCAwJiYodGhpcy5fYXVkaW9EZXN0aW5hdGlvbj1pLmF1ZGlvRW5naW5lT3B0aW9ucy5hdWRpb0Rlc3RpbmF0aW9uKSxpLnN0ZW5jaWw9PT12b2lkIDAmJihpLnN0ZW5jaWw9ITApLGkucHJlbXVsdGlwbGllZEFscGhhPT09ITEmJih0aGlzLnByZW11bHRpcGxpZWRBbHBoYT0hMSksaS54ckNvbXBhdGlibGU9PT12b2lkIDAmJihpLnhyQ29tcGF0aWJsZT0hMCksaS51c2VFeGFjdFNyZ2JDb252ZXJzaW9ucyE9PXZvaWQgMCYmKHRoaXMuX3VzZUV4YWN0U3JnYkNvbnZlcnNpb25zPWkudXNlRXhhY3RTcmdiQ29udmVyc2lvbnMpLHRoaXMuX2RvTm90SGFuZGxlQ29udGV4dExvc3Q9ISFpLmRvTm90SGFuZGxlQ29udGV4dExvc3QsbmF2aWdhdG9yJiZuYXZpZ2F0b3IudXNlckFnZW50KXt0aGlzLl9jaGVja0Zvck1vYmlsZT0oKT0+e2NvbnN0IGw9bmF2aWdhdG9yLnVzZXJBZ2VudDt0aGlzLmhvc3RJbmZvcm1hdGlvbi5pc01vYmlsZT1sLmluZGV4T2YoIk1vYmlsZSIpIT09LTF8fGwuaW5kZXhPZigiTWFjIikhPT0tMSYmQ2koKSYmIm9udG91Y2hlbmQiaW4gZG9jdW1lbnR9LHRoaXMuX2NoZWNrRm9yTW9iaWxlKCksamUoKSYmd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsdGhpcy5fY2hlY2tGb3JNb2JpbGUpO2NvbnN0IGg9bmF2aWdhdG9yLnVzZXJBZ2VudDtmb3IoY29uc3QgbCBvZiBvZS5FeGNlcHRpb25MaXN0KXtjb25zdCB1PWwua2V5LGQ9bC50YXJnZXRzO2lmKG5ldyBSZWdFeHAodSkudGVzdChoKSl7aWYobC5jYXB0dXJlJiZsLmNhcHR1cmVDb25zdHJhaW50KXtjb25zdCBfPWwuY2FwdHVyZSxFPWwuY2FwdHVyZUNvbnN0cmFpbnQsdj1uZXcgUmVnRXhwKF8pLmV4ZWMoaCk7aWYodiYmdi5sZW5ndGg+MCYmcGFyc2VJbnQodlt2Lmxlbmd0aC0xXSk+PUUpY29udGludWV9Zm9yKGNvbnN0IF8gb2YgZClzd2l0Y2goXyl7Y2FzZSJ1bmlmb3JtQnVmZmVyIjp0aGlzLmRpc2FibGVVbmlmb3JtQnVmZmVycz0hMDticmVhaztjYXNlInZhbyI6dGhpcy5kaXNhYmxlVmVydGV4QXJyYXlPYmplY3RzPSEwO2JyZWFrO2Nhc2UiYW50aWFsaWFzIjppLmFudGlhbGlhcz0hMTticmVhaztjYXNlIm1heE1TQUFTYW1wbGVzIjp0aGlzLl9tYXhNU0FBU2FtcGxlc092ZXJyaWRlPTE7YnJlYWt9fX19aWYodGhpcy5fZG9Ob3RIYW5kbGVDb250ZXh0TG9zdHx8KHRoaXMuX29uQ29udGV4dExvc3Q9aD0+e2gucHJldmVudERlZmF1bHQoKSx0aGlzLl9jb250ZXh0V2FzTG9zdD0hMCxPLldhcm4oIldlYkdMIGNvbnRleHQgbG9zdC4iKSx0aGlzLm9uQ29udGV4dExvc3RPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKX0sdGhpcy5fb25Db250ZXh0UmVzdG9yZWQ9KCk9Pnt0aGlzLl9yZXN0b3JlRW5naW5lQWZ0ZXJDb250ZXh0TG9zdCh0aGlzLl9pbml0R0xDb250ZXh0LmJpbmQodGhpcykpfSxyLmFkZEV2ZW50TGlzdGVuZXIoIndlYmdsY29udGV4dGxvc3QiLHRoaXMuX29uQ29udGV4dExvc3QsITEpLHIuYWRkRXZlbnRMaXN0ZW5lcigid2ViZ2xjb250ZXh0cmVzdG9yZWQiLHRoaXMuX29uQ29udGV4dFJlc3RvcmVkLCExKSxpLnBvd2VyUHJlZmVyZW5jZT0iaGlnaC1wZXJmb3JtYW5jZSIpLHRoaXMuX2JhZERlc2t0b3BPUz0vXigoPyFjaHJvbWV8YW5kcm9pZCkuKSpzYWZhcmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLHRoaXMuX2JhZERlc2t0b3BPUyYmKGkueHJDb21wYXRpYmxlPSExKSwhaS5kaXNhYmxlV2ViR0wyU3VwcG9ydCl0cnl7dGhpcy5fZ2w9ci5nZXRDb250ZXh0KCJ3ZWJnbDIiLGkpfHxyLmdldENvbnRleHQoImV4cGVyaW1lbnRhbC13ZWJnbDIiLGkpLHRoaXMuX2dsJiYodGhpcy5fd2ViR0xWZXJzaW9uPTIsdGhpcy5fc2hhZGVyUGxhdGZvcm1OYW1lPSJXRUJHTDIiLHRoaXMuX2dsLmRlbGV0ZVF1ZXJ5fHwodGhpcy5fd2ViR0xWZXJzaW9uPTEsdGhpcy5fc2hhZGVyUGxhdGZvcm1OYW1lPSJXRUJHTDEiKSl9Y2F0Y2h7fWlmKCF0aGlzLl9nbCl7aWYoIXIpdGhyb3cgbmV3IEVycm9yKCJUaGUgcHJvdmlkZWQgY2FudmFzIGlzIG51bGwgb3IgdW5kZWZpbmVkLiIpO3RyeXt0aGlzLl9nbD1yLmdldENvbnRleHQoIndlYmdsIixpKXx8ci5nZXRDb250ZXh0KCJleHBlcmltZW50YWwtd2ViZ2wiLGkpfWNhdGNoe3Rocm93IG5ldyBFcnJvcigiV2ViR0wgbm90IHN1cHBvcnRlZCIpfX1pZighdGhpcy5fZ2wpdGhyb3cgbmV3IEVycm9yKCJXZWJHTCBub3Qgc3VwcG9ydGVkIil9ZWxzZXt0aGlzLl9nbD1lLHRoaXMuX3JlbmRlcmluZ0NhbnZhcz10aGlzLl9nbC5jYW52YXMsdGhpcy5fZ2wucmVuZGVyYnVmZmVyU3RvcmFnZU11bHRpc2FtcGxlPyh0aGlzLl93ZWJHTFZlcnNpb249Mix0aGlzLl9zaGFkZXJQbGF0Zm9ybU5hbWU9IldFQkdMMiIpOnRoaXMuX3NoYWRlclBsYXRmb3JtTmFtZT0iV0VCR0wxIjtjb25zdCBoPXRoaXMuX2dsLmdldENvbnRleHRBdHRyaWJ1dGVzKCk7aCYmKGkuc3RlbmNpbD1oLnN0ZW5jaWwpfXRoaXMuX2dsLnBpeGVsU3RvcmVpKHRoaXMuX2dsLlVOUEFDS19DT0xPUlNQQUNFX0NPTlZFUlNJT05fV0VCR0wsdGhpcy5fZ2wuTk9ORSksaS51c2VIaWdoUHJlY2lzaW9uRmxvYXRzIT09dm9pZCAwJiYodGhpcy5faGlnaFByZWNpc2lvblNoYWRlcnNBbGxvd2VkPWkudXNlSGlnaFByZWNpc2lvbkZsb2F0cyk7Y29uc3Qgbj1qZSgpJiZ3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpb3x8MSxhPWkubGltaXREZXZpY2VSYXRpb3x8bjt0aGlzLl9oYXJkd2FyZVNjYWxpbmdMZXZlbD1zPzEvTWF0aC5taW4oYSxuKToxLHRoaXMuX2xhc3REZXZpY2VQaXhlbFJhdGlvPW4sdGhpcy5yZXNpemUoKSx0aGlzLl9pc1N0ZW5jaWxFbmFibGU9ISFpLnN0ZW5jaWwsdGhpcy5faW5pdEdMQ29udGV4dCgpLHRoaXMuX2luaXRGZWF0dXJlcygpO2ZvcihsZXQgaD0wO2g8dGhpcy5fY2Fwcy5tYXhWZXJ0ZXhBdHRyaWJzO2grKyl0aGlzLl9jdXJyZW50QnVmZmVyUG9pbnRlcnNbaF09bmV3IHVuO3RoaXMuX3NoYWRlclByb2Nlc3Nvcj10aGlzLndlYkdMVmVyc2lvbj4xP25ldyBvbjpuZXcgYW4sdGhpcy5fYmFkT1M9L2lQYWQvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfHwvaVBob25lL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtjb25zdCBvPWBCYWJ5bG9uLmpzIHYke29lLlZlcnNpb259YDtjb25zb2xlLmxvZyhvK2AgLSAke3RoaXMuZGVzY3JpcHRpb259YCksdGhpcy5fcmVuZGVyaW5nQ2FudmFzJiZ0aGlzLl9yZW5kZXJpbmdDYW52YXMuc2V0QXR0cmlidXRlJiZ0aGlzLl9yZW5kZXJpbmdDYW52YXMuc2V0QXR0cmlidXRlKCJkYXRhLWVuZ2luZSIsbyl9c3RhdGljIGdldCBOcG1QYWNrYWdlKCl7cmV0dXJuImJhYnlsb25qc0A1LjQzLjAifXN0YXRpYyBnZXQgVmVyc2lvbigpe3JldHVybiI1LjQzLjAifWdldCBkZXNjcmlwdGlvbigpe2xldCBlPXRoaXMubmFtZSt0aGlzLndlYkdMVmVyc2lvbjtyZXR1cm4gdGhpcy5fY2Fwcy5wYXJhbGxlbFNoYWRlckNvbXBpbGUmJihlKz0iIC0gUGFyYWxsZWwgc2hhZGVyIGNvbXBpbGF0aW9uIiksZX1nZXQgbmFtZSgpe3JldHVybiB0aGlzLl9uYW1lfXNldCBuYW1lKGUpe3RoaXMuX25hbWU9ZX1nZXQgdmVyc2lvbigpe3JldHVybiB0aGlzLl93ZWJHTFZlcnNpb259c3RhdGljIGdldCBTaGFkZXJzUmVwb3NpdG9yeSgpe3JldHVybiBQZS5TaGFkZXJzUmVwb3NpdG9yeX1zdGF0aWMgc2V0IFNoYWRlcnNSZXBvc2l0b3J5KGUpe1BlLlNoYWRlcnNSZXBvc2l0b3J5PWV9X2dldFNoYWRlclByb2Nlc3NvcihlKXtyZXR1cm4gdGhpcy5fc2hhZGVyUHJvY2Vzc29yfWdldCB1c2VSZXZlcnNlRGVwdGhCdWZmZXIoKXtyZXR1cm4gdGhpcy5fdXNlUmV2ZXJzZURlcHRoQnVmZmVyfXNldCB1c2VSZXZlcnNlRGVwdGhCdWZmZXIoZSl7ZSE9PXRoaXMuX3VzZVJldmVyc2VEZXB0aEJ1ZmZlciYmKHRoaXMuX3VzZVJldmVyc2VEZXB0aEJ1ZmZlcj1lLGU/dGhpcy5fZGVwdGhDdWxsaW5nU3RhdGUuZGVwdGhGdW5jPTUxODp0aGlzLl9kZXB0aEN1bGxpbmdTdGF0ZS5kZXB0aEZ1bmM9NTE1KX1nZXQgZnJhbWVJZCgpe3JldHVybiB0aGlzLl9mcmFtZUlkfWdldCBzdXBwb3J0c1VuaWZvcm1CdWZmZXJzKCl7cmV0dXJuIHRoaXMud2ViR0xWZXJzaW9uPjEmJiF0aGlzLmRpc2FibGVVbmlmb3JtQnVmZmVyc31nZXRDcmVhdGlvbk9wdGlvbnMoKXtyZXR1cm4gdGhpcy5fY3JlYXRpb25PcHRpb25zfWdldCBfc2hvdWxkVXNlSGlnaFByZWNpc2lvblNoYWRlcigpe3JldHVybiEhKHRoaXMuX2NhcHMuaGlnaFByZWNpc2lvblNoYWRlclN1cHBvcnRlZCYmdGhpcy5faGlnaFByZWNpc2lvblNoYWRlcnNBbGxvd2VkKX1nZXQgbmVlZFBPVFRleHR1cmVzKCl7cmV0dXJuIHRoaXMuX3dlYkdMVmVyc2lvbjwyfHx0aGlzLmZvcmNlUE9UVGV4dHVyZXN9Z2V0IGFjdGl2ZVJlbmRlckxvb3BzKCl7cmV0dXJuIHRoaXMuX2FjdGl2ZVJlbmRlckxvb3BzfWdldCBkb05vdEhhbmRsZUNvbnRleHRMb3N0KCl7cmV0dXJuIHRoaXMuX2RvTm90SGFuZGxlQ29udGV4dExvc3R9c2V0IGRvTm90SGFuZGxlQ29udGV4dExvc3QoZSl7dGhpcy5fZG9Ob3RIYW5kbGVDb250ZXh0TG9zdD1lfWdldCBfc3VwcG9ydHNIYXJkd2FyZVRleHR1cmVSZXNjYWxpbmcoKXtyZXR1cm4hMX1zZXQgZnJhbWVidWZmZXJEaW1lbnNpb25zT2JqZWN0KGUpe3RoaXMuX2ZyYW1lYnVmZmVyRGltZW5zaW9uc09iamVjdD1lfWdldCBjdXJyZW50Vmlld3BvcnQoKXtyZXR1cm4gdGhpcy5fY2FjaGVkVmlld3BvcnR9Z2V0IGVtcHR5VGV4dHVyZSgpe3JldHVybiB0aGlzLl9lbXB0eVRleHR1cmV8fCh0aGlzLl9lbXB0eVRleHR1cmU9dGhpcy5jcmVhdGVSYXdUZXh0dXJlKG5ldyBVaW50OEFycmF5KDQpLDEsMSw1LCExLCExLDEpKSx0aGlzLl9lbXB0eVRleHR1cmV9Z2V0IGVtcHR5VGV4dHVyZTNEKCl7cmV0dXJuIHRoaXMuX2VtcHR5VGV4dHVyZTNEfHwodGhpcy5fZW1wdHlUZXh0dXJlM0Q9dGhpcy5jcmVhdGVSYXdUZXh0dXJlM0QobmV3IFVpbnQ4QXJyYXkoNCksMSwxLDEsNSwhMSwhMSwxKSksdGhpcy5fZW1wdHlUZXh0dXJlM0R9Z2V0IGVtcHR5VGV4dHVyZTJEQXJyYXkoKXtyZXR1cm4gdGhpcy5fZW1wdHlUZXh0dXJlMkRBcnJheXx8KHRoaXMuX2VtcHR5VGV4dHVyZTJEQXJyYXk9dGhpcy5jcmVhdGVSYXdUZXh0dXJlMkRBcnJheShuZXcgVWludDhBcnJheSg0KSwxLDEsMSw1LCExLCExLDEpKSx0aGlzLl9lbXB0eVRleHR1cmUyREFycmF5fWdldCBlbXB0eUN1YmVUZXh0dXJlKCl7aWYoIXRoaXMuX2VtcHR5Q3ViZVRleHR1cmUpe2NvbnN0IGU9bmV3IFVpbnQ4QXJyYXkoNCksdD1bZSxlLGUsZSxlLGVdO3RoaXMuX2VtcHR5Q3ViZVRleHR1cmU9dGhpcy5jcmVhdGVSYXdDdWJlVGV4dHVyZSh0LDEsNSwwLCExLCExLDEpfXJldHVybiB0aGlzLl9lbXB0eUN1YmVUZXh0dXJlfWdldCBpc1dlYkdQVSgpe3JldHVybiB0aGlzLl9pc1dlYkdQVX1nZXQgc2hhZGVyUGxhdGZvcm1OYW1lKCl7cmV0dXJuIHRoaXMuX3NoYWRlclBsYXRmb3JtTmFtZX1nZXQgc25hcHNob3RSZW5kZXJpbmcoKXtyZXR1cm4hMX1zZXQgc25hcHNob3RSZW5kZXJpbmcoZSl7fWdldCBzbmFwc2hvdFJlbmRlcmluZ01vZGUoKXtyZXR1cm4gdGhpcy5fc25hcHNob3RSZW5kZXJpbmdNb2RlfXNldCBzbmFwc2hvdFJlbmRlcmluZ01vZGUoZSl7dGhpcy5fc25hcHNob3RSZW5kZXJpbmdNb2RlPWV9Z2V0IHVzZUV4YWN0U3JnYkNvbnZlcnNpb25zKCl7cmV0dXJuIHRoaXMuX3VzZUV4YWN0U3JnYkNvbnZlcnNpb25zfXNuYXBzaG90UmVuZGVyaW5nUmVzZXQoKXt0aGlzLnNuYXBzaG90UmVuZGVyaW5nPSExfXN0YXRpYyBfQ3JlYXRlQ2FudmFzKGUsdCl7aWYodHlwZW9mIGRvY3VtZW50PiJ1IilyZXR1cm4gbmV3IE9mZnNjcmVlbkNhbnZhcyhlLHQpO2NvbnN0IGk9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7cmV0dXJuIGkud2lkdGg9ZSxpLmhlaWdodD10LGl9Y3JlYXRlQ2FudmFzKGUsdCl7cmV0dXJuIG9lLl9DcmVhdGVDYW52YXMoZSx0KX1jcmVhdGVDYW52YXNJbWFnZSgpe3JldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKX1fcmVzdG9yZUVuZ2luZUFmdGVyQ29udGV4dExvc3QoZSl7c2V0VGltZW91dChhc3luYygpPT57dmFyIHQ7dGhpcy5fZHVtbXlGcmFtZWJ1ZmZlcj1udWxsO2NvbnN0IGk9dGhpcy5fZGVwdGhDdWxsaW5nU3RhdGUuZGVwdGhUZXN0LHM9dGhpcy5fZGVwdGhDdWxsaW5nU3RhdGUuZGVwdGhGdW5jLHI9dGhpcy5fZGVwdGhDdWxsaW5nU3RhdGUuZGVwdGhNYXNrLG49dGhpcy5fc3RlbmNpbFN0YXRlLnN0ZW5jaWxUZXN0O2F3YWl0IGUoKSx0aGlzLndpcGVDYWNoZXMoITApLHRoaXMuX3JlYnVpbGRFZmZlY3RzKCksKHQ9dGhpcy5fcmVidWlsZENvbXB1dGVFZmZlY3RzKT09PW51bGx8fHQ9PT12b2lkIDB8fHQuY2FsbCh0aGlzKSx0aGlzLl9yZWJ1aWxkQnVmZmVycygpLHRoaXMuX3JlYnVpbGRJbnRlcm5hbFRleHR1cmVzKCksdGhpcy5fcmVidWlsZFJlbmRlclRhcmdldFdyYXBwZXJzKCksdGhpcy53aXBlQ2FjaGVzKCEwKSx0aGlzLl9kZXB0aEN1bGxpbmdTdGF0ZS5kZXB0aFRlc3Q9aSx0aGlzLl9kZXB0aEN1bGxpbmdTdGF0ZS5kZXB0aEZ1bmM9cyx0aGlzLl9kZXB0aEN1bGxpbmdTdGF0ZS5kZXB0aE1hc2s9cix0aGlzLl9zdGVuY2lsU3RhdGUuc3RlbmNpbFRlc3Q9bixPLldhcm4odGhpcy5uYW1lKyIgY29udGV4dCBzdWNjZXNzZnVsbHkgcmVzdG9yZWQuIiksdGhpcy5vbkNvbnRleHRSZXN0b3JlZE9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLHRoaXMuX2NvbnRleHRXYXNMb3N0PSExfSwwKX1fc2hhcmVkSW5pdChlLHQsaSl7dGhpcy5fcmVuZGVyaW5nQ2FudmFzPWV9X2dldFNoYWRlclByb2Nlc3NpbmdDb250ZXh0KGUpe3JldHVybiBudWxsfV9yZWJ1aWxkSW50ZXJuYWxUZXh0dXJlcygpe2NvbnN0IGU9dGhpcy5faW50ZXJuYWxUZXh0dXJlc0NhY2hlLnNsaWNlKCk7Zm9yKGNvbnN0IHQgb2YgZSl0Ll9yZWJ1aWxkKCl9X3JlYnVpbGRSZW5kZXJUYXJnZXRXcmFwcGVycygpe2NvbnN0IGU9dGhpcy5fcmVuZGVyVGFyZ2V0V3JhcHBlckNhY2hlLnNsaWNlKCk7Zm9yKGNvbnN0IHQgb2YgZSl0Ll9yZWJ1aWxkKCl9X3JlYnVpbGRFZmZlY3RzKCl7Zm9yKGNvbnN0IGUgaW4gdGhpcy5fY29tcGlsZWRFZmZlY3RzKXtjb25zdCB0PXRoaXMuX2NvbXBpbGVkRWZmZWN0c1tlXTt0Ll9waXBlbGluZUNvbnRleHQ9bnVsbCx0Ll93YXNQcmV2aW91c2x5UmVhZHk9ITEsdC5fcHJlcGFyZUVmZmVjdCgpfVBlLlJlc2V0Q2FjaGUoKX1hcmVBbGxFZmZlY3RzUmVhZHkoKXtmb3IoY29uc3QgZSBpbiB0aGlzLl9jb21waWxlZEVmZmVjdHMpaWYoIXRoaXMuX2NvbXBpbGVkRWZmZWN0c1tlXS5pc1JlYWR5KCkpcmV0dXJuITE7cmV0dXJuITB9X3JlYnVpbGRCdWZmZXJzKCl7Zm9yKGNvbnN0IGUgb2YgdGhpcy5fdW5pZm9ybUJ1ZmZlcnMpZS5fcmVidWlsZCgpO2Zvcihjb25zdCBlIG9mIHRoaXMuX3N0b3JhZ2VCdWZmZXJzKWUuX3JlYnVpbGQoKX1faW5pdEdMQ29udGV4dCgpe3ZhciBlO3RoaXMuX2NhcHM9e21heFRleHR1cmVzSW1hZ2VVbml0czp0aGlzLl9nbC5nZXRQYXJhbWV0ZXIodGhpcy5fZ2wuTUFYX1RFWFRVUkVfSU1BR0VfVU5JVFMpLG1heENvbWJpbmVkVGV4dHVyZXNJbWFnZVVuaXRzOnRoaXMuX2dsLmdldFBhcmFtZXRlcih0aGlzLl9nbC5NQVhfQ09NQklORURfVEVYVFVSRV9JTUFHRV9VTklUUyksbWF4VmVydGV4VGV4dHVyZUltYWdlVW5pdHM6dGhpcy5fZ2wuZ2V0UGFyYW1ldGVyKHRoaXMuX2dsLk1BWF9WRVJURVhfVEVYVFVSRV9JTUFHRV9VTklUUyksbWF4VGV4dHVyZVNpemU6dGhpcy5fZ2wuZ2V0UGFyYW1ldGVyKHRoaXMuX2dsLk1BWF9URVhUVVJFX1NJWkUpLG1heFNhbXBsZXM6dGhpcy5fd2ViR0xWZXJzaW9uPjE/dGhpcy5fZ2wuZ2V0UGFyYW1ldGVyKHRoaXMuX2dsLk1BWF9TQU1QTEVTKToxLG1heEN1YmVtYXBUZXh0dXJlU2l6ZTp0aGlzLl9nbC5nZXRQYXJhbWV0ZXIodGhpcy5fZ2wuTUFYX0NVQkVfTUFQX1RFWFRVUkVfU0laRSksbWF4UmVuZGVyVGV4dHVyZVNpemU6dGhpcy5fZ2wuZ2V0UGFyYW1ldGVyKHRoaXMuX2dsLk1BWF9SRU5ERVJCVUZGRVJfU0laRSksbWF4VmVydGV4QXR0cmliczp0aGlzLl9nbC5nZXRQYXJhbWV0ZXIodGhpcy5fZ2wuTUFYX1ZFUlRFWF9BVFRSSUJTKSxtYXhWYXJ5aW5nVmVjdG9yczp0aGlzLl9nbC5nZXRQYXJhbWV0ZXIodGhpcy5fZ2wuTUFYX1ZBUllJTkdfVkVDVE9SUyksbWF4RnJhZ21lbnRVbmlmb3JtVmVjdG9yczp0aGlzLl9nbC5nZXRQYXJhbWV0ZXIodGhpcy5fZ2wuTUFYX0ZSQUdNRU5UX1VOSUZPUk1fVkVDVE9SUyksbWF4VmVydGV4VW5pZm9ybVZlY3RvcnM6dGhpcy5fZ2wuZ2V0UGFyYW1ldGVyKHRoaXMuX2dsLk1BWF9WRVJURVhfVU5JRk9STV9WRUNUT1JTKSxwYXJhbGxlbFNoYWRlckNvbXBpbGU6dGhpcy5fZ2wuZ2V0RXh0ZW5zaW9uKCJLSFJfcGFyYWxsZWxfc2hhZGVyX2NvbXBpbGUiKXx8dm9pZCAwLHN0YW5kYXJkRGVyaXZhdGl2ZXM6dGhpcy5fd2ViR0xWZXJzaW9uPjF8fHRoaXMuX2dsLmdldEV4dGVuc2lvbigiT0VTX3N0YW5kYXJkX2Rlcml2YXRpdmVzIikhPT1udWxsLG1heEFuaXNvdHJvcHk6MSxhc3RjOnRoaXMuX2dsLmdldEV4dGVuc2lvbigiV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX2FzdGMiKXx8dGhpcy5fZ2wuZ2V0RXh0ZW5zaW9uKCJXRUJLSVRfV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX2FzdGMiKSxicHRjOnRoaXMuX2dsLmdldEV4dGVuc2lvbigiRVhUX3RleHR1cmVfY29tcHJlc3Npb25fYnB0YyIpfHx0aGlzLl9nbC5nZXRFeHRlbnNpb24oIldFQktJVF9FWFRfdGV4dHVyZV9jb21wcmVzc2lvbl9icHRjIiksczN0Yzp0aGlzLl9nbC5nZXRFeHRlbnNpb24oIldFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9zM3RjIil8fHRoaXMuX2dsLmdldEV4dGVuc2lvbigiV0VCS0lUX1dFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9zM3RjIiksczN0Y19zcmdiOnRoaXMuX2dsLmdldEV4dGVuc2lvbigiV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX3MzdGNfc3JnYiIpfHx0aGlzLl9nbC5nZXRFeHRlbnNpb24oIldFQktJVF9XRUJHTF9jb21wcmVzc2VkX3RleHR1cmVfczN0Y19zcmdiIikscHZydGM6dGhpcy5fZ2wuZ2V0RXh0ZW5zaW9uKCJXRUJHTF9jb21wcmVzc2VkX3RleHR1cmVfcHZydGMiKXx8dGhpcy5fZ2wuZ2V0RXh0ZW5zaW9uKCJXRUJLSVRfV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX3B2cnRjIiksZXRjMTp0aGlzLl9nbC5nZXRFeHRlbnNpb24oIldFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9ldGMxIil8fHRoaXMuX2dsLmdldEV4dGVuc2lvbigiV0VCS0lUX1dFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9ldGMxIiksZXRjMjp0aGlzLl9nbC5nZXRFeHRlbnNpb24oIldFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9ldGMiKXx8dGhpcy5fZ2wuZ2V0RXh0ZW5zaW9uKCJXRUJLSVRfV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX2V0YyIpfHx0aGlzLl9nbC5nZXRFeHRlbnNpb24oIldFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9lczNfMCIpLHRleHR1cmVBbmlzb3Ryb3BpY0ZpbHRlckV4dGVuc2lvbjp0aGlzLl9nbC5nZXRFeHRlbnNpb24oIkVYVF90ZXh0dXJlX2ZpbHRlcl9hbmlzb3Ryb3BpYyIpfHx0aGlzLl9nbC5nZXRFeHRlbnNpb24oIldFQktJVF9FWFRfdGV4dHVyZV9maWx0ZXJfYW5pc290cm9waWMiKXx8dGhpcy5fZ2wuZ2V0RXh0ZW5zaW9uKCJNT1pfRVhUX3RleHR1cmVfZmlsdGVyX2FuaXNvdHJvcGljIiksdWludEluZGljZXM6dGhpcy5fd2ViR0xWZXJzaW9uPjF8fHRoaXMuX2dsLmdldEV4dGVuc2lvbigiT0VTX2VsZW1lbnRfaW5kZXhfdWludCIpIT09bnVsbCxmcmFnbWVudERlcHRoU3VwcG9ydGVkOnRoaXMuX3dlYkdMVmVyc2lvbj4xfHx0aGlzLl9nbC5nZXRFeHRlbnNpb24oIkVYVF9mcmFnX2RlcHRoIikhPT1udWxsLGhpZ2hQcmVjaXNpb25TaGFkZXJTdXBwb3J0ZWQ6ITEsdGltZXJRdWVyeTp0aGlzLl9nbC5nZXRFeHRlbnNpb24oIkVYVF9kaXNqb2ludF90aW1lcl9xdWVyeV93ZWJnbDIiKXx8dGhpcy5fZ2wuZ2V0RXh0ZW5zaW9uKCJFWFRfZGlzam9pbnRfdGltZXJfcXVlcnkiKSxzdXBwb3J0T2NjbHVzaW9uUXVlcnk6dGhpcy5fd2ViR0xWZXJzaW9uPjEsY2FuVXNlVGltZXN0YW1wRm9yVGltZXJRdWVyeTohMSxkcmF3QnVmZmVyc0V4dGVuc2lvbjohMSxtYXhNU0FBU2FtcGxlczoxLGNvbG9yQnVmZmVyRmxvYXQ6ISEodGhpcy5fd2ViR0xWZXJzaW9uPjEmJnRoaXMuX2dsLmdldEV4dGVuc2lvbigiRVhUX2NvbG9yX2J1ZmZlcl9mbG9hdCIpKSx0ZXh0dXJlRmxvYXQ6ISEodGhpcy5fd2ViR0xWZXJzaW9uPjF8fHRoaXMuX2dsLmdldEV4dGVuc2lvbigiT0VTX3RleHR1cmVfZmxvYXQiKSksdGV4dHVyZUhhbGZGbG9hdDohISh0aGlzLl93ZWJHTFZlcnNpb24+MXx8dGhpcy5fZ2wuZ2V0RXh0ZW5zaW9uKCJPRVNfdGV4dHVyZV9oYWxmX2Zsb2F0IikpLHRleHR1cmVIYWxmRmxvYXRSZW5kZXI6ITEsdGV4dHVyZUZsb2F0TGluZWFyRmlsdGVyaW5nOiExLHRleHR1cmVGbG9hdFJlbmRlcjohMSx0ZXh0dXJlSGFsZkZsb2F0TGluZWFyRmlsdGVyaW5nOiExLHZlcnRleEFycmF5T2JqZWN0OiExLGluc3RhbmNlZEFycmF5czohMSx0ZXh0dXJlTE9EOiEhKHRoaXMuX3dlYkdMVmVyc2lvbj4xfHx0aGlzLl9nbC5nZXRFeHRlbnNpb24oIkVYVF9zaGFkZXJfdGV4dHVyZV9sb2QiKSksYmxlbmRNaW5NYXg6ITEsbXVsdGl2aWV3OnRoaXMuX2dsLmdldEV4dGVuc2lvbigiT1ZSX211bHRpdmlldzIiKSxvY3VsdXNNdWx0aXZpZXc6dGhpcy5fZ2wuZ2V0RXh0ZW5zaW9uKCJPQ1VMVVNfbXVsdGl2aWV3IiksZGVwdGhUZXh0dXJlRXh0ZW5zaW9uOiExLGNhblVzZUdMSW5zdGFuY2VJRDp0aGlzLl93ZWJHTFZlcnNpb24+MSxjYW5Vc2VHTFZlcnRleElEOnRoaXMuX3dlYkdMVmVyc2lvbj4xLHN1cHBvcnRDb21wdXRlU2hhZGVyczohMSxzdXBwb3J0U1JHQkJ1ZmZlcnM6ITEsc3VwcG9ydFRyYW5zZm9ybUZlZWRiYWNrczp0aGlzLl93ZWJHTFZlcnNpb24+MSx0ZXh0dXJlTWF4TGV2ZWw6dGhpcy5fd2ViR0xWZXJzaW9uPjEsdGV4dHVyZTJEQXJyYXlNYXhMYXllckNvdW50OnRoaXMuX3dlYkdMVmVyc2lvbj4xPzI1NjoxMjh9LHRoaXMuX2dsVmVyc2lvbj10aGlzLl9nbC5nZXRQYXJhbWV0ZXIodGhpcy5fZ2wuVkVSU0lPTik7Y29uc3QgdD10aGlzLl9nbC5nZXRFeHRlbnNpb24oIldFQkdMX2RlYnVnX3JlbmRlcmVyX2luZm8iKTtpZih0IT1udWxsJiYodGhpcy5fZ2xSZW5kZXJlcj10aGlzLl9nbC5nZXRQYXJhbWV0ZXIodC5VTk1BU0tFRF9SRU5ERVJFUl9XRUJHTCksdGhpcy5fZ2xWZW5kb3I9dGhpcy5fZ2wuZ2V0UGFyYW1ldGVyKHQuVU5NQVNLRURfVkVORE9SX1dFQkdMKSksdGhpcy5fZ2xWZW5kb3J8fCh0aGlzLl9nbFZlbmRvcj10aGlzLl9nbC5nZXRQYXJhbWV0ZXIodGhpcy5fZ2wuVkVORE9SKXx8IlVua25vd24gdmVuZG9yIiksdGhpcy5fZ2xSZW5kZXJlcnx8KHRoaXMuX2dsUmVuZGVyZXI9dGhpcy5fZ2wuZ2V0UGFyYW1ldGVyKHRoaXMuX2dsLlJFTkRFUkVSKXx8IlVua25vd24gcmVuZGVyZXIiKSx0aGlzLl9nbC5IQUxGX0ZMT0FUX09FUyE9PTM2MTkzJiYodGhpcy5fZ2wuSEFMRl9GTE9BVF9PRVM9MzYxOTMpLHRoaXMuX2dsLlJHQkExNkYhPT0zNDg0MiYmKHRoaXMuX2dsLlJHQkExNkY9MzQ4NDIpLHRoaXMuX2dsLlJHQkEzMkYhPT0zNDgzNiYmKHRoaXMuX2dsLlJHQkEzMkY9MzQ4MzYpLHRoaXMuX2dsLkRFUFRIMjRfU1RFTkNJTDghPT0zNTA1NiYmKHRoaXMuX2dsLkRFUFRIMjRfU1RFTkNJTDg9MzUwNTYpLHRoaXMuX2NhcHMudGltZXJRdWVyeSYmKHRoaXMuX3dlYkdMVmVyc2lvbj09PTEmJih0aGlzLl9nbC5nZXRRdWVyeT10aGlzLl9jYXBzLnRpbWVyUXVlcnkuZ2V0UXVlcnlFWFQuYmluZCh0aGlzLl9jYXBzLnRpbWVyUXVlcnkpKSx0aGlzLl9jYXBzLmNhblVzZVRpbWVzdGFtcEZvclRpbWVyUXVlcnk9KChlPXRoaXMuX2dsLmdldFF1ZXJ5KHRoaXMuX2NhcHMudGltZXJRdWVyeS5USU1FU1RBTVBfRVhULHRoaXMuX2NhcHMudGltZXJRdWVyeS5RVUVSWV9DT1VOVEVSX0JJVFNfRVhUKSkhPT1udWxsJiZlIT09dm9pZCAwP2U6MCk+MCksdGhpcy5fY2Fwcy5tYXhBbmlzb3Ryb3B5PXRoaXMuX2NhcHMudGV4dHVyZUFuaXNvdHJvcGljRmlsdGVyRXh0ZW5zaW9uP3RoaXMuX2dsLmdldFBhcmFtZXRlcih0aGlzLl9jYXBzLnRleHR1cmVBbmlzb3Ryb3BpY0ZpbHRlckV4dGVuc2lvbi5NQVhfVEVYVFVSRV9NQVhfQU5JU09UUk9QWV9FWFQpOjAsdGhpcy5fY2Fwcy50ZXh0dXJlRmxvYXRMaW5lYXJGaWx0ZXJpbmc9ISEodGhpcy5fY2Fwcy50ZXh0dXJlRmxvYXQmJnRoaXMuX2dsLmdldEV4dGVuc2lvbigiT0VTX3RleHR1cmVfZmxvYXRfbGluZWFyIikpLHRoaXMuX2NhcHMudGV4dHVyZUZsb2F0UmVuZGVyPSEhKHRoaXMuX2NhcHMudGV4dHVyZUZsb2F0JiZ0aGlzLl9jYW5SZW5kZXJUb0Zsb2F0RnJhbWVidWZmZXIoKSksdGhpcy5fY2Fwcy50ZXh0dXJlSGFsZkZsb2F0TGluZWFyRmlsdGVyaW5nPSEhKHRoaXMuX3dlYkdMVmVyc2lvbj4xfHx0aGlzLl9jYXBzLnRleHR1cmVIYWxmRmxvYXQmJnRoaXMuX2dsLmdldEV4dGVuc2lvbigiT0VTX3RleHR1cmVfaGFsZl9mbG9hdF9saW5lYXIiKSksdGhpcy5fY2Fwcy5hc3RjJiYodGhpcy5fZ2wuQ09NUFJFU1NFRF9TUkdCOF9BTFBIQThfQVNUQ180eDRfS0hSPXRoaXMuX2NhcHMuYXN0Yy5DT01QUkVTU0VEX1NSR0I4X0FMUEhBOF9BU1RDXzR4NF9LSFIpLHRoaXMuX2NhcHMuYnB0YyYmKHRoaXMuX2dsLkNPTVBSRVNTRURfU1JHQl9BTFBIQV9CUFRDX1VOT1JNX0VYVD10aGlzLl9jYXBzLmJwdGMuQ09NUFJFU1NFRF9TUkdCX0FMUEhBX0JQVENfVU5PUk1fRVhUKSx0aGlzLl9jYXBzLnMzdGNfc3JnYiYmKHRoaXMuX2dsLkNPTVBSRVNTRURfU1JHQl9TM1RDX0RYVDFfRVhUPXRoaXMuX2NhcHMuczN0Y19zcmdiLkNPTVBSRVNTRURfU1JHQl9TM1RDX0RYVDFfRVhULHRoaXMuX2dsLkNPTVBSRVNTRURfU1JHQl9BTFBIQV9TM1RDX0RYVDFfRVhUPXRoaXMuX2NhcHMuczN0Y19zcmdiLkNPTVBSRVNTRURfU1JHQl9BTFBIQV9TM1RDX0RYVDFfRVhULHRoaXMuX2dsLkNPTVBSRVNTRURfU1JHQl9BTFBIQV9TM1RDX0RYVDVfRVhUPXRoaXMuX2NhcHMuczN0Y19zcmdiLkNPTVBSRVNTRURfU1JHQl9BTFBIQV9TM1RDX0RYVDVfRVhUKSx0aGlzLl9jYXBzLmV0YzImJih0aGlzLl9nbC5DT01QUkVTU0VEX1NSR0I4X0VUQzI9dGhpcy5fY2Fwcy5ldGMyLkNPTVBSRVNTRURfU1JHQjhfRVRDMix0aGlzLl9nbC5DT01QUkVTU0VEX1NSR0I4X0FMUEhBOF9FVEMyX0VBQz10aGlzLl9jYXBzLmV0YzIuQ09NUFJFU1NFRF9TUkdCOF9BTFBIQThfRVRDMl9FQUMpLHRoaXMuX3dlYkdMVmVyc2lvbj4xJiZ0aGlzLl9nbC5IQUxGX0ZMT0FUX09FUyE9PTUxMzEmJih0aGlzLl9nbC5IQUxGX0ZMT0FUX09FUz01MTMxKSx0aGlzLl9jYXBzLnRleHR1cmVIYWxmRmxvYXRSZW5kZXI9dGhpcy5fY2Fwcy50ZXh0dXJlSGFsZkZsb2F0JiZ0aGlzLl9jYW5SZW5kZXJUb0hhbGZGbG9hdEZyYW1lYnVmZmVyKCksdGhpcy5fd2ViR0xWZXJzaW9uPjEpdGhpcy5fY2Fwcy5kcmF3QnVmZmVyc0V4dGVuc2lvbj0hMCx0aGlzLl9jYXBzLm1heE1TQUFTYW1wbGVzPXRoaXMuX21heE1TQUFTYW1wbGVzT3ZlcnJpZGUhPT1udWxsP3RoaXMuX21heE1TQUFTYW1wbGVzT3ZlcnJpZGU6dGhpcy5fZ2wuZ2V0UGFyYW1ldGVyKHRoaXMuX2dsLk1BWF9TQU1QTEVTKTtlbHNle2NvbnN0IGk9dGhpcy5fZ2wuZ2V0RXh0ZW5zaW9uKCJXRUJHTF9kcmF3X2J1ZmZlcnMiKTtpZihpIT09bnVsbCl7dGhpcy5fY2Fwcy5kcmF3QnVmZmVyc0V4dGVuc2lvbj0hMCx0aGlzLl9nbC5kcmF3QnVmZmVycz1pLmRyYXdCdWZmZXJzV0VCR0wuYmluZChpKSx0aGlzLl9nbC5EUkFXX0ZSQU1FQlVGRkVSPXRoaXMuX2dsLkZSQU1FQlVGRkVSO2ZvcihsZXQgcz0wO3M8MTY7cysrKXRoaXMuX2dsWyJDT0xPUl9BVFRBQ0hNRU5UIitzKyJfV0VCR0wiXT1pWyJDT0xPUl9BVFRBQ0hNRU5UIitzKyJfV0VCR0wiXX19aWYodGhpcy5fd2ViR0xWZXJzaW9uPjEpdGhpcy5fY2Fwcy5kZXB0aFRleHR1cmVFeHRlbnNpb249ITA7ZWxzZXtjb25zdCBpPXRoaXMuX2dsLmdldEV4dGVuc2lvbigiV0VCR0xfZGVwdGhfdGV4dHVyZSIpO2khPW51bGwmJih0aGlzLl9jYXBzLmRlcHRoVGV4dHVyZUV4dGVuc2lvbj0hMCx0aGlzLl9nbC5VTlNJR05FRF9JTlRfMjRfOD1pLlVOU0lHTkVEX0lOVF8yNF84X1dFQkdMKX1pZih0aGlzLmRpc2FibGVWZXJ0ZXhBcnJheU9iamVjdHMpdGhpcy5fY2Fwcy52ZXJ0ZXhBcnJheU9iamVjdD0hMTtlbHNlIGlmKHRoaXMuX3dlYkdMVmVyc2lvbj4xKXRoaXMuX2NhcHMudmVydGV4QXJyYXlPYmplY3Q9ITA7ZWxzZXtjb25zdCBpPXRoaXMuX2dsLmdldEV4dGVuc2lvbigiT0VTX3ZlcnRleF9hcnJheV9vYmplY3QiKTtpIT1udWxsJiYodGhpcy5fY2Fwcy52ZXJ0ZXhBcnJheU9iamVjdD0hMCx0aGlzLl9nbC5jcmVhdGVWZXJ0ZXhBcnJheT1pLmNyZWF0ZVZlcnRleEFycmF5T0VTLmJpbmQoaSksdGhpcy5fZ2wuYmluZFZlcnRleEFycmF5PWkuYmluZFZlcnRleEFycmF5T0VTLmJpbmQoaSksdGhpcy5fZ2wuZGVsZXRlVmVydGV4QXJyYXk9aS5kZWxldGVWZXJ0ZXhBcnJheU9FUy5iaW5kKGkpKX1pZih0aGlzLl93ZWJHTFZlcnNpb24+MSl0aGlzLl9jYXBzLmluc3RhbmNlZEFycmF5cz0hMDtlbHNle2NvbnN0IGk9dGhpcy5fZ2wuZ2V0RXh0ZW5zaW9uKCJBTkdMRV9pbnN0YW5jZWRfYXJyYXlzIik7aSE9bnVsbD8odGhpcy5fY2Fwcy5pbnN0YW5jZWRBcnJheXM9ITAsdGhpcy5fZ2wuZHJhd0FycmF5c0luc3RhbmNlZD1pLmRyYXdBcnJheXNJbnN0YW5jZWRBTkdMRS5iaW5kKGkpLHRoaXMuX2dsLmRyYXdFbGVtZW50c0luc3RhbmNlZD1pLmRyYXdFbGVtZW50c0luc3RhbmNlZEFOR0xFLmJpbmQoaSksdGhpcy5fZ2wudmVydGV4QXR0cmliRGl2aXNvcj1pLnZlcnRleEF0dHJpYkRpdmlzb3JBTkdMRS5iaW5kKGkpKTp0aGlzLl9jYXBzLmluc3RhbmNlZEFycmF5cz0hMX1pZih0aGlzLl9nbC5nZXRTaGFkZXJQcmVjaXNpb25Gb3JtYXQpe2NvbnN0IGk9dGhpcy5fZ2wuZ2V0U2hhZGVyUHJlY2lzaW9uRm9ybWF0KHRoaXMuX2dsLlZFUlRFWF9TSEFERVIsdGhpcy5fZ2wuSElHSF9GTE9BVCkscz10aGlzLl9nbC5nZXRTaGFkZXJQcmVjaXNpb25Gb3JtYXQodGhpcy5fZ2wuRlJBR01FTlRfU0hBREVSLHRoaXMuX2dsLkhJR0hfRkxPQVQpO2kmJnMmJih0aGlzLl9jYXBzLmhpZ2hQcmVjaXNpb25TaGFkZXJTdXBwb3J0ZWQ9aS5wcmVjaXNpb24hPT0wJiZzLnByZWNpc2lvbiE9PTApfWlmKHRoaXMuX3dlYkdMVmVyc2lvbj4xKXRoaXMuX2NhcHMuYmxlbmRNaW5NYXg9ITA7ZWxzZXtjb25zdCBpPXRoaXMuX2dsLmdldEV4dGVuc2lvbigiRVhUX2JsZW5kX21pbm1heCIpO2khPW51bGwmJih0aGlzLl9jYXBzLmJsZW5kTWluTWF4PSEwLHRoaXMuX2dsLk1BWD1pLk1BWF9FWFQsdGhpcy5fZ2wuTUlOPWkuTUlOX0VYVCl9aWYoIXRoaXMuX2NhcHMuc3VwcG9ydFNSR0JCdWZmZXJzKXtpZih0aGlzLl93ZWJHTFZlcnNpb24+MSl0aGlzLl9jYXBzLnN1cHBvcnRTUkdCQnVmZmVycz0hMDtlbHNle2NvbnN0IGk9dGhpcy5fZ2wuZ2V0RXh0ZW5zaW9uKCJFWFRfc1JHQiIpO2khPW51bGwmJih0aGlzLl9jYXBzLnN1cHBvcnRTUkdCQnVmZmVycz0hMCx0aGlzLl9nbC5TUkdCPWkuU1JHQl9FWFQsdGhpcy5fZ2wuU1JHQjg9aS5TUkdCX0FMUEhBX0VYVCx0aGlzLl9nbC5TUkdCOF9BTFBIQTg9aS5TUkdCX0FMUEhBX0VYVCl9dGhpcy5fY2Fwcy5zdXBwb3J0U1JHQkJ1ZmZlcnM9dGhpcy5fY2Fwcy5zdXBwb3J0U1JHQkJ1ZmZlcnMmJiEhKHRoaXMuX2NyZWF0aW9uT3B0aW9ucyYmdGhpcy5fY3JlYXRpb25PcHRpb25zLmZvcmNlU1JHQkJ1ZmZlclN1cHBvcnRTdGF0ZSl9dGhpcy5fZGVwdGhDdWxsaW5nU3RhdGUuZGVwdGhUZXN0PSEwLHRoaXMuX2RlcHRoQ3VsbGluZ1N0YXRlLmRlcHRoRnVuYz10aGlzLl9nbC5MRVFVQUwsdGhpcy5fZGVwdGhDdWxsaW5nU3RhdGUuZGVwdGhNYXNrPSEwLHRoaXMuX21heFNpbXVsdGFuZW91c1RleHR1cmVzPXRoaXMuX2NhcHMubWF4Q29tYmluZWRUZXh0dXJlc0ltYWdlVW5pdHM7Zm9yKGxldCBpPTA7aTx0aGlzLl9tYXhTaW11bHRhbmVvdXNUZXh0dXJlcztpKyspdGhpcy5fbmV4dEZyZWVUZXh0dXJlU2xvdHMucHVzaChpKX1faW5pdEZlYXR1cmVzKCl7dGhpcy5fZmVhdHVyZXM9e2ZvcmNlQml0bWFwT3ZlckhUTUxJbWFnZUVsZW1lbnQ6ITEsc3VwcG9ydFJlbmRlckFuZENvcHlUb0xvZEZvckZsb2F0VGV4dHVyZXM6dGhpcy5fd2ViR0xWZXJzaW9uIT09MSxzdXBwb3J0RGVwdGhTdGVuY2lsVGV4dHVyZTp0aGlzLl93ZWJHTFZlcnNpb24hPT0xLHN1cHBvcnRTaGFkb3dTYW1wbGVyczp0aGlzLl93ZWJHTFZlcnNpb24hPT0xLHVuaWZvcm1CdWZmZXJIYXJkQ2hlY2tNYXRyaXg6ITEsYWxsb3dUZXh0dXJlUHJlZmlsdGVyaW5nOnRoaXMuX3dlYkdMVmVyc2lvbiE9PTEsdHJhY2tVYm9zSW5GcmFtZTohMSxjaGVja1Vib3NDb250ZW50QmVmb3JlVXBsb2FkOiExLHN1cHBvcnRDU006dGhpcy5fd2ViR0xWZXJzaW9uIT09MSxiYXNpc05lZWRzUE9UOnRoaXMuX3dlYkdMVmVyc2lvbj09PTEsc3VwcG9ydDNEVGV4dHVyZXM6dGhpcy5fd2ViR0xWZXJzaW9uIT09MSxuZWVkVHlwZVN1ZmZpeEluU2hhZGVyQ29uc3RhbnRzOnRoaXMuX3dlYkdMVmVyc2lvbiE9PTEsc3VwcG9ydE1TQUE6dGhpcy5fd2ViR0xWZXJzaW9uIT09MSxzdXBwb3J0U1NBTzI6dGhpcy5fd2ViR0xWZXJzaW9uIT09MSxzdXBwb3J0RXh0ZW5kZWRUZXh0dXJlRm9ybWF0czp0aGlzLl93ZWJHTFZlcnNpb24hPT0xLHN1cHBvcnRTd2l0Y2hDYXNlSW5TaGFkZXI6dGhpcy5fd2ViR0xWZXJzaW9uIT09MSxzdXBwb3J0U3luY1RleHR1cmVSZWFkOiEwLG5lZWRzSW52ZXJ0aW5nQml0bWFwOiEwLHVzZVVCT0JpbmRpbmdDYWNoZTohMCxuZWVkU2hhZGVyQ29kZUlubGluaW5nOiExLG5lZWRUb0Fsd2F5c0JpbmRVbmlmb3JtQnVmZmVyczohMSxzdXBwb3J0UmVuZGVyUGFzc2VzOiExLHN1cHBvcnRTcHJpdGVJbnN0YW5jaW5nOiEwLF9jb2xsZWN0VWJvc1VwZGF0ZWRJbkZyYW1lOiExfX1nZXQgd2ViR0xWZXJzaW9uKCl7cmV0dXJuIHRoaXMuX3dlYkdMVmVyc2lvbn1nZXRDbGFzc05hbWUoKXtyZXR1cm4iVGhpbkVuZ2luZSJ9Z2V0IGlzU3RlbmNpbEVuYWJsZSgpe3JldHVybiB0aGlzLl9pc1N0ZW5jaWxFbmFibGV9X3ByZXBhcmVXb3JraW5nQ2FudmFzKCl7aWYodGhpcy5fd29ya2luZ0NhbnZhcylyZXR1cm47dGhpcy5fd29ya2luZ0NhbnZhcz10aGlzLmNyZWF0ZUNhbnZhcygxLDEpO2NvbnN0IGU9dGhpcy5fd29ya2luZ0NhbnZhcy5nZXRDb250ZXh0KCIyZCIpO2UmJih0aGlzLl93b3JraW5nQ29udGV4dD1lKX1yZXNldFRleHR1cmVDYWNoZSgpe2Zvcihjb25zdCBlIGluIHRoaXMuX2JvdW5kVGV4dHVyZXNDYWNoZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5fYm91bmRUZXh0dXJlc0NhY2hlLGUpJiYodGhpcy5fYm91bmRUZXh0dXJlc0NhY2hlW2VdPW51bGwpO3RoaXMuX2N1cnJlbnRUZXh0dXJlQ2hhbm5lbD0tMX1nZXRJbmZvKCl7cmV0dXJuIHRoaXMuZ2V0R2xJbmZvKCl9Z2V0R2xJbmZvKCl7cmV0dXJue3ZlbmRvcjp0aGlzLl9nbFZlbmRvcixyZW5kZXJlcjp0aGlzLl9nbFJlbmRlcmVyLHZlcnNpb246dGhpcy5fZ2xWZXJzaW9ufX1zZXRIYXJkd2FyZVNjYWxpbmdMZXZlbChlKXt0aGlzLl9oYXJkd2FyZVNjYWxpbmdMZXZlbD1lLHRoaXMucmVzaXplKCl9Z2V0SGFyZHdhcmVTY2FsaW5nTGV2ZWwoKXtyZXR1cm4gdGhpcy5faGFyZHdhcmVTY2FsaW5nTGV2ZWx9Z2V0TG9hZGVkVGV4dHVyZXNDYWNoZSgpe3JldHVybiB0aGlzLl9pbnRlcm5hbFRleHR1cmVzQ2FjaGV9Z2V0Q2Fwcygpe3JldHVybiB0aGlzLl9jYXBzfXN0b3BSZW5kZXJMb29wKGUpe2lmKCFlKXt0aGlzLl9hY3RpdmVSZW5kZXJMb29wcz1bXTtyZXR1cm59Y29uc3QgdD10aGlzLl9hY3RpdmVSZW5kZXJMb29wcy5pbmRleE9mKGUpO3Q+PTAmJnRoaXMuX2FjdGl2ZVJlbmRlckxvb3BzLnNwbGljZSh0LDEpfV9yZW5kZXJMb29wKCl7aWYoIXRoaXMuX2NvbnRleHRXYXNMb3N0KXtsZXQgZT0hMDtpZighdGhpcy5yZW5kZXJFdmVuSW5CYWNrZ3JvdW5kJiZ0aGlzLl93aW5kb3dJc0JhY2tncm91bmQmJihlPSExKSxlKXt0aGlzLmJlZ2luRnJhbWUoKTtmb3IobGV0IHQ9MDt0PHRoaXMuX2FjdGl2ZVJlbmRlckxvb3BzLmxlbmd0aDt0Kyspe2NvbnN0IGk9dGhpcy5fYWN0aXZlUmVuZGVyTG9vcHNbdF07aSgpfXRoaXMuZW5kRnJhbWUoKX19dGhpcy5fYWN0aXZlUmVuZGVyTG9vcHMubGVuZ3RoPjA/dGhpcy5fZnJhbWVIYW5kbGVyPXRoaXMuX3F1ZXVlTmV3RnJhbWUodGhpcy5fYm91bmRSZW5kZXJGdW5jdGlvbix0aGlzLmdldEhvc3RXaW5kb3coKSk6dGhpcy5fcmVuZGVyaW5nUXVldWVMYXVuY2hlZD0hMX1nZXRSZW5kZXJpbmdDYW52YXMoKXtyZXR1cm4gdGhpcy5fcmVuZGVyaW5nQ2FudmFzfWdldEF1ZGlvQ29udGV4dCgpe3JldHVybiB0aGlzLl9hdWRpb0NvbnRleHR9Z2V0QXVkaW9EZXN0aW5hdGlvbigpe3JldHVybiB0aGlzLl9hdWRpb0Rlc3RpbmF0aW9ufWdldEhvc3RXaW5kb3coKXtyZXR1cm4gamUoKT90aGlzLl9yZW5kZXJpbmdDYW52YXMmJnRoaXMuX3JlbmRlcmluZ0NhbnZhcy5vd25lckRvY3VtZW50JiZ0aGlzLl9yZW5kZXJpbmdDYW52YXMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldz90aGlzLl9yZW5kZXJpbmdDYW52YXMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldzp3aW5kb3c6bnVsbH1nZXRSZW5kZXJXaWR0aChlPSExKXtyZXR1cm4hZSYmdGhpcy5fY3VycmVudFJlbmRlclRhcmdldD90aGlzLl9jdXJyZW50UmVuZGVyVGFyZ2V0LndpZHRoOnRoaXMuX2ZyYW1lYnVmZmVyRGltZW5zaW9uc09iamVjdD90aGlzLl9mcmFtZWJ1ZmZlckRpbWVuc2lvbnNPYmplY3QuZnJhbWVidWZmZXJXaWR0aDp0aGlzLl9nbC5kcmF3aW5nQnVmZmVyV2lkdGh9Z2V0UmVuZGVySGVpZ2h0KGU9ITEpe3JldHVybiFlJiZ0aGlzLl9jdXJyZW50UmVuZGVyVGFyZ2V0P3RoaXMuX2N1cnJlbnRSZW5kZXJUYXJnZXQuaGVpZ2h0OnRoaXMuX2ZyYW1lYnVmZmVyRGltZW5zaW9uc09iamVjdD90aGlzLl9mcmFtZWJ1ZmZlckRpbWVuc2lvbnNPYmplY3QuZnJhbWVidWZmZXJIZWlnaHQ6dGhpcy5fZ2wuZHJhd2luZ0J1ZmZlckhlaWdodH1fcXVldWVOZXdGcmFtZShlLHQpe3JldHVybiBvZS5RdWV1ZU5ld0ZyYW1lKGUsdCl9cnVuUmVuZGVyTG9vcChlKXt0aGlzLl9hY3RpdmVSZW5kZXJMb29wcy5pbmRleE9mKGUpPT09LTEmJih0aGlzLl9hY3RpdmVSZW5kZXJMb29wcy5wdXNoKGUpLHRoaXMuX3JlbmRlcmluZ1F1ZXVlTGF1bmNoZWR8fCh0aGlzLl9yZW5kZXJpbmdRdWV1ZUxhdW5jaGVkPSEwLHRoaXMuX2JvdW5kUmVuZGVyRnVuY3Rpb249dGhpcy5fcmVuZGVyTG9vcC5iaW5kKHRoaXMpLHRoaXMuX2ZyYW1lSGFuZGxlcj10aGlzLl9xdWV1ZU5ld0ZyYW1lKHRoaXMuX2JvdW5kUmVuZGVyRnVuY3Rpb24sdGhpcy5nZXRIb3N0V2luZG93KCkpKSl9Y2xlYXIoZSx0LGkscz0hMSl7Y29uc3Qgcj10aGlzLnN0ZW5jaWxTdGF0ZUNvbXBvc2VyLnVzZVN0ZW5jaWxHbG9iYWxPbmx5O3RoaXMuc3RlbmNpbFN0YXRlQ29tcG9zZXIudXNlU3RlbmNpbEdsb2JhbE9ubHk9ITAsdGhpcy5hcHBseVN0YXRlcygpLHRoaXMuc3RlbmNpbFN0YXRlQ29tcG9zZXIudXNlU3RlbmNpbEdsb2JhbE9ubHk9cjtsZXQgbj0wO3QmJmUmJih0aGlzLl9nbC5jbGVhckNvbG9yKGUucixlLmcsZS5iLGUuYSE9PXZvaWQgMD9lLmE6MSksbnw9dGhpcy5fZ2wuQ09MT1JfQlVGRkVSX0JJVCksaSYmKHRoaXMudXNlUmV2ZXJzZURlcHRoQnVmZmVyPyh0aGlzLl9kZXB0aEN1bGxpbmdTdGF0ZS5kZXB0aEZ1bmM9dGhpcy5fZ2wuR0VRVUFMLHRoaXMuX2dsLmNsZWFyRGVwdGgoMCkpOnRoaXMuX2dsLmNsZWFyRGVwdGgoMSksbnw9dGhpcy5fZ2wuREVQVEhfQlVGRkVSX0JJVCkscyYmKHRoaXMuX2dsLmNsZWFyU3RlbmNpbCgwKSxufD10aGlzLl9nbC5TVEVOQ0lMX0JVRkZFUl9CSVQpLHRoaXMuX2dsLmNsZWFyKG4pfV92aWV3cG9ydChlLHQsaSxzKXsoZSE9PXRoaXMuX3ZpZXdwb3J0Q2FjaGVkLnh8fHQhPT10aGlzLl92aWV3cG9ydENhY2hlZC55fHxpIT09dGhpcy5fdmlld3BvcnRDYWNoZWQuenx8cyE9PXRoaXMuX3ZpZXdwb3J0Q2FjaGVkLncpJiYodGhpcy5fdmlld3BvcnRDYWNoZWQueD1lLHRoaXMuX3ZpZXdwb3J0Q2FjaGVkLnk9dCx0aGlzLl92aWV3cG9ydENhY2hlZC56PWksdGhpcy5fdmlld3BvcnRDYWNoZWQudz1zLHRoaXMuX2dsLnZpZXdwb3J0KGUsdCxpLHMpKX1zZXRWaWV3cG9ydChlLHQsaSl7Y29uc3Qgcz10fHx0aGlzLmdldFJlbmRlcldpZHRoKCkscj1pfHx0aGlzLmdldFJlbmRlckhlaWdodCgpLG49ZS54fHwwLGE9ZS55fHwwO3RoaXMuX2NhY2hlZFZpZXdwb3J0PWUsdGhpcy5fdmlld3BvcnQobipzLGEqcixzKmUud2lkdGgsciplLmhlaWdodCl9YmVnaW5GcmFtZSgpe31lbmRGcmFtZSgpe3RoaXMuX2JhZE9TJiZ0aGlzLmZsdXNoRnJhbWVidWZmZXIoKSx0aGlzLl9mcmFtZUlkKyt9cmVzaXplKGU9ITEpe2xldCB0LGk7aWYodGhpcy5hZGFwdFRvRGV2aWNlUmF0aW8pe2NvbnN0IHM9amUoKSYmd2luZG93LmRldmljZVBpeGVsUmF0aW98fDEscj10aGlzLl9sYXN0RGV2aWNlUGl4ZWxSYXRpby9zO3RoaXMuX2xhc3REZXZpY2VQaXhlbFJhdGlvPXMsdGhpcy5faGFyZHdhcmVTY2FsaW5nTGV2ZWwqPXJ9amUoKT8odD10aGlzLl9yZW5kZXJpbmdDYW52YXM/dGhpcy5fcmVuZGVyaW5nQ2FudmFzLmNsaWVudFdpZHRofHx0aGlzLl9yZW5kZXJpbmdDYW52YXMud2lkdGg6d2luZG93LmlubmVyV2lkdGgsaT10aGlzLl9yZW5kZXJpbmdDYW52YXM/dGhpcy5fcmVuZGVyaW5nQ2FudmFzLmNsaWVudEhlaWdodHx8dGhpcy5fcmVuZGVyaW5nQ2FudmFzLmhlaWdodDp3aW5kb3cuaW5uZXJIZWlnaHQpOih0PXRoaXMuX3JlbmRlcmluZ0NhbnZhcz90aGlzLl9yZW5kZXJpbmdDYW52YXMud2lkdGg6MTAwLGk9dGhpcy5fcmVuZGVyaW5nQ2FudmFzP3RoaXMuX3JlbmRlcmluZ0NhbnZhcy5oZWlnaHQ6MTAwKSx0aGlzLnNldFNpemUodC90aGlzLl9oYXJkd2FyZVNjYWxpbmdMZXZlbCxpL3RoaXMuX2hhcmR3YXJlU2NhbGluZ0xldmVsLGUpfXNldFNpemUoZSx0LGk9ITEpe3JldHVybiF0aGlzLl9yZW5kZXJpbmdDYW52YXN8fChlPWV8MCx0PXR8MCwhaSYmdGhpcy5fcmVuZGVyaW5nQ2FudmFzLndpZHRoPT09ZSYmdGhpcy5fcmVuZGVyaW5nQ2FudmFzLmhlaWdodD09PXQpPyExOih0aGlzLl9yZW5kZXJpbmdDYW52YXMud2lkdGg9ZSx0aGlzLl9yZW5kZXJpbmdDYW52YXMuaGVpZ2h0PXQsITApfWJpbmRGcmFtZWJ1ZmZlcihlLHQ9MCxpLHMscixuPTAsYT0wKXt2YXIgbyxoLGwsdSxkO2NvbnN0IGY9ZTt0aGlzLl9jdXJyZW50UmVuZGVyVGFyZ2V0JiZ0aGlzLnVuQmluZEZyYW1lYnVmZmVyKHRoaXMuX2N1cnJlbnRSZW5kZXJUYXJnZXQpLHRoaXMuX2N1cnJlbnRSZW5kZXJUYXJnZXQ9ZSx0aGlzLl9iaW5kVW5ib3VuZEZyYW1lYnVmZmVyKGYuX01TQUFGcmFtZWJ1ZmZlcj9mLl9NU0FBRnJhbWVidWZmZXI6Zi5fZnJhbWVidWZmZXIpO2NvbnN0IF89dGhpcy5fZ2w7ZS5pczJEQXJyYXk/Xy5mcmFtZWJ1ZmZlclRleHR1cmVMYXllcihfLkZSQU1FQlVGRkVSLF8uQ09MT1JfQVRUQUNITUVOVDAsKG89ZS50ZXh0dXJlLl9oYXJkd2FyZVRleHR1cmUpPT09bnVsbHx8bz09PXZvaWQgMD92b2lkIDA6by51bmRlcmx5aW5nUmVzb3VyY2UsbixhKTplLmlzQ3ViZSYmXy5mcmFtZWJ1ZmZlclRleHR1cmUyRChfLkZSQU1FQlVGRkVSLF8uQ09MT1JfQVRUQUNITUVOVDAsXy5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1grdCwoaD1lLnRleHR1cmUuX2hhcmR3YXJlVGV4dHVyZSk9PT1udWxsfHxoPT09dm9pZCAwP3ZvaWQgMDpoLnVuZGVybHlpbmdSZXNvdXJjZSxuKTtjb25zdCBFPWUuX2RlcHRoU3RlbmNpbFRleHR1cmU7aWYoRSl7Y29uc3QgbT1lLl9kZXB0aFN0ZW5jaWxUZXh0dXJlV2l0aFN0ZW5jaWw/Xy5ERVBUSF9TVEVOQ0lMX0FUVEFDSE1FTlQ6Xy5ERVBUSF9BVFRBQ0hNRU5UO2UuaXMyREFycmF5P18uZnJhbWVidWZmZXJUZXh0dXJlTGF5ZXIoXy5GUkFNRUJVRkZFUixtLChsPUUuX2hhcmR3YXJlVGV4dHVyZSk9PT1udWxsfHxsPT09dm9pZCAwP3ZvaWQgMDpsLnVuZGVybHlpbmdSZXNvdXJjZSxuLGEpOmUuaXNDdWJlP18uZnJhbWVidWZmZXJUZXh0dXJlMkQoXy5GUkFNRUJVRkZFUixtLF8uVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9YK3QsKHU9RS5faGFyZHdhcmVUZXh0dXJlKT09PW51bGx8fHU9PT12b2lkIDA/dm9pZCAwOnUudW5kZXJseWluZ1Jlc291cmNlLG4pOl8uZnJhbWVidWZmZXJUZXh0dXJlMkQoXy5GUkFNRUJVRkZFUixtLF8uVEVYVFVSRV8yRCwoZD1FLl9oYXJkd2FyZVRleHR1cmUpPT09bnVsbHx8ZD09PXZvaWQgMD92b2lkIDA6ZC51bmRlcmx5aW5nUmVzb3VyY2Usbil9dGhpcy5fY2FjaGVkVmlld3BvcnQmJiFyP3RoaXMuc2V0Vmlld3BvcnQodGhpcy5fY2FjaGVkVmlld3BvcnQsaSxzKTooaXx8KGk9ZS53aWR0aCxuJiYoaT1pL01hdGgucG93KDIsbikpKSxzfHwocz1lLmhlaWdodCxuJiYocz1zL01hdGgucG93KDIsbikpKSx0aGlzLl92aWV3cG9ydCgwLDAsaSxzKSksdGhpcy53aXBlQ2FjaGVzKCl9c2V0U3RhdGUoZSx0PTAsaSxzPSExLHIsbixhPTApe3ZhciBvLGg7KHRoaXMuX2RlcHRoQ3VsbGluZ1N0YXRlLmN1bGwhPT1lfHxpKSYmKHRoaXMuX2RlcHRoQ3VsbGluZ1N0YXRlLmN1bGw9ZSk7Y29uc3QgbD0hKChoPShvPXRoaXMuY3VsbEJhY2tGYWNlcykhPT1udWxsJiZvIT09dm9pZCAwP286cikhPT1udWxsJiZoIT09dm9pZCAwKXx8aD90aGlzLl9nbC5CQUNLOnRoaXMuX2dsLkZST05UOyh0aGlzLl9kZXB0aEN1bGxpbmdTdGF0ZS5jdWxsRmFjZSE9PWx8fGkpJiYodGhpcy5fZGVwdGhDdWxsaW5nU3RhdGUuY3VsbEZhY2U9bCksdGhpcy5zZXRaT2Zmc2V0KHQpLHRoaXMuc2V0Wk9mZnNldFVuaXRzKGEpO2NvbnN0IHU9cz90aGlzLl9nbC5DVzp0aGlzLl9nbC5DQ1c7KHRoaXMuX2RlcHRoQ3VsbGluZ1N0YXRlLmZyb250RmFjZSE9PXV8fGkpJiYodGhpcy5fZGVwdGhDdWxsaW5nU3RhdGUuZnJvbnRGYWNlPXUpLHRoaXMuX3N0ZW5jaWxTdGF0ZUNvbXBvc2VyLnN0ZW5jaWxNYXRlcmlhbD1ufWdldERlcHRoQnVmZmVyKCl7cmV0dXJuIHRoaXMuX2RlcHRoQ3VsbGluZ1N0YXRlLmRlcHRoVGVzdH1zZXREZXB0aEJ1ZmZlcihlKXt0aGlzLl9kZXB0aEN1bGxpbmdTdGF0ZS5kZXB0aFRlc3Q9ZX1zZXRaT2Zmc2V0KGUpe3RoaXMuX2RlcHRoQ3VsbGluZ1N0YXRlLnpPZmZzZXQ9dGhpcy51c2VSZXZlcnNlRGVwdGhCdWZmZXI/LWU6ZX1nZXRaT2Zmc2V0KCl7Y29uc3QgZT10aGlzLl9kZXB0aEN1bGxpbmdTdGF0ZS56T2Zmc2V0O3JldHVybiB0aGlzLnVzZVJldmVyc2VEZXB0aEJ1ZmZlcj8tZTplfXNldFpPZmZzZXRVbml0cyhlKXt0aGlzLl9kZXB0aEN1bGxpbmdTdGF0ZS56T2Zmc2V0VW5pdHM9dGhpcy51c2VSZXZlcnNlRGVwdGhCdWZmZXI/LWU6ZX1nZXRaT2Zmc2V0VW5pdHMoKXtjb25zdCBlPXRoaXMuX2RlcHRoQ3VsbGluZ1N0YXRlLnpPZmZzZXRVbml0cztyZXR1cm4gdGhpcy51c2VSZXZlcnNlRGVwdGhCdWZmZXI/LWU6ZX1fYmluZFVuYm91bmRGcmFtZWJ1ZmZlcihlKXt0aGlzLl9jdXJyZW50RnJhbWVidWZmZXIhPT1lJiYodGhpcy5fZ2wuYmluZEZyYW1lYnVmZmVyKHRoaXMuX2dsLkZSQU1FQlVGRkVSLGUpLHRoaXMuX2N1cnJlbnRGcmFtZWJ1ZmZlcj1lKX1fY3VycmVudEZyYW1lQnVmZmVySXNEZWZhdWx0RnJhbWVCdWZmZXIoKXtyZXR1cm4gdGhpcy5fY3VycmVudEZyYW1lYnVmZmVyPT09bnVsbH1nZW5lcmF0ZU1pcG1hcHMoZSl7dGhpcy5fYmluZFRleHR1cmVEaXJlY3RseSh0aGlzLl9nbC5URVhUVVJFXzJELGUsITApLHRoaXMuX2dsLmdlbmVyYXRlTWlwbWFwKHRoaXMuX2dsLlRFWFRVUkVfMkQpLHRoaXMuX2JpbmRUZXh0dXJlRGlyZWN0bHkodGhpcy5fZ2wuVEVYVFVSRV8yRCxudWxsKX11bkJpbmRGcmFtZWJ1ZmZlcihlLHQ9ITEsaSl7dmFyIHM7Y29uc3Qgcj1lO3RoaXMuX2N1cnJlbnRSZW5kZXJUYXJnZXQ9bnVsbDtjb25zdCBuPXRoaXMuX2dsO2lmKHIuX01TQUFGcmFtZWJ1ZmZlcil7aWYoZS5pc011bHRpKXt0aGlzLnVuQmluZE11bHRpQ29sb3JBdHRhY2htZW50RnJhbWVidWZmZXIoZSx0LGkpO3JldHVybn1uLmJpbmRGcmFtZWJ1ZmZlcihuLlJFQURfRlJBTUVCVUZGRVIsci5fTVNBQUZyYW1lYnVmZmVyKSxuLmJpbmRGcmFtZWJ1ZmZlcihuLkRSQVdfRlJBTUVCVUZGRVIsci5fZnJhbWVidWZmZXIpLG4uYmxpdEZyYW1lYnVmZmVyKDAsMCxlLndpZHRoLGUuaGVpZ2h0LDAsMCxlLndpZHRoLGUuaGVpZ2h0LG4uQ09MT1JfQlVGRkVSX0JJVCxuLk5FQVJFU1QpfSEoKHM9ZS50ZXh0dXJlKT09PW51bGx8fHM9PT12b2lkIDApJiZzLmdlbmVyYXRlTWlwTWFwcyYmIXQmJiFlLmlzQ3ViZSYmdGhpcy5nZW5lcmF0ZU1pcG1hcHMoZS50ZXh0dXJlKSxpJiYoci5fTVNBQUZyYW1lYnVmZmVyJiZ0aGlzLl9iaW5kVW5ib3VuZEZyYW1lYnVmZmVyKHIuX2ZyYW1lYnVmZmVyKSxpKCkpLHRoaXMuX2JpbmRVbmJvdW5kRnJhbWVidWZmZXIobnVsbCl9Zmx1c2hGcmFtZWJ1ZmZlcigpe3RoaXMuX2dsLmZsdXNoKCl9cmVzdG9yZURlZmF1bHRGcmFtZWJ1ZmZlcigpe3RoaXMuX2N1cnJlbnRSZW5kZXJUYXJnZXQ/dGhpcy51bkJpbmRGcmFtZWJ1ZmZlcih0aGlzLl9jdXJyZW50UmVuZGVyVGFyZ2V0KTp0aGlzLl9iaW5kVW5ib3VuZEZyYW1lYnVmZmVyKG51bGwpLHRoaXMuX2NhY2hlZFZpZXdwb3J0JiZ0aGlzLnNldFZpZXdwb3J0KHRoaXMuX2NhY2hlZFZpZXdwb3J0KSx0aGlzLndpcGVDYWNoZXMoKX1fcmVzZXRWZXJ0ZXhCdWZmZXJCaW5kaW5nKCl7dGhpcy5iaW5kQXJyYXlCdWZmZXIobnVsbCksdGhpcy5fY2FjaGVkVmVydGV4QnVmZmVycz1udWxsfWNyZWF0ZVZlcnRleEJ1ZmZlcihlKXtyZXR1cm4gdGhpcy5fY3JlYXRlVmVydGV4QnVmZmVyKGUsdGhpcy5fZ2wuU1RBVElDX0RSQVcpfV9jcmVhdGVWZXJ0ZXhCdWZmZXIoZSx0KXtjb25zdCBpPXRoaXMuX2dsLmNyZWF0ZUJ1ZmZlcigpO2lmKCFpKXRocm93IG5ldyBFcnJvcigiVW5hYmxlIHRvIGNyZWF0ZSB2ZXJ0ZXggYnVmZmVyIik7Y29uc3Qgcz1uZXcgRGkoaSk7cmV0dXJuIHRoaXMuYmluZEFycmF5QnVmZmVyKHMpLGUgaW5zdGFuY2VvZiBBcnJheT90aGlzLl9nbC5idWZmZXJEYXRhKHRoaXMuX2dsLkFSUkFZX0JVRkZFUixuZXcgRmxvYXQzMkFycmF5KGUpLHQpOnRoaXMuX2dsLmJ1ZmZlckRhdGEodGhpcy5fZ2wuQVJSQVlfQlVGRkVSLGUsdCksdGhpcy5fcmVzZXRWZXJ0ZXhCdWZmZXJCaW5kaW5nKCkscy5yZWZlcmVuY2VzPTEsc31jcmVhdGVEeW5hbWljVmVydGV4QnVmZmVyKGUpe3JldHVybiB0aGlzLl9jcmVhdGVWZXJ0ZXhCdWZmZXIoZSx0aGlzLl9nbC5EWU5BTUlDX0RSQVcpfV9yZXNldEluZGV4QnVmZmVyQmluZGluZygpe3RoaXMuYmluZEluZGV4QnVmZmVyKG51bGwpLHRoaXMuX2NhY2hlZEluZGV4QnVmZmVyPW51bGx9Y3JlYXRlSW5kZXhCdWZmZXIoZSx0KXtjb25zdCBpPXRoaXMuX2dsLmNyZWF0ZUJ1ZmZlcigpLHM9bmV3IERpKGkpO2lmKCFpKXRocm93IG5ldyBFcnJvcigiVW5hYmxlIHRvIGNyZWF0ZSBpbmRleCBidWZmZXIiKTt0aGlzLmJpbmRJbmRleEJ1ZmZlcihzKTtjb25zdCByPXRoaXMuX25vcm1hbGl6ZUluZGV4RGF0YShlKTtyZXR1cm4gdGhpcy5fZ2wuYnVmZmVyRGF0YSh0aGlzLl9nbC5FTEVNRU5UX0FSUkFZX0JVRkZFUixyLHQ/dGhpcy5fZ2wuRFlOQU1JQ19EUkFXOnRoaXMuX2dsLlNUQVRJQ19EUkFXKSx0aGlzLl9yZXNldEluZGV4QnVmZmVyQmluZGluZygpLHMucmVmZXJlbmNlcz0xLHMuaXMzMkJpdHM9ci5CWVRFU19QRVJfRUxFTUVOVD09PTQsc31fbm9ybWFsaXplSW5kZXhEYXRhKGUpe2lmKGUuQllURVNfUEVSX0VMRU1FTlQ9PT0yKXJldHVybiBlO2lmKHRoaXMuX2NhcHMudWludEluZGljZXMpe2lmKGUgaW5zdGFuY2VvZiBVaW50MzJBcnJheSlyZXR1cm4gZTtmb3IobGV0IGk9MDtpPGUubGVuZ3RoO2krKylpZihlW2ldPj02NTUzNSlyZXR1cm4gbmV3IFVpbnQzMkFycmF5KGUpO3JldHVybiBuZXcgVWludDE2QXJyYXkoZSl9cmV0dXJuIG5ldyBVaW50MTZBcnJheShlKX1iaW5kQXJyYXlCdWZmZXIoZSl7dGhpcy5fdmFvUmVjb3JkSW5Qcm9ncmVzc3x8dGhpcy5fdW5iaW5kVmVydGV4QXJyYXlPYmplY3QoKSx0aGlzLl9iaW5kQnVmZmVyKGUsdGhpcy5fZ2wuQVJSQVlfQlVGRkVSKX1iaW5kVW5pZm9ybUJsb2NrKGUsdCxpKXtjb25zdCBzPWUucHJvZ3JhbSxyPXRoaXMuX2dsLmdldFVuaWZvcm1CbG9ja0luZGV4KHMsdCk7dGhpcy5fZ2wudW5pZm9ybUJsb2NrQmluZGluZyhzLHIsaSl9YmluZEluZGV4QnVmZmVyKGUpe3RoaXMuX3Zhb1JlY29yZEluUHJvZ3Jlc3N8fHRoaXMuX3VuYmluZFZlcnRleEFycmF5T2JqZWN0KCksdGhpcy5fYmluZEJ1ZmZlcihlLHRoaXMuX2dsLkVMRU1FTlRfQVJSQVlfQlVGRkVSKX1fYmluZEJ1ZmZlcihlLHQpeyh0aGlzLl92YW9SZWNvcmRJblByb2dyZXNzfHx0aGlzLl9jdXJyZW50Qm91bmRCdWZmZXJbdF0hPT1lKSYmKHRoaXMuX2dsLmJpbmRCdWZmZXIodCxlP2UudW5kZXJseWluZ1Jlc291cmNlOm51bGwpLHRoaXMuX2N1cnJlbnRCb3VuZEJ1ZmZlclt0XT1lKX11cGRhdGVBcnJheUJ1ZmZlcihlKXt0aGlzLl9nbC5idWZmZXJTdWJEYXRhKHRoaXMuX2dsLkFSUkFZX0JVRkZFUiwwLGUpfV92ZXJ0ZXhBdHRyaWJQb2ludGVyKGUsdCxpLHMscixuLGEpe2NvbnN0IG89dGhpcy5fY3VycmVudEJ1ZmZlclBvaW50ZXJzW3RdO2lmKCFvKXJldHVybjtsZXQgaD0hMTtvLmFjdGl2ZT8oby5idWZmZXIhPT1lJiYoby5idWZmZXI9ZSxoPSEwKSxvLnNpemUhPT1pJiYoby5zaXplPWksaD0hMCksby50eXBlIT09cyYmKG8udHlwZT1zLGg9ITApLG8ubm9ybWFsaXplZCE9PXImJihvLm5vcm1hbGl6ZWQ9cixoPSEwKSxvLnN0cmlkZSE9PW4mJihvLnN0cmlkZT1uLGg9ITApLG8ub2Zmc2V0IT09YSYmKG8ub2Zmc2V0PWEsaD0hMCkpOihoPSEwLG8uYWN0aXZlPSEwLG8uaW5kZXg9dCxvLnNpemU9aSxvLnR5cGU9cyxvLm5vcm1hbGl6ZWQ9cixvLnN0cmlkZT1uLG8ub2Zmc2V0PWEsby5idWZmZXI9ZSksKGh8fHRoaXMuX3Zhb1JlY29yZEluUHJvZ3Jlc3MpJiYodGhpcy5iaW5kQXJyYXlCdWZmZXIoZSkscz09PXRoaXMuX2dsLlVOU0lHTkVEX0lOVHx8cz09PXRoaXMuX2dsLklOVD90aGlzLl9nbC52ZXJ0ZXhBdHRyaWJJUG9pbnRlcih0LGkscyxuLGEpOnRoaXMuX2dsLnZlcnRleEF0dHJpYlBvaW50ZXIodCxpLHMscixuLGEpKX1fYmluZEluZGV4QnVmZmVyV2l0aENhY2hlKGUpe2UhPW51bGwmJnRoaXMuX2NhY2hlZEluZGV4QnVmZmVyIT09ZSYmKHRoaXMuX2NhY2hlZEluZGV4QnVmZmVyPWUsdGhpcy5iaW5kSW5kZXhCdWZmZXIoZSksdGhpcy5fdWludEluZGljZXNDdXJyZW50bHlTZXQ9ZS5pczMyQml0cyl9X2JpbmRWZXJ0ZXhCdWZmZXJzQXR0cmlidXRlcyhlLHQsaSl7Y29uc3Qgcz10LmdldEF0dHJpYnV0ZXNOYW1lcygpO3RoaXMuX3Zhb1JlY29yZEluUHJvZ3Jlc3N8fHRoaXMuX3VuYmluZFZlcnRleEFycmF5T2JqZWN0KCksdGhpcy51bmJpbmRBbGxBdHRyaWJ1dGVzKCk7Zm9yKGxldCByPTA7cjxzLmxlbmd0aDtyKyspe2NvbnN0IG49dC5nZXRBdHRyaWJ1dGVMb2NhdGlvbihyKTtpZihuPj0wKXtjb25zdCBhPXNbcl07bGV0IG89bnVsbDtpZihpJiYobz1pW2FdKSxvfHwobz1lW2FdKSwhbyljb250aW51ZTt0aGlzLl9nbC5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheShuKSx0aGlzLl92YW9SZWNvcmRJblByb2dyZXNzfHwodGhpcy5fdmVydGV4QXR0cmliQXJyYXlzRW5hYmxlZFtuXT0hMCk7Y29uc3QgaD1vLmdldEJ1ZmZlcigpO2gmJih0aGlzLl92ZXJ0ZXhBdHRyaWJQb2ludGVyKGgsbixvLmdldFNpemUoKSxvLnR5cGUsby5ub3JtYWxpemVkLG8uYnl0ZVN0cmlkZSxvLmJ5dGVPZmZzZXQpLG8uZ2V0SXNJbnN0YW5jZWQoKSYmKHRoaXMuX2dsLnZlcnRleEF0dHJpYkRpdmlzb3IobixvLmdldEluc3RhbmNlRGl2aXNvcigpKSx0aGlzLl92YW9SZWNvcmRJblByb2dyZXNzfHwodGhpcy5fY3VycmVudEluc3RhbmNlTG9jYXRpb25zLnB1c2gobiksdGhpcy5fY3VycmVudEluc3RhbmNlQnVmZmVycy5wdXNoKGgpKSkpfX19cmVjb3JkVmVydGV4QXJyYXlPYmplY3QoZSx0LGkscyl7Y29uc3Qgcj10aGlzLl9nbC5jcmVhdGVWZXJ0ZXhBcnJheSgpO2lmKCFyKXRocm93IG5ldyBFcnJvcigiVW5hYmxlIHRvIGNyZWF0ZSBWQU8iKTtyZXR1cm4gdGhpcy5fdmFvUmVjb3JkSW5Qcm9ncmVzcz0hMCx0aGlzLl9nbC5iaW5kVmVydGV4QXJyYXkociksdGhpcy5fbXVzdFdpcGVWZXJ0ZXhBdHRyaWJ1dGVzPSEwLHRoaXMuX2JpbmRWZXJ0ZXhCdWZmZXJzQXR0cmlidXRlcyhlLGkscyksdGhpcy5iaW5kSW5kZXhCdWZmZXIodCksdGhpcy5fdmFvUmVjb3JkSW5Qcm9ncmVzcz0hMSx0aGlzLl9nbC5iaW5kVmVydGV4QXJyYXkobnVsbCkscn1iaW5kVmVydGV4QXJyYXlPYmplY3QoZSx0KXt0aGlzLl9jYWNoZWRWZXJ0ZXhBcnJheU9iamVjdCE9PWUmJih0aGlzLl9jYWNoZWRWZXJ0ZXhBcnJheU9iamVjdD1lLHRoaXMuX2dsLmJpbmRWZXJ0ZXhBcnJheShlKSx0aGlzLl9jYWNoZWRWZXJ0ZXhCdWZmZXJzPW51bGwsdGhpcy5fY2FjaGVkSW5kZXhCdWZmZXI9bnVsbCx0aGlzLl91aW50SW5kaWNlc0N1cnJlbnRseVNldD10IT1udWxsJiZ0LmlzMzJCaXRzLHRoaXMuX211c3RXaXBlVmVydGV4QXR0cmlidXRlcz0hMCl9YmluZEJ1ZmZlcnNEaXJlY3RseShlLHQsaSxzLHIpe2lmKHRoaXMuX2NhY2hlZFZlcnRleEJ1ZmZlcnMhPT1lfHx0aGlzLl9jYWNoZWRFZmZlY3RGb3JWZXJ0ZXhCdWZmZXJzIT09cil7dGhpcy5fY2FjaGVkVmVydGV4QnVmZmVycz1lLHRoaXMuX2NhY2hlZEVmZmVjdEZvclZlcnRleEJ1ZmZlcnM9cjtjb25zdCBuPXIuZ2V0QXR0cmlidXRlc0NvdW50KCk7dGhpcy5fdW5iaW5kVmVydGV4QXJyYXlPYmplY3QoKSx0aGlzLnVuYmluZEFsbEF0dHJpYnV0ZXMoKTtsZXQgYT0wO2ZvcihsZXQgbz0wO288bjtvKyspaWYobzxpLmxlbmd0aCl7Y29uc3QgaD1yLmdldEF0dHJpYnV0ZUxvY2F0aW9uKG8pO2g+PTAmJih0aGlzLl9nbC5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheShoKSx0aGlzLl92ZXJ0ZXhBdHRyaWJBcnJheXNFbmFibGVkW2hdPSEwLHRoaXMuX3ZlcnRleEF0dHJpYlBvaW50ZXIoZSxoLGlbb10sdGhpcy5fZ2wuRkxPQVQsITEscyxhKSksYSs9aVtvXSo0fX10aGlzLl9iaW5kSW5kZXhCdWZmZXJXaXRoQ2FjaGUodCl9X3VuYmluZFZlcnRleEFycmF5T2JqZWN0KCl7dGhpcy5fY2FjaGVkVmVydGV4QXJyYXlPYmplY3QmJih0aGlzLl9jYWNoZWRWZXJ0ZXhBcnJheU9iamVjdD1udWxsLHRoaXMuX2dsLmJpbmRWZXJ0ZXhBcnJheShudWxsKSl9YmluZEJ1ZmZlcnMoZSx0LGkscyl7KHRoaXMuX2NhY2hlZFZlcnRleEJ1ZmZlcnMhPT1lfHx0aGlzLl9jYWNoZWRFZmZlY3RGb3JWZXJ0ZXhCdWZmZXJzIT09aSkmJih0aGlzLl9jYWNoZWRWZXJ0ZXhCdWZmZXJzPWUsdGhpcy5fY2FjaGVkRWZmZWN0Rm9yVmVydGV4QnVmZmVycz1pLHRoaXMuX2JpbmRWZXJ0ZXhCdWZmZXJzQXR0cmlidXRlcyhlLGkscykpLHRoaXMuX2JpbmRJbmRleEJ1ZmZlcldpdGhDYWNoZSh0KX11bmJpbmRJbnN0YW5jZUF0dHJpYnV0ZXMoKXtsZXQgZTtmb3IobGV0IHQ9MCxpPXRoaXMuX2N1cnJlbnRJbnN0YW5jZUxvY2F0aW9ucy5sZW5ndGg7dDxpO3QrKyl7Y29uc3Qgcz10aGlzLl9jdXJyZW50SW5zdGFuY2VCdWZmZXJzW3RdO2UhPXMmJnMucmVmZXJlbmNlcyYmKGU9cyx0aGlzLmJpbmRBcnJheUJ1ZmZlcihzKSk7Y29uc3Qgcj10aGlzLl9jdXJyZW50SW5zdGFuY2VMb2NhdGlvbnNbdF07dGhpcy5fZ2wudmVydGV4QXR0cmliRGl2aXNvcihyLDApfXRoaXMuX2N1cnJlbnRJbnN0YW5jZUJ1ZmZlcnMubGVuZ3RoPTAsdGhpcy5fY3VycmVudEluc3RhbmNlTG9jYXRpb25zLmxlbmd0aD0wfXJlbGVhc2VWZXJ0ZXhBcnJheU9iamVjdChlKXt0aGlzLl9nbC5kZWxldGVWZXJ0ZXhBcnJheShlKX1fcmVsZWFzZUJ1ZmZlcihlKXtyZXR1cm4gZS5yZWZlcmVuY2VzLS0sZS5yZWZlcmVuY2VzPT09MD8odGhpcy5fZGVsZXRlQnVmZmVyKGUpLCEwKTohMX1fZGVsZXRlQnVmZmVyKGUpe3RoaXMuX2dsLmRlbGV0ZUJ1ZmZlcihlLnVuZGVybHlpbmdSZXNvdXJjZSl9dXBkYXRlQW5kQmluZEluc3RhbmNlc0J1ZmZlcihlLHQsaSl7aWYodGhpcy5iaW5kQXJyYXlCdWZmZXIoZSksdCYmdGhpcy5fZ2wuYnVmZmVyU3ViRGF0YSh0aGlzLl9nbC5BUlJBWV9CVUZGRVIsMCx0KSxpWzBdLmluZGV4IT09dm9pZCAwKXRoaXMuYmluZEluc3RhbmNlc0J1ZmZlcihlLGksITApO2Vsc2UgZm9yKGxldCBzPTA7czw0O3MrKyl7Y29uc3Qgcj1pW3NdO3RoaXMuX3ZlcnRleEF0dHJpYkFycmF5c0VuYWJsZWRbcl18fCh0aGlzLl9nbC5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheShyKSx0aGlzLl92ZXJ0ZXhBdHRyaWJBcnJheXNFbmFibGVkW3JdPSEwKSx0aGlzLl92ZXJ0ZXhBdHRyaWJQb2ludGVyKGUsciw0LHRoaXMuX2dsLkZMT0FULCExLDY0LHMqMTYpLHRoaXMuX2dsLnZlcnRleEF0dHJpYkRpdmlzb3IociwxKSx0aGlzLl9jdXJyZW50SW5zdGFuY2VMb2NhdGlvbnMucHVzaChyKSx0aGlzLl9jdXJyZW50SW5zdGFuY2VCdWZmZXJzLnB1c2goZSl9fWJpbmRJbnN0YW5jZXNCdWZmZXIoZSx0LGk9ITApe3RoaXMuYmluZEFycmF5QnVmZmVyKGUpO2xldCBzPTA7aWYoaSlmb3IobGV0IHI9MDtyPHQubGVuZ3RoO3IrKyl7Y29uc3Qgbj10W3JdO3MrPW4uYXR0cmlidXRlU2l6ZSo0fWZvcihsZXQgcj0wO3I8dC5sZW5ndGg7cisrKXtjb25zdCBuPXRbcl07bi5pbmRleD09PXZvaWQgMCYmKG4uaW5kZXg9dGhpcy5fY3VycmVudEVmZmVjdC5nZXRBdHRyaWJ1dGVMb2NhdGlvbkJ5TmFtZShuLmF0dHJpYnV0ZU5hbWUpKSwhKG4uaW5kZXg8MCkmJih0aGlzLl92ZXJ0ZXhBdHRyaWJBcnJheXNFbmFibGVkW24uaW5kZXhdfHwodGhpcy5fZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkobi5pbmRleCksdGhpcy5fdmVydGV4QXR0cmliQXJyYXlzRW5hYmxlZFtuLmluZGV4XT0hMCksdGhpcy5fdmVydGV4QXR0cmliUG9pbnRlcihlLG4uaW5kZXgsbi5hdHRyaWJ1dGVTaXplLG4uYXR0cmlidXRlVHlwZXx8dGhpcy5fZ2wuRkxPQVQsbi5ub3JtYWxpemVkfHwhMSxzLG4ub2Zmc2V0KSx0aGlzLl9nbC52ZXJ0ZXhBdHRyaWJEaXZpc29yKG4uaW5kZXgsbi5kaXZpc29yPT09dm9pZCAwPzE6bi5kaXZpc29yKSx0aGlzLl9jdXJyZW50SW5zdGFuY2VMb2NhdGlvbnMucHVzaChuLmluZGV4KSx0aGlzLl9jdXJyZW50SW5zdGFuY2VCdWZmZXJzLnB1c2goZSkpfX1kaXNhYmxlSW5zdGFuY2VBdHRyaWJ1dGVCeU5hbWUoZSl7aWYoIXRoaXMuX2N1cnJlbnRFZmZlY3QpcmV0dXJuO2NvbnN0IHQ9dGhpcy5fY3VycmVudEVmZmVjdC5nZXRBdHRyaWJ1dGVMb2NhdGlvbkJ5TmFtZShlKTt0aGlzLmRpc2FibGVJbnN0YW5jZUF0dHJpYnV0ZSh0KX1kaXNhYmxlSW5zdGFuY2VBdHRyaWJ1dGUoZSl7bGV0IHQ9ITEsaTtmb3IoOyhpPXRoaXMuX2N1cnJlbnRJbnN0YW5jZUxvY2F0aW9ucy5pbmRleE9mKGUpKSE9PS0xOyl0aGlzLl9jdXJyZW50SW5zdGFuY2VMb2NhdGlvbnMuc3BsaWNlKGksMSksdGhpcy5fY3VycmVudEluc3RhbmNlQnVmZmVycy5zcGxpY2UoaSwxKSx0PSEwLGk9dGhpcy5fY3VycmVudEluc3RhbmNlTG9jYXRpb25zLmluZGV4T2YoZSk7dCYmKHRoaXMuX2dsLnZlcnRleEF0dHJpYkRpdmlzb3IoZSwwKSx0aGlzLmRpc2FibGVBdHRyaWJ1dGVCeUluZGV4KGUpKX1kaXNhYmxlQXR0cmlidXRlQnlJbmRleChlKXt0aGlzLl9nbC5kaXNhYmxlVmVydGV4QXR0cmliQXJyYXkoZSksdGhpcy5fdmVydGV4QXR0cmliQXJyYXlzRW5hYmxlZFtlXT0hMSx0aGlzLl9jdXJyZW50QnVmZmVyUG9pbnRlcnNbZV0uYWN0aXZlPSExfWRyYXcoZSx0LGkscyl7dGhpcy5kcmF3RWxlbWVudHNUeXBlKGU/MDoxLHQsaSxzKX1kcmF3UG9pbnRDbG91ZHMoZSx0LGkpe3RoaXMuZHJhd0FycmF5c1R5cGUoMixlLHQsaSl9ZHJhd1VuSW5kZXhlZChlLHQsaSxzKXt0aGlzLmRyYXdBcnJheXNUeXBlKGU/MDoxLHQsaSxzKX1kcmF3RWxlbWVudHNUeXBlKGUsdCxpLHMpe3RoaXMuYXBwbHlTdGF0ZXMoKSx0aGlzLl9yZXBvcnREcmF3Q2FsbCgpO2NvbnN0IHI9dGhpcy5fZHJhd01vZGUoZSksbj10aGlzLl91aW50SW5kaWNlc0N1cnJlbnRseVNldD90aGlzLl9nbC5VTlNJR05FRF9JTlQ6dGhpcy5fZ2wuVU5TSUdORURfU0hPUlQsYT10aGlzLl91aW50SW5kaWNlc0N1cnJlbnRseVNldD80OjI7cz90aGlzLl9nbC5kcmF3RWxlbWVudHNJbnN0YW5jZWQocixpLG4sdCphLHMpOnRoaXMuX2dsLmRyYXdFbGVtZW50cyhyLGksbix0KmEpfWRyYXdBcnJheXNUeXBlKGUsdCxpLHMpe3RoaXMuYXBwbHlTdGF0ZXMoKSx0aGlzLl9yZXBvcnREcmF3Q2FsbCgpO2NvbnN0IHI9dGhpcy5fZHJhd01vZGUoZSk7cz90aGlzLl9nbC5kcmF3QXJyYXlzSW5zdGFuY2VkKHIsdCxpLHMpOnRoaXMuX2dsLmRyYXdBcnJheXMocix0LGkpfV9kcmF3TW9kZShlKXtzd2l0Y2goZSl7Y2FzZSAwOnJldHVybiB0aGlzLl9nbC5UUklBTkdMRVM7Y2FzZSAyOnJldHVybiB0aGlzLl9nbC5QT0lOVFM7Y2FzZSAxOnJldHVybiB0aGlzLl9nbC5MSU5FUztjYXNlIDM6cmV0dXJuIHRoaXMuX2dsLlBPSU5UUztjYXNlIDQ6cmV0dXJuIHRoaXMuX2dsLkxJTkVTO2Nhc2UgNTpyZXR1cm4gdGhpcy5fZ2wuTElORV9MT09QO2Nhc2UgNjpyZXR1cm4gdGhpcy5fZ2wuTElORV9TVFJJUDtjYXNlIDc6cmV0dXJuIHRoaXMuX2dsLlRSSUFOR0xFX1NUUklQO2Nhc2UgODpyZXR1cm4gdGhpcy5fZ2wuVFJJQU5HTEVfRkFOO2RlZmF1bHQ6cmV0dXJuIHRoaXMuX2dsLlRSSUFOR0xFU319X3JlcG9ydERyYXdDYWxsKCl7fV9yZWxlYXNlRWZmZWN0KGUpe3RoaXMuX2NvbXBpbGVkRWZmZWN0c1tlLl9rZXldJiZkZWxldGUgdGhpcy5fY29tcGlsZWRFZmZlY3RzW2UuX2tleV07Y29uc3QgdD1lLmdldFBpcGVsaW5lQ29udGV4dCgpO3QmJnRoaXMuX2RlbGV0ZVBpcGVsaW5lQ29udGV4dCh0KX1fZGVsZXRlUGlwZWxpbmVDb250ZXh0KGUpe2NvbnN0IHQ9ZTt0JiZ0LnByb2dyYW0mJih0LnByb2dyYW0uX19TUEVDVE9SX3JlYnVpbGRQcm9ncmFtPW51bGwsdGhpcy5fZ2wuZGVsZXRlUHJvZ3JhbSh0LnByb2dyYW0pKX1fZ2V0R2xvYmFsRGVmaW5lcyhlKXtpZihlKXt0aGlzLmlzTkRDSGFsZlpSYW5nZT9lLklTX05EQ19IQUxGX1pSQU5HRT0iIjpkZWxldGUgZS5JU19ORENfSEFMRl9aUkFOR0UsdGhpcy51c2VSZXZlcnNlRGVwdGhCdWZmZXI/ZS5VU0VfUkVWRVJTRV9ERVBUSEJVRkZFUj0iIjpkZWxldGUgZS5VU0VfUkVWRVJTRV9ERVBUSEJVRkZFUix0aGlzLnVzZUV4YWN0U3JnYkNvbnZlcnNpb25zP2UuVVNFX0VYQUNUX1NSR0JfQ09OVkVSU0lPTlM9IiI6ZGVsZXRlIGUuVVNFX0VYQUNUX1NSR0JfQ09OVkVSU0lPTlM7cmV0dXJufWVsc2V7bGV0IHQ9IiI7cmV0dXJuIHRoaXMuaXNORENIYWxmWlJhbmdlJiYodCs9IiNkZWZpbmUgSVNfTkRDX0hBTEZfWlJBTkdFIiksdGhpcy51c2VSZXZlcnNlRGVwdGhCdWZmZXImJih0JiYodCs9YApgKSx0Kz0iI2RlZmluZSBVU0VfUkVWRVJTRV9ERVBUSEJVRkZFUiIpLHRoaXMudXNlRXhhY3RTcmdiQ29udmVyc2lvbnMmJih0JiYodCs9YApgKSx0Kz0iI2RlZmluZSBVU0VfRVhBQ1RfU1JHQl9DT05WRVJTSU9OUyIpLHR9fWNyZWF0ZUVmZmVjdChlLHQsaSxzLHIsbixhLG8saCxsPVplLkdMU0wpe3ZhciB1O2NvbnN0IGQ9ZS52ZXJ0ZXhFbGVtZW50fHxlLnZlcnRleHx8ZS52ZXJ0ZXhUb2tlbnx8ZS52ZXJ0ZXhTb3VyY2V8fGUsZj1lLmZyYWdtZW50RWxlbWVudHx8ZS5mcmFnbWVudHx8ZS5mcmFnbWVudFRva2VufHxlLmZyYWdtZW50U291cmNlfHxlLF89dGhpcy5fZ2V0R2xvYmFsRGVmaW5lcygpO2xldCBFPSh1PXI/P3QuZGVmaW5lcykhPT1udWxsJiZ1IT09dm9pZCAwP3U6IiI7XyYmKEUrPV8pO2NvbnN0IG09ZCsiKyIrZisiQCIrRTtpZih0aGlzLl9jb21waWxlZEVmZmVjdHNbbV0pe2NvbnN0IFM9dGhpcy5fY29tcGlsZWRFZmZlY3RzW21dO3JldHVybiBhJiZTLmlzUmVhZHkoKSYmYShTKSxTfWNvbnN0IHY9bmV3IFBlKGUsdCxpLHMsdGhpcyxyLG4sYSxvLGgsbSxsKTtyZXR1cm4gdGhpcy5fY29tcGlsZWRFZmZlY3RzW21dPXYsdn1zdGF0aWMgX0NvbmNhdGVuYXRlU2hhZGVyKGUsdCxpPSIiKXtyZXR1cm4gaSsodD90K2AKYDoiIikrZX1fY29tcGlsZVNoYWRlcihlLHQsaSxzKXtyZXR1cm4gdGhpcy5fY29tcGlsZVJhd1NoYWRlcihvZS5fQ29uY2F0ZW5hdGVTaGFkZXIoZSxpLHMpLHQpfV9jb21waWxlUmF3U2hhZGVyKGUsdCl7Y29uc3QgaT10aGlzLl9nbCxzPWkuY3JlYXRlU2hhZGVyKHQ9PT0idmVydGV4Ij9pLlZFUlRFWF9TSEFERVI6aS5GUkFHTUVOVF9TSEFERVIpO2lmKCFzKXtsZXQgcj1pLk5PX0VSUk9SLG49aS5OT19FUlJPUjtmb3IoOyhuPWkuZ2V0RXJyb3IoKSkhPT1pLk5PX0VSUk9SOylyPW47dGhyb3cgbmV3IEVycm9yKGBTb21ldGhpbmcgd2VudCB3cm9uZyB3aGlsZSBjcmVhdGluZyBhIGdsICR7dH0gc2hhZGVyIG9iamVjdC4gZ2wgZXJyb3I9JHtyfSwgZ2wgaXNDb250ZXh0TG9zdD0ke2kuaXNDb250ZXh0TG9zdCgpfSwgX2NvbnRleHRXYXNMb3N0PSR7dGhpcy5fY29udGV4dFdhc0xvc3R9YCl9cmV0dXJuIGkuc2hhZGVyU291cmNlKHMsZSksaS5jb21waWxlU2hhZGVyKHMpLHN9X2dldFNoYWRlclNvdXJjZShlKXtyZXR1cm4gdGhpcy5fZ2wuZ2V0U2hhZGVyU291cmNlKGUpfWNyZWF0ZVJhd1NoYWRlclByb2dyYW0oZSx0LGkscyxyPW51bGwpe3M9c3x8dGhpcy5fZ2w7Y29uc3Qgbj10aGlzLl9jb21waWxlUmF3U2hhZGVyKHQsInZlcnRleCIpLGE9dGhpcy5fY29tcGlsZVJhd1NoYWRlcihpLCJmcmFnbWVudCIpO3JldHVybiB0aGlzLl9jcmVhdGVTaGFkZXJQcm9ncmFtKGUsbixhLHMscil9Y3JlYXRlU2hhZGVyUHJvZ3JhbShlLHQsaSxzLHIsbj1udWxsKXtyPXJ8fHRoaXMuX2dsO2NvbnN0IGE9dGhpcy5fd2ViR0xWZXJzaW9uPjE/YCN2ZXJzaW9uIDMwMCBlcwojZGVmaW5lIFdFQkdMMiAKYDoiIixvPXRoaXMuX2NvbXBpbGVTaGFkZXIodCwidmVydGV4IixzLGEpLGg9dGhpcy5fY29tcGlsZVNoYWRlcihpLCJmcmFnbWVudCIscyxhKTtyZXR1cm4gdGhpcy5fY3JlYXRlU2hhZGVyUHJvZ3JhbShlLG8saCxyLG4pfWlubGluZVNoYWRlckNvZGUoZSl7cmV0dXJuIGV9Y3JlYXRlUGlwZWxpbmVDb250ZXh0KGUpe2NvbnN0IHQ9bmV3IGxuO3JldHVybiB0LmVuZ2luZT10aGlzLHRoaXMuX2NhcHMucGFyYWxsZWxTaGFkZXJDb21waWxlJiYodC5pc1BhcmFsbGVsQ29tcGlsZWQ9ITApLHR9Y3JlYXRlTWF0ZXJpYWxDb250ZXh0KCl7fWNyZWF0ZURyYXdDb250ZXh0KCl7fV9jcmVhdGVTaGFkZXJQcm9ncmFtKGUsdCxpLHMscj1udWxsKXtjb25zdCBuPXMuY3JlYXRlUHJvZ3JhbSgpO2lmKGUucHJvZ3JhbT1uLCFuKXRocm93IG5ldyBFcnJvcigiVW5hYmxlIHRvIGNyZWF0ZSBwcm9ncmFtIik7cmV0dXJuIHMuYXR0YWNoU2hhZGVyKG4sdCkscy5hdHRhY2hTaGFkZXIobixpKSxzLmxpbmtQcm9ncmFtKG4pLGUuY29udGV4dD1zLGUudmVydGV4U2hhZGVyPXQsZS5mcmFnbWVudFNoYWRlcj1pLGUuaXNQYXJhbGxlbENvbXBpbGVkfHx0aGlzLl9maW5hbGl6ZVBpcGVsaW5lQ29udGV4dChlKSxufV9maW5hbGl6ZVBpcGVsaW5lQ29udGV4dChlKXtjb25zdCB0PWUuY29udGV4dCxpPWUudmVydGV4U2hhZGVyLHM9ZS5mcmFnbWVudFNoYWRlcixyPWUucHJvZ3JhbTtpZighdC5nZXRQcm9ncmFtUGFyYW1ldGVyKHIsdC5MSU5LX1NUQVRVUykpe2lmKCF0aGlzLl9nbC5nZXRTaGFkZXJQYXJhbWV0ZXIoaSx0aGlzLl9nbC5DT01QSUxFX1NUQVRVUykpe2NvbnN0IG89dGhpcy5fZ2wuZ2V0U2hhZGVySW5mb0xvZyhpKTtpZihvKXRocm93IGUudmVydGV4Q29tcGlsYXRpb25FcnJvcj1vLG5ldyBFcnJvcigiVkVSVEVYIFNIQURFUiAiK28pfWlmKCF0aGlzLl9nbC5nZXRTaGFkZXJQYXJhbWV0ZXIocyx0aGlzLl9nbC5DT01QSUxFX1NUQVRVUykpe2NvbnN0IG89dGhpcy5fZ2wuZ2V0U2hhZGVySW5mb0xvZyhzKTtpZihvKXRocm93IGUuZnJhZ21lbnRDb21waWxhdGlvbkVycm9yPW8sbmV3IEVycm9yKCJGUkFHTUVOVCBTSEFERVIgIitvKX1jb25zdCBhPXQuZ2V0UHJvZ3JhbUluZm9Mb2cocik7aWYoYSl0aHJvdyBlLnByb2dyYW1MaW5rRXJyb3I9YSxuZXcgRXJyb3IoYSl9aWYodGhpcy52YWxpZGF0ZVNoYWRlclByb2dyYW1zJiYodC52YWxpZGF0ZVByb2dyYW0ociksIXQuZ2V0UHJvZ3JhbVBhcmFtZXRlcihyLHQuVkFMSURBVEVfU1RBVFVTKSkpe2NvbnN0IG89dC5nZXRQcm9ncmFtSW5mb0xvZyhyKTtpZihvKXRocm93IGUucHJvZ3JhbVZhbGlkYXRpb25FcnJvcj1vLG5ldyBFcnJvcihvKX10LmRlbGV0ZVNoYWRlcihpKSx0LmRlbGV0ZVNoYWRlcihzKSxlLnZlcnRleFNoYWRlcj12b2lkIDAsZS5mcmFnbWVudFNoYWRlcj12b2lkIDAsZS5vbkNvbXBpbGVkJiYoZS5vbkNvbXBpbGVkKCksZS5vbkNvbXBpbGVkPXZvaWQgMCl9X3ByZXBhcmVQaXBlbGluZUNvbnRleHQoZSx0LGkscyxyLG4sYSxvLGgsbCl7Y29uc3QgdT1lO3M/dS5wcm9ncmFtPXRoaXMuY3JlYXRlUmF3U2hhZGVyUHJvZ3JhbSh1LHQsaSx2b2lkIDAsaCk6dS5wcm9ncmFtPXRoaXMuY3JlYXRlU2hhZGVyUHJvZ3JhbSh1LHQsaSxvLHZvaWQgMCxoKSx1LnByb2dyYW0uX19TUEVDVE9SX3JlYnVpbGRQcm9ncmFtPWF9X2lzUmVuZGVyaW5nU3RhdGVDb21waWxlZChlKXtjb25zdCB0PWU7cmV0dXJuIHRoaXMuX2dsLmdldFByb2dyYW1QYXJhbWV0ZXIodC5wcm9ncmFtLHRoaXMuX2NhcHMucGFyYWxsZWxTaGFkZXJDb21waWxlLkNPTVBMRVRJT05fU1RBVFVTX0tIUik/KHRoaXMuX2ZpbmFsaXplUGlwZWxpbmVDb250ZXh0KHQpLCEwKTohMX1fZXhlY3V0ZVdoZW5SZW5kZXJpbmdTdGF0ZUlzQ29tcGlsZWQoZSx0KXtjb25zdCBpPWU7aWYoIWkuaXNQYXJhbGxlbENvbXBpbGVkKXt0KCk7cmV0dXJufWNvbnN0IHM9aS5vbkNvbXBpbGVkO3M/aS5vbkNvbXBpbGVkPSgpPT57cygpLHQoKX06aS5vbkNvbXBpbGVkPXR9Z2V0VW5pZm9ybXMoZSx0KXtjb25zdCBpPW5ldyBBcnJheSxzPWU7Zm9yKGxldCByPTA7cjx0Lmxlbmd0aDtyKyspaS5wdXNoKHRoaXMuX2dsLmdldFVuaWZvcm1Mb2NhdGlvbihzLnByb2dyYW0sdFtyXSkpO3JldHVybiBpfWdldEF0dHJpYnV0ZXMoZSx0KXtjb25zdCBpPVtdLHM9ZTtmb3IobGV0IHI9MDtyPHQubGVuZ3RoO3IrKyl0cnl7aS5wdXNoKHRoaXMuX2dsLmdldEF0dHJpYkxvY2F0aW9uKHMucHJvZ3JhbSx0W3JdKSl9Y2F0Y2h7aS5wdXNoKC0xKX1yZXR1cm4gaX1lbmFibGVFZmZlY3QoZSl7ZT1lIT09bnVsbCYmbWkuSXNXcmFwcGVyKGUpP2UuZWZmZWN0OmUsISghZXx8ZT09PXRoaXMuX2N1cnJlbnRFZmZlY3QpJiYodGhpcy5fc3RlbmNpbFN0YXRlQ29tcG9zZXIuc3RlbmNpbE1hdGVyaWFsPXZvaWQgMCxlPWUsdGhpcy5iaW5kU2FtcGxlcnMoZSksdGhpcy5fY3VycmVudEVmZmVjdD1lLGUub25CaW5kJiZlLm9uQmluZChlKSxlLl9vbkJpbmRPYnNlcnZhYmxlJiZlLl9vbkJpbmRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhlKSl9c2V0SW50KGUsdCl7cmV0dXJuIGU/KHRoaXMuX2dsLnVuaWZvcm0xaShlLHQpLCEwKTohMX1zZXRJbnQyKGUsdCxpKXtyZXR1cm4gZT8odGhpcy5fZ2wudW5pZm9ybTJpKGUsdCxpKSwhMCk6ITF9c2V0SW50MyhlLHQsaSxzKXtyZXR1cm4gZT8odGhpcy5fZ2wudW5pZm9ybTNpKGUsdCxpLHMpLCEwKTohMX1zZXRJbnQ0KGUsdCxpLHMscil7cmV0dXJuIGU/KHRoaXMuX2dsLnVuaWZvcm00aShlLHQsaSxzLHIpLCEwKTohMX1zZXRJbnRBcnJheShlLHQpe3JldHVybiBlPyh0aGlzLl9nbC51bmlmb3JtMWl2KGUsdCksITApOiExfXNldEludEFycmF5MihlLHQpe3JldHVybiFlfHx0Lmxlbmd0aCUyIT09MD8hMToodGhpcy5fZ2wudW5pZm9ybTJpdihlLHQpLCEwKX1zZXRJbnRBcnJheTMoZSx0KXtyZXR1cm4hZXx8dC5sZW5ndGglMyE9PTA/ITE6KHRoaXMuX2dsLnVuaWZvcm0zaXYoZSx0KSwhMCl9c2V0SW50QXJyYXk0KGUsdCl7cmV0dXJuIWV8fHQubGVuZ3RoJTQhPT0wPyExOih0aGlzLl9nbC51bmlmb3JtNGl2KGUsdCksITApfXNldFVJbnQoZSx0KXtyZXR1cm4gZT8odGhpcy5fZ2wudW5pZm9ybTF1aShlLHQpLCEwKTohMX1zZXRVSW50MihlLHQsaSl7cmV0dXJuIGU/KHRoaXMuX2dsLnVuaWZvcm0ydWkoZSx0LGkpLCEwKTohMX1zZXRVSW50MyhlLHQsaSxzKXtyZXR1cm4gZT8odGhpcy5fZ2wudW5pZm9ybTN1aShlLHQsaSxzKSwhMCk6ITF9c2V0VUludDQoZSx0LGkscyxyKXtyZXR1cm4gZT8odGhpcy5fZ2wudW5pZm9ybTR1aShlLHQsaSxzLHIpLCEwKTohMX1zZXRVSW50QXJyYXkoZSx0KXtyZXR1cm4gZT8odGhpcy5fZ2wudW5pZm9ybTF1aXYoZSx0KSwhMCk6ITF9c2V0VUludEFycmF5MihlLHQpe3JldHVybiFlfHx0Lmxlbmd0aCUyIT09MD8hMToodGhpcy5fZ2wudW5pZm9ybTJ1aXYoZSx0KSwhMCl9c2V0VUludEFycmF5MyhlLHQpe3JldHVybiFlfHx0Lmxlbmd0aCUzIT09MD8hMToodGhpcy5fZ2wudW5pZm9ybTN1aXYoZSx0KSwhMCl9c2V0VUludEFycmF5NChlLHQpe3JldHVybiFlfHx0Lmxlbmd0aCU0IT09MD8hMToodGhpcy5fZ2wudW5pZm9ybTR1aXYoZSx0KSwhMCl9c2V0QXJyYXkoZSx0KXtyZXR1cm4hZXx8dC5sZW5ndGg8MT8hMToodGhpcy5fZ2wudW5pZm9ybTFmdihlLHQpLCEwKX1zZXRBcnJheTIoZSx0KXtyZXR1cm4hZXx8dC5sZW5ndGglMiE9PTA/ITE6KHRoaXMuX2dsLnVuaWZvcm0yZnYoZSx0KSwhMCl9c2V0QXJyYXkzKGUsdCl7cmV0dXJuIWV8fHQubGVuZ3RoJTMhPT0wPyExOih0aGlzLl9nbC51bmlmb3JtM2Z2KGUsdCksITApfXNldEFycmF5NChlLHQpe3JldHVybiFlfHx0Lmxlbmd0aCU0IT09MD8hMToodGhpcy5fZ2wudW5pZm9ybTRmdihlLHQpLCEwKX1zZXRNYXRyaWNlcyhlLHQpe3JldHVybiBlPyh0aGlzLl9nbC51bmlmb3JtTWF0cml4NGZ2KGUsITEsdCksITApOiExfXNldE1hdHJpeDN4MyhlLHQpe3JldHVybiBlPyh0aGlzLl9nbC51bmlmb3JtTWF0cml4M2Z2KGUsITEsdCksITApOiExfXNldE1hdHJpeDJ4MihlLHQpe3JldHVybiBlPyh0aGlzLl9nbC51bmlmb3JtTWF0cml4MmZ2KGUsITEsdCksITApOiExfXNldEZsb2F0KGUsdCl7cmV0dXJuIGU/KHRoaXMuX2dsLnVuaWZvcm0xZihlLHQpLCEwKTohMX1zZXRGbG9hdDIoZSx0LGkpe3JldHVybiBlPyh0aGlzLl9nbC51bmlmb3JtMmYoZSx0LGkpLCEwKTohMX1zZXRGbG9hdDMoZSx0LGkscyl7cmV0dXJuIGU/KHRoaXMuX2dsLnVuaWZvcm0zZihlLHQsaSxzKSwhMCk6ITF9c2V0RmxvYXQ0KGUsdCxpLHMscil7cmV0dXJuIGU/KHRoaXMuX2dsLnVuaWZvcm00ZihlLHQsaSxzLHIpLCEwKTohMX1hcHBseVN0YXRlcygpe2lmKHRoaXMuX2RlcHRoQ3VsbGluZ1N0YXRlLmFwcGx5KHRoaXMuX2dsKSx0aGlzLl9zdGVuY2lsU3RhdGVDb21wb3Nlci5hcHBseSh0aGlzLl9nbCksdGhpcy5fYWxwaGFTdGF0ZS5hcHBseSh0aGlzLl9nbCksdGhpcy5fY29sb3JXcml0ZUNoYW5nZWQpe3RoaXMuX2NvbG9yV3JpdGVDaGFuZ2VkPSExO2NvbnN0IGU9dGhpcy5fY29sb3JXcml0ZTt0aGlzLl9nbC5jb2xvck1hc2soZSxlLGUsZSl9fXNldENvbG9yV3JpdGUoZSl7ZSE9PXRoaXMuX2NvbG9yV3JpdGUmJih0aGlzLl9jb2xvcldyaXRlQ2hhbmdlZD0hMCx0aGlzLl9jb2xvcldyaXRlPWUpfWdldENvbG9yV3JpdGUoKXtyZXR1cm4gdGhpcy5fY29sb3JXcml0ZX1nZXQgZGVwdGhDdWxsaW5nU3RhdGUoKXtyZXR1cm4gdGhpcy5fZGVwdGhDdWxsaW5nU3RhdGV9Z2V0IGFscGhhU3RhdGUoKXtyZXR1cm4gdGhpcy5fYWxwaGFTdGF0ZX1nZXQgc3RlbmNpbFN0YXRlKCl7cmV0dXJuIHRoaXMuX3N0ZW5jaWxTdGF0ZX1nZXQgc3RlbmNpbFN0YXRlQ29tcG9zZXIoKXtyZXR1cm4gdGhpcy5fc3RlbmNpbFN0YXRlQ29tcG9zZXJ9Y2xlYXJJbnRlcm5hbFRleHR1cmVzQ2FjaGUoKXt0aGlzLl9pbnRlcm5hbFRleHR1cmVzQ2FjaGUubGVuZ3RoPTB9d2lwZUNhY2hlcyhlKXt0aGlzLnByZXZlbnRDYWNoZVdpcGVCZXR3ZWVuRnJhbWVzJiYhZXx8KHRoaXMuX2N1cnJlbnRFZmZlY3Q9bnVsbCx0aGlzLl92aWV3cG9ydENhY2hlZC54PTAsdGhpcy5fdmlld3BvcnRDYWNoZWQueT0wLHRoaXMuX3ZpZXdwb3J0Q2FjaGVkLno9MCx0aGlzLl92aWV3cG9ydENhY2hlZC53PTAsdGhpcy5fdW5iaW5kVmVydGV4QXJyYXlPYmplY3QoKSxlJiYodGhpcy5fY3VycmVudFByb2dyYW09bnVsbCx0aGlzLnJlc2V0VGV4dHVyZUNhY2hlKCksdGhpcy5fc3RlbmNpbFN0YXRlQ29tcG9zZXIucmVzZXQoKSx0aGlzLl9kZXB0aEN1bGxpbmdTdGF0ZS5yZXNldCgpLHRoaXMuX2RlcHRoQ3VsbGluZ1N0YXRlLmRlcHRoRnVuYz10aGlzLl9nbC5MRVFVQUwsdGhpcy5fYWxwaGFTdGF0ZS5yZXNldCgpLHRoaXMuX2FscGhhTW9kZT0xLHRoaXMuX2FscGhhRXF1YXRpb249MCx0aGlzLl9jb2xvcldyaXRlPSEwLHRoaXMuX2NvbG9yV3JpdGVDaGFuZ2VkPSEwLHRoaXMuX3VucGFja0ZsaXBZQ2FjaGVkPW51bGwsdGhpcy5fZ2wucGl4ZWxTdG9yZWkodGhpcy5fZ2wuVU5QQUNLX0NPTE9SU1BBQ0VfQ09OVkVSU0lPTl9XRUJHTCx0aGlzLl9nbC5OT05FKSx0aGlzLl9nbC5waXhlbFN0b3JlaSh0aGlzLl9nbC5VTlBBQ0tfUFJFTVVMVElQTFlfQUxQSEFfV0VCR0wsMCksdGhpcy5fbXVzdFdpcGVWZXJ0ZXhBdHRyaWJ1dGVzPSEwLHRoaXMudW5iaW5kQWxsQXR0cmlidXRlcygpKSx0aGlzLl9yZXNldFZlcnRleEJ1ZmZlckJpbmRpbmcoKSx0aGlzLl9jYWNoZWRJbmRleEJ1ZmZlcj1udWxsLHRoaXMuX2NhY2hlZEVmZmVjdEZvclZlcnRleEJ1ZmZlcnM9bnVsbCx0aGlzLmJpbmRJbmRleEJ1ZmZlcihudWxsKSl9X2dldFNhbXBsaW5nUGFyYW1ldGVycyhlLHQpe2NvbnN0IGk9dGhpcy5fZ2w7bGV0IHM9aS5ORUFSRVNULHI9aS5ORUFSRVNUO3N3aXRjaChlKXtjYXNlIDExOnM9aS5MSU5FQVIsdD9yPWkuTElORUFSX01JUE1BUF9ORUFSRVNUOnI9aS5MSU5FQVI7YnJlYWs7Y2FzZSAzOnM9aS5MSU5FQVIsdD9yPWkuTElORUFSX01JUE1BUF9MSU5FQVI6cj1pLkxJTkVBUjticmVhaztjYXNlIDg6cz1pLk5FQVJFU1QsdD9yPWkuTkVBUkVTVF9NSVBNQVBfTElORUFSOnI9aS5ORUFSRVNUO2JyZWFrO2Nhc2UgNDpzPWkuTkVBUkVTVCx0P3I9aS5ORUFSRVNUX01JUE1BUF9ORUFSRVNUOnI9aS5ORUFSRVNUO2JyZWFrO2Nhc2UgNTpzPWkuTkVBUkVTVCx0P3I9aS5MSU5FQVJfTUlQTUFQX05FQVJFU1Q6cj1pLkxJTkVBUjticmVhaztjYXNlIDY6cz1pLk5FQVJFU1QsdD9yPWkuTElORUFSX01JUE1BUF9MSU5FQVI6cj1pLkxJTkVBUjticmVhaztjYXNlIDc6cz1pLk5FQVJFU1Qscj1pLkxJTkVBUjticmVhaztjYXNlIDE6cz1pLk5FQVJFU1Qscj1pLk5FQVJFU1Q7YnJlYWs7Y2FzZSA5OnM9aS5MSU5FQVIsdD9yPWkuTkVBUkVTVF9NSVBNQVBfTkVBUkVTVDpyPWkuTkVBUkVTVDticmVhaztjYXNlIDEwOnM9aS5MSU5FQVIsdD9yPWkuTkVBUkVTVF9NSVBNQVBfTElORUFSOnI9aS5ORUFSRVNUO2JyZWFrO2Nhc2UgMjpzPWkuTElORUFSLHI9aS5MSU5FQVI7YnJlYWs7Y2FzZSAxMjpzPWkuTElORUFSLHI9aS5ORUFSRVNUO2JyZWFrfXJldHVybnttaW46cixtYWc6c319X2NyZWF0ZVRleHR1cmUoKXtjb25zdCBlPXRoaXMuX2dsLmNyZWF0ZVRleHR1cmUoKTtpZighZSl0aHJvdyBuZXcgRXJyb3IoIlVuYWJsZSB0byBjcmVhdGUgdGV4dHVyZSIpO3JldHVybiBlfV9jcmVhdGVIYXJkd2FyZVRleHR1cmUoKXtyZXR1cm4gbmV3IHRyKHRoaXMuX2NyZWF0ZVRleHR1cmUoKSx0aGlzLl9nbCl9X2NyZWF0ZUludGVybmFsVGV4dHVyZShlLHQsaT0hMCxzPU5lLlVua25vd24pe3ZhciByO2xldCBuPSExLGE9MCxvPTMsaD01LGw9ITEsdT0xO3QhPT12b2lkIDAmJnR5cGVvZiB0PT0ib2JqZWN0Ij8obj0hIXQuZ2VuZXJhdGVNaXBNYXBzLGE9dC50eXBlPT09dm9pZCAwPzA6dC50eXBlLG89dC5zYW1wbGluZ01vZGU9PT12b2lkIDA/Mzp0LnNhbXBsaW5nTW9kZSxoPXQuZm9ybWF0PT09dm9pZCAwPzU6dC5mb3JtYXQsbD10LnVzZVNSR0JCdWZmZXI9PT12b2lkIDA/ITE6dC51c2VTUkdCQnVmZmVyLHU9KHI9dC5zYW1wbGVzKSE9PW51bGwmJnIhPT12b2lkIDA/cjoxKTpuPSEhdCxsJiYobD10aGlzLl9jYXBzLnN1cHBvcnRTUkdCQnVmZmVycyYmKHRoaXMud2ViR0xWZXJzaW9uPjF8fHRoaXMuaXNXZWJHUFUpKSwoYT09PTEmJiF0aGlzLl9jYXBzLnRleHR1cmVGbG9hdExpbmVhckZpbHRlcmluZ3x8YT09PTImJiF0aGlzLl9jYXBzLnRleHR1cmVIYWxmRmxvYXRMaW5lYXJGaWx0ZXJpbmcpJiYobz0xKSxhPT09MSYmIXRoaXMuX2NhcHMudGV4dHVyZUZsb2F0JiYoYT0wLE8uV2FybigiRmxvYXQgdGV4dHVyZXMgYXJlIG5vdCBzdXBwb3J0ZWQuIFR5cGUgZm9yY2VkIHRvIFRFWFRVUkVUWVBFX1VOU0lHTkVEX0JZVEUiKSk7Y29uc3QgZD10aGlzLl9nbCxmPW5ldyBPdCh0aGlzLHMpLF89ZS53aWR0aHx8ZSxFPWUuaGVpZ2h0fHxlLG09ZS5sYXllcnN8fDAsdj10aGlzLl9nZXRTYW1wbGluZ1BhcmFtZXRlcnMobyxuKSxTPW0hPT0wP2QuVEVYVFVSRV8yRF9BUlJBWTpkLlRFWFRVUkVfMkQseT10aGlzLl9nZXRSR0JBQnVmZmVySW50ZXJuYWxTaXplZEZvcm1hdChhLGgsbCksQT10aGlzLl9nZXRJbnRlcm5hbEZvcm1hdChoKSxDPXRoaXMuX2dldFdlYkdMVGV4dHVyZVR5cGUoYSk7cmV0dXJuIHRoaXMuX2JpbmRUZXh0dXJlRGlyZWN0bHkoUyxmKSxtIT09MD8oZi5pczJEQXJyYXk9ITAsZC50ZXhJbWFnZTNEKFMsMCx5LF8sRSxtLDAsQSxDLG51bGwpKTpkLnRleEltYWdlMkQoUywwLHksXyxFLDAsQSxDLG51bGwpLGQudGV4UGFyYW1ldGVyaShTLGQuVEVYVFVSRV9NQUdfRklMVEVSLHYubWFnKSxkLnRleFBhcmFtZXRlcmkoUyxkLlRFWFRVUkVfTUlOX0ZJTFRFUix2Lm1pbiksZC50ZXhQYXJhbWV0ZXJpKFMsZC5URVhUVVJFX1dSQVBfUyxkLkNMQU1QX1RPX0VER0UpLGQudGV4UGFyYW1ldGVyaShTLGQuVEVYVFVSRV9XUkFQX1QsZC5DTEFNUF9UT19FREdFKSxuJiZ0aGlzLl9nbC5nZW5lcmF0ZU1pcG1hcChTKSx0aGlzLl9iaW5kVGV4dHVyZURpcmVjdGx5KFMsbnVsbCksZi5fdXNlU1JHQkJ1ZmZlcj1sLGYuYmFzZVdpZHRoPV8sZi5iYXNlSGVpZ2h0PUUsZi53aWR0aD1fLGYuaGVpZ2h0PUUsZi5kZXB0aD1tLGYuaXNSZWFkeT0hMCxmLnNhbXBsZXM9dSxmLmdlbmVyYXRlTWlwTWFwcz1uLGYuc2FtcGxpbmdNb2RlPW8sZi50eXBlPWEsZi5mb3JtYXQ9aCx0aGlzLl9pbnRlcm5hbFRleHR1cmVzQ2FjaGUucHVzaChmKSxmfV9nZXRVc2VTUkdCQnVmZmVyKGUsdCl7cmV0dXJuIGUmJnRoaXMuX2NhcHMuc3VwcG9ydFNSR0JCdWZmZXJzJiYodGhpcy53ZWJHTFZlcnNpb24+MXx8dGhpcy5pc1dlYkdQVXx8dCl9X2NyZWF0ZVRleHR1cmVCYXNlKGUsdCxpLHMscj0zLG49bnVsbCxhPW51bGwsbyxoLGw9bnVsbCx1PW51bGwsZD1udWxsLGY9bnVsbCxfLEUsbSl7ZT1lfHwiIjtjb25zdCB2PWUuc3Vic3RyKDAsNSk9PT0iZGF0YToiLFM9ZS5zdWJzdHIoMCw1KT09PSJibG9iOiIseT12JiZlLmluZGV4T2YoIjtiYXNlNjQsIikhPT0tMSxBPXV8fG5ldyBPdCh0aGlzLE5lLlVybCksQz1lO3RoaXMuX3RyYW5zZm9ybVRleHR1cmVVcmwmJiF5JiYhdSYmIWwmJihlPXRoaXMuX3RyYW5zZm9ybVRleHR1cmVVcmwoZSkpLEMhPT1lJiYoQS5fb3JpZ2luYWxVcmw9Qyk7Y29uc3QgYj1lLmxhc3RJbmRleE9mKCIuIik7bGV0IE09Znx8KGI+LTE/ZS5zdWJzdHJpbmcoYikudG9Mb3dlckNhc2UoKToiIiksTD1udWxsO00uaW5kZXhPZigiPyIpPi0xJiYoTT1NLnNwbGl0KCI/IilbMF0pO2Zvcihjb25zdCBjZSBvZiBvZS5fVGV4dHVyZUxvYWRlcnMpaWYoY2UuY2FuTG9hZChNLF8pKXtMPWNlO2JyZWFrfXMmJnMuYWRkUGVuZGluZ0RhdGEoQSksQS51cmw9ZSxBLmdlbmVyYXRlTWlwTWFwcz0hdCxBLnNhbXBsaW5nTW9kZT1yLEEuaW52ZXJ0WT1pLEEuX3VzZVNSR0JCdWZmZXI9dGhpcy5fZ2V0VXNlU1JHQkJ1ZmZlcighIW0sdCksdGhpcy5fZG9Ob3RIYW5kbGVDb250ZXh0TG9zdHx8KEEuX2J1ZmZlcj1sKTtsZXQgdz1udWxsO24mJiF1JiYodz1BLm9uTG9hZGVkT2JzZXJ2YWJsZS5hZGQobikpLHV8fHRoaXMuX2ludGVybmFsVGV4dHVyZXNDYWNoZS5wdXNoKEEpO2NvbnN0IGRlPShjZSxzZSk9PntzJiZzLnJlbW92ZVBlbmRpbmdEYXRhKEEpLGU9PT1DPyh3JiZBLm9uTG9hZGVkT2JzZXJ2YWJsZS5yZW1vdmUodyksZmUuVXNlRmFsbGJhY2tUZXh0dXJlJiZ0aGlzLl9jcmVhdGVUZXh0dXJlQmFzZShmZS5GYWxsYmFja1RleHR1cmUsdCxBLmludmVydFkscyxyLG51bGwsYSxvLGgsbCxBKSxjZT0oY2V8fCJVbmtub3duIGVycm9yIikrKGZlLlVzZUZhbGxiYWNrVGV4dHVyZT8iIC0gRmFsbGJhY2sgdGV4dHVyZSB3YXMgdXNlZCI6IiIpLEEub25FcnJvck9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHttZXNzYWdlOmNlLGV4Y2VwdGlvbjpzZX0pLGEmJmEoY2Usc2UpKTooTy5XYXJuKGBGYWlsZWQgdG8gbG9hZCAke2V9LCBmYWxsaW5nIGJhY2sgdG8gJHtDfWApLHRoaXMuX2NyZWF0ZVRleHR1cmVCYXNlKEMsdCxBLmludmVydFkscyxyLG4sYSxvLGgsbCxBLGQsZixfLEUsbSkpfTtpZihMKXtjb25zdCBjZT1zZT0+e0wubG9hZERhdGEoc2UsQSwodGUsRmUsd2UsSGUsS2UsWWUpPT57WWU/ZGUoIlRleHR1cmVMb2FkZXIgZmFpbGVkIHRvIGxvYWQgZGF0YSIpOm8oQSxNLHMse3dpZHRoOnRlLGhlaWdodDpGZX0sQS5pbnZlcnRZLCF3ZSxIZSwoKT0+KEtlKCksITEpLHIpfSxFKX07bD9sIGluc3RhbmNlb2YgQXJyYXlCdWZmZXI/Y2UobmV3IFVpbnQ4QXJyYXkobCkpOkFycmF5QnVmZmVyLmlzVmlldyhsKT9jZShsKTphJiZhKCJVbmFibGUgdG8gbG9hZDogb25seSBBcnJheUJ1ZmZlciBvciBBcnJheUJ1ZmZlclZpZXcgaXMgc3VwcG9ydGVkIixudWxsKTp0aGlzLl9sb2FkRmlsZShlLHNlPT5jZShuZXcgVWludDhBcnJheShzZSkpLHZvaWQgMCxzP3Mub2ZmbGluZVByb3ZpZGVyOnZvaWQgMCwhMCwoc2UsdGUpPT57ZGUoIlVuYWJsZSB0byBsb2FkICIrKHNlJiZzZS5yZXNwb25zZVVSTCx0ZSkpfSl9ZWxzZXtjb25zdCBjZT1zZT0+e1MmJiF0aGlzLl9kb05vdEhhbmRsZUNvbnRleHRMb3N0JiYoQS5fYnVmZmVyPXNlKSxvKEEsTSxzLHNlLEEuaW52ZXJ0WSx0LCExLGgscil9OyF2fHx5P2wmJih0eXBlb2YgbC5kZWNvZGluZz09InN0cmluZyJ8fGwuY2xvc2UpP2NlKGwpOm9lLl9GaWxlVG9vbHNMb2FkSW1hZ2UoZSxjZSxkZSxzP3Mub2ZmbGluZVByb3ZpZGVyOm51bGwsXyxBLmludmVydFkmJnRoaXMuX2ZlYXR1cmVzLm5lZWRzSW52ZXJ0aW5nQml0bWFwP3tpbWFnZU9yaWVudGF0aW9uOiJmbGlwWSJ9OnZvaWQgMCk6dHlwZW9mIGw9PSJzdHJpbmcifHxsIGluc3RhbmNlb2YgQXJyYXlCdWZmZXJ8fEFycmF5QnVmZmVyLmlzVmlldyhsKXx8bCBpbnN0YW5jZW9mIEJsb2I/b2UuX0ZpbGVUb29sc0xvYWRJbWFnZShsLGNlLGRlLHM/cy5vZmZsaW5lUHJvdmlkZXI6bnVsbCxfLEEuaW52ZXJ0WSYmdGhpcy5fZmVhdHVyZXMubmVlZHNJbnZlcnRpbmdCaXRtYXA/e2ltYWdlT3JpZW50YXRpb246ImZsaXBZIn06dm9pZCAwKTpsJiZjZShsKX1yZXR1cm4gQX1jcmVhdGVUZXh0dXJlKGUsdCxpLHMscj0zLG49bnVsbCxhPW51bGwsbz1udWxsLGg9bnVsbCxsPW51bGwsdT1udWxsLGQsZixfLEUpe3JldHVybiB0aGlzLl9jcmVhdGVUZXh0dXJlQmFzZShlLHQsaSxzLHIsbixhLHRoaXMuX3ByZXBhcmVXZWJHTFRleHR1cmUuYmluZCh0aGlzKSwobSx2LFMseSxBLEMpPT57Y29uc3QgYj10aGlzLl9nbCxNPVMud2lkdGg9PT1tJiZTLmhlaWdodD09PXYsTD1sP3RoaXMuX2dldEludGVybmFsRm9ybWF0KGwsQS5fdXNlU1JHQkJ1ZmZlcik6eT09PSIuanBnIiYmIUEuX3VzZVNSR0JCdWZmZXI/Yi5SR0I6QS5fdXNlU1JHQkJ1ZmZlcj9iLlNSR0I4X0FMUEhBODpiLlJHQkE7bGV0IGs9bD90aGlzLl9nZXRJbnRlcm5hbEZvcm1hdChsKTp5PT09Ii5qcGciJiYhQS5fdXNlU1JHQkJ1ZmZlcj9iLlJHQjpiLlJHQkE7aWYoQS5fdXNlU1JHQkJ1ZmZlciYmdGhpcy53ZWJHTFZlcnNpb249PT0xJiYoaz1MKSxNKXJldHVybiBiLnRleEltYWdlMkQoYi5URVhUVVJFXzJELDAsTCxrLGIuVU5TSUdORURfQllURSxTKSwhMTtjb25zdCB3PXRoaXMuX2NhcHMubWF4VGV4dHVyZVNpemU7aWYoUy53aWR0aD53fHxTLmhlaWdodD53fHwhdGhpcy5fc3VwcG9ydHNIYXJkd2FyZVRleHR1cmVSZXNjYWxpbmcpcmV0dXJuIHRoaXMuX3ByZXBhcmVXb3JraW5nQ2FudmFzKCksIXRoaXMuX3dvcmtpbmdDYW52YXN8fCF0aGlzLl93b3JraW5nQ29udGV4dHx8KHRoaXMuX3dvcmtpbmdDYW52YXMud2lkdGg9bSx0aGlzLl93b3JraW5nQ2FudmFzLmhlaWdodD12LHRoaXMuX3dvcmtpbmdDb250ZXh0LmRyYXdJbWFnZShTLDAsMCxTLndpZHRoLFMuaGVpZ2h0LDAsMCxtLHYpLGIudGV4SW1hZ2UyRChiLlRFWFRVUkVfMkQsMCxMLGssYi5VTlNJR05FRF9CWVRFLHRoaXMuX3dvcmtpbmdDYW52YXMpLEEud2lkdGg9bSxBLmhlaWdodD12KSwhMTt7Y29uc3QgZGU9bmV3IE90KHRoaXMsTmUuVGVtcCk7dGhpcy5fYmluZFRleHR1cmVEaXJlY3RseShiLlRFWFRVUkVfMkQsZGUsITApLGIudGV4SW1hZ2UyRChiLlRFWFRVUkVfMkQsMCxMLGssYi5VTlNJR05FRF9CWVRFLFMpLHRoaXMuX3Jlc2NhbGVUZXh0dXJlKGRlLEEscyxMLCgpPT57dGhpcy5fcmVsZWFzZVRleHR1cmUoZGUpLHRoaXMuX2JpbmRUZXh0dXJlRGlyZWN0bHkoYi5URVhUVVJFXzJELEEsITApLEMoKX0pfXJldHVybiEwfSxvLGgsbCx1LGQsZixFKX1zdGF0aWMgX0ZpbGVUb29sc0xvYWRJbWFnZShlLHQsaSxzLHIsbil7dGhyb3cgJCgiRmlsZVRvb2xzIil9X3Jlc2NhbGVUZXh0dXJlKGUsdCxpLHMscil7fWNyZWF0ZVJhd1RleHR1cmUoZSx0LGkscyxyLG4sYSxvPW51bGwsaD0wLGw9MCx1PSExKXt0aHJvdyAkKCJFbmdpbmUuUmF3VGV4dHVyZSIpfWNyZWF0ZVJhd0N1YmVUZXh0dXJlKGUsdCxpLHMscixuLGEsbz1udWxsKXt0aHJvdyAkKCJFbmdpbmUuUmF3VGV4dHVyZSIpfWNyZWF0ZVJhd1RleHR1cmUzRChlLHQsaSxzLHIsbixhLG8saD1udWxsLGw9MCl7dGhyb3cgJCgiRW5naW5lLlJhd1RleHR1cmUiKX1jcmVhdGVSYXdUZXh0dXJlMkRBcnJheShlLHQsaSxzLHIsbixhLG8saD1udWxsLGw9MCl7dGhyb3cgJCgiRW5naW5lLlJhd1RleHR1cmUiKX1fdW5wYWNrRmxpcFkoZSl7dGhpcy5fdW5wYWNrRmxpcFlDYWNoZWQhPT1lJiYodGhpcy5fZ2wucGl4ZWxTdG9yZWkodGhpcy5fZ2wuVU5QQUNLX0ZMSVBfWV9XRUJHTCxlPzE6MCksdGhpcy5lbmFibGVVbnBhY2tGbGlwWUNhY2hlZCYmKHRoaXMuX3VucGFja0ZsaXBZQ2FjaGVkPWUpKX1fZ2V0VW5wYWNrQWxpZ25lbWVudCgpe3JldHVybiB0aGlzLl9nbC5nZXRQYXJhbWV0ZXIodGhpcy5fZ2wuVU5QQUNLX0FMSUdOTUVOVCl9X2dldFRleHR1cmVUYXJnZXQoZSl7cmV0dXJuIGUuaXNDdWJlP3RoaXMuX2dsLlRFWFRVUkVfQ1VCRV9NQVA6ZS5pczNEP3RoaXMuX2dsLlRFWFRVUkVfM0Q6ZS5pczJEQXJyYXl8fGUuaXNNdWx0aXZpZXc/dGhpcy5fZ2wuVEVYVFVSRV8yRF9BUlJBWTp0aGlzLl9nbC5URVhUVVJFXzJEfXVwZGF0ZVRleHR1cmVTYW1wbGluZ01vZGUoZSx0LGk9ITEpe2NvbnN0IHM9dGhpcy5fZ2V0VGV4dHVyZVRhcmdldCh0KSxyPXRoaXMuX2dldFNhbXBsaW5nUGFyYW1ldGVycyhlLHQuZ2VuZXJhdGVNaXBNYXBzfHxpKTt0aGlzLl9zZXRUZXh0dXJlUGFyYW1ldGVySW50ZWdlcihzLHRoaXMuX2dsLlRFWFRVUkVfTUFHX0ZJTFRFUixyLm1hZyx0KSx0aGlzLl9zZXRUZXh0dXJlUGFyYW1ldGVySW50ZWdlcihzLHRoaXMuX2dsLlRFWFRVUkVfTUlOX0ZJTFRFUixyLm1pbiksaSYmKHQuZ2VuZXJhdGVNaXBNYXBzPSEwLHRoaXMuX2dsLmdlbmVyYXRlTWlwbWFwKHMpKSx0aGlzLl9iaW5kVGV4dHVyZURpcmVjdGx5KHMsbnVsbCksdC5zYW1wbGluZ01vZGU9ZX11cGRhdGVUZXh0dXJlRGltZW5zaW9ucyhlLHQsaSxzPTEpe311cGRhdGVUZXh0dXJlV3JhcHBpbmdNb2RlKGUsdCxpPW51bGwscz1udWxsKXtjb25zdCByPXRoaXMuX2dldFRleHR1cmVUYXJnZXQoZSk7dCE9PW51bGwmJih0aGlzLl9zZXRUZXh0dXJlUGFyYW1ldGVySW50ZWdlcihyLHRoaXMuX2dsLlRFWFRVUkVfV1JBUF9TLHRoaXMuX2dldFRleHR1cmVXcmFwTW9kZSh0KSxlKSxlLl9jYWNoZWRXcmFwVT10KSxpIT09bnVsbCYmKHRoaXMuX3NldFRleHR1cmVQYXJhbWV0ZXJJbnRlZ2VyKHIsdGhpcy5fZ2wuVEVYVFVSRV9XUkFQX1QsdGhpcy5fZ2V0VGV4dHVyZVdyYXBNb2RlKGkpLGUpLGUuX2NhY2hlZFdyYXBWPWkpLChlLmlzMkRBcnJheXx8ZS5pczNEKSYmcyE9PW51bGwmJih0aGlzLl9zZXRUZXh0dXJlUGFyYW1ldGVySW50ZWdlcihyLHRoaXMuX2dsLlRFWFRVUkVfV1JBUF9SLHRoaXMuX2dldFRleHR1cmVXcmFwTW9kZShzKSxlKSxlLl9jYWNoZWRXcmFwUj1zKSx0aGlzLl9iaW5kVGV4dHVyZURpcmVjdGx5KHIsbnVsbCl9X3NldHVwRGVwdGhTdGVuY2lsVGV4dHVyZShlLHQsaSxzLHIsbj0xKXtjb25zdCBhPXQud2lkdGh8fHQsbz10LmhlaWdodHx8dCxoPXQubGF5ZXJzfHwwO2UuYmFzZVdpZHRoPWEsZS5iYXNlSGVpZ2h0PW8sZS53aWR0aD1hLGUuaGVpZ2h0PW8sZS5pczJEQXJyYXk9aD4wLGUuZGVwdGg9aCxlLmlzUmVhZHk9ITAsZS5zYW1wbGVzPW4sZS5nZW5lcmF0ZU1pcE1hcHM9ITEsZS5zYW1wbGluZ01vZGU9cz8yOjEsZS50eXBlPTAsZS5fY29tcGFyaXNvbkZ1bmN0aW9uPXI7Y29uc3QgbD10aGlzLl9nbCx1PXRoaXMuX2dldFRleHR1cmVUYXJnZXQoZSksZD10aGlzLl9nZXRTYW1wbGluZ1BhcmFtZXRlcnMoZS5zYW1wbGluZ01vZGUsITEpO2wudGV4UGFyYW1ldGVyaSh1LGwuVEVYVFVSRV9NQUdfRklMVEVSLGQubWFnKSxsLnRleFBhcmFtZXRlcmkodSxsLlRFWFRVUkVfTUlOX0ZJTFRFUixkLm1pbiksbC50ZXhQYXJhbWV0ZXJpKHUsbC5URVhUVVJFX1dSQVBfUyxsLkNMQU1QX1RPX0VER0UpLGwudGV4UGFyYW1ldGVyaSh1LGwuVEVYVFVSRV9XUkFQX1QsbC5DTEFNUF9UT19FREdFKSx0aGlzLndlYkdMVmVyc2lvbj4xJiYocj09PTA/KGwudGV4UGFyYW1ldGVyaSh1LGwuVEVYVFVSRV9DT01QQVJFX0ZVTkMsNTE1KSxsLnRleFBhcmFtZXRlcmkodSxsLlRFWFRVUkVfQ09NUEFSRV9NT0RFLGwuTk9ORSkpOihsLnRleFBhcmFtZXRlcmkodSxsLlRFWFRVUkVfQ09NUEFSRV9GVU5DLHIpLGwudGV4UGFyYW1ldGVyaSh1LGwuVEVYVFVSRV9DT01QQVJFX01PREUsbC5DT01QQVJFX1JFRl9UT19URVhUVVJFKSkpfV91cGxvYWRDb21wcmVzc2VkRGF0YVRvVGV4dHVyZURpcmVjdGx5KGUsdCxpLHMscixuPTAsYT0wKXtjb25zdCBvPXRoaXMuX2dsO2xldCBoPW8uVEVYVFVSRV8yRDtpZihlLmlzQ3ViZSYmKGg9by5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1grbiksZS5fdXNlU1JHQkJ1ZmZlcilzd2l0Y2godCl7Y2FzZSAzNzQ5MjpjYXNlIDM2MTk2OnRoaXMuX2NhcHMuZXRjMj90PW8uQ09NUFJFU1NFRF9TUkdCOF9FVEMyOmUuX3VzZVNSR0JCdWZmZXI9ITE7YnJlYWs7Y2FzZSAzNzQ5Njp0aGlzLl9jYXBzLmV0YzI/dD1vLkNPTVBSRVNTRURfU1JHQjhfQUxQSEE4X0VUQzJfRUFDOmUuX3VzZVNSR0JCdWZmZXI9ITE7YnJlYWs7Y2FzZSAzNjQ5Mjp0PW8uQ09NUFJFU1NFRF9TUkdCX0FMUEhBX0JQVENfVU5PUk1fRVhUO2JyZWFrO2Nhc2UgMzc4MDg6dD1vLkNPTVBSRVNTRURfU1JHQjhfQUxQSEE4X0FTVENfNHg0X0tIUjticmVhaztjYXNlIDMzNzc2OnRoaXMuX2NhcHMuczN0Y19zcmdiP3Q9by5DT01QUkVTU0VEX1NSR0JfUzNUQ19EWFQxX0VYVDplLl91c2VTUkdCQnVmZmVyPSExO2JyZWFrO2Nhc2UgMzM3Nzc6dGhpcy5fY2Fwcy5zM3RjX3NyZ2I/dD1vLkNPTVBSRVNTRURfU1JHQl9BTFBIQV9TM1RDX0RYVDFfRVhUOmUuX3VzZVNSR0JCdWZmZXI9ITE7YnJlYWs7Y2FzZSAzMzc3OTp0aGlzLl9jYXBzLnMzdGNfc3JnYj90PW8uQ09NUFJFU1NFRF9TUkdCX0FMUEhBX1MzVENfRFhUNV9FWFQ6ZS5fdXNlU1JHQkJ1ZmZlcj0hMTticmVhaztkZWZhdWx0OmUuX3VzZVNSR0JCdWZmZXI9ITE7YnJlYWt9dGhpcy5fZ2wuY29tcHJlc3NlZFRleEltYWdlMkQoaCxhLHQsaSxzLDAscil9X3VwbG9hZERhdGFUb1RleHR1cmVEaXJlY3RseShlLHQsaT0wLHM9MCxyLG49ITEpe2NvbnN0IGE9dGhpcy5fZ2wsbz10aGlzLl9nZXRXZWJHTFRleHR1cmVUeXBlKGUudHlwZSksaD10aGlzLl9nZXRJbnRlcm5hbEZvcm1hdChlLmZvcm1hdCksbD1yPT09dm9pZCAwP3RoaXMuX2dldFJHQkFCdWZmZXJJbnRlcm5hbFNpemVkRm9ybWF0KGUudHlwZSxlLmZvcm1hdCxlLl91c2VTUkdCQnVmZmVyKTp0aGlzLl9nZXRJbnRlcm5hbEZvcm1hdChyLGUuX3VzZVNSR0JCdWZmZXIpO3RoaXMuX3VucGFja0ZsaXBZKGUuaW52ZXJ0WSk7bGV0IHU9YS5URVhUVVJFXzJEO2UuaXNDdWJlJiYodT1hLlRFWFRVUkVfQ1VCRV9NQVBfUE9TSVRJVkVfWCtpKTtjb25zdCBkPU1hdGgucm91bmQoTWF0aC5sb2coZS53aWR0aCkqTWF0aC5MT0cyRSksZj1NYXRoLnJvdW5kKE1hdGgubG9nKGUuaGVpZ2h0KSpNYXRoLkxPRzJFKSxfPW4/ZS53aWR0aDpNYXRoLnBvdygyLE1hdGgubWF4KGQtcywwKSksRT1uP2UuaGVpZ2h0Ok1hdGgucG93KDIsTWF0aC5tYXgoZi1zLDApKTthLnRleEltYWdlMkQodSxzLGwsXyxFLDAsaCxvLHQpfXVwZGF0ZVRleHR1cmVEYXRhKGUsdCxpLHMscixuLGE9MCxvPTAsaD0hMSl7Y29uc3QgbD10aGlzLl9nbCx1PXRoaXMuX2dldFdlYkdMVGV4dHVyZVR5cGUoZS50eXBlKSxkPXRoaXMuX2dldEludGVybmFsRm9ybWF0KGUuZm9ybWF0KTt0aGlzLl91bnBhY2tGbGlwWShlLmludmVydFkpO2xldCBmPWwuVEVYVFVSRV8yRCxfPWwuVEVYVFVSRV8yRDtlLmlzQ3ViZSYmKF89bC5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1grYSxmPWwuVEVYVFVSRV9DVUJFX01BUCksdGhpcy5fYmluZFRleHR1cmVEaXJlY3RseShmLGUsITApLGwudGV4U3ViSW1hZ2UyRChfLG8saSxzLHIsbixkLHUsdCksaCYmdGhpcy5fZ2wuZ2VuZXJhdGVNaXBtYXAoXyksdGhpcy5fYmluZFRleHR1cmVEaXJlY3RseShmLG51bGwpfV91cGxvYWRBcnJheUJ1ZmZlclZpZXdUb1RleHR1cmUoZSx0LGk9MCxzPTApe2NvbnN0IHI9dGhpcy5fZ2wsbj1lLmlzQ3ViZT9yLlRFWFRVUkVfQ1VCRV9NQVA6ci5URVhUVVJFXzJEO3RoaXMuX2JpbmRUZXh0dXJlRGlyZWN0bHkobixlLCEwKSx0aGlzLl91cGxvYWREYXRhVG9UZXh0dXJlRGlyZWN0bHkoZSx0LGkscyksdGhpcy5fYmluZFRleHR1cmVEaXJlY3RseShuLG51bGwsITApfV9wcmVwYXJlV2ViR0xUZXh0dXJlQ29udGludWF0aW9uKGUsdCxpLHMscil7Y29uc3Qgbj10aGlzLl9nbDtpZighbilyZXR1cm47Y29uc3QgYT10aGlzLl9nZXRTYW1wbGluZ1BhcmFtZXRlcnMociwhaSk7bi50ZXhQYXJhbWV0ZXJpKG4uVEVYVFVSRV8yRCxuLlRFWFRVUkVfTUFHX0ZJTFRFUixhLm1hZyksbi50ZXhQYXJhbWV0ZXJpKG4uVEVYVFVSRV8yRCxuLlRFWFRVUkVfTUlOX0ZJTFRFUixhLm1pbiksIWkmJiFzJiZuLmdlbmVyYXRlTWlwbWFwKG4uVEVYVFVSRV8yRCksdGhpcy5fYmluZFRleHR1cmVEaXJlY3RseShuLlRFWFRVUkVfMkQsbnVsbCksdCYmdC5yZW1vdmVQZW5kaW5nRGF0YShlKSxlLm9uTG9hZGVkT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoZSksZS5vbkxvYWRlZE9ic2VydmFibGUuY2xlYXIoKX1fcHJlcGFyZVdlYkdMVGV4dHVyZShlLHQsaSxzLHIsbixhLG8saD0zKXtjb25zdCBsPXRoaXMuZ2V0Q2FwcygpLm1heFRleHR1cmVTaXplLHU9TWF0aC5taW4obCx0aGlzLm5lZWRQT1RUZXh0dXJlcz9vZS5HZXRFeHBvbmVudE9mVHdvKHMud2lkdGgsbCk6cy53aWR0aCksZD1NYXRoLm1pbihsLHRoaXMubmVlZFBPVFRleHR1cmVzP29lLkdldEV4cG9uZW50T2ZUd28ocy5oZWlnaHQsbCk6cy5oZWlnaHQpLGY9dGhpcy5fZ2w7aWYoZil7aWYoIWUuX2hhcmR3YXJlVGV4dHVyZSl7aSYmaS5yZW1vdmVQZW5kaW5nRGF0YShlKTtyZXR1cm59dGhpcy5fYmluZFRleHR1cmVEaXJlY3RseShmLlRFWFRVUkVfMkQsZSwhMCksdGhpcy5fdW5wYWNrRmxpcFkocj09PXZvaWQgMD8hMDohIXIpLGUuYmFzZVdpZHRoPXMud2lkdGgsZS5iYXNlSGVpZ2h0PXMuaGVpZ2h0LGUud2lkdGg9dSxlLmhlaWdodD1kLGUuaXNSZWFkeT0hMCwhbyh1LGQscyx0LGUsKCk9Pnt0aGlzLl9wcmVwYXJlV2ViR0xUZXh0dXJlQ29udGludWF0aW9uKGUsaSxuLGEsaCl9KSYmdGhpcy5fcHJlcGFyZVdlYkdMVGV4dHVyZUNvbnRpbnVhdGlvbihlLGksbixhLGgpfX1fc2V0dXBGcmFtZWJ1ZmZlckRlcHRoQXR0YWNobWVudHMoZSx0LGkscyxyPTEpe2NvbnN0IG49dGhpcy5fZ2w7aWYoZSYmdClyZXR1cm4gdGhpcy5fY3JlYXRlUmVuZGVyQnVmZmVyKGkscyxyLG4uREVQVEhfU1RFTkNJTCxuLkRFUFRIMjRfU1RFTkNJTDgsbi5ERVBUSF9TVEVOQ0lMX0FUVEFDSE1FTlQpO2lmKHQpe2xldCBhPW4uREVQVEhfQ09NUE9ORU5UMTY7cmV0dXJuIHRoaXMuX3dlYkdMVmVyc2lvbj4xJiYoYT1uLkRFUFRIX0NPTVBPTkVOVDMyRiksdGhpcy5fY3JlYXRlUmVuZGVyQnVmZmVyKGkscyxyLGEsYSxuLkRFUFRIX0FUVEFDSE1FTlQpfXJldHVybiBlP3RoaXMuX2NyZWF0ZVJlbmRlckJ1ZmZlcihpLHMscixuLlNURU5DSUxfSU5ERVg4LG4uU1RFTkNJTF9JTkRFWDgsbi5TVEVOQ0lMX0FUVEFDSE1FTlQpOm51bGx9X2NyZWF0ZVJlbmRlckJ1ZmZlcihlLHQsaSxzLHIsbixhPSEwKXtjb25zdCBoPXRoaXMuX2dsLmNyZWF0ZVJlbmRlcmJ1ZmZlcigpO3JldHVybiB0aGlzLl91cGRhdGVSZW5kZXJCdWZmZXIoaCxlLHQsaSxzLHIsbixhKX1fdXBkYXRlUmVuZGVyQnVmZmVyKGUsdCxpLHMscixuLGEsbz0hMCl7Y29uc3QgaD10aGlzLl9nbDtyZXR1cm4gaC5iaW5kUmVuZGVyYnVmZmVyKGguUkVOREVSQlVGRkVSLGUpLHM+MSYmaC5yZW5kZXJidWZmZXJTdG9yYWdlTXVsdGlzYW1wbGU/aC5yZW5kZXJidWZmZXJTdG9yYWdlTXVsdGlzYW1wbGUoaC5SRU5ERVJCVUZGRVIscyxuLHQsaSk6aC5yZW5kZXJidWZmZXJTdG9yYWdlKGguUkVOREVSQlVGRkVSLHIsdCxpKSxoLmZyYW1lYnVmZmVyUmVuZGVyYnVmZmVyKGguRlJBTUVCVUZGRVIsYSxoLlJFTkRFUkJVRkZFUixlKSxvJiZoLmJpbmRSZW5kZXJidWZmZXIoaC5SRU5ERVJCVUZGRVIsbnVsbCksZX1fcmVsZWFzZVRleHR1cmUoZSl7dmFyIHQ7dGhpcy5fZGVsZXRlVGV4dHVyZSgodD1lLl9oYXJkd2FyZVRleHR1cmUpPT09bnVsbHx8dD09PXZvaWQgMD92b2lkIDA6dC51bmRlcmx5aW5nUmVzb3VyY2UpLHRoaXMudW5iaW5kQWxsVGV4dHVyZXMoKTtjb25zdCBpPXRoaXMuX2ludGVybmFsVGV4dHVyZXNDYWNoZS5pbmRleE9mKGUpO2khPT0tMSYmdGhpcy5faW50ZXJuYWxUZXh0dXJlc0NhY2hlLnNwbGljZShpLDEpLGUuX2xvZFRleHR1cmVIaWdoJiZlLl9sb2RUZXh0dXJlSGlnaC5kaXNwb3NlKCksZS5fbG9kVGV4dHVyZU1pZCYmZS5fbG9kVGV4dHVyZU1pZC5kaXNwb3NlKCksZS5fbG9kVGV4dHVyZUxvdyYmZS5fbG9kVGV4dHVyZUxvdy5kaXNwb3NlKCksZS5faXJyYWRpYW5jZVRleHR1cmUmJmUuX2lycmFkaWFuY2VUZXh0dXJlLmRpc3Bvc2UoKX1fcmVsZWFzZVJlbmRlclRhcmdldFdyYXBwZXIoZSl7Y29uc3QgdD10aGlzLl9yZW5kZXJUYXJnZXRXcmFwcGVyQ2FjaGUuaW5kZXhPZihlKTt0IT09LTEmJnRoaXMuX3JlbmRlclRhcmdldFdyYXBwZXJDYWNoZS5zcGxpY2UodCwxKX1fZGVsZXRlVGV4dHVyZShlKXtlJiZ0aGlzLl9nbC5kZWxldGVUZXh0dXJlKGUpfV9zZXRQcm9ncmFtKGUpe3RoaXMuX2N1cnJlbnRQcm9ncmFtIT09ZSYmKHRoaXMuX2dsLnVzZVByb2dyYW0oZSksdGhpcy5fY3VycmVudFByb2dyYW09ZSl9YmluZFNhbXBsZXJzKGUpe2NvbnN0IHQ9ZS5nZXRQaXBlbGluZUNvbnRleHQoKTt0aGlzLl9zZXRQcm9ncmFtKHQucHJvZ3JhbSk7Y29uc3QgaT1lLmdldFNhbXBsZXJzKCk7Zm9yKGxldCBzPTA7czxpLmxlbmd0aDtzKyspe2NvbnN0IHI9ZS5nZXRVbmlmb3JtKGlbc10pO3ImJih0aGlzLl9ib3VuZFVuaWZvcm1zW3NdPXIpfXRoaXMuX2N1cnJlbnRFZmZlY3Q9bnVsbH1fYWN0aXZhdGVDdXJyZW50VGV4dHVyZSgpe3RoaXMuX2N1cnJlbnRUZXh0dXJlQ2hhbm5lbCE9PXRoaXMuX2FjdGl2ZUNoYW5uZWwmJih0aGlzLl9nbC5hY3RpdmVUZXh0dXJlKHRoaXMuX2dsLlRFWFRVUkUwK3RoaXMuX2FjdGl2ZUNoYW5uZWwpLHRoaXMuX2N1cnJlbnRUZXh0dXJlQ2hhbm5lbD10aGlzLl9hY3RpdmVDaGFubmVsKX1fYmluZFRleHR1cmVEaXJlY3RseShlLHQsaT0hMSxzPSExKXt2YXIgcixuO2xldCBhPSExO2NvbnN0IG89dCYmdC5fYXNzb2NpYXRlZENoYW5uZWw+LTE7aWYoaSYmbyYmKHRoaXMuX2FjdGl2ZUNoYW5uZWw9dC5fYXNzb2NpYXRlZENoYW5uZWwpLHRoaXMuX2JvdW5kVGV4dHVyZXNDYWNoZVt0aGlzLl9hY3RpdmVDaGFubmVsXSE9PXR8fHMpe2lmKHRoaXMuX2FjdGl2YXRlQ3VycmVudFRleHR1cmUoKSx0JiZ0LmlzTXVsdGl2aWV3KXRocm93IGNvbnNvbGUuZXJyb3IoZSx0KSwiX2JpbmRUZXh0dXJlRGlyZWN0bHkgY2FsbGVkIHdpdGggYSBtdWx0aXZpZXcgdGV4dHVyZSEiO3RoaXMuX2dsLmJpbmRUZXh0dXJlKGUsKG49KHI9dD09bnVsbD92b2lkIDA6dC5faGFyZHdhcmVUZXh0dXJlKT09PW51bGx8fHI9PT12b2lkIDA/dm9pZCAwOnIudW5kZXJseWluZ1Jlc291cmNlKSE9PW51bGwmJm4hPT12b2lkIDA/bjpudWxsKSx0aGlzLl9ib3VuZFRleHR1cmVzQ2FjaGVbdGhpcy5fYWN0aXZlQ2hhbm5lbF09dCx0JiYodC5fYXNzb2NpYXRlZENoYW5uZWw9dGhpcy5fYWN0aXZlQ2hhbm5lbCl9ZWxzZSBpJiYoYT0hMCx0aGlzLl9hY3RpdmF0ZUN1cnJlbnRUZXh0dXJlKCkpO3JldHVybiBvJiYhaSYmdGhpcy5fYmluZFNhbXBsZXJVbmlmb3JtVG9DaGFubmVsKHQuX2Fzc29jaWF0ZWRDaGFubmVsLHRoaXMuX2FjdGl2ZUNoYW5uZWwpLGF9X2JpbmRUZXh0dXJlKGUsdCxpKXtpZihlPT09dm9pZCAwKXJldHVybjt0JiYodC5fYXNzb2NpYXRlZENoYW5uZWw9ZSksdGhpcy5fYWN0aXZlQ2hhbm5lbD1lO2NvbnN0IHM9dD90aGlzLl9nZXRUZXh0dXJlVGFyZ2V0KHQpOnRoaXMuX2dsLlRFWFRVUkVfMkQ7dGhpcy5fYmluZFRleHR1cmVEaXJlY3RseShzLHQpfXVuYmluZEFsbFRleHR1cmVzKCl7Zm9yKGxldCBlPTA7ZTx0aGlzLl9tYXhTaW11bHRhbmVvdXNUZXh0dXJlcztlKyspdGhpcy5fYWN0aXZlQ2hhbm5lbD1lLHRoaXMuX2JpbmRUZXh0dXJlRGlyZWN0bHkodGhpcy5fZ2wuVEVYVFVSRV8yRCxudWxsKSx0aGlzLl9iaW5kVGV4dHVyZURpcmVjdGx5KHRoaXMuX2dsLlRFWFRVUkVfQ1VCRV9NQVAsbnVsbCksdGhpcy53ZWJHTFZlcnNpb24+MSYmKHRoaXMuX2JpbmRUZXh0dXJlRGlyZWN0bHkodGhpcy5fZ2wuVEVYVFVSRV8zRCxudWxsKSx0aGlzLl9iaW5kVGV4dHVyZURpcmVjdGx5KHRoaXMuX2dsLlRFWFRVUkVfMkRfQVJSQVksbnVsbCkpfXNldFRleHR1cmUoZSx0LGkscyl7ZSE9PXZvaWQgMCYmKHQmJih0aGlzLl9ib3VuZFVuaWZvcm1zW2VdPXQpLHRoaXMuX3NldFRleHR1cmUoZSxpKSl9X2JpbmRTYW1wbGVyVW5pZm9ybVRvQ2hhbm5lbChlLHQpe2NvbnN0IGk9dGhpcy5fYm91bmRVbmlmb3Jtc1tlXTshaXx8aS5fY3VycmVudFN0YXRlPT09dHx8KHRoaXMuX2dsLnVuaWZvcm0xaShpLHQpLGkuX2N1cnJlbnRTdGF0ZT10KX1fZ2V0VGV4dHVyZVdyYXBNb2RlKGUpe3N3aXRjaChlKXtjYXNlIDE6cmV0dXJuIHRoaXMuX2dsLlJFUEVBVDtjYXNlIDA6cmV0dXJuIHRoaXMuX2dsLkNMQU1QX1RPX0VER0U7Y2FzZSAyOnJldHVybiB0aGlzLl9nbC5NSVJST1JFRF9SRVBFQVR9cmV0dXJuIHRoaXMuX2dsLlJFUEVBVH1fc2V0VGV4dHVyZShlLHQsaT0hMSxzPSExLHI9IiIpe2lmKCF0KXJldHVybiB0aGlzLl9ib3VuZFRleHR1cmVzQ2FjaGVbZV0hPW51bGwmJih0aGlzLl9hY3RpdmVDaGFubmVsPWUsdGhpcy5fYmluZFRleHR1cmVEaXJlY3RseSh0aGlzLl9nbC5URVhUVVJFXzJELG51bGwpLHRoaXMuX2JpbmRUZXh0dXJlRGlyZWN0bHkodGhpcy5fZ2wuVEVYVFVSRV9DVUJFX01BUCxudWxsKSx0aGlzLndlYkdMVmVyc2lvbj4xJiYodGhpcy5fYmluZFRleHR1cmVEaXJlY3RseSh0aGlzLl9nbC5URVhUVVJFXzNELG51bGwpLHRoaXMuX2JpbmRUZXh0dXJlRGlyZWN0bHkodGhpcy5fZ2wuVEVYVFVSRV8yRF9BUlJBWSxudWxsKSkpLCExO2lmKHQudmlkZW8pdGhpcy5fYWN0aXZlQ2hhbm5lbD1lLHQudXBkYXRlKCk7ZWxzZSBpZih0LmRlbGF5TG9hZFN0YXRlPT09NClyZXR1cm4gdC5kZWxheUxvYWQoKSwhMTtsZXQgbjtzP249dC5kZXB0aFN0ZW5jaWxUZXh0dXJlOnQuaXNSZWFkeSgpP249dC5nZXRJbnRlcm5hbFRleHR1cmUoKTp0LmlzQ3ViZT9uPXRoaXMuZW1wdHlDdWJlVGV4dHVyZTp0LmlzM0Q/bj10aGlzLmVtcHR5VGV4dHVyZTNEOnQuaXMyREFycmF5P249dGhpcy5lbXB0eVRleHR1cmUyREFycmF5Om49dGhpcy5lbXB0eVRleHR1cmUsIWkmJm4mJihuLl9hc3NvY2lhdGVkQ2hhbm5lbD1lKTtsZXQgYT0hMDt0aGlzLl9ib3VuZFRleHR1cmVzQ2FjaGVbZV09PT1uJiYoaXx8dGhpcy5fYmluZFNhbXBsZXJVbmlmb3JtVG9DaGFubmVsKG4uX2Fzc29jaWF0ZWRDaGFubmVsLGUpLGE9ITEpLHRoaXMuX2FjdGl2ZUNoYW5uZWw9ZTtjb25zdCBvPXRoaXMuX2dldFRleHR1cmVUYXJnZXQobik7aWYoYSYmdGhpcy5fYmluZFRleHR1cmVEaXJlY3RseShvLG4saSksbiYmIW4uaXNNdWx0aXZpZXcpe2lmKG4uaXNDdWJlJiZuLl9jYWNoZWRDb29yZGluYXRlc01vZGUhPT10LmNvb3JkaW5hdGVzTW9kZSl7bi5fY2FjaGVkQ29vcmRpbmF0ZXNNb2RlPXQuY29vcmRpbmF0ZXNNb2RlO2NvbnN0IGg9dC5jb29yZGluYXRlc01vZGUhPT0zJiZ0LmNvb3JkaW5hdGVzTW9kZSE9PTU/MTowO3Qud3JhcFU9aCx0LndyYXBWPWh9bi5fY2FjaGVkV3JhcFUhPT10LndyYXBVJiYobi5fY2FjaGVkV3JhcFU9dC53cmFwVSx0aGlzLl9zZXRUZXh0dXJlUGFyYW1ldGVySW50ZWdlcihvLHRoaXMuX2dsLlRFWFRVUkVfV1JBUF9TLHRoaXMuX2dldFRleHR1cmVXcmFwTW9kZSh0LndyYXBVKSxuKSksbi5fY2FjaGVkV3JhcFYhPT10LndyYXBWJiYobi5fY2FjaGVkV3JhcFY9dC53cmFwVix0aGlzLl9zZXRUZXh0dXJlUGFyYW1ldGVySW50ZWdlcihvLHRoaXMuX2dsLlRFWFRVUkVfV1JBUF9ULHRoaXMuX2dldFRleHR1cmVXcmFwTW9kZSh0LndyYXBWKSxuKSksbi5pczNEJiZuLl9jYWNoZWRXcmFwUiE9PXQud3JhcFImJihuLl9jYWNoZWRXcmFwUj10LndyYXBSLHRoaXMuX3NldFRleHR1cmVQYXJhbWV0ZXJJbnRlZ2VyKG8sdGhpcy5fZ2wuVEVYVFVSRV9XUkFQX1IsdGhpcy5fZ2V0VGV4dHVyZVdyYXBNb2RlKHQud3JhcFIpLG4pKSx0aGlzLl9zZXRBbmlzb3Ryb3BpY0xldmVsKG8sbix0LmFuaXNvdHJvcGljRmlsdGVyaW5nTGV2ZWwpfXJldHVybiEwfXNldFRleHR1cmVBcnJheShlLHQsaSxzKXtpZighKGU9PT12b2lkIDB8fCF0KSl7KCF0aGlzLl90ZXh0dXJlVW5pdHN8fHRoaXMuX3RleHR1cmVVbml0cy5sZW5ndGghPT1pLmxlbmd0aCkmJih0aGlzLl90ZXh0dXJlVW5pdHM9bmV3IEludDMyQXJyYXkoaS5sZW5ndGgpKTtmb3IobGV0IHI9MDtyPGkubGVuZ3RoO3IrKyl7Y29uc3Qgbj1pW3JdLmdldEludGVybmFsVGV4dHVyZSgpO24/KHRoaXMuX3RleHR1cmVVbml0c1tyXT1lK3Isbi5fYXNzb2NpYXRlZENoYW5uZWw9ZStyKTp0aGlzLl90ZXh0dXJlVW5pdHNbcl09LTF9dGhpcy5fZ2wudW5pZm9ybTFpdih0LHRoaXMuX3RleHR1cmVVbml0cyk7Zm9yKGxldCByPTA7cjxpLmxlbmd0aDtyKyspdGhpcy5fc2V0VGV4dHVyZSh0aGlzLl90ZXh0dXJlVW5pdHNbcl0saVtyXSwhMCl9fV9zZXRBbmlzb3Ryb3BpY0xldmVsKGUsdCxpKXtjb25zdCBzPXRoaXMuX2NhcHMudGV4dHVyZUFuaXNvdHJvcGljRmlsdGVyRXh0ZW5zaW9uO3Quc2FtcGxpbmdNb2RlIT09MTEmJnQuc2FtcGxpbmdNb2RlIT09MyYmdC5zYW1wbGluZ01vZGUhPT0yJiYoaT0xKSxzJiZ0Ll9jYWNoZWRBbmlzb3Ryb3BpY0ZpbHRlcmluZ0xldmVsIT09aSYmKHRoaXMuX3NldFRleHR1cmVQYXJhbWV0ZXJGbG9hdChlLHMuVEVYVFVSRV9NQVhfQU5JU09UUk9QWV9FWFQsTWF0aC5taW4oaSx0aGlzLl9jYXBzLm1heEFuaXNvdHJvcHkpLHQpLHQuX2NhY2hlZEFuaXNvdHJvcGljRmlsdGVyaW5nTGV2ZWw9aSl9X3NldFRleHR1cmVQYXJhbWV0ZXJGbG9hdChlLHQsaSxzKXt0aGlzLl9iaW5kVGV4dHVyZURpcmVjdGx5KGUscywhMCwhMCksdGhpcy5fZ2wudGV4UGFyYW1ldGVyZihlLHQsaSl9X3NldFRleHR1cmVQYXJhbWV0ZXJJbnRlZ2VyKGUsdCxpLHMpe3MmJnRoaXMuX2JpbmRUZXh0dXJlRGlyZWN0bHkoZSxzLCEwLCEwKSx0aGlzLl9nbC50ZXhQYXJhbWV0ZXJpKGUsdCxpKX11bmJpbmRBbGxBdHRyaWJ1dGVzKCl7aWYodGhpcy5fbXVzdFdpcGVWZXJ0ZXhBdHRyaWJ1dGVzKXt0aGlzLl9tdXN0V2lwZVZlcnRleEF0dHJpYnV0ZXM9ITE7Zm9yKGxldCBlPTA7ZTx0aGlzLl9jYXBzLm1heFZlcnRleEF0dHJpYnM7ZSsrKXRoaXMuZGlzYWJsZUF0dHJpYnV0ZUJ5SW5kZXgoZSk7cmV0dXJufWZvcihsZXQgZT0wLHQ9dGhpcy5fdmVydGV4QXR0cmliQXJyYXlzRW5hYmxlZC5sZW5ndGg7ZTx0O2UrKyllPj10aGlzLl9jYXBzLm1heFZlcnRleEF0dHJpYnN8fCF0aGlzLl92ZXJ0ZXhBdHRyaWJBcnJheXNFbmFibGVkW2VdfHx0aGlzLmRpc2FibGVBdHRyaWJ1dGVCeUluZGV4KGUpfXJlbGVhc2VFZmZlY3RzKCl7Zm9yKGNvbnN0IGUgaW4gdGhpcy5fY29tcGlsZWRFZmZlY3RzKXtjb25zdCB0PXRoaXMuX2NvbXBpbGVkRWZmZWN0c1tlXS5nZXRQaXBlbGluZUNvbnRleHQoKTt0aGlzLl9kZWxldGVQaXBlbGluZUNvbnRleHQodCl9dGhpcy5fY29tcGlsZWRFZmZlY3RzPXt9fWRpc3Bvc2UoKXt2YXIgZTt0aGlzLnN0b3BSZW5kZXJMb29wKCksdGhpcy5vbkJlZm9yZVRleHR1cmVJbml0T2JzZXJ2YWJsZSYmdGhpcy5vbkJlZm9yZVRleHR1cmVJbml0T2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMuX2VtcHR5VGV4dHVyZSYmKHRoaXMuX3JlbGVhc2VUZXh0dXJlKHRoaXMuX2VtcHR5VGV4dHVyZSksdGhpcy5fZW1wdHlUZXh0dXJlPW51bGwpLHRoaXMuX2VtcHR5Q3ViZVRleHR1cmUmJih0aGlzLl9yZWxlYXNlVGV4dHVyZSh0aGlzLl9lbXB0eUN1YmVUZXh0dXJlKSx0aGlzLl9lbXB0eUN1YmVUZXh0dXJlPW51bGwpLHRoaXMuX2R1bW15RnJhbWVidWZmZXImJnRoaXMuX2dsLmRlbGV0ZUZyYW1lYnVmZmVyKHRoaXMuX2R1bW15RnJhbWVidWZmZXIpLHRoaXMucmVsZWFzZUVmZmVjdHMoKSwoZT10aGlzLnJlbGVhc2VDb21wdXRlRWZmZWN0cyk9PT1udWxsfHxlPT09dm9pZCAwfHxlLmNhbGwodGhpcyksdGhpcy51bmJpbmRBbGxBdHRyaWJ1dGVzKCksdGhpcy5fYm91bmRVbmlmb3Jtcz17fSxqZSgpJiZ0aGlzLl9yZW5kZXJpbmdDYW52YXMmJih0aGlzLl9kb05vdEhhbmRsZUNvbnRleHRMb3N0fHwodGhpcy5fcmVuZGVyaW5nQ2FudmFzLnJlbW92ZUV2ZW50TGlzdGVuZXIoIndlYmdsY29udGV4dGxvc3QiLHRoaXMuX29uQ29udGV4dExvc3QpLHRoaXMuX3JlbmRlcmluZ0NhbnZhcy5yZW1vdmVFdmVudExpc3RlbmVyKCJ3ZWJnbGNvbnRleHRyZXN0b3JlZCIsdGhpcy5fb25Db250ZXh0UmVzdG9yZWQpKSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigicmVzaXplIix0aGlzLl9jaGVja0Zvck1vYmlsZSkpLHRoaXMuX3dvcmtpbmdDYW52YXM9bnVsbCx0aGlzLl93b3JraW5nQ29udGV4dD1udWxsLHRoaXMuX2N1cnJlbnRCdWZmZXJQb2ludGVycy5sZW5ndGg9MCx0aGlzLl9yZW5kZXJpbmdDYW52YXM9bnVsbCx0aGlzLl9jdXJyZW50UHJvZ3JhbT1udWxsLHRoaXMuX2JvdW5kUmVuZGVyRnVuY3Rpb249bnVsbCxQZS5SZXNldENhY2hlKCk7Zm9yKGNvbnN0IHQgb2YgdGhpcy5fYWN0aXZlUmVxdWVzdHMpdC5hYm9ydCgpO3RoaXMub25EaXNwb3NlT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyksdGhpcy5vbkRpc3Bvc2VPYnNlcnZhYmxlLmNsZWFyKCl9YXR0YWNoQ29udGV4dExvc3RFdmVudChlKXt0aGlzLl9yZW5kZXJpbmdDYW52YXMmJnRoaXMuX3JlbmRlcmluZ0NhbnZhcy5hZGRFdmVudExpc3RlbmVyKCJ3ZWJnbGNvbnRleHRsb3N0IixlLCExKX1hdHRhY2hDb250ZXh0UmVzdG9yZWRFdmVudChlKXt0aGlzLl9yZW5kZXJpbmdDYW52YXMmJnRoaXMuX3JlbmRlcmluZ0NhbnZhcy5hZGRFdmVudExpc3RlbmVyKCJ3ZWJnbGNvbnRleHRyZXN0b3JlZCIsZSwhMSl9Z2V0RXJyb3IoKXtyZXR1cm4gdGhpcy5fZ2wuZ2V0RXJyb3IoKX1fY2FuUmVuZGVyVG9GbG9hdEZyYW1lYnVmZmVyKCl7cmV0dXJuIHRoaXMuX3dlYkdMVmVyc2lvbj4xP3RoaXMuX2NhcHMuY29sb3JCdWZmZXJGbG9hdDp0aGlzLl9jYW5SZW5kZXJUb0ZyYW1lYnVmZmVyKDEpfV9jYW5SZW5kZXJUb0hhbGZGbG9hdEZyYW1lYnVmZmVyKCl7cmV0dXJuIHRoaXMuX3dlYkdMVmVyc2lvbj4xP3RoaXMuX2NhcHMuY29sb3JCdWZmZXJGbG9hdDp0aGlzLl9jYW5SZW5kZXJUb0ZyYW1lYnVmZmVyKDIpfV9jYW5SZW5kZXJUb0ZyYW1lYnVmZmVyKGUpe2NvbnN0IHQ9dGhpcy5fZ2w7Zm9yKDt0LmdldEVycm9yKCkhPT10Lk5PX0VSUk9SOyk7bGV0IGk9ITA7Y29uc3Qgcz10LmNyZWF0ZVRleHR1cmUoKTt0LmJpbmRUZXh0dXJlKHQuVEVYVFVSRV8yRCxzKSx0LnRleEltYWdlMkQodC5URVhUVVJFXzJELDAsdGhpcy5fZ2V0UkdCQUJ1ZmZlckludGVybmFsU2l6ZWRGb3JtYXQoZSksMSwxLDAsdC5SR0JBLHRoaXMuX2dldFdlYkdMVGV4dHVyZVR5cGUoZSksbnVsbCksdC50ZXhQYXJhbWV0ZXJpKHQuVEVYVFVSRV8yRCx0LlRFWFRVUkVfTUlOX0ZJTFRFUix0Lk5FQVJFU1QpLHQudGV4UGFyYW1ldGVyaSh0LlRFWFRVUkVfMkQsdC5URVhUVVJFX01BR19GSUxURVIsdC5ORUFSRVNUKTtjb25zdCByPXQuY3JlYXRlRnJhbWVidWZmZXIoKTt0LmJpbmRGcmFtZWJ1ZmZlcih0LkZSQU1FQlVGRkVSLHIpLHQuZnJhbWVidWZmZXJUZXh0dXJlMkQodC5GUkFNRUJVRkZFUix0LkNPTE9SX0FUVEFDSE1FTlQwLHQuVEVYVFVSRV8yRCxzLDApO2NvbnN0IG49dC5jaGVja0ZyYW1lYnVmZmVyU3RhdHVzKHQuRlJBTUVCVUZGRVIpO2lmKGk9aSYmbj09PXQuRlJBTUVCVUZGRVJfQ09NUExFVEUsaT1pJiZ0LmdldEVycm9yKCk9PT10Lk5PX0VSUk9SLGkmJih0LmNsZWFyKHQuQ09MT1JfQlVGRkVSX0JJVCksaT1pJiZ0LmdldEVycm9yKCk9PT10Lk5PX0VSUk9SKSxpKXt0LmJpbmRGcmFtZWJ1ZmZlcih0LkZSQU1FQlVGRkVSLG51bGwpO2NvbnN0IGE9dC5SR0JBLG89dC5VTlNJR05FRF9CWVRFLGg9bmV3IFVpbnQ4QXJyYXkoNCk7dC5yZWFkUGl4ZWxzKDAsMCwxLDEsYSxvLGgpLGk9aSYmdC5nZXRFcnJvcigpPT09dC5OT19FUlJPUn1mb3IodC5kZWxldGVUZXh0dXJlKHMpLHQuZGVsZXRlRnJhbWVidWZmZXIociksdC5iaW5kRnJhbWVidWZmZXIodC5GUkFNRUJVRkZFUixudWxsKTshaSYmdC5nZXRFcnJvcigpIT09dC5OT19FUlJPUjspO3JldHVybiBpfV9nZXRXZWJHTFRleHR1cmVUeXBlKGUpe2lmKHRoaXMuX3dlYkdMVmVyc2lvbj09PTEpe3N3aXRjaChlKXtjYXNlIDE6cmV0dXJuIHRoaXMuX2dsLkZMT0FUO2Nhc2UgMjpyZXR1cm4gdGhpcy5fZ2wuSEFMRl9GTE9BVF9PRVM7Y2FzZSAwOnJldHVybiB0aGlzLl9nbC5VTlNJR05FRF9CWVRFO2Nhc2UgODpyZXR1cm4gdGhpcy5fZ2wuVU5TSUdORURfU0hPUlRfNF80XzRfNDtjYXNlIDk6cmV0dXJuIHRoaXMuX2dsLlVOU0lHTkVEX1NIT1JUXzVfNV81XzE7Y2FzZSAxMDpyZXR1cm4gdGhpcy5fZ2wuVU5TSUdORURfU0hPUlRfNV82XzV9cmV0dXJuIHRoaXMuX2dsLlVOU0lHTkVEX0JZVEV9c3dpdGNoKGUpe2Nhc2UgMzpyZXR1cm4gdGhpcy5fZ2wuQllURTtjYXNlIDA6cmV0dXJuIHRoaXMuX2dsLlVOU0lHTkVEX0JZVEU7Y2FzZSA0OnJldHVybiB0aGlzLl9nbC5TSE9SVDtjYXNlIDU6cmV0dXJuIHRoaXMuX2dsLlVOU0lHTkVEX1NIT1JUO2Nhc2UgNjpyZXR1cm4gdGhpcy5fZ2wuSU5UO2Nhc2UgNzpyZXR1cm4gdGhpcy5fZ2wuVU5TSUdORURfSU5UO2Nhc2UgMTpyZXR1cm4gdGhpcy5fZ2wuRkxPQVQ7Y2FzZSAyOnJldHVybiB0aGlzLl9nbC5IQUxGX0ZMT0FUO2Nhc2UgODpyZXR1cm4gdGhpcy5fZ2wuVU5TSUdORURfU0hPUlRfNF80XzRfNDtjYXNlIDk6cmV0dXJuIHRoaXMuX2dsLlVOU0lHTkVEX1NIT1JUXzVfNV81XzE7Y2FzZSAxMDpyZXR1cm4gdGhpcy5fZ2wuVU5TSUdORURfU0hPUlRfNV82XzU7Y2FzZSAxMTpyZXR1cm4gdGhpcy5fZ2wuVU5TSUdORURfSU5UXzJfMTBfMTBfMTBfUkVWO2Nhc2UgMTI6cmV0dXJuIHRoaXMuX2dsLlVOU0lHTkVEX0lOVF8yNF84O2Nhc2UgMTM6cmV0dXJuIHRoaXMuX2dsLlVOU0lHTkVEX0lOVF8xMEZfMTFGXzExRl9SRVY7Y2FzZSAxNDpyZXR1cm4gdGhpcy5fZ2wuVU5TSUdORURfSU5UXzVfOV85XzlfUkVWO2Nhc2UgMTU6cmV0dXJuIHRoaXMuX2dsLkZMT0FUXzMyX1VOU0lHTkVEX0lOVF8yNF84X1JFVn1yZXR1cm4gdGhpcy5fZ2wuVU5TSUdORURfQllURX1fZ2V0SW50ZXJuYWxGb3JtYXQoZSx0PSExKXtsZXQgaT10P3RoaXMuX2dsLlNSR0I4X0FMUEhBODp0aGlzLl9nbC5SR0JBO3N3aXRjaChlKXtjYXNlIDA6aT10aGlzLl9nbC5BTFBIQTticmVhaztjYXNlIDE6aT10aGlzLl9nbC5MVU1JTkFOQ0U7YnJlYWs7Y2FzZSAyOmk9dGhpcy5fZ2wuTFVNSU5BTkNFX0FMUEhBO2JyZWFrO2Nhc2UgNjppPXRoaXMuX2dsLlJFRDticmVhaztjYXNlIDc6aT10aGlzLl9nbC5SRzticmVhaztjYXNlIDQ6aT10P3RoaXMuX2dsLlNSR0I6dGhpcy5fZ2wuUkdCO2JyZWFrO2Nhc2UgNTppPXQ/dGhpcy5fZ2wuU1JHQjhfQUxQSEE4OnRoaXMuX2dsLlJHQkE7YnJlYWt9aWYodGhpcy5fd2ViR0xWZXJzaW9uPjEpc3dpdGNoKGUpe2Nhc2UgODppPXRoaXMuX2dsLlJFRF9JTlRFR0VSO2JyZWFrO2Nhc2UgOTppPXRoaXMuX2dsLlJHX0lOVEVHRVI7YnJlYWs7Y2FzZSAxMDppPXRoaXMuX2dsLlJHQl9JTlRFR0VSO2JyZWFrO2Nhc2UgMTE6aT10aGlzLl9nbC5SR0JBX0lOVEVHRVI7YnJlYWt9cmV0dXJuIGl9X2dldFJHQkFCdWZmZXJJbnRlcm5hbFNpemVkRm9ybWF0KGUsdCxpPSExKXtpZih0aGlzLl93ZWJHTFZlcnNpb249PT0xKXtpZih0IT09dm9pZCAwKXN3aXRjaCh0KXtjYXNlIDA6cmV0dXJuIHRoaXMuX2dsLkFMUEhBO2Nhc2UgMTpyZXR1cm4gdGhpcy5fZ2wuTFVNSU5BTkNFO2Nhc2UgMjpyZXR1cm4gdGhpcy5fZ2wuTFVNSU5BTkNFX0FMUEhBO2Nhc2UgNDpyZXR1cm4gaT90aGlzLl9nbC5TUkdCOnRoaXMuX2dsLlJHQn1yZXR1cm4gdGhpcy5fZ2wuUkdCQX1zd2l0Y2goZSl7Y2FzZSAzOnN3aXRjaCh0KXtjYXNlIDY6cmV0dXJuIHRoaXMuX2dsLlI4X1NOT1JNO2Nhc2UgNzpyZXR1cm4gdGhpcy5fZ2wuUkc4X1NOT1JNO2Nhc2UgNDpyZXR1cm4gdGhpcy5fZ2wuUkdCOF9TTk9STTtjYXNlIDg6cmV0dXJuIHRoaXMuX2dsLlI4STtjYXNlIDk6cmV0dXJuIHRoaXMuX2dsLlJHOEk7Y2FzZSAxMDpyZXR1cm4gdGhpcy5fZ2wuUkdCOEk7Y2FzZSAxMTpyZXR1cm4gdGhpcy5fZ2wuUkdCQThJO2RlZmF1bHQ6cmV0dXJuIHRoaXMuX2dsLlJHQkE4X1NOT1JNfWNhc2UgMDpzd2l0Y2godCl7Y2FzZSA2OnJldHVybiB0aGlzLl9nbC5SODtjYXNlIDc6cmV0dXJuIHRoaXMuX2dsLlJHODtjYXNlIDQ6cmV0dXJuIGk/dGhpcy5fZ2wuU1JHQjg6dGhpcy5fZ2wuUkdCODtjYXNlIDU6cmV0dXJuIGk/dGhpcy5fZ2wuU1JHQjhfQUxQSEE4OnRoaXMuX2dsLlJHQkE4O2Nhc2UgODpyZXR1cm4gdGhpcy5fZ2wuUjhVSTtjYXNlIDk6cmV0dXJuIHRoaXMuX2dsLlJHOFVJO2Nhc2UgMTA6cmV0dXJuIHRoaXMuX2dsLlJHQjhVSTtjYXNlIDExOnJldHVybiB0aGlzLl9nbC5SR0JBOFVJO2Nhc2UgMDpyZXR1cm4gdGhpcy5fZ2wuQUxQSEE7Y2FzZSAxOnJldHVybiB0aGlzLl9nbC5MVU1JTkFOQ0U7Y2FzZSAyOnJldHVybiB0aGlzLl9nbC5MVU1JTkFOQ0VfQUxQSEE7ZGVmYXVsdDpyZXR1cm4gdGhpcy5fZ2wuUkdCQTh9Y2FzZSA0OnN3aXRjaCh0KXtjYXNlIDg6cmV0dXJuIHRoaXMuX2dsLlIxNkk7Y2FzZSA5OnJldHVybiB0aGlzLl9nbC5SRzE2STtjYXNlIDEwOnJldHVybiB0aGlzLl9nbC5SR0IxNkk7Y2FzZSAxMTpyZXR1cm4gdGhpcy5fZ2wuUkdCQTE2STtkZWZhdWx0OnJldHVybiB0aGlzLl9nbC5SR0JBMTZJfWNhc2UgNTpzd2l0Y2godCl7Y2FzZSA4OnJldHVybiB0aGlzLl9nbC5SMTZVSTtjYXNlIDk6cmV0dXJuIHRoaXMuX2dsLlJHMTZVSTtjYXNlIDEwOnJldHVybiB0aGlzLl9nbC5SR0IxNlVJO2Nhc2UgMTE6cmV0dXJuIHRoaXMuX2dsLlJHQkExNlVJO2RlZmF1bHQ6cmV0dXJuIHRoaXMuX2dsLlJHQkExNlVJfWNhc2UgNjpzd2l0Y2godCl7Y2FzZSA4OnJldHVybiB0aGlzLl9nbC5SMzJJO2Nhc2UgOTpyZXR1cm4gdGhpcy5fZ2wuUkczMkk7Y2FzZSAxMDpyZXR1cm4gdGhpcy5fZ2wuUkdCMzJJO2Nhc2UgMTE6cmV0dXJuIHRoaXMuX2dsLlJHQkEzMkk7ZGVmYXVsdDpyZXR1cm4gdGhpcy5fZ2wuUkdCQTMySX1jYXNlIDc6c3dpdGNoKHQpe2Nhc2UgODpyZXR1cm4gdGhpcy5fZ2wuUjMyVUk7Y2FzZSA5OnJldHVybiB0aGlzLl9nbC5SRzMyVUk7Y2FzZSAxMDpyZXR1cm4gdGhpcy5fZ2wuUkdCMzJVSTtjYXNlIDExOnJldHVybiB0aGlzLl9nbC5SR0JBMzJVSTtkZWZhdWx0OnJldHVybiB0aGlzLl9nbC5SR0JBMzJVSX1jYXNlIDE6c3dpdGNoKHQpe2Nhc2UgNjpyZXR1cm4gdGhpcy5fZ2wuUjMyRjtjYXNlIDc6cmV0dXJuIHRoaXMuX2dsLlJHMzJGO2Nhc2UgNDpyZXR1cm4gdGhpcy5fZ2wuUkdCMzJGO2Nhc2UgNTpyZXR1cm4gdGhpcy5fZ2wuUkdCQTMyRjtkZWZhdWx0OnJldHVybiB0aGlzLl9nbC5SR0JBMzJGfWNhc2UgMjpzd2l0Y2godCl7Y2FzZSA2OnJldHVybiB0aGlzLl9nbC5SMTZGO2Nhc2UgNzpyZXR1cm4gdGhpcy5fZ2wuUkcxNkY7Y2FzZSA0OnJldHVybiB0aGlzLl9nbC5SR0IxNkY7Y2FzZSA1OnJldHVybiB0aGlzLl9nbC5SR0JBMTZGO2RlZmF1bHQ6cmV0dXJuIHRoaXMuX2dsLlJHQkExNkZ9Y2FzZSAxMDpyZXR1cm4gdGhpcy5fZ2wuUkdCNTY1O2Nhc2UgMTM6cmV0dXJuIHRoaXMuX2dsLlIxMUZfRzExRl9CMTBGO2Nhc2UgMTQ6cmV0dXJuIHRoaXMuX2dsLlJHQjlfRTU7Y2FzZSA4OnJldHVybiB0aGlzLl9nbC5SR0JBNDtjYXNlIDk6cmV0dXJuIHRoaXMuX2dsLlJHQjVfQTE7Y2FzZSAxMTpzd2l0Y2godCl7Y2FzZSA1OnJldHVybiB0aGlzLl9nbC5SR0IxMF9BMjtjYXNlIDExOnJldHVybiB0aGlzLl9nbC5SR0IxMF9BMlVJO2RlZmF1bHQ6cmV0dXJuIHRoaXMuX2dsLlJHQjEwX0EyfX1yZXR1cm4gaT90aGlzLl9nbC5TUkdCOF9BTFBIQTg6dGhpcy5fZ2wuUkdCQTh9X2dldFJHQkFNdWx0aVNhbXBsZUJ1ZmZlckZvcm1hdChlKXtyZXR1cm4gZT09PTE/dGhpcy5fZ2wuUkdCQTMyRjplPT09Mj90aGlzLl9nbC5SR0JBMTZGOnRoaXMuX2dsLlJHQkE4fV9sb2FkRmlsZShlLHQsaSxzLHIsbil7Y29uc3QgYT1vZS5fRmlsZVRvb2xzTG9hZEZpbGUoZSx0LGkscyxyLG4pO3JldHVybiB0aGlzLl9hY3RpdmVSZXF1ZXN0cy5wdXNoKGEpLGEub25Db21wbGV0ZU9ic2VydmFibGUuYWRkKG89Pnt0aGlzLl9hY3RpdmVSZXF1ZXN0cy5zcGxpY2UodGhpcy5fYWN0aXZlUmVxdWVzdHMuaW5kZXhPZihvKSwxKX0pLGF9c3RhdGljIF9GaWxlVG9vbHNMb2FkRmlsZShlLHQsaSxzLHIsbil7dGhyb3cgJCgiRmlsZVRvb2xzIil9cmVhZFBpeGVscyhlLHQsaSxzLHI9ITAsbj0hMCl7Y29uc3QgYT1yPzQ6MyxvPXI/dGhpcy5fZ2wuUkdCQTp0aGlzLl9nbC5SR0IsaD1uZXcgVWludDhBcnJheShzKmkqYSk7cmV0dXJuIG4mJnRoaXMuZmx1c2hGcmFtZWJ1ZmZlcigpLHRoaXMuX2dsLnJlYWRQaXhlbHMoZSx0LGkscyxvLHRoaXMuX2dsLlVOU0lHTkVEX0JZVEUsaCksUHJvbWlzZS5yZXNvbHZlKGgpfXN0YXRpYyBnZXQgSXNTdXBwb3J0ZWRBc3luYygpe3JldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5pc1N1cHBvcnRlZCgpKX1zdGF0aWMgZ2V0IElzU3VwcG9ydGVkKCl7cmV0dXJuIHRoaXMuaXNTdXBwb3J0ZWQoKX1zdGF0aWMgaXNTdXBwb3J0ZWQoKXtpZih0aGlzLl9IYXNNYWpvclBlcmZvcm1hbmNlQ2F2ZWF0IT09bnVsbClyZXR1cm4hdGhpcy5fSGFzTWFqb3JQZXJmb3JtYW5jZUNhdmVhdDtpZih0aGlzLl9Jc1N1cHBvcnRlZD09PW51bGwpdHJ5e2NvbnN0IGU9dGhpcy5fQ3JlYXRlQ2FudmFzKDEsMSksdD1lLmdldENvbnRleHQoIndlYmdsIil8fGUuZ2V0Q29udGV4dCgiZXhwZXJpbWVudGFsLXdlYmdsIik7dGhpcy5fSXNTdXBwb3J0ZWQ9dCE9bnVsbCYmISF3aW5kb3cuV2ViR0xSZW5kZXJpbmdDb250ZXh0fWNhdGNoe3RoaXMuX0lzU3VwcG9ydGVkPSExfXJldHVybiB0aGlzLl9Jc1N1cHBvcnRlZH1zdGF0aWMgZ2V0IEhhc01ham9yUGVyZm9ybWFuY2VDYXZlYXQoKXtpZih0aGlzLl9IYXNNYWpvclBlcmZvcm1hbmNlQ2F2ZWF0PT09bnVsbCl0cnl7Y29uc3QgZT10aGlzLl9DcmVhdGVDYW52YXMoMSwxKSx0PWUuZ2V0Q29udGV4dCgid2ViZ2wiLHtmYWlsSWZNYWpvclBlcmZvcm1hbmNlQ2F2ZWF0OiEwfSl8fGUuZ2V0Q29udGV4dCgiZXhwZXJpbWVudGFsLXdlYmdsIix7ZmFpbElmTWFqb3JQZXJmb3JtYW5jZUNhdmVhdDohMH0pO3RoaXMuX0hhc01ham9yUGVyZm9ybWFuY2VDYXZlYXQ9IXR9Y2F0Y2h7dGhpcy5fSGFzTWFqb3JQZXJmb3JtYW5jZUNhdmVhdD0hMX1yZXR1cm4gdGhpcy5fSGFzTWFqb3JQZXJmb3JtYW5jZUNhdmVhdH1zdGF0aWMgQ2VpbGluZ1BPVChlKXtyZXR1cm4gZS0tLGV8PWU+PjEsZXw9ZT4+MixlfD1lPj40LGV8PWU+PjgsZXw9ZT4+MTYsZSsrLGV9c3RhdGljIEZsb29yUE9UKGUpe3JldHVybiBlPWV8ZT4+MSxlPWV8ZT4+MixlPWV8ZT4+NCxlPWV8ZT4+OCxlPWV8ZT4+MTYsZS0oZT4+MSl9c3RhdGljIE5lYXJlc3RQT1QoZSl7Y29uc3QgdD1vZS5DZWlsaW5nUE9UKGUpLGk9b2UuRmxvb3JQT1QoZSk7cmV0dXJuIHQtZT5lLWk/aTp0fXN0YXRpYyBHZXRFeHBvbmVudE9mVHdvKGUsdCxpPTIpe2xldCBzO3N3aXRjaChpKXtjYXNlIDE6cz1vZS5GbG9vclBPVChlKTticmVhaztjYXNlIDI6cz1vZS5OZWFyZXN0UE9UKGUpO2JyZWFrO2Nhc2UgMzpkZWZhdWx0OnM9b2UuQ2VpbGluZ1BPVChlKTticmVha31yZXR1cm4gTWF0aC5taW4ocyx0KX1zdGF0aWMgUXVldWVOZXdGcmFtZShlLHQpe2lmKGplKCkpe2NvbnN0e3JlcXVlc3RQb3N0QW5pbWF0aW9uRnJhbWU6aSxyZXF1ZXN0QW5pbWF0aW9uRnJhbWU6c309dHx8d2luZG93O2lmKHR5cGVvZiBpPT0iZnVuY3Rpb24iKXJldHVybiBpKGUpO2lmKHR5cGVvZiBzPT0iZnVuY3Rpb24iKXJldHVybiBzKGUpfWVsc2UgaWYodHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZT09ImZ1bmN0aW9uIilyZXR1cm4gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGUpO3JldHVybiBzZXRUaW1lb3V0KGUsMTYpfWdldEhvc3REb2N1bWVudCgpe3JldHVybiB0aGlzLl9yZW5kZXJpbmdDYW52YXMmJnRoaXMuX3JlbmRlcmluZ0NhbnZhcy5vd25lckRvY3VtZW50P3RoaXMuX3JlbmRlcmluZ0NhbnZhcy5vd25lckRvY3VtZW50OkNpKCk/ZG9jdW1lbnQ6bnVsbH19b2UuRXhjZXB0aW9uTGlzdD1be2tleToiQ2hyb21lLzYzLjAiLGNhcHR1cmU6IjYzXFwuMFxcLjMyMzlcXC4oXFxkKykiLGNhcHR1cmVDb25zdHJhaW50OjEwOCx0YXJnZXRzOlsidW5pZm9ybUJ1ZmZlciJdfSx7a2V5OiJGaXJlZm94LzU4IixjYXB0dXJlOm51bGwsY2FwdHVyZUNvbnN0cmFpbnQ6bnVsbCx0YXJnZXRzOlsidW5pZm9ybUJ1ZmZlciJdfSx7a2V5OiJGaXJlZm94LzU5IixjYXB0dXJlOm51bGwsY2FwdHVyZUNvbnN0cmFpbnQ6bnVsbCx0YXJnZXRzOlsidW5pZm9ybUJ1ZmZlciJdfSx7a2V5OiJDaHJvbWUvNzIuKz9Nb2JpbGUiLGNhcHR1cmU6bnVsbCxjYXB0dXJlQ29uc3RyYWludDpudWxsLHRhcmdldHM6WyJ2YW8iXX0se2tleToiQ2hyb21lLzczLis/TW9iaWxlIixjYXB0dXJlOm51bGwsY2FwdHVyZUNvbnN0cmFpbnQ6bnVsbCx0YXJnZXRzOlsidmFvIl19LHtrZXk6IkNocm9tZS83NC4rP01vYmlsZSIsY2FwdHVyZTpudWxsLGNhcHR1cmVDb25zdHJhaW50Om51bGwsdGFyZ2V0czpbInZhbyJdfSx7a2V5OiJNYWMgT1MuK0Nocm9tZS83MSIsY2FwdHVyZTpudWxsLGNhcHR1cmVDb25zdHJhaW50Om51bGwsdGFyZ2V0czpbInZhbyJdfSx7a2V5OiJNYWMgT1MuK0Nocm9tZS83MiIsY2FwdHVyZTpudWxsLGNhcHR1cmVDb25zdHJhaW50Om51bGwsdGFyZ2V0czpbInZhbyJdfSx7a2V5OiJNYWMgT1MuK0Nocm9tZSIsY2FwdHVyZTpudWxsLGNhcHR1cmVDb25zdHJhaW50Om51bGwsdGFyZ2V0czpbInVuaWZvcm1CdWZmZXIiXX0se2tleToiLipBcHBsZVdlYktpdC4qKDE1LjQpLipTYWZhcmkiLGNhcHR1cmU6bnVsbCxjYXB0dXJlQ29uc3RyYWludDpudWxsLHRhcmdldHM6WyJhbnRpYWxpYXMiLCJtYXhNU0FBU2FtcGxlcyJdfSx7a2V5OiIuKigxNS40KS4qQXBwbGVXZWJLaXQuKlNhZmFyaSIsY2FwdHVyZTpudWxsLGNhcHR1cmVDb25zdHJhaW50Om51bGwsdGFyZ2V0czpbImFudGlhbGlhcyIsIm1heE1TQUFTYW1wbGVzIl19XSxvZS5fVGV4dHVyZUxvYWRlcnM9W10sb2UuQ29sbGlzaW9uc0Vwc2lsb249LjAwMSxvZS5fSXNTdXBwb3J0ZWQ9bnVsbCxvZS5fSGFzTWFqb3JQZXJmb3JtYW5jZUNhdmVhdD1udWxsO2NsYXNzIGRue2NvbnN0cnVjdG9yKGU9MzApe3RoaXMuX2VuYWJsZWQ9ITAsdGhpcy5fcm9sbGluZ0ZyYW1lVGltZT1uZXcgZm4oZSl9c2FtcGxlRnJhbWUoZT1haS5Ob3cpe2lmKHRoaXMuX2VuYWJsZWQpe2lmKHRoaXMuX2xhc3RGcmFtZVRpbWVNcyE9bnVsbCl7Y29uc3QgdD1lLXRoaXMuX2xhc3RGcmFtZVRpbWVNczt0aGlzLl9yb2xsaW5nRnJhbWVUaW1lLmFkZCh0KX10aGlzLl9sYXN0RnJhbWVUaW1lTXM9ZX19Z2V0IGF2ZXJhZ2VGcmFtZVRpbWUoKXtyZXR1cm4gdGhpcy5fcm9sbGluZ0ZyYW1lVGltZS5hdmVyYWdlfWdldCBhdmVyYWdlRnJhbWVUaW1lVmFyaWFuY2UoKXtyZXR1cm4gdGhpcy5fcm9sbGluZ0ZyYW1lVGltZS52YXJpYW5jZX1nZXQgaW5zdGFudGFuZW91c0ZyYW1lVGltZSgpe3JldHVybiB0aGlzLl9yb2xsaW5nRnJhbWVUaW1lLmhpc3RvcnkoMCl9Z2V0IGF2ZXJhZ2VGUFMoKXtyZXR1cm4gMWUzL3RoaXMuX3JvbGxpbmdGcmFtZVRpbWUuYXZlcmFnZX1nZXQgaW5zdGFudGFuZW91c0ZQUygpe2NvbnN0IGU9dGhpcy5fcm9sbGluZ0ZyYW1lVGltZS5oaXN0b3J5KDApO3JldHVybiBlPT09MD8wOjFlMy9lfWdldCBpc1NhdHVyYXRlZCgpe3JldHVybiB0aGlzLl9yb2xsaW5nRnJhbWVUaW1lLmlzU2F0dXJhdGVkKCl9ZW5hYmxlKCl7dGhpcy5fZW5hYmxlZD0hMH1kaXNhYmxlKCl7dGhpcy5fZW5hYmxlZD0hMSx0aGlzLl9sYXN0RnJhbWVUaW1lTXM9bnVsbH1nZXQgaXNFbmFibGVkKCl7cmV0dXJuIHRoaXMuX2VuYWJsZWR9cmVzZXQoKXt0aGlzLl9sYXN0RnJhbWVUaW1lTXM9bnVsbCx0aGlzLl9yb2xsaW5nRnJhbWVUaW1lLnJlc2V0KCl9fWNsYXNzIGZue2NvbnN0cnVjdG9yKGUpe3RoaXMuX3NhbXBsZXM9bmV3IEFycmF5KGUpLHRoaXMucmVzZXQoKX1hZGQoZSl7bGV0IHQ7aWYodGhpcy5pc1NhdHVyYXRlZCgpKXtjb25zdCBpPXRoaXMuX3NhbXBsZXNbdGhpcy5fcG9zXTt0PWktdGhpcy5hdmVyYWdlLHRoaXMuYXZlcmFnZS09dC8odGhpcy5fc2FtcGxlQ291bnQtMSksdGhpcy5fbTItPXQqKGktdGhpcy5hdmVyYWdlKX1lbHNlIHRoaXMuX3NhbXBsZUNvdW50Kys7dD1lLXRoaXMuYXZlcmFnZSx0aGlzLmF2ZXJhZ2UrPXQvdGhpcy5fc2FtcGxlQ291bnQsdGhpcy5fbTIrPXQqKGUtdGhpcy5hdmVyYWdlKSx0aGlzLnZhcmlhbmNlPXRoaXMuX20yLyh0aGlzLl9zYW1wbGVDb3VudC0xKSx0aGlzLl9zYW1wbGVzW3RoaXMuX3Bvc109ZSx0aGlzLl9wb3MrKyx0aGlzLl9wb3MlPXRoaXMuX3NhbXBsZXMubGVuZ3RofWhpc3RvcnkoZSl7aWYoZT49dGhpcy5fc2FtcGxlQ291bnR8fGU+PXRoaXMuX3NhbXBsZXMubGVuZ3RoKXJldHVybiAwO2NvbnN0IHQ9dGhpcy5fd3JhcFBvc2l0aW9uKHRoaXMuX3Bvcy0xKTtyZXR1cm4gdGhpcy5fc2FtcGxlc1t0aGlzLl93cmFwUG9zaXRpb24odC1lKV19aXNTYXR1cmF0ZWQoKXtyZXR1cm4gdGhpcy5fc2FtcGxlQ291bnQ+PXRoaXMuX3NhbXBsZXMubGVuZ3RofXJlc2V0KCl7dGhpcy5hdmVyYWdlPTAsdGhpcy52YXJpYW5jZT0wLHRoaXMuX3NhbXBsZUNvdW50PTAsdGhpcy5fcG9zPTAsdGhpcy5fbTI9MH1fd3JhcFBvc2l0aW9uKGUpe2NvbnN0IHQ9dGhpcy5fc2FtcGxlcy5sZW5ndGg7cmV0dXJuKGUldCt0KSV0fX1jbGFzcyBSdHtjb25zdHJ1Y3Rvcigpe3RoaXMuX3N0YXJ0TW9uaXRvcmluZ1RpbWU9MCx0aGlzLl9taW49MCx0aGlzLl9tYXg9MCx0aGlzLl9hdmVyYWdlPTAsdGhpcy5fbGFzdFNlY0F2ZXJhZ2U9MCx0aGlzLl9jdXJyZW50PTAsdGhpcy5fdG90YWxWYWx1ZUNvdW50PTAsdGhpcy5fdG90YWxBY2N1bXVsYXRlZD0wLHRoaXMuX2xhc3RTZWNBY2N1bXVsYXRlZD0wLHRoaXMuX2xhc3RTZWNUaW1lPTAsdGhpcy5fbGFzdFNlY1ZhbHVlQ291bnQ9MH1nZXQgbWluKCl7cmV0dXJuIHRoaXMuX21pbn1nZXQgbWF4KCl7cmV0dXJuIHRoaXMuX21heH1nZXQgYXZlcmFnZSgpe3JldHVybiB0aGlzLl9hdmVyYWdlfWdldCBsYXN0U2VjQXZlcmFnZSgpe3JldHVybiB0aGlzLl9sYXN0U2VjQXZlcmFnZX1nZXQgY3VycmVudCgpe3JldHVybiB0aGlzLl9jdXJyZW50fWdldCB0b3RhbCgpe3JldHVybiB0aGlzLl90b3RhbEFjY3VtdWxhdGVkfWdldCBjb3VudCgpe3JldHVybiB0aGlzLl90b3RhbFZhbHVlQ291bnR9ZmV0Y2hOZXdGcmFtZSgpe3RoaXMuX3RvdGFsVmFsdWVDb3VudCsrLHRoaXMuX2N1cnJlbnQ9MCx0aGlzLl9sYXN0U2VjVmFsdWVDb3VudCsrfWFkZENvdW50KGUsdCl7UnQuRW5hYmxlZCYmKHRoaXMuX2N1cnJlbnQrPWUsdCYmdGhpcy5fZmV0Y2hSZXN1bHQoKSl9YmVnaW5Nb25pdG9yaW5nKCl7UnQuRW5hYmxlZCYmKHRoaXMuX3N0YXJ0TW9uaXRvcmluZ1RpbWU9YWkuTm93KX1lbmRNb25pdG9yaW5nKGU9ITApe2lmKCFSdC5FbmFibGVkKXJldHVybjtlJiZ0aGlzLmZldGNoTmV3RnJhbWUoKTtjb25zdCB0PWFpLk5vdzt0aGlzLl9jdXJyZW50PXQtdGhpcy5fc3RhcnRNb25pdG9yaW5nVGltZSxlJiZ0aGlzLl9mZXRjaFJlc3VsdCgpfV9mZXRjaFJlc3VsdCgpe3RoaXMuX3RvdGFsQWNjdW11bGF0ZWQrPXRoaXMuX2N1cnJlbnQsdGhpcy5fbGFzdFNlY0FjY3VtdWxhdGVkKz10aGlzLl9jdXJyZW50LHRoaXMuX21pbj1NYXRoLm1pbih0aGlzLl9taW4sdGhpcy5fY3VycmVudCksdGhpcy5fbWF4PU1hdGgubWF4KHRoaXMuX21heCx0aGlzLl9jdXJyZW50KSx0aGlzLl9hdmVyYWdlPXRoaXMuX3RvdGFsQWNjdW11bGF0ZWQvdGhpcy5fdG90YWxWYWx1ZUNvdW50O2NvbnN0IGU9YWkuTm93O2UtdGhpcy5fbGFzdFNlY1RpbWU+MWUzJiYodGhpcy5fbGFzdFNlY0F2ZXJhZ2U9dGhpcy5fbGFzdFNlY0FjY3VtdWxhdGVkL3RoaXMuX2xhc3RTZWNWYWx1ZUNvdW50LHRoaXMuX2xhc3RTZWNUaW1lPWUsdGhpcy5fbGFzdFNlY0FjY3VtdWxhdGVkPTAsdGhpcy5fbGFzdFNlY1ZhbHVlQ291bnQ9MCl9fVJ0LkVuYWJsZWQ9ITAsb2UucHJvdG90eXBlLnNldEFscGhhQ29uc3RhbnRzPWZ1bmN0aW9uKGMsZSx0LGkpe3RoaXMuX2FscGhhU3RhdGUuc2V0QWxwaGFCbGVuZENvbnN0YW50cyhjLGUsdCxpKX0sb2UucHJvdG90eXBlLnNldEFscGhhTW9kZT1mdW5jdGlvbihjLGU9ITEpe2lmKHRoaXMuX2FscGhhTW9kZSE9PWMpe3N3aXRjaChjKXtjYXNlIDA6dGhpcy5fYWxwaGFTdGF0ZS5hbHBoYUJsZW5kPSExO2JyZWFrO2Nhc2UgNzp0aGlzLl9hbHBoYVN0YXRlLnNldEFscGhhQmxlbmRGdW5jdGlvblBhcmFtZXRlcnModGhpcy5fZ2wuT05FLHRoaXMuX2dsLk9ORV9NSU5VU19TUkNfQUxQSEEsdGhpcy5fZ2wuT05FLHRoaXMuX2dsLk9ORSksdGhpcy5fYWxwaGFTdGF0ZS5hbHBoYUJsZW5kPSEwO2JyZWFrO2Nhc2UgODp0aGlzLl9hbHBoYVN0YXRlLnNldEFscGhhQmxlbmRGdW5jdGlvblBhcmFtZXRlcnModGhpcy5fZ2wuT05FLHRoaXMuX2dsLk9ORV9NSU5VU19TUkNfQUxQSEEsdGhpcy5fZ2wuT05FLHRoaXMuX2dsLk9ORV9NSU5VU19TUkNfQUxQSEEpLHRoaXMuX2FscGhhU3RhdGUuYWxwaGFCbGVuZD0hMDticmVhaztjYXNlIDI6dGhpcy5fYWxwaGFTdGF0ZS5zZXRBbHBoYUJsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzKHRoaXMuX2dsLlNSQ19BTFBIQSx0aGlzLl9nbC5PTkVfTUlOVVNfU1JDX0FMUEhBLHRoaXMuX2dsLk9ORSx0aGlzLl9nbC5PTkUpLHRoaXMuX2FscGhhU3RhdGUuYWxwaGFCbGVuZD0hMDticmVhaztjYXNlIDY6dGhpcy5fYWxwaGFTdGF0ZS5zZXRBbHBoYUJsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzKHRoaXMuX2dsLk9ORSx0aGlzLl9nbC5PTkUsdGhpcy5fZ2wuWkVSTyx0aGlzLl9nbC5PTkUpLHRoaXMuX2FscGhhU3RhdGUuYWxwaGFCbGVuZD0hMDticmVhaztjYXNlIDE6dGhpcy5fYWxwaGFTdGF0ZS5zZXRBbHBoYUJsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzKHRoaXMuX2dsLlNSQ19BTFBIQSx0aGlzLl9nbC5PTkUsdGhpcy5fZ2wuWkVSTyx0aGlzLl9nbC5PTkUpLHRoaXMuX2FscGhhU3RhdGUuYWxwaGFCbGVuZD0hMDticmVhaztjYXNlIDM6dGhpcy5fYWxwaGFTdGF0ZS5zZXRBbHBoYUJsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzKHRoaXMuX2dsLlpFUk8sdGhpcy5fZ2wuT05FX01JTlVTX1NSQ19DT0xPUix0aGlzLl9nbC5PTkUsdGhpcy5fZ2wuT05FKSx0aGlzLl9hbHBoYVN0YXRlLmFscGhhQmxlbmQ9ITA7YnJlYWs7Y2FzZSA0OnRoaXMuX2FscGhhU3RhdGUuc2V0QWxwaGFCbGVuZEZ1bmN0aW9uUGFyYW1ldGVycyh0aGlzLl9nbC5EU1RfQ09MT1IsdGhpcy5fZ2wuWkVSTyx0aGlzLl9nbC5PTkUsdGhpcy5fZ2wuT05FKSx0aGlzLl9hbHBoYVN0YXRlLmFscGhhQmxlbmQ9ITA7YnJlYWs7Y2FzZSA1OnRoaXMuX2FscGhhU3RhdGUuc2V0QWxwaGFCbGVuZEZ1bmN0aW9uUGFyYW1ldGVycyh0aGlzLl9nbC5TUkNfQUxQSEEsdGhpcy5fZ2wuT05FX01JTlVTX1NSQ19DT0xPUix0aGlzLl9nbC5PTkUsdGhpcy5fZ2wuT05FKSx0aGlzLl9hbHBoYVN0YXRlLmFscGhhQmxlbmQ9ITA7YnJlYWs7Y2FzZSA5OnRoaXMuX2FscGhhU3RhdGUuc2V0QWxwaGFCbGVuZEZ1bmN0aW9uUGFyYW1ldGVycyh0aGlzLl9nbC5DT05TVEFOVF9DT0xPUix0aGlzLl9nbC5PTkVfTUlOVVNfQ09OU1RBTlRfQ09MT1IsdGhpcy5fZ2wuQ09OU1RBTlRfQUxQSEEsdGhpcy5fZ2wuT05FX01JTlVTX0NPTlNUQU5UX0FMUEhBKSx0aGlzLl9hbHBoYVN0YXRlLmFscGhhQmxlbmQ9ITA7YnJlYWs7Y2FzZSAxMDp0aGlzLl9hbHBoYVN0YXRlLnNldEFscGhhQmxlbmRGdW5jdGlvblBhcmFtZXRlcnModGhpcy5fZ2wuT05FLHRoaXMuX2dsLk9ORV9NSU5VU19TUkNfQ09MT1IsdGhpcy5fZ2wuT05FLHRoaXMuX2dsLk9ORV9NSU5VU19TUkNfQUxQSEEpLHRoaXMuX2FscGhhU3RhdGUuYWxwaGFCbGVuZD0hMDticmVhaztjYXNlIDExOnRoaXMuX2FscGhhU3RhdGUuc2V0QWxwaGFCbGVuZEZ1bmN0aW9uUGFyYW1ldGVycyh0aGlzLl9nbC5PTkUsdGhpcy5fZ2wuT05FLHRoaXMuX2dsLk9ORSx0aGlzLl9nbC5PTkUpLHRoaXMuX2FscGhhU3RhdGUuYWxwaGFCbGVuZD0hMDticmVhaztjYXNlIDEyOnRoaXMuX2FscGhhU3RhdGUuc2V0QWxwaGFCbGVuZEZ1bmN0aW9uUGFyYW1ldGVycyh0aGlzLl9nbC5EU1RfQUxQSEEsdGhpcy5fZ2wuT05FLHRoaXMuX2dsLlpFUk8sdGhpcy5fZ2wuWkVSTyksdGhpcy5fYWxwaGFTdGF0ZS5hbHBoYUJsZW5kPSEwO2JyZWFrO2Nhc2UgMTM6dGhpcy5fYWxwaGFTdGF0ZS5zZXRBbHBoYUJsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzKHRoaXMuX2dsLk9ORV9NSU5VU19EU1RfQ09MT1IsdGhpcy5fZ2wuT05FX01JTlVTX1NSQ19DT0xPUix0aGlzLl9nbC5PTkVfTUlOVVNfRFNUX0FMUEhBLHRoaXMuX2dsLk9ORV9NSU5VU19TUkNfQUxQSEEpLHRoaXMuX2FscGhhU3RhdGUuYWxwaGFCbGVuZD0hMDticmVhaztjYXNlIDE0OnRoaXMuX2FscGhhU3RhdGUuc2V0QWxwaGFCbGVuZEZ1bmN0aW9uUGFyYW1ldGVycyh0aGlzLl9nbC5PTkUsdGhpcy5fZ2wuT05FX01JTlVTX1NSQ19BTFBIQSx0aGlzLl9nbC5PTkUsdGhpcy5fZ2wuT05FX01JTlVTX1NSQ19BTFBIQSksdGhpcy5fYWxwaGFTdGF0ZS5hbHBoYUJsZW5kPSEwO2JyZWFrO2Nhc2UgMTU6dGhpcy5fYWxwaGFTdGF0ZS5zZXRBbHBoYUJsZW5kRnVuY3Rpb25QYXJhbWV0ZXJzKHRoaXMuX2dsLk9ORSx0aGlzLl9nbC5PTkUsdGhpcy5fZ2wuT05FLHRoaXMuX2dsLlpFUk8pLHRoaXMuX2FscGhhU3RhdGUuYWxwaGFCbGVuZD0hMDticmVhaztjYXNlIDE2OnRoaXMuX2FscGhhU3RhdGUuc2V0QWxwaGFCbGVuZEZ1bmN0aW9uUGFyYW1ldGVycyh0aGlzLl9nbC5PTkVfTUlOVVNfRFNUX0NPTE9SLHRoaXMuX2dsLk9ORV9NSU5VU19TUkNfQ09MT1IsdGhpcy5fZ2wuWkVSTyx0aGlzLl9nbC5PTkUpLHRoaXMuX2FscGhhU3RhdGUuYWxwaGFCbGVuZD0hMDticmVhaztjYXNlIDE3OnRoaXMuX2FscGhhU3RhdGUuc2V0QWxwaGFCbGVuZEZ1bmN0aW9uUGFyYW1ldGVycyh0aGlzLl9nbC5TUkNfQUxQSEEsdGhpcy5fZ2wuT05FX01JTlVTX1NSQ19BTFBIQSx0aGlzLl9nbC5PTkUsdGhpcy5fZ2wuT05FX01JTlVTX1NSQ19BTFBIQSksdGhpcy5fYWxwaGFTdGF0ZS5hbHBoYUJsZW5kPSEwO2JyZWFrfWV8fCh0aGlzLmRlcHRoQ3VsbGluZ1N0YXRlLmRlcHRoTWFzaz1jPT09MCksdGhpcy5fYWxwaGFNb2RlPWN9fSxvZS5wcm90b3R5cGUuZ2V0QWxwaGFNb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FscGhhTW9kZX0sb2UucHJvdG90eXBlLnNldEFscGhhRXF1YXRpb249ZnVuY3Rpb24oYyl7aWYodGhpcy5fYWxwaGFFcXVhdGlvbiE9PWMpe3N3aXRjaChjKXtjYXNlIDA6dGhpcy5fYWxwaGFTdGF0ZS5zZXRBbHBoYUVxdWF0aW9uUGFyYW1ldGVycygzMjc3NCwzMjc3NCk7YnJlYWs7Y2FzZSAxOnRoaXMuX2FscGhhU3RhdGUuc2V0QWxwaGFFcXVhdGlvblBhcmFtZXRlcnMoMzI3NzgsMzI3NzgpO2JyZWFrO2Nhc2UgMjp0aGlzLl9hbHBoYVN0YXRlLnNldEFscGhhRXF1YXRpb25QYXJhbWV0ZXJzKDMyNzc5LDMyNzc5KTticmVhaztjYXNlIDM6dGhpcy5fYWxwaGFTdGF0ZS5zZXRBbHBoYUVxdWF0aW9uUGFyYW1ldGVycygzMjc3NiwzMjc3Nik7YnJlYWs7Y2FzZSA0OnRoaXMuX2FscGhhU3RhdGUuc2V0QWxwaGFFcXVhdGlvblBhcmFtZXRlcnMoMzI3NzUsMzI3NzUpO2JyZWFrO2Nhc2UgNTp0aGlzLl9hbHBoYVN0YXRlLnNldEFscGhhRXF1YXRpb25QYXJhbWV0ZXJzKDMyNzc1LDMyNzc0KTticmVha310aGlzLl9hbHBoYUVxdWF0aW9uPWN9fSxvZS5wcm90b3R5cGUuZ2V0QWxwaGFFcXVhdGlvbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9hbHBoYUVxdWF0aW9ufTtmdW5jdGlvbiBfbihjLGUsdD0hMSxpKXtzd2l0Y2goYyl7Y2FzZSAzOntjb25zdCByPWUgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcj9uZXcgSW50OEFycmF5KGUpOm5ldyBJbnQ4QXJyYXkoZSk7cmV0dXJuIGkmJnIuc2V0KG5ldyBJbnQ4QXJyYXkoaSkpLHJ9Y2FzZSAwOntjb25zdCByPWUgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcj9uZXcgVWludDhBcnJheShlKTpuZXcgVWludDhBcnJheShlKTtyZXR1cm4gaSYmci5zZXQobmV3IFVpbnQ4QXJyYXkoaSkpLHJ9Y2FzZSA0Ontjb25zdCByPWUgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcj9uZXcgSW50MTZBcnJheShlKTpuZXcgSW50MTZBcnJheSh0P2UvMjplKTtyZXR1cm4gaSYmci5zZXQobmV3IEludDE2QXJyYXkoaSkpLHJ9Y2FzZSA1OmNhc2UgODpjYXNlIDk6Y2FzZSAxMDpjYXNlIDI6e2NvbnN0IHI9ZSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyP25ldyBVaW50MTZBcnJheShlKTpuZXcgVWludDE2QXJyYXkodD9lLzI6ZSk7cmV0dXJuIGkmJnIuc2V0KG5ldyBVaW50MTZBcnJheShpKSkscn1jYXNlIDY6e2NvbnN0IHI9ZSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyP25ldyBJbnQzMkFycmF5KGUpOm5ldyBJbnQzMkFycmF5KHQ/ZS80OmUpO3JldHVybiBpJiZyLnNldChuZXcgSW50MzJBcnJheShpKSkscn1jYXNlIDc6Y2FzZSAxMTpjYXNlIDEyOmNhc2UgMTM6Y2FzZSAxNDpjYXNlIDE1Ontjb25zdCByPWUgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcj9uZXcgVWludDMyQXJyYXkoZSk6bmV3IFVpbnQzMkFycmF5KHQ/ZS80OmUpO3JldHVybiBpJiZyLnNldChuZXcgVWludDMyQXJyYXkoaSkpLHJ9Y2FzZSAxOntjb25zdCByPWUgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcj9uZXcgRmxvYXQzMkFycmF5KGUpOm5ldyBGbG9hdDMyQXJyYXkodD9lLzQ6ZSk7cmV0dXJuIGkmJnIuc2V0KG5ldyBGbG9hdDMyQXJyYXkoaSkpLHJ9fWNvbnN0IHM9ZSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyP25ldyBVaW50OEFycmF5KGUpOm5ldyBVaW50OEFycmF5KGUpO3JldHVybiBpJiZzLnNldChuZXcgVWludDhBcnJheShpKSksc31vZS5wcm90b3R5cGUuX3JlYWRUZXh0dXJlUGl4ZWxzU3luYz1mdW5jdGlvbihjLGUsdCxpPS0xLHM9MCxyPW51bGwsbj0hMCxhPSExLG89MCxoPTApe3ZhciBsLHU7Y29uc3QgZD10aGlzLl9nbDtpZighZCl0aHJvdyBuZXcgRXJyb3IoIkVuZ2luZSBkb2VzIG5vdCBoYXZlIGdsIHJlbmRlcmluZyBjb250ZXh0LiIpO2lmKCF0aGlzLl9kdW1teUZyYW1lYnVmZmVyKXtjb25zdCBfPWQuY3JlYXRlRnJhbWVidWZmZXIoKTtpZighXyl0aHJvdyBuZXcgRXJyb3IoIlVuYWJsZSB0byBjcmVhdGUgZHVtbXkgZnJhbWVidWZmZXIiKTt0aGlzLl9kdW1teUZyYW1lYnVmZmVyPV99ZC5iaW5kRnJhbWVidWZmZXIoZC5GUkFNRUJVRkZFUix0aGlzLl9kdW1teUZyYW1lYnVmZmVyKSxpPi0xP2QuZnJhbWVidWZmZXJUZXh0dXJlMkQoZC5GUkFNRUJVRkZFUixkLkNPTE9SX0FUVEFDSE1FTlQwLGQuVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9YK2ksKGw9Yy5faGFyZHdhcmVUZXh0dXJlKT09PW51bGx8fGw9PT12b2lkIDA/dm9pZCAwOmwudW5kZXJseWluZ1Jlc291cmNlLHMpOmQuZnJhbWVidWZmZXJUZXh0dXJlMkQoZC5GUkFNRUJVRkZFUixkLkNPTE9SX0FUVEFDSE1FTlQwLGQuVEVYVFVSRV8yRCwodT1jLl9oYXJkd2FyZVRleHR1cmUpPT09bnVsbHx8dT09PXZvaWQgMD92b2lkIDA6dS51bmRlcmx5aW5nUmVzb3VyY2Uscyk7bGV0IGY9Yy50eXBlIT09dm9pZCAwP3RoaXMuX2dldFdlYkdMVGV4dHVyZVR5cGUoYy50eXBlKTpkLlVOU0lHTkVEX0JZVEU7aWYoYSlyfHwocj1fbihjLnR5cGUsNCplKnQpKTtlbHNlIHN3aXRjaChmKXtjYXNlIGQuVU5TSUdORURfQllURTpyfHwocj1uZXcgVWludDhBcnJheSg0KmUqdCkpLGY9ZC5VTlNJR05FRF9CWVRFO2JyZWFrO2RlZmF1bHQ6cnx8KHI9bmV3IEZsb2F0MzJBcnJheSg0KmUqdCkpLGY9ZC5GTE9BVDticmVha31yZXR1cm4gbiYmdGhpcy5mbHVzaEZyYW1lYnVmZmVyKCksZC5yZWFkUGl4ZWxzKG8saCxlLHQsZC5SR0JBLGYsciksZC5iaW5kRnJhbWVidWZmZXIoZC5GUkFNRUJVRkZFUix0aGlzLl9jdXJyZW50RnJhbWVidWZmZXIpLHJ9LG9lLnByb3RvdHlwZS5fcmVhZFRleHR1cmVQaXhlbHM9ZnVuY3Rpb24oYyxlLHQsaT0tMSxzPTAscj1udWxsLG49ITAsYT0hMSxvPTAsaD0wKXtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuX3JlYWRUZXh0dXJlUGl4ZWxzU3luYyhjLGUsdCxpLHMscixuLGEsbyxoKSl9LG9lLnByb3RvdHlwZS51cGRhdGVEeW5hbWljSW5kZXhCdWZmZXI9ZnVuY3Rpb24oYyxlLHQ9MCl7dGhpcy5fY3VycmVudEJvdW5kQnVmZmVyW3RoaXMuX2dsLkVMRU1FTlRfQVJSQVlfQlVGRkVSXT1udWxsLHRoaXMuYmluZEluZGV4QnVmZmVyKGMpO2xldCBpO2MuaXMzMkJpdHM/aT1lIGluc3RhbmNlb2YgVWludDMyQXJyYXk/ZTpuZXcgVWludDMyQXJyYXkoZSk6aT1lIGluc3RhbmNlb2YgVWludDE2QXJyYXk/ZTpuZXcgVWludDE2QXJyYXkoZSksdGhpcy5fZ2wuYnVmZmVyRGF0YSh0aGlzLl9nbC5FTEVNRU5UX0FSUkFZX0JVRkZFUixpLHRoaXMuX2dsLkRZTkFNSUNfRFJBVyksdGhpcy5fcmVzZXRJbmRleEJ1ZmZlckJpbmRpbmcoKX0sb2UucHJvdG90eXBlLnVwZGF0ZUR5bmFtaWNWZXJ0ZXhCdWZmZXI9ZnVuY3Rpb24oYyxlLHQsaSl7dGhpcy5iaW5kQXJyYXlCdWZmZXIoYyksdD09PXZvaWQgMCYmKHQ9MCk7Y29uc3Qgcz1lLmJ5dGVMZW5ndGh8fGUubGVuZ3RoO2k9PT12b2lkIDB8fGk+PXMmJnQ9PT0wP2UgaW5zdGFuY2VvZiBBcnJheT90aGlzLl9nbC5idWZmZXJTdWJEYXRhKHRoaXMuX2dsLkFSUkFZX0JVRkZFUix0LG5ldyBGbG9hdDMyQXJyYXkoZSkpOnRoaXMuX2dsLmJ1ZmZlclN1YkRhdGEodGhpcy5fZ2wuQVJSQVlfQlVGRkVSLHQsZSk6ZSBpbnN0YW5jZW9mIEFycmF5P3RoaXMuX2dsLmJ1ZmZlclN1YkRhdGEodGhpcy5fZ2wuQVJSQVlfQlVGRkVSLDAsbmV3IEZsb2F0MzJBcnJheShlKS5zdWJhcnJheSh0LHQraSkpOihlIGluc3RhbmNlb2YgQXJyYXlCdWZmZXI/ZT1uZXcgVWludDhBcnJheShlLHQsaSk6ZT1uZXcgVWludDhBcnJheShlLmJ1ZmZlcixlLmJ5dGVPZmZzZXQrdCxpKSx0aGlzLl9nbC5idWZmZXJTdWJEYXRhKHRoaXMuX2dsLkFSUkFZX0JVRkZFUiwwLGUpKSx0aGlzLl9yZXNldFZlcnRleEJ1ZmZlckJpbmRpbmcoKX07Y2xhc3MgSSBleHRlbmRzIG9le2NvbnN0cnVjdG9yKGUsdCxpLHM9ITEpe2lmKHN1cGVyKGUsdCxpLHMpLHRoaXMuZW5hYmxlT2ZmbGluZVN1cHBvcnQ9ITEsdGhpcy5kaXNhYmxlTWFuaWZlc3RDaGVjaz0hMSx0aGlzLmRpc2FibGVDb250ZXh0TWVudT0hMCx0aGlzLnNjZW5lcz1uZXcgQXJyYXksdGhpcy5fdmlydHVhbFNjZW5lcz1uZXcgQXJyYXksdGhpcy5vbk5ld1NjZW5lQWRkZWRPYnNlcnZhYmxlPW5ldyBGLHRoaXMucG9zdFByb2Nlc3Nlcz1uZXcgQXJyYXksdGhpcy5pc1BvaW50ZXJMb2NrPSExLHRoaXMub25SZXNpemVPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25DYW52YXNCbHVyT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uQ2FudmFzRm9jdXNPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25DYW52YXNQb2ludGVyT3V0T2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uQmVnaW5GcmFtZU9ic2VydmFibGU9bmV3IEYsdGhpcy5jdXN0b21BbmltYXRpb25GcmFtZVJlcXVlc3Rlcj1udWxsLHRoaXMub25FbmRGcmFtZU9ic2VydmFibGU9bmV3IEYsdGhpcy5vbkJlZm9yZVNoYWRlckNvbXBpbGF0aW9uT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uQWZ0ZXJTaGFkZXJDb21waWxhdGlvbk9ic2VydmFibGU9bmV3IEYsdGhpcy5fZGV0ZXJtaW5pc3RpY0xvY2tzdGVwPSExLHRoaXMuX2xvY2tzdGVwTWF4U3RlcHM9NCx0aGlzLl90aW1lU3RlcD0xLzYwLHRoaXMuX2Zwcz02MCx0aGlzLl9kZWx0YVRpbWU9MCx0aGlzLl9kcmF3Q2FsbHM9bmV3IFJ0LHRoaXMuY2FudmFzVGFiSW5kZXg9MSx0aGlzLmRpc2FibGVQZXJmb3JtYW5jZU1vbml0b3JJbkJhY2tncm91bmQ9ITEsdGhpcy5fcGVyZm9ybWFuY2VNb25pdG9yPW5ldyBkbix0aGlzLl9jb21wYXRpYmlsaXR5TW9kZT0hMCx0aGlzLmN1cnJlbnRSZW5kZXJQYXNzSWQ9MCx0aGlzLl9yZW5kZXJQYXNzTmFtZXM9WyJtYWluIl0sSS5JbnN0YW5jZXMucHVzaCh0aGlzKSwhIWUpe2lmKHRoaXMuX2ZlYXR1cmVzLnN1cHBvcnRSZW5kZXJQYXNzZXM9ITAsaT10aGlzLl9jcmVhdGlvbk9wdGlvbnMsZS5nZXRDb250ZXh0KXtjb25zdCByPWU7dGhpcy5fc2hhcmVkSW5pdChyLCEhaS5kb05vdEhhbmRsZVRvdWNoQWN0aW9uLGkuYXVkaW9FbmdpbmUpLENpKCkmJih0aGlzLl9vbkZ1bGxzY3JlZW5DaGFuZ2U9KCk9Pnt0aGlzLmlzRnVsbHNjcmVlbj0hIWRvY3VtZW50LmZ1bGxzY3JlZW5FbGVtZW50LHRoaXMuaXNGdWxsc2NyZWVuJiZ0aGlzLl9wb2ludGVyTG9ja1JlcXVlc3RlZCYmciYmSS5fUmVxdWVzdFBvaW50ZXJsb2NrKHIpfSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJmdWxsc2NyZWVuY2hhbmdlIix0aGlzLl9vbkZ1bGxzY3JlZW5DaGFuZ2UsITEpLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIndlYmtpdGZ1bGxzY3JlZW5jaGFuZ2UiLHRoaXMuX29uRnVsbHNjcmVlbkNoYW5nZSwhMSksdGhpcy5fb25Qb2ludGVyTG9ja0NoYW5nZT0oKT0+e3RoaXMuaXNQb2ludGVyTG9jaz1kb2N1bWVudC5wb2ludGVyTG9ja0VsZW1lbnQ9PT1yfSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJwb2ludGVybG9ja2NoYW5nZSIsdGhpcy5fb25Qb2ludGVyTG9ja0NoYW5nZSwhMSksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigid2Via2l0cG9pbnRlcmxvY2tjaGFuZ2UiLHRoaXMuX29uUG9pbnRlckxvY2tDaGFuZ2UsITEpLCFJLmF1ZGlvRW5naW5lJiZpLmF1ZGlvRW5naW5lJiZJLkF1ZGlvRW5naW5lRmFjdG9yeSYmKEkuYXVkaW9FbmdpbmU9SS5BdWRpb0VuZ2luZUZhY3RvcnkodGhpcy5nZXRSZW5kZXJpbmdDYW52YXMoKSx0aGlzLmdldEF1ZGlvQ29udGV4dCgpLHRoaXMuZ2V0QXVkaW9EZXN0aW5hdGlvbigpKSkpLHRoaXMuX2Nvbm5lY3RWUkV2ZW50cygpLHRoaXMuZW5hYmxlT2ZmbGluZVN1cHBvcnQ9SS5PZmZsaW5lUHJvdmlkZXJGYWN0b3J5IT09dm9pZCAwLHRoaXMuX2RldGVybWluaXN0aWNMb2Nrc3RlcD0hIWkuZGV0ZXJtaW5pc3RpY0xvY2tzdGVwLHRoaXMuX2xvY2tzdGVwTWF4U3RlcHM9aS5sb2Nrc3RlcE1heFN0ZXBzfHwwLHRoaXMuX3RpbWVTdGVwPWkudGltZVN0ZXB8fDEvNjB9dGhpcy5fcHJlcGFyZVZSQ29tcG9uZW50KCksaS5hdXRvRW5hYmxlV2ViVlImJnRoaXMuaW5pdFdlYlZSKCl9fXN0YXRpYyBnZXQgTnBtUGFja2FnZSgpe3JldHVybiBvZS5OcG1QYWNrYWdlfXN0YXRpYyBnZXQgVmVyc2lvbigpe3JldHVybiBvZS5WZXJzaW9ufXN0YXRpYyBnZXQgSW5zdGFuY2VzKCl7cmV0dXJuIGZlLkluc3RhbmNlc31zdGF0aWMgZ2V0IExhc3RDcmVhdGVkRW5naW5lKCl7cmV0dXJuIGZlLkxhc3RDcmVhdGVkRW5naW5lfXN0YXRpYyBnZXQgTGFzdENyZWF0ZWRTY2VuZSgpe3JldHVybiBmZS5MYXN0Q3JlYXRlZFNjZW5lfV9jcmVhdGVJbWFnZUJpdG1hcEZyb21Tb3VyY2UoZSx0KXtyZXR1cm4gbmV3IFByb21pc2UoKHMscik9Pntjb25zdCBuPW5ldyBJbWFnZTtuLm9ubG9hZD0oKT0+e24uZGVjb2RlKCkudGhlbigoKT0+e3RoaXMuY3JlYXRlSW1hZ2VCaXRtYXAobix0KS50aGVuKGE9PntzKGEpfSl9KX0sbi5vbmVycm9yPSgpPT57cihgRXJyb3IgbG9hZGluZyBpbWFnZSAke24uc3JjfWApfSxuLnNyYz1lfSl9Y3JlYXRlSW1hZ2VCaXRtYXAoZSx0KXtyZXR1cm4gY3JlYXRlSW1hZ2VCaXRtYXAoZSx0KX1yZXNpemVJbWFnZUJpdG1hcChlLHQsaSl7Y29uc3Qgcj10aGlzLmNyZWF0ZUNhbnZhcyh0LGkpLmdldENvbnRleHQoIjJkIik7aWYoIXIpdGhyb3cgbmV3IEVycm9yKCJVbmFibGUgdG8gZ2V0IDJkIGNvbnRleHQgZm9yIHJlc2l6ZUltYWdlQml0bWFwIik7cmV0dXJuIHIuZHJhd0ltYWdlKGUsMCwwKSxyLmdldEltYWdlRGF0YSgwLDAsdCxpKS5kYXRhfXN0YXRpYyBNYXJrQWxsTWF0ZXJpYWxzQXNEaXJ0eShlLHQpe2ZvcihsZXQgaT0wO2k8SS5JbnN0YW5jZXMubGVuZ3RoO2krKyl7Y29uc3Qgcz1JLkluc3RhbmNlc1tpXTtmb3IobGV0IHI9MDtyPHMuc2NlbmVzLmxlbmd0aDtyKyspcy5zY2VuZXNbcl0ubWFya0FsbE1hdGVyaWFsc0FzRGlydHkoZSx0KX19c3RhdGljIERlZmF1bHRMb2FkaW5nU2NyZWVuRmFjdG9yeShlKXt0aHJvdyAkKCJMb2FkaW5nU2NyZWVuIil9Z2V0IF9zdXBwb3J0c0hhcmR3YXJlVGV4dHVyZVJlc2NhbGluZygpe3JldHVybiEhSS5fUmVzY2FsZVBvc3RQcm9jZXNzRmFjdG9yeX1nZXQgcGVyZm9ybWFuY2VNb25pdG9yKCl7cmV0dXJuIHRoaXMuX3BlcmZvcm1hbmNlTW9uaXRvcn1nZXQgY29tcGF0aWJpbGl0eU1vZGUoKXtyZXR1cm4gdGhpcy5fY29tcGF0aWJpbGl0eU1vZGV9c2V0IGNvbXBhdGliaWxpdHlNb2RlKGUpe3RoaXMuX2NvbXBhdGliaWxpdHlNb2RlPSEwfWdldElucHV0RWxlbWVudCgpe3JldHVybiB0aGlzLl9yZW5kZXJpbmdDYW52YXN9X2luaXRHTENvbnRleHQoKXtzdXBlci5faW5pdEdMQ29udGV4dCgpLHRoaXMuX3Jlc2NhbGVQb3N0UHJvY2Vzcz1udWxsfV9zaGFyZWRJbml0KGUsdCxpKXtzdXBlci5fc2hhcmVkSW5pdChlLHQsaSksdGhpcy5fb25DYW52YXNGb2N1cz0oKT0+e3RoaXMub25DYW52YXNGb2N1c09ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpfSx0aGlzLl9vbkNhbnZhc0JsdXI9KCk9Pnt0aGlzLm9uQ2FudmFzQmx1ck9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpfSx0aGlzLl9vbkNhbnZhc0NvbnRleHRNZW51PXI9Pnt0aGlzLmRpc2FibGVDb250ZXh0TWVudSYmci5wcmV2ZW50RGVmYXVsdCgpfSxlLmFkZEV2ZW50TGlzdGVuZXIoImZvY3VzIix0aGlzLl9vbkNhbnZhc0ZvY3VzKSxlLmFkZEV2ZW50TGlzdGVuZXIoImJsdXIiLHRoaXMuX29uQ2FudmFzQmx1ciksZS5hZGRFdmVudExpc3RlbmVyKCJjb250ZXh0bWVudSIsdGhpcy5fb25DYW52YXNDb250ZXh0TWVudSksdGhpcy5fb25CbHVyPSgpPT57dGhpcy5kaXNhYmxlUGVyZm9ybWFuY2VNb25pdG9ySW5CYWNrZ3JvdW5kJiZ0aGlzLl9wZXJmb3JtYW5jZU1vbml0b3IuZGlzYWJsZSgpLHRoaXMuX3dpbmRvd0lzQmFja2dyb3VuZD0hMH0sdGhpcy5fb25Gb2N1cz0oKT0+e3RoaXMuZGlzYWJsZVBlcmZvcm1hbmNlTW9uaXRvckluQmFja2dyb3VuZCYmdGhpcy5fcGVyZm9ybWFuY2VNb25pdG9yLmVuYWJsZSgpLHRoaXMuX3dpbmRvd0lzQmFja2dyb3VuZD0hMX0sdGhpcy5fb25DYW52YXNQb2ludGVyT3V0PXI9Pntkb2N1bWVudC5lbGVtZW50RnJvbVBvaW50KHIuY2xpZW50WCxyLmNsaWVudFkpIT09ZSYmdGhpcy5vbkNhbnZhc1BvaW50ZXJPdXRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhyKX07Y29uc3Qgcz10aGlzLmdldEhvc3RXaW5kb3coKTtzJiZ0eXBlb2Ygcy5hZGRFdmVudExpc3RlbmVyPT0iZnVuY3Rpb24iJiYocy5hZGRFdmVudExpc3RlbmVyKCJibHVyIix0aGlzLl9vbkJsdXIpLHMuYWRkRXZlbnRMaXN0ZW5lcigiZm9jdXMiLHRoaXMuX29uRm9jdXMpKSxlLmFkZEV2ZW50TGlzdGVuZXIoInBvaW50ZXJvdXQiLHRoaXMuX29uQ2FudmFzUG9pbnRlck91dCksdHx8dGhpcy5fZGlzYWJsZVRvdWNoQWN0aW9uKCksIUkuYXVkaW9FbmdpbmUmJmkmJkkuQXVkaW9FbmdpbmVGYWN0b3J5JiYoSS5hdWRpb0VuZ2luZT1JLkF1ZGlvRW5naW5lRmFjdG9yeSh0aGlzLmdldFJlbmRlcmluZ0NhbnZhcygpLHRoaXMuZ2V0QXVkaW9Db250ZXh0KCksdGhpcy5nZXRBdWRpb0Rlc3RpbmF0aW9uKCkpKX1nZXRBc3BlY3RSYXRpbyhlLHQ9ITEpe2NvbnN0IGk9ZS52aWV3cG9ydDtyZXR1cm4gdGhpcy5nZXRSZW5kZXJXaWR0aCh0KSppLndpZHRoLyh0aGlzLmdldFJlbmRlckhlaWdodCh0KSppLmhlaWdodCl9Z2V0U2NyZWVuQXNwZWN0UmF0aW8oKXtyZXR1cm4gdGhpcy5nZXRSZW5kZXJXaWR0aCghMCkvdGhpcy5nZXRSZW5kZXJIZWlnaHQoITApfWdldFJlbmRlcmluZ0NhbnZhc0NsaWVudFJlY3QoKXtyZXR1cm4gdGhpcy5fcmVuZGVyaW5nQ2FudmFzP3RoaXMuX3JlbmRlcmluZ0NhbnZhcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTpudWxsfWdldElucHV0RWxlbWVudENsaWVudFJlY3QoKXtyZXR1cm4gdGhpcy5fcmVuZGVyaW5nQ2FudmFzP3RoaXMuZ2V0SW5wdXRFbGVtZW50KCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk6bnVsbH1pc0RldGVybWluaXN0aWNMb2NrU3RlcCgpe3JldHVybiB0aGlzLl9kZXRlcm1pbmlzdGljTG9ja3N0ZXB9Z2V0TG9ja3N0ZXBNYXhTdGVwcygpe3JldHVybiB0aGlzLl9sb2Nrc3RlcE1heFN0ZXBzfWdldFRpbWVTdGVwKCl7cmV0dXJuIHRoaXMuX3RpbWVTdGVwKjFlM31nZW5lcmF0ZU1pcE1hcHNGb3JDdWJlbWFwKGUsdD0hMCl7aWYoZS5nZW5lcmF0ZU1pcE1hcHMpe2NvbnN0IGk9dGhpcy5fZ2w7dGhpcy5fYmluZFRleHR1cmVEaXJlY3RseShpLlRFWFRVUkVfQ1VCRV9NQVAsZSwhMCksaS5nZW5lcmF0ZU1pcG1hcChpLlRFWFRVUkVfQ1VCRV9NQVApLHQmJnRoaXMuX2JpbmRUZXh0dXJlRGlyZWN0bHkoaS5URVhUVVJFX0NVQkVfTUFQLG51bGwpfX1nZXREZXB0aFdyaXRlKCl7cmV0dXJuIHRoaXMuX2RlcHRoQ3VsbGluZ1N0YXRlLmRlcHRoTWFza31zZXREZXB0aFdyaXRlKGUpe3RoaXMuX2RlcHRoQ3VsbGluZ1N0YXRlLmRlcHRoTWFzaz1lfWdldFN0ZW5jaWxCdWZmZXIoKXtyZXR1cm4gdGhpcy5fc3RlbmNpbFN0YXRlLnN0ZW5jaWxUZXN0fXNldFN0ZW5jaWxCdWZmZXIoZSl7dGhpcy5fc3RlbmNpbFN0YXRlLnN0ZW5jaWxUZXN0PWV9Z2V0U3RlbmNpbE1hc2soKXtyZXR1cm4gdGhpcy5fc3RlbmNpbFN0YXRlLnN0ZW5jaWxNYXNrfXNldFN0ZW5jaWxNYXNrKGUpe3RoaXMuX3N0ZW5jaWxTdGF0ZS5zdGVuY2lsTWFzaz1lfWdldFN0ZW5jaWxGdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdGVuY2lsU3RhdGUuc3RlbmNpbEZ1bmN9Z2V0U3RlbmNpbEZ1bmN0aW9uUmVmZXJlbmNlKCl7cmV0dXJuIHRoaXMuX3N0ZW5jaWxTdGF0ZS5zdGVuY2lsRnVuY1JlZn1nZXRTdGVuY2lsRnVuY3Rpb25NYXNrKCl7cmV0dXJuIHRoaXMuX3N0ZW5jaWxTdGF0ZS5zdGVuY2lsRnVuY01hc2t9c2V0U3RlbmNpbEZ1bmN0aW9uKGUpe3RoaXMuX3N0ZW5jaWxTdGF0ZS5zdGVuY2lsRnVuYz1lfXNldFN0ZW5jaWxGdW5jdGlvblJlZmVyZW5jZShlKXt0aGlzLl9zdGVuY2lsU3RhdGUuc3RlbmNpbEZ1bmNSZWY9ZX1zZXRTdGVuY2lsRnVuY3Rpb25NYXNrKGUpe3RoaXMuX3N0ZW5jaWxTdGF0ZS5zdGVuY2lsRnVuY01hc2s9ZX1nZXRTdGVuY2lsT3BlcmF0aW9uRmFpbCgpe3JldHVybiB0aGlzLl9zdGVuY2lsU3RhdGUuc3RlbmNpbE9wU3RlbmNpbEZhaWx9Z2V0U3RlbmNpbE9wZXJhdGlvbkRlcHRoRmFpbCgpe3JldHVybiB0aGlzLl9zdGVuY2lsU3RhdGUuc3RlbmNpbE9wRGVwdGhGYWlsfWdldFN0ZW5jaWxPcGVyYXRpb25QYXNzKCl7cmV0dXJuIHRoaXMuX3N0ZW5jaWxTdGF0ZS5zdGVuY2lsT3BTdGVuY2lsRGVwdGhQYXNzfXNldFN0ZW5jaWxPcGVyYXRpb25GYWlsKGUpe3RoaXMuX3N0ZW5jaWxTdGF0ZS5zdGVuY2lsT3BTdGVuY2lsRmFpbD1lfXNldFN0ZW5jaWxPcGVyYXRpb25EZXB0aEZhaWwoZSl7dGhpcy5fc3RlbmNpbFN0YXRlLnN0ZW5jaWxPcERlcHRoRmFpbD1lfXNldFN0ZW5jaWxPcGVyYXRpb25QYXNzKGUpe3RoaXMuX3N0ZW5jaWxTdGF0ZS5zdGVuY2lsT3BTdGVuY2lsRGVwdGhQYXNzPWV9c2V0RGl0aGVyaW5nU3RhdGUoZSl7ZT90aGlzLl9nbC5lbmFibGUodGhpcy5fZ2wuRElUSEVSKTp0aGlzLl9nbC5kaXNhYmxlKHRoaXMuX2dsLkRJVEhFUil9c2V0UmFzdGVyaXplclN0YXRlKGUpe2U/dGhpcy5fZ2wuZGlzYWJsZSh0aGlzLl9nbC5SQVNURVJJWkVSX0RJU0NBUkQpOnRoaXMuX2dsLmVuYWJsZSh0aGlzLl9nbC5SQVNURVJJWkVSX0RJU0NBUkQpfWdldERlcHRoRnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVwdGhDdWxsaW5nU3RhdGUuZGVwdGhGdW5jfXNldERlcHRoRnVuY3Rpb24oZSl7dGhpcy5fZGVwdGhDdWxsaW5nU3RhdGUuZGVwdGhGdW5jPWV9c2V0RGVwdGhGdW5jdGlvblRvR3JlYXRlcigpe3RoaXMuc2V0RGVwdGhGdW5jdGlvbig1MTYpfXNldERlcHRoRnVuY3Rpb25Ub0dyZWF0ZXJPckVxdWFsKCl7dGhpcy5zZXREZXB0aEZ1bmN0aW9uKDUxOCl9c2V0RGVwdGhGdW5jdGlvblRvTGVzcygpe3RoaXMuc2V0RGVwdGhGdW5jdGlvbig1MTMpfXNldERlcHRoRnVuY3Rpb25Ub0xlc3NPckVxdWFsKCl7dGhpcy5zZXREZXB0aEZ1bmN0aW9uKDUxNSl9Y2FjaGVTdGVuY2lsU3RhdGUoKXt0aGlzLl9jYWNoZWRTdGVuY2lsQnVmZmVyPXRoaXMuZ2V0U3RlbmNpbEJ1ZmZlcigpLHRoaXMuX2NhY2hlZFN0ZW5jaWxGdW5jdGlvbj10aGlzLmdldFN0ZW5jaWxGdW5jdGlvbigpLHRoaXMuX2NhY2hlZFN0ZW5jaWxNYXNrPXRoaXMuZ2V0U3RlbmNpbE1hc2soKSx0aGlzLl9jYWNoZWRTdGVuY2lsT3BlcmF0aW9uUGFzcz10aGlzLmdldFN0ZW5jaWxPcGVyYXRpb25QYXNzKCksdGhpcy5fY2FjaGVkU3RlbmNpbE9wZXJhdGlvbkZhaWw9dGhpcy5nZXRTdGVuY2lsT3BlcmF0aW9uRmFpbCgpLHRoaXMuX2NhY2hlZFN0ZW5jaWxPcGVyYXRpb25EZXB0aEZhaWw9dGhpcy5nZXRTdGVuY2lsT3BlcmF0aW9uRGVwdGhGYWlsKCksdGhpcy5fY2FjaGVkU3RlbmNpbFJlZmVyZW5jZT10aGlzLmdldFN0ZW5jaWxGdW5jdGlvblJlZmVyZW5jZSgpfXJlc3RvcmVTdGVuY2lsU3RhdGUoKXt0aGlzLnNldFN0ZW5jaWxGdW5jdGlvbih0aGlzLl9jYWNoZWRTdGVuY2lsRnVuY3Rpb24pLHRoaXMuc2V0U3RlbmNpbE1hc2sodGhpcy5fY2FjaGVkU3RlbmNpbE1hc2spLHRoaXMuc2V0U3RlbmNpbEJ1ZmZlcih0aGlzLl9jYWNoZWRTdGVuY2lsQnVmZmVyKSx0aGlzLnNldFN0ZW5jaWxPcGVyYXRpb25QYXNzKHRoaXMuX2NhY2hlZFN0ZW5jaWxPcGVyYXRpb25QYXNzKSx0aGlzLnNldFN0ZW5jaWxPcGVyYXRpb25GYWlsKHRoaXMuX2NhY2hlZFN0ZW5jaWxPcGVyYXRpb25GYWlsKSx0aGlzLnNldFN0ZW5jaWxPcGVyYXRpb25EZXB0aEZhaWwodGhpcy5fY2FjaGVkU3RlbmNpbE9wZXJhdGlvbkRlcHRoRmFpbCksdGhpcy5zZXRTdGVuY2lsRnVuY3Rpb25SZWZlcmVuY2UodGhpcy5fY2FjaGVkU3RlbmNpbFJlZmVyZW5jZSl9c2V0RGlyZWN0Vmlld3BvcnQoZSx0LGkscyl7Y29uc3Qgcj10aGlzLl9jYWNoZWRWaWV3cG9ydDtyZXR1cm4gdGhpcy5fY2FjaGVkVmlld3BvcnQ9bnVsbCx0aGlzLl92aWV3cG9ydChlLHQsaSxzKSxyfXNjaXNzb3JDbGVhcihlLHQsaSxzLHIpe3RoaXMuZW5hYmxlU2Npc3NvcihlLHQsaSxzKSx0aGlzLmNsZWFyKHIsITAsITAsITApLHRoaXMuZGlzYWJsZVNjaXNzb3IoKX1lbmFibGVTY2lzc29yKGUsdCxpLHMpe2NvbnN0IHI9dGhpcy5fZ2w7ci5lbmFibGUoci5TQ0lTU09SX1RFU1QpLHIuc2Npc3NvcihlLHQsaSxzKX1kaXNhYmxlU2Npc3Nvcigpe2NvbnN0IGU9dGhpcy5fZ2w7ZS5kaXNhYmxlKGUuU0NJU1NPUl9URVNUKX1fcmVwb3J0RHJhd0NhbGwoZT0xKXt0aGlzLl9kcmF3Q2FsbHMuYWRkQ291bnQoZSwhMSl9aW5pdFdlYlZSKCl7dGhyb3cgJCgiV2ViVlJDYW1lcmEiKX1fcHJlcGFyZVZSQ29tcG9uZW50KCl7fV9jb25uZWN0VlJFdmVudHMoZSx0KXt9X3N1Ym1pdFZSRnJhbWUoKXt9ZGlzYWJsZVZSKCl7fWlzVlJQcmVzZW50aW5nKCl7cmV0dXJuITF9X3JlcXVlc3RWUkZyYW1lKCl7fV9sb2FkRmlsZUFzeW5jKGUsdCxpKXtyZXR1cm4gbmV3IFByb21pc2UoKHMscik9Pnt0aGlzLl9sb2FkRmlsZShlLG49PntzKG4pfSx2b2lkIDAsdCxpLChuLGEpPT57cihhKX0pfSl9Z2V0VmVydGV4U2hhZGVyU291cmNlKGUpe2NvbnN0IHQ9dGhpcy5fZ2wuZ2V0QXR0YWNoZWRTaGFkZXJzKGUpO3JldHVybiB0P3RoaXMuX2dsLmdldFNoYWRlclNvdXJjZSh0WzBdKTpudWxsfWdldEZyYWdtZW50U2hhZGVyU291cmNlKGUpe2NvbnN0IHQ9dGhpcy5fZ2wuZ2V0QXR0YWNoZWRTaGFkZXJzKGUpO3JldHVybiB0P3RoaXMuX2dsLmdldFNoYWRlclNvdXJjZSh0WzFdKTpudWxsfXNldERlcHRoU3RlbmNpbFRleHR1cmUoZSx0LGkscyl7ZSE9PXZvaWQgMCYmKHQmJih0aGlzLl9ib3VuZFVuaWZvcm1zW2VdPXQpLCFpfHwhaS5kZXB0aFN0ZW5jaWxUZXh0dXJlP3RoaXMuX3NldFRleHR1cmUoZSxudWxsLHZvaWQgMCx2b2lkIDAscyk6dGhpcy5fc2V0VGV4dHVyZShlLGksITEsITAscykpfXNldFRleHR1cmVGcm9tUG9zdFByb2Nlc3MoZSx0LGkpe3ZhciBzO2xldCByPW51bGw7dCYmKHQuX3RleHR1cmVzLmRhdGFbdC5fY3VycmVudFJlbmRlclRleHR1cmVJbmRdP3I9dC5fdGV4dHVyZXMuZGF0YVt0Ll9jdXJyZW50UmVuZGVyVGV4dHVyZUluZF06dC5fZm9yY2VkT3V0cHV0VGV4dHVyZSYmKHI9dC5fZm9yY2VkT3V0cHV0VGV4dHVyZSkpLHRoaXMuX2JpbmRUZXh0dXJlKGUsKHM9cj09bnVsbD92b2lkIDA6ci50ZXh0dXJlKSE9PW51bGwmJnMhPT12b2lkIDA/czpudWxsLGkpfXNldFRleHR1cmVGcm9tUG9zdFByb2Nlc3NPdXRwdXQoZSx0LGkpe3ZhciBzLHI7dGhpcy5fYmluZFRleHR1cmUoZSwocj0ocz10PT1udWxsP3ZvaWQgMDp0Ll9vdXRwdXRUZXh0dXJlKT09PW51bGx8fHM9PT12b2lkIDA/dm9pZCAwOnMudGV4dHVyZSkhPT1udWxsJiZyIT09dm9pZCAwP3I6bnVsbCxpKX1fcmVidWlsZEJ1ZmZlcnMoKXtmb3IoY29uc3QgZSBvZiB0aGlzLnNjZW5lcyllLnJlc2V0Q2FjaGVkTWF0ZXJpYWwoKSxlLl9yZWJ1aWxkR2VvbWV0cmllcygpLGUuX3JlYnVpbGRUZXh0dXJlcygpO2Zvcihjb25zdCBlIG9mIHRoaXMuX3ZpcnR1YWxTY2VuZXMpZS5yZXNldENhY2hlZE1hdGVyaWFsKCksZS5fcmVidWlsZEdlb21ldHJpZXMoKSxlLl9yZWJ1aWxkVGV4dHVyZXMoKTtzdXBlci5fcmVidWlsZEJ1ZmZlcnMoKX1fcmVuZGVyRnJhbWUoKXtmb3IobGV0IGU9MDtlPHRoaXMuX2FjdGl2ZVJlbmRlckxvb3BzLmxlbmd0aDtlKyspe2NvbnN0IHQ9dGhpcy5fYWN0aXZlUmVuZGVyTG9vcHNbZV07dCgpfX1fcmVuZGVyTG9vcCgpe2lmKCF0aGlzLl9jb250ZXh0V2FzTG9zdCl7bGV0IGU9ITA7IXRoaXMucmVuZGVyRXZlbkluQmFja2dyb3VuZCYmdGhpcy5fd2luZG93SXNCYWNrZ3JvdW5kJiYoZT0hMSksZSYmKHRoaXMuYmVnaW5GcmFtZSgpLHRoaXMuX3JlbmRlclZpZXdzKCl8fHRoaXMuX3JlbmRlckZyYW1lKCksdGhpcy5lbmRGcmFtZSgpKX10aGlzLl9hY3RpdmVSZW5kZXJMb29wcy5sZW5ndGg+MD90aGlzLmN1c3RvbUFuaW1hdGlvbkZyYW1lUmVxdWVzdGVyPyh0aGlzLmN1c3RvbUFuaW1hdGlvbkZyYW1lUmVxdWVzdGVyLnJlcXVlc3RJRD10aGlzLl9xdWV1ZU5ld0ZyYW1lKHRoaXMuY3VzdG9tQW5pbWF0aW9uRnJhbWVSZXF1ZXN0ZXIucmVuZGVyRnVuY3Rpb258fHRoaXMuX2JvdW5kUmVuZGVyRnVuY3Rpb24sdGhpcy5jdXN0b21BbmltYXRpb25GcmFtZVJlcXVlc3RlciksdGhpcy5fZnJhbWVIYW5kbGVyPXRoaXMuY3VzdG9tQW5pbWF0aW9uRnJhbWVSZXF1ZXN0ZXIucmVxdWVzdElEKTp0aGlzLmlzVlJQcmVzZW50aW5nKCk/dGhpcy5fcmVxdWVzdFZSRnJhbWUoKTp0aGlzLl9mcmFtZUhhbmRsZXI9dGhpcy5fcXVldWVOZXdGcmFtZSh0aGlzLl9ib3VuZFJlbmRlckZ1bmN0aW9uLHRoaXMuZ2V0SG9zdFdpbmRvdygpKTp0aGlzLl9yZW5kZXJpbmdRdWV1ZUxhdW5jaGVkPSExfV9yZW5kZXJWaWV3cygpe3JldHVybiExfXN3aXRjaEZ1bGxzY3JlZW4oZSl7dGhpcy5pc0Z1bGxzY3JlZW4/dGhpcy5leGl0RnVsbHNjcmVlbigpOnRoaXMuZW50ZXJGdWxsc2NyZWVuKGUpfWVudGVyRnVsbHNjcmVlbihlKXt0aGlzLmlzRnVsbHNjcmVlbnx8KHRoaXMuX3BvaW50ZXJMb2NrUmVxdWVzdGVkPWUsdGhpcy5fcmVuZGVyaW5nQ2FudmFzJiZJLl9SZXF1ZXN0RnVsbHNjcmVlbih0aGlzLl9yZW5kZXJpbmdDYW52YXMpKX1leGl0RnVsbHNjcmVlbigpe3RoaXMuaXNGdWxsc2NyZWVuJiZJLl9FeGl0RnVsbHNjcmVlbigpfWVudGVyUG9pbnRlcmxvY2soKXt0aGlzLl9yZW5kZXJpbmdDYW52YXMmJkkuX1JlcXVlc3RQb2ludGVybG9jayh0aGlzLl9yZW5kZXJpbmdDYW52YXMpfWV4aXRQb2ludGVybG9jaygpe0kuX0V4aXRQb2ludGVybG9jaygpfWJlZ2luRnJhbWUoKXt0aGlzLl9tZWFzdXJlRnBzKCksdGhpcy5vbkJlZ2luRnJhbWVPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKSxzdXBlci5iZWdpbkZyYW1lKCl9ZW5kRnJhbWUoKXtzdXBlci5lbmRGcmFtZSgpLHRoaXMuX3N1Ym1pdFZSRnJhbWUoKSx0aGlzLm9uRW5kRnJhbWVPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKX1yZXNpemUoZT0hMSl7dGhpcy5pc1ZSUHJlc2VudGluZygpfHxzdXBlci5yZXNpemUoZSl9c2V0U2l6ZShlLHQsaT0hMSl7aWYoIXRoaXMuX3JlbmRlcmluZ0NhbnZhc3x8IXN1cGVyLnNldFNpemUoZSx0LGkpKXJldHVybiExO2lmKHRoaXMuc2NlbmVzKXtmb3IobGV0IHM9MDtzPHRoaXMuc2NlbmVzLmxlbmd0aDtzKyspe2NvbnN0IHI9dGhpcy5zY2VuZXNbc107Zm9yKGxldCBuPTA7bjxyLmNhbWVyYXMubGVuZ3RoO24rKyl7Y29uc3QgYT1yLmNhbWVyYXNbbl07YS5fY3VycmVudFJlbmRlcklkPTB9fXRoaXMub25SZXNpemVPYnNlcnZhYmxlLmhhc09ic2VydmVycygpJiZ0aGlzLm9uUmVzaXplT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyl9cmV0dXJuITB9X2RlbGV0ZVBpcGVsaW5lQ29udGV4dChlKXtjb25zdCB0PWU7dCYmdC5wcm9ncmFtJiZ0LnRyYW5zZm9ybUZlZWRiYWNrJiYodGhpcy5kZWxldGVUcmFuc2Zvcm1GZWVkYmFjayh0LnRyYW5zZm9ybUZlZWRiYWNrKSx0LnRyYW5zZm9ybUZlZWRiYWNrPW51bGwpLHN1cGVyLl9kZWxldGVQaXBlbGluZUNvbnRleHQoZSl9Y3JlYXRlU2hhZGVyUHJvZ3JhbShlLHQsaSxzLHIsbj1udWxsKXtyPXJ8fHRoaXMuX2dsLHRoaXMub25CZWZvcmVTaGFkZXJDb21waWxhdGlvbk9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpO2NvbnN0IGE9c3VwZXIuY3JlYXRlU2hhZGVyUHJvZ3JhbShlLHQsaSxzLHIsbik7cmV0dXJuIHRoaXMub25BZnRlclNoYWRlckNvbXBpbGF0aW9uT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyksYX1fY3JlYXRlU2hhZGVyUHJvZ3JhbShlLHQsaSxzLHI9bnVsbCl7Y29uc3Qgbj1zLmNyZWF0ZVByb2dyYW0oKTtpZihlLnByb2dyYW09biwhbil0aHJvdyBuZXcgRXJyb3IoIlVuYWJsZSB0byBjcmVhdGUgcHJvZ3JhbSIpO2lmKHMuYXR0YWNoU2hhZGVyKG4sdCkscy5hdHRhY2hTaGFkZXIobixpKSx0aGlzLndlYkdMVmVyc2lvbj4xJiZyKXtjb25zdCBhPXRoaXMuY3JlYXRlVHJhbnNmb3JtRmVlZGJhY2soKTt0aGlzLmJpbmRUcmFuc2Zvcm1GZWVkYmFjayhhKSx0aGlzLnNldFRyYW5mb3JtRmVlZGJhY2tWYXJ5aW5ncyhuLHIpLGUudHJhbnNmb3JtRmVlZGJhY2s9YX1yZXR1cm4gcy5saW5rUHJvZ3JhbShuKSx0aGlzLndlYkdMVmVyc2lvbj4xJiZyJiZ0aGlzLmJpbmRUcmFuc2Zvcm1GZWVkYmFjayhudWxsKSxlLmNvbnRleHQ9cyxlLnZlcnRleFNoYWRlcj10LGUuZnJhZ21lbnRTaGFkZXI9aSxlLmlzUGFyYWxsZWxDb21waWxlZHx8dGhpcy5fZmluYWxpemVQaXBlbGluZUNvbnRleHQoZSksbn1fcmVsZWFzZVRleHR1cmUoZSl7c3VwZXIuX3JlbGVhc2VUZXh0dXJlKGUpfV9yZWxlYXNlUmVuZGVyVGFyZ2V0V3JhcHBlcihlKXtzdXBlci5fcmVsZWFzZVJlbmRlclRhcmdldFdyYXBwZXIoZSksdGhpcy5zY2VuZXMuZm9yRWFjaCh0PT57dC5wb3N0UHJvY2Vzc2VzLmZvckVhY2goaT0+e2kuX291dHB1dFRleHR1cmU9PT1lJiYoaS5fb3V0cHV0VGV4dHVyZT1udWxsKX0pLHQuY2FtZXJhcy5mb3JFYWNoKGk9PntpLl9wb3N0UHJvY2Vzc2VzLmZvckVhY2gocz0+e3MmJnMuX291dHB1dFRleHR1cmU9PT1lJiYocy5fb3V0cHV0VGV4dHVyZT1udWxsKX0pfSl9KX1nZXRSZW5kZXJQYXNzTmFtZXMoKXtyZXR1cm4gdGhpcy5fcmVuZGVyUGFzc05hbWVzfWdldEN1cnJlbnRSZW5kZXJQYXNzTmFtZSgpe3JldHVybiB0aGlzLl9yZW5kZXJQYXNzTmFtZXNbdGhpcy5jdXJyZW50UmVuZGVyUGFzc0lkXX1jcmVhdGVSZW5kZXJQYXNzSWQoZSl7Y29uc3QgdD0rK0kuX1JlbmRlclBhc3NJZENvdW50ZXI7cmV0dXJuIHRoaXMuX3JlbmRlclBhc3NOYW1lc1t0XT1lPz8iTk9OQU1FIix0fXJlbGVhc2VSZW5kZXJQYXNzSWQoZSl7dGhpcy5fcmVuZGVyUGFzc05hbWVzW2VdPXZvaWQgMDtmb3IobGV0IHQ9MDt0PHRoaXMuc2NlbmVzLmxlbmd0aDsrK3Qpe2NvbnN0IGk9dGhpcy5zY2VuZXNbdF07Zm9yKGxldCBzPTA7czxpLm1lc2hlcy5sZW5ndGg7KytzKXtjb25zdCByPWkubWVzaGVzW3NdO2lmKHIuc3ViTWVzaGVzKWZvcihsZXQgbj0wO248ci5zdWJNZXNoZXMubGVuZ3RoOysrbilyLnN1Yk1lc2hlc1tuXS5fcmVtb3ZlRHJhd1dyYXBwZXIoZSl9fX1fcmVzY2FsZVRleHR1cmUoZSx0LGkscyxyKXt0aGlzLl9nbC50ZXhQYXJhbWV0ZXJpKHRoaXMuX2dsLlRFWFRVUkVfMkQsdGhpcy5fZ2wuVEVYVFVSRV9NQUdfRklMVEVSLHRoaXMuX2dsLkxJTkVBUiksdGhpcy5fZ2wudGV4UGFyYW1ldGVyaSh0aGlzLl9nbC5URVhUVVJFXzJELHRoaXMuX2dsLlRFWFRVUkVfTUlOX0ZJTFRFUix0aGlzLl9nbC5MSU5FQVIpLHRoaXMuX2dsLnRleFBhcmFtZXRlcmkodGhpcy5fZ2wuVEVYVFVSRV8yRCx0aGlzLl9nbC5URVhUVVJFX1dSQVBfUyx0aGlzLl9nbC5DTEFNUF9UT19FREdFKSx0aGlzLl9nbC50ZXhQYXJhbWV0ZXJpKHRoaXMuX2dsLlRFWFRVUkVfMkQsdGhpcy5fZ2wuVEVYVFVSRV9XUkFQX1QsdGhpcy5fZ2wuQ0xBTVBfVE9fRURHRSk7Y29uc3Qgbj10aGlzLmNyZWF0ZVJlbmRlclRhcmdldFRleHR1cmUoe3dpZHRoOnQud2lkdGgsaGVpZ2h0OnQuaGVpZ2h0fSx7Z2VuZXJhdGVNaXBNYXBzOiExLHR5cGU6MCxzYW1wbGluZ01vZGU6MixnZW5lcmF0ZURlcHRoQnVmZmVyOiExLGdlbmVyYXRlU3RlbmNpbEJ1ZmZlcjohMX0pOyF0aGlzLl9yZXNjYWxlUG9zdFByb2Nlc3MmJkkuX1Jlc2NhbGVQb3N0UHJvY2Vzc0ZhY3RvcnkmJih0aGlzLl9yZXNjYWxlUG9zdFByb2Nlc3M9SS5fUmVzY2FsZVBvc3RQcm9jZXNzRmFjdG9yeSh0aGlzKSksdGhpcy5fcmVzY2FsZVBvc3RQcm9jZXNzJiYodGhpcy5fcmVzY2FsZVBvc3RQcm9jZXNzLmV4dGVybmFsVGV4dHVyZVNhbXBsZXJCaW5kaW5nPSEwLHRoaXMuX3Jlc2NhbGVQb3N0UHJvY2Vzcy5nZXRFZmZlY3QoKS5leGVjdXRlV2hlbkNvbXBpbGVkKCgpPT57dGhpcy5fcmVzY2FsZVBvc3RQcm9jZXNzLm9uQXBwbHk9ZnVuY3Rpb24obyl7by5fYmluZFRleHR1cmUoInRleHR1cmVTYW1wbGVyIixlKX07bGV0IGE9aTthfHwoYT10aGlzLnNjZW5lc1t0aGlzLnNjZW5lcy5sZW5ndGgtMV0pLGEucG9zdFByb2Nlc3NNYW5hZ2VyLmRpcmVjdFJlbmRlcihbdGhpcy5fcmVzY2FsZVBvc3RQcm9jZXNzXSxuLCEwKSx0aGlzLl9iaW5kVGV4dHVyZURpcmVjdGx5KHRoaXMuX2dsLlRFWFRVUkVfMkQsdCwhMCksdGhpcy5fZ2wuY29weVRleEltYWdlMkQodGhpcy5fZ2wuVEVYVFVSRV8yRCwwLHMsMCwwLHQud2lkdGgsdC5oZWlnaHQsMCksdGhpcy51bkJpbmRGcmFtZWJ1ZmZlcihuKSxuLmRpc3Bvc2UoKSxyJiZyKCl9KSl9Z2V0RnBzKCl7cmV0dXJuIHRoaXMuX2Zwc31nZXREZWx0YVRpbWUoKXtyZXR1cm4gdGhpcy5fZGVsdGFUaW1lfV9tZWFzdXJlRnBzKCl7dGhpcy5fcGVyZm9ybWFuY2VNb25pdG9yLnNhbXBsZUZyYW1lKCksdGhpcy5fZnBzPXRoaXMuX3BlcmZvcm1hbmNlTW9uaXRvci5hdmVyYWdlRlBTLHRoaXMuX2RlbHRhVGltZT10aGlzLl9wZXJmb3JtYW5jZU1vbml0b3IuaW5zdGFudGFuZW91c0ZyYW1lVGltZXx8MH13cmFwV2ViR0xUZXh0dXJlKGUpe2NvbnN0IHQ9bmV3IHRyKGUsdGhpcy5fZ2wpLGk9bmV3IE90KHRoaXMsTmUuVW5rbm93biwhMCk7cmV0dXJuIGkuX2hhcmR3YXJlVGV4dHVyZT10LGkuaXNSZWFkeT0hMCxpfV91cGxvYWRJbWFnZVRvVGV4dHVyZShlLHQsaT0wLHM9MCl7Y29uc3Qgcj10aGlzLl9nbCxuPXRoaXMuX2dldFdlYkdMVGV4dHVyZVR5cGUoZS50eXBlKSxhPXRoaXMuX2dldEludGVybmFsRm9ybWF0KGUuZm9ybWF0KSxvPXRoaXMuX2dldFJHQkFCdWZmZXJJbnRlcm5hbFNpemVkRm9ybWF0KGUudHlwZSxhKSxoPWUuaXNDdWJlP3IuVEVYVFVSRV9DVUJFX01BUDpyLlRFWFRVUkVfMkQ7dGhpcy5fYmluZFRleHR1cmVEaXJlY3RseShoLGUsITApLHRoaXMuX3VucGFja0ZsaXBZKGUuaW52ZXJ0WSk7bGV0IGw9ci5URVhUVVJFXzJEO2UuaXNDdWJlJiYobD1yLlRFWFRVUkVfQ1VCRV9NQVBfUE9TSVRJVkVfWCtpKSxyLnRleEltYWdlMkQobCxzLG8sYSxuLHQpLHRoaXMuX2JpbmRUZXh0dXJlRGlyZWN0bHkoaCxudWxsLCEwKX11cGRhdGVUZXh0dXJlQ29tcGFyaXNvbkZ1bmN0aW9uKGUsdCl7aWYodGhpcy53ZWJHTFZlcnNpb249PT0xKXtPLkVycm9yKCJXZWJHTCAxIGRvZXMgbm90IHN1cHBvcnQgdGV4dHVyZSBjb21wYXJpc29uLiIpO3JldHVybn1jb25zdCBpPXRoaXMuX2dsO2UuaXNDdWJlPyh0aGlzLl9iaW5kVGV4dHVyZURpcmVjdGx5KHRoaXMuX2dsLlRFWFRVUkVfQ1VCRV9NQVAsZSwhMCksdD09PTA/KGkudGV4UGFyYW1ldGVyaShpLlRFWFRVUkVfQ1VCRV9NQVAsaS5URVhUVVJFX0NPTVBBUkVfRlVOQyw1MTUpLGkudGV4UGFyYW1ldGVyaShpLlRFWFRVUkVfQ1VCRV9NQVAsaS5URVhUVVJFX0NPTVBBUkVfTU9ERSxpLk5PTkUpKTooaS50ZXhQYXJhbWV0ZXJpKGkuVEVYVFVSRV9DVUJFX01BUCxpLlRFWFRVUkVfQ09NUEFSRV9GVU5DLHQpLGkudGV4UGFyYW1ldGVyaShpLlRFWFRVUkVfQ1VCRV9NQVAsaS5URVhUVVJFX0NPTVBBUkVfTU9ERSxpLkNPTVBBUkVfUkVGX1RPX1RFWFRVUkUpKSx0aGlzLl9iaW5kVGV4dHVyZURpcmVjdGx5KHRoaXMuX2dsLlRFWFRVUkVfQ1VCRV9NQVAsbnVsbCkpOih0aGlzLl9iaW5kVGV4dHVyZURpcmVjdGx5KHRoaXMuX2dsLlRFWFRVUkVfMkQsZSwhMCksdD09PTA/KGkudGV4UGFyYW1ldGVyaShpLlRFWFRVUkVfMkQsaS5URVhUVVJFX0NPTVBBUkVfRlVOQyw1MTUpLGkudGV4UGFyYW1ldGVyaShpLlRFWFRVUkVfMkQsaS5URVhUVVJFX0NPTVBBUkVfTU9ERSxpLk5PTkUpKTooaS50ZXhQYXJhbWV0ZXJpKGkuVEVYVFVSRV8yRCxpLlRFWFRVUkVfQ09NUEFSRV9GVU5DLHQpLGkudGV4UGFyYW1ldGVyaShpLlRFWFRVUkVfMkQsaS5URVhUVVJFX0NPTVBBUkVfTU9ERSxpLkNPTVBBUkVfUkVGX1RPX1RFWFRVUkUpKSx0aGlzLl9iaW5kVGV4dHVyZURpcmVjdGx5KHRoaXMuX2dsLlRFWFRVUkVfMkQsbnVsbCkpLGUuX2NvbXBhcmlzb25GdW5jdGlvbj10fWNyZWF0ZUluc3RhbmNlc0J1ZmZlcihlKXtjb25zdCB0PXRoaXMuX2dsLmNyZWF0ZUJ1ZmZlcigpO2lmKCF0KXRocm93IG5ldyBFcnJvcigiVW5hYmxlIHRvIGNyZWF0ZSBpbnN0YW5jZSBidWZmZXIiKTtjb25zdCBpPW5ldyBEaSh0KTtyZXR1cm4gaS5jYXBhY2l0eT1lLHRoaXMuYmluZEFycmF5QnVmZmVyKGkpLHRoaXMuX2dsLmJ1ZmZlckRhdGEodGhpcy5fZ2wuQVJSQVlfQlVGRkVSLGUsdGhpcy5fZ2wuRFlOQU1JQ19EUkFXKSxpLnJlZmVyZW5jZXM9MSxpfWRlbGV0ZUluc3RhbmNlc0J1ZmZlcihlKXt0aGlzLl9nbC5kZWxldGVCdWZmZXIoZSl9X2NsaWVudFdhaXRBc3luYyhlLHQ9MCxpPTEwKXtjb25zdCBzPXRoaXMuX2dsO3JldHVybiBuZXcgUHJvbWlzZSgocixuKT0+e2NvbnN0IGE9KCk9Pntjb25zdCBvPXMuY2xpZW50V2FpdFN5bmMoZSx0LDApO2lmKG89PXMuV0FJVF9GQUlMRUQpe24oKTtyZXR1cm59aWYobz09cy5USU1FT1VUX0VYUElSRUQpe3NldFRpbWVvdXQoYSxpKTtyZXR1cm59cigpfTthKCl9KX1fcmVhZFBpeGVsc0FzeW5jKGUsdCxpLHMscixuLGEpe2lmKHRoaXMuX3dlYkdMVmVyc2lvbjwyKXRocm93IG5ldyBFcnJvcigiX3JlYWRQaXhlbHNBc3luYyBvbmx5IHdvcmsgb24gV2ViR0wyKyIpO2NvbnN0IG89dGhpcy5fZ2wsaD1vLmNyZWF0ZUJ1ZmZlcigpO28uYmluZEJ1ZmZlcihvLlBJWEVMX1BBQ0tfQlVGRkVSLGgpLG8uYnVmZmVyRGF0YShvLlBJWEVMX1BBQ0tfQlVGRkVSLGEuYnl0ZUxlbmd0aCxvLlNUUkVBTV9SRUFEKSxvLnJlYWRQaXhlbHMoZSx0LGkscyxyLG4sMCksby5iaW5kQnVmZmVyKG8uUElYRUxfUEFDS19CVUZGRVIsbnVsbCk7Y29uc3QgbD1vLmZlbmNlU3luYyhvLlNZTkNfR1BVX0NPTU1BTkRTX0NPTVBMRVRFLDApO3JldHVybiBsPyhvLmZsdXNoKCksdGhpcy5fY2xpZW50V2FpdEFzeW5jKGwsMCwxMCkudGhlbigoKT0+KG8uZGVsZXRlU3luYyhsKSxvLmJpbmRCdWZmZXIoby5QSVhFTF9QQUNLX0JVRkZFUixoKSxvLmdldEJ1ZmZlclN1YkRhdGEoby5QSVhFTF9QQUNLX0JVRkZFUiwwLGEpLG8uYmluZEJ1ZmZlcihvLlBJWEVMX1BBQ0tfQlVGRkVSLG51bGwpLG8uZGVsZXRlQnVmZmVyKGgpLGEpKSk6bnVsbH1kaXNwb3NlKCl7Zm9yKHRoaXMuaGlkZUxvYWRpbmdVSSgpLHRoaXMub25OZXdTY2VuZUFkZGVkT2JzZXJ2YWJsZS5jbGVhcigpO3RoaXMucG9zdFByb2Nlc3Nlcy5sZW5ndGg7KXRoaXMucG9zdFByb2Nlc3Nlc1swXS5kaXNwb3NlKCk7Zm9yKHRoaXMuX3Jlc2NhbGVQb3N0UHJvY2VzcyYmdGhpcy5fcmVzY2FsZVBvc3RQcm9jZXNzLmRpc3Bvc2UoKTt0aGlzLnNjZW5lcy5sZW5ndGg7KXRoaXMuc2NlbmVzWzBdLmRpc3Bvc2UoKTtmb3IoO3RoaXMuX3ZpcnR1YWxTY2VuZXMubGVuZ3RoOyl0aGlzLl92aXJ0dWFsU2NlbmVzWzBdLmRpc3Bvc2UoKTtJLkluc3RhbmNlcy5sZW5ndGg9PT0xJiZJLmF1ZGlvRW5naW5lJiYoSS5hdWRpb0VuZ2luZS5kaXNwb3NlKCksSS5hdWRpb0VuZ2luZT1udWxsKSx0aGlzLmRpc2FibGVWUigpO2NvbnN0IGU9dGhpcy5nZXRIb3N0V2luZG93KCk7ZSYmdHlwZW9mIGUucmVtb3ZlRXZlbnRMaXN0ZW5lcj09ImZ1bmN0aW9uIiYmKGUucmVtb3ZlRXZlbnRMaXN0ZW5lcigiYmx1ciIsdGhpcy5fb25CbHVyKSxlLnJlbW92ZUV2ZW50TGlzdGVuZXIoImZvY3VzIix0aGlzLl9vbkZvY3VzKSksdGhpcy5fcmVuZGVyaW5nQ2FudmFzJiYodGhpcy5fcmVuZGVyaW5nQ2FudmFzLnJlbW92ZUV2ZW50TGlzdGVuZXIoImZvY3VzIix0aGlzLl9vbkNhbnZhc0ZvY3VzKSx0aGlzLl9yZW5kZXJpbmdDYW52YXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigiYmx1ciIsdGhpcy5fb25DYW52YXNCbHVyKSx0aGlzLl9yZW5kZXJpbmdDYW52YXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigicG9pbnRlcm91dCIsdGhpcy5fb25DYW52YXNQb2ludGVyT3V0KSx0aGlzLl9yZW5kZXJpbmdDYW52YXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY29udGV4dG1lbnUiLHRoaXMuX29uQ2FudmFzQ29udGV4dE1lbnUpKSxDaSgpJiYoZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigiZnVsbHNjcmVlbmNoYW5nZSIsdGhpcy5fb25GdWxsc2NyZWVuQ2hhbmdlKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJtb3pmdWxsc2NyZWVuY2hhbmdlIix0aGlzLl9vbkZ1bGxzY3JlZW5DaGFuZ2UpLGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIndlYmtpdGZ1bGxzY3JlZW5jaGFuZ2UiLHRoaXMuX29uRnVsbHNjcmVlbkNoYW5nZSksZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigibXNmdWxsc2NyZWVuY2hhbmdlIix0aGlzLl9vbkZ1bGxzY3JlZW5DaGFuZ2UpLGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoInBvaW50ZXJsb2NrY2hhbmdlIix0aGlzLl9vblBvaW50ZXJMb2NrQ2hhbmdlKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJtc3BvaW50ZXJsb2NrY2hhbmdlIix0aGlzLl9vblBvaW50ZXJMb2NrQ2hhbmdlKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJtb3pwb2ludGVybG9ja2NoYW5nZSIsdGhpcy5fb25Qb2ludGVyTG9ja0NoYW5nZSksZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigid2Via2l0cG9pbnRlcmxvY2tjaGFuZ2UiLHRoaXMuX29uUG9pbnRlckxvY2tDaGFuZ2UpKSxzdXBlci5kaXNwb3NlKCk7Y29uc3QgdD1JLkluc3RhbmNlcy5pbmRleE9mKHRoaXMpO3Q+PTAmJkkuSW5zdGFuY2VzLnNwbGljZSh0LDEpLHRoaXMub25SZXNpemVPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkNhbnZhc0JsdXJPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkNhbnZhc0ZvY3VzT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25DYW52YXNQb2ludGVyT3V0T2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25CZWdpbkZyYW1lT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25FbmRGcmFtZU9ic2VydmFibGUuY2xlYXIoKX1fZGlzYWJsZVRvdWNoQWN0aW9uKCl7IXRoaXMuX3JlbmRlcmluZ0NhbnZhc3x8IXRoaXMuX3JlbmRlcmluZ0NhbnZhcy5zZXRBdHRyaWJ1dGV8fCh0aGlzLl9yZW5kZXJpbmdDYW52YXMuc2V0QXR0cmlidXRlKCJ0b3VjaC1hY3Rpb24iLCJub25lIiksdGhpcy5fcmVuZGVyaW5nQ2FudmFzLnN0eWxlLnRvdWNoQWN0aW9uPSJub25lIix0aGlzLl9yZW5kZXJpbmdDYW52YXMuc3R5bGUud2Via2l0VGFwSGlnaGxpZ2h0Q29sb3I9InRyYW5zcGFyZW50Iil9ZGlzcGxheUxvYWRpbmdVSSgpe2lmKCFqZSgpKXJldHVybjtjb25zdCBlPXRoaXMubG9hZGluZ1NjcmVlbjtlJiZlLmRpc3BsYXlMb2FkaW5nVUkoKX1oaWRlTG9hZGluZ1VJKCl7aWYoIWplKCkpcmV0dXJuO2NvbnN0IGU9dGhpcy5fbG9hZGluZ1NjcmVlbjtlJiZlLmhpZGVMb2FkaW5nVUkoKX1nZXQgbG9hZGluZ1NjcmVlbigpe3JldHVybiF0aGlzLl9sb2FkaW5nU2NyZWVuJiZ0aGlzLl9yZW5kZXJpbmdDYW52YXMmJih0aGlzLl9sb2FkaW5nU2NyZWVuPUkuRGVmYXVsdExvYWRpbmdTY3JlZW5GYWN0b3J5KHRoaXMuX3JlbmRlcmluZ0NhbnZhcykpLHRoaXMuX2xvYWRpbmdTY3JlZW59c2V0IGxvYWRpbmdTY3JlZW4oZSl7dGhpcy5fbG9hZGluZ1NjcmVlbj1lfXNldCBsb2FkaW5nVUlUZXh0KGUpe3RoaXMubG9hZGluZ1NjcmVlbi5sb2FkaW5nVUlUZXh0PWV9c2V0IGxvYWRpbmdVSUJhY2tncm91bmRDb2xvcihlKXt0aGlzLmxvYWRpbmdTY3JlZW4ubG9hZGluZ1VJQmFja2dyb3VuZENvbG9yPWV9Y3JlYXRlVmlkZW9FbGVtZW50KGUpe3JldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ2aWRlbyIpfXN0YXRpYyBfUmVxdWVzdFBvaW50ZXJsb2NrKGUpe2UucmVxdWVzdFBvaW50ZXJMb2NrJiYoZS5yZXF1ZXN0UG9pbnRlckxvY2soKSxlLmZvY3VzKCkpfXN0YXRpYyBfRXhpdFBvaW50ZXJsb2NrKCl7ZG9jdW1lbnQuZXhpdFBvaW50ZXJMb2NrJiZkb2N1bWVudC5leGl0UG9pbnRlckxvY2soKX1zdGF0aWMgX1JlcXVlc3RGdWxsc2NyZWVuKGUpe2NvbnN0IHQ9ZS5yZXF1ZXN0RnVsbHNjcmVlbnx8ZS53ZWJraXRSZXF1ZXN0RnVsbHNjcmVlbjt0JiZ0LmNhbGwoZSl9c3RhdGljIF9FeGl0RnVsbHNjcmVlbigpe2NvbnN0IGU9ZG9jdW1lbnQ7ZG9jdW1lbnQuZXhpdEZ1bGxzY3JlZW4/ZG9jdW1lbnQuZXhpdEZ1bGxzY3JlZW4oKTplLndlYmtpdENhbmNlbEZ1bGxTY3JlZW4mJmUud2Via2l0Q2FuY2VsRnVsbFNjcmVlbigpfWdldEZvbnRPZmZzZXQoZSl7Y29uc3QgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7dC5pbm5lckhUTUw9IkhnIix0LnNldEF0dHJpYnV0ZSgic3R5bGUiLGBmb250OiAke2V9ICFpbXBvcnRhbnRgKTtjb25zdCBpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO2kuc3R5bGUuZGlzcGxheT0iaW5saW5lLWJsb2NrIixpLnN0eWxlLndpZHRoPSIxcHgiLGkuc3R5bGUuaGVpZ2h0PSIwcHgiLGkuc3R5bGUudmVydGljYWxBbGlnbj0iYm90dG9tIjtjb25zdCBzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3Muc3R5bGUud2hpdGVTcGFjZT0ibm93cmFwIixzLmFwcGVuZENoaWxkKHQpLHMuYXBwZW5kQ2hpbGQoaSksZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzKTtsZXQgcj0wLG49MDt0cnl7bj1pLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcC10LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCxpLnN0eWxlLnZlcnRpY2FsQWxpZ249ImJhc2VsaW5lIixyPWkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wLXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wfWZpbmFsbHl7ZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChzKX1yZXR1cm57YXNjZW50OnIsaGVpZ2h0Om4sZGVzY2VudDpuLXJ9fX1JLkFMUEhBX0RJU0FCTEU9MCxJLkFMUEhBX0FERD0xLEkuQUxQSEFfQ09NQklORT0yLEkuQUxQSEFfU1VCVFJBQ1Q9MyxJLkFMUEhBX01VTFRJUExZPTQsSS5BTFBIQV9NQVhJTUlaRUQ9NSxJLkFMUEhBX09ORU9ORT02LEkuQUxQSEFfUFJFTVVMVElQTElFRD03LEkuQUxQSEFfUFJFTVVMVElQTElFRF9QT1JURVJEVUZGPTgsSS5BTFBIQV9JTlRFUlBPTEFURT05LEkuQUxQSEFfU0NSRUVOTU9ERT0xMCxJLkRFTEFZTE9BRFNUQVRFX05PTkU9MCxJLkRFTEFZTE9BRFNUQVRFX0xPQURFRD0xLEkuREVMQVlMT0FEU1RBVEVfTE9BRElORz0yLEkuREVMQVlMT0FEU1RBVEVfTk9UTE9BREVEPTQsSS5ORVZFUj01MTIsSS5BTFdBWVM9NTE5LEkuTEVTUz01MTMsSS5FUVVBTD01MTQsSS5MRVFVQUw9NTE1LEkuR1JFQVRFUj01MTYsSS5HRVFVQUw9NTE4LEkuTk9URVFVQUw9NTE3LEkuS0VFUD03NjgwLEkuUkVQTEFDRT03NjgxLEkuSU5DUj03NjgyLEkuREVDUj03NjgzLEkuSU5WRVJUPTUzODYsSS5JTkNSX1dSQVA9MzQwNTUsSS5ERUNSX1dSQVA9MzQwNTYsSS5URVhUVVJFX0NMQU1QX0FERFJFU1NNT0RFPTAsSS5URVhUVVJFX1dSQVBfQUREUkVTU01PREU9MSxJLlRFWFRVUkVfTUlSUk9SX0FERFJFU1NNT0RFPTIsSS5URVhUVVJFRk9STUFUX0FMUEhBPTAsSS5URVhUVVJFRk9STUFUX0xVTUlOQU5DRT0xLEkuVEVYVFVSRUZPUk1BVF9MVU1JTkFOQ0VfQUxQSEE9MixJLlRFWFRVUkVGT1JNQVRfUkdCPTQsSS5URVhUVVJFRk9STUFUX1JHQkE9NSxJLlRFWFRVUkVGT1JNQVRfUkVEPTYsSS5URVhUVVJFRk9STUFUX1I9NixJLlRFWFRVUkVGT1JNQVRfUkc9NyxJLlRFWFRVUkVGT1JNQVRfUkVEX0lOVEVHRVI9OCxJLlRFWFRVUkVGT1JNQVRfUl9JTlRFR0VSPTgsSS5URVhUVVJFRk9STUFUX1JHX0lOVEVHRVI9OSxJLlRFWFRVUkVGT1JNQVRfUkdCX0lOVEVHRVI9MTAsSS5URVhUVVJFRk9STUFUX1JHQkFfSU5URUdFUj0xMSxJLlRFWFRVUkVUWVBFX1VOU0lHTkVEX0JZVEU9MCxJLlRFWFRVUkVUWVBFX1VOU0lHTkVEX0lOVD0wLEkuVEVYVFVSRVRZUEVfRkxPQVQ9MSxJLlRFWFRVUkVUWVBFX0hBTEZfRkxPQVQ9MixJLlRFWFRVUkVUWVBFX0JZVEU9MyxJLlRFWFRVUkVUWVBFX1NIT1JUPTQsSS5URVhUVVJFVFlQRV9VTlNJR05FRF9TSE9SVD01LEkuVEVYVFVSRVRZUEVfSU5UPTYsSS5URVhUVVJFVFlQRV9VTlNJR05FRF9JTlRFR0VSPTcsSS5URVhUVVJFVFlQRV9VTlNJR05FRF9TSE9SVF80XzRfNF80PTgsSS5URVhUVVJFVFlQRV9VTlNJR05FRF9TSE9SVF81XzVfNV8xPTksSS5URVhUVVJFVFlQRV9VTlNJR05FRF9TSE9SVF81XzZfNT0xMCxJLlRFWFRVUkVUWVBFX1VOU0lHTkVEX0lOVF8yXzEwXzEwXzEwX1JFVj0xMSxJLlRFWFRVUkVUWVBFX1VOU0lHTkVEX0lOVF8yNF84PTEyLEkuVEVYVFVSRVRZUEVfVU5TSUdORURfSU5UXzEwRl8xMUZfMTFGX1JFVj0xMyxJLlRFWFRVUkVUWVBFX1VOU0lHTkVEX0lOVF81XzlfOV85X1JFVj0xNCxJLlRFWFRVUkVUWVBFX0ZMT0FUXzMyX1VOU0lHTkVEX0lOVF8yNF84X1JFVj0xNSxJLlRFWFRVUkVfTkVBUkVTVF9TQU1QTElOR01PREU9MSxJLlRFWFRVUkVfQklMSU5FQVJfU0FNUExJTkdNT0RFPTIsSS5URVhUVVJFX1RSSUxJTkVBUl9TQU1QTElOR01PREU9MyxJLlRFWFRVUkVfTkVBUkVTVF9ORUFSRVNUX01JUExJTkVBUj04LEkuVEVYVFVSRV9MSU5FQVJfTElORUFSX01JUE5FQVJFU1Q9MTEsSS5URVhUVVJFX0xJTkVBUl9MSU5FQVJfTUlQTElORUFSPTMsSS5URVhUVVJFX05FQVJFU1RfTkVBUkVTVF9NSVBORUFSRVNUPTQsSS5URVhUVVJFX05FQVJFU1RfTElORUFSX01JUE5FQVJFU1Q9NSxJLlRFWFRVUkVfTkVBUkVTVF9MSU5FQVJfTUlQTElORUFSPTYsSS5URVhUVVJFX05FQVJFU1RfTElORUFSPTcsSS5URVhUVVJFX05FQVJFU1RfTkVBUkVTVD0xLEkuVEVYVFVSRV9MSU5FQVJfTkVBUkVTVF9NSVBORUFSRVNUPTksSS5URVhUVVJFX0xJTkVBUl9ORUFSRVNUX01JUExJTkVBUj0xMCxJLlRFWFRVUkVfTElORUFSX0xJTkVBUj0yLEkuVEVYVFVSRV9MSU5FQVJfTkVBUkVTVD0xMixJLlRFWFRVUkVfRVhQTElDSVRfTU9ERT0wLEkuVEVYVFVSRV9TUEhFUklDQUxfTU9ERT0xLEkuVEVYVFVSRV9QTEFOQVJfTU9ERT0yLEkuVEVYVFVSRV9DVUJJQ19NT0RFPTMsSS5URVhUVVJFX1BST0pFQ1RJT05fTU9ERT00LEkuVEVYVFVSRV9TS1lCT1hfTU9ERT01LEkuVEVYVFVSRV9JTlZDVUJJQ19NT0RFPTYsSS5URVhUVVJFX0VRVUlSRUNUQU5HVUxBUl9NT0RFPTcsSS5URVhUVVJFX0ZJWEVEX0VRVUlSRUNUQU5HVUxBUl9NT0RFPTgsSS5URVhUVVJFX0ZJWEVEX0VRVUlSRUNUQU5HVUxBUl9NSVJST1JFRF9NT0RFPTksSS5TQ0FMRU1PREVfRkxPT1I9MSxJLlNDQUxFTU9ERV9ORUFSRVNUPTIsSS5TQ0FMRU1PREVfQ0VJTElORz0zLEkuX1Jlc2NhbGVQb3N0UHJvY2Vzc0ZhY3Rvcnk9bnVsbCxJLl9SZW5kZXJQYXNzSWRDb3VudGVyPTAsb2UucHJvdG90eXBlLl9kZWJ1Z1B1c2hHcm91cD1mdW5jdGlvbihjLGUpe30sb2UucHJvdG90eXBlLl9kZWJ1Z1BvcEdyb3VwPWZ1bmN0aW9uKGMpe30sb2UucHJvdG90eXBlLl9kZWJ1Z0luc2VydE1hcmtlcj1mdW5jdGlvbihjLGUpe30sb2UucHJvdG90eXBlLl9kZWJ1Z0ZsdXNoUGVuZGluZ0NvbW1hbmRzPWZ1bmN0aW9uKCl7fTtmdW5jdGlvbiBnbihjKXtyZXR1cm4gbmV3IEkoYywhMCx7cHJlc2VydmVEcmF3aW5nQnVmZmVyOiEwLHN0ZW5jaWw6ITB9KX1jbGFzcyByZXtjb25zdHJ1Y3RvcihlPTAsdD0wLGk9MCl7dGhpcy5yPWUsdGhpcy5nPXQsdGhpcy5iPWl9dG9TdHJpbmcoKXtyZXR1cm4ie1I6ICIrdGhpcy5yKyIgRzoiK3RoaXMuZysiIEI6Iit0aGlzLmIrIn0ifWdldENsYXNzTmFtZSgpe3JldHVybiJDb2xvcjMifWdldEhhc2hDb2RlKCl7bGV0IGU9dGhpcy5yKjI1NXwwO3JldHVybiBlPWUqMzk3Xih0aGlzLmcqMjU1fDApLGU9ZSozOTdeKHRoaXMuYioyNTV8MCksZX10b0FycmF5KGUsdD0wKXtyZXR1cm4gZVt0XT10aGlzLnIsZVt0KzFdPXRoaXMuZyxlW3QrMl09dGhpcy5iLHRoaXN9ZnJvbUFycmF5KGUsdD0wKXtyZXR1cm4gcmUuRnJvbUFycmF5VG9SZWYoZSx0LHRoaXMpLHRoaXN9dG9Db2xvcjQoZT0xKXtyZXR1cm4gbmV3IG1lKHRoaXMucix0aGlzLmcsdGhpcy5iLGUpfWFzQXJyYXkoKXtyZXR1cm5bdGhpcy5yLHRoaXMuZyx0aGlzLmJdfXRvTHVtaW5hbmNlKCl7cmV0dXJuIHRoaXMuciouMyt0aGlzLmcqLjU5K3RoaXMuYiouMTF9bXVsdGlwbHkoZSl7cmV0dXJuIG5ldyByZSh0aGlzLnIqZS5yLHRoaXMuZyplLmcsdGhpcy5iKmUuYil9bXVsdGlwbHlUb1JlZihlLHQpe3JldHVybiB0LnI9dGhpcy5yKmUucix0Lmc9dGhpcy5nKmUuZyx0LmI9dGhpcy5iKmUuYix0aGlzfWVxdWFscyhlKXtyZXR1cm4gZSYmdGhpcy5yPT09ZS5yJiZ0aGlzLmc9PT1lLmcmJnRoaXMuYj09PWUuYn1lcXVhbHNGbG9hdHMoZSx0LGkpe3JldHVybiB0aGlzLnI9PT1lJiZ0aGlzLmc9PT10JiZ0aGlzLmI9PT1pfXNjYWxlKGUpe3JldHVybiBuZXcgcmUodGhpcy5yKmUsdGhpcy5nKmUsdGhpcy5iKmUpfXNjYWxlSW5QbGFjZShlKXtyZXR1cm4gdGhpcy5yKj1lLHRoaXMuZyo9ZSx0aGlzLmIqPWUsdGhpc31zY2FsZVRvUmVmKGUsdCl7cmV0dXJuIHQucj10aGlzLnIqZSx0Lmc9dGhpcy5nKmUsdC5iPXRoaXMuYiplLHRoaXN9c2NhbGVBbmRBZGRUb1JlZihlLHQpe3JldHVybiB0LnIrPXRoaXMuciplLHQuZys9dGhpcy5nKmUsdC5iKz10aGlzLmIqZSx0aGlzfWNsYW1wVG9SZWYoZT0wLHQ9MSxpKXtyZXR1cm4gaS5yPVguQ2xhbXAodGhpcy5yLGUsdCksaS5nPVguQ2xhbXAodGhpcy5nLGUsdCksaS5iPVguQ2xhbXAodGhpcy5iLGUsdCksdGhpc31hZGQoZSl7cmV0dXJuIG5ldyByZSh0aGlzLnIrZS5yLHRoaXMuZytlLmcsdGhpcy5iK2UuYil9YWRkVG9SZWYoZSx0KXtyZXR1cm4gdC5yPXRoaXMucitlLnIsdC5nPXRoaXMuZytlLmcsdC5iPXRoaXMuYitlLmIsdGhpc31zdWJ0cmFjdChlKXtyZXR1cm4gbmV3IHJlKHRoaXMuci1lLnIsdGhpcy5nLWUuZyx0aGlzLmItZS5iKX1zdWJ0cmFjdFRvUmVmKGUsdCl7cmV0dXJuIHQucj10aGlzLnItZS5yLHQuZz10aGlzLmctZS5nLHQuYj10aGlzLmItZS5iLHRoaXN9Y2xvbmUoKXtyZXR1cm4gbmV3IHJlKHRoaXMucix0aGlzLmcsdGhpcy5iKX1jb3B5RnJvbShlKXtyZXR1cm4gdGhpcy5yPWUucix0aGlzLmc9ZS5nLHRoaXMuYj1lLmIsdGhpc31jb3B5RnJvbUZsb2F0cyhlLHQsaSl7cmV0dXJuIHRoaXMucj1lLHRoaXMuZz10LHRoaXMuYj1pLHRoaXN9c2V0KGUsdCxpKXtyZXR1cm4gdGhpcy5jb3B5RnJvbUZsb2F0cyhlLHQsaSl9dG9IZXhTdHJpbmcoKXtjb25zdCBlPU1hdGgucm91bmQodGhpcy5yKjI1NSksdD1NYXRoLnJvdW5kKHRoaXMuZyoyNTUpLGk9TWF0aC5yb3VuZCh0aGlzLmIqMjU1KTtyZXR1cm4iIyIrWC5Ub0hleChlKStYLlRvSGV4KHQpK1guVG9IZXgoaSl9dG9MaW5lYXJTcGFjZSgpe2NvbnN0IGU9bmV3IHJlO3JldHVybiB0aGlzLnRvTGluZWFyU3BhY2VUb1JlZihlKSxlfXRvSFNWKCl7Y29uc3QgZT1uZXcgcmU7cmV0dXJuIHRoaXMudG9IU1ZUb1JlZihlKSxlfXRvSFNWVG9SZWYoZSl7Y29uc3QgdD10aGlzLnIsaT10aGlzLmcscz10aGlzLmIscj1NYXRoLm1heCh0LGkscyksbj1NYXRoLm1pbih0LGkscyk7bGV0IGE9MCxvPTA7Y29uc3QgaD1yLGw9ci1uO3IhPT0wJiYobz1sL3IpLHIhPW4mJihyPT10PyhhPShpLXMpL2wsaTxzJiYoYSs9NikpOnI9PWk/YT0ocy10KS9sKzI6cj09cyYmKGE9KHQtaSkvbCs0KSxhKj02MCksZS5yPWEsZS5nPW8sZS5iPWh9dG9MaW5lYXJTcGFjZVRvUmVmKGUpe3JldHVybiBlLnI9TWF0aC5wb3codGhpcy5yLHllKSxlLmc9TWF0aC5wb3codGhpcy5nLHllKSxlLmI9TWF0aC5wb3codGhpcy5iLHllKSx0aGlzfXRvR2FtbWFTcGFjZSgpe2NvbnN0IGU9bmV3IHJlO3JldHVybiB0aGlzLnRvR2FtbWFTcGFjZVRvUmVmKGUpLGV9dG9HYW1tYVNwYWNlVG9SZWYoZSl7cmV0dXJuIGUucj1NYXRoLnBvdyh0aGlzLnIsU2UpLGUuZz1NYXRoLnBvdyh0aGlzLmcsU2UpLGUuYj1NYXRoLnBvdyh0aGlzLmIsU2UpLHRoaXN9c3RhdGljIEhTVnRvUkdCVG9SZWYoZSx0LGkscyl7Y29uc3Qgcj1pKnQsbj1lLzYwLGE9ciooMS1NYXRoLmFicyhuJTItMSkpO2xldCBvPTAsaD0wLGw9MDtuPj0wJiZuPD0xPyhvPXIsaD1hKTpuPj0xJiZuPD0yPyhvPWEsaD1yKTpuPj0yJiZuPD0zPyhoPXIsbD1hKTpuPj0zJiZuPD00PyhoPWEsbD1yKTpuPj00JiZuPD01PyhvPWEsbD1yKTpuPj01JiZuPD02JiYobz1yLGw9YSk7Y29uc3QgdT1pLXI7cy5zZXQobyt1LGgrdSxsK3UpfXN0YXRpYyBGcm9tSFNWKGUsdCxpKXtjb25zdCBzPW5ldyByZSgwLDAsMCk7cmV0dXJuIHJlLkhTVnRvUkdCVG9SZWYoZSx0LGkscyksc31zdGF0aWMgRnJvbUhleFN0cmluZyhlKXtpZihlLnN1YnN0cmluZygwLDEpIT09IiMifHxlLmxlbmd0aCE9PTcpcmV0dXJuIG5ldyByZSgwLDAsMCk7Y29uc3QgdD1wYXJzZUludChlLnN1YnN0cmluZygxLDMpLDE2KSxpPXBhcnNlSW50KGUuc3Vic3RyaW5nKDMsNSksMTYpLHM9cGFyc2VJbnQoZS5zdWJzdHJpbmcoNSw3KSwxNik7cmV0dXJuIHJlLkZyb21JbnRzKHQsaSxzKX1zdGF0aWMgRnJvbUFycmF5KGUsdD0wKXtyZXR1cm4gbmV3IHJlKGVbdF0sZVt0KzFdLGVbdCsyXSl9c3RhdGljIEZyb21BcnJheVRvUmVmKGUsdD0wLGkpe2kucj1lW3RdLGkuZz1lW3QrMV0saS5iPWVbdCsyXX1zdGF0aWMgRnJvbUludHMoZSx0LGkpe3JldHVybiBuZXcgcmUoZS8yNTUsdC8yNTUsaS8yNTUpfXN0YXRpYyBMZXJwKGUsdCxpKXtjb25zdCBzPW5ldyByZSgwLDAsMCk7cmV0dXJuIHJlLkxlcnBUb1JlZihlLHQsaSxzKSxzfXN0YXRpYyBMZXJwVG9SZWYoZSx0LGkscyl7cy5yPWUucisodC5yLWUucikqaSxzLmc9ZS5nKyh0LmctZS5nKSppLHMuYj1lLmIrKHQuYi1lLmIpKml9c3RhdGljIEhlcm1pdGUoZSx0LGkscyxyKXtjb25zdCBuPXIqcixhPXIqbixvPTIqYS0zKm4rMSxoPS0yKmErMypuLGw9YS0yKm4rcix1PWEtbixkPWUucipvK2kucipoK3QucipsK3Mucip1LGY9ZS5nKm8raS5nKmgrdC5nKmwrcy5nKnUsXz1lLmIqbytpLmIqaCt0LmIqbCtzLmIqdTtyZXR1cm4gbmV3IHJlKGQsZixfKX1zdGF0aWMgSGVybWl0ZTFzdERlcml2YXRpdmUoZSx0LGkscyxyKXtjb25zdCBuPXJlLkJsYWNrKCk7cmV0dXJuIHRoaXMuSGVybWl0ZTFzdERlcml2YXRpdmVUb1JlZihlLHQsaSxzLHIsbiksbn1zdGF0aWMgSGVybWl0ZTFzdERlcml2YXRpdmVUb1JlZihlLHQsaSxzLHIsbil7Y29uc3QgYT1yKnI7bi5yPShhLXIpKjYqZS5yKygzKmEtNCpyKzEpKnQucisoLWErcikqNippLnIrKDMqYS0yKnIpKnMucixuLmc9KGEtcikqNiplLmcrKDMqYS00KnIrMSkqdC5nKygtYStyKSo2KmkuZysoMyphLTIqcikqcy5nLG4uYj0oYS1yKSo2KmUuYisoMyphLTQqcisxKSp0LmIrKC1hK3IpKjYqaS5iKygzKmEtMipyKSpzLmJ9c3RhdGljIFJlZCgpe3JldHVybiBuZXcgcmUoMSwwLDApfXN0YXRpYyBHcmVlbigpe3JldHVybiBuZXcgcmUoMCwxLDApfXN0YXRpYyBCbHVlKCl7cmV0dXJuIG5ldyByZSgwLDAsMSl9c3RhdGljIEJsYWNrKCl7cmV0dXJuIG5ldyByZSgwLDAsMCl9c3RhdGljIGdldCBCbGFja1JlYWRPbmx5KCl7cmV0dXJuIHJlLl9CbGFja1JlYWRPbmx5fXN0YXRpYyBXaGl0ZSgpe3JldHVybiBuZXcgcmUoMSwxLDEpfXN0YXRpYyBQdXJwbGUoKXtyZXR1cm4gbmV3IHJlKC41LDAsLjUpfXN0YXRpYyBNYWdlbnRhKCl7cmV0dXJuIG5ldyByZSgxLDAsMSl9c3RhdGljIFllbGxvdygpe3JldHVybiBuZXcgcmUoMSwxLDApfXN0YXRpYyBHcmF5KCl7cmV0dXJuIG5ldyByZSguNSwuNSwuNSl9c3RhdGljIFRlYWwoKXtyZXR1cm4gbmV3IHJlKDAsMSwxKX1zdGF0aWMgUmFuZG9tKCl7cmV0dXJuIG5ldyByZShNYXRoLnJhbmRvbSgpLE1hdGgucmFuZG9tKCksTWF0aC5yYW5kb20oKSl9fXJlLl9CbGFja1JlYWRPbmx5PXJlLkJsYWNrKCk7bGV0IG1lPWNsYXNze2NvbnN0cnVjdG9yKGU9MCx0PTAsaT0wLHM9MSl7dGhpcy5yPWUsdGhpcy5nPXQsdGhpcy5iPWksdGhpcy5hPXN9YWRkSW5QbGFjZShlKXtyZXR1cm4gdGhpcy5yKz1lLnIsdGhpcy5nKz1lLmcsdGhpcy5iKz1lLmIsdGhpcy5hKz1lLmEsdGhpc31hc0FycmF5KCl7cmV0dXJuW3RoaXMucix0aGlzLmcsdGhpcy5iLHRoaXMuYV19dG9BcnJheShlLHQ9MCl7cmV0dXJuIGVbdF09dGhpcy5yLGVbdCsxXT10aGlzLmcsZVt0KzJdPXRoaXMuYixlW3QrM109dGhpcy5hLHRoaXN9ZnJvbUFycmF5KGUsdD0wKXtyZXR1cm4gbWUuRnJvbUFycmF5VG9SZWYoZSx0LHRoaXMpLHRoaXN9ZXF1YWxzKGUpe3JldHVybiBlJiZ0aGlzLnI9PT1lLnImJnRoaXMuZz09PWUuZyYmdGhpcy5iPT09ZS5iJiZ0aGlzLmE9PT1lLmF9YWRkKGUpe3JldHVybiBuZXcgbWUodGhpcy5yK2Uucix0aGlzLmcrZS5nLHRoaXMuYitlLmIsdGhpcy5hK2UuYSl9c3VidHJhY3QoZSl7cmV0dXJuIG5ldyBtZSh0aGlzLnItZS5yLHRoaXMuZy1lLmcsdGhpcy5iLWUuYix0aGlzLmEtZS5hKX1zdWJ0cmFjdFRvUmVmKGUsdCl7cmV0dXJuIHQucj10aGlzLnItZS5yLHQuZz10aGlzLmctZS5nLHQuYj10aGlzLmItZS5iLHQuYT10aGlzLmEtZS5hLHRoaXN9c2NhbGUoZSl7cmV0dXJuIG5ldyBtZSh0aGlzLnIqZSx0aGlzLmcqZSx0aGlzLmIqZSx0aGlzLmEqZSl9c2NhbGVJblBsYWNlKGUpe3JldHVybiB0aGlzLnIqPWUsdGhpcy5nKj1lLHRoaXMuYio9ZSx0aGlzLmEqPWUsdGhpc31zY2FsZVRvUmVmKGUsdCl7cmV0dXJuIHQucj10aGlzLnIqZSx0Lmc9dGhpcy5nKmUsdC5iPXRoaXMuYiplLHQuYT10aGlzLmEqZSx0aGlzfXNjYWxlQW5kQWRkVG9SZWYoZSx0KXtyZXR1cm4gdC5yKz10aGlzLnIqZSx0LmcrPXRoaXMuZyplLHQuYis9dGhpcy5iKmUsdC5hKz10aGlzLmEqZSx0aGlzfWNsYW1wVG9SZWYoZT0wLHQ9MSxpKXtyZXR1cm4gaS5yPVguQ2xhbXAodGhpcy5yLGUsdCksaS5nPVguQ2xhbXAodGhpcy5nLGUsdCksaS5iPVguQ2xhbXAodGhpcy5iLGUsdCksaS5hPVguQ2xhbXAodGhpcy5hLGUsdCksdGhpc31tdWx0aXBseShlKXtyZXR1cm4gbmV3IG1lKHRoaXMuciplLnIsdGhpcy5nKmUuZyx0aGlzLmIqZS5iLHRoaXMuYSplLmEpfW11bHRpcGx5VG9SZWYoZSx0KXtyZXR1cm4gdC5yPXRoaXMuciplLnIsdC5nPXRoaXMuZyplLmcsdC5iPXRoaXMuYiplLmIsdC5hPXRoaXMuYSplLmEsdH10b1N0cmluZygpe3JldHVybiJ7UjogIit0aGlzLnIrIiBHOiIrdGhpcy5nKyIgQjoiK3RoaXMuYisiIEE6Iit0aGlzLmErIn0ifWdldENsYXNzTmFtZSgpe3JldHVybiJDb2xvcjQifWdldEhhc2hDb2RlKCl7bGV0IGU9dGhpcy5yKjI1NXwwO3JldHVybiBlPWUqMzk3Xih0aGlzLmcqMjU1fDApLGU9ZSozOTdeKHRoaXMuYioyNTV8MCksZT1lKjM5N14odGhpcy5hKjI1NXwwKSxlfWNsb25lKCl7cmV0dXJuIG5ldyBtZSh0aGlzLnIsdGhpcy5nLHRoaXMuYix0aGlzLmEpfWNvcHlGcm9tKGUpe3JldHVybiB0aGlzLnI9ZS5yLHRoaXMuZz1lLmcsdGhpcy5iPWUuYix0aGlzLmE9ZS5hLHRoaXN9Y29weUZyb21GbG9hdHMoZSx0LGkscyl7cmV0dXJuIHRoaXMucj1lLHRoaXMuZz10LHRoaXMuYj1pLHRoaXMuYT1zLHRoaXN9c2V0KGUsdCxpLHMpe3JldHVybiB0aGlzLmNvcHlGcm9tRmxvYXRzKGUsdCxpLHMpfXRvSGV4U3RyaW5nKGU9ITEpe2NvbnN0IHQ9TWF0aC5yb3VuZCh0aGlzLnIqMjU1KSxpPU1hdGgucm91bmQodGhpcy5nKjI1NSkscz1NYXRoLnJvdW5kKHRoaXMuYioyNTUpO2lmKGUpcmV0dXJuIiMiK1guVG9IZXgodCkrWC5Ub0hleChpKStYLlRvSGV4KHMpO2NvbnN0IHI9TWF0aC5yb3VuZCh0aGlzLmEqMjU1KTtyZXR1cm4iIyIrWC5Ub0hleCh0KStYLlRvSGV4KGkpK1guVG9IZXgocykrWC5Ub0hleChyKX10b0xpbmVhclNwYWNlKCl7Y29uc3QgZT1uZXcgbWU7cmV0dXJuIHRoaXMudG9MaW5lYXJTcGFjZVRvUmVmKGUpLGV9dG9MaW5lYXJTcGFjZVRvUmVmKGUpe3JldHVybiBlLnI9TWF0aC5wb3codGhpcy5yLHllKSxlLmc9TWF0aC5wb3codGhpcy5nLHllKSxlLmI9TWF0aC5wb3codGhpcy5iLHllKSxlLmE9dGhpcy5hLHRoaXN9dG9HYW1tYVNwYWNlKCl7Y29uc3QgZT1uZXcgbWU7cmV0dXJuIHRoaXMudG9HYW1tYVNwYWNlVG9SZWYoZSksZX10b0dhbW1hU3BhY2VUb1JlZihlKXtyZXR1cm4gZS5yPU1hdGgucG93KHRoaXMucixTZSksZS5nPU1hdGgucG93KHRoaXMuZyxTZSksZS5iPU1hdGgucG93KHRoaXMuYixTZSksZS5hPXRoaXMuYSx0aGlzfXN0YXRpYyBGcm9tSGV4U3RyaW5nKGUpe2lmKGUuc3Vic3RyaW5nKDAsMSkhPT0iIyJ8fGUubGVuZ3RoIT09OSYmZS5sZW5ndGghPT03KXJldHVybiBuZXcgbWUoMCwwLDAsMCk7Y29uc3QgdD1wYXJzZUludChlLnN1YnN0cmluZygxLDMpLDE2KSxpPXBhcnNlSW50KGUuc3Vic3RyaW5nKDMsNSksMTYpLHM9cGFyc2VJbnQoZS5zdWJzdHJpbmcoNSw3KSwxNikscj1lLmxlbmd0aD09PTk/cGFyc2VJbnQoZS5zdWJzdHJpbmcoNyw5KSwxNik6MjU1O3JldHVybiBtZS5Gcm9tSW50cyh0LGkscyxyKX1zdGF0aWMgTGVycChlLHQsaSl7Y29uc3Qgcz1uZXcgbWUoMCwwLDAsMCk7cmV0dXJuIG1lLkxlcnBUb1JlZihlLHQsaSxzKSxzfXN0YXRpYyBMZXJwVG9SZWYoZSx0LGkscyl7cy5yPWUucisodC5yLWUucikqaSxzLmc9ZS5nKyh0LmctZS5nKSppLHMuYj1lLmIrKHQuYi1lLmIpKmkscy5hPWUuYSsodC5hLWUuYSkqaX1zdGF0aWMgSGVybWl0ZShlLHQsaSxzLHIpe2NvbnN0IG49cipyLGE9cipuLG89MiphLTMqbisxLGg9LTIqYSszKm4sbD1hLTIqbityLHU9YS1uLGQ9ZS5yKm8raS5yKmgrdC5yKmwrcy5yKnUsZj1lLmcqbytpLmcqaCt0LmcqbCtzLmcqdSxfPWUuYipvK2kuYipoK3QuYipsK3MuYip1LEU9ZS5hKm8raS5hKmgrdC5hKmwrcy5hKnU7cmV0dXJuIG5ldyBtZShkLGYsXyxFKX1zdGF0aWMgSGVybWl0ZTFzdERlcml2YXRpdmUoZSx0LGkscyxyKXtjb25zdCBuPW5ldyBtZTtyZXR1cm4gdGhpcy5IZXJtaXRlMXN0RGVyaXZhdGl2ZVRvUmVmKGUsdCxpLHMscixuKSxufXN0YXRpYyBIZXJtaXRlMXN0RGVyaXZhdGl2ZVRvUmVmKGUsdCxpLHMscixuKXtjb25zdCBhPXIqcjtuLnI9KGEtcikqNiplLnIrKDMqYS00KnIrMSkqdC5yKygtYStyKSo2KmkucisoMyphLTIqcikqcy5yLG4uZz0oYS1yKSo2KmUuZysoMyphLTQqcisxKSp0LmcrKC1hK3IpKjYqaS5nKygzKmEtMipyKSpzLmcsbi5iPShhLXIpKjYqZS5iKygzKmEtNCpyKzEpKnQuYisoLWErcikqNippLmIrKDMqYS0yKnIpKnMuYixuLmE9KGEtcikqNiplLmErKDMqYS00KnIrMSkqdC5hKygtYStyKSo2KmkuYSsoMyphLTIqcikqcy5hfXN0YXRpYyBGcm9tQ29sb3IzKGUsdD0xKXtyZXR1cm4gbmV3IG1lKGUucixlLmcsZS5iLHQpfXN0YXRpYyBGcm9tQXJyYXkoZSx0PTApe3JldHVybiBuZXcgbWUoZVt0XSxlW3QrMV0sZVt0KzJdLGVbdCszXSl9c3RhdGljIEZyb21BcnJheVRvUmVmKGUsdD0wLGkpe2kucj1lW3RdLGkuZz1lW3QrMV0saS5iPWVbdCsyXSxpLmE9ZVt0KzNdfXN0YXRpYyBGcm9tSW50cyhlLHQsaSxzKXtyZXR1cm4gbmV3IG1lKGUvMjU1LHQvMjU1LGkvMjU1LHMvMjU1KX1zdGF0aWMgQ2hlY2tDb2xvcnM0KGUsdCl7aWYoZS5sZW5ndGg9PT10KjMpe2NvbnN0IGk9W107Zm9yKGxldCBzPTA7czxlLmxlbmd0aDtzKz0zKXtjb25zdCByPXMvMyo0O2lbcl09ZVtzXSxpW3IrMV09ZVtzKzFdLGlbcisyXT1lW3MrMl0saVtyKzNdPTF9cmV0dXJuIGl9cmV0dXJuIGV9fTtjbGFzcyBFaXt9RWkuQ29sb3IzPUJlLkJ1aWxkQXJyYXkoMyxyZS5CbGFjayksRWkuQ29sb3I0PUJlLkJ1aWxkQXJyYXkoMywoKT0+bmV3IG1lKDAsMCwwLDApKSxpdCgiQkFCWUxPTi5Db2xvcjMiLHJlKSxpdCgiQkFCWUxPTi5Db2xvcjQiLG1lKTtjb25zdCBpcj0oYyxlKT0+IWN8fGMuZ2V0Q2xhc3NOYW1lJiZjLmdldENsYXNzTmFtZSgpPT09Ik1lc2giP251bGw6Yy5nZXRDbGFzc05hbWUmJmMuZ2V0Q2xhc3NOYW1lKCk9PT0iU3ViTWVzaCI/Yy5jbG9uZShlKTpjLmNsb25lP2MuY2xvbmUoKTpudWxsO2Z1bmN0aW9uIHBuKGMpe2NvbnN0IGU9W107ZG8gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoYykuZm9yRWFjaChmdW5jdGlvbih0KXtlLmluZGV4T2YodCk9PT0tMSYmZS5wdXNoKHQpfSk7d2hpbGUoYz1PYmplY3QuZ2V0UHJvdG90eXBlT2YoYykpO3JldHVybiBlfWNsYXNzIHZze3N0YXRpYyBEZWVwQ29weShlLHQsaSxzKXtjb25zdCByPXBuKGUpO2Zvcihjb25zdCBuIG9mIHIpe2lmKG5bMF09PT0iXyImJighc3x8cy5pbmRleE9mKG4pPT09LTEpfHxuLmVuZHNXaXRoKCJPYnNlcnZhYmxlIil8fGkmJmkuaW5kZXhPZihuKSE9PS0xKWNvbnRpbnVlO2NvbnN0IGE9ZVtuXSxvPXR5cGVvZiBhO2lmKG8hPT0iZnVuY3Rpb24iKXRyeXtpZihvPT09Im9iamVjdCIpaWYoYSBpbnN0YW5jZW9mIEFycmF5KXtpZih0W25dPVtdLGEubGVuZ3RoPjApaWYodHlwZW9mIGFbMF09PSJvYmplY3QiKWZvcihsZXQgaD0wO2g8YS5sZW5ndGg7aCsrKXtjb25zdCBsPWlyKGFbaF0sdCk7dFtuXS5pbmRleE9mKGwpPT09LTEmJnRbbl0ucHVzaChsKX1lbHNlIHRbbl09YS5zbGljZSgwKX1lbHNlIHRbbl09aXIoYSx0KTtlbHNlIHRbbl09YX1jYXRjaChoKXtPLldhcm4oaC5tZXNzYWdlKX19fX1mdW5jdGlvbiBtbigpe3JldHVybiB0eXBlb2YgX25hdGl2ZTwidSImJl9uYXRpdmUuWE1MSHR0cFJlcXVlc3Q/bmV3IF9uYXRpdmUuWE1MSHR0cFJlcXVlc3Q6bmV3IFhNTEh0dHBSZXF1ZXN0fWNsYXNzIGN0e2NvbnN0cnVjdG9yKCl7dGhpcy5feGhyPW1uKCksdGhpcy5fcmVxdWVzdFVSTD0iIn1faW5qZWN0Q3VzdG9tUmVxdWVzdEhlYWRlcnMoKXtpZighdGhpcy5fc2hvdWxkU2tpcFJlcXVlc3RNb2RpZmljYXRpb25zKHRoaXMuX3JlcXVlc3RVUkwpKWZvcihjb25zdCBlIGluIGN0LkN1c3RvbVJlcXVlc3RIZWFkZXJzKXtjb25zdCB0PWN0LkN1c3RvbVJlcXVlc3RIZWFkZXJzW2VdO3QmJnRoaXMuX3hoci5zZXRSZXF1ZXN0SGVhZGVyKGUsdCl9fV9zaG91bGRTa2lwUmVxdWVzdE1vZGlmaWNhdGlvbnMoZSl7cmV0dXJuIGN0LlNraXBSZXF1ZXN0TW9kaWZpY2F0aW9uRm9yQmFieWxvbkNETiYmKGUuaW5jbHVkZXMoInByZXZpZXcuYmFieWxvbmpzLmNvbSIpfHxlLmluY2x1ZGVzKCJjZG4uYmFieWxvbmpzLmNvbSIpKX1nZXQgb25wcm9ncmVzcygpe3JldHVybiB0aGlzLl94aHIub25wcm9ncmVzc31zZXQgb25wcm9ncmVzcyhlKXt0aGlzLl94aHIub25wcm9ncmVzcz1lfWdldCByZWFkeVN0YXRlKCl7cmV0dXJuIHRoaXMuX3hoci5yZWFkeVN0YXRlfWdldCBzdGF0dXMoKXtyZXR1cm4gdGhpcy5feGhyLnN0YXR1c31nZXQgc3RhdHVzVGV4dCgpe3JldHVybiB0aGlzLl94aHIuc3RhdHVzVGV4dH1nZXQgcmVzcG9uc2UoKXtyZXR1cm4gdGhpcy5feGhyLnJlc3BvbnNlfWdldCByZXNwb25zZVVSTCgpe3JldHVybiB0aGlzLl94aHIucmVzcG9uc2VVUkx9Z2V0IHJlc3BvbnNlVGV4dCgpe3JldHVybiB0aGlzLl94aHIucmVzcG9uc2VUZXh0fWdldCByZXNwb25zZVR5cGUoKXtyZXR1cm4gdGhpcy5feGhyLnJlc3BvbnNlVHlwZX1zZXQgcmVzcG9uc2VUeXBlKGUpe3RoaXMuX3hoci5yZXNwb25zZVR5cGU9ZX1nZXQgdGltZW91dCgpe3JldHVybiB0aGlzLl94aHIudGltZW91dH1zZXQgdGltZW91dChlKXt0aGlzLl94aHIudGltZW91dD1lfWFkZEV2ZW50TGlzdGVuZXIoZSx0LGkpe3RoaXMuX3hoci5hZGRFdmVudExpc3RlbmVyKGUsdCxpKX1yZW1vdmVFdmVudExpc3RlbmVyKGUsdCxpKXt0aGlzLl94aHIucmVtb3ZlRXZlbnRMaXN0ZW5lcihlLHQsaSl9YWJvcnQoKXt0aGlzLl94aHIuYWJvcnQoKX1zZW5kKGUpe2N0LkN1c3RvbVJlcXVlc3RIZWFkZXJzJiZ0aGlzLl9pbmplY3RDdXN0b21SZXF1ZXN0SGVhZGVycygpLHRoaXMuX3hoci5zZW5kKGUpfW9wZW4oZSx0KXtmb3IoY29uc3QgaSBvZiBjdC5DdXN0b21SZXF1ZXN0TW9kaWZpZXJzKXtpZih0aGlzLl9zaG91bGRTa2lwUmVxdWVzdE1vZGlmaWNhdGlvbnModCkpcmV0dXJuO2kodGhpcy5feGhyLHQpfXJldHVybiB0PXQucmVwbGFjZSgiZmlsZTpodHRwOiIsImh0dHA6IiksdD10LnJlcGxhY2UoImZpbGU6aHR0cHM6IiwiaHR0cHM6IiksdGhpcy5fcmVxdWVzdFVSTD10LHRoaXMuX3hoci5vcGVuKGUsdCwhMCl9c2V0UmVxdWVzdEhlYWRlcihlLHQpe3RoaXMuX3hoci5zZXRSZXF1ZXN0SGVhZGVyKGUsdCl9Z2V0UmVzcG9uc2VIZWFkZXIoZSl7cmV0dXJuIHRoaXMuX3hoci5nZXRSZXNwb25zZUhlYWRlcihlKX19Y3QuQ3VzdG9tUmVxdWVzdEhlYWRlcnM9e30sY3QuQ3VzdG9tUmVxdWVzdE1vZGlmaWVycz1uZXcgQXJyYXksY3QuU2tpcFJlcXVlc3RNb2RpZmljYXRpb25Gb3JCYWJ5bG9uQ0ROPSEwO2NsYXNzIEZpe31GaS5GaWxlc1RvTG9hZD17fTtjbGFzcyBFbntzdGF0aWMgRXhwb25lbnRpYWxCYWNrb2ZmKGU9Myx0PTUwMCl7cmV0dXJuKGkscyxyKT0+cy5zdGF0dXMhPT0wfHxyPj1lfHxpLmluZGV4T2YoImZpbGU6IikhPT0tMT8tMTpNYXRoLnBvdygyLHIpKnR9fWNsYXNzIHZpIGV4dGVuZHMgRXJyb3J7fXZpLl9zZXRQcm90b3R5cGVPZj1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fCgoYyxlKT0+KGMuX19wcm90b19fPWUsYykpO2NvbnN0IG9pPXtNZXNoSW52YWxpZFBvc2l0aW9uc0Vycm9yOjAsVW5zdXBwb3J0ZWRUZXh0dXJlRXJyb3I6MWUzLEdMVEZMb2FkZXJVbmV4cGVjdGVkTWFnaWNFcnJvcjoyZTMsU2NlbmVMb2FkZXJFcnJvcjozZTMsTG9hZEZpbGVFcnJvcjo0ZTMsUmVxdWVzdEZpbGVFcnJvcjo0MDAxLFJlYWRGaWxlRXJyb3I6NDAwMn07Y2xhc3MgTnQgZXh0ZW5kcyB2aXtjb25zdHJ1Y3RvcihlLHQsaSl7c3VwZXIoZSksdGhpcy5lcnJvckNvZGU9dCx0aGlzLmlubmVyRXJyb3I9aSx0aGlzLm5hbWU9IlJ1bnRpbWVFcnJvciIsdmkuX3NldFByb3RvdHlwZU9mKHRoaXMsTnQucHJvdG90eXBlKX19Y29uc3Qgc3I9Yz0+e2NvbnN0IGU9IkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky89IjtsZXQgdD0iIixpLHMscixuLGEsbyxoLGw9MDtjb25zdCB1PUFycmF5QnVmZmVyLmlzVmlldyhjKT9uZXcgVWludDhBcnJheShjLmJ1ZmZlcixjLmJ5dGVPZmZzZXQsYy5ieXRlTGVuZ3RoKTpuZXcgVWludDhBcnJheShjKTtmb3IoO2w8dS5sZW5ndGg7KWk9dVtsKytdLHM9bDx1Lmxlbmd0aD91W2wrK106TnVtYmVyLk5hTixyPWw8dS5sZW5ndGg/dVtsKytdOk51bWJlci5OYU4sbj1pPj4yLGE9KGkmMyk8PDR8cz4+NCxvPShzJjE1KTw8MnxyPj42LGg9ciY2Myxpc05hTihzKT9vPWg9NjQ6aXNOYU4ocikmJihoPTY0KSx0Kz1lLmNoYXJBdChuKStlLmNoYXJBdChhKStlLmNoYXJBdChvKStlLmNoYXJBdChoKTtyZXR1cm4gdH0scnI9Yz0+YXRvYihjKSx2bj1jPT57Y29uc3QgZT1ycihjKSx0PWUubGVuZ3RoLGk9bmV3IFVpbnQ4QXJyYXkobmV3IEFycmF5QnVmZmVyKHQpKTtmb3IobGV0IHM9MDtzPHQ7cysrKWlbc109ZS5jaGFyQ29kZUF0KHMpO3JldHVybiBpLmJ1ZmZlcn07Y2xhc3MgWGl7c3RhdGljIFNldEltbWVkaWF0ZShlKXtqZSgpJiZ3aW5kb3cuc2V0SW1tZWRpYXRlP3dpbmRvdy5zZXRJbW1lZGlhdGUoZSk6c2V0VGltZW91dChlLDEpfX1jb25zdCBucj1uZXcgUmVnRXhwKC9eZGF0YTooW14sXStcL1teLF0rKT87YmFzZTY0LC9pKTtjbGFzcyBIaSBleHRlbmRzIE50e2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoZSxvaS5Mb2FkRmlsZUVycm9yKSx0aGlzLm5hbWU9IkxvYWRGaWxlRXJyb3IiLHZpLl9zZXRQcm90b3R5cGVPZih0aGlzLEhpLnByb3RvdHlwZSksdCBpbnN0YW5jZW9mIGN0P3RoaXMucmVxdWVzdD10OnRoaXMuZmlsZT10fX1jbGFzcyBLaSBleHRlbmRzIE50e2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoZSxvaS5SZXF1ZXN0RmlsZUVycm9yKSx0aGlzLnJlcXVlc3Q9dCx0aGlzLm5hbWU9IlJlcXVlc3RGaWxlRXJyb3IiLHZpLl9zZXRQcm90b3R5cGVPZih0aGlzLEtpLnByb3RvdHlwZSl9fWNsYXNzIFRzIGV4dGVuZHMgTnR7Y29uc3RydWN0b3IoZSx0KXtzdXBlcihlLG9pLlJlYWRGaWxlRXJyb3IpLHRoaXMuZmlsZT10LHRoaXMubmFtZT0iUmVhZEZpbGVFcnJvciIsdmkuX3NldFByb3RvdHlwZU9mKHRoaXMsVHMucHJvdG90eXBlKX19Y29uc3QgcWU9e0RlZmF1bHRSZXRyeVN0cmF0ZWd5OkVuLkV4cG9uZW50aWFsQmFja29mZigpLEJhc2VVcmw6IiIsQ29yc0JlaGF2aW9yOiJhbm9ueW1vdXMiLFByZXByb2Nlc3NVcmw6Yz0+Y30sYXI9Yz0+KGM9Yy5yZXBsYWNlKC8jL2dtLCIlMjMiKSxjKSxicz0oYyxlKT0+e2lmKCEoYyYmYy5pbmRleE9mKCJkYXRhOiIpPT09MCkmJnFlLkNvcnNCZWhhdmlvcilpZih0eXBlb2YgcWUuQ29yc0JlaGF2aW9yPT0ic3RyaW5nInx8cWUuQ29yc0JlaGF2aW9yIGluc3RhbmNlb2YgU3RyaW5nKWUuY3Jvc3NPcmlnaW49cWUuQ29yc0JlaGF2aW9yO2Vsc2V7Y29uc3QgdD1xZS5Db3JzQmVoYXZpb3IoYyk7dCYmKGUuY3Jvc3NPcmlnaW49dCl9fSxTcz0oYyxlLHQsaSxzPSIiLHIpPT57dmFyIG47bGV0IGEsbz0hMTtjIGluc3RhbmNlb2YgQXJyYXlCdWZmZXJ8fEFycmF5QnVmZmVyLmlzVmlldyhjKT90eXBlb2YgQmxvYjwidSImJnR5cGVvZiBVUkw8InUiPyhhPVVSTC5jcmVhdGVPYmplY3RVUkwobmV3IEJsb2IoW2NdLHt0eXBlOnN9KSksbz0hMCk6YT1gZGF0YToke3N9O2Jhc2U2NCxgK3NyKGMpOmMgaW5zdGFuY2VvZiBCbG9iPyhhPVVSTC5jcmVhdGVPYmplY3RVUkwoYyksbz0hMCk6KGE9YXIoYyksYT1xZS5QcmVwcm9jZXNzVXJsKGMpKTtjb25zdCBoPWZlLkxhc3RDcmVhdGVkRW5naW5lLGw9Yj0+e2lmKHQpe2NvbnN0IE09YXx8Yy50b1N0cmluZygpO3QoYEVycm9yIHdoaWxlIHRyeWluZyB0byBsb2FkIGltYWdlOiAke00uaW5kZXhPZigiaHR0cCIpPT09MHx8TS5sZW5ndGg8PTEyOD9NOk0uc2xpY2UoMCwxMjgpKyIuLi4ifWAsYil9fTtpZih0eXBlb2YgSW1hZ2U+InUifHwobj1oPT1udWxsP3ZvaWQgMDpoLl9mZWF0dXJlcy5mb3JjZUJpdG1hcE92ZXJIVE1MSW1hZ2VFbGVtZW50KSE9PW51bGwmJm4hPT12b2lkIDAmJm4pcmV0dXJuIGp0KGEsYj0+e2guY3JlYXRlSW1hZ2VCaXRtYXAobmV3IEJsb2IoW2JdLHt0eXBlOnN9KSx7cHJlbXVsdGlwbHlBbHBoYToibm9uZSIsLi4ucn0pLnRoZW4oTT0+e2UoTSksbyYmVVJMLnJldm9rZU9iamVjdFVSTChhKX0pLmNhdGNoKE09Pnt0JiZ0KCJFcnJvciB3aGlsZSB0cnlpbmcgdG8gbG9hZCBpbWFnZTogIitjLE0pfSl9LHZvaWQgMCxpfHx2b2lkIDAsITAsKGIsTSk9PntsKE0pfSksbnVsbDtjb25zdCB1PW5ldyBJbWFnZTticyhhLHUpO2NvbnN0IGQ9W10sZj0oKT0+e2QuZm9yRWFjaChiPT57Yi50YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihiLm5hbWUsYi5oYW5kbGVyKX0pfSxfPSgpPT57ZC5mb3JFYWNoKGI9PntiLnRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKGIubmFtZSxiLmhhbmRsZXIpfSksZC5sZW5ndGg9MH0sRT0oKT0+e18oKSxlKHUpLG8mJnUuc3JjJiZVUkwucmV2b2tlT2JqZWN0VVJMKHUuc3JjKX0sbT1iPT57XygpLGwoYiksbyYmdS5zcmMmJlVSTC5yZXZva2VPYmplY3RVUkwodS5zcmMpfSx2PWI9PntfKCk7Y29uc3QgTT1uZXcgRXJyb3IoYENTUCB2aW9sYXRpb24gb2YgcG9saWN5ICR7Yi5lZmZlY3RpdmVEaXJlY3RpdmV9ICR7Yi5ibG9ja2VkVVJJfS4gQ3VycmVudCBwb2xpY3kgaXMgJHtiLm9yaWdpbmFsUG9saWN5fWApO2ZlLlVzZUZhbGxiYWNrVGV4dHVyZT0hMSxsKE0pLG8mJnUuc3JjJiZVUkwucmV2b2tlT2JqZWN0VVJMKHUuc3JjKSx1LnNyYz0iIn07ZC5wdXNoKHt0YXJnZXQ6dSxuYW1lOiJsb2FkIixoYW5kbGVyOkV9KSxkLnB1c2goe3RhcmdldDp1LG5hbWU6ImVycm9yIixoYW5kbGVyOm19KSxkLnB1c2goe3RhcmdldDpkb2N1bWVudCxuYW1lOiJzZWN1cml0eXBvbGljeXZpb2xhdGlvbiIsaGFuZGxlcjp2fSksZigpO2NvbnN0IFM9YS5zdWJzdHJpbmcoMCw1KT09PSJibG9iOiIseT1hLnN1YnN0cmluZygwLDUpPT09ImRhdGE6IixBPSgpPT57U3x8eT91LnNyYz1hOmp0KGEsKGIsTSxMKT0+e2NvbnN0IGs9IXMmJkw/TDpzLHc9bmV3IEJsb2IoW2JdLHt0eXBlOmt9KSxkZT1VUkwuY3JlYXRlT2JqZWN0VVJMKHcpO289ITAsdS5zcmM9ZGV9LHZvaWQgMCxpfHx2b2lkIDAsITAsKGIsTSk9PntsKE0pfSl9LEM9KCk9PntpJiZpLmxvYWRJbWFnZShhLHUpfTtpZighUyYmIXkmJmkmJmkuZW5hYmxlVGV4dHVyZXNPZmZsaW5lKWkub3BlbihDLEEpO2Vsc2V7aWYoYS5pbmRleE9mKCJmaWxlOiIpIT09LTEpe2NvbnN0IGI9ZGVjb2RlVVJJQ29tcG9uZW50KGEuc3Vic3RyaW5nKDUpLnRvTG93ZXJDYXNlKCkpO2lmKEZpLkZpbGVzVG9Mb2FkW2JdJiZ0eXBlb2YgVVJMPCJ1Iil7dHJ5e2xldCBNO3RyeXtNPVVSTC5jcmVhdGVPYmplY3RVUkwoRmkuRmlsZXNUb0xvYWRbYl0pfWNhdGNoe009VVJMLmNyZWF0ZU9iamVjdFVSTChGaS5GaWxlc1RvTG9hZFtiXSl9dS5zcmM9TSxvPSEwfWNhdGNoe3Uuc3JjPSIifXJldHVybiB1fX1BKCl9cmV0dXJuIHV9LHdpPShjLGUsdCxpLHMpPT57Y29uc3Qgcj1uZXcgRmlsZVJlYWRlcixuPXtvbkNvbXBsZXRlT2JzZXJ2YWJsZTpuZXcgRixhYm9ydDooKT0+ci5hYm9ydCgpfTtyZXR1cm4gci5vbmxvYWRlbmQ9KCk9Pm4ub25Db21wbGV0ZU9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKG4pLHMmJihyLm9uZXJyb3I9KCk9PntzKG5ldyBUcyhgVW5hYmxlIHRvIHJlYWQgJHtjLm5hbWV9YCxjKSl9KSxyLm9ubG9hZD1hPT57ZShhLnRhcmdldC5yZXN1bHQpfSx0JiYoci5vbnByb2dyZXNzPXQpLGk/ci5yZWFkQXNBcnJheUJ1ZmZlcihjKTpyLnJlYWRBc1RleHQoYyksbn0sanQ9KGMsZSx0LGkscyxyLG4pPT57aWYoYy5uYW1lKXJldHVybiB3aShjLGUsdCxzLHI/bD0+e3Iodm9pZCAwLGwpfTp2b2lkIDApO2NvbnN0IGE9YztpZihhLmluZGV4T2YoImZpbGU6IikhPT0tMSl7bGV0IGw9ZGVjb2RlVVJJQ29tcG9uZW50KGEuc3Vic3RyaW5nKDUpLnRvTG93ZXJDYXNlKCkpO2wuaW5kZXhPZigiLi8iKT09PTAmJihsPWwuc3Vic3RyaW5nKDIpKTtjb25zdCB1PUZpLkZpbGVzVG9Mb2FkW2xdO2lmKHUpcmV0dXJuIHdpKHUsZSx0LHMscj9kPT5yKHZvaWQgMCxuZXcgSGkoZC5tZXNzYWdlLGQuZmlsZSkpOnZvaWQgMCl9Y29uc3R7bWF0Y2g6byx0eXBlOmh9PVRuKGEpO2lmKG8pe2NvbnN0IGw9e29uQ29tcGxldGVPYnNlcnZhYmxlOm5ldyBGLGFib3J0OigpPT4oKT0+e319O3RyeXtjb25zdCB1PXM/QXMoYSk6aHIoYSk7ZSh1LHZvaWQgMCxoKX1jYXRjaCh1KXtyP3Iodm9pZCAwLHUpOk8uRXJyb3IodS5tZXNzYWdlfHwiRmFpbGVkIHRvIHBhcnNlIHRoZSBEYXRhIFVSTCIpfXJldHVybiBYaS5TZXRJbW1lZGlhdGUoKCk9PntsLm9uQ29tcGxldGVPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhsKX0pLGx9cmV0dXJuIHhzKGEsKGwsdSk9PntlKGwsdT09bnVsbD92b2lkIDA6dS5yZXNwb25zZVVSTCx1PT1udWxsP3ZvaWQgMDp1LmdldFJlc3BvbnNlSGVhZGVyKCJjb250ZW50LXR5cGUiKSl9LHQsaSxzLHI/bD0+e3IobC5yZXF1ZXN0LG5ldyBIaShsLm1lc3NhZ2UsbC5yZXF1ZXN0KSl9OnZvaWQgMCxuKX0seHM9KGMsZSx0LGkscyxyLG4pPT57Yz1hcihjKSxjPXFlLlByZXByb2Nlc3NVcmwoYyk7Y29uc3QgYT1xZS5CYXNlVXJsK2M7bGV0IG89ITE7Y29uc3QgaD17b25Db21wbGV0ZU9ic2VydmFibGU6bmV3IEYsYWJvcnQ6KCk9Pm89ITB9LGw9KCk9PntsZXQgdT1uZXcgY3QsZD1udWxsLGY7Y29uc3QgXz0oKT0+e3UmJih0JiZ1LnJlbW92ZUV2ZW50TGlzdGVuZXIoInByb2dyZXNzIix0KSxmJiZ1LnJlbW92ZUV2ZW50TGlzdGVuZXIoInJlYWR5c3RhdGVjaGFuZ2UiLGYpLHUucmVtb3ZlRXZlbnRMaXN0ZW5lcigibG9hZGVuZCIsRSkpfTtsZXQgRT0oKT0+e18oKSxoLm9uQ29tcGxldGVPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhoKSxoLm9uQ29tcGxldGVPYnNlcnZhYmxlLmNsZWFyKCksdD12b2lkIDAsZj1udWxsLEU9bnVsbCxyPXZvaWQgMCxuPXZvaWQgMCxlPXZvaWQgMH07aC5hYm9ydD0oKT0+e289ITAsRSYmRSgpLHUmJnUucmVhZHlTdGF0ZSE9PShYTUxIdHRwUmVxdWVzdC5ET05FfHw0KSYmdS5hYm9ydCgpLGQhPT1udWxsJiYoY2xlYXJUaW1lb3V0KGQpLGQ9bnVsbCksdT1udWxsfTtjb25zdCBtPVM9Pntjb25zdCB5PVMubWVzc2FnZXx8IlVua25vd24gZXJyb3IiO3ImJnU/cihuZXcgS2koeSx1KSk6Ty5FcnJvcih5KX0sdj1TPT57aWYodSl7aWYodS5vcGVuKCJHRVQiLGEpLG4pdHJ5e24odSl9Y2F0Y2goeSl7bSh5KTtyZXR1cm59cyYmKHUucmVzcG9uc2VUeXBlPSJhcnJheWJ1ZmZlciIpLHQmJnUuYWRkRXZlbnRMaXN0ZW5lcigicHJvZ3Jlc3MiLHQpLEUmJnUuYWRkRXZlbnRMaXN0ZW5lcigibG9hZGVuZCIsRSksZj0oKT0+e2lmKCEob3x8IXUpJiZ1LnJlYWR5U3RhdGU9PT0oWE1MSHR0cFJlcXVlc3QuRE9ORXx8NCkpe2lmKGYmJnUucmVtb3ZlRXZlbnRMaXN0ZW5lcigicmVhZHlzdGF0ZWNoYW5nZSIsZiksdS5zdGF0dXM+PTIwMCYmdS5zdGF0dXM8MzAwfHx1LnN0YXR1cz09PTAmJighamUoKXx8b3IoKSkpe3RyeXtlJiZlKHM/dS5yZXNwb25zZTp1LnJlc3BvbnNlVGV4dCx1KX1jYXRjaChDKXttKEMpfXJldHVybn1jb25zdCB5PXFlLkRlZmF1bHRSZXRyeVN0cmF0ZWd5O2lmKHkpe2NvbnN0IEM9eShhLHUsUyk7aWYoQyE9PS0xKXtfKCksdT1uZXcgY3QsZD1zZXRUaW1lb3V0KCgpPT52KFMrMSksQyk7cmV0dXJufX1jb25zdCBBPW5ldyBLaSgiRXJyb3Igc3RhdHVzOiAiK3Uuc3RhdHVzKyIgIit1LnN0YXR1c1RleHQrIiAtIFVuYWJsZSB0byBsb2FkICIrYSx1KTtyJiZyKEEpfX0sdS5hZGRFdmVudExpc3RlbmVyKCJyZWFkeXN0YXRlY2hhbmdlIixmKSx1LnNlbmQoKX19O3YoMCl9O2lmKGkmJmkuZW5hYmxlU2NlbmVPZmZsaW5lKXtjb25zdCB1PWY9PntmJiZmLnN0YXR1cz40MDA/ciYmcihmKTpsKCl9LGQ9KCk9PntpJiZpLmxvYWRGaWxlKHFlLkJhc2VVcmwrYyxmPT57IW8mJmUmJmUoZiksaC5vbkNvbXBsZXRlT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoaCl9LHQ/Zj0+eyFvJiZ0JiZ0KGYpfTp2b2lkIDAsdSxzKX07aS5vcGVuKGQsdSl9ZWxzZSBsKCk7cmV0dXJuIGh9LG9yPSgpPT50eXBlb2YgbG9jYXRpb248InUiJiZsb2NhdGlvbi5wcm90b2NvbD09PSJmaWxlOiIsTXM9Yz0+bnIudGVzdChjKSxUbj1jPT57Y29uc3QgZT1uci5leGVjKGMpO3JldHVybiBlPT09bnVsbHx8ZS5sZW5ndGg9PT0wP3ttYXRjaDohMSx0eXBlOiIifTp7bWF0Y2g6ITAsdHlwZTplWzBdLnJlcGxhY2UoImRhdGE6IiwiIikucmVwbGFjZSgiYmFzZTY0LCIsIiIpfX07ZnVuY3Rpb24gQXMoYyl7cmV0dXJuIHZuKGMuc3BsaXQoIiwiKVsxXSl9Y29uc3QgaHI9Yz0+cnIoYy5zcGxpdCgiLCIpWzFdKTsoKCk9PntvZS5fRmlsZVRvb2xzTG9hZEltYWdlPVNzLG9lLl9GaWxlVG9vbHNMb2FkRmlsZT1qdCxuaS5fRmlsZVRvb2xzTG9hZEZpbGU9anR9KSgpO2xldCBPaTsoKGMsZSx0LGkscyxyLG4sYSxvLGgpPT57T2k9e0RlY29kZUJhc2U2NFVybFRvQmluYXJ5OmMsRGVjb2RlQmFzZTY0VXJsVG9TdHJpbmc6ZSxEZWZhdWx0UmV0cnlTdHJhdGVneTp0LkRlZmF1bHRSZXRyeVN0cmF0ZWd5LEJhc2VVcmw6dC5CYXNlVXJsLENvcnNCZWhhdmlvcjp0LkNvcnNCZWhhdmlvcixQcmVwcm9jZXNzVXJsOnQuUHJlcHJvY2Vzc1VybCxJc0Jhc2U2NERhdGFVcmw6aSxJc0ZpbGVVUkw6cyxMb2FkRmlsZTpyLExvYWRJbWFnZTpuLFJlYWRGaWxlOmEsUmVxdWVzdEZpbGU6byxTZXRDb3JzQmVoYXZpb3I6aH0sT2JqZWN0LmRlZmluZVByb3BlcnR5KE9pLCJEZWZhdWx0UmV0cnlTdHJhdGVneSIse2dldDpmdW5jdGlvbigpe3JldHVybiB0LkRlZmF1bHRSZXRyeVN0cmF0ZWd5fSxzZXQ6ZnVuY3Rpb24obCl7dC5EZWZhdWx0UmV0cnlTdHJhdGVneT1sfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPaSwiQmFzZVVybCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0LkJhc2VVcmx9LHNldDpmdW5jdGlvbihsKXt0LkJhc2VVcmw9bH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoT2ksIlByZXByb2Nlc3NVcmwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdC5QcmVwcm9jZXNzVXJsfSxzZXQ6ZnVuY3Rpb24obCl7dC5QcmVwcm9jZXNzVXJsPWx9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KE9pLCJDb3JzQmVoYXZpb3IiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdC5Db3JzQmVoYXZpb3J9LHNldDpmdW5jdGlvbihsKXt0LkNvcnNCZWhhdmlvcj1sfX0pfSkoQXMsaHIscWUsTXMsb3IsanQsU3Msd2kseHMsYnMpO2NsYXNzIExpe3N0YXRpYyBJbnN0YW50aWF0ZShlKXtpZih0aGlzLlJlZ2lzdGVyZWRFeHRlcm5hbENsYXNzZXMmJnRoaXMuUmVnaXN0ZXJlZEV4dGVybmFsQ2xhc3Nlc1tlXSlyZXR1cm4gdGhpcy5SZWdpc3RlcmVkRXh0ZXJuYWxDbGFzc2VzW2VdO2NvbnN0IHQ9cmkoZSk7aWYodClyZXR1cm4gdDtPLldhcm4oZSsiIG5vdCBmb3VuZCwgeW91IG1heSBoYXZlIG1pc3NlZCBhbiBpbXBvcnQuIik7Y29uc3QgaT1lLnNwbGl0KCIuIik7bGV0IHM9d2luZG93fHx0aGlzO2ZvcihsZXQgcj0wLG49aS5sZW5ndGg7cjxuO3IrKylzPXNbaVtyXV07cmV0dXJuIHR5cGVvZiBzIT0iZnVuY3Rpb24iP251bGw6c319TGkuUmVnaXN0ZXJlZEV4dGVybmFsQ2xhc3Nlcz17fTtmdW5jdGlvbiBscigpe3JldHVybiJ4eHh4eHh4eC14eHh4LTR4eHgteXh4eC14eHh4eHh4eHh4eHgiLnJlcGxhY2UoL1t4eV0vZyxjPT57Y29uc3QgZT1NYXRoLnJhbmRvbSgpKjE2fDA7cmV0dXJuKGM9PT0ieCI/ZTplJjN8OCkudG9TdHJpbmcoMTYpfSl9Y2xhc3MgSHtzdGF0aWMgZ2V0IEJhc2VVcmwoKXtyZXR1cm4gcWUuQmFzZVVybH1zdGF0aWMgc2V0IEJhc2VVcmwoZSl7cWUuQmFzZVVybD1lfXN0YXRpYyBnZXQgRGVmYXVsdFJldHJ5U3RyYXRlZ3koKXtyZXR1cm4gcWUuRGVmYXVsdFJldHJ5U3RyYXRlZ3l9c3RhdGljIHNldCBEZWZhdWx0UmV0cnlTdHJhdGVneShlKXtxZS5EZWZhdWx0UmV0cnlTdHJhdGVneT1lfXN0YXRpYyBnZXQgQ29yc0JlaGF2aW9yKCl7cmV0dXJuIHFlLkNvcnNCZWhhdmlvcn1zdGF0aWMgc2V0IENvcnNCZWhhdmlvcihlKXtxZS5Db3JzQmVoYXZpb3I9ZX1zdGF0aWMgZ2V0IFVzZUZhbGxiYWNrVGV4dHVyZSgpe3JldHVybiBmZS5Vc2VGYWxsYmFja1RleHR1cmV9c3RhdGljIHNldCBVc2VGYWxsYmFja1RleHR1cmUoZSl7ZmUuVXNlRmFsbGJhY2tUZXh0dXJlPWV9c3RhdGljIGdldCBSZWdpc3RlcmVkRXh0ZXJuYWxDbGFzc2VzKCl7cmV0dXJuIExpLlJlZ2lzdGVyZWRFeHRlcm5hbENsYXNzZXN9c3RhdGljIHNldCBSZWdpc3RlcmVkRXh0ZXJuYWxDbGFzc2VzKGUpe0xpLlJlZ2lzdGVyZWRFeHRlcm5hbENsYXNzZXM9ZX1zdGF0aWMgZ2V0IGZhbGxiYWNrVGV4dHVyZSgpe3JldHVybiBmZS5GYWxsYmFja1RleHR1cmV9c3RhdGljIHNldCBmYWxsYmFja1RleHR1cmUoZSl7ZmUuRmFsbGJhY2tUZXh0dXJlPWV9c3RhdGljIEZldGNoVG9SZWYoZSx0LGkscyxyLG4pe2NvbnN0IGE9TWF0aC5hYnMoZSkqaSVpfDAsbz1NYXRoLmFicyh0KSpzJXN8MCxoPShhK28qaSkqNDtuLnI9cltoXS8yNTUsbi5nPXJbaCsxXS8yNTUsbi5iPXJbaCsyXS8yNTUsbi5hPXJbaCszXS8yNTV9c3RhdGljIE1peChlLHQsaSl7cmV0dXJuIGUqKDEtaSkrdCppfXN0YXRpYyBJbnN0YW50aWF0ZShlKXtyZXR1cm4gTGkuSW5zdGFudGlhdGUoZSl9c3RhdGljIFNldEltbWVkaWF0ZShlKXtYaS5TZXRJbW1lZGlhdGUoZSl9c3RhdGljIElzRXhwb25lbnRPZlR3byhlKXtsZXQgdD0xO2RvIHQqPTI7d2hpbGUodDxlKTtyZXR1cm4gdD09PWV9c3RhdGljIEZsb2F0Um91bmQoZSl7cmV0dXJuIE1hdGguZnJvdW5kP01hdGguZnJvdW5kKGUpOihILl9UbXBGbG9hdEFycmF5WzBdPWUsSC5fVG1wRmxvYXRBcnJheVswXSl9c3RhdGljIEdldEZpbGVuYW1lKGUpe2NvbnN0IHQ9ZS5sYXN0SW5kZXhPZigiLyIpO3JldHVybiB0PDA/ZTplLnN1YnN0cmluZyh0KzEpfXN0YXRpYyBHZXRGb2xkZXJQYXRoKGUsdD0hMSl7Y29uc3QgaT1lLmxhc3RJbmRleE9mKCIvIik7cmV0dXJuIGk8MD90P2U6IiI6ZS5zdWJzdHJpbmcoMCxpKzEpfXN0YXRpYyBUb0RlZ3JlZXMoZSl7cmV0dXJuIGUqMTgwL01hdGguUEl9c3RhdGljIFRvUmFkaWFucyhlKXtyZXR1cm4gZSpNYXRoLlBJLzE4MH1zdGF0aWMgU21vb3RoQW5nbGVDaGFuZ2UoZSx0LGk9Ljkpe2NvbnN0IHM9dGhpcy5Ub1JhZGlhbnMoZSkscj10aGlzLlRvUmFkaWFucyh0KTtyZXR1cm4gdGhpcy5Ub0RlZ3JlZXMoTWF0aC5hdGFuMigoMS1pKSpNYXRoLnNpbihyKStpKk1hdGguc2luKHMpLCgxLWkpKk1hdGguY29zKHIpK2kqTWF0aC5jb3MocykpKX1zdGF0aWMgTWFrZUFycmF5KGUsdCl7cmV0dXJuIHQhPT0hMCYmKGU9PT12b2lkIDB8fGU9PW51bGwpP251bGw6QXJyYXkuaXNBcnJheShlKT9lOltlXX1zdGF0aWMgR2V0UG9pbnRlclByZWZpeChlKXtsZXQgdD0icG9pbnRlciI7cmV0dXJuIGplKCkmJiF3aW5kb3cuUG9pbnRlckV2ZW50JiYodD0ibW91c2UiKSxlLl9iYWREZXNrdG9wT1MmJiFlLl9iYWRPUyYmIShkb2N1bWVudCYmIm9udG91Y2hlbmQiaW4gZG9jdW1lbnQpJiYodD0ibW91c2UiKSx0fXN0YXRpYyBTZXRDb3JzQmVoYXZpb3IoZSx0KXticyhlLHQpfXN0YXRpYyBTZXRSZWZlcnJlclBvbGljeUJlaGF2aW9yKGUsdCl7dC5yZWZlcnJlclBvbGljeT1lfXN0YXRpYyBDbGVhblVybChlKXtyZXR1cm4gZT1lLnJlcGxhY2UoLyMvZ20sIiUyMyIpLGV9c3RhdGljIGdldCBQcmVwcm9jZXNzVXJsKCl7cmV0dXJuIHFlLlByZXByb2Nlc3NVcmx9c3RhdGljIHNldCBQcmVwcm9jZXNzVXJsKGUpe3FlLlByZXByb2Nlc3NVcmw9ZX1zdGF0aWMgTG9hZEltYWdlKGUsdCxpLHMscixuKXtyZXR1cm4gU3MoZSx0LGkscyxyLG4pfXN0YXRpYyBMb2FkRmlsZShlLHQsaSxzLHIsbil7cmV0dXJuIGp0KGUsdCxpLHMscixuKX1zdGF0aWMgTG9hZEZpbGVBc3luYyhlLHQ9ITApe3JldHVybiBuZXcgUHJvbWlzZSgoaSxzKT0+e2p0KGUscj0+e2kocil9LHZvaWQgMCx2b2lkIDAsdCwocixuKT0+e3Mobil9KX0pfXN0YXRpYyBMb2FkU2NyaXB0KGUsdCxpLHMpe2lmKHR5cGVvZiBpbXBvcnRTY3JpcHRzPT0iZnVuY3Rpb24iKXt0cnl7aW1wb3J0U2NyaXB0cyhlKSx0KCl9Y2F0Y2goYSl7aT09bnVsbHx8aShgVW5hYmxlIHRvIGxvYWQgc2NyaXB0ICcke2V9JyBpbiB3b3JrZXJgLGEpfXJldHVybn1lbHNlIGlmKCFqZSgpKXtpPT1udWxsfHxpKGBDYW5ub3QgbG9hZCBzY3JpcHQgJyR7ZX0nIG91dHNpZGUgb2YgYSB3aW5kb3cgb3IgYSB3b3JrZXJgKTtyZXR1cm59Y29uc3Qgcj1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdLG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7bi5zZXRBdHRyaWJ1dGUoInR5cGUiLCJ0ZXh0L2phdmFzY3JpcHQiKSxuLnNldEF0dHJpYnV0ZSgic3JjIixlKSxzJiYobi5pZD1zKSxuLm9ubG9hZD0oKT0+e3QmJnQoKX0sbi5vbmVycm9yPWE9PntpJiZpKGBVbmFibGUgdG8gbG9hZCBzY3JpcHQgJyR7ZX0nYCxhKX0sci5hcHBlbmRDaGlsZChuKX1zdGF0aWMgTG9hZFNjcmlwdEFzeW5jKGUpe3JldHVybiBuZXcgUHJvbWlzZSgodCxpKT0+e3RoaXMuTG9hZFNjcmlwdChlLCgpPT57dCgpfSwocyxyKT0+e2kocnx8bmV3IEVycm9yKHMpKX0pfSl9c3RhdGljIFJlYWRGaWxlQXNEYXRhVVJMKGUsdCxpKXtjb25zdCBzPW5ldyBGaWxlUmVhZGVyLHI9e29uQ29tcGxldGVPYnNlcnZhYmxlOm5ldyBGLGFib3J0OigpPT5zLmFib3J0KCl9O3JldHVybiBzLm9ubG9hZGVuZD0oKT0+e3Iub25Db21wbGV0ZU9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHIpfSxzLm9ubG9hZD1uPT57dChuLnRhcmdldC5yZXN1bHQpfSxzLm9ucHJvZ3Jlc3M9aSxzLnJlYWRBc0RhdGFVUkwoZSkscn1zdGF0aWMgUmVhZEZpbGUoZSx0LGkscyxyKXtyZXR1cm4gd2koZSx0LGkscyxyKX1zdGF0aWMgRmlsZUFzVVJMKGUpe2NvbnN0IHQ9bmV3IEJsb2IoW2VdKTtyZXR1cm4gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwodCl9c3RhdGljIEZvcm1hdChlLHQ9Mil7cmV0dXJuIGUudG9GaXhlZCh0KX1zdGF0aWMgRGVlcENvcHkoZSx0LGkscyl7dnMuRGVlcENvcHkoZSx0LGkscyl9c3RhdGljIElzRW1wdHkoZSl7Zm9yKGNvbnN0IHQgaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KSlyZXR1cm4hMTtyZXR1cm4hMH1zdGF0aWMgUmVnaXN0ZXJUb3BSb290RXZlbnRzKGUsdCl7Zm9yKGxldCBpPTA7aTx0Lmxlbmd0aDtpKyspe2NvbnN0IHM9dFtpXTtlLmFkZEV2ZW50TGlzdGVuZXIocy5uYW1lLHMuaGFuZGxlciwhMSk7dHJ5e3dpbmRvdy5wYXJlbnQmJndpbmRvdy5wYXJlbnQuYWRkRXZlbnRMaXN0ZW5lcihzLm5hbWUscy5oYW5kbGVyLCExKX1jYXRjaHt9fX1zdGF0aWMgVW5yZWdpc3RlclRvcFJvb3RFdmVudHMoZSx0KXtmb3IobGV0IGk9MDtpPHQubGVuZ3RoO2krKyl7Y29uc3Qgcz10W2ldO2UucmVtb3ZlRXZlbnRMaXN0ZW5lcihzLm5hbWUscy5oYW5kbGVyKTt0cnl7ZS5wYXJlbnQmJmUucGFyZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIocy5uYW1lLHMuaGFuZGxlcil9Y2F0Y2h7fX19c3RhdGljIGFzeW5jIER1bXBGcmFtZWJ1ZmZlcihlLHQsaSxzLHI9ImltYWdlL3BuZyIsbil7dGhyb3cgJCgiRHVtcFRvb2xzIil9c3RhdGljIER1bXBEYXRhKGUsdCxpLHMscj0iaW1hZ2UvcG5nIixuLGE9ITEsbz0hMSxoKXt0aHJvdyAkKCJEdW1wVG9vbHMiKX1zdGF0aWMgRHVtcERhdGFBc3luYyhlLHQsaSxzPSJpbWFnZS9wbmciLHIsbj0hMSxhPSExLG8pe3Rocm93ICQoIkR1bXBUb29scyIpfXN0YXRpYyBUb0Jsb2IoZSx0LGk9ImltYWdlL3BuZyIscyl7ZS50b0Jsb2J8fChlLnRvQmxvYj1mdW5jdGlvbihyLG4sYSl7c2V0VGltZW91dCgoKT0+e2NvbnN0IG89YXRvYih0aGlzLnRvRGF0YVVSTChuLGEpLnNwbGl0KCIsIilbMV0pLGg9by5sZW5ndGgsbD1uZXcgVWludDhBcnJheShoKTtmb3IobGV0IHU9MDt1PGg7dSsrKWxbdV09by5jaGFyQ29kZUF0KHUpO3IobmV3IEJsb2IoW2xdKSl9KX0pLGUudG9CbG9iKGZ1bmN0aW9uKHIpe3Qocil9LGkscyl9c3RhdGljIERvd25sb2FkQmxvYihlLHQpe2lmKCJkb3dubG9hZCJpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIikpe2lmKCF0KXtjb25zdCBpPW5ldyBEYXRlO3Q9InNjcmVlbnNob3RfIisoKGkuZ2V0RnVsbFllYXIoKSsiLSIrKGkuZ2V0TW9udGgoKSsxKSkuc2xpY2UoMikrIi0iK2kuZ2V0RGF0ZSgpKyJfIitpLmdldEhvdXJzKCkrIi0iKygiMCIraS5nZXRNaW51dGVzKCkpLnNsaWNlKC0yKSkrIi5wbmcifUguRG93bmxvYWQoZSx0KX1lbHNlIGlmKGUmJnR5cGVvZiBVUkw8InUiKXtjb25zdCBpPVVSTC5jcmVhdGVPYmplY3RVUkwoZSkscz13aW5kb3cub3BlbigiIik7aWYoIXMpcmV0dXJuO2NvbnN0IHI9cy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKTtyLm9ubG9hZD1mdW5jdGlvbigpe1VSTC5yZXZva2VPYmplY3RVUkwoaSl9LHIuc3JjPWkscy5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHIpfX1zdGF0aWMgRW5jb2RlU2NyZWVuc2hvdENhbnZhc0RhdGEoZSx0LGk9ImltYWdlL3BuZyIscyxyKXtpZih0KXtjb25zdCBuPWUudG9EYXRhVVJMKGkscik7dChuKX1lbHNlIHRoaXMuVG9CbG9iKGUsZnVuY3Rpb24obil7biYmSC5Eb3dubG9hZEJsb2IobixzKX0saSxyKX1zdGF0aWMgRG93bmxvYWQoZSx0KXtpZih0eXBlb2YgVVJMPiJ1IilyZXR1cm47Y29uc3QgaT13aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChlKSxzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKTtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHMpLHMuc3R5bGUuZGlzcGxheT0ibm9uZSIscy5ocmVmPWkscy5kb3dubG9hZD10LHMuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCgpPT57cy5wYXJlbnRFbGVtZW50JiZzLnBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQocyl9KSxzLmNsaWNrKCksd2luZG93LlVSTC5yZXZva2VPYmplY3RVUkwoaSl9c3RhdGljIEJhY2tDb21wYXRDYW1lcmFOb1ByZXZlbnREZWZhdWx0KGUpe3JldHVybiB0eXBlb2YgZVswXT09ImJvb2xlYW4iP2VbMF06dHlwZW9mIGVbMV09PSJib29sZWFuIj9lWzFdOiExfXN0YXRpYyBDcmVhdGVTY3JlZW5zaG90KGUsdCxpLHMscj0iaW1hZ2UvcG5nIil7dGhyb3cgJCgiU2NyZWVuc2hvdFRvb2xzIil9c3RhdGljIENyZWF0ZVNjcmVlbnNob3RBc3luYyhlLHQsaSxzPSJpbWFnZS9wbmciKXt0aHJvdyAkKCJTY3JlZW5zaG90VG9vbHMiKX1zdGF0aWMgQ3JlYXRlU2NyZWVuc2hvdFVzaW5nUmVuZGVyVGFyZ2V0KGUsdCxpLHMscj0iaW1hZ2UvcG5nIixuPTEsYT0hMSxvKXt0aHJvdyAkKCJTY3JlZW5zaG90VG9vbHMiKX1zdGF0aWMgQ3JlYXRlU2NyZWVuc2hvdFVzaW5nUmVuZGVyVGFyZ2V0QXN5bmMoZSx0LGkscz0iaW1hZ2UvcG5nIixyPTEsbj0hMSxhKXt0aHJvdyAkKCJTY3JlZW5zaG90VG9vbHMiKX1zdGF0aWMgUmFuZG9tSWQoKXtyZXR1cm4gbHIoKX1zdGF0aWMgSXNCYXNlNjQoZSl7cmV0dXJuIE1zKGUpfXN0YXRpYyBEZWNvZGVCYXNlNjQoZSl7cmV0dXJuIEFzKGUpfXN0YXRpYyBnZXQgZXJyb3JzQ291bnQoKXtyZXR1cm4gTy5lcnJvcnNDb3VudH1zdGF0aWMgTG9nKGUpe08uTG9nKGUpfXN0YXRpYyBXYXJuKGUpe08uV2FybihlKX1zdGF0aWMgRXJyb3IoZSl7Ty5FcnJvcihlKX1zdGF0aWMgZ2V0IExvZ0NhY2hlKCl7cmV0dXJuIE8uTG9nQ2FjaGV9c3RhdGljIENsZWFyTG9nQ2FjaGUoKXtPLkNsZWFyTG9nQ2FjaGUoKX1zdGF0aWMgc2V0IExvZ0xldmVscyhlKXtPLkxvZ0xldmVscz1lfXN0YXRpYyBzZXQgUGVyZm9ybWFuY2VMb2dMZXZlbChlKXtpZigoZSZILlBlcmZvcm1hbmNlVXNlck1hcmtMb2dMZXZlbCk9PT1ILlBlcmZvcm1hbmNlVXNlck1hcmtMb2dMZXZlbCl7SC5TdGFydFBlcmZvcm1hbmNlQ291bnRlcj1ILl9TdGFydFVzZXJNYXJrLEguRW5kUGVyZm9ybWFuY2VDb3VudGVyPUguX0VuZFVzZXJNYXJrO3JldHVybn1pZigoZSZILlBlcmZvcm1hbmNlQ29uc29sZUxvZ0xldmVsKT09PUguUGVyZm9ybWFuY2VDb25zb2xlTG9nTGV2ZWwpe0guU3RhcnRQZXJmb3JtYW5jZUNvdW50ZXI9SC5fU3RhcnRQZXJmb3JtYW5jZUNvbnNvbGUsSC5FbmRQZXJmb3JtYW5jZUNvdW50ZXI9SC5fRW5kUGVyZm9ybWFuY2VDb25zb2xlO3JldHVybn1ILlN0YXJ0UGVyZm9ybWFuY2VDb3VudGVyPUguX1N0YXJ0UGVyZm9ybWFuY2VDb3VudGVyRGlzYWJsZWQsSC5FbmRQZXJmb3JtYW5jZUNvdW50ZXI9SC5fRW5kUGVyZm9ybWFuY2VDb3VudGVyRGlzYWJsZWR9c3RhdGljIF9TdGFydFBlcmZvcm1hbmNlQ291bnRlckRpc2FibGVkKGUsdCl7fXN0YXRpYyBfRW5kUGVyZm9ybWFuY2VDb3VudGVyRGlzYWJsZWQoZSx0KXt9c3RhdGljIF9TdGFydFVzZXJNYXJrKGUsdD0hMCl7aWYoIUguX1BlcmZvcm1hbmNlKXtpZighamUoKSlyZXR1cm47SC5fUGVyZm9ybWFuY2U9d2luZG93LnBlcmZvcm1hbmNlfSF0fHwhSC5fUGVyZm9ybWFuY2UubWFya3x8SC5fUGVyZm9ybWFuY2UubWFyayhlKyItQmVnaW4iKX1zdGF0aWMgX0VuZFVzZXJNYXJrKGUsdD0hMCl7IXR8fCFILl9QZXJmb3JtYW5jZS5tYXJrfHwoSC5fUGVyZm9ybWFuY2UubWFyayhlKyItRW5kIiksSC5fUGVyZm9ybWFuY2UubWVhc3VyZShlLGUrIi1CZWdpbiIsZSsiLUVuZCIpKX1zdGF0aWMgX1N0YXJ0UGVyZm9ybWFuY2VDb25zb2xlKGUsdD0hMCl7dCYmKEguX1N0YXJ0VXNlck1hcmsoZSx0KSxjb25zb2xlLnRpbWUmJmNvbnNvbGUudGltZShlKSl9c3RhdGljIF9FbmRQZXJmb3JtYW5jZUNvbnNvbGUoZSx0PSEwKXt0JiYoSC5fRW5kVXNlck1hcmsoZSx0KSxjb25zb2xlLnRpbWVFbmQoZSkpfXN0YXRpYyBnZXQgTm93KCl7cmV0dXJuIGFpLk5vd31zdGF0aWMgR2V0Q2xhc3NOYW1lKGUsdD0hMSl7bGV0IGk9bnVsbDtyZXR1cm4hdCYmZS5nZXRDbGFzc05hbWU/aT1lLmdldENsYXNzTmFtZSgpOihlIGluc3RhbmNlb2YgT2JqZWN0JiYoaT0odD9lOk9iamVjdC5nZXRQcm90b3R5cGVPZihlKSkuY29uc3RydWN0b3IuX19ianNjbGFzc05hbWVfXyksaXx8KGk9dHlwZW9mIGUpKSxpfXN0YXRpYyBGaXJzdChlLHQpe2Zvcihjb25zdCBpIG9mIGUpaWYodChpKSlyZXR1cm4gaTtyZXR1cm4gbnVsbH1zdGF0aWMgZ2V0RnVsbENsYXNzTmFtZShlLHQ9ITEpe2xldCBpPW51bGwscz1udWxsO2lmKCF0JiZlLmdldENsYXNzTmFtZSlpPWUuZ2V0Q2xhc3NOYW1lKCk7ZWxzZXtpZihlIGluc3RhbmNlb2YgT2JqZWN0KXtjb25zdCByPXQ/ZTpPYmplY3QuZ2V0UHJvdG90eXBlT2YoZSk7aT1yLmNvbnN0cnVjdG9yLl9fYmpzY2xhc3NOYW1lX18scz1yLmNvbnN0cnVjdG9yLl9fYmpzbW9kdWxlTmFtZV9ffWl8fChpPXR5cGVvZiBlKX1yZXR1cm4gaT8ocyE9bnVsbD9zKyIuIjoiIikraTpudWxsfXN0YXRpYyBEZWxheUFzeW5jKGUpe3JldHVybiBuZXcgUHJvbWlzZSh0PT57c2V0VGltZW91dCgoKT0+e3QoKX0sZSl9KX1zdGF0aWMgSXNTYWZhcmkoKXtyZXR1cm4gSnMoKT8vXigoPyFjaHJvbWV8YW5kcm9pZCkuKSpzYWZhcmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpOiExfX1ILlVzZUN1c3RvbVJlcXVlc3RIZWFkZXJzPSExLEguQ3VzdG9tUmVxdWVzdEhlYWRlcnM9Y3QuQ3VzdG9tUmVxdWVzdEhlYWRlcnMsSC5fVG1wRmxvYXRBcnJheT1uZXcgRmxvYXQzMkFycmF5KDEpLEguR2V0RE9NVGV4dENvbnRlbnQ9Z3MsSC5HZXRBYnNvbHV0ZVVybD10eXBlb2YgZG9jdW1lbnQ9PSJvYmplY3QiP2M9Pntjb25zdCBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKTtyZXR1cm4gZS5ocmVmPWMsZS5ocmVmfTp0eXBlb2YgVVJMPT0iZnVuY3Rpb24iJiZ0eXBlb2YgbG9jYXRpb249PSJvYmplY3QiP2M9Pm5ldyBVUkwoYyxsb2NhdGlvbi5vcmlnaW4pLmhyZWY6KCk9Pnt0aHJvdyBuZXcgRXJyb3IoIlVuYWJsZSB0byBnZXQgYWJzb2x1dGUgVVJMLiBPdmVycmlkZSBCQUJZTE9OLlRvb2xzLkdldEFic29sdXRlVXJsIHRvIGEgY3VzdG9tIGltcGxlbWVudGF0aW9uIGZvciB0aGUgY3VycmVudCBjb250ZXh0LiIpfSxILk5vbmVMb2dMZXZlbD1PLk5vbmVMb2dMZXZlbCxILk1lc3NhZ2VMb2dMZXZlbD1PLk1lc3NhZ2VMb2dMZXZlbCxILldhcm5pbmdMb2dMZXZlbD1PLldhcm5pbmdMb2dMZXZlbCxILkVycm9yTG9nTGV2ZWw9Ty5FcnJvckxvZ0xldmVsLEguQWxsTG9nTGV2ZWw9Ty5BbGxMb2dMZXZlbCxILklzV2luZG93T2JqZWN0RXhpc3Q9amUsSC5QZXJmb3JtYW5jZU5vbmVMb2dMZXZlbD0wLEguUGVyZm9ybWFuY2VVc2VyTWFya0xvZ0xldmVsPTEsSC5QZXJmb3JtYW5jZUNvbnNvbGVMb2dMZXZlbD0yLEguU3RhcnRQZXJmb3JtYW5jZUNvdW50ZXI9SC5fU3RhcnRQZXJmb3JtYW5jZUNvdW50ZXJEaXNhYmxlZCxILkVuZFBlcmZvcm1hbmNlQ291bnRlcj1ILl9FbmRQZXJmb3JtYW5jZUNvdW50ZXJEaXNhYmxlZDtjbGFzcyBZaXtjb25zdHJ1Y3RvcihlLHQsaSxzPTApe3RoaXMuaXRlcmF0aW9ucz1lLHRoaXMuaW5kZXg9cy0xLHRoaXMuX2RvbmU9ITEsdGhpcy5fZm49dCx0aGlzLl9zdWNjZXNzQ2FsbGJhY2s9aX1leGVjdXRlTmV4dCgpe3RoaXMuX2RvbmV8fCh0aGlzLmluZGV4KzE8dGhpcy5pdGVyYXRpb25zPygrK3RoaXMuaW5kZXgsdGhpcy5fZm4odGhpcykpOnRoaXMuYnJlYWtMb29wKCkpfWJyZWFrTG9vcCgpe3RoaXMuX2RvbmU9ITAsdGhpcy5fc3VjY2Vzc0NhbGxiYWNrKCl9c3RhdGljIFJ1bihlLHQsaSxzPTApe2NvbnN0IHI9bmV3IFlpKGUsdCxpLHMpO3JldHVybiByLmV4ZWN1dGVOZXh0KCkscn1zdGF0aWMgU3luY0FzeW5jRm9yTG9vcChlLHQsaSxzLHIsbj0wKXtyZXR1cm4gWWkuUnVuKE1hdGguY2VpbChlL3QpLGE9PntyJiZyKCk/YS5icmVha0xvb3AoKTpzZXRUaW1lb3V0KCgpPT57Zm9yKGxldCBvPTA7bzx0Oysrbyl7Y29uc3QgaD1hLmluZGV4KnQrbztpZihoPj1lKWJyZWFrO2lmKGkoaCksciYmcigpKXthLmJyZWFrTG9vcCgpO2JyZWFrfX1hLmV4ZWN1dGVOZXh0KCl9LG4pfSxzKX19ZmUuRmFsbGJhY2tUZXh0dXJlPSJkYXRhOmltYWdlL2pwZztiYXNlNjQsLzlqLzRBQVFTa1pKUmdBQkFRRUFZQUJnQUFELzRRQm1SWGhwWmdBQVRVMEFLZ0FBQUFnQUJBRWFBQVVBQUFBQkFBQUFQZ0ViQUFVQUFBQUJBQUFBUmdFb0FBTUFBQUFCQUFJQUFBRXhBQUlBQUFBUUFBQUFUZ0FBQUFBQUFBQmdBQUFBQVFBQUFHQUFBQUFCY0dGcGJuUXVibVYwSURRdU1DNDFBUC9iQUVNQUJBSURBd01DQkFNREF3UUVCQVFGQ1FZRkJRVUZDd2dJQmdrTkN3ME5EUXNNREE0UUZCRU9EeE1QREF3U0dCSVRGUllYRnhjT0VSa2JHUllhRkJZWEZ2L2JBRU1CQkFRRUJRVUZDZ1lHQ2hZUERBOFdGaFlXRmhZV0ZoWVdGaFlXRmhZV0ZoWVdGaFlXRmhZV0ZoWVdGaFlXRmhZV0ZoWVdGaFlXRmhZV0ZoWVdGaFlXRnYvQUFCRUlBUUFCQUFNQklnQUNFUUVERVFIL3hBQWZBQUFCQlFFQkFRRUJBUUFBQUFBQUFBQUFBUUlEQkFVR0J3Z0pDZ3YveEFDMUVBQUNBUU1EQWdRREJRVUVCQUFBQVgwQkFnTUFCQkVGRWlFeFFRWVRVV0VISW5FVU1vR1JvUWdqUXJIQkZWTFI4Q1F6WW5LQ0NRb1dGeGdaR2lVbUp5Z3BLalExTmpjNE9UcERSRVZHUjBoSlNsTlVWVlpYV0ZsYVkyUmxabWRvYVdwemRIVjJkM2g1ZW9PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNGVMajVPWG01K2pwNnZIeTgvVDE5dmY0K2ZyL3hBQWZBUUFEQVFFQkFRRUJBUUVCQUFBQUFBQUFBUUlEQkFVR0J3Z0pDZ3YveEFDMUVRQUNBUUlFQkFNRUJ3VUVCQUFCQW5jQUFRSURFUVFGSVRFR0VrRlJCMkZ4RXlJeWdRZ1VRcEdoc2NFSkl6TlM4QlZpY3RFS0ZpUTA0U1h4RnhnWkdpWW5LQ2txTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxQ2c0U0Zob2VJaVlxU2s1U1ZscGVZbVpxaW82U2xwcWVvcWFxeXM3UzF0cmU0dWJyQ3c4VEZ4c2ZJeWNyUzA5VFYxdGZZMmRyaTQrVGw1dWZvNmVyeTgvVDE5dmY0K2ZyLzJnQU1Bd0VBQWhFREVRQS9BUEg2S0tLK0ZQNzZQbCtpaWl2dWorQlQ2Z29vb3I0VS92bytYNktLSys2UDRGUHFDaWlpdmhUKytqNWZvb29yN28vZ1Urb0tLS0srRlA3NlBsK2lpaXZ1aitCVDZnb29vcjRVL3ZvK1g2S0tLKzZQNEZQcUNpaWl2aFQrK2o1Zm9vb3I3by9nVStvS0tLSytGUDc2UGwraWlpdnVqK0JUNmdvb29yNFUvdm8rWDZLS0srNlA0RkNpaWlnRDZnb29vcjRVL3ZvK1g2S0tLKzZQNEZQcUNpaWl2aFQrK2o1Zm9vb3I3by9nVStvS0tLSytGUDc2UGwraWlpdnVqK0JUNmdvb29yNFUvdm8rWDZLS0srNlA0RlBxQ2lpaXZoVCsrajVmb29vcjdvL2dVK29LS0tLK0ZQNzZQbCtpaWl2dWorQlQ2Z29vb3I0VS92bytYNktLSys2UDRGUHFDaWlpdmhUKytnb29vb0ErWDZLS0srNlA0RlBxQ2lpaXZoVCsrajVmb29vcjdvL2dVK29LS0tLK0ZQNzZQbCtpaWl2dWorQlQ2Z29vb3I0VS92bytYNktLSys2UDRGUHFDaWlpdmhUKytqNWZvb29yN28vZ1Urb0tLS0srRlA3NlBsK2lpaXZ1aitCVDZnb29vcjRVL3ZvK1g2S0tLKzZQNEZQcUNpaWl2aFQrK2o1Zm9vb3I3by9nVUtLS0tBUHFDaWlpdmhUKytqNWZvb29yN28vZ1Urb0tLS0srRlA3NlBsK2lpaXZ1aitCVDZnb29vcjRVL3ZvK1g2S0tLKzZQNEZQcUNpaWl2aFQrK2o1Zm9vb3I3by9nVStvS0tLSytGUDc2UGwraWlpdnVqK0JUNmdvb29yNFUvdm8rWDZLS0srNlA0RlBxQ2lpaXZoVCsrajVmb29vcjdvL2dVK29LS0tLK0ZQNzZDaWlpZ0Q1Zm9vb3I3by9nVStvS0tLSytGUDc2UGwraWlpdnVqK0JUNmdvb29yNFUvdm8rWDZLS0srNlA0RlBxQ2lpaXZoVCsrajVmb29vcjdvL2dVK29LS0tLK0ZQNzZQbCtpaWl2dWorQlQ2Z29vb3I0VS92bytYNktLSys2UDRGUHFDaWlpdmhUKytqNWZvb29yN28vZ1Urb0tLS0srRlA3NlBsK2lpaXZ1aitCUW9vb29BK29LS0tLK0ZQNzZQbCtpaWl2dWorQlQ2Z29vb3I0VS92bytYNktLSys2UDRGUHFDaWlpdmhUKytqNWZvb29yN28vZ1Urb0tLS0srRlA3NlBsK2lpaXZ1aitCVDZnb29vcjRVL3ZvK1g2S0tLKzZQNEZQcUNpaWl2aFQrK2o1Zm9vb3I3by9nVStvS0tLSytGUDc2UGwraWlpdnVqK0JUNmdvb29yNFUvdm9LS0tLQVBsK2lpaXZ1aitCVDZnb29vcjRVL3ZvK1g2S0tLKzZQNEZQcUNpaWl2aFQrK2o1Zm9vb3I3by9nVStvS0tLSytGUDc2UGwraWlpdnVqK0JUNmdvb29yNFUvdm8rWDZLS0srNlA0RlBxQ2lpaXZoVCsrajVmb29vcjdvL2dVK29LS0tLK0ZQNzZQbCtpaWl2dWorQlQ2Z29vb3I0VS92bytYNktLSys2UDRGQ2lpaWdENmdvb29yNFUvdm8rWDZLS0srNlA0RlBxQ2lpaXZoVCsrajVmb29vcjdvL2dVK29LS0tLK0ZQNzZQbCtpaWl2dWorQlQ2Z29vb3I0VS92bytYNktLSys2UDRGUHFDaWlpdmhUKytqNWZvb29yN28vZ1Urb0tLS0srRlA3NlBsK2lpaXZ1aitCVDZnb29vcjRVL3ZvK1g2S0tLKzZQNEZQcUNpaWl2aFQrK2dvb29vQStYNktLSys2UDRGUHFDaWlpdmhUKytqNWZvb29yN28vZ1Urb0tLS0srRlA3NlBsK2lpaXZ1aitCVDZnb29vcjRVL3ZvK1g2S0tLKzZQNEZQcUNpaWl2aFQrK2o1Zm9vb3I3by9nVStvS0tLSytGUDc2UGwraWlpdnVqK0JUNmdvb29yNFUvdm8rWDZLS0srNlA0RlBxQ2lpaXZoVCsrajVmb29vcjdvL2dVS0tLS0FQcUNpaWl2aFQrK2o1Zm9vb3I3by9nVStvS0tLSytGUDc2UGwraWlpdnVqK0JUNmdvb29yNFUvdm8rWDZLS0srNlA0RlBxQ2lpaXZoVCsrajVmb29vcjdvL2dVK29LS0tLK0ZQNzZQbCtpaWl2dWorQlQ2Z29vb3I0VS92bytYNktLSys2UDRGUHFDaWlpdmhUKytqNWZvb29yN28vZ1Urb0tLS0srRlA3NkNpaWlnRDVmb29vcjdvL2dVK29LS0tLK0ZQNzZQbCtpaWl2dWorQlQ2Z29vb3I0VS92bytYNktLSys2UDRGUHFDaWlpdmhUKytqNWZvb29yN28vZ1Urb0tLS0srRlA3NlBsK2lpaXZ1aitCVDZnb29vcjRVL3ZvK1g2S0tLKzZQNEZQcUNpaWl2aFQrK2o1Zm9vb3I3by9nVStvS0tLSytGUDc2UGwraWlpdnVqK0JRb29vb0Erb0tLS0srRlA3NlBsK2lpaXZ1aitCVDZnb29vcjRVL3ZvK1g2S0tLKzZQNEZQcUNpaWl2aFQrK2o1Zm9vb3I3by9nVStvS0tLSytGUDc2UGwraWlpdnVqK0JUNmdvb29yNFUvdm8rWDZLS0srNlA0RlBxQ2lpaXZoVCsrajVmb29vcjdvL2dVK29LS0tLK0ZQNzZQbCtpaWl2dWorQlQ2Z29vb3I0VS92b0tLS0tBUGwraWlpdnVqK0JUNmdvb29yNFUvdm8rWDZLS0srNlA0RlBxQ2lpaXZoVCsrajVmb29vcjdvL2dVK29LS0tLK0ZQNzZQbCtpaWl2dWorQlQ2Z29vb3I0VS92bytYNktLSys2UDRGUHFDaWlpdmhUKytqNWZvb29yN28vZ1Urb0tLS0srRlA3NlBsK2lpaXZ1aitCVDZnb29vcjRVL3ZvK1g2S0tLKzZQNEZDaWlpZ0Q2Z29vb3I0VS92bytYNktLSys2UDRGUHFDaWlpdmhUKytqNWZvb29yN28vZ1Urb0tLS0srRlA3NlBsK2lpaXZ1aitCVDZnb29vcjRVL3ZvK1g2S0tLKzZQNEZQcUNpaWl2aFQrK2o1Zm9vb3I3by9nVStvS0tLSytGUDc2UGwraWlpdnVqK0JUNmdvb29yNFUvdm8rWDZLS0srNlA0RlBxQ2lpaXZoVCsrZ29vb29BK1g2S0tLKzZQNEZQcUNpaWl2aFQrK2o1Zm9vb3I3by9nVStvS0tLSytGUDc2UGwraWlpdnVqK0JUNmdvb29yNFUvdm8rWDZLS0srNlA0RlBxQ2lpaXZoVCsrajVmb29vcjdvL2dVK29LS0tLK0ZQNzZQbCtpaWl2dWorQlQ2Z29vb3I0VS92bytYNktLSys2UDRGUHFDaWlpdmhUKytqNWZvb29yN28vZ1VLS0tLQVBxQ2lpaXZoVCsrajVmb29vcjdvL2dVK29LS0tLK0ZQNzZQbCtpaWl2dWorQlQ2Z29vb3I0VS92bytYNktLSys2UDRGUHFDaWlpdmhUKytqNWZvb29yN28vZ1Urb0tLS0srRlA3NlBsK2lpaXZ1aitCVDZnb29vcjRVL3ZvK1g2S0tLKzZQNEZQcUNpaWl2aFQrK2o1Zm9vb3I3by9nVStvS0tLSytGUDc2UC8vWiI7Y2xhc3MgJGV7Y29uc3RydWN0b3IoZSl7dGhpcy5sZW5ndGg9MCx0aGlzLmRhdGE9bmV3IEFycmF5KGUpLHRoaXMuX2lkPSRlLl9HbG9iYWxJZCsrfXB1c2goZSl7dGhpcy5kYXRhW3RoaXMubGVuZ3RoKytdPWUsdGhpcy5sZW5ndGg+dGhpcy5kYXRhLmxlbmd0aCYmKHRoaXMuZGF0YS5sZW5ndGgqPTIpfWZvckVhY2goZSl7Zm9yKGxldCB0PTA7dDx0aGlzLmxlbmd0aDt0KyspZSh0aGlzLmRhdGFbdF0pfXNvcnQoZSl7dGhpcy5kYXRhLnNvcnQoZSl9cmVzZXQoKXt0aGlzLmxlbmd0aD0wfWRpc3Bvc2UoKXt0aGlzLnJlc2V0KCksdGhpcy5kYXRhJiYodGhpcy5kYXRhLmxlbmd0aD0wKX1jb25jYXQoZSl7aWYoZS5sZW5ndGghPT0wKXt0aGlzLmxlbmd0aCtlLmxlbmd0aD50aGlzLmRhdGEubGVuZ3RoJiYodGhpcy5kYXRhLmxlbmd0aD0odGhpcy5sZW5ndGgrZS5sZW5ndGgpKjIpO2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGg7dCsrKXRoaXMuZGF0YVt0aGlzLmxlbmd0aCsrXT0oZS5kYXRhfHxlKVt0XX19aW5kZXhPZihlKXtjb25zdCB0PXRoaXMuZGF0YS5pbmRleE9mKGUpO3JldHVybiB0Pj10aGlzLmxlbmd0aD8tMTp0fWNvbnRhaW5zKGUpe3JldHVybiB0aGlzLmluZGV4T2YoZSkhPT0tMX19JGUuX0dsb2JhbElkPTA7Y2xhc3MgaGkgZXh0ZW5kcyAkZXtjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5fZHVwbGljYXRlSWQ9MH1wdXNoKGUpe3N1cGVyLnB1c2goZSksZS5fX3NtYXJ0QXJyYXlGbGFnc3x8KGUuX19zbWFydEFycmF5RmxhZ3M9e30pLGUuX19zbWFydEFycmF5RmxhZ3NbdGhpcy5faWRdPXRoaXMuX2R1cGxpY2F0ZUlkfXB1c2hOb0R1cGxpY2F0ZShlKXtyZXR1cm4gZS5fX3NtYXJ0QXJyYXlGbGFncyYmZS5fX3NtYXJ0QXJyYXlGbGFnc1t0aGlzLl9pZF09PT10aGlzLl9kdXBsaWNhdGVJZD8hMToodGhpcy5wdXNoKGUpLCEwKX1yZXNldCgpe3N1cGVyLnJlc2V0KCksdGhpcy5fZHVwbGljYXRlSWQrK31jb25jYXRXaXRoTm9EdXBsaWNhdGUoZSl7aWYoZS5sZW5ndGghPT0wKXt0aGlzLmxlbmd0aCtlLmxlbmd0aD50aGlzLmRhdGEubGVuZ3RoJiYodGhpcy5kYXRhLmxlbmd0aD0odGhpcy5sZW5ndGgrZS5sZW5ndGgpKjIpO2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGg7dCsrKXtjb25zdCBpPShlLmRhdGF8fGUpW3RdO3RoaXMucHVzaE5vRHVwbGljYXRlKGkpfX19fWNsYXNzIGNye2NvbnN0cnVjdG9yKCl7dGhpcy5fY291bnQ9MCx0aGlzLl9kYXRhPXt9fWNvcHlGcm9tKGUpe3RoaXMuY2xlYXIoKSxlLmZvckVhY2goKHQsaSk9PnRoaXMuYWRkKHQsaSkpfWdldChlKXtjb25zdCB0PXRoaXMuX2RhdGFbZV07aWYodCE9PXZvaWQgMClyZXR1cm4gdH1nZXRPckFkZFdpdGhGYWN0b3J5KGUsdCl7bGV0IGk9dGhpcy5nZXQoZSk7cmV0dXJuIGkhPT12b2lkIDB8fChpPXQoZSksaSYmdGhpcy5hZGQoZSxpKSksaX1nZXRPckFkZChlLHQpe2NvbnN0IGk9dGhpcy5nZXQoZSk7cmV0dXJuIGkhPT12b2lkIDA/aToodGhpcy5hZGQoZSx0KSx0KX1jb250YWlucyhlKXtyZXR1cm4gdGhpcy5fZGF0YVtlXSE9PXZvaWQgMH1hZGQoZSx0KXtyZXR1cm4gdGhpcy5fZGF0YVtlXSE9PXZvaWQgMD8hMToodGhpcy5fZGF0YVtlXT10LCsrdGhpcy5fY291bnQsITApfXNldChlLHQpe3JldHVybiB0aGlzLl9kYXRhW2VdPT09dm9pZCAwPyExOih0aGlzLl9kYXRhW2VdPXQsITApfWdldEFuZFJlbW92ZShlKXtjb25zdCB0PXRoaXMuZ2V0KGUpO3JldHVybiB0IT09dm9pZCAwPyhkZWxldGUgdGhpcy5fZGF0YVtlXSwtLXRoaXMuX2NvdW50LHQpOm51bGx9cmVtb3ZlKGUpe3JldHVybiB0aGlzLmNvbnRhaW5zKGUpPyhkZWxldGUgdGhpcy5fZGF0YVtlXSwtLXRoaXMuX2NvdW50LCEwKTohMX1jbGVhcigpe3RoaXMuX2RhdGE9e30sdGhpcy5fY291bnQ9MH1nZXQgY291bnQoKXtyZXR1cm4gdGhpcy5fY291bnR9Zm9yRWFjaChlKXtmb3IoY29uc3QgdCBpbiB0aGlzLl9kYXRhKXtjb25zdCBpPXRoaXMuX2RhdGFbdF07ZSh0LGkpfX1maXJzdChlKXtmb3IoY29uc3QgdCBpbiB0aGlzLl9kYXRhKXtjb25zdCBpPXRoaXMuX2RhdGFbdF0scz1lKHQsaSk7aWYocylyZXR1cm4gc31yZXR1cm4gbnVsbH19Y2xhc3MgbGl7c3RhdGljIEV2YWwoZSx0KXtyZXR1cm4gZS5tYXRjaCgvXChbXigpXSpcKS9nKT9lPWUucmVwbGFjZSgvXChbXigpXSpcKS9nLGk9PihpPWkuc2xpY2UoMSxpLmxlbmd0aC0xKSxsaS5fSGFuZGxlUGFyZW50aGVzaXNDb250ZW50KGksdCkpKTplPWxpLl9IYW5kbGVQYXJlbnRoZXNpc0NvbnRlbnQoZSx0KSxlPT09InRydWUiPyEwOmU9PT0iZmFsc2UiPyExOmxpLkV2YWwoZSx0KX1zdGF0aWMgX0hhbmRsZVBhcmVudGhlc2lzQ29udGVudChlLHQpe3Q9dHx8KHI9PnI9PT0idHJ1ZSIpO2xldCBpO2NvbnN0IHM9ZS5zcGxpdCgifHwiKTtmb3IoY29uc3QgciBpbiBzKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHIpKXtsZXQgbj1saS5fU2ltcGxpZnlOZWdhdGlvbihzW3JdLnRyaW0oKSk7Y29uc3QgYT1uLnNwbGl0KCImJiIpO2lmKGEubGVuZ3RoPjEpZm9yKGxldCBvPTA7bzxhLmxlbmd0aDsrK28pe2NvbnN0IGg9bGkuX1NpbXBsaWZ5TmVnYXRpb24oYVtvXS50cmltKCkpO2lmKGghPT0idHJ1ZSImJmghPT0iZmFsc2UiP2hbMF09PT0iISI/aT0hdChoLnN1YnN0cmluZygxKSk6aT10KGgpOmk9aD09PSJ0cnVlIiwhaSl7bj0iZmFsc2UiO2JyZWFrfX1pZihpfHxuPT09InRydWUiKXtpPSEwO2JyZWFrfW4hPT0idHJ1ZSImJm4hPT0iZmFsc2UiP25bMF09PT0iISI/aT0hdChuLnN1YnN0cmluZygxKSk6aT10KG4pOmk9bj09PSJ0cnVlIn1yZXR1cm4gaT8idHJ1ZSI6ImZhbHNlIn1zdGF0aWMgX1NpbXBsaWZ5TmVnYXRpb24oZSl7cmV0dXJuIGU9ZS5yZXBsYWNlKC9eW1xzIV0rLyx0PT4odD10LnJlcGxhY2UoL1tcc10vZywoKT0+IiIpLHQubGVuZ3RoJTI/IiEiOiIiKSksZT1lLnRyaW0oKSxlPT09IiF0cnVlIj9lPSJmYWxzZSI6ZT09PSIhZmFsc2UiJiYoZT0idHJ1ZSIpLGV9fWNsYXNzIGdle3N0YXRpYyBFbmFibGVGb3IoZSl7ZS5fdGFncz1lLl90YWdzfHx7fSxlLmhhc1RhZ3M9KCk9PmdlLkhhc1RhZ3MoZSksZS5hZGRUYWdzPXQ9PmdlLkFkZFRhZ3NUbyhlLHQpLGUucmVtb3ZlVGFncz10PT5nZS5SZW1vdmVUYWdzRnJvbShlLHQpLGUubWF0Y2hlc1RhZ3NRdWVyeT10PT5nZS5NYXRjaGVzUXVlcnkoZSx0KX1zdGF0aWMgRGlzYWJsZUZvcihlKXtkZWxldGUgZS5fdGFncyxkZWxldGUgZS5oYXNUYWdzLGRlbGV0ZSBlLmFkZFRhZ3MsZGVsZXRlIGUucmVtb3ZlVGFncyxkZWxldGUgZS5tYXRjaGVzVGFnc1F1ZXJ5fXN0YXRpYyBIYXNUYWdzKGUpe2lmKCFlLl90YWdzKXJldHVybiExO2NvbnN0IHQ9ZS5fdGFncztmb3IoY29uc3QgaSBpbiB0KWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGkpKXJldHVybiEwO3JldHVybiExfXN0YXRpYyBHZXRUYWdzKGUsdD0hMCl7aWYoIWUuX3RhZ3MpcmV0dXJuIG51bGw7aWYodCl7Y29uc3QgaT1bXTtmb3IoY29uc3QgcyBpbiBlLl90YWdzKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLl90YWdzLHMpJiZlLl90YWdzW3NdPT09ITAmJmkucHVzaChzKTtyZXR1cm4gaS5qb2luKCIgIil9ZWxzZSByZXR1cm4gZS5fdGFnc31zdGF0aWMgQWRkVGFnc1RvKGUsdCl7aWYoIXR8fHR5cGVvZiB0IT0ic3RyaW5nIilyZXR1cm47dC5zcGxpdCgiICIpLmZvckVhY2goZnVuY3Rpb24ocyl7Z2UuX0FkZFRhZ1RvKGUscyl9KX1zdGF0aWMgX0FkZFRhZ1RvKGUsdCl7dD10LnRyaW0oKSwhKHQ9PT0iInx8dD09PSJ0cnVlInx8dD09PSJmYWxzZSIpJiYodC5tYXRjaCgvW1xzXS8pfHx0Lm1hdGNoKC9eKFshXXwoW3xdfFsmXSl7Mn0pLyl8fChnZS5FbmFibGVGb3IoZSksZS5fdGFnc1t0XT0hMCkpfXN0YXRpYyBSZW1vdmVUYWdzRnJvbShlLHQpe2lmKCFnZS5IYXNUYWdzKGUpKXJldHVybjtjb25zdCBpPXQuc3BsaXQoIiAiKTtmb3IoY29uc3QgcyBpbiBpKWdlLl9SZW1vdmVUYWdGcm9tKGUsaVtzXSl9c3RhdGljIF9SZW1vdmVUYWdGcm9tKGUsdCl7ZGVsZXRlIGUuX3RhZ3NbdF19c3RhdGljIE1hdGNoZXNRdWVyeShlLHQpe3JldHVybiB0PT09dm9pZCAwPyEwOnQ9PT0iIj9nZS5IYXNUYWdzKGUpOmxpLkV2YWwodCxpPT5nZS5IYXNUYWdzKGUpJiZlLl90YWdzW2ldKX19Y2xhc3MgWml7Y29uc3RydWN0b3IoKXt0aGlzLnJvb3ROb2Rlcz1uZXcgQXJyYXksdGhpcy5jYW1lcmFzPW5ldyBBcnJheSx0aGlzLmxpZ2h0cz1uZXcgQXJyYXksdGhpcy5tZXNoZXM9bmV3IEFycmF5LHRoaXMuc2tlbGV0b25zPW5ldyBBcnJheSx0aGlzLnBhcnRpY2xlU3lzdGVtcz1uZXcgQXJyYXksdGhpcy5hbmltYXRpb25zPVtdLHRoaXMuYW5pbWF0aW9uR3JvdXBzPW5ldyBBcnJheSx0aGlzLm11bHRpTWF0ZXJpYWxzPW5ldyBBcnJheSx0aGlzLm1hdGVyaWFscz1uZXcgQXJyYXksdGhpcy5tb3JwaFRhcmdldE1hbmFnZXJzPW5ldyBBcnJheSx0aGlzLmdlb21ldHJpZXM9bmV3IEFycmF5LHRoaXMudHJhbnNmb3JtTm9kZXM9bmV3IEFycmF5LHRoaXMuYWN0aW9uTWFuYWdlcnM9bmV3IEFycmF5LHRoaXMudGV4dHVyZXM9bmV3IEFycmF5LHRoaXMuX2Vudmlyb25tZW50VGV4dHVyZT1udWxsLHRoaXMucG9zdFByb2Nlc3Nlcz1uZXcgQXJyYXl9c3RhdGljIEFkZFBhcnNlcihlLHQpe3RoaXMuX0JhYnlsb25GaWxlUGFyc2Vyc1tlXT10fXN0YXRpYyBHZXRQYXJzZXIoZSl7cmV0dXJuIHRoaXMuX0JhYnlsb25GaWxlUGFyc2Vyc1tlXT90aGlzLl9CYWJ5bG9uRmlsZVBhcnNlcnNbZV06bnVsbH1zdGF0aWMgQWRkSW5kaXZpZHVhbFBhcnNlcihlLHQpe3RoaXMuX0luZGl2aWR1YWxCYWJ5bG9uRmlsZVBhcnNlcnNbZV09dH1zdGF0aWMgR2V0SW5kaXZpZHVhbFBhcnNlcihlKXtyZXR1cm4gdGhpcy5fSW5kaXZpZHVhbEJhYnlsb25GaWxlUGFyc2Vyc1tlXT90aGlzLl9JbmRpdmlkdWFsQmFieWxvbkZpbGVQYXJzZXJzW2VdOm51bGx9c3RhdGljIFBhcnNlKGUsdCxpLHMpe2Zvcihjb25zdCByIGluIHRoaXMuX0JhYnlsb25GaWxlUGFyc2VycylPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5fQmFieWxvbkZpbGVQYXJzZXJzLHIpJiZ0aGlzLl9CYWJ5bG9uRmlsZVBhcnNlcnNbcl0oZSx0LGkscyl9Z2V0IGVudmlyb25tZW50VGV4dHVyZSgpe3JldHVybiB0aGlzLl9lbnZpcm9ubWVudFRleHR1cmV9c2V0IGVudmlyb25tZW50VGV4dHVyZShlKXt0aGlzLl9lbnZpcm9ubWVudFRleHR1cmU9ZX1nZXROb2Rlcygpe2xldCBlPW5ldyBBcnJheTtyZXR1cm4gZT1lLmNvbmNhdCh0aGlzLm1lc2hlcyksZT1lLmNvbmNhdCh0aGlzLmxpZ2h0cyksZT1lLmNvbmNhdCh0aGlzLmNhbWVyYXMpLGU9ZS5jb25jYXQodGhpcy50cmFuc2Zvcm1Ob2RlcyksdGhpcy5za2VsZXRvbnMuZm9yRWFjaCh0PT5lPWUuY29uY2F0KHQuYm9uZXMpKSxlfX1aaS5fQmFieWxvbkZpbGVQYXJzZXJzPXt9LFppLl9JbmRpdmlkdWFsQmFieWxvbkZpbGVQYXJzZXJzPXt9O2Z1bmN0aW9uIFQoYyxlLHQsaSl7dmFyIHM9YXJndW1lbnRzLmxlbmd0aCxyPXM8Mz9lOmk9PT1udWxsP2k9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLHQpOmksbjtpZih0eXBlb2YgUmVmbGVjdD09Im9iamVjdCImJnR5cGVvZiBSZWZsZWN0LmRlY29yYXRlPT0iZnVuY3Rpb24iKXI9UmVmbGVjdC5kZWNvcmF0ZShjLGUsdCxpKTtlbHNlIGZvcih2YXIgYT1jLmxlbmd0aC0xO2E+PTA7YS0tKShuPWNbYV0pJiYocj0oczwzP24ocik6cz4zP24oZSx0LHIpOm4oZSx0KSl8fHIpO3JldHVybiBzPjMmJnImJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQscikscn1jb25zdCBxaT17fSxqaT17fSx1cj1mdW5jdGlvbihjLGUsdCl7Y29uc3QgaT1jKCk7Z2UmJmdlLkFkZFRhZ3NUbyhpLGUudGFncyk7Y29uc3Qgcz1ScyhpKTtmb3IoY29uc3QgciBpbiBzKXtjb25zdCBuPXNbcl0sYT1lW3JdLG89bi50eXBlO2lmKGEhPW51bGwmJihyIT09InVuaXF1ZUlkInx8YWUuQWxsb3dMb2FkaW5nVW5pcXVlSWQpKXN3aXRjaChvKXtjYXNlIDA6Y2FzZSA2OmNhc2UgMTE6aVtyXT1hO2JyZWFrO2Nhc2UgMTppW3JdPXR8fGEuaXNSZW5kZXJUYXJnZXQ/YTphLmNsb25lKCk7YnJlYWs7Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmNhc2UgNzpjYXNlIDEwOmNhc2UgMTI6aVtyXT10P2E6YS5jbG9uZSgpO2JyZWFrfX1yZXR1cm4gaX07ZnVuY3Rpb24gYm4oYyl7Y29uc3QgZT1jLmdldENsYXNzTmFtZSgpO3JldHVybiBxaVtlXXx8KHFpW2VdPXt9KSxxaVtlXX1mdW5jdGlvbiBScyhjKXtjb25zdCBlPWMuZ2V0Q2xhc3NOYW1lKCk7aWYoamlbZV0pcmV0dXJuIGppW2VdO2ppW2VdPXt9O2NvbnN0IHQ9amlbZV07bGV0IGk9YyxzPWU7Zm9yKDtzOyl7Y29uc3Qgcj1xaVtzXTtmb3IoY29uc3QgbyBpbiByKXRbb109cltvXTtsZXQgbixhPSExO2Rve2lmKG49T2JqZWN0LmdldFByb3RvdHlwZU9mKGkpLCFuLmdldENsYXNzTmFtZSl7YT0hMDticmVha31pZihuLmdldENsYXNzTmFtZSgpIT09cylicmVhaztpPW59d2hpbGUobik7aWYoYSlicmVhaztzPW4uZ2V0Q2xhc3NOYW1lKCksaT1ufXJldHVybiB0fWZ1bmN0aW9uIHl0KGMsZSl7cmV0dXJuKHQsaSk9Pntjb25zdCBzPWJuKHQpO3NbaV18fChzW2ldPXt0eXBlOmMsc291cmNlTmFtZTplfSl9fWZ1bmN0aW9uIFNuKGMsZT1udWxsKXtyZXR1cm4odCxpKT0+e2NvbnN0IHM9ZXx8Il8iK2k7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaSx7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbc119LHNldDpmdW5jdGlvbihyKXt0eXBlb2YgdGhpcy5lcXVhbHM9PSJmdW5jdGlvbiImJnRoaXMuZXF1YWxzKHIpfHx0aGlzW3NdIT09ciYmKHRoaXNbc109cix0W2NdLmFwcGx5KHRoaXMpKX0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KX19ZnVuY3Rpb24gYmUoYyxlPW51bGwpe3JldHVybiBTbihjLGUpfWZ1bmN0aW9uIFIoYyl7cmV0dXJuIHl0KDAsYyl9ZnVuY3Rpb24gbXQoYyl7cmV0dXJuIHl0KDEsYyl9ZnVuY3Rpb24gY2koYyl7cmV0dXJuIHl0KDIsYyl9ZnVuY3Rpb24gTmkoYyl7cmV0dXJuIHl0KDMsYyl9ZnVuY3Rpb24geG4oYyl7cmV0dXJuIHl0KDQsYyl9ZnVuY3Rpb24gQnQoYyl7cmV0dXJuIHl0KDUsYyl9ZnVuY3Rpb24gTW4oYyl7cmV0dXJuIHl0KDYsYyl9ZnVuY3Rpb24gQW4oYyl7cmV0dXJuIHl0KDcsYyl9ZnVuY3Rpb24gZHIoYyl7cmV0dXJuIHl0KDgsYyl9ZnVuY3Rpb24gUm4oYyl7cmV0dXJuIHl0KDEwLGMpfWNsYXNzIGFle3N0YXRpYyBBcHBlbmRTZXJpYWxpemVkQW5pbWF0aW9ucyhlLHQpe2lmKGUuYW5pbWF0aW9ucyl7dC5hbmltYXRpb25zPVtdO2ZvcihsZXQgaT0wO2k8ZS5hbmltYXRpb25zLmxlbmd0aDtpKyspe2NvbnN0IHM9ZS5hbmltYXRpb25zW2ldO3QuYW5pbWF0aW9ucy5wdXNoKHMuc2VyaWFsaXplKCkpfX19c3RhdGljIFNlcmlhbGl6ZShlLHQpe3R8fCh0PXt9KSxnZSYmKHQudGFncz1nZS5HZXRUYWdzKGUpKTtjb25zdCBpPVJzKGUpO2Zvcihjb25zdCBzIGluIGkpe2NvbnN0IHI9aVtzXSxuPXIuc291cmNlTmFtZXx8cyxhPXIudHlwZSxvPWVbc107aWYobyE9bnVsbCYmKHMhPT0idW5pcXVlSWQifHxhZS5BbGxvd0xvYWRpbmdVbmlxdWVJZCkpc3dpdGNoKGEpe2Nhc2UgMDp0W25dPW87YnJlYWs7Y2FzZSAxOnRbbl09by5zZXJpYWxpemUoKTticmVhaztjYXNlIDI6dFtuXT1vLmFzQXJyYXkoKTticmVhaztjYXNlIDM6dFtuXT1vLnNlcmlhbGl6ZSgpO2JyZWFrO2Nhc2UgNDp0W25dPW8uYXNBcnJheSgpO2JyZWFrO2Nhc2UgNTp0W25dPW8uYXNBcnJheSgpO2JyZWFrO2Nhc2UgNjp0W25dPW8uaWQ7YnJlYWs7Y2FzZSA3OnRbbl09by5zZXJpYWxpemUoKTticmVhaztjYXNlIDg6dFtuXT1vLmFzQXJyYXkoKTticmVhaztjYXNlIDk6dFtuXT1vLnNlcmlhbGl6ZSgpO2JyZWFrO2Nhc2UgMTA6dFtuXT1vLmFzQXJyYXkoKTticmVhaztjYXNlIDExOnRbbl09by5pZDticmVhaztjYXNlIDEyOnRbbl09by5hc0FycmF5KCk7YnJlYWt9fXJldHVybiB0fXN0YXRpYyBQYXJzZShlLHQsaSxzPW51bGwpe2NvbnN0IHI9ZSgpO3N8fChzPSIiKSxnZSYmZ2UuQWRkVGFnc1RvKHIsdC50YWdzKTtjb25zdCBuPVJzKHIpO2Zvcihjb25zdCBhIGluIG4pe2NvbnN0IG89blthXSxoPXRbby5zb3VyY2VOYW1lfHxhXSxsPW8udHlwZTtpZihoIT1udWxsJiYoYSE9PSJ1bmlxdWVJZCJ8fGFlLkFsbG93TG9hZGluZ1VuaXF1ZUlkKSl7Y29uc3QgdT1yO3N3aXRjaChsKXtjYXNlIDA6dVthXT1oO2JyZWFrO2Nhc2UgMTppJiYodVthXT1hZS5fVGV4dHVyZVBhcnNlcihoLGkscykpO2JyZWFrO2Nhc2UgMjp1W2FdPXJlLkZyb21BcnJheShoKTticmVhaztjYXNlIDM6dVthXT1hZS5fRnJlc25lbFBhcmFtZXRlcnNQYXJzZXIoaCk7YnJlYWs7Y2FzZSA0OnVbYV09dmUuRnJvbUFycmF5KGgpO2JyZWFrO2Nhc2UgNTp1W2FdPXAuRnJvbUFycmF5KGgpO2JyZWFrO2Nhc2UgNjppJiYodVthXT1pLmdldExhc3RNZXNoQnlJZChoKSk7YnJlYWs7Y2FzZSA3OnVbYV09YWUuX0NvbG9yQ3VydmVzUGFyc2VyKGgpO2JyZWFrO2Nhc2UgODp1W2FdPW1lLkZyb21BcnJheShoKTticmVhaztjYXNlIDk6dVthXT1hZS5fSW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvblBhcnNlcihoKTticmVhaztjYXNlIDEwOnVbYV09Wi5Gcm9tQXJyYXkoaCk7YnJlYWs7Y2FzZSAxMTppJiYodVthXT1pLmdldENhbWVyYUJ5SWQoaCkpO2JyZWFrO2Nhc2UgMTI6dVthXT14LkZyb21BcnJheShoKTticmVha319fXJldHVybiByfXN0YXRpYyBDbG9uZShlLHQpe3JldHVybiB1cihlLHQsITEpfXN0YXRpYyBJbnN0YW5jaWF0ZShlLHQpe3JldHVybiB1cihlLHQsITApfX1hZS5BbGxvd0xvYWRpbmdVbmlxdWVJZD0hMSxhZS5fSW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvblBhcnNlcj1jPT57dGhyb3cgJCgiSW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbiIpfSxhZS5fRnJlc25lbFBhcmFtZXRlcnNQYXJzZXI9Yz0+e3Rocm93ICQoIkZyZXNuZWxQYXJhbWV0ZXJzIil9LGFlLl9Db2xvckN1cnZlc1BhcnNlcj1jPT57dGhyb3cgJCgiQ29sb3JDdXJ2ZXMiKX0sYWUuX1RleHR1cmVQYXJzZXI9KGMsZSx0KT0+e3Rocm93ICQoIlRleHR1cmUiKX07ZnVuY3Rpb24gJHQoYyxlLHQsaSl7Y29uc3Qgcz10LnZhbHVlO3QudmFsdWU9KC4uLnIpPT57bGV0IG49cztpZih0eXBlb2YgX25hdGl2ZTwidSImJl9uYXRpdmVbZV0pe2NvbnN0IGE9X25hdGl2ZVtlXTtpP249KC4uLm8pPT5pKC4uLm8pP2EoLi4ubyk6cyguLi5vKTpuPWF9cmV0dXJuIGNbZV09bixuKC4uLnIpfX0kdC5maWx0ZXI9ZnVuY3Rpb24oYyl7cmV0dXJuKGUsdCxpKT0+JHQoZSx0LGksYyl9O2NsYXNzIHlze2NvbnN0cnVjdG9yKGUpe2lmKHRoaXMuX2tleXM9W10sdGhpcy5faXNEaXJ0eT0hMCx0aGlzLl9hcmVMaWdodHNEaXJ0eT0hMCx0aGlzLl9hcmVMaWdodHNEaXNwb3NlZD0hMSx0aGlzLl9hcmVBdHRyaWJ1dGVzRGlydHk9ITAsdGhpcy5fYXJlVGV4dHVyZXNEaXJ0eT0hMCx0aGlzLl9hcmVGcmVzbmVsRGlydHk9ITAsdGhpcy5fYXJlTWlzY0RpcnR5PSEwLHRoaXMuX2FyZVByZVBhc3NEaXJ0eT0hMCx0aGlzLl9hcmVJbWFnZVByb2Nlc3NpbmdEaXJ0eT0hMCx0aGlzLl9ub3JtYWxzPSExLHRoaXMuX3V2cz0hMSx0aGlzLl9uZWVkTm9ybWFscz0hMSx0aGlzLl9uZWVkVVZzPSExLHRoaXMuX2V4dGVybmFsUHJvcGVydGllcz1lLGUpZm9yKGNvbnN0IHQgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KSYmdGhpcy5fc2V0RGVmYXVsdFZhbHVlKHQpfWdldCBpc0RpcnR5KCl7cmV0dXJuIHRoaXMuX2lzRGlydHl9bWFya0FzUHJvY2Vzc2VkKCl7dGhpcy5faXNEaXJ0eT0hMSx0aGlzLl9hcmVBdHRyaWJ1dGVzRGlydHk9ITEsdGhpcy5fYXJlVGV4dHVyZXNEaXJ0eT0hMSx0aGlzLl9hcmVGcmVzbmVsRGlydHk9ITEsdGhpcy5fYXJlTGlnaHRzRGlydHk9ITEsdGhpcy5fYXJlTGlnaHRzRGlzcG9zZWQ9ITEsdGhpcy5fYXJlTWlzY0RpcnR5PSExLHRoaXMuX2FyZVByZVBhc3NEaXJ0eT0hMSx0aGlzLl9hcmVJbWFnZVByb2Nlc3NpbmdEaXJ0eT0hMX1tYXJrQXNVbnByb2Nlc3NlZCgpe3RoaXMuX2lzRGlydHk9ITB9bWFya0FsbEFzRGlydHkoKXt0aGlzLl9hcmVUZXh0dXJlc0RpcnR5PSEwLHRoaXMuX2FyZUF0dHJpYnV0ZXNEaXJ0eT0hMCx0aGlzLl9hcmVMaWdodHNEaXJ0eT0hMCx0aGlzLl9hcmVGcmVzbmVsRGlydHk9ITAsdGhpcy5fYXJlTWlzY0RpcnR5PSEwLHRoaXMuX2FyZUltYWdlUHJvY2Vzc2luZ0RpcnR5PSEwLHRoaXMuX2lzRGlydHk9ITB9bWFya0FzSW1hZ2VQcm9jZXNzaW5nRGlydHkoKXt0aGlzLl9hcmVJbWFnZVByb2Nlc3NpbmdEaXJ0eT0hMCx0aGlzLl9pc0RpcnR5PSEwfW1hcmtBc0xpZ2h0RGlydHkoZT0hMSl7dGhpcy5fYXJlTGlnaHRzRGlydHk9ITAsdGhpcy5fYXJlTGlnaHRzRGlzcG9zZWQ9dGhpcy5fYXJlTGlnaHRzRGlzcG9zZWR8fGUsdGhpcy5faXNEaXJ0eT0hMH1tYXJrQXNBdHRyaWJ1dGVzRGlydHkoKXt0aGlzLl9hcmVBdHRyaWJ1dGVzRGlydHk9ITAsdGhpcy5faXNEaXJ0eT0hMH1tYXJrQXNUZXh0dXJlc0RpcnR5KCl7dGhpcy5fYXJlVGV4dHVyZXNEaXJ0eT0hMCx0aGlzLl9pc0RpcnR5PSEwfW1hcmtBc0ZyZXNuZWxEaXJ0eSgpe3RoaXMuX2FyZUZyZXNuZWxEaXJ0eT0hMCx0aGlzLl9pc0RpcnR5PSEwfW1hcmtBc01pc2NEaXJ0eSgpe3RoaXMuX2FyZU1pc2NEaXJ0eT0hMCx0aGlzLl9pc0RpcnR5PSEwfW1hcmtBc1ByZVBhc3NEaXJ0eSgpe3RoaXMuX2FyZVByZVBhc3NEaXJ0eT0hMCx0aGlzLl9pc0RpcnR5PSEwfXJlYnVpbGQoKXt0aGlzLl9rZXlzLmxlbmd0aD0wO2Zvcihjb25zdCBlIG9mIE9iamVjdC5rZXlzKHRoaXMpKWVbMF0hPT0iXyImJnRoaXMuX2tleXMucHVzaChlKTtpZih0aGlzLl9leHRlcm5hbFByb3BlcnRpZXMpZm9yKGNvbnN0IGUgaW4gdGhpcy5fZXh0ZXJuYWxQcm9wZXJ0aWVzKXRoaXMuX2tleXMuaW5kZXhPZihlKT09PS0xJiZ0aGlzLl9rZXlzLnB1c2goZSl9aXNFcXVhbChlKXtpZih0aGlzLl9rZXlzLmxlbmd0aCE9PWUuX2tleXMubGVuZ3RoKXJldHVybiExO2ZvcihsZXQgdD0wO3Q8dGhpcy5fa2V5cy5sZW5ndGg7dCsrKXtjb25zdCBpPXRoaXMuX2tleXNbdF07aWYodGhpc1tpXSE9PWVbaV0pcmV0dXJuITF9cmV0dXJuITB9Y2xvbmVUbyhlKXt0aGlzLl9rZXlzLmxlbmd0aCE9PWUuX2tleXMubGVuZ3RoJiYoZS5fa2V5cz10aGlzLl9rZXlzLnNsaWNlKDApKTtmb3IobGV0IHQ9MDt0PHRoaXMuX2tleXMubGVuZ3RoO3QrKyl7Y29uc3QgaT10aGlzLl9rZXlzW3RdO2VbaV09dGhpc1tpXX19cmVzZXQoKXt0aGlzLl9rZXlzLmZvckVhY2goZT0+dGhpcy5fc2V0RGVmYXVsdFZhbHVlKGUpKX1fc2V0RGVmYXVsdFZhbHVlKGUpe3ZhciB0LGkscyxyLG47Y29uc3QgYT0ocz0oaT0odD10aGlzLl9leHRlcm5hbFByb3BlcnRpZXMpPT09bnVsbHx8dD09PXZvaWQgMD92b2lkIDA6dFtlXSk9PT1udWxsfHxpPT09dm9pZCAwP3ZvaWQgMDppLnR5cGUpIT09bnVsbCYmcyE9PXZvaWQgMD9zOnR5cGVvZiB0aGlzW2VdLG89KG49KHI9dGhpcy5fZXh0ZXJuYWxQcm9wZXJ0aWVzKT09PW51bGx8fHI9PT12b2lkIDA/dm9pZCAwOnJbZV0pPT09bnVsbHx8bj09PXZvaWQgMD92b2lkIDA6bi5kZWZhdWx0O3N3aXRjaChhKXtjYXNlIm51bWJlciI6dGhpc1tlXT1vPz8wO2JyZWFrO2Nhc2Uic3RyaW5nIjp0aGlzW2VdPW8/PyIiO2JyZWFrO2RlZmF1bHQ6dGhpc1tlXT1vPz8hMTticmVha319dG9TdHJpbmcoKXtsZXQgZT0iIjtmb3IobGV0IHQ9MDt0PHRoaXMuX2tleXMubGVuZ3RoO3QrKyl7Y29uc3QgaT10aGlzLl9rZXlzW3RdLHM9dGhpc1tpXTtzd2l0Y2godHlwZW9mIHMpe2Nhc2UibnVtYmVyIjpjYXNlInN0cmluZyI6ZSs9IiNkZWZpbmUgIitpKyIgIitzK2AKYDticmVhaztkZWZhdWx0OnMmJihlKz0iI2RlZmluZSAiK2krYApgKTticmVha319cmV0dXJuIGV9fWNsYXNzIEFle2NvbnN0cnVjdG9yKCl7dGhpcy5fZGlydHk9ITAsdGhpcy5fdGVtcENvbG9yPW5ldyBtZSgwLDAsMCwwKSx0aGlzLl9nbG9iYWxDdXJ2ZT1uZXcgbWUoMCwwLDAsMCksdGhpcy5faGlnaGxpZ2h0c0N1cnZlPW5ldyBtZSgwLDAsMCwwKSx0aGlzLl9taWR0b25lc0N1cnZlPW5ldyBtZSgwLDAsMCwwKSx0aGlzLl9zaGFkb3dzQ3VydmU9bmV3IG1lKDAsMCwwLDApLHRoaXMuX3Bvc2l0aXZlQ3VydmU9bmV3IG1lKDAsMCwwLDApLHRoaXMuX25lZ2F0aXZlQ3VydmU9bmV3IG1lKDAsMCwwLDApLHRoaXMuX2dsb2JhbEh1ZT0zMCx0aGlzLl9nbG9iYWxEZW5zaXR5PTAsdGhpcy5fZ2xvYmFsU2F0dXJhdGlvbj0wLHRoaXMuX2dsb2JhbEV4cG9zdXJlPTAsdGhpcy5faGlnaGxpZ2h0c0h1ZT0zMCx0aGlzLl9oaWdobGlnaHRzRGVuc2l0eT0wLHRoaXMuX2hpZ2hsaWdodHNTYXR1cmF0aW9uPTAsdGhpcy5faGlnaGxpZ2h0c0V4cG9zdXJlPTAsdGhpcy5fbWlkdG9uZXNIdWU9MzAsdGhpcy5fbWlkdG9uZXNEZW5zaXR5PTAsdGhpcy5fbWlkdG9uZXNTYXR1cmF0aW9uPTAsdGhpcy5fbWlkdG9uZXNFeHBvc3VyZT0wLHRoaXMuX3NoYWRvd3NIdWU9MzAsdGhpcy5fc2hhZG93c0RlbnNpdHk9MCx0aGlzLl9zaGFkb3dzU2F0dXJhdGlvbj0wLHRoaXMuX3NoYWRvd3NFeHBvc3VyZT0wfWdldCBnbG9iYWxIdWUoKXtyZXR1cm4gdGhpcy5fZ2xvYmFsSHVlfXNldCBnbG9iYWxIdWUoZSl7dGhpcy5fZ2xvYmFsSHVlPWUsdGhpcy5fZGlydHk9ITB9Z2V0IGdsb2JhbERlbnNpdHkoKXtyZXR1cm4gdGhpcy5fZ2xvYmFsRGVuc2l0eX1zZXQgZ2xvYmFsRGVuc2l0eShlKXt0aGlzLl9nbG9iYWxEZW5zaXR5PWUsdGhpcy5fZGlydHk9ITB9Z2V0IGdsb2JhbFNhdHVyYXRpb24oKXtyZXR1cm4gdGhpcy5fZ2xvYmFsU2F0dXJhdGlvbn1zZXQgZ2xvYmFsU2F0dXJhdGlvbihlKXt0aGlzLl9nbG9iYWxTYXR1cmF0aW9uPWUsdGhpcy5fZGlydHk9ITB9Z2V0IGdsb2JhbEV4cG9zdXJlKCl7cmV0dXJuIHRoaXMuX2dsb2JhbEV4cG9zdXJlfXNldCBnbG9iYWxFeHBvc3VyZShlKXt0aGlzLl9nbG9iYWxFeHBvc3VyZT1lLHRoaXMuX2RpcnR5PSEwfWdldCBoaWdobGlnaHRzSHVlKCl7cmV0dXJuIHRoaXMuX2hpZ2hsaWdodHNIdWV9c2V0IGhpZ2hsaWdodHNIdWUoZSl7dGhpcy5faGlnaGxpZ2h0c0h1ZT1lLHRoaXMuX2RpcnR5PSEwfWdldCBoaWdobGlnaHRzRGVuc2l0eSgpe3JldHVybiB0aGlzLl9oaWdobGlnaHRzRGVuc2l0eX1zZXQgaGlnaGxpZ2h0c0RlbnNpdHkoZSl7dGhpcy5faGlnaGxpZ2h0c0RlbnNpdHk9ZSx0aGlzLl9kaXJ0eT0hMH1nZXQgaGlnaGxpZ2h0c1NhdHVyYXRpb24oKXtyZXR1cm4gdGhpcy5faGlnaGxpZ2h0c1NhdHVyYXRpb259c2V0IGhpZ2hsaWdodHNTYXR1cmF0aW9uKGUpe3RoaXMuX2hpZ2hsaWdodHNTYXR1cmF0aW9uPWUsdGhpcy5fZGlydHk9ITB9Z2V0IGhpZ2hsaWdodHNFeHBvc3VyZSgpe3JldHVybiB0aGlzLl9oaWdobGlnaHRzRXhwb3N1cmV9c2V0IGhpZ2hsaWdodHNFeHBvc3VyZShlKXt0aGlzLl9oaWdobGlnaHRzRXhwb3N1cmU9ZSx0aGlzLl9kaXJ0eT0hMH1nZXQgbWlkdG9uZXNIdWUoKXtyZXR1cm4gdGhpcy5fbWlkdG9uZXNIdWV9c2V0IG1pZHRvbmVzSHVlKGUpe3RoaXMuX21pZHRvbmVzSHVlPWUsdGhpcy5fZGlydHk9ITB9Z2V0IG1pZHRvbmVzRGVuc2l0eSgpe3JldHVybiB0aGlzLl9taWR0b25lc0RlbnNpdHl9c2V0IG1pZHRvbmVzRGVuc2l0eShlKXt0aGlzLl9taWR0b25lc0RlbnNpdHk9ZSx0aGlzLl9kaXJ0eT0hMH1nZXQgbWlkdG9uZXNTYXR1cmF0aW9uKCl7cmV0dXJuIHRoaXMuX21pZHRvbmVzU2F0dXJhdGlvbn1zZXQgbWlkdG9uZXNTYXR1cmF0aW9uKGUpe3RoaXMuX21pZHRvbmVzU2F0dXJhdGlvbj1lLHRoaXMuX2RpcnR5PSEwfWdldCBtaWR0b25lc0V4cG9zdXJlKCl7cmV0dXJuIHRoaXMuX21pZHRvbmVzRXhwb3N1cmV9c2V0IG1pZHRvbmVzRXhwb3N1cmUoZSl7dGhpcy5fbWlkdG9uZXNFeHBvc3VyZT1lLHRoaXMuX2RpcnR5PSEwfWdldCBzaGFkb3dzSHVlKCl7cmV0dXJuIHRoaXMuX3NoYWRvd3NIdWV9c2V0IHNoYWRvd3NIdWUoZSl7dGhpcy5fc2hhZG93c0h1ZT1lLHRoaXMuX2RpcnR5PSEwfWdldCBzaGFkb3dzRGVuc2l0eSgpe3JldHVybiB0aGlzLl9zaGFkb3dzRGVuc2l0eX1zZXQgc2hhZG93c0RlbnNpdHkoZSl7dGhpcy5fc2hhZG93c0RlbnNpdHk9ZSx0aGlzLl9kaXJ0eT0hMH1nZXQgc2hhZG93c1NhdHVyYXRpb24oKXtyZXR1cm4gdGhpcy5fc2hhZG93c1NhdHVyYXRpb259c2V0IHNoYWRvd3NTYXR1cmF0aW9uKGUpe3RoaXMuX3NoYWRvd3NTYXR1cmF0aW9uPWUsdGhpcy5fZGlydHk9ITB9Z2V0IHNoYWRvd3NFeHBvc3VyZSgpe3JldHVybiB0aGlzLl9zaGFkb3dzRXhwb3N1cmV9c2V0IHNoYWRvd3NFeHBvc3VyZShlKXt0aGlzLl9zaGFkb3dzRXhwb3N1cmU9ZSx0aGlzLl9kaXJ0eT0hMH1nZXRDbGFzc05hbWUoKXtyZXR1cm4iQ29sb3JDdXJ2ZXMifXN0YXRpYyBCaW5kKGUsdCxpPSJ2Q2FtZXJhQ29sb3JDdXJ2ZVBvc2l0aXZlIixzPSJ2Q2FtZXJhQ29sb3JDdXJ2ZU5ldXRyYWwiLHI9InZDYW1lcmFDb2xvckN1cnZlTmVnYXRpdmUiKXtlLl9kaXJ0eSYmKGUuX2RpcnR5PSExLGUuX2dldENvbG9yR3JhZGluZ0RhdGFUb1JlZihlLl9nbG9iYWxIdWUsZS5fZ2xvYmFsRGVuc2l0eSxlLl9nbG9iYWxTYXR1cmF0aW9uLGUuX2dsb2JhbEV4cG9zdXJlLGUuX2dsb2JhbEN1cnZlKSxlLl9nZXRDb2xvckdyYWRpbmdEYXRhVG9SZWYoZS5faGlnaGxpZ2h0c0h1ZSxlLl9oaWdobGlnaHRzRGVuc2l0eSxlLl9oaWdobGlnaHRzU2F0dXJhdGlvbixlLl9oaWdobGlnaHRzRXhwb3N1cmUsZS5fdGVtcENvbG9yKSxlLl90ZW1wQ29sb3IubXVsdGlwbHlUb1JlZihlLl9nbG9iYWxDdXJ2ZSxlLl9oaWdobGlnaHRzQ3VydmUpLGUuX2dldENvbG9yR3JhZGluZ0RhdGFUb1JlZihlLl9taWR0b25lc0h1ZSxlLl9taWR0b25lc0RlbnNpdHksZS5fbWlkdG9uZXNTYXR1cmF0aW9uLGUuX21pZHRvbmVzRXhwb3N1cmUsZS5fdGVtcENvbG9yKSxlLl90ZW1wQ29sb3IubXVsdGlwbHlUb1JlZihlLl9nbG9iYWxDdXJ2ZSxlLl9taWR0b25lc0N1cnZlKSxlLl9nZXRDb2xvckdyYWRpbmdEYXRhVG9SZWYoZS5fc2hhZG93c0h1ZSxlLl9zaGFkb3dzRGVuc2l0eSxlLl9zaGFkb3dzU2F0dXJhdGlvbixlLl9zaGFkb3dzRXhwb3N1cmUsZS5fdGVtcENvbG9yKSxlLl90ZW1wQ29sb3IubXVsdGlwbHlUb1JlZihlLl9nbG9iYWxDdXJ2ZSxlLl9zaGFkb3dzQ3VydmUpLGUuX2hpZ2hsaWdodHNDdXJ2ZS5zdWJ0cmFjdFRvUmVmKGUuX21pZHRvbmVzQ3VydmUsZS5fcG9zaXRpdmVDdXJ2ZSksZS5fbWlkdG9uZXNDdXJ2ZS5zdWJ0cmFjdFRvUmVmKGUuX3NoYWRvd3NDdXJ2ZSxlLl9uZWdhdGl2ZUN1cnZlKSksdCYmKHQuc2V0RmxvYXQ0KGksZS5fcG9zaXRpdmVDdXJ2ZS5yLGUuX3Bvc2l0aXZlQ3VydmUuZyxlLl9wb3NpdGl2ZUN1cnZlLmIsZS5fcG9zaXRpdmVDdXJ2ZS5hKSx0LnNldEZsb2F0NChzLGUuX21pZHRvbmVzQ3VydmUucixlLl9taWR0b25lc0N1cnZlLmcsZS5fbWlkdG9uZXNDdXJ2ZS5iLGUuX21pZHRvbmVzQ3VydmUuYSksdC5zZXRGbG9hdDQocixlLl9uZWdhdGl2ZUN1cnZlLnIsZS5fbmVnYXRpdmVDdXJ2ZS5nLGUuX25lZ2F0aXZlQ3VydmUuYixlLl9uZWdhdGl2ZUN1cnZlLmEpKX1zdGF0aWMgUHJlcGFyZVVuaWZvcm1zKGUpe2UucHVzaCgidkNhbWVyYUNvbG9yQ3VydmVOZXV0cmFsIiwidkNhbWVyYUNvbG9yQ3VydmVQb3NpdGl2ZSIsInZDYW1lcmFDb2xvckN1cnZlTmVnYXRpdmUiKX1fZ2V0Q29sb3JHcmFkaW5nRGF0YVRvUmVmKGUsdCxpLHMscil7ZSE9bnVsbCYmKGU9QWUuX0NsYW1wKGUsMCwzNjApLHQ9QWUuX0NsYW1wKHQsLTEwMCwxMDApLGk9QWUuX0NsYW1wKGksLTEwMCwxMDApLHM9QWUuX0NsYW1wKHMsLTEwMCwxMDApLHQ9QWUuX0FwcGx5Q29sb3JHcmFkaW5nU2xpZGVyTm9ubGluZWFyKHQpLHQqPS41LHM9QWUuX0FwcGx5Q29sb3JHcmFkaW5nU2xpZGVyTm9ubGluZWFyKHMpLHQ8MCYmKHQqPS0xLGU9KGUrMTgwKSUzNjApLEFlLl9Gcm9tSFNCVG9SZWYoZSx0LDUwKy4yNSpzLHIpLHIuc2NhbGVUb1JlZigyLHIpLHIuYT0xKy4wMSppKX1zdGF0aWMgX0FwcGx5Q29sb3JHcmFkaW5nU2xpZGVyTm9ubGluZWFyKGUpe2UvPTEwMDtsZXQgdD1NYXRoLmFicyhlKTtyZXR1cm4gdD1NYXRoLnBvdyh0LDIpLGU8MCYmKHQqPS0xKSx0Kj0xMDAsdH1zdGF0aWMgX0Zyb21IU0JUb1JlZihlLHQsaSxzKXtsZXQgcj1BZS5fQ2xhbXAoZSwwLDM2MCk7Y29uc3Qgbj1BZS5fQ2xhbXAodC8xMDAsMCwxKSxhPUFlLl9DbGFtcChpLzEwMCwwLDEpO2lmKG49PT0wKXMucj1hLHMuZz1hLHMuYj1hO2Vsc2V7ci89NjA7Y29uc3Qgbz1NYXRoLmZsb29yKHIpLGg9ci1vLGw9YSooMS1uKSx1PWEqKDEtbipoKSxkPWEqKDEtbiooMS1oKSk7c3dpdGNoKG8pe2Nhc2UgMDpzLnI9YSxzLmc9ZCxzLmI9bDticmVhaztjYXNlIDE6cy5yPXUscy5nPWEscy5iPWw7YnJlYWs7Y2FzZSAyOnMucj1sLHMuZz1hLHMuYj1kO2JyZWFrO2Nhc2UgMzpzLnI9bCxzLmc9dSxzLmI9YTticmVhaztjYXNlIDQ6cy5yPWQscy5nPWwscy5iPWE7YnJlYWs7ZGVmYXVsdDpzLnI9YSxzLmc9bCxzLmI9dTticmVha319cy5hPTF9c3RhdGljIF9DbGFtcChlLHQsaSl7cmV0dXJuIE1hdGgubWluKE1hdGgubWF4KGUsdCksaSl9Y2xvbmUoKXtyZXR1cm4gYWUuQ2xvbmUoKCk9Pm5ldyBBZSx0aGlzKX1zZXJpYWxpemUoKXtyZXR1cm4gYWUuU2VyaWFsaXplKHRoaXMpfXN0YXRpYyBQYXJzZShlKXtyZXR1cm4gYWUuUGFyc2UoKCk9Pm5ldyBBZSxlLG51bGwsbnVsbCl9fVQoW1IoKV0sQWUucHJvdG90eXBlLCJfZ2xvYmFsSHVlIix2b2lkIDApLFQoW1IoKV0sQWUucHJvdG90eXBlLCJfZ2xvYmFsRGVuc2l0eSIsdm9pZCAwKSxUKFtSKCldLEFlLnByb3RvdHlwZSwiX2dsb2JhbFNhdHVyYXRpb24iLHZvaWQgMCksVChbUigpXSxBZS5wcm90b3R5cGUsIl9nbG9iYWxFeHBvc3VyZSIsdm9pZCAwKSxUKFtSKCldLEFlLnByb3RvdHlwZSwiX2hpZ2hsaWdodHNIdWUiLHZvaWQgMCksVChbUigpXSxBZS5wcm90b3R5cGUsIl9oaWdobGlnaHRzRGVuc2l0eSIsdm9pZCAwKSxUKFtSKCldLEFlLnByb3RvdHlwZSwiX2hpZ2hsaWdodHNTYXR1cmF0aW9uIix2b2lkIDApLFQoW1IoKV0sQWUucHJvdG90eXBlLCJfaGlnaGxpZ2h0c0V4cG9zdXJlIix2b2lkIDApLFQoW1IoKV0sQWUucHJvdG90eXBlLCJfbWlkdG9uZXNIdWUiLHZvaWQgMCksVChbUigpXSxBZS5wcm90b3R5cGUsIl9taWR0b25lc0RlbnNpdHkiLHZvaWQgMCksVChbUigpXSxBZS5wcm90b3R5cGUsIl9taWR0b25lc1NhdHVyYXRpb24iLHZvaWQgMCksVChbUigpXSxBZS5wcm90b3R5cGUsIl9taWR0b25lc0V4cG9zdXJlIix2b2lkIDApLGFlLl9Db2xvckN1cnZlc1BhcnNlcj1BZS5QYXJzZTtjbGFzcyBwZXtjb25zdHJ1Y3Rvcigpe3RoaXMuY29sb3JDdXJ2ZXM9bmV3IEFlLHRoaXMuX2NvbG9yQ3VydmVzRW5hYmxlZD0hMSx0aGlzLl9jb2xvckdyYWRpbmdFbmFibGVkPSExLHRoaXMuX2NvbG9yR3JhZGluZ1dpdGhHcmVlbkRlcHRoPSEwLHRoaXMuX2NvbG9yR3JhZGluZ0JHUj0hMCx0aGlzLl9leHBvc3VyZT0xLHRoaXMuX3RvbmVNYXBwaW5nRW5hYmxlZD0hMSx0aGlzLl90b25lTWFwcGluZ1R5cGU9cGUuVE9ORU1BUFBJTkdfU1RBTkRBUkQsdGhpcy5fY29udHJhc3Q9MSx0aGlzLnZpZ25ldHRlU3RyZXRjaD0wLHRoaXMudmlnbmV0dGVDZW50ZXJYPTAsdGhpcy52aWduZXR0ZUNlbnRlclk9MCx0aGlzLnZpZ25ldHRlV2VpZ2h0PTEuNSx0aGlzLnZpZ25ldHRlQ29sb3I9bmV3IG1lKDAsMCwwLDApLHRoaXMudmlnbmV0dGVDYW1lcmFGb3Y9LjUsdGhpcy5fdmlnbmV0dGVCbGVuZE1vZGU9cGUuVklHTkVUVEVNT0RFX01VTFRJUExZLHRoaXMuX3ZpZ25ldHRlRW5hYmxlZD0hMSx0aGlzLl9kaXRoZXJpbmdFbmFibGVkPSExLHRoaXMuX2RpdGhlcmluZ0ludGVuc2l0eT0xLzI1NSx0aGlzLl9za2lwRmluYWxDb2xvckNsYW1wPSExLHRoaXMuX2FwcGx5QnlQb3N0UHJvY2Vzcz0hMSx0aGlzLl9pc0VuYWJsZWQ9ITAsdGhpcy5vblVwZGF0ZVBhcmFtZXRlcnM9bmV3IEZ9Z2V0IGNvbG9yQ3VydmVzRW5hYmxlZCgpe3JldHVybiB0aGlzLl9jb2xvckN1cnZlc0VuYWJsZWR9c2V0IGNvbG9yQ3VydmVzRW5hYmxlZChlKXt0aGlzLl9jb2xvckN1cnZlc0VuYWJsZWQhPT1lJiYodGhpcy5fY29sb3JDdXJ2ZXNFbmFibGVkPWUsdGhpcy5fdXBkYXRlUGFyYW1ldGVycygpKX1nZXQgY29sb3JHcmFkaW5nVGV4dHVyZSgpe3JldHVybiB0aGlzLl9jb2xvckdyYWRpbmdUZXh0dXJlfXNldCBjb2xvckdyYWRpbmdUZXh0dXJlKGUpe3RoaXMuX2NvbG9yR3JhZGluZ1RleHR1cmUhPT1lJiYodGhpcy5fY29sb3JHcmFkaW5nVGV4dHVyZT1lLHRoaXMuX3VwZGF0ZVBhcmFtZXRlcnMoKSl9Z2V0IGNvbG9yR3JhZGluZ0VuYWJsZWQoKXtyZXR1cm4gdGhpcy5fY29sb3JHcmFkaW5nRW5hYmxlZH1zZXQgY29sb3JHcmFkaW5nRW5hYmxlZChlKXt0aGlzLl9jb2xvckdyYWRpbmdFbmFibGVkIT09ZSYmKHRoaXMuX2NvbG9yR3JhZGluZ0VuYWJsZWQ9ZSx0aGlzLl91cGRhdGVQYXJhbWV0ZXJzKCkpfWdldCBjb2xvckdyYWRpbmdXaXRoR3JlZW5EZXB0aCgpe3JldHVybiB0aGlzLl9jb2xvckdyYWRpbmdXaXRoR3JlZW5EZXB0aH1zZXQgY29sb3JHcmFkaW5nV2l0aEdyZWVuRGVwdGgoZSl7dGhpcy5fY29sb3JHcmFkaW5nV2l0aEdyZWVuRGVwdGghPT1lJiYodGhpcy5fY29sb3JHcmFkaW5nV2l0aEdyZWVuRGVwdGg9ZSx0aGlzLl91cGRhdGVQYXJhbWV0ZXJzKCkpfWdldCBjb2xvckdyYWRpbmdCR1IoKXtyZXR1cm4gdGhpcy5fY29sb3JHcmFkaW5nQkdSfXNldCBjb2xvckdyYWRpbmdCR1IoZSl7dGhpcy5fY29sb3JHcmFkaW5nQkdSIT09ZSYmKHRoaXMuX2NvbG9yR3JhZGluZ0JHUj1lLHRoaXMuX3VwZGF0ZVBhcmFtZXRlcnMoKSl9Z2V0IGV4cG9zdXJlKCl7cmV0dXJuIHRoaXMuX2V4cG9zdXJlfXNldCBleHBvc3VyZShlKXt0aGlzLl9leHBvc3VyZSE9PWUmJih0aGlzLl9leHBvc3VyZT1lLHRoaXMuX3VwZGF0ZVBhcmFtZXRlcnMoKSl9Z2V0IHRvbmVNYXBwaW5nRW5hYmxlZCgpe3JldHVybiB0aGlzLl90b25lTWFwcGluZ0VuYWJsZWR9c2V0IHRvbmVNYXBwaW5nRW5hYmxlZChlKXt0aGlzLl90b25lTWFwcGluZ0VuYWJsZWQhPT1lJiYodGhpcy5fdG9uZU1hcHBpbmdFbmFibGVkPWUsdGhpcy5fdXBkYXRlUGFyYW1ldGVycygpKX1nZXQgdG9uZU1hcHBpbmdUeXBlKCl7cmV0dXJuIHRoaXMuX3RvbmVNYXBwaW5nVHlwZX1zZXQgdG9uZU1hcHBpbmdUeXBlKGUpe3RoaXMuX3RvbmVNYXBwaW5nVHlwZSE9PWUmJih0aGlzLl90b25lTWFwcGluZ1R5cGU9ZSx0aGlzLl91cGRhdGVQYXJhbWV0ZXJzKCkpfWdldCBjb250cmFzdCgpe3JldHVybiB0aGlzLl9jb250cmFzdH1zZXQgY29udHJhc3QoZSl7dGhpcy5fY29udHJhc3QhPT1lJiYodGhpcy5fY29udHJhc3Q9ZSx0aGlzLl91cGRhdGVQYXJhbWV0ZXJzKCkpfWdldCB2aWduZXR0ZUNlbnRyZVkoKXtyZXR1cm4gdGhpcy52aWduZXR0ZUNlbnRlcll9c2V0IHZpZ25ldHRlQ2VudHJlWShlKXt0aGlzLnZpZ25ldHRlQ2VudGVyWT1lfWdldCB2aWduZXR0ZUNlbnRyZVgoKXtyZXR1cm4gdGhpcy52aWduZXR0ZUNlbnRlclh9c2V0IHZpZ25ldHRlQ2VudHJlWChlKXt0aGlzLnZpZ25ldHRlQ2VudGVyWD1lfWdldCB2aWduZXR0ZUJsZW5kTW9kZSgpe3JldHVybiB0aGlzLl92aWduZXR0ZUJsZW5kTW9kZX1zZXQgdmlnbmV0dGVCbGVuZE1vZGUoZSl7dGhpcy5fdmlnbmV0dGVCbGVuZE1vZGUhPT1lJiYodGhpcy5fdmlnbmV0dGVCbGVuZE1vZGU9ZSx0aGlzLl91cGRhdGVQYXJhbWV0ZXJzKCkpfWdldCB2aWduZXR0ZUVuYWJsZWQoKXtyZXR1cm4gdGhpcy5fdmlnbmV0dGVFbmFibGVkfXNldCB2aWduZXR0ZUVuYWJsZWQoZSl7dGhpcy5fdmlnbmV0dGVFbmFibGVkIT09ZSYmKHRoaXMuX3ZpZ25ldHRlRW5hYmxlZD1lLHRoaXMuX3VwZGF0ZVBhcmFtZXRlcnMoKSl9Z2V0IGRpdGhlcmluZ0VuYWJsZWQoKXtyZXR1cm4gdGhpcy5fZGl0aGVyaW5nRW5hYmxlZH1zZXQgZGl0aGVyaW5nRW5hYmxlZChlKXt0aGlzLl9kaXRoZXJpbmdFbmFibGVkIT09ZSYmKHRoaXMuX2RpdGhlcmluZ0VuYWJsZWQ9ZSx0aGlzLl91cGRhdGVQYXJhbWV0ZXJzKCkpfWdldCBkaXRoZXJpbmdJbnRlbnNpdHkoKXtyZXR1cm4gdGhpcy5fZGl0aGVyaW5nSW50ZW5zaXR5fXNldCBkaXRoZXJpbmdJbnRlbnNpdHkoZSl7dGhpcy5fZGl0aGVyaW5nSW50ZW5zaXR5IT09ZSYmKHRoaXMuX2RpdGhlcmluZ0ludGVuc2l0eT1lLHRoaXMuX3VwZGF0ZVBhcmFtZXRlcnMoKSl9Z2V0IHNraXBGaW5hbENvbG9yQ2xhbXAoKXtyZXR1cm4gdGhpcy5fc2tpcEZpbmFsQ29sb3JDbGFtcH1zZXQgc2tpcEZpbmFsQ29sb3JDbGFtcChlKXt0aGlzLl9za2lwRmluYWxDb2xvckNsYW1wIT09ZSYmKHRoaXMuX3NraXBGaW5hbENvbG9yQ2xhbXA9ZSx0aGlzLl91cGRhdGVQYXJhbWV0ZXJzKCkpfWdldCBhcHBseUJ5UG9zdFByb2Nlc3MoKXtyZXR1cm4gdGhpcy5fYXBwbHlCeVBvc3RQcm9jZXNzfXNldCBhcHBseUJ5UG9zdFByb2Nlc3MoZSl7dGhpcy5fYXBwbHlCeVBvc3RQcm9jZXNzIT09ZSYmKHRoaXMuX2FwcGx5QnlQb3N0UHJvY2Vzcz1lLHRoaXMuX3VwZGF0ZVBhcmFtZXRlcnMoKSl9Z2V0IGlzRW5hYmxlZCgpe3JldHVybiB0aGlzLl9pc0VuYWJsZWR9c2V0IGlzRW5hYmxlZChlKXt0aGlzLl9pc0VuYWJsZWQhPT1lJiYodGhpcy5faXNFbmFibGVkPWUsdGhpcy5fdXBkYXRlUGFyYW1ldGVycygpKX1fdXBkYXRlUGFyYW1ldGVycygpe3RoaXMub25VcGRhdGVQYXJhbWV0ZXJzLm5vdGlmeU9ic2VydmVycyh0aGlzKX1nZXRDbGFzc05hbWUoKXtyZXR1cm4iSW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbiJ9c3RhdGljIFByZXBhcmVVbmlmb3JtcyhlLHQpe3QuRVhQT1NVUkUmJmUucHVzaCgiZXhwb3N1cmVMaW5lYXIiKSx0LkNPTlRSQVNUJiZlLnB1c2goImNvbnRyYXN0IiksdC5DT0xPUkdSQURJTkcmJmUucHVzaCgiY29sb3JUcmFuc2Zvcm1TZXR0aW5ncyIpLCh0LlZJR05FVFRFfHx0LkRJVEhFUikmJmUucHVzaCgidkludmVyc2VTY3JlZW5TaXplIiksdC5WSUdORVRURSYmKGUucHVzaCgidmlnbmV0dGVTZXR0aW5nczEiKSxlLnB1c2goInZpZ25ldHRlU2V0dGluZ3MyIikpLHQuQ09MT1JDVVJWRVMmJkFlLlByZXBhcmVVbmlmb3JtcyhlKSx0LkRJVEhFUiYmZS5wdXNoKCJkaXRoZXJJbnRlbnNpdHkiKX1zdGF0aWMgUHJlcGFyZVNhbXBsZXJzKGUsdCl7dC5DT0xPUkdSQURJTkcmJmUucHVzaCgidHhDb2xvclRyYW5zZm9ybSIpfXByZXBhcmVEZWZpbmVzKGUsdD0hMSl7aWYodCE9PXRoaXMuYXBwbHlCeVBvc3RQcm9jZXNzfHwhdGhpcy5faXNFbmFibGVkKXtlLlZJR05FVFRFPSExLGUuVE9ORU1BUFBJTkc9ITEsZS5UT05FTUFQUElOR19BQ0VTPSExLGUuQ09OVFJBU1Q9ITEsZS5FWFBPU1VSRT0hMSxlLkNPTE9SQ1VSVkVTPSExLGUuQ09MT1JHUkFESU5HPSExLGUuQ09MT1JHUkFESU5HM0Q9ITEsZS5ESVRIRVI9ITEsZS5JTUFHRVBST0NFU1NJTkc9ITEsZS5TS0lQRklOQUxDT0xPUkNMQU1QPXRoaXMuc2tpcEZpbmFsQ29sb3JDbGFtcCxlLklNQUdFUFJPQ0VTU0lOR1BPU1RQUk9DRVNTPXRoaXMuYXBwbHlCeVBvc3RQcm9jZXNzJiZ0aGlzLl9pc0VuYWJsZWQ7cmV0dXJufXN3aXRjaChlLlZJR05FVFRFPXRoaXMudmlnbmV0dGVFbmFibGVkLGUuVklHTkVUVEVCTEVORE1PREVNVUxUSVBMWT10aGlzLnZpZ25ldHRlQmxlbmRNb2RlPT09cGUuX1ZJR05FVFRFTU9ERV9NVUxUSVBMWSxlLlZJR05FVFRFQkxFTkRNT0RFT1BBUVVFPSFlLlZJR05FVFRFQkxFTkRNT0RFTVVMVElQTFksZS5UT05FTUFQUElORz10aGlzLnRvbmVNYXBwaW5nRW5hYmxlZCx0aGlzLl90b25lTWFwcGluZ1R5cGUpe2Nhc2UgcGUuVE9ORU1BUFBJTkdfQUNFUzplLlRPTkVNQVBQSU5HX0FDRVM9ITA7YnJlYWs7ZGVmYXVsdDplLlRPTkVNQVBQSU5HX0FDRVM9ITE7YnJlYWt9ZS5DT05UUkFTVD10aGlzLmNvbnRyYXN0IT09MSxlLkVYUE9TVVJFPXRoaXMuZXhwb3N1cmUhPT0xLGUuQ09MT1JDVVJWRVM9dGhpcy5jb2xvckN1cnZlc0VuYWJsZWQmJiEhdGhpcy5jb2xvckN1cnZlcyxlLkNPTE9SR1JBRElORz10aGlzLmNvbG9yR3JhZGluZ0VuYWJsZWQmJiEhdGhpcy5jb2xvckdyYWRpbmdUZXh0dXJlLGUuQ09MT1JHUkFESU5HP2UuQ09MT1JHUkFESU5HM0Q9dGhpcy5jb2xvckdyYWRpbmdUZXh0dXJlLmlzM0Q6ZS5DT0xPUkdSQURJTkczRD0hMSxlLlNBTVBMRVIzREdSRUVOREVQVEg9dGhpcy5jb2xvckdyYWRpbmdXaXRoR3JlZW5EZXB0aCxlLlNBTVBMRVIzREJHUk1BUD10aGlzLmNvbG9yR3JhZGluZ0JHUixlLkRJVEhFUj10aGlzLl9kaXRoZXJpbmdFbmFibGVkLGUuSU1BR0VQUk9DRVNTSU5HUE9TVFBST0NFU1M9dGhpcy5hcHBseUJ5UG9zdFByb2Nlc3MsZS5TS0lQRklOQUxDT0xPUkNMQU1QPXRoaXMuc2tpcEZpbmFsQ29sb3JDbGFtcCxlLklNQUdFUFJPQ0VTU0lORz1lLlZJR05FVFRFfHxlLlRPTkVNQVBQSU5HfHxlLkNPTlRSQVNUfHxlLkVYUE9TVVJFfHxlLkNPTE9SQ1VSVkVTfHxlLkNPTE9SR1JBRElOR3x8ZS5ESVRIRVJ9aXNSZWFkeSgpe3JldHVybiF0aGlzLmNvbG9yR3JhZGluZ0VuYWJsZWR8fCF0aGlzLmNvbG9yR3JhZGluZ1RleHR1cmV8fHRoaXMuY29sb3JHcmFkaW5nVGV4dHVyZS5pc1JlYWR5KCl9YmluZChlLHQpe2lmKHRoaXMuX2NvbG9yQ3VydmVzRW5hYmxlZCYmdGhpcy5jb2xvckN1cnZlcyYmQWUuQmluZCh0aGlzLmNvbG9yQ3VydmVzLGUpLHRoaXMuX3ZpZ25ldHRlRW5hYmxlZHx8dGhpcy5fZGl0aGVyaW5nRW5hYmxlZCl7Y29uc3QgaT0xL2UuZ2V0RW5naW5lKCkuZ2V0UmVuZGVyV2lkdGgoKSxzPTEvZS5nZXRFbmdpbmUoKS5nZXRSZW5kZXJIZWlnaHQoKTtpZihlLnNldEZsb2F0MigidkludmVyc2VTY3JlZW5TaXplIixpLHMpLHRoaXMuX2RpdGhlcmluZ0VuYWJsZWQmJmUuc2V0RmxvYXQoImRpdGhlckludGVuc2l0eSIsLjUqdGhpcy5fZGl0aGVyaW5nSW50ZW5zaXR5KSx0aGlzLl92aWduZXR0ZUVuYWJsZWQpe2NvbnN0IHI9dD8/cy9pO2xldCBuPU1hdGgudGFuKHRoaXMudmlnbmV0dGVDYW1lcmFGb3YqLjUpLGE9bipyO2NvbnN0IG89TWF0aC5zcXJ0KGEqbik7YT1ILk1peChhLG8sdGhpcy52aWduZXR0ZVN0cmV0Y2gpLG49SC5NaXgobixvLHRoaXMudmlnbmV0dGVTdHJldGNoKSxlLnNldEZsb2F0NCgidmlnbmV0dGVTZXR0aW5nczEiLGEsbiwtYSp0aGlzLnZpZ25ldHRlQ2VudGVyWCwtbip0aGlzLnZpZ25ldHRlQ2VudGVyWSk7Y29uc3QgaD0tMip0aGlzLnZpZ25ldHRlV2VpZ2h0O2Uuc2V0RmxvYXQ0KCJ2aWduZXR0ZVNldHRpbmdzMiIsdGhpcy52aWduZXR0ZUNvbG9yLnIsdGhpcy52aWduZXR0ZUNvbG9yLmcsdGhpcy52aWduZXR0ZUNvbG9yLmIsaCl9fWlmKGUuc2V0RmxvYXQoImV4cG9zdXJlTGluZWFyIix0aGlzLmV4cG9zdXJlKSxlLnNldEZsb2F0KCJjb250cmFzdCIsdGhpcy5jb250cmFzdCksdGhpcy5jb2xvckdyYWRpbmdUZXh0dXJlKXtlLnNldFRleHR1cmUoInR4Q29sb3JUcmFuc2Zvcm0iLHRoaXMuY29sb3JHcmFkaW5nVGV4dHVyZSk7Y29uc3QgaT10aGlzLmNvbG9yR3JhZGluZ1RleHR1cmUuZ2V0U2l6ZSgpLmhlaWdodDtlLnNldEZsb2F0NCgiY29sb3JUcmFuc2Zvcm1TZXR0aW5ncyIsKGktMSkvaSwuNS9pLGksdGhpcy5jb2xvckdyYWRpbmdUZXh0dXJlLmxldmVsKX19Y2xvbmUoKXtyZXR1cm4gYWUuQ2xvbmUoKCk9Pm5ldyBwZSx0aGlzKX1zZXJpYWxpemUoKXtyZXR1cm4gYWUuU2VyaWFsaXplKHRoaXMpfXN0YXRpYyBQYXJzZShlKXtjb25zdCB0PWFlLlBhcnNlKCgpPT5uZXcgcGUsZSxudWxsLG51bGwpO3JldHVybiBlLnZpZ25ldHRlQ2VudHJlWCE9PXZvaWQgMCYmKHQudmlnbmV0dGVDZW50ZXJYPWUudmlnbmV0dGVDZW50cmVYKSxlLnZpZ25ldHRlQ2VudHJlWSE9PXZvaWQgMCYmKHQudmlnbmV0dGVDZW50ZXJZPWUudmlnbmV0dGVDZW50cmVZKSx0fXN0YXRpYyBnZXQgVklHTkVUVEVNT0RFX01VTFRJUExZKCl7cmV0dXJuIHRoaXMuX1ZJR05FVFRFTU9ERV9NVUxUSVBMWX1zdGF0aWMgZ2V0IFZJR05FVFRFTU9ERV9PUEFRVUUoKXtyZXR1cm4gdGhpcy5fVklHTkVUVEVNT0RFX09QQVFVRX19cGUuVE9ORU1BUFBJTkdfU1RBTkRBUkQ9MCxwZS5UT05FTUFQUElOR19BQ0VTPTEscGUuX1ZJR05FVFRFTU9ERV9NVUxUSVBMWT0wLHBlLl9WSUdORVRURU1PREVfT1BBUVVFPTEsVChbQW4oKV0scGUucHJvdG90eXBlLCJjb2xvckN1cnZlcyIsdm9pZCAwKSxUKFtSKCldLHBlLnByb3RvdHlwZSwiX2NvbG9yQ3VydmVzRW5hYmxlZCIsdm9pZCAwKSxUKFttdCgiY29sb3JHcmFkaW5nVGV4dHVyZSIpXSxwZS5wcm90b3R5cGUsIl9jb2xvckdyYWRpbmdUZXh0dXJlIix2b2lkIDApLFQoW1IoKV0scGUucHJvdG90eXBlLCJfY29sb3JHcmFkaW5nRW5hYmxlZCIsdm9pZCAwKSxUKFtSKCldLHBlLnByb3RvdHlwZSwiX2NvbG9yR3JhZGluZ1dpdGhHcmVlbkRlcHRoIix2b2lkIDApLFQoW1IoKV0scGUucHJvdG90eXBlLCJfY29sb3JHcmFkaW5nQkdSIix2b2lkIDApLFQoW1IoKV0scGUucHJvdG90eXBlLCJfZXhwb3N1cmUiLHZvaWQgMCksVChbUigpXSxwZS5wcm90b3R5cGUsIl90b25lTWFwcGluZ0VuYWJsZWQiLHZvaWQgMCksVChbUigpXSxwZS5wcm90b3R5cGUsIl90b25lTWFwcGluZ1R5cGUiLHZvaWQgMCksVChbUigpXSxwZS5wcm90b3R5cGUsIl9jb250cmFzdCIsdm9pZCAwKSxUKFtSKCldLHBlLnByb3RvdHlwZSwidmlnbmV0dGVTdHJldGNoIix2b2lkIDApLFQoW1IoKV0scGUucHJvdG90eXBlLCJ2aWduZXR0ZUNlbnRlclgiLHZvaWQgMCksVChbUigpXSxwZS5wcm90b3R5cGUsInZpZ25ldHRlQ2VudGVyWSIsdm9pZCAwKSxUKFtSKCldLHBlLnByb3RvdHlwZSwidmlnbmV0dGVXZWlnaHQiLHZvaWQgMCksVChbZHIoKV0scGUucHJvdG90eXBlLCJ2aWduZXR0ZUNvbG9yIix2b2lkIDApLFQoW1IoKV0scGUucHJvdG90eXBlLCJ2aWduZXR0ZUNhbWVyYUZvdiIsdm9pZCAwKSxUKFtSKCldLHBlLnByb3RvdHlwZSwiX3ZpZ25ldHRlQmxlbmRNb2RlIix2b2lkIDApLFQoW1IoKV0scGUucHJvdG90eXBlLCJfdmlnbmV0dGVFbmFibGVkIix2b2lkIDApLFQoW1IoKV0scGUucHJvdG90eXBlLCJfZGl0aGVyaW5nRW5hYmxlZCIsdm9pZCAwKSxUKFtSKCldLHBlLnByb3RvdHlwZSwiX2RpdGhlcmluZ0ludGVuc2l0eSIsdm9pZCAwKSxUKFtSKCldLHBlLnByb3RvdHlwZSwiX3NraXBGaW5hbENvbG9yQ2xhbXAiLHZvaWQgMCksVChbUigpXSxwZS5wcm90b3R5cGUsIl9hcHBseUJ5UG9zdFByb2Nlc3MiLHZvaWQgMCksVChbUigpXSxwZS5wcm90b3R5cGUsIl9pc0VuYWJsZWQiLHZvaWQgMCksYWUuX0ltYWdlUHJvY2Vzc2luZ0NvbmZpZ3VyYXRpb25QYXJzZXI9cGUuUGFyc2Usb2UucHJvdG90eXBlLmNyZWF0ZVVuaWZvcm1CdWZmZXI9ZnVuY3Rpb24oYyl7Y29uc3QgZT10aGlzLl9nbC5jcmVhdGVCdWZmZXIoKTtpZighZSl0aHJvdyBuZXcgRXJyb3IoIlVuYWJsZSB0byBjcmVhdGUgdW5pZm9ybSBidWZmZXIiKTtjb25zdCB0PW5ldyBEaShlKTtyZXR1cm4gdGhpcy5iaW5kVW5pZm9ybUJ1ZmZlcih0KSxjIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5P3RoaXMuX2dsLmJ1ZmZlckRhdGEodGhpcy5fZ2wuVU5JRk9STV9CVUZGRVIsYyx0aGlzLl9nbC5TVEFUSUNfRFJBVyk6dGhpcy5fZ2wuYnVmZmVyRGF0YSh0aGlzLl9nbC5VTklGT1JNX0JVRkZFUixuZXcgRmxvYXQzMkFycmF5KGMpLHRoaXMuX2dsLlNUQVRJQ19EUkFXKSx0aGlzLmJpbmRVbmlmb3JtQnVmZmVyKG51bGwpLHQucmVmZXJlbmNlcz0xLHR9LG9lLnByb3RvdHlwZS5jcmVhdGVEeW5hbWljVW5pZm9ybUJ1ZmZlcj1mdW5jdGlvbihjKXtjb25zdCBlPXRoaXMuX2dsLmNyZWF0ZUJ1ZmZlcigpO2lmKCFlKXRocm93IG5ldyBFcnJvcigiVW5hYmxlIHRvIGNyZWF0ZSBkeW5hbWljIHVuaWZvcm0gYnVmZmVyIik7Y29uc3QgdD1uZXcgRGkoZSk7cmV0dXJuIHRoaXMuYmluZFVuaWZvcm1CdWZmZXIodCksYyBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheT90aGlzLl9nbC5idWZmZXJEYXRhKHRoaXMuX2dsLlVOSUZPUk1fQlVGRkVSLGMsdGhpcy5fZ2wuRFlOQU1JQ19EUkFXKTp0aGlzLl9nbC5idWZmZXJEYXRhKHRoaXMuX2dsLlVOSUZPUk1fQlVGRkVSLG5ldyBGbG9hdDMyQXJyYXkoYyksdGhpcy5fZ2wuRFlOQU1JQ19EUkFXKSx0aGlzLmJpbmRVbmlmb3JtQnVmZmVyKG51bGwpLHQucmVmZXJlbmNlcz0xLHR9LG9lLnByb3RvdHlwZS51cGRhdGVVbmlmb3JtQnVmZmVyPWZ1bmN0aW9uKGMsZSx0LGkpe3RoaXMuYmluZFVuaWZvcm1CdWZmZXIoYyksdD09PXZvaWQgMCYmKHQ9MCksaT09PXZvaWQgMD9lIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5P3RoaXMuX2dsLmJ1ZmZlclN1YkRhdGEodGhpcy5fZ2wuVU5JRk9STV9CVUZGRVIsdCxlKTp0aGlzLl9nbC5idWZmZXJTdWJEYXRhKHRoaXMuX2dsLlVOSUZPUk1fQlVGRkVSLHQsbmV3IEZsb2F0MzJBcnJheShlKSk6ZSBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheT90aGlzLl9nbC5idWZmZXJTdWJEYXRhKHRoaXMuX2dsLlVOSUZPUk1fQlVGRkVSLDAsZS5zdWJhcnJheSh0LHQraSkpOnRoaXMuX2dsLmJ1ZmZlclN1YkRhdGEodGhpcy5fZ2wuVU5JRk9STV9CVUZGRVIsMCxuZXcgRmxvYXQzMkFycmF5KGUpLnN1YmFycmF5KHQsdCtpKSksdGhpcy5iaW5kVW5pZm9ybUJ1ZmZlcihudWxsKX0sb2UucHJvdG90eXBlLmJpbmRVbmlmb3JtQnVmZmVyPWZ1bmN0aW9uKGMpe3RoaXMuX2dsLmJpbmRCdWZmZXIodGhpcy5fZ2wuVU5JRk9STV9CVUZGRVIsYz9jLnVuZGVybHlpbmdSZXNvdXJjZTpudWxsKX0sb2UucHJvdG90eXBlLmJpbmRVbmlmb3JtQnVmZmVyQmFzZT1mdW5jdGlvbihjLGUsdCl7dGhpcy5fZ2wuYmluZEJ1ZmZlckJhc2UodGhpcy5fZ2wuVU5JRk9STV9CVUZGRVIsZSxjP2MudW5kZXJseWluZ1Jlc291cmNlOm51bGwpfSxvZS5wcm90b3R5cGUuYmluZFVuaWZvcm1CbG9jaz1mdW5jdGlvbihjLGUsdCl7Y29uc3QgaT1jLnByb2dyYW0scz10aGlzLl9nbC5nZXRVbmlmb3JtQmxvY2tJbmRleChpLGUpO3MhPT00Mjk0OTY3Mjk1JiZ0aGlzLl9nbC51bmlmb3JtQmxvY2tCaW5kaW5nKGkscyx0KX07Y2xhc3MgVntjb25zdHJ1Y3RvcihlLHQsaSxzLHI9ITEpe3RoaXMuX3ZhbHVlQ2FjaGU9e30sdGhpcy5fZW5naW5lPWUsdGhpcy5fbm9VQk89IWUuc3VwcG9ydHNVbmlmb3JtQnVmZmVyc3x8cix0aGlzLl9keW5hbWljPWksdGhpcy5fbmFtZT1zPz8ibm8tbmFtZSIsdGhpcy5fZGF0YT10fHxbXSx0aGlzLl91bmlmb3JtTG9jYXRpb25zPXt9LHRoaXMuX3VuaWZvcm1TaXplcz17fSx0aGlzLl91bmlmb3JtQXJyYXlTaXplcz17fSx0aGlzLl91bmlmb3JtTG9jYXRpb25Qb2ludGVyPTAsdGhpcy5fbmVlZFN5bmM9ITEsdGhpcy5fZW5naW5lLl9mZWF0dXJlcy50cmFja1Vib3NJbkZyYW1lJiYodGhpcy5fYnVmZmVycz1bXSx0aGlzLl9idWZmZXJJbmRleD0tMSx0aGlzLl9jcmVhdGVCdWZmZXJPbldyaXRlPSExLHRoaXMuX2N1cnJlbnRGcmFtZUlkPTApLHRoaXMuX25vVUJPPyh0aGlzLnVwZGF0ZU1hdHJpeDN4Mz10aGlzLl91cGRhdGVNYXRyaXgzeDNGb3JFZmZlY3QsdGhpcy51cGRhdGVNYXRyaXgyeDI9dGhpcy5fdXBkYXRlTWF0cml4MngyRm9yRWZmZWN0LHRoaXMudXBkYXRlRmxvYXQ9dGhpcy5fdXBkYXRlRmxvYXRGb3JFZmZlY3QsdGhpcy51cGRhdGVGbG9hdDI9dGhpcy5fdXBkYXRlRmxvYXQyRm9yRWZmZWN0LHRoaXMudXBkYXRlRmxvYXQzPXRoaXMuX3VwZGF0ZUZsb2F0M0ZvckVmZmVjdCx0aGlzLnVwZGF0ZUZsb2F0ND10aGlzLl91cGRhdGVGbG9hdDRGb3JFZmZlY3QsdGhpcy51cGRhdGVGbG9hdEFycmF5PXRoaXMuX3VwZGF0ZUZsb2F0QXJyYXlGb3JFZmZlY3QsdGhpcy51cGRhdGVBcnJheT10aGlzLl91cGRhdGVBcnJheUZvckVmZmVjdCx0aGlzLnVwZGF0ZUludEFycmF5PXRoaXMuX3VwZGF0ZUludEFycmF5Rm9yRWZmZWN0LHRoaXMudXBkYXRlVUludEFycmF5PXRoaXMuX3VwZGF0ZVVJbnRBcnJheUZvckVmZmVjdCx0aGlzLnVwZGF0ZU1hdHJpeD10aGlzLl91cGRhdGVNYXRyaXhGb3JFZmZlY3QsdGhpcy51cGRhdGVNYXRyaWNlcz10aGlzLl91cGRhdGVNYXRyaWNlc0ZvckVmZmVjdCx0aGlzLnVwZGF0ZVZlY3RvcjM9dGhpcy5fdXBkYXRlVmVjdG9yM0ZvckVmZmVjdCx0aGlzLnVwZGF0ZVZlY3RvcjQ9dGhpcy5fdXBkYXRlVmVjdG9yNEZvckVmZmVjdCx0aGlzLnVwZGF0ZUNvbG9yMz10aGlzLl91cGRhdGVDb2xvcjNGb3JFZmZlY3QsdGhpcy51cGRhdGVDb2xvcjQ9dGhpcy5fdXBkYXRlQ29sb3I0Rm9yRWZmZWN0LHRoaXMudXBkYXRlRGlyZWN0Q29sb3I0PXRoaXMuX3VwZGF0ZURpcmVjdENvbG9yNEZvckVmZmVjdCx0aGlzLnVwZGF0ZUludD10aGlzLl91cGRhdGVJbnRGb3JFZmZlY3QsdGhpcy51cGRhdGVJbnQyPXRoaXMuX3VwZGF0ZUludDJGb3JFZmZlY3QsdGhpcy51cGRhdGVJbnQzPXRoaXMuX3VwZGF0ZUludDNGb3JFZmZlY3QsdGhpcy51cGRhdGVJbnQ0PXRoaXMuX3VwZGF0ZUludDRGb3JFZmZlY3QsdGhpcy51cGRhdGVVSW50PXRoaXMuX3VwZGF0ZVVJbnRGb3JFZmZlY3QsdGhpcy51cGRhdGVVSW50Mj10aGlzLl91cGRhdGVVSW50MkZvckVmZmVjdCx0aGlzLnVwZGF0ZVVJbnQzPXRoaXMuX3VwZGF0ZVVJbnQzRm9yRWZmZWN0LHRoaXMudXBkYXRlVUludDQ9dGhpcy5fdXBkYXRlVUludDRGb3JFZmZlY3QpOih0aGlzLl9lbmdpbmUuX3VuaWZvcm1CdWZmZXJzLnB1c2godGhpcyksdGhpcy51cGRhdGVNYXRyaXgzeDM9dGhpcy5fdXBkYXRlTWF0cml4M3gzRm9yVW5pZm9ybSx0aGlzLnVwZGF0ZU1hdHJpeDJ4Mj10aGlzLl91cGRhdGVNYXRyaXgyeDJGb3JVbmlmb3JtLHRoaXMudXBkYXRlRmxvYXQ9dGhpcy5fdXBkYXRlRmxvYXRGb3JVbmlmb3JtLHRoaXMudXBkYXRlRmxvYXQyPXRoaXMuX3VwZGF0ZUZsb2F0MkZvclVuaWZvcm0sdGhpcy51cGRhdGVGbG9hdDM9dGhpcy5fdXBkYXRlRmxvYXQzRm9yVW5pZm9ybSx0aGlzLnVwZGF0ZUZsb2F0ND10aGlzLl91cGRhdGVGbG9hdDRGb3JVbmlmb3JtLHRoaXMudXBkYXRlRmxvYXRBcnJheT10aGlzLl91cGRhdGVGbG9hdEFycmF5Rm9yVW5pZm9ybSx0aGlzLnVwZGF0ZUFycmF5PXRoaXMuX3VwZGF0ZUFycmF5Rm9yVW5pZm9ybSx0aGlzLnVwZGF0ZUludEFycmF5PXRoaXMuX3VwZGF0ZUludEFycmF5Rm9yVW5pZm9ybSx0aGlzLnVwZGF0ZVVJbnRBcnJheT10aGlzLl91cGRhdGVVSW50QXJyYXlGb3JVbmlmb3JtLHRoaXMudXBkYXRlTWF0cml4PXRoaXMuX3VwZGF0ZU1hdHJpeEZvclVuaWZvcm0sdGhpcy51cGRhdGVNYXRyaWNlcz10aGlzLl91cGRhdGVNYXRyaWNlc0ZvclVuaWZvcm0sdGhpcy51cGRhdGVWZWN0b3IzPXRoaXMuX3VwZGF0ZVZlY3RvcjNGb3JVbmlmb3JtLHRoaXMudXBkYXRlVmVjdG9yND10aGlzLl91cGRhdGVWZWN0b3I0Rm9yVW5pZm9ybSx0aGlzLnVwZGF0ZUNvbG9yMz10aGlzLl91cGRhdGVDb2xvcjNGb3JVbmlmb3JtLHRoaXMudXBkYXRlQ29sb3I0PXRoaXMuX3VwZGF0ZUNvbG9yNEZvclVuaWZvcm0sdGhpcy51cGRhdGVEaXJlY3RDb2xvcjQ9dGhpcy5fdXBkYXRlRGlyZWN0Q29sb3I0Rm9yVW5pZm9ybSx0aGlzLnVwZGF0ZUludD10aGlzLl91cGRhdGVJbnRGb3JVbmlmb3JtLHRoaXMudXBkYXRlSW50Mj10aGlzLl91cGRhdGVJbnQyRm9yVW5pZm9ybSx0aGlzLnVwZGF0ZUludDM9dGhpcy5fdXBkYXRlSW50M0ZvclVuaWZvcm0sdGhpcy51cGRhdGVJbnQ0PXRoaXMuX3VwZGF0ZUludDRGb3JVbmlmb3JtLHRoaXMudXBkYXRlVUludD10aGlzLl91cGRhdGVVSW50Rm9yVW5pZm9ybSx0aGlzLnVwZGF0ZVVJbnQyPXRoaXMuX3VwZGF0ZVVJbnQyRm9yVW5pZm9ybSx0aGlzLnVwZGF0ZVVJbnQzPXRoaXMuX3VwZGF0ZVVJbnQzRm9yVW5pZm9ybSx0aGlzLnVwZGF0ZVVJbnQ0PXRoaXMuX3VwZGF0ZVVJbnQ0Rm9yVW5pZm9ybSl9Z2V0IHVzZVVibygpe3JldHVybiF0aGlzLl9ub1VCT31nZXQgaXNTeW5jKCl7cmV0dXJuIXRoaXMuX25lZWRTeW5jfWlzRHluYW1pYygpe3JldHVybiB0aGlzLl9keW5hbWljIT09dm9pZCAwfWdldERhdGEoKXtyZXR1cm4gdGhpcy5fYnVmZmVyRGF0YX1nZXRCdWZmZXIoKXtyZXR1cm4gdGhpcy5fYnVmZmVyfV9maWxsQWxpZ25tZW50KGUpe2xldCB0O2lmKGU8PTI/dD1lOnQ9NCx0aGlzLl91bmlmb3JtTG9jYXRpb25Qb2ludGVyJXQhPT0wKXtjb25zdCBpPXRoaXMuX3VuaWZvcm1Mb2NhdGlvblBvaW50ZXI7dGhpcy5fdW5pZm9ybUxvY2F0aW9uUG9pbnRlcis9dC10aGlzLl91bmlmb3JtTG9jYXRpb25Qb2ludGVyJXQ7Y29uc3Qgcz10aGlzLl91bmlmb3JtTG9jYXRpb25Qb2ludGVyLWk7Zm9yKGxldCByPTA7cjxzO3IrKyl0aGlzLl9kYXRhLnB1c2goMCl9fWFkZFVuaWZvcm0oZSx0LGk9MCl7aWYodGhpcy5fbm9VQk98fHRoaXMuX3VuaWZvcm1Mb2NhdGlvbnNbZV0hPT12b2lkIDApcmV0dXJuO2xldCBzO2lmKGk+MCl7aWYodCBpbnN0YW5jZW9mIEFycmF5KXRocm93ImFkZFVuaWZvcm0gc2hvdWxkIG5vdCBiZSB1c2Ugd2l0aCBBcnJheSBpbiBVQk86ICIrZTtpZih0aGlzLl9maWxsQWxpZ25tZW50KDQpLHRoaXMuX3VuaWZvcm1BcnJheVNpemVzW2VdPXtzdHJpZGVTaXplOnQsYXJyYXlTaXplOml9LHQ9PTE2KXQ9dCppO2Vsc2V7Y29uc3Qgbj0oNC10KSppO3Q9dCppK259cz1bXTtmb3IobGV0IHI9MDtyPHQ7cisrKXMucHVzaCgwKX1lbHNle2lmKHQgaW5zdGFuY2VvZiBBcnJheSlzPXQsdD1zLmxlbmd0aDtlbHNle3Q9dCxzPVtdO2ZvcihsZXQgcj0wO3I8dDtyKyspcy5wdXNoKDApfXRoaXMuX2ZpbGxBbGlnbm1lbnQodCl9dGhpcy5fdW5pZm9ybVNpemVzW2VdPXQsdGhpcy5fdW5pZm9ybUxvY2F0aW9uc1tlXT10aGlzLl91bmlmb3JtTG9jYXRpb25Qb2ludGVyLHRoaXMuX3VuaWZvcm1Mb2NhdGlvblBvaW50ZXIrPXQ7Zm9yKGxldCByPTA7cjx0O3IrKyl0aGlzLl9kYXRhLnB1c2goc1tyXSk7dGhpcy5fbmVlZFN5bmM9ITB9YWRkTWF0cml4KGUsdCl7dGhpcy5hZGRVbmlmb3JtKGUsQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodC50b0FycmF5KCkpKX1hZGRGbG9hdDIoZSx0LGkpe2NvbnN0IHM9W3QsaV07dGhpcy5hZGRVbmlmb3JtKGUscyl9YWRkRmxvYXQzKGUsdCxpLHMpe2NvbnN0IHI9W3QsaSxzXTt0aGlzLmFkZFVuaWZvcm0oZSxyKX1hZGRDb2xvcjMoZSx0KXtjb25zdCBpPVt0LnIsdC5nLHQuYl07dGhpcy5hZGRVbmlmb3JtKGUsaSl9YWRkQ29sb3I0KGUsdCxpKXtjb25zdCBzPVt0LnIsdC5nLHQuYixpXTt0aGlzLmFkZFVuaWZvcm0oZSxzKX1hZGRWZWN0b3IzKGUsdCl7Y29uc3QgaT1bdC54LHQueSx0LnpdO3RoaXMuYWRkVW5pZm9ybShlLGkpfWFkZE1hdHJpeDN4MyhlKXt0aGlzLmFkZFVuaWZvcm0oZSwxMil9YWRkTWF0cml4MngyKGUpe3RoaXMuYWRkVW5pZm9ybShlLDgpfWNyZWF0ZSgpe3RoaXMuX25vVUJPfHx0aGlzLl9idWZmZXJ8fCh0aGlzLl9maWxsQWxpZ25tZW50KDQpLHRoaXMuX2J1ZmZlckRhdGE9bmV3IEZsb2F0MzJBcnJheSh0aGlzLl9kYXRhKSx0aGlzLl9yZWJ1aWxkKCksdGhpcy5fbmVlZFN5bmM9ITApfV9yZWJ1aWxkKCl7dGhpcy5fbm9VQk98fCF0aGlzLl9idWZmZXJEYXRhfHwodGhpcy5fZHluYW1pYz90aGlzLl9idWZmZXI9dGhpcy5fZW5naW5lLmNyZWF0ZUR5bmFtaWNVbmlmb3JtQnVmZmVyKHRoaXMuX2J1ZmZlckRhdGEpOnRoaXMuX2J1ZmZlcj10aGlzLl9lbmdpbmUuY3JlYXRlVW5pZm9ybUJ1ZmZlcih0aGlzLl9idWZmZXJEYXRhKSx0aGlzLl9lbmdpbmUuX2ZlYXR1cmVzLnRyYWNrVWJvc0luRnJhbWUmJih0aGlzLl9idWZmZXJzLnB1c2goW3RoaXMuX2J1ZmZlcix0aGlzLl9lbmdpbmUuX2ZlYXR1cmVzLmNoZWNrVWJvc0NvbnRlbnRCZWZvcmVVcGxvYWQ/dGhpcy5fYnVmZmVyRGF0YS5zbGljZSgpOnZvaWQgMF0pLHRoaXMuX2J1ZmZlckluZGV4PXRoaXMuX2J1ZmZlcnMubGVuZ3RoLTEsdGhpcy5fY3JlYXRlQnVmZmVyT25Xcml0ZT0hMSkpfWdldCBfbnVtQnVmZmVycygpe3JldHVybiB0aGlzLl9idWZmZXJzLmxlbmd0aH1nZXQgX2luZGV4QnVmZmVyKCl7cmV0dXJuIHRoaXMuX2J1ZmZlckluZGV4fWdldCBuYW1lKCl7cmV0dXJuIHRoaXMuX25hbWV9X2J1ZmZlcnNFcXVhbChlLHQpe2ZvcihsZXQgaT0wO2k8ZS5sZW5ndGg7KytpKWlmKGVbaV0hPT10W2ldKXJldHVybiExO3JldHVybiEwfV9jb3B5QnVmZmVyKGUsdCl7Zm9yKGxldCBpPTA7aTxlLmxlbmd0aDsrK2kpdFtpXT1lW2ldfXVwZGF0ZSgpe2lmKCF0aGlzLl9ub1VCTyl7aWYodGhpcy5iaW5kVW5pZm9ybUJ1ZmZlcigpLCF0aGlzLl9idWZmZXIpe3RoaXMuY3JlYXRlKCk7cmV0dXJufWlmKCF0aGlzLl9keW5hbWljJiYhdGhpcy5fbmVlZFN5bmMpe3RoaXMuX2NyZWF0ZUJ1ZmZlck9uV3JpdGU9dGhpcy5fZW5naW5lLl9mZWF0dXJlcy50cmFja1Vib3NJbkZyYW1lO3JldHVybn1pZih0aGlzLl9idWZmZXJzJiZ0aGlzLl9idWZmZXJzLmxlbmd0aD4xJiZ0aGlzLl9idWZmZXJzW3RoaXMuX2J1ZmZlckluZGV4XVsxXSlpZih0aGlzLl9idWZmZXJzRXF1YWwodGhpcy5fYnVmZmVyRGF0YSx0aGlzLl9idWZmZXJzW3RoaXMuX2J1ZmZlckluZGV4XVsxXSkpe3RoaXMuX25lZWRTeW5jPSExLHRoaXMuX2NyZWF0ZUJ1ZmZlck9uV3JpdGU9dGhpcy5fZW5naW5lLl9mZWF0dXJlcy50cmFja1Vib3NJbkZyYW1lO3JldHVybn1lbHNlIHRoaXMuX2NvcHlCdWZmZXIodGhpcy5fYnVmZmVyRGF0YSx0aGlzLl9idWZmZXJzW3RoaXMuX2J1ZmZlckluZGV4XVsxXSk7dGhpcy5fZW5naW5lLnVwZGF0ZVVuaWZvcm1CdWZmZXIodGhpcy5fYnVmZmVyLHRoaXMuX2J1ZmZlckRhdGEpLHRoaXMuX2VuZ2luZS5fZmVhdHVyZXMuX2NvbGxlY3RVYm9zVXBkYXRlZEluRnJhbWUmJihWLl9VcGRhdGVkVWJvc0luRnJhbWVbdGhpcy5fbmFtZV18fChWLl9VcGRhdGVkVWJvc0luRnJhbWVbdGhpcy5fbmFtZV09MCksVi5fVXBkYXRlZFVib3NJbkZyYW1lW3RoaXMuX25hbWVdKyspLHRoaXMuX25lZWRTeW5jPSExLHRoaXMuX2NyZWF0ZUJ1ZmZlck9uV3JpdGU9dGhpcy5fZW5naW5lLl9mZWF0dXJlcy50cmFja1Vib3NJbkZyYW1lfX1fY3JlYXRlTmV3QnVmZmVyKCl7dGhpcy5fYnVmZmVySW5kZXgrMTx0aGlzLl9idWZmZXJzLmxlbmd0aD8odGhpcy5fYnVmZmVySW5kZXgrKyx0aGlzLl9idWZmZXI9dGhpcy5fYnVmZmVyc1t0aGlzLl9idWZmZXJJbmRleF1bMF0sdGhpcy5fY3JlYXRlQnVmZmVyT25Xcml0ZT0hMSx0aGlzLl9uZWVkU3luYz0hMCk6dGhpcy5fcmVidWlsZCgpfV9jaGVja05ld0ZyYW1lKCl7dGhpcy5fZW5naW5lLl9mZWF0dXJlcy50cmFja1Vib3NJbkZyYW1lJiZ0aGlzLl9jdXJyZW50RnJhbWVJZCE9PXRoaXMuX2VuZ2luZS5mcmFtZUlkJiYodGhpcy5fY3VycmVudEZyYW1lSWQ9dGhpcy5fZW5naW5lLmZyYW1lSWQsdGhpcy5fY3JlYXRlQnVmZmVyT25Xcml0ZT0hMSx0aGlzLl9idWZmZXJzJiZ0aGlzLl9idWZmZXJzLmxlbmd0aD4wPyh0aGlzLl9uZWVkU3luYz10aGlzLl9idWZmZXJJbmRleCE9PTAsdGhpcy5fYnVmZmVySW5kZXg9MCx0aGlzLl9idWZmZXI9dGhpcy5fYnVmZmVyc1t0aGlzLl9idWZmZXJJbmRleF1bMF0pOnRoaXMuX2J1ZmZlckluZGV4PS0xKX11cGRhdGVVbmlmb3JtKGUsdCxpKXt0aGlzLl9jaGVja05ld0ZyYW1lKCk7bGV0IHM9dGhpcy5fdW5pZm9ybUxvY2F0aW9uc1tlXTtpZihzPT09dm9pZCAwKXtpZih0aGlzLl9idWZmZXIpe08uRXJyb3IoIkNhbm5vdCBhZGQgYW4gdW5pZm9ybSBhZnRlciBVQk8gaGFzIGJlZW4gY3JlYXRlZC4iKTtyZXR1cm59dGhpcy5hZGRVbmlmb3JtKGUsaSkscz10aGlzLl91bmlmb3JtTG9jYXRpb25zW2VdfWlmKHRoaXMuX2J1ZmZlcnx8dGhpcy5jcmVhdGUoKSx0aGlzLl9keW5hbWljKWZvcihsZXQgcj0wO3I8aTtyKyspdGhpcy5fYnVmZmVyRGF0YVtzK3JdPXRbcl07ZWxzZXtsZXQgcj0hMTtmb3IobGV0IG49MDtuPGk7bisrKShpPT09MTYmJiF0aGlzLl9lbmdpbmUuX2ZlYXR1cmVzLnVuaWZvcm1CdWZmZXJIYXJkQ2hlY2tNYXRyaXh8fHRoaXMuX2J1ZmZlckRhdGFbcytuXSE9PUguRmxvYXRSb3VuZCh0W25dKSkmJihyPSEwLHRoaXMuX2NyZWF0ZUJ1ZmZlck9uV3JpdGUmJnRoaXMuX2NyZWF0ZU5ld0J1ZmZlcigpLHRoaXMuX2J1ZmZlckRhdGFbcytuXT10W25dKTt0aGlzLl9uZWVkU3luYz10aGlzLl9uZWVkU3luY3x8cn19dXBkYXRlVW5pZm9ybUFycmF5KGUsdCxpKXt0aGlzLl9jaGVja05ld0ZyYW1lKCk7Y29uc3Qgcz10aGlzLl91bmlmb3JtTG9jYXRpb25zW2VdO2lmKHM9PT12b2lkIDApe08uRXJyb3IoIkNhbm5vdCBhZGQgYW4gdW5pZm9ybSBBcnJheSBkeW5hbWljYWxseS4gUGxlYXNlLCBhZGQgaXQgdXNpbmcgYWRkVW5pZm9ybSBhbmQgbWFrZSBzdXJlIHRoYXQgdW5pZm9ybSBidWZmZXJzIGFyZSBzdXBwb3J0ZWQgYnkgdGhlIGN1cnJlbnQgZW5naW5lLiIpO3JldHVybn10aGlzLl9idWZmZXJ8fHRoaXMuY3JlYXRlKCk7Y29uc3Qgcj10aGlzLl91bmlmb3JtQXJyYXlTaXplc1tlXTtpZih0aGlzLl9keW5hbWljKWZvcihsZXQgbj0wO248aTtuKyspdGhpcy5fYnVmZmVyRGF0YVtzK25dPXRbbl07ZWxzZXtsZXQgbj0hMSxhPTAsbz0wO2ZvcihsZXQgaD0wO2g8aTtoKyspaWYodGhpcy5fYnVmZmVyRGF0YVtzK28qNCthXSE9PUguRmxvYXRSb3VuZCh0W2hdKSYmKG49ITAsdGhpcy5fY3JlYXRlQnVmZmVyT25Xcml0ZSYmdGhpcy5fY3JlYXRlTmV3QnVmZmVyKCksdGhpcy5fYnVmZmVyRGF0YVtzK28qNCthXT10W2hdKSxhKyssYT09PXIuc3RyaWRlU2l6ZSl7Zm9yKDthPDQ7YSsrKXRoaXMuX2J1ZmZlckRhdGFbcytvKjQrYV09MDthPTAsbysrfXRoaXMuX25lZWRTeW5jPXRoaXMuX25lZWRTeW5jfHxufX1fY2FjaGVNYXRyaXgoZSx0KXt0aGlzLl9jaGVja05ld0ZyYW1lKCk7Y29uc3QgaT10aGlzLl92YWx1ZUNhY2hlW2VdLHM9dC51cGRhdGVGbGFnO3JldHVybiBpIT09dm9pZCAwJiZpPT09cz8hMToodGhpcy5fdmFsdWVDYWNoZVtlXT1zLCEwKX1fdXBkYXRlTWF0cml4M3gzRm9yVW5pZm9ybShlLHQpe2ZvcihsZXQgaT0wO2k8MztpKyspVi5fVGVtcEJ1ZmZlcltpKjRdPXRbaSozXSxWLl9UZW1wQnVmZmVyW2kqNCsxXT10W2kqMysxXSxWLl9UZW1wQnVmZmVyW2kqNCsyXT10W2kqMysyXSxWLl9UZW1wQnVmZmVyW2kqNCszXT0wO3RoaXMudXBkYXRlVW5pZm9ybShlLFYuX1RlbXBCdWZmZXIsMTIpfV91cGRhdGVNYXRyaXgzeDNGb3JFZmZlY3QoZSx0KXt0aGlzLl9jdXJyZW50RWZmZWN0LnNldE1hdHJpeDN4MyhlLHQpfV91cGRhdGVNYXRyaXgyeDJGb3JFZmZlY3QoZSx0KXt0aGlzLl9jdXJyZW50RWZmZWN0LnNldE1hdHJpeDJ4MihlLHQpfV91cGRhdGVNYXRyaXgyeDJGb3JVbmlmb3JtKGUsdCl7Zm9yKGxldCBpPTA7aTwyO2krKylWLl9UZW1wQnVmZmVyW2kqNF09dFtpKjJdLFYuX1RlbXBCdWZmZXJbaSo0KzFdPXRbaSoyKzFdLFYuX1RlbXBCdWZmZXJbaSo0KzJdPTAsVi5fVGVtcEJ1ZmZlcltpKjQrM109MDt0aGlzLnVwZGF0ZVVuaWZvcm0oZSxWLl9UZW1wQnVmZmVyLDgpfV91cGRhdGVGbG9hdEZvckVmZmVjdChlLHQpe3RoaXMuX2N1cnJlbnRFZmZlY3Quc2V0RmxvYXQoZSx0KX1fdXBkYXRlRmxvYXRGb3JVbmlmb3JtKGUsdCl7Vi5fVGVtcEJ1ZmZlclswXT10LHRoaXMudXBkYXRlVW5pZm9ybShlLFYuX1RlbXBCdWZmZXIsMSl9X3VwZGF0ZUZsb2F0MkZvckVmZmVjdChlLHQsaSxzPSIiKXt0aGlzLl9jdXJyZW50RWZmZWN0LnNldEZsb2F0MihlK3MsdCxpKX1fdXBkYXRlRmxvYXQyRm9yVW5pZm9ybShlLHQsaSl7Vi5fVGVtcEJ1ZmZlclswXT10LFYuX1RlbXBCdWZmZXJbMV09aSx0aGlzLnVwZGF0ZVVuaWZvcm0oZSxWLl9UZW1wQnVmZmVyLDIpfV91cGRhdGVGbG9hdDNGb3JFZmZlY3QoZSx0LGkscyxyPSIiKXt0aGlzLl9jdXJyZW50RWZmZWN0LnNldEZsb2F0MyhlK3IsdCxpLHMpfV91cGRhdGVGbG9hdDNGb3JVbmlmb3JtKGUsdCxpLHMpe1YuX1RlbXBCdWZmZXJbMF09dCxWLl9UZW1wQnVmZmVyWzFdPWksVi5fVGVtcEJ1ZmZlclsyXT1zLHRoaXMudXBkYXRlVW5pZm9ybShlLFYuX1RlbXBCdWZmZXIsMyl9X3VwZGF0ZUZsb2F0NEZvckVmZmVjdChlLHQsaSxzLHIsbj0iIil7dGhpcy5fY3VycmVudEVmZmVjdC5zZXRGbG9hdDQoZStuLHQsaSxzLHIpfV91cGRhdGVGbG9hdDRGb3JVbmlmb3JtKGUsdCxpLHMscil7Vi5fVGVtcEJ1ZmZlclswXT10LFYuX1RlbXBCdWZmZXJbMV09aSxWLl9UZW1wQnVmZmVyWzJdPXMsVi5fVGVtcEJ1ZmZlclszXT1yLHRoaXMudXBkYXRlVW5pZm9ybShlLFYuX1RlbXBCdWZmZXIsNCl9X3VwZGF0ZUZsb2F0QXJyYXlGb3JFZmZlY3QoZSx0KXt0aGlzLl9jdXJyZW50RWZmZWN0LnNldEZsb2F0QXJyYXkoZSx0KX1fdXBkYXRlRmxvYXRBcnJheUZvclVuaWZvcm0oZSx0KXt0aGlzLnVwZGF0ZVVuaWZvcm1BcnJheShlLHQsdC5sZW5ndGgpfV91cGRhdGVBcnJheUZvckVmZmVjdChlLHQpe3RoaXMuX2N1cnJlbnRFZmZlY3Quc2V0QXJyYXkoZSx0KX1fdXBkYXRlQXJyYXlGb3JVbmlmb3JtKGUsdCl7dGhpcy51cGRhdGVVbmlmb3JtQXJyYXkoZSx0LHQubGVuZ3RoKX1fdXBkYXRlSW50QXJyYXlGb3JFZmZlY3QoZSx0KXt0aGlzLl9jdXJyZW50RWZmZWN0LnNldEludEFycmF5KGUsdCl9X3VwZGF0ZUludEFycmF5Rm9yVW5pZm9ybShlLHQpe1YuX1RlbXBCdWZmZXJJbnQzMlZpZXcuc2V0KHQpLHRoaXMudXBkYXRlVW5pZm9ybUFycmF5KGUsVi5fVGVtcEJ1ZmZlcix0Lmxlbmd0aCl9X3VwZGF0ZVVJbnRBcnJheUZvckVmZmVjdChlLHQpe3RoaXMuX2N1cnJlbnRFZmZlY3Quc2V0VUludEFycmF5KGUsdCl9X3VwZGF0ZVVJbnRBcnJheUZvclVuaWZvcm0oZSx0KXtWLl9UZW1wQnVmZmVyVUludDMyVmlldy5zZXQodCksdGhpcy51cGRhdGVVbmlmb3JtQXJyYXkoZSxWLl9UZW1wQnVmZmVyLHQubGVuZ3RoKX1fdXBkYXRlTWF0cml4Rm9yRWZmZWN0KGUsdCl7dGhpcy5fY3VycmVudEVmZmVjdC5zZXRNYXRyaXgoZSx0KX1fdXBkYXRlTWF0cml4Rm9yVW5pZm9ybShlLHQpe3RoaXMuX2NhY2hlTWF0cml4KGUsdCkmJnRoaXMudXBkYXRlVW5pZm9ybShlLHQudG9BcnJheSgpLDE2KX1fdXBkYXRlTWF0cmljZXNGb3JFZmZlY3QoZSx0KXt0aGlzLl9jdXJyZW50RWZmZWN0LnNldE1hdHJpY2VzKGUsdCl9X3VwZGF0ZU1hdHJpY2VzRm9yVW5pZm9ybShlLHQpe3RoaXMudXBkYXRlVW5pZm9ybShlLHQsdC5sZW5ndGgpfV91cGRhdGVWZWN0b3IzRm9yRWZmZWN0KGUsdCl7dGhpcy5fY3VycmVudEVmZmVjdC5zZXRWZWN0b3IzKGUsdCl9X3VwZGF0ZVZlY3RvcjNGb3JVbmlmb3JtKGUsdCl7Vi5fVGVtcEJ1ZmZlclswXT10LngsVi5fVGVtcEJ1ZmZlclsxXT10LnksVi5fVGVtcEJ1ZmZlclsyXT10LnosdGhpcy51cGRhdGVVbmlmb3JtKGUsVi5fVGVtcEJ1ZmZlciwzKX1fdXBkYXRlVmVjdG9yNEZvckVmZmVjdChlLHQpe3RoaXMuX2N1cnJlbnRFZmZlY3Quc2V0VmVjdG9yNChlLHQpfV91cGRhdGVWZWN0b3I0Rm9yVW5pZm9ybShlLHQpe1YuX1RlbXBCdWZmZXJbMF09dC54LFYuX1RlbXBCdWZmZXJbMV09dC55LFYuX1RlbXBCdWZmZXJbMl09dC56LFYuX1RlbXBCdWZmZXJbM109dC53LHRoaXMudXBkYXRlVW5pZm9ybShlLFYuX1RlbXBCdWZmZXIsNCl9X3VwZGF0ZUNvbG9yM0ZvckVmZmVjdChlLHQsaT0iIil7dGhpcy5fY3VycmVudEVmZmVjdC5zZXRDb2xvcjMoZStpLHQpfV91cGRhdGVDb2xvcjNGb3JVbmlmb3JtKGUsdCl7Vi5fVGVtcEJ1ZmZlclswXT10LnIsVi5fVGVtcEJ1ZmZlclsxXT10LmcsVi5fVGVtcEJ1ZmZlclsyXT10LmIsdGhpcy51cGRhdGVVbmlmb3JtKGUsVi5fVGVtcEJ1ZmZlciwzKX1fdXBkYXRlQ29sb3I0Rm9yRWZmZWN0KGUsdCxpLHM9IiIpe3RoaXMuX2N1cnJlbnRFZmZlY3Quc2V0Q29sb3I0KGUrcyx0LGkpfV91cGRhdGVEaXJlY3RDb2xvcjRGb3JFZmZlY3QoZSx0LGk9IiIpe3RoaXMuX2N1cnJlbnRFZmZlY3Quc2V0RGlyZWN0Q29sb3I0KGUraSx0KX1fdXBkYXRlQ29sb3I0Rm9yVW5pZm9ybShlLHQsaSl7Vi5fVGVtcEJ1ZmZlclswXT10LnIsVi5fVGVtcEJ1ZmZlclsxXT10LmcsVi5fVGVtcEJ1ZmZlclsyXT10LmIsVi5fVGVtcEJ1ZmZlclszXT1pLHRoaXMudXBkYXRlVW5pZm9ybShlLFYuX1RlbXBCdWZmZXIsNCl9X3VwZGF0ZURpcmVjdENvbG9yNEZvclVuaWZvcm0oZSx0KXtWLl9UZW1wQnVmZmVyWzBdPXQucixWLl9UZW1wQnVmZmVyWzFdPXQuZyxWLl9UZW1wQnVmZmVyWzJdPXQuYixWLl9UZW1wQnVmZmVyWzNdPXQuYSx0aGlzLnVwZGF0ZVVuaWZvcm0oZSxWLl9UZW1wQnVmZmVyLDQpfV91cGRhdGVJbnRGb3JFZmZlY3QoZSx0LGk9IiIpe3RoaXMuX2N1cnJlbnRFZmZlY3Quc2V0SW50KGUraSx0KX1fdXBkYXRlSW50Rm9yVW5pZm9ybShlLHQpe1YuX1RlbXBCdWZmZXJJbnQzMlZpZXdbMF09dCx0aGlzLnVwZGF0ZVVuaWZvcm0oZSxWLl9UZW1wQnVmZmVyLDEpfV91cGRhdGVJbnQyRm9yRWZmZWN0KGUsdCxpLHM9IiIpe3RoaXMuX2N1cnJlbnRFZmZlY3Quc2V0SW50MihlK3MsdCxpKX1fdXBkYXRlSW50MkZvclVuaWZvcm0oZSx0LGkpe1YuX1RlbXBCdWZmZXJJbnQzMlZpZXdbMF09dCxWLl9UZW1wQnVmZmVySW50MzJWaWV3WzFdPWksdGhpcy51cGRhdGVVbmlmb3JtKGUsVi5fVGVtcEJ1ZmZlciwyKX1fdXBkYXRlSW50M0ZvckVmZmVjdChlLHQsaSxzLHI9IiIpe3RoaXMuX2N1cnJlbnRFZmZlY3Quc2V0SW50MyhlK3IsdCxpLHMpfV91cGRhdGVJbnQzRm9yVW5pZm9ybShlLHQsaSxzKXtWLl9UZW1wQnVmZmVySW50MzJWaWV3WzBdPXQsVi5fVGVtcEJ1ZmZlckludDMyVmlld1sxXT1pLFYuX1RlbXBCdWZmZXJJbnQzMlZpZXdbMl09cyx0aGlzLnVwZGF0ZVVuaWZvcm0oZSxWLl9UZW1wQnVmZmVyLDMpfV91cGRhdGVJbnQ0Rm9yRWZmZWN0KGUsdCxpLHMscixuPSIiKXt0aGlzLl9jdXJyZW50RWZmZWN0LnNldEludDQoZStuLHQsaSxzLHIpfV91cGRhdGVJbnQ0Rm9yVW5pZm9ybShlLHQsaSxzLHIpe1YuX1RlbXBCdWZmZXJJbnQzMlZpZXdbMF09dCxWLl9UZW1wQnVmZmVySW50MzJWaWV3WzFdPWksVi5fVGVtcEJ1ZmZlckludDMyVmlld1syXT1zLFYuX1RlbXBCdWZmZXJJbnQzMlZpZXdbM109cix0aGlzLnVwZGF0ZVVuaWZvcm0oZSxWLl9UZW1wQnVmZmVyLDQpfV91cGRhdGVVSW50Rm9yRWZmZWN0KGUsdCxpPSIiKXt0aGlzLl9jdXJyZW50RWZmZWN0LnNldFVJbnQoZStpLHQpfV91cGRhdGVVSW50Rm9yVW5pZm9ybShlLHQpe1YuX1RlbXBCdWZmZXJVSW50MzJWaWV3WzBdPXQsdGhpcy51cGRhdGVVbmlmb3JtKGUsVi5fVGVtcEJ1ZmZlciwxKX1fdXBkYXRlVUludDJGb3JFZmZlY3QoZSx0LGkscz0iIil7dGhpcy5fY3VycmVudEVmZmVjdC5zZXRVSW50MihlK3MsdCxpKX1fdXBkYXRlVUludDJGb3JVbmlmb3JtKGUsdCxpKXtWLl9UZW1wQnVmZmVyVUludDMyVmlld1swXT10LFYuX1RlbXBCdWZmZXJVSW50MzJWaWV3WzFdPWksdGhpcy51cGRhdGVVbmlmb3JtKGUsVi5fVGVtcEJ1ZmZlciwyKX1fdXBkYXRlVUludDNGb3JFZmZlY3QoZSx0LGkscyxyPSIiKXt0aGlzLl9jdXJyZW50RWZmZWN0LnNldFVJbnQzKGUrcix0LGkscyl9X3VwZGF0ZVVJbnQzRm9yVW5pZm9ybShlLHQsaSxzKXtWLl9UZW1wQnVmZmVyVUludDMyVmlld1swXT10LFYuX1RlbXBCdWZmZXJVSW50MzJWaWV3WzFdPWksVi5fVGVtcEJ1ZmZlclVJbnQzMlZpZXdbMl09cyx0aGlzLnVwZGF0ZVVuaWZvcm0oZSxWLl9UZW1wQnVmZmVyLDMpfV91cGRhdGVVSW50NEZvckVmZmVjdChlLHQsaSxzLHIsbj0iIil7dGhpcy5fY3VycmVudEVmZmVjdC5zZXRVSW50NChlK24sdCxpLHMscil9X3VwZGF0ZVVJbnQ0Rm9yVW5pZm9ybShlLHQsaSxzLHIpe1YuX1RlbXBCdWZmZXJVSW50MzJWaWV3WzBdPXQsVi5fVGVtcEJ1ZmZlclVJbnQzMlZpZXdbMV09aSxWLl9UZW1wQnVmZmVyVUludDMyVmlld1syXT1zLFYuX1RlbXBCdWZmZXJVSW50MzJWaWV3WzNdPXIsdGhpcy51cGRhdGVVbmlmb3JtKGUsVi5fVGVtcEJ1ZmZlciw0KX1zZXRUZXh0dXJlKGUsdCl7dGhpcy5fY3VycmVudEVmZmVjdC5zZXRUZXh0dXJlKGUsdCl9dXBkYXRlVW5pZm9ybURpcmVjdGx5KGUsdCl7dGhpcy51cGRhdGVVbmlmb3JtKGUsdCx0Lmxlbmd0aCksdGhpcy51cGRhdGUoKX1iaW5kVG9FZmZlY3QoZSx0KXt0aGlzLl9jdXJyZW50RWZmZWN0PWUsdGhpcy5fY3VycmVudEVmZmVjdE5hbWU9dH1iaW5kVW5pZm9ybUJ1ZmZlcigpeyF0aGlzLl9ub1VCTyYmdGhpcy5fYnVmZmVyJiZ0aGlzLl9jdXJyZW50RWZmZWN0JiZ0aGlzLl9jdXJyZW50RWZmZWN0LmJpbmRVbmlmb3JtQnVmZmVyKHRoaXMuX2J1ZmZlcix0aGlzLl9jdXJyZW50RWZmZWN0TmFtZSl9dW5iaW5kRWZmZWN0KCl7dGhpcy5fY3VycmVudEVmZmVjdD12b2lkIDAsdGhpcy5fY3VycmVudEVmZmVjdE5hbWU9dm9pZCAwfXNldERhdGFCdWZmZXIoZSl7aWYoIXRoaXMuX2J1ZmZlcnMpcmV0dXJuIHRoaXMuX2J1ZmZlcj09PWU7Zm9yKGxldCB0PTA7dDx0aGlzLl9idWZmZXJzLmxlbmd0aDsrK3QpaWYodGhpcy5fYnVmZmVyc1t0XVswXT09PWUpcmV0dXJuIHRoaXMuX2J1ZmZlckluZGV4PXQsdGhpcy5fYnVmZmVyPWUsdGhpcy5fY3JlYXRlQnVmZmVyT25Xcml0ZT0hMSx0aGlzLl9jdXJyZW50RWZmZWN0PXZvaWQgMCwhMDtyZXR1cm4hMX1kaXNwb3NlKCl7aWYodGhpcy5fbm9VQk8pcmV0dXJuO2NvbnN0IGU9dGhpcy5fZW5naW5lLl91bmlmb3JtQnVmZmVycyx0PWUuaW5kZXhPZih0aGlzKTtpZih0IT09LTEmJihlW3RdPWVbZS5sZW5ndGgtMV0sZS5wb3AoKSksdGhpcy5fZW5naW5lLl9mZWF0dXJlcy50cmFja1Vib3NJbkZyYW1lJiZ0aGlzLl9idWZmZXJzKWZvcihsZXQgaT0wO2k8dGhpcy5fYnVmZmVycy5sZW5ndGg7KytpKXtjb25zdCBzPXRoaXMuX2J1ZmZlcnNbaV1bMF07dGhpcy5fZW5naW5lLl9yZWxlYXNlQnVmZmVyKHMpfWVsc2UgdGhpcy5fYnVmZmVyJiZ0aGlzLl9lbmdpbmUuX3JlbGVhc2VCdWZmZXIodGhpcy5fYnVmZmVyKSYmKHRoaXMuX2J1ZmZlcj1udWxsKX19Vi5fVXBkYXRlZFVib3NJbkZyYW1lPXt9LFYuX01BWF9VTklGT1JNX1NJWkU9MjU2LFYuX1RlbXBCdWZmZXI9bmV3IEZsb2F0MzJBcnJheShWLl9NQVhfVU5JRk9STV9TSVpFKSxWLl9UZW1wQnVmZmVySW50MzJWaWV3PW5ldyBJbnQzMkFycmF5KFYuX1RlbXBCdWZmZXIuYnVmZmVyKSxWLl9UZW1wQnVmZmVyVUludDMyVmlldz1uZXcgVWludDMyQXJyYXkoVi5fVGVtcEJ1ZmZlci5idWZmZXIpO2NsYXNzICRpe2NvbnN0cnVjdG9yKGUsdCxpLHM9MCxyPSExLG49ITEsYT0hMSxvKXt0aGlzLl9pc0FscmVhZHlPd25lZD0hMSxlLmdldFNjZW5lP3RoaXMuX2VuZ2luZT1lLmdldFNjZW5lKCkuZ2V0RW5naW5lKCk6dGhpcy5fZW5naW5lPWUsdGhpcy5fdXBkYXRhYmxlPWksdGhpcy5faW5zdGFuY2VkPW4sdGhpcy5fZGl2aXNvcj1vfHwxLHQgaW5zdGFuY2VvZiBQaT8odGhpcy5fZGF0YT1udWxsLHRoaXMuX2J1ZmZlcj10KToodGhpcy5fZGF0YT10LHRoaXMuX2J1ZmZlcj1udWxsKSx0aGlzLmJ5dGVTdHJpZGU9YT9zOnMqRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5ULHJ8fHRoaXMuY3JlYXRlKCl9Y3JlYXRlVmVydGV4QnVmZmVyKGUsdCxpLHMscixuPSExLGEpe2NvbnN0IG89bj90OnQqRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5ULGg9cz9uP3M6cypGbG9hdDMyQXJyYXkuQllURVNfUEVSX0VMRU1FTlQ6dGhpcy5ieXRlU3RyaWRlO3JldHVybiBuZXcgZyh0aGlzLl9lbmdpbmUsdGhpcyxlLHRoaXMuX3VwZGF0YWJsZSwhMCxoLHI9PT12b2lkIDA/dGhpcy5faW5zdGFuY2VkOnIsbyxpLHZvaWQgMCx2b2lkIDAsITAsdGhpcy5fZGl2aXNvcnx8YSl9aXNVcGRhdGFibGUoKXtyZXR1cm4gdGhpcy5fdXBkYXRhYmxlfWdldERhdGEoKXtyZXR1cm4gdGhpcy5fZGF0YX1nZXRCdWZmZXIoKXtyZXR1cm4gdGhpcy5fYnVmZmVyfWdldFN0cmlkZVNpemUoKXtyZXR1cm4gdGhpcy5ieXRlU3RyaWRlL0Zsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVH1jcmVhdGUoZT1udWxsKXshZSYmdGhpcy5fYnVmZmVyfHwoZT1lfHx0aGlzLl9kYXRhLGUmJih0aGlzLl9idWZmZXI/dGhpcy5fdXBkYXRhYmxlJiYodGhpcy5fZW5naW5lLnVwZGF0ZUR5bmFtaWNWZXJ0ZXhCdWZmZXIodGhpcy5fYnVmZmVyLGUpLHRoaXMuX2RhdGE9ZSk6dGhpcy5fdXBkYXRhYmxlPyh0aGlzLl9idWZmZXI9dGhpcy5fZW5naW5lLmNyZWF0ZUR5bmFtaWNWZXJ0ZXhCdWZmZXIoZSksdGhpcy5fZGF0YT1lKTp0aGlzLl9idWZmZXI9dGhpcy5fZW5naW5lLmNyZWF0ZVZlcnRleEJ1ZmZlcihlKSkpfV9yZWJ1aWxkKCl7dGhpcy5fYnVmZmVyPW51bGwsdGhpcy5jcmVhdGUodGhpcy5fZGF0YSl9dXBkYXRlKGUpe3RoaXMuY3JlYXRlKGUpfXVwZGF0ZURpcmVjdGx5KGUsdCxpLHM9ITEpe3RoaXMuX2J1ZmZlciYmdGhpcy5fdXBkYXRhYmxlJiYodGhpcy5fZW5naW5lLnVwZGF0ZUR5bmFtaWNWZXJ0ZXhCdWZmZXIodGhpcy5fYnVmZmVyLGUscz90OnQqRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5ULGk/aSp0aGlzLmJ5dGVTdHJpZGU6dm9pZCAwKSx0PT09MCYmaT09PXZvaWQgMD90aGlzLl9kYXRhPWU6dGhpcy5fZGF0YT1udWxsKX1faW5jcmVhc2VSZWZlcmVuY2VzKCl7aWYodGhpcy5fYnVmZmVyKXtpZighdGhpcy5faXNBbHJlYWR5T3duZWQpe3RoaXMuX2lzQWxyZWFkeU93bmVkPSEwO3JldHVybn10aGlzLl9idWZmZXIucmVmZXJlbmNlcysrfX1kaXNwb3NlKCl7dGhpcy5fYnVmZmVyJiZ0aGlzLl9lbmdpbmUuX3JlbGVhc2VCdWZmZXIodGhpcy5fYnVmZmVyKSYmKHRoaXMuX2J1ZmZlcj1udWxsLHRoaXMuX2RhdGE9bnVsbCl9fWNsYXNzIGd7Y29uc3RydWN0b3IoZSx0LGkscyxyLG4sYSxvLGgsbCx1PSExLGQ9ITEsZj0xLF89ITEpe2lmKHQgaW5zdGFuY2VvZiAkaT8odGhpcy5fYnVmZmVyPXQsdGhpcy5fb3duc0J1ZmZlcj1fKToodGhpcy5fYnVmZmVyPW5ldyAkaShlLHQscyxuLHIsYSxkKSx0aGlzLl9vd25zQnVmZmVyPSEwKSx0aGlzLnVuaXF1ZUlkPWcuX0NvdW50ZXIrKyx0aGlzLl9raW5kPWksbD09bnVsbCl7Y29uc3QgbT10aGlzLmdldERhdGEoKTt0aGlzLnR5cGU9Zy5GTE9BVCxtIGluc3RhbmNlb2YgSW50OEFycmF5P3RoaXMudHlwZT1nLkJZVEU6bSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXk/dGhpcy50eXBlPWcuVU5TSUdORURfQllURTptIGluc3RhbmNlb2YgSW50MTZBcnJheT90aGlzLnR5cGU9Zy5TSE9SVDptIGluc3RhbmNlb2YgVWludDE2QXJyYXk/dGhpcy50eXBlPWcuVU5TSUdORURfU0hPUlQ6bSBpbnN0YW5jZW9mIEludDMyQXJyYXk/dGhpcy50eXBlPWcuSU5UOm0gaW5zdGFuY2VvZiBVaW50MzJBcnJheSYmKHRoaXMudHlwZT1nLlVOU0lHTkVEX0lOVCl9ZWxzZSB0aGlzLnR5cGU9bDtjb25zdCBFPWcuR2V0VHlwZUJ5dGVMZW5ndGgodGhpcy50eXBlKTtkPyh0aGlzLl9zaXplPWh8fChuP24vRTpnLkRlZHVjZVN0cmlkZShpKSksdGhpcy5ieXRlU3RyaWRlPW58fHRoaXMuX2J1ZmZlci5ieXRlU3RyaWRlfHx0aGlzLl9zaXplKkUsdGhpcy5ieXRlT2Zmc2V0PW98fDApOih0aGlzLl9zaXplPWh8fG58fGcuRGVkdWNlU3RyaWRlKGkpLHRoaXMuYnl0ZVN0cmlkZT1uP24qRTp0aGlzLl9idWZmZXIuYnl0ZVN0cmlkZXx8dGhpcy5fc2l6ZSpFLHRoaXMuYnl0ZU9mZnNldD0ob3x8MCkqRSksdGhpcy5ub3JtYWxpemVkPXUsdGhpcy5faW5zdGFuY2VkPWEhPT12b2lkIDA/YTohMSx0aGlzLl9pbnN0YW5jZURpdmlzb3I9YT9mOjAsdGhpcy5fY29tcHV0ZUhhc2hDb2RlKCl9Z2V0IGluc3RhbmNlRGl2aXNvcigpe3JldHVybiB0aGlzLl9pbnN0YW5jZURpdmlzb3J9c2V0IGluc3RhbmNlRGl2aXNvcihlKXtjb25zdCB0PWUhPTA7dGhpcy5faW5zdGFuY2VEaXZpc29yPWUsdCE9PXRoaXMuX2luc3RhbmNlZCYmKHRoaXMuX2luc3RhbmNlZD10LHRoaXMuX2NvbXB1dGVIYXNoQ29kZSgpKX1fY29tcHV0ZUhhc2hDb2RlKCl7dGhpcy5oYXNoQ29kZT0odGhpcy50eXBlLTUxMjA8PDApKygodGhpcy5ub3JtYWxpemVkPzE6MCk8PDMpKyh0aGlzLl9zaXplPDw0KSsoKHRoaXMuX2luc3RhbmNlZD8xOjApPDw2KSsodGhpcy5ieXRlU3RyaWRlPDwxMil9X3JlYnVpbGQoKXt0aGlzLl9idWZmZXImJnRoaXMuX2J1ZmZlci5fcmVidWlsZCgpfWdldEtpbmQoKXtyZXR1cm4gdGhpcy5fa2luZH1pc1VwZGF0YWJsZSgpe3JldHVybiB0aGlzLl9idWZmZXIuaXNVcGRhdGFibGUoKX1nZXREYXRhKCl7cmV0dXJuIHRoaXMuX2J1ZmZlci5nZXREYXRhKCl9Z2V0RmxvYXREYXRhKGUsdCl7Y29uc3QgaT10aGlzLmdldERhdGEoKTtpZighaSlyZXR1cm4gbnVsbDtjb25zdCBzPXRoaXMuZ2V0U2l6ZSgpKmcuR2V0VHlwZUJ5dGVMZW5ndGgodGhpcy50eXBlKSxyPWUqdGhpcy5nZXRTaXplKCk7aWYodGhpcy50eXBlIT09Zy5GTE9BVHx8dGhpcy5ieXRlU3RyaWRlIT09cyl7Y29uc3Qgbj1uZXcgRmxvYXQzMkFycmF5KHIpO3JldHVybiB0aGlzLmZvckVhY2gociwoYSxvKT0+bltvXT1hKSxufWlmKCEoaSBpbnN0YW5jZW9mIEFycmF5fHxpIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5KXx8dGhpcy5ieXRlT2Zmc2V0IT09MHx8aS5sZW5ndGghPT1yKWlmKGkgaW5zdGFuY2VvZiBBcnJheSl7Y29uc3Qgbj10aGlzLmJ5dGVPZmZzZXQvNDtyZXR1cm4gaS5zbGljZShuLG4rcil9ZWxzZXtpZihpIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoaSx0aGlzLmJ5dGVPZmZzZXQscik7e2xldCBuPWkuYnl0ZU9mZnNldCt0aGlzLmJ5dGVPZmZzZXQ7aWYodCl7Y29uc3Qgbz1uZXcgRmxvYXQzMkFycmF5KHIpLGg9bmV3IEZsb2F0MzJBcnJheShpLmJ1ZmZlcixuLHIpO3JldHVybiBvLnNldChoKSxvfWNvbnN0IGE9biU0O3JldHVybiBhJiYobj1NYXRoLm1heCgwLG4tYSkpLG5ldyBGbG9hdDMyQXJyYXkoaS5idWZmZXIsbixyKX19cmV0dXJuIHQ/aS5zbGljZSgpOml9Z2V0QnVmZmVyKCl7cmV0dXJuIHRoaXMuX2J1ZmZlci5nZXRCdWZmZXIoKX1nZXRTdHJpZGVTaXplKCl7cmV0dXJuIHRoaXMuYnl0ZVN0cmlkZS9nLkdldFR5cGVCeXRlTGVuZ3RoKHRoaXMudHlwZSl9Z2V0T2Zmc2V0KCl7cmV0dXJuIHRoaXMuYnl0ZU9mZnNldC9nLkdldFR5cGVCeXRlTGVuZ3RoKHRoaXMudHlwZSl9Z2V0U2l6ZShlPSExKXtyZXR1cm4gZT90aGlzLl9zaXplKmcuR2V0VHlwZUJ5dGVMZW5ndGgodGhpcy50eXBlKTp0aGlzLl9zaXplfWdldElzSW5zdGFuY2VkKCl7cmV0dXJuIHRoaXMuX2luc3RhbmNlZH1nZXRJbnN0YW5jZURpdmlzb3IoKXtyZXR1cm4gdGhpcy5faW5zdGFuY2VEaXZpc29yfWNyZWF0ZShlKXt0aGlzLl9idWZmZXIuY3JlYXRlKGUpfXVwZGF0ZShlKXt0aGlzLl9idWZmZXIudXBkYXRlKGUpfXVwZGF0ZURpcmVjdGx5KGUsdCxpPSExKXt0aGlzLl9idWZmZXIudXBkYXRlRGlyZWN0bHkoZSx0LHZvaWQgMCxpKX1kaXNwb3NlKCl7dGhpcy5fb3duc0J1ZmZlciYmdGhpcy5fYnVmZmVyLmRpc3Bvc2UoKX1mb3JFYWNoKGUsdCl7Zy5Gb3JFYWNoKHRoaXMuX2J1ZmZlci5nZXREYXRhKCksdGhpcy5ieXRlT2Zmc2V0LHRoaXMuYnl0ZVN0cmlkZSx0aGlzLl9zaXplLHRoaXMudHlwZSxlLHRoaXMubm9ybWFsaXplZCx0KX1zdGF0aWMgRGVkdWNlU3RyaWRlKGUpe3N3aXRjaChlKXtjYXNlIGcuVVZLaW5kOmNhc2UgZy5VVjJLaW5kOmNhc2UgZy5VVjNLaW5kOmNhc2UgZy5VVjRLaW5kOmNhc2UgZy5VVjVLaW5kOmNhc2UgZy5VVjZLaW5kOnJldHVybiAyO2Nhc2UgZy5Ob3JtYWxLaW5kOmNhc2UgZy5Qb3NpdGlvbktpbmQ6cmV0dXJuIDM7Y2FzZSBnLkNvbG9yS2luZDpjYXNlIGcuTWF0cmljZXNJbmRpY2VzS2luZDpjYXNlIGcuTWF0cmljZXNJbmRpY2VzRXh0cmFLaW5kOmNhc2UgZy5NYXRyaWNlc1dlaWdodHNLaW5kOmNhc2UgZy5NYXRyaWNlc1dlaWdodHNFeHRyYUtpbmQ6Y2FzZSBnLlRhbmdlbnRLaW5kOnJldHVybiA0O2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCJJbnZhbGlkIGtpbmQgJyIrZSsiJyIpfX1zdGF0aWMgR2V0VHlwZUJ5dGVMZW5ndGgoZSl7c3dpdGNoKGUpe2Nhc2UgZy5CWVRFOmNhc2UgZy5VTlNJR05FRF9CWVRFOnJldHVybiAxO2Nhc2UgZy5TSE9SVDpjYXNlIGcuVU5TSUdORURfU0hPUlQ6cmV0dXJuIDI7Y2FzZSBnLklOVDpjYXNlIGcuVU5TSUdORURfSU5UOmNhc2UgZy5GTE9BVDpyZXR1cm4gNDtkZWZhdWx0OnRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0eXBlICcke2V9J2ApfX1zdGF0aWMgRm9yRWFjaChlLHQsaSxzLHIsbixhLG8pe2lmKGUgaW5zdGFuY2VvZiBBcnJheSl7bGV0IGg9dC80O2NvbnN0IGw9aS80O2ZvcihsZXQgdT0wO3U8bjt1Kz1zKXtmb3IobGV0IGQ9MDtkPHM7ZCsrKW8oZVtoK2RdLHUrZCk7aCs9bH19ZWxzZXtjb25zdCBoPWUgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcj9uZXcgRGF0YVZpZXcoZSk6bmV3IERhdGFWaWV3KGUuYnVmZmVyLGUuYnl0ZU9mZnNldCxlLmJ5dGVMZW5ndGgpLGw9Zy5HZXRUeXBlQnl0ZUxlbmd0aChyKTtmb3IobGV0IHU9MDt1PG47dSs9cyl7bGV0IGQ9dDtmb3IobGV0IGY9MDtmPHM7ZisrKXtjb25zdCBfPWcuX0dldEZsb2F0VmFsdWUoaCxyLGQsYSk7byhfLHUrZiksZCs9bH10Kz1pfX19c3RhdGljIF9HZXRGbG9hdFZhbHVlKGUsdCxpLHMpe3N3aXRjaCh0KXtjYXNlIGcuQllURTp7bGV0IHI9ZS5nZXRJbnQ4KGkpO3JldHVybiBzJiYocj1NYXRoLm1heChyLzEyNywtMSkpLHJ9Y2FzZSBnLlVOU0lHTkVEX0JZVEU6e2xldCByPWUuZ2V0VWludDgoaSk7cmV0dXJuIHMmJihyPXIvMjU1KSxyfWNhc2UgZy5TSE9SVDp7bGV0IHI9ZS5nZXRJbnQxNihpLCEwKTtyZXR1cm4gcyYmKHI9TWF0aC5tYXgoci8zMjc2NywtMSkpLHJ9Y2FzZSBnLlVOU0lHTkVEX1NIT1JUOntsZXQgcj1lLmdldFVpbnQxNihpLCEwKTtyZXR1cm4gcyYmKHI9ci82NTUzNSkscn1jYXNlIGcuSU5UOnJldHVybiBlLmdldEludDMyKGksITApO2Nhc2UgZy5VTlNJR05FRF9JTlQ6cmV0dXJuIGUuZ2V0VWludDMyKGksITApO2Nhc2UgZy5GTE9BVDpyZXR1cm4gZS5nZXRGbG9hdDMyKGksITApO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGNvbXBvbmVudCB0eXBlICR7dH1gKX19fWcuX0NvdW50ZXI9MCxnLkJZVEU9NTEyMCxnLlVOU0lHTkVEX0JZVEU9NTEyMSxnLlNIT1JUPTUxMjIsZy5VTlNJR05FRF9TSE9SVD01MTIzLGcuSU5UPTUxMjQsZy5VTlNJR05FRF9JTlQ9NTEyNSxnLkZMT0FUPTUxMjYsZy5Qb3NpdGlvbktpbmQ9InBvc2l0aW9uIixnLk5vcm1hbEtpbmQ9Im5vcm1hbCIsZy5UYW5nZW50S2luZD0idGFuZ2VudCIsZy5VVktpbmQ9InV2IixnLlVWMktpbmQ9InV2MiIsZy5VVjNLaW5kPSJ1djMiLGcuVVY0S2luZD0idXY0IixnLlVWNUtpbmQ9InV2NSIsZy5VVjZLaW5kPSJ1djYiLGcuQ29sb3JLaW5kPSJjb2xvciIsZy5Db2xvckluc3RhbmNlS2luZD0iaW5zdGFuY2VDb2xvciIsZy5NYXRyaWNlc0luZGljZXNLaW5kPSJtYXRyaWNlc0luZGljZXMiLGcuTWF0cmljZXNXZWlnaHRzS2luZD0ibWF0cmljZXNXZWlnaHRzIixnLk1hdHJpY2VzSW5kaWNlc0V4dHJhS2luZD0ibWF0cmljZXNJbmRpY2VzRXh0cmEiLGcuTWF0cmljZXNXZWlnaHRzRXh0cmFLaW5kPSJtYXRyaWNlc1dlaWdodHNFeHRyYSI7Y2xhc3MgVXR7Y29uc3RydWN0b3IoKXt0aGlzLmhpdD0hMSx0aGlzLmRpc3RhbmNlPTAsdGhpcy5waWNrZWRQb2ludD1udWxsLHRoaXMucGlja2VkTWVzaD1udWxsLHRoaXMuYnU9MCx0aGlzLmJ2PTAsdGhpcy5mYWNlSWQ9LTEsdGhpcy5zdWJNZXNoRmFjZUlkPS0xLHRoaXMuc3ViTWVzaElkPTAsdGhpcy5waWNrZWRTcHJpdGU9bnVsbCx0aGlzLnRoaW5JbnN0YW5jZUluZGV4PS0xLHRoaXMucmF5PW51bGwsdGhpcy5vcmlnaW5NZXNoPW51bGwsdGhpcy5haW1UcmFuc2Zvcm09bnVsbCx0aGlzLmdyaXBUcmFuc2Zvcm09bnVsbH1nZXROb3JtYWwoZT0hMSx0PSEwKXtpZighdGhpcy5waWNrZWRNZXNofHx0JiYhdGhpcy5waWNrZWRNZXNoLmlzVmVydGljZXNEYXRhUHJlc2VudChnLk5vcm1hbEtpbmQpKXJldHVybiBudWxsO2NvbnN0IGk9dGhpcy5waWNrZWRNZXNoLmdldEluZGljZXMoKTtpZighaSlyZXR1cm4gbnVsbDtsZXQgcztpZih0KXtjb25zdCBuPXRoaXMucGlja2VkTWVzaC5nZXRWZXJ0aWNlc0RhdGEoZy5Ob3JtYWxLaW5kKTtsZXQgYT1wLkZyb21BcnJheShuLGlbdGhpcy5mYWNlSWQqM10qMyksbz1wLkZyb21BcnJheShuLGlbdGhpcy5mYWNlSWQqMysxXSozKSxoPXAuRnJvbUFycmF5KG4saVt0aGlzLmZhY2VJZCozKzJdKjMpO2E9YS5zY2FsZSh0aGlzLmJ1KSxvPW8uc2NhbGUodGhpcy5idiksaD1oLnNjYWxlKDEtdGhpcy5idS10aGlzLmJ2KSxzPW5ldyBwKGEueCtvLngraC54LGEueStvLnkraC55LGEueitvLnoraC56KX1lbHNle2NvbnN0IG49dGhpcy5waWNrZWRNZXNoLmdldFZlcnRpY2VzRGF0YShnLlBvc2l0aW9uS2luZCksYT1wLkZyb21BcnJheShuLGlbdGhpcy5mYWNlSWQqM10qMyksbz1wLkZyb21BcnJheShuLGlbdGhpcy5mYWNlSWQqMysxXSozKSxoPXAuRnJvbUFycmF5KG4saVt0aGlzLmZhY2VJZCozKzJdKjMpLGw9YS5zdWJ0cmFjdChvKSx1PWguc3VidHJhY3Qobyk7cz1wLkNyb3NzKGwsdSl9Y29uc3Qgcj0obixhKT0+e2xldCBvPW4uZ2V0V29ybGRNYXRyaXgoKTtuLm5vblVuaWZvcm1TY2FsaW5nJiYoRC5NYXRyaXhbMF0uY29weUZyb20obyksbz1ELk1hdHJpeFswXSxvLnNldFRyYW5zbGF0aW9uRnJvbUZsb2F0cygwLDAsMCksby5pbnZlcnQoKSxvLnRyYW5zcG9zZVRvUmVmKEQuTWF0cml4WzFdKSxvPUQuTWF0cml4WzFdKSxwLlRyYW5zZm9ybU5vcm1hbFRvUmVmKGEsbyxhKX07aWYoZSYmcih0aGlzLnBpY2tlZE1lc2gscyksdGhpcy5yYXkpe2NvbnN0IG49RC5WZWN0b3IzWzBdLmNvcHlGcm9tKHMpO2V8fHIodGhpcy5waWNrZWRNZXNoLG4pLHAuRG90KG4sdGhpcy5yYXkuZGlyZWN0aW9uKT4wJiZzLm5lZ2F0ZUluUGxhY2UoKX1yZXR1cm4gcy5ub3JtYWxpemUoKSxzfWdldFRleHR1cmVDb29yZGluYXRlcygpe2lmKCF0aGlzLnBpY2tlZE1lc2h8fCF0aGlzLnBpY2tlZE1lc2guaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuVVZLaW5kKSlyZXR1cm4gbnVsbDtjb25zdCBlPXRoaXMucGlja2VkTWVzaC5nZXRJbmRpY2VzKCk7aWYoIWUpcmV0dXJuIG51bGw7Y29uc3QgdD10aGlzLnBpY2tlZE1lc2guZ2V0VmVydGljZXNEYXRhKGcuVVZLaW5kKTtpZighdClyZXR1cm4gbnVsbDtsZXQgaT12ZS5Gcm9tQXJyYXkodCxlW3RoaXMuZmFjZUlkKjNdKjIpLHM9dmUuRnJvbUFycmF5KHQsZVt0aGlzLmZhY2VJZCozKzFdKjIpLHI9dmUuRnJvbUFycmF5KHQsZVt0aGlzLmZhY2VJZCozKzJdKjIpO3JldHVybiBpPWkuc2NhbGUodGhpcy5idSkscz1zLnNjYWxlKHRoaXMuYnYpLHI9ci5zY2FsZSgxLXRoaXMuYnUtdGhpcy5idiksbmV3IHZlKGkueCtzLngrci54LGkueStzLnkrci55KX19Y2xhc3MgVmV7Y29uc3RydWN0b3IoZSx0LGkscyxyLG4pe3RoaXMuc291cmNlPWUsdGhpcy5wb2ludGVyWD10LHRoaXMucG9pbnRlclk9aSx0aGlzLm1lc2hVbmRlclBvaW50ZXI9cyx0aGlzLnNvdXJjZUV2ZW50PXIsdGhpcy5hZGRpdGlvbmFsRGF0YT1ufXN0YXRpYyBDcmVhdGVOZXcoZSx0LGkpe2NvbnN0IHM9ZS5nZXRTY2VuZSgpO3JldHVybiBuZXcgVmUoZSxzLnBvaW50ZXJYLHMucG9pbnRlclkscy5tZXNoVW5kZXJQb2ludGVyfHxlLHQsaSl9c3RhdGljIENyZWF0ZU5ld0Zyb21TcHJpdGUoZSx0LGkscyl7cmV0dXJuIG5ldyBWZShlLHQucG9pbnRlclgsdC5wb2ludGVyWSx0Lm1lc2hVbmRlclBvaW50ZXIsaSxzKX1zdGF0aWMgQ3JlYXRlTmV3RnJvbVNjZW5lKGUsdCl7cmV0dXJuIG5ldyBWZShudWxsLGUucG9pbnRlclgsZS5wb2ludGVyWSxlLm1lc2hVbmRlclBvaW50ZXIsdCl9c3RhdGljIENyZWF0ZU5ld0Zyb21QcmltaXRpdmUoZSx0LGkscyl7cmV0dXJuIG5ldyBWZShlLHQueCx0LnksbnVsbCxpLHMpfX1jbGFzcyBRaXtjb25zdHJ1Y3RvcihlKXt0aGlzLl92ZXJ0ZXhCdWZmZXJzPXt9LHRoaXMuX3NjZW5lPWV9X3ByZXBhcmVCdWZmZXJzKCl7aWYodGhpcy5fdmVydGV4QnVmZmVyc1tnLlBvc2l0aW9uS2luZF0pcmV0dXJuO2NvbnN0IGU9W107ZS5wdXNoKDEsMSksZS5wdXNoKC0xLDEpLGUucHVzaCgtMSwtMSksZS5wdXNoKDEsLTEpLHRoaXMuX3ZlcnRleEJ1ZmZlcnNbZy5Qb3NpdGlvbktpbmRdPW5ldyBnKHRoaXMuX3NjZW5lLmdldEVuZ2luZSgpLGUsZy5Qb3NpdGlvbktpbmQsITEsITEsMiksdGhpcy5fYnVpbGRJbmRleEJ1ZmZlcigpfV9idWlsZEluZGV4QnVmZmVyKCl7Y29uc3QgZT1bXTtlLnB1c2goMCksZS5wdXNoKDEpLGUucHVzaCgyKSxlLnB1c2goMCksZS5wdXNoKDIpLGUucHVzaCgzKSx0aGlzLl9pbmRleEJ1ZmZlcj10aGlzLl9zY2VuZS5nZXRFbmdpbmUoKS5jcmVhdGVJbmRleEJ1ZmZlcihlKX1fcmVidWlsZCgpe2NvbnN0IGU9dGhpcy5fdmVydGV4QnVmZmVyc1tnLlBvc2l0aW9uS2luZF07ZSYmKGUuX3JlYnVpbGQoKSx0aGlzLl9idWlsZEluZGV4QnVmZmVyKCkpfV9wcmVwYXJlRnJhbWUoZT1udWxsLHQ9bnVsbCl7Y29uc3QgaT10aGlzLl9zY2VuZS5hY3RpdmVDYW1lcmE7cmV0dXJuIWl8fCh0PXR8fGkuX3Bvc3RQcm9jZXNzZXMuZmlsdGVyKHM9PnMhPW51bGwpLCF0fHx0Lmxlbmd0aD09PTB8fCF0aGlzLl9zY2VuZS5wb3N0UHJvY2Vzc2VzRW5hYmxlZCk/ITE6KHRbMF0uYWN0aXZhdGUoaSxlLHQhPW51bGwpLCEwKX1kaXJlY3RSZW5kZXIoZSx0PW51bGwsaT0hMSxzPTAscj0wLG49ITEpe3ZhciBhO2NvbnN0IG89dGhpcy5fc2NlbmUuZ2V0RW5naW5lKCk7Zm9yKGxldCBoPTA7aDxlLmxlbmd0aDtoKyspe2g8ZS5sZW5ndGgtMT9lW2grMV0uYWN0aXZhdGUodGhpcy5fc2NlbmUuYWN0aXZlQ2FtZXJhLHQ9PW51bGw/dm9pZCAwOnQudGV4dHVyZSk6KHQ/by5iaW5kRnJhbWVidWZmZXIodCxzLHZvaWQgMCx2b2lkIDAsaSxyKTpufHxvLnJlc3RvcmVEZWZhdWx0RnJhbWVidWZmZXIoKSwoYT1vLl9kZWJ1Z0luc2VydE1hcmtlcik9PT1udWxsfHxhPT09dm9pZCAwfHxhLmNhbGwobyxgcG9zdCBwcm9jZXNzICR7ZVtoXS5uYW1lfSBvdXRwdXRgKSk7Y29uc3QgbD1lW2hdLHU9bC5hcHBseSgpO3UmJihsLm9uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModSksdGhpcy5fcHJlcGFyZUJ1ZmZlcnMoKSxvLmJpbmRCdWZmZXJzKHRoaXMuX3ZlcnRleEJ1ZmZlcnMsdGhpcy5faW5kZXhCdWZmZXIsdSksby5kcmF3RWxlbWVudHNUeXBlKDAsMCw2KSxsLm9uQWZ0ZXJSZW5kZXJPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh1KSl9by5zZXREZXB0aEJ1ZmZlcighMCksby5zZXREZXB0aFdyaXRlKCEwKX1fZmluYWxpemVGcmFtZShlLHQsaSxzLHI9ITEpe3ZhciBuO2NvbnN0IGE9dGhpcy5fc2NlbmUuYWN0aXZlQ2FtZXJhO2lmKCFhfHwocz1zfHxhLl9wb3N0UHJvY2Vzc2VzLmZpbHRlcihoPT5oIT1udWxsKSxzLmxlbmd0aD09PTB8fCF0aGlzLl9zY2VuZS5wb3N0UHJvY2Vzc2VzRW5hYmxlZCkpcmV0dXJuO2NvbnN0IG89dGhpcy5fc2NlbmUuZ2V0RW5naW5lKCk7Zm9yKGxldCBoPTAsbD1zLmxlbmd0aDtoPGw7aCsrKXtjb25zdCB1PXNbaF07aWYoaDxsLTE/dS5fb3V0cHV0VGV4dHVyZT1zW2grMV0uYWN0aXZhdGUoYSx0PT1udWxsP3ZvaWQgMDp0LnRleHR1cmUpOih0PyhvLmJpbmRGcmFtZWJ1ZmZlcih0LGksdm9pZCAwLHZvaWQgMCxyKSx1Ll9vdXRwdXRUZXh0dXJlPXQpOihvLnJlc3RvcmVEZWZhdWx0RnJhbWVidWZmZXIoKSx1Ll9vdXRwdXRUZXh0dXJlPW51bGwpLChuPW8uX2RlYnVnSW5zZXJ0TWFya2VyKT09PW51bGx8fG49PT12b2lkIDB8fG4uY2FsbChvLGBwb3N0IHByb2Nlc3MgJHtzW2hdLm5hbWV9IG91dHB1dGApKSxlKWJyZWFrO2NvbnN0IGQ9dS5hcHBseSgpO2QmJih1Lm9uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoZCksdGhpcy5fcHJlcGFyZUJ1ZmZlcnMoKSxvLmJpbmRCdWZmZXJzKHRoaXMuX3ZlcnRleEJ1ZmZlcnMsdGhpcy5faW5kZXhCdWZmZXIsZCksby5kcmF3RWxlbWVudHNUeXBlKDAsMCw2KSx1Lm9uQWZ0ZXJSZW5kZXJPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhkKSl9by5zZXREZXB0aEJ1ZmZlcighMCksby5zZXREZXB0aFdyaXRlKCEwKSxvLnNldEFscGhhTW9kZSgwKX1kaXNwb3NlKCl7Y29uc3QgZT10aGlzLl92ZXJ0ZXhCdWZmZXJzW2cuUG9zaXRpb25LaW5kXTtlJiYoZS5kaXNwb3NlKCksdGhpcy5fdmVydGV4QnVmZmVyc1tnLlBvc2l0aW9uS2luZF09bnVsbCksdGhpcy5faW5kZXhCdWZmZXImJih0aGlzLl9zY2VuZS5nZXRFbmdpbmUoKS5fcmVsZWFzZUJ1ZmZlcih0aGlzLl9pbmRleEJ1ZmZlciksdGhpcy5faW5kZXhCdWZmZXI9bnVsbCl9fWNsYXNzIFN0e2NvbnN0cnVjdG9yKGUsdCxpPW51bGwscz1udWxsLHI9bnVsbCl7dGhpcy5pbmRleD1lLHRoaXMuX29wYXF1ZVN1Yk1lc2hlcz1uZXcgJGUoMjU2KSx0aGlzLl90cmFuc3BhcmVudFN1Yk1lc2hlcz1uZXcgJGUoMjU2KSx0aGlzLl9hbHBoYVRlc3RTdWJNZXNoZXM9bmV3ICRlKDI1NiksdGhpcy5fZGVwdGhPbmx5U3ViTWVzaGVzPW5ldyAkZSgyNTYpLHRoaXMuX3BhcnRpY2xlU3lzdGVtcz1uZXcgJGUoMjU2KSx0aGlzLl9zcHJpdGVNYW5hZ2Vycz1uZXcgJGUoMjU2KSx0aGlzLl9lbXB0eT0hMCx0aGlzLl9lZGdlc1JlbmRlcmVycz1uZXcgaGkoMTYpLHRoaXMuX3NjZW5lPXQsdGhpcy5vcGFxdWVTb3J0Q29tcGFyZUZuPWksdGhpcy5hbHBoYVRlc3RTb3J0Q29tcGFyZUZuPXMsdGhpcy50cmFuc3BhcmVudFNvcnRDb21wYXJlRm49cn1zZXQgb3BhcXVlU29ydENvbXBhcmVGbihlKXtlP3RoaXMuX29wYXF1ZVNvcnRDb21wYXJlRm49ZTp0aGlzLl9vcGFxdWVTb3J0Q29tcGFyZUZuPVN0LlBhaW50ZXJTb3J0Q29tcGFyZSx0aGlzLl9yZW5kZXJPcGFxdWU9dGhpcy5fcmVuZGVyT3BhcXVlU29ydGVkfXNldCBhbHBoYVRlc3RTb3J0Q29tcGFyZUZuKGUpe2U/dGhpcy5fYWxwaGFUZXN0U29ydENvbXBhcmVGbj1lOnRoaXMuX2FscGhhVGVzdFNvcnRDb21wYXJlRm49U3QuUGFpbnRlclNvcnRDb21wYXJlLHRoaXMuX3JlbmRlckFscGhhVGVzdD10aGlzLl9yZW5kZXJBbHBoYVRlc3RTb3J0ZWR9c2V0IHRyYW5zcGFyZW50U29ydENvbXBhcmVGbihlKXtlP3RoaXMuX3RyYW5zcGFyZW50U29ydENvbXBhcmVGbj1lOnRoaXMuX3RyYW5zcGFyZW50U29ydENvbXBhcmVGbj1TdC5kZWZhdWx0VHJhbnNwYXJlbnRTb3J0Q29tcGFyZSx0aGlzLl9yZW5kZXJUcmFuc3BhcmVudD10aGlzLl9yZW5kZXJUcmFuc3BhcmVudFNvcnRlZH1yZW5kZXIoZSx0LGkscyl7aWYoZSl7ZSh0aGlzLl9vcGFxdWVTdWJNZXNoZXMsdGhpcy5fYWxwaGFUZXN0U3ViTWVzaGVzLHRoaXMuX3RyYW5zcGFyZW50U3ViTWVzaGVzLHRoaXMuX2RlcHRoT25seVN1Yk1lc2hlcyk7cmV0dXJufWNvbnN0IHI9dGhpcy5fc2NlbmUuZ2V0RW5naW5lKCk7dGhpcy5fZGVwdGhPbmx5U3ViTWVzaGVzLmxlbmd0aCE9PTAmJihyLnNldENvbG9yV3JpdGUoITEpLHRoaXMuX3JlbmRlckFscGhhVGVzdCh0aGlzLl9kZXB0aE9ubHlTdWJNZXNoZXMpLHIuc2V0Q29sb3JXcml0ZSghMCkpLHRoaXMuX29wYXF1ZVN1Yk1lc2hlcy5sZW5ndGghPT0wJiZ0aGlzLl9yZW5kZXJPcGFxdWUodGhpcy5fb3BhcXVlU3ViTWVzaGVzKSx0aGlzLl9hbHBoYVRlc3RTdWJNZXNoZXMubGVuZ3RoIT09MCYmdGhpcy5fcmVuZGVyQWxwaGFUZXN0KHRoaXMuX2FscGhhVGVzdFN1Yk1lc2hlcyk7Y29uc3Qgbj1yLmdldFN0ZW5jaWxCdWZmZXIoKTtpZihyLnNldFN0ZW5jaWxCdWZmZXIoITEpLHQmJnRoaXMuX3JlbmRlclNwcml0ZXMoKSxpJiZ0aGlzLl9yZW5kZXJQYXJ0aWNsZXMocyksdGhpcy5vbkJlZm9yZVRyYW5zcGFyZW50UmVuZGVyaW5nJiZ0aGlzLm9uQmVmb3JlVHJhbnNwYXJlbnRSZW5kZXJpbmcoKSx0aGlzLl90cmFuc3BhcmVudFN1Yk1lc2hlcy5sZW5ndGghPT0wfHx0aGlzLl9zY2VuZS51c2VPcmRlckluZGVwZW5kZW50VHJhbnNwYXJlbmN5KXtpZihyLnNldFN0ZW5jaWxCdWZmZXIobiksdGhpcy5fc2NlbmUudXNlT3JkZXJJbmRlcGVuZGVudFRyYW5zcGFyZW5jeSl7Y29uc3QgYT10aGlzLl9zY2VuZS5kZXB0aFBlZWxpbmdSZW5kZXJlci5yZW5kZXIodGhpcy5fdHJhbnNwYXJlbnRTdWJNZXNoZXMpO2EubGVuZ3RoJiZ0aGlzLl9yZW5kZXJUcmFuc3BhcmVudChhKX1lbHNlIHRoaXMuX3JlbmRlclRyYW5zcGFyZW50KHRoaXMuX3RyYW5zcGFyZW50U3ViTWVzaGVzKTtyLnNldEFscGhhTW9kZSgwKX1pZihyLnNldFN0ZW5jaWxCdWZmZXIoITEpLHRoaXMuX2VkZ2VzUmVuZGVyZXJzLmxlbmd0aCl7Zm9yKGxldCBhPTA7YTx0aGlzLl9lZGdlc1JlbmRlcmVycy5sZW5ndGg7YSsrKXRoaXMuX2VkZ2VzUmVuZGVyZXJzLmRhdGFbYV0ucmVuZGVyKCk7ci5zZXRBbHBoYU1vZGUoMCl9ci5zZXRTdGVuY2lsQnVmZmVyKG4pfV9yZW5kZXJPcGFxdWVTb3J0ZWQoZSl7cmV0dXJuIFN0Ll9SZW5kZXJTb3J0ZWQoZSx0aGlzLl9vcGFxdWVTb3J0Q29tcGFyZUZuLHRoaXMuX3NjZW5lLmFjdGl2ZUNhbWVyYSwhMSl9X3JlbmRlckFscGhhVGVzdFNvcnRlZChlKXtyZXR1cm4gU3QuX1JlbmRlclNvcnRlZChlLHRoaXMuX2FscGhhVGVzdFNvcnRDb21wYXJlRm4sdGhpcy5fc2NlbmUuYWN0aXZlQ2FtZXJhLCExKX1fcmVuZGVyVHJhbnNwYXJlbnRTb3J0ZWQoZSl7cmV0dXJuIFN0Ll9SZW5kZXJTb3J0ZWQoZSx0aGlzLl90cmFuc3BhcmVudFNvcnRDb21wYXJlRm4sdGhpcy5fc2NlbmUuYWN0aXZlQ2FtZXJhLCEwKX1zdGF0aWMgX1JlbmRlclNvcnRlZChlLHQsaSxzKXtsZXQgcj0wLG47Y29uc3QgYT1pP2kuZ2xvYmFsUG9zaXRpb246U3QuX1plcm9WZWN0b3I7aWYocylmb3IoO3I8ZS5sZW5ndGg7cisrKW49ZS5kYXRhW3JdLG4uX2FscGhhSW5kZXg9bi5nZXRNZXNoKCkuYWxwaGFJbmRleCxuLl9kaXN0YW5jZVRvQ2FtZXJhPXAuRGlzdGFuY2Uobi5nZXRCb3VuZGluZ0luZm8oKS5ib3VuZGluZ1NwaGVyZS5jZW50ZXJXb3JsZCxhKTtjb25zdCBvPWUubGVuZ3RoPT09ZS5kYXRhLmxlbmd0aD9lLmRhdGE6ZS5kYXRhLnNsaWNlKDAsZS5sZW5ndGgpO3QmJm8uc29ydCh0KTtjb25zdCBoPW9bMF0uZ2V0TWVzaCgpLmdldFNjZW5lKCk7Zm9yKHI9MDtyPG8ubGVuZ3RoO3IrKylpZihuPW9bcl0sIShoLl9hY3RpdmVNZXNoZXNGcm96ZW5CdXRLZWVwQ2xpcHBpbmcmJiFuLmlzSW5GcnVzdHVtKGguX2ZydXN0dW1QbGFuZXMpKSl7aWYocyl7Y29uc3QgbD1uLmdldE1hdGVyaWFsKCk7aWYobCYmbC5uZWVkRGVwdGhQcmVQYXNzKXtjb25zdCB1PWwuZ2V0U2NlbmUoKS5nZXRFbmdpbmUoKTt1LnNldENvbG9yV3JpdGUoITEpLHUuc2V0QWxwaGFNb2RlKDApLG4ucmVuZGVyKCExKSx1LnNldENvbG9yV3JpdGUoITApfX1uLnJlbmRlcihzKX19c3RhdGljIGRlZmF1bHRUcmFuc3BhcmVudFNvcnRDb21wYXJlKGUsdCl7cmV0dXJuIGUuX2FscGhhSW5kZXg+dC5fYWxwaGFJbmRleD8xOmUuX2FscGhhSW5kZXg8dC5fYWxwaGFJbmRleD8tMTpTdC5iYWNrVG9Gcm9udFNvcnRDb21wYXJlKGUsdCl9c3RhdGljIGJhY2tUb0Zyb250U29ydENvbXBhcmUoZSx0KXtyZXR1cm4gZS5fZGlzdGFuY2VUb0NhbWVyYTx0Ll9kaXN0YW5jZVRvQ2FtZXJhPzE6ZS5fZGlzdGFuY2VUb0NhbWVyYT50Ll9kaXN0YW5jZVRvQ2FtZXJhPy0xOjB9c3RhdGljIGZyb250VG9CYWNrU29ydENvbXBhcmUoZSx0KXtyZXR1cm4gZS5fZGlzdGFuY2VUb0NhbWVyYTx0Ll9kaXN0YW5jZVRvQ2FtZXJhPy0xOmUuX2Rpc3RhbmNlVG9DYW1lcmE+dC5fZGlzdGFuY2VUb0NhbWVyYT8xOjB9c3RhdGljIFBhaW50ZXJTb3J0Q29tcGFyZShlLHQpe2NvbnN0IGk9ZS5nZXRNZXNoKCkscz10LmdldE1lc2goKTtyZXR1cm4gaS5tYXRlcmlhbCYmcy5tYXRlcmlhbD9pLm1hdGVyaWFsLnVuaXF1ZUlkLXMubWF0ZXJpYWwudW5pcXVlSWQ6aS51bmlxdWVJZC1zLnVuaXF1ZUlkfXByZXBhcmUoKXt0aGlzLl9vcGFxdWVTdWJNZXNoZXMucmVzZXQoKSx0aGlzLl90cmFuc3BhcmVudFN1Yk1lc2hlcy5yZXNldCgpLHRoaXMuX2FscGhhVGVzdFN1Yk1lc2hlcy5yZXNldCgpLHRoaXMuX2RlcHRoT25seVN1Yk1lc2hlcy5yZXNldCgpLHRoaXMuX3BhcnRpY2xlU3lzdGVtcy5yZXNldCgpLHRoaXMucHJlcGFyZVNwcml0ZXMoKSx0aGlzLl9lZGdlc1JlbmRlcmVycy5yZXNldCgpLHRoaXMuX2VtcHR5PSEwfXByZXBhcmVTcHJpdGVzKCl7dGhpcy5fc3ByaXRlTWFuYWdlcnMucmVzZXQoKX1kaXNwb3NlKCl7dGhpcy5fb3BhcXVlU3ViTWVzaGVzLmRpc3Bvc2UoKSx0aGlzLl90cmFuc3BhcmVudFN1Yk1lc2hlcy5kaXNwb3NlKCksdGhpcy5fYWxwaGFUZXN0U3ViTWVzaGVzLmRpc3Bvc2UoKSx0aGlzLl9kZXB0aE9ubHlTdWJNZXNoZXMuZGlzcG9zZSgpLHRoaXMuX3BhcnRpY2xlU3lzdGVtcy5kaXNwb3NlKCksdGhpcy5fc3ByaXRlTWFuYWdlcnMuZGlzcG9zZSgpLHRoaXMuX2VkZ2VzUmVuZGVyZXJzLmRpc3Bvc2UoKX1kaXNwYXRjaChlLHQsaSl7dD09PXZvaWQgMCYmKHQ9ZS5nZXRNZXNoKCkpLGk9PT12b2lkIDAmJihpPWUuZ2V0TWF0ZXJpYWwoKSksaSE9bnVsbCYmKGkubmVlZEFscGhhQmxlbmRpbmdGb3JNZXNoKHQpP3RoaXMuX3RyYW5zcGFyZW50U3ViTWVzaGVzLnB1c2goZSk6aS5uZWVkQWxwaGFUZXN0aW5nKCk/KGkubmVlZERlcHRoUHJlUGFzcyYmdGhpcy5fZGVwdGhPbmx5U3ViTWVzaGVzLnB1c2goZSksdGhpcy5fYWxwaGFUZXN0U3ViTWVzaGVzLnB1c2goZSkpOihpLm5lZWREZXB0aFByZVBhc3MmJnRoaXMuX2RlcHRoT25seVN1Yk1lc2hlcy5wdXNoKGUpLHRoaXMuX29wYXF1ZVN1Yk1lc2hlcy5wdXNoKGUpKSx0Ll9yZW5kZXJpbmdHcm91cD10aGlzLHQuX2VkZ2VzUmVuZGVyZXImJnQuX2VkZ2VzUmVuZGVyZXIuaXNFbmFibGVkJiZ0aGlzLl9lZGdlc1JlbmRlcmVycy5wdXNoTm9EdXBsaWNhdGUodC5fZWRnZXNSZW5kZXJlciksdGhpcy5fZW1wdHk9ITEpfWRpc3BhdGNoU3ByaXRlcyhlKXt0aGlzLl9zcHJpdGVNYW5hZ2Vycy5wdXNoKGUpLHRoaXMuX2VtcHR5PSExfWRpc3BhdGNoUGFydGljbGVzKGUpe3RoaXMuX3BhcnRpY2xlU3lzdGVtcy5wdXNoKGUpLHRoaXMuX2VtcHR5PSExfV9yZW5kZXJQYXJ0aWNsZXMoZSl7aWYodGhpcy5fcGFydGljbGVTeXN0ZW1zLmxlbmd0aD09PTApcmV0dXJuO2NvbnN0IHQ9dGhpcy5fc2NlbmUuYWN0aXZlQ2FtZXJhO3RoaXMuX3NjZW5lLm9uQmVmb3JlUGFydGljbGVzUmVuZGVyaW5nT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcy5fc2NlbmUpO2ZvcihsZXQgaT0wO2k8dGhpcy5fcGFydGljbGVTeXN0ZW1zLmxlbmd0aDtpKyspe2NvbnN0IHM9dGhpcy5fcGFydGljbGVTeXN0ZW1zLmRhdGFbaV07aWYoKHQmJnQubGF5ZXJNYXNrJnMubGF5ZXJNYXNrKT09PTApY29udGludWU7Y29uc3Qgcj1zLmVtaXR0ZXI7KCFyLnBvc2l0aW9ufHwhZXx8ZS5pbmRleE9mKHIpIT09LTEpJiZ0aGlzLl9zY2VuZS5fYWN0aXZlUGFydGljbGVzLmFkZENvdW50KHMucmVuZGVyKCksITEpfXRoaXMuX3NjZW5lLm9uQWZ0ZXJQYXJ0aWNsZXNSZW5kZXJpbmdPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzLl9zY2VuZSl9X3JlbmRlclNwcml0ZXMoKXtpZighdGhpcy5fc2NlbmUuc3ByaXRlc0VuYWJsZWR8fHRoaXMuX3Nwcml0ZU1hbmFnZXJzLmxlbmd0aD09PTApcmV0dXJuO2NvbnN0IGU9dGhpcy5fc2NlbmUuYWN0aXZlQ2FtZXJhO3RoaXMuX3NjZW5lLm9uQmVmb3JlU3ByaXRlc1JlbmRlcmluZ09ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMuX3NjZW5lKTtmb3IobGV0IHQ9MDt0PHRoaXMuX3Nwcml0ZU1hbmFnZXJzLmxlbmd0aDt0Kyspe2NvbnN0IGk9dGhpcy5fc3ByaXRlTWFuYWdlcnMuZGF0YVt0XTsoZSYmZS5sYXllck1hc2smaS5sYXllck1hc2spIT09MCYmaS5yZW5kZXIoKX10aGlzLl9zY2VuZS5vbkFmdGVyU3ByaXRlc1JlbmRlcmluZ09ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMuX3NjZW5lKX19U3QuX1plcm9WZWN0b3I9cC5aZXJvKCk7Y2xhc3MgeW57fWNsYXNzIFdle2NvbnN0cnVjdG9yKGUpe3RoaXMuX3VzZVNjZW5lQXV0b0NsZWFyU2V0dXA9ITEsdGhpcy5fcmVuZGVyaW5nR3JvdXBzPW5ldyBBcnJheSx0aGlzLl9hdXRvQ2xlYXJEZXB0aFN0ZW5jaWw9e30sdGhpcy5fY3VzdG9tT3BhcXVlU29ydENvbXBhcmVGbj17fSx0aGlzLl9jdXN0b21BbHBoYVRlc3RTb3J0Q29tcGFyZUZuPXt9LHRoaXMuX2N1c3RvbVRyYW5zcGFyZW50U29ydENvbXBhcmVGbj17fSx0aGlzLl9yZW5kZXJpbmdHcm91cEluZm89bmV3IHluLHRoaXMuX21haW50YWluU3RhdGVCZXR3ZWVuRnJhbWVzPSExLHRoaXMuX3NjZW5lPWU7Zm9yKGxldCB0PVdlLk1JTl9SRU5ERVJJTkdHUk9VUFM7dDxXZS5NQVhfUkVOREVSSU5HR1JPVVBTO3QrKyl0aGlzLl9hdXRvQ2xlYXJEZXB0aFN0ZW5jaWxbdF09e2F1dG9DbGVhcjohMCxkZXB0aDohMCxzdGVuY2lsOiEwfX1nZXQgbWFpbnRhaW5TdGF0ZUJldHdlZW5GcmFtZXMoKXtyZXR1cm4gdGhpcy5fbWFpbnRhaW5TdGF0ZUJldHdlZW5GcmFtZXN9c2V0IG1haW50YWluU3RhdGVCZXR3ZWVuRnJhbWVzKGUpe2lmKGUhPT10aGlzLl9tYWludGFpblN0YXRlQmV0d2VlbkZyYW1lcyYmKHRoaXMuX21haW50YWluU3RhdGVCZXR3ZWVuRnJhbWVzPWUsIXRoaXMuX21haW50YWluU3RhdGVCZXR3ZWVuRnJhbWVzKSl7Zm9yKGNvbnN0IHQgb2YgdGhpcy5fc2NlbmUubWVzaGVzKWlmKHQuc3ViTWVzaGVzKWZvcihjb25zdCBpIG9mIHQuc3ViTWVzaGVzKWkuX3dhc0Rpc3BhdGNoZWQ9ITE7Zm9yKGNvbnN0IHQgb2YgdGhpcy5fc2NlbmUuc3ByaXRlTWFuYWdlcnMpdC5fd2FzRGlzcGF0Y2hlZD0hMTtmb3IoY29uc3QgdCBvZiB0aGlzLl9zY2VuZS5wYXJ0aWNsZVN5c3RlbXMpdC5fd2FzRGlzcGF0Y2hlZD0hMX19Z2V0UmVuZGVyaW5nR3JvdXAoZSl7Y29uc3QgdD1lfHwwO3JldHVybiB0aGlzLl9wcmVwYXJlUmVuZGVyaW5nR3JvdXAodCksdGhpcy5fcmVuZGVyaW5nR3JvdXBzW3RdfV9jbGVhckRlcHRoU3RlbmNpbEJ1ZmZlcihlPSEwLHQ9ITApe3RoaXMuX2RlcHRoU3RlbmNpbEJ1ZmZlckFscmVhZHlDbGVhbmVkfHwodGhpcy5fc2NlbmUuZ2V0RW5naW5lKCkuY2xlYXIobnVsbCwhMSxlLHQpLHRoaXMuX2RlcHRoU3RlbmNpbEJ1ZmZlckFscmVhZHlDbGVhbmVkPSEwKX1yZW5kZXIoZSx0LGkscyl7Y29uc3Qgcj10aGlzLl9yZW5kZXJpbmdHcm91cEluZm87aWYoci5zY2VuZT10aGlzLl9zY2VuZSxyLmNhbWVyYT10aGlzLl9zY2VuZS5hY3RpdmVDYW1lcmEsdGhpcy5fc2NlbmUuc3ByaXRlTWFuYWdlcnMmJnMpZm9yKGxldCBuPTA7bjx0aGlzLl9zY2VuZS5zcHJpdGVNYW5hZ2Vycy5sZW5ndGg7bisrKXtjb25zdCBhPXRoaXMuX3NjZW5lLnNwcml0ZU1hbmFnZXJzW25dO3RoaXMuZGlzcGF0Y2hTcHJpdGVzKGEpfWZvcihsZXQgbj1XZS5NSU5fUkVOREVSSU5HR1JPVVBTO248V2UuTUFYX1JFTkRFUklOR0dST1VQUztuKyspe3RoaXMuX2RlcHRoU3RlbmNpbEJ1ZmZlckFscmVhZHlDbGVhbmVkPW49PT1XZS5NSU5fUkVOREVSSU5HR1JPVVBTO2NvbnN0IGE9dGhpcy5fcmVuZGVyaW5nR3JvdXBzW25dO2lmKCFhfHxhLl9lbXB0eSljb250aW51ZTtjb25zdCBvPU1hdGgucG93KDIsbik7aWYoci5yZW5kZXJpbmdHcm91cElkPW4sdGhpcy5fc2NlbmUub25CZWZvcmVSZW5kZXJpbmdHcm91cE9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHIsbyksV2UuQVVUT0NMRUFSKXtjb25zdCBoPXRoaXMuX3VzZVNjZW5lQXV0b0NsZWFyU2V0dXA/dGhpcy5fc2NlbmUuZ2V0QXV0b0NsZWFyRGVwdGhTdGVuY2lsU2V0dXAobik6dGhpcy5fYXV0b0NsZWFyRGVwdGhTdGVuY2lsW25dO2gmJmguYXV0b0NsZWFyJiZ0aGlzLl9jbGVhckRlcHRoU3RlbmNpbEJ1ZmZlcihoLmRlcHRoLGguc3RlbmNpbCl9Zm9yKGNvbnN0IGggb2YgdGhpcy5fc2NlbmUuX2JlZm9yZVJlbmRlcmluZ0dyb3VwRHJhd1N0YWdlKWguYWN0aW9uKG4pO2EucmVuZGVyKGUscyxpLHQpO2Zvcihjb25zdCBoIG9mIHRoaXMuX3NjZW5lLl9hZnRlclJlbmRlcmluZ0dyb3VwRHJhd1N0YWdlKWguYWN0aW9uKG4pO3RoaXMuX3NjZW5lLm9uQWZ0ZXJSZW5kZXJpbmdHcm91cE9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHIsbyl9fXJlc2V0KCl7aWYoIXRoaXMubWFpbnRhaW5TdGF0ZUJldHdlZW5GcmFtZXMpZm9yKGxldCBlPVdlLk1JTl9SRU5ERVJJTkdHUk9VUFM7ZTxXZS5NQVhfUkVOREVSSU5HR1JPVVBTO2UrKyl7Y29uc3QgdD10aGlzLl9yZW5kZXJpbmdHcm91cHNbZV07dCYmdC5wcmVwYXJlKCl9fXJlc2V0U3ByaXRlcygpe2lmKCF0aGlzLm1haW50YWluU3RhdGVCZXR3ZWVuRnJhbWVzKWZvcihsZXQgZT1XZS5NSU5fUkVOREVSSU5HR1JPVVBTO2U8V2UuTUFYX1JFTkRFUklOR0dST1VQUztlKyspe2NvbnN0IHQ9dGhpcy5fcmVuZGVyaW5nR3JvdXBzW2VdO3QmJnQucHJlcGFyZVNwcml0ZXMoKX19ZGlzcG9zZSgpe3RoaXMuZnJlZVJlbmRlcmluZ0dyb3VwcygpLHRoaXMuX3JlbmRlcmluZ0dyb3Vwcy5sZW5ndGg9MCx0aGlzLl9yZW5kZXJpbmdHcm91cEluZm89bnVsbH1mcmVlUmVuZGVyaW5nR3JvdXBzKCl7Zm9yKGxldCBlPVdlLk1JTl9SRU5ERVJJTkdHUk9VUFM7ZTxXZS5NQVhfUkVOREVSSU5HR1JPVVBTO2UrKyl7Y29uc3QgdD10aGlzLl9yZW5kZXJpbmdHcm91cHNbZV07dCYmdC5kaXNwb3NlKCl9fV9wcmVwYXJlUmVuZGVyaW5nR3JvdXAoZSl7dGhpcy5fcmVuZGVyaW5nR3JvdXBzW2VdPT09dm9pZCAwJiYodGhpcy5fcmVuZGVyaW5nR3JvdXBzW2VdPW5ldyBTdChlLHRoaXMuX3NjZW5lLHRoaXMuX2N1c3RvbU9wYXF1ZVNvcnRDb21wYXJlRm5bZV0sdGhpcy5fY3VzdG9tQWxwaGFUZXN0U29ydENvbXBhcmVGbltlXSx0aGlzLl9jdXN0b21UcmFuc3BhcmVudFNvcnRDb21wYXJlRm5bZV0pKX1kaXNwYXRjaFNwcml0ZXMoZSl7dGhpcy5tYWludGFpblN0YXRlQmV0d2VlbkZyYW1lcyYmZS5fd2FzRGlzcGF0Y2hlZHx8KGUuX3dhc0Rpc3BhdGNoZWQ9ITAsdGhpcy5nZXRSZW5kZXJpbmdHcm91cChlLnJlbmRlcmluZ0dyb3VwSWQpLmRpc3BhdGNoU3ByaXRlcyhlKSl9ZGlzcGF0Y2hQYXJ0aWNsZXMoZSl7dGhpcy5tYWludGFpblN0YXRlQmV0d2VlbkZyYW1lcyYmZS5fd2FzRGlzcGF0Y2hlZHx8KGUuX3dhc0Rpc3BhdGNoZWQ9ITAsdGhpcy5nZXRSZW5kZXJpbmdHcm91cChlLnJlbmRlcmluZ0dyb3VwSWQpLmRpc3BhdGNoUGFydGljbGVzKGUpKX1kaXNwYXRjaChlLHQsaSl7dD09PXZvaWQgMCYmKHQ9ZS5nZXRNZXNoKCkpLCEodGhpcy5tYWludGFpblN0YXRlQmV0d2VlbkZyYW1lcyYmZS5fd2FzRGlzcGF0Y2hlZCkmJihlLl93YXNEaXNwYXRjaGVkPSEwLHRoaXMuZ2V0UmVuZGVyaW5nR3JvdXAodC5yZW5kZXJpbmdHcm91cElkKS5kaXNwYXRjaChlLHQsaSkpfXNldFJlbmRlcmluZ09yZGVyKGUsdD1udWxsLGk9bnVsbCxzPW51bGwpe2lmKHRoaXMuX2N1c3RvbU9wYXF1ZVNvcnRDb21wYXJlRm5bZV09dCx0aGlzLl9jdXN0b21BbHBoYVRlc3RTb3J0Q29tcGFyZUZuW2VdPWksdGhpcy5fY3VzdG9tVHJhbnNwYXJlbnRTb3J0Q29tcGFyZUZuW2VdPXMsdGhpcy5fcmVuZGVyaW5nR3JvdXBzW2VdKXtjb25zdCByPXRoaXMuX3JlbmRlcmluZ0dyb3Vwc1tlXTtyLm9wYXF1ZVNvcnRDb21wYXJlRm49dGhpcy5fY3VzdG9tT3BhcXVlU29ydENvbXBhcmVGbltlXSxyLmFscGhhVGVzdFNvcnRDb21wYXJlRm49dGhpcy5fY3VzdG9tQWxwaGFUZXN0U29ydENvbXBhcmVGbltlXSxyLnRyYW5zcGFyZW50U29ydENvbXBhcmVGbj10aGlzLl9jdXN0b21UcmFuc3BhcmVudFNvcnRDb21wYXJlRm5bZV19fXNldFJlbmRlcmluZ0F1dG9DbGVhckRlcHRoU3RlbmNpbChlLHQsaT0hMCxzPSEwKXt0aGlzLl9hdXRvQ2xlYXJEZXB0aFN0ZW5jaWxbZV09e2F1dG9DbGVhcjp0LGRlcHRoOmksc3RlbmNpbDpzfX1nZXRBdXRvQ2xlYXJEZXB0aFN0ZW5jaWxTZXR1cChlKXtyZXR1cm4gdGhpcy5fYXV0b0NsZWFyRGVwdGhTdGVuY2lsW2VdfX1XZS5NQVhfUkVOREVSSU5HR1JPVVBTPTQsV2UuTUlOX1JFTkRFUklOR0dST1VQUz0wLFdlLkFVVE9DTEVBUj0hMDtjbGFzcyBxe31xLk5BTUVfRUZGRUNUTEFZRVI9IkVmZmVjdExheWVyIixxLk5BTUVfTEFZRVI9IkxheWVyIixxLk5BTUVfTEVOU0ZMQVJFU1lTVEVNPSJMZW5zRmxhcmVTeXN0ZW0iLHEuTkFNRV9CT1VORElOR0JPWFJFTkRFUkVSPSJCb3VuZGluZ0JveFJlbmRlcmVyIixxLk5BTUVfUEFSVElDTEVTWVNURU09IlBhcnRpY2xlU3lzdGVtIixxLk5BTUVfR0FNRVBBRD0iR2FtZXBhZCIscS5OQU1FX1NJTVBMSUZJQ0FUSU9OUVVFVUU9IlNpbXBsaWZpY2F0aW9uUXVldWUiLHEuTkFNRV9HRU9NRVRSWUJVRkZFUlJFTkRFUkVSPSJHZW9tZXRyeUJ1ZmZlclJlbmRlcmVyIixxLk5BTUVfUFJFUEFTU1JFTkRFUkVSPSJQcmVQYXNzUmVuZGVyZXIiLHEuTkFNRV9ERVBUSFJFTkRFUkVSPSJEZXB0aFJlbmRlcmVyIixxLk5BTUVfREVQVEhQRUVMSU5HUkVOREVSRVI9IkRlcHRoUGVlbGluZ1JlbmRlcmVyIixxLk5BTUVfUE9TVFBST0NFU1NSRU5ERVJQSVBFTElORU1BTkFHRVI9IlBvc3RQcm9jZXNzUmVuZGVyUGlwZWxpbmVNYW5hZ2VyIixxLk5BTUVfU1BSSVRFPSJTcHJpdGUiLHEuTkFNRV9TVUJTVVJGQUNFPSJTdWJTdXJmYWNlIixxLk5BTUVfT1VUTElORVJFTkRFUkVSPSJPdXRsaW5lIixxLk5BTUVfUFJPQ0VEVVJBTFRFWFRVUkU9IlByb2NlZHVyYWxUZXh0dXJlIixxLk5BTUVfU0hBRE9XR0VORVJBVE9SPSJTaGFkb3dHZW5lcmF0b3IiLHEuTkFNRV9PQ1RSRUU9Ik9jdHJlZSIscS5OQU1FX1BIWVNJQ1NFTkdJTkU9IlBoeXNpY3NFbmdpbmUiLHEuTkFNRV9BVURJTz0iQXVkaW8iLHEuTkFNRV9GTFVJRFJFTkRFUkVSPSJGbHVpZFJlbmRlcmVyIixxLlNURVBfSVNSRUFEWUZPUk1FU0hfRUZGRUNUTEFZRVI9MCxxLlNURVBfQkVGT1JFRVZBTFVBVEVBQ1RJVkVNRVNIX0JPVU5ESU5HQk9YUkVOREVSRVI9MCxxLlNURVBfRVZBTFVBVEVTVUJNRVNIX0JPVU5ESU5HQk9YUkVOREVSRVI9MCxxLlNURVBfUFJFQUNUSVZFTUVTSF9CT1VORElOR0JPWFJFTkRFUkVSPTAscS5TVEVQX0NBTUVSQURSQVdSRU5ERVJUQVJHRVRfRUZGRUNUTEFZRVI9MSxxLlNURVBfQkVGT1JFQ0FNRVJBRFJBV19QUkVQQVNTPTAscS5TVEVQX0JFRk9SRUNBTUVSQURSQVdfRUZGRUNUTEFZRVI9MSxxLlNURVBfQkVGT1JFQ0FNRVJBRFJBV19MQVlFUj0yLHEuU1RFUF9CRUZPUkVSRU5ERVJUQVJHRVREUkFXX1BSRVBBU1M9MCxxLlNURVBfQkVGT1JFUkVOREVSVEFSR0VURFJBV19MQVlFUj0xLHEuU1RFUF9CRUZPUkVSRU5ERVJJTkdNRVNIX1BSRVBBU1M9MCxxLlNURVBfQkVGT1JFUkVOREVSSU5HTUVTSF9PVVRMSU5FPTEscS5TVEVQX0FGVEVSUkVOREVSSU5HTUVTSF9QUkVQQVNTPTAscS5TVEVQX0FGVEVSUkVOREVSSU5HTUVTSF9PVVRMSU5FPTEscS5TVEVQX0FGVEVSUkVOREVSSU5HR1JPVVBEUkFXX0VGRkVDVExBWUVSX0RSQVc9MCxxLlNURVBfQUZURVJSRU5ERVJJTkdHUk9VUERSQVdfQk9VTkRJTkdCT1hSRU5ERVJFUj0xLHEuU1RFUF9CRUZPUkVDQU1FUkFVUERBVEVfU0lNUExJRklDQVRJT05RVUVVRT0wLHEuU1RFUF9CRUZPUkVDQU1FUkFVUERBVEVfR0FNRVBBRD0xLHEuU1RFUF9CRUZPUkVDTEVBUl9QUk9DRURVUkFMVEVYVFVSRT0wLHEuU1RFUF9CRUZPUkVDTEVBUl9QUkVQQVNTPTEscS5TVEVQX0JFRk9SRVJFTkRFUlRBUkdFVENMRUFSX1BSRVBBU1M9MCxxLlNURVBfQUZURVJSRU5ERVJUQVJHRVREUkFXX1BSRVBBU1M9MCxxLlNURVBfQUZURVJSRU5ERVJUQVJHRVREUkFXX0xBWUVSPTEscS5TVEVQX0FGVEVSQ0FNRVJBRFJBV19QUkVQQVNTPTAscS5TVEVQX0FGVEVSQ0FNRVJBRFJBV19FRkZFQ1RMQVlFUj0xLHEuU1RFUF9BRlRFUkNBTUVSQURSQVdfTEVOU0ZMQVJFU1lTVEVNPTIscS5TVEVQX0FGVEVSQ0FNRVJBRFJBV19FRkZFQ1RMQVlFUl9EUkFXPTMscS5TVEVQX0FGVEVSQ0FNRVJBRFJBV19MQVlFUj00LHEuU1RFUF9BRlRFUkNBTUVSQURSQVdfRkxVSURSRU5ERVJFUj01LHEuU1RFUF9BRlRFUkNBTUVSQVBPU1RQUk9DRVNTX0xBWUVSPTAscS5TVEVQX0FGVEVSUkVOREVSVEFSR0VUUE9TVFBST0NFU1NfTEFZRVI9MCxxLlNURVBfQUZURVJSRU5ERVJfQVVESU89MCxxLlNURVBfR0FUSEVSUkVOREVSVEFSR0VUU19ERVBUSFJFTkRFUkVSPTAscS5TVEVQX0dBVEhFUlJFTkRFUlRBUkdFVFNfR0VPTUVUUllCVUZGRVJSRU5ERVJFUj0xLHEuU1RFUF9HQVRIRVJSRU5ERVJUQVJHRVRTX1NIQURPV0dFTkVSQVRPUj0yLHEuU1RFUF9HQVRIRVJSRU5ERVJUQVJHRVRTX1BPU1RQUk9DRVNTUkVOREVSUElQRUxJTkVNQU5BR0VSPTMscS5TVEVQX0dBVEhFUkFDVElWRUNBTUVSQVJFTkRFUlRBUkdFVFNfREVQVEhSRU5ERVJFUj0wLHEuU1RFUF9HQVRIRVJBQ1RJVkVDQU1FUkFSRU5ERVJUQVJHRVRTX0ZMVUlEUkVOREVSRVI9MSxxLlNURVBfUE9JTlRFUk1PVkVfU1BSSVRFPTAscS5TVEVQX1BPSU5URVJET1dOX1NQUklURT0wLHEuU1RFUF9QT0lOVEVSVVBfU1BSSVRFPTA7Y2xhc3MgSWUgZXh0ZW5kcyBBcnJheXtjb25zdHJ1Y3RvcihlKXtzdXBlciguLi5lKX1zdGF0aWMgQ3JlYXRlKCl7cmV0dXJuIE9iamVjdC5jcmVhdGUoSWUucHJvdG90eXBlKX1yZWdpc3RlclN0ZXAoZSx0LGkpe2xldCBzPTAscj1OdW1iZXIuTUFYX1ZBTFVFO2Zvcig7czx0aGlzLmxlbmd0aCYmKHI9dGhpc1tzXS5pbmRleCwhKGU8cikpO3MrKyk7dGhpcy5zcGxpY2UocywwLHtpbmRleDplLGNvbXBvbmVudDp0LGFjdGlvbjppLmJpbmQodCl9KX1jbGVhcigpe3RoaXMubGVuZ3RoPTB9fWNsYXNzIFRle31UZS5QT0lOVEVSRE9XTj0xLFRlLlBPSU5URVJVUD0yLFRlLlBPSU5URVJNT1ZFPTQsVGUuUE9JTlRFUldIRUVMPTgsVGUuUE9JTlRFUlBJQ0s9MTYsVGUuUE9JTlRFUlRBUD0zMixUZS5QT0lOVEVSRE9VQkxFVEFQPTY0O2NsYXNzIGZye2NvbnN0cnVjdG9yKGUsdCl7dGhpcy50eXBlPWUsdGhpcy5ldmVudD10fX1jbGFzcyBDbiBleHRlbmRzIGZye2NvbnN0cnVjdG9yKGUsdCxpLHMpe3N1cGVyKGUsdCksdGhpcy5yYXk9bnVsbCx0aGlzLm9yaWdpbmFsUGlja2luZ0luZm89bnVsbCx0aGlzLnNraXBPblBvaW50ZXJPYnNlcnZhYmxlPSExLHRoaXMubG9jYWxQb3NpdGlvbj1uZXcgdmUoaSxzKX19Y2xhc3MgdWkgZXh0ZW5kcyBmcntjb25zdHJ1Y3RvcihlLHQsaSxzPW51bGwpe3N1cGVyKGUsdCksdGhpcy5fcGlja0luZm89aSx0aGlzLl9pbnB1dE1hbmFnZXI9c31nZXQgcGlja0luZm8oKXtyZXR1cm4gdGhpcy5fcGlja0luZm98fHRoaXMuX2dlbmVyYXRlUGlja0luZm8oKSx0aGlzLl9waWNrSW5mb31fZ2VuZXJhdGVQaWNrSW5mbygpe3RoaXMuX2lucHV0TWFuYWdlciYmKHRoaXMuX3BpY2tJbmZvPXRoaXMuX2lucHV0TWFuYWdlci5fcGlja01vdmUodGhpcy5ldmVudC5wb2ludGVySWQpLHRoaXMuX2lucHV0TWFuYWdlci5fc2V0UmF5T25Qb2ludGVySW5mbyh0aGlzLl9waWNrSW5mbyx0aGlzLmV2ZW50KSx0aGlzLl9pbnB1dE1hbmFnZXI9bnVsbCl9fWNsYXNzIHV0e2NvbnN0cnVjdG9yKCl7dGhpcy5ob3ZlckN1cnNvcj0iIix0aGlzLmFjdGlvbnM9bmV3IEFycmF5LHRoaXMuaXNSZWN1cnNpdmU9ITF9c3RhdGljIGdldCBIYXNUcmlnZ2Vycygpe2Zvcihjb25zdCBlIGluIHV0LlRyaWdnZXJzKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh1dC5UcmlnZ2VycyxlKSlyZXR1cm4hMDtyZXR1cm4hMX1zdGF0aWMgZ2V0IEhhc1BpY2tUcmlnZ2Vycygpe2Zvcihjb25zdCBlIGluIHV0LlRyaWdnZXJzKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh1dC5UcmlnZ2VycyxlKSl7Y29uc3QgdD1wYXJzZUludChlKTtpZih0Pj0xJiZ0PD03KXJldHVybiEwfXJldHVybiExfXN0YXRpYyBIYXNTcGVjaWZpY1RyaWdnZXIoZSl7Zm9yKGNvbnN0IHQgaW4gdXQuVHJpZ2dlcnMpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHV0LlRyaWdnZXJzLHQpJiZwYXJzZUludCh0KT09PWUpcmV0dXJuITA7cmV0dXJuITF9fXV0LlRyaWdnZXJzPXt9O2NsYXNzIEppe31KaS5LRVlET1dOPTEsSmkuS0VZVVA9MjtjbGFzcyBDc3tjb25zdHJ1Y3RvcihlLHQpe3RoaXMudHlwZT1lLHRoaXMuZXZlbnQ9dH19Y2xhc3MgX3IgZXh0ZW5kcyBDc3tjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKGUsdCksdGhpcy50eXBlPWUsdGhpcy5ldmVudD10LHRoaXMuc2tpcE9uS2V5Ym9hcmRPYnNlcnZhYmxlPSExfWdldCBza2lwT25Qb2ludGVyT2JzZXJ2YWJsZSgpe3JldHVybiB0aGlzLnNraXBPbktleWJvYXJkT2JzZXJ2YWJsZX1zZXQgc2tpcE9uUG9pbnRlck9ic2VydmFibGUoZSl7dGhpcy5za2lwT25LZXlib2FyZE9ic2VydmFibGU9ZX19dmFyIHo7KGZ1bmN0aW9uKGMpe2NbYy5HZW5lcmljPTBdPSJHZW5lcmljIixjW2MuS2V5Ym9hcmQ9MV09IktleWJvYXJkIixjW2MuTW91c2U9Ml09Ik1vdXNlIixjW2MuVG91Y2g9M109IlRvdWNoIixjW2MuRHVhbFNob2NrPTRdPSJEdWFsU2hvY2siLGNbYy5YYm94PTVdPSJYYm94IixjW2MuU3dpdGNoPTZdPSJTd2l0Y2giLGNbYy5EdWFsU2Vuc2U9N109IkR1YWxTZW5zZSJ9KSh6fHwoej17fSkpO3ZhciBROyhmdW5jdGlvbihjKXtjW2MuSG9yaXpvbnRhbD0wXT0iSG9yaXpvbnRhbCIsY1tjLlZlcnRpY2FsPTFdPSJWZXJ0aWNhbCIsY1tjLkxlZnRDbGljaz0yXT0iTGVmdENsaWNrIixjW2MuTWlkZGxlQ2xpY2s9M109Ik1pZGRsZUNsaWNrIixjW2MuUmlnaHRDbGljaz00XT0iUmlnaHRDbGljayIsY1tjLkJyb3dzZXJCYWNrPTVdPSJCcm93c2VyQmFjayIsY1tjLkJyb3dzZXJGb3J3YXJkPTZdPSJCcm93c2VyRm9yd2FyZCIsY1tjLk1vdXNlV2hlZWxYPTddPSJNb3VzZVdoZWVsWCIsY1tjLk1vdXNlV2hlZWxZPThdPSJNb3VzZVdoZWVsWSIsY1tjLk1vdXNlV2hlZWxaPTldPSJNb3VzZVdoZWVsWiIsY1tjLk1vdmU9MTJdPSJNb3ZlIn0pKFF8fChRPXt9KSk7dmFyIGVzOyhmdW5jdGlvbihjKXtjW2MuSG9yaXpvbnRhbD0wXT0iSG9yaXpvbnRhbCIsY1tjLlZlcnRpY2FsPTFdPSJWZXJ0aWNhbCIsY1tjLkxlZnRDbGljaz0yXT0iTGVmdENsaWNrIixjW2MuTWlkZGxlQ2xpY2s9M109Ik1pZGRsZUNsaWNrIixjW2MuUmlnaHRDbGljaz00XT0iUmlnaHRDbGljayIsY1tjLkJyb3dzZXJCYWNrPTVdPSJCcm93c2VyQmFjayIsY1tjLkJyb3dzZXJGb3J3YXJkPTZdPSJCcm93c2VyRm9yd2FyZCIsY1tjLk1vdXNlV2hlZWxYPTddPSJNb3VzZVdoZWVsWCIsY1tjLk1vdXNlV2hlZWxZPThdPSJNb3VzZVdoZWVsWSIsY1tjLk1vdXNlV2hlZWxaPTldPSJNb3VzZVdoZWVsWiIsY1tjLkRlbHRhSG9yaXpvbnRhbD0xMF09IkRlbHRhSG9yaXpvbnRhbCIsY1tjLkRlbHRhVmVydGljYWw9MTFdPSJEZWx0YVZlcnRpY2FsIn0pKGVzfHwoZXM9e30pKTt2YXIgZ3I7KGZ1bmN0aW9uKGMpe2NbYy5Dcm9zcz0wXT0iQ3Jvc3MiLGNbYy5DaXJjbGU9MV09IkNpcmNsZSIsY1tjLlNxdWFyZT0yXT0iU3F1YXJlIixjW2MuVHJpYW5nbGU9M109IlRyaWFuZ2xlIixjW2MuTDE9NF09IkwxIixjW2MuUjE9NV09IlIxIixjW2MuTDI9Nl09IkwyIixjW2MuUjI9N109IlIyIixjW2MuU2hhcmU9OF09IlNoYXJlIixjW2MuT3B0aW9ucz05XT0iT3B0aW9ucyIsY1tjLkwzPTEwXT0iTDMiLGNbYy5SMz0xMV09IlIzIixjW2MuRFBhZFVwPTEyXT0iRFBhZFVwIixjW2MuRFBhZERvd249MTNdPSJEUGFkRG93biIsY1tjLkRQYWRMZWZ0PTE0XT0iRFBhZExlZnQiLGNbYy5EUGFkUmlnaHQ9MTVdPSJEUGFkUmlnaHQiLGNbYy5Ib21lPTE2XT0iSG9tZSIsY1tjLlRvdWNoUGFkPTE3XT0iVG91Y2hQYWQiLGNbYy5MU3RpY2tYQXhpcz0xOF09IkxTdGlja1hBeGlzIixjW2MuTFN0aWNrWUF4aXM9MTldPSJMU3RpY2tZQXhpcyIsY1tjLlJTdGlja1hBeGlzPTIwXT0iUlN0aWNrWEF4aXMiLGNbYy5SU3RpY2tZQXhpcz0yMV09IlJTdGlja1lBeGlzIn0pKGdyfHwoZ3I9e30pKTt2YXIgcHI7KGZ1bmN0aW9uKGMpe2NbYy5Dcm9zcz0wXT0iQ3Jvc3MiLGNbYy5DaXJjbGU9MV09IkNpcmNsZSIsY1tjLlNxdWFyZT0yXT0iU3F1YXJlIixjW2MuVHJpYW5nbGU9M109IlRyaWFuZ2xlIixjW2MuTDE9NF09IkwxIixjW2MuUjE9NV09IlIxIixjW2MuTDI9Nl09IkwyIixjW2MuUjI9N109IlIyIixjW2MuQ3JlYXRlPThdPSJDcmVhdGUiLGNbYy5PcHRpb25zPTldPSJPcHRpb25zIixjW2MuTDM9MTBdPSJMMyIsY1tjLlIzPTExXT0iUjMiLGNbYy5EUGFkVXA9MTJdPSJEUGFkVXAiLGNbYy5EUGFkRG93bj0xM109IkRQYWREb3duIixjW2MuRFBhZExlZnQ9MTRdPSJEUGFkTGVmdCIsY1tjLkRQYWRSaWdodD0xNV09IkRQYWRSaWdodCIsY1tjLkhvbWU9MTZdPSJIb21lIixjW2MuVG91Y2hQYWQ9MTddPSJUb3VjaFBhZCIsY1tjLkxTdGlja1hBeGlzPTE4XT0iTFN0aWNrWEF4aXMiLGNbYy5MU3RpY2tZQXhpcz0xOV09IkxTdGlja1lBeGlzIixjW2MuUlN0aWNrWEF4aXM9MjBdPSJSU3RpY2tYQXhpcyIsY1tjLlJTdGlja1lBeGlzPTIxXT0iUlN0aWNrWUF4aXMifSkocHJ8fChwcj17fSkpO3ZhciBtcjsoZnVuY3Rpb24oYyl7Y1tjLkE9MF09IkEiLGNbYy5CPTFdPSJCIixjW2MuWD0yXT0iWCIsY1tjLlk9M109IlkiLGNbYy5MQj00XT0iTEIiLGNbYy5SQj01XT0iUkIiLGNbYy5MVD02XT0iTFQiLGNbYy5SVD03XT0iUlQiLGNbYy5CYWNrPThdPSJCYWNrIixjW2MuU3RhcnQ9OV09IlN0YXJ0IixjW2MuTFM9MTBdPSJMUyIsY1tjLlJTPTExXT0iUlMiLGNbYy5EUGFkVXA9MTJdPSJEUGFkVXAiLGNbYy5EUGFkRG93bj0xM109IkRQYWREb3duIixjW2MuRFBhZExlZnQ9MTRdPSJEUGFkTGVmdCIsY1tjLkRQYWRSaWdodD0xNV09IkRQYWRSaWdodCIsY1tjLkhvbWU9MTZdPSJIb21lIixjW2MuTFN0aWNrWEF4aXM9MTddPSJMU3RpY2tYQXhpcyIsY1tjLkxTdGlja1lBeGlzPTE4XT0iTFN0aWNrWUF4aXMiLGNbYy5SU3RpY2tYQXhpcz0xOV09IlJTdGlja1hBeGlzIixjW2MuUlN0aWNrWUF4aXM9MjBdPSJSU3RpY2tZQXhpcyJ9KShtcnx8KG1yPXt9KSk7dmFyIEVyOyhmdW5jdGlvbihjKXtjW2MuQj0wXT0iQiIsY1tjLkE9MV09IkEiLGNbYy5ZPTJdPSJZIixjW2MuWD0zXT0iWCIsY1tjLkw9NF09IkwiLGNbYy5SPTVdPSJSIixjW2MuWkw9Nl09IlpMIixjW2MuWlI9N109IlpSIixjW2MuTWludXM9OF09Ik1pbnVzIixjW2MuUGx1cz05XT0iUGx1cyIsY1tjLkxTPTEwXT0iTFMiLGNbYy5SUz0xMV09IlJTIixjW2MuRFBhZFVwPTEyXT0iRFBhZFVwIixjW2MuRFBhZERvd249MTNdPSJEUGFkRG93biIsY1tjLkRQYWRMZWZ0PTE0XT0iRFBhZExlZnQiLGNbYy5EUGFkUmlnaHQ9MTVdPSJEUGFkUmlnaHQiLGNbYy5Ib21lPTE2XT0iSG9tZSIsY1tjLkNhcHR1cmU9MTddPSJDYXB0dXJlIixjW2MuTFN0aWNrWEF4aXM9MThdPSJMU3RpY2tYQXhpcyIsY1tjLkxTdGlja1lBeGlzPTE5XT0iTFN0aWNrWUF4aXMiLGNbYy5SU3RpY2tYQXhpcz0yMF09IlJTdGlja1hBeGlzIixjW2MuUlN0aWNrWUF4aXM9MjFdPSJSU3RpY2tZQXhpcyJ9KShFcnx8KEVyPXt9KSk7dmFyIHZyOyhmdW5jdGlvbihjKXtjW2MuUG9pbnRlck1vdmU9MF09IlBvaW50ZXJNb3ZlIixjW2MuUG9pbnRlckRvd249MV09IlBvaW50ZXJEb3duIixjW2MuUG9pbnRlclVwPTJdPSJQb2ludGVyVXAifSkodnJ8fCh2cj17fSkpO2NsYXNzIHRze310cy5ET01fREVMVEFfUElYRUw9MCx0cy5ET01fREVMVEFfTElORT0xLHRzLkRPTV9ERUxUQV9QQUdFPTI7Y2xhc3MgZGl7c3RhdGljIENyZWF0ZURldmljZUV2ZW50KGUsdCxpLHMscixuKXtzd2l0Y2goZSl7Y2FzZSB6LktleWJvYXJkOnJldHVybiB0aGlzLl9DcmVhdGVLZXlib2FyZEV2ZW50KGkscyxyLG4pO2Nhc2Ugei5Nb3VzZTppZihpPT09US5Nb3VzZVdoZWVsWHx8aT09PVEuTW91c2VXaGVlbFl8fGk9PT1RLk1vdXNlV2hlZWxaKXJldHVybiB0aGlzLl9DcmVhdGVXaGVlbEV2ZW50KGUsdCxpLHMscixuKTtjYXNlIHouVG91Y2g6cmV0dXJuIHRoaXMuX0NyZWF0ZVBvaW50ZXJFdmVudChlLHQsaSxzLHIsbik7ZGVmYXVsdDp0aHJvd2BVbmFibGUgdG8gZ2VuZXJhdGUgZXZlbnQgZm9yIGRldmljZSAke3pbZV19YH19c3RhdGljIF9DcmVhdGVQb2ludGVyRXZlbnQoZSx0LGkscyxyLG4pe2NvbnN0IGE9dGhpcy5fQ3JlYXRlTW91c2VFdmVudChlLHQsaSxzLHIsbik7cmV0dXJuIGU9PT16Lk1vdXNlPyhhLmRldmljZVR5cGU9ei5Nb3VzZSxhLnBvaW50ZXJJZD0xLGEucG9pbnRlclR5cGU9Im1vdXNlIik6KGEuZGV2aWNlVHlwZT16LlRvdWNoLGEucG9pbnRlcklkPXQsYS5wb2ludGVyVHlwZT0idG91Y2giKSxpPT09US5Nb3ZlP2EudHlwZT0icG9pbnRlcm1vdmUiOmk+PVEuTGVmdENsaWNrJiZpPD1RLlJpZ2h0Q2xpY2smJihhLnR5cGU9cz09PTE/InBvaW50ZXJkb3duIjoicG9pbnRlcnVwIixhLmJ1dHRvbj1pLTIpLGF9c3RhdGljIF9DcmVhdGVXaGVlbEV2ZW50KGUsdCxpLHMscixuKXtjb25zdCBhPXRoaXMuX0NyZWF0ZU1vdXNlRXZlbnQoZSx0LGkscyxyLG4pO3N3aXRjaChhLnR5cGU9IndoZWVsIixhLmRlbHRhTW9kZT10cy5ET01fREVMVEFfUElYRUwsYS5kZWx0YVg9MCxhLmRlbHRhWT0wLGEuZGVsdGFaPTAsaSl7Y2FzZSBRLk1vdXNlV2hlZWxYOmEuZGVsdGFYPXM7YnJlYWs7Y2FzZSBRLk1vdXNlV2hlZWxZOmEuZGVsdGFZPXM7YnJlYWs7Y2FzZSBRLk1vdXNlV2hlZWxaOmEuZGVsdGFaPXM7YnJlYWt9cmV0dXJuIGF9c3RhdGljIF9DcmVhdGVNb3VzZUV2ZW50KGUsdCxpLHMscixuKXtjb25zdCBhPXRoaXMuX0NyZWF0ZUV2ZW50KG4pLG89ci5wb2xsSW5wdXQoZSx0LFEuSG9yaXpvbnRhbCksaD1yLnBvbGxJbnB1dChlLHQsUS5WZXJ0aWNhbCk7cmV0dXJuIG4/KGEubW92ZW1lbnRYPTAsYS5tb3ZlbWVudFk9MCxhLm9mZnNldFg9YS5tb3ZlbWVudFgtbi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS54LGEub2Zmc2V0WT1hLm1vdmVtZW50WS1uLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnkpOihhLm1vdmVtZW50WD1yLnBvbGxJbnB1dChlLHQsZXMuRGVsdGFIb3Jpem9udGFsKSxhLm1vdmVtZW50WT1yLnBvbGxJbnB1dChlLHQsZXMuRGVsdGFWZXJ0aWNhbCksYS5vZmZzZXRYPTAsYS5vZmZzZXRZPTApLHRoaXMuX0NoZWNrTm9uQ2hhcmFjdGVyS2V5cyhhLHIpLGEuY2xpZW50WD1vLGEuY2xpZW50WT1oLGEueD1vLGEueT1oLGEuZGV2aWNlVHlwZT1lLGEuZGV2aWNlU2xvdD10LGEuaW5wdXRJbmRleD1pLGF9c3RhdGljIF9DcmVhdGVLZXlib2FyZEV2ZW50KGUsdCxpLHMpe2NvbnN0IHI9dGhpcy5fQ3JlYXRlRXZlbnQocyk7cmV0dXJuIHRoaXMuX0NoZWNrTm9uQ2hhcmFjdGVyS2V5cyhyLGkpLHIuZGV2aWNlVHlwZT16LktleWJvYXJkLHIuZGV2aWNlU2xvdD0wLHIuaW5wdXRJbmRleD1lLHIudHlwZT10PT09MT8ia2V5ZG93biI6ImtleXVwIixyLmtleT1TdHJpbmcuZnJvbUNoYXJDb2RlKGUpLHIua2V5Q29kZT1lLHJ9c3RhdGljIF9DaGVja05vbkNoYXJhY3RlcktleXMoZSx0KXtjb25zdCBpPXQuaXNEZXZpY2VBdmFpbGFibGUoei5LZXlib2FyZCkscz1pJiZ0LnBvbGxJbnB1dCh6LktleWJvYXJkLDAsMTgpPT09MSxyPWkmJnQucG9sbElucHV0KHouS2V5Ym9hcmQsMCwxNyk9PT0xLG49aSYmKHQucG9sbElucHV0KHouS2V5Ym9hcmQsMCw5MSk9PT0xfHx0LnBvbGxJbnB1dCh6LktleWJvYXJkLDAsOTIpPT09MXx8dC5wb2xsSW5wdXQoei5LZXlib2FyZCwwLDkzKT09PTEpLGE9aSYmdC5wb2xsSW5wdXQoei5LZXlib2FyZCwwLDE2KT09PTE7ZS5hbHRLZXk9cyxlLmN0cmxLZXk9cixlLm1ldGFLZXk9bixlLnNoaWZ0S2V5PWF9c3RhdGljIF9DcmVhdGVFdmVudChlKXtjb25zdCB0PXt9O3JldHVybiB0LnByZXZlbnREZWZhdWx0PSgpPT57fSx0LnRhcmdldD1lLHR9fWNsYXNzIElue2NvbnN0cnVjdG9yKGUsdCxpKXt0aGlzLl9uYXRpdmVJbnB1dD1fbmF0aXZlLkRldmljZUlucHV0U3lzdGVtP25ldyBfbmF0aXZlLkRldmljZUlucHV0U3lzdGVtKGUsdCwocyxyLG4sYSk9Pntjb25zdCBvPWRpLkNyZWF0ZURldmljZUV2ZW50KHMscixuLGEsdGhpcyk7aShzLHIsbyl9KTp0aGlzLl9jcmVhdGVEdW1teU5hdGl2ZUlucHV0KCl9cG9sbElucHV0KGUsdCxpKXtyZXR1cm4gdGhpcy5fbmF0aXZlSW5wdXQucG9sbElucHV0KGUsdCxpKX1pc0RldmljZUF2YWlsYWJsZShlKXtyZXR1cm4gZT09PXouTW91c2V8fGU9PT16LlRvdWNofWRpc3Bvc2UoKXt0aGlzLl9uYXRpdmVJbnB1dC5kaXNwb3NlKCl9X2NyZWF0ZUR1bW15TmF0aXZlSW5wdXQoKXtyZXR1cm57cG9sbElucHV0OigpPT4wLGlzRGV2aWNlQXZhaWxhYmxlOigpPT4hMSxkaXNwb3NlOigpPT57fX19fWNvbnN0IFRyPTI1NSxicj1PYmplY3Qua2V5cyhRKS5sZW5ndGgvMjtjbGFzcyBQbntjb25zdHJ1Y3RvcihlLHQsaSxzKXt0aGlzLl9pbnB1dHM9W10sdGhpcy5fa2V5Ym9hcmRBY3RpdmU9ITEsdGhpcy5fcG9pbnRlckFjdGl2ZT0hMSx0aGlzLl91c2luZ1NhZmFyaT1ILklzU2FmYXJpKCksdGhpcy5fdXNpbmdNYWNPUz0vKE1hY3xpUGhvbmV8aVBvZHxpUGFkKS9pLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKSx0aGlzLl9rZXlib2FyZERvd25FdmVudD1yPT57fSx0aGlzLl9rZXlib2FyZFVwRXZlbnQ9cj0+e30sdGhpcy5fa2V5Ym9hcmRCbHVyRXZlbnQ9cj0+e30sdGhpcy5fcG9pbnRlck1vdmVFdmVudD1yPT57fSx0aGlzLl9wb2ludGVyRG93bkV2ZW50PXI9Pnt9LHRoaXMuX3BvaW50ZXJVcEV2ZW50PXI9Pnt9LHRoaXMuX3BvaW50ZXJDYW5jZWxFdmVudD1yPT57fSx0aGlzLl9wb2ludGVyV2hlZWxFdmVudD1yPT57fSx0aGlzLl9wb2ludGVyQmx1ckV2ZW50PXI9Pnt9LHRoaXMuX2V2ZW50c0F0dGFjaGVkPSExLHRoaXMuX21vdXNlSWQ9LTEsdGhpcy5faXNVc2luZ0ZpcmVmb3g9cHMuSXNOYXZpZ2F0b3JBdmFpbGFibGUoKSYmbmF2aWdhdG9yLnVzZXJBZ2VudCYmbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCJGaXJlZm94IikhPT0tMSx0aGlzLl9tYXhUb3VjaFBvaW50cz0wLHRoaXMuX3BvaW50ZXJJbnB1dENsZWFyT2JzZXJ2ZXI9bnVsbCx0aGlzLl9nYW1lcGFkQ29ubmVjdGVkRXZlbnQ9cj0+e30sdGhpcy5fZ2FtZXBhZERpc2Nvbm5lY3RlZEV2ZW50PXI9Pnt9LHRoaXMuX2V2ZW50UHJlZml4PUguR2V0UG9pbnRlclByZWZpeChlKSx0aGlzLl9lbmdpbmU9ZSx0aGlzLl9vbkRldmljZUNvbm5lY3RlZD10LHRoaXMuX29uRGV2aWNlRGlzY29ubmVjdGVkPWksdGhpcy5fb25JbnB1dENoYW5nZWQ9cyx0aGlzLl9lbmFibGVFdmVudHMoKSx0aGlzLl91c2luZ01hY09TJiYodGhpcy5fbWV0YUtleXM9W10pLHRoaXMuX2VuZ2luZS5fb25FbmdpbmVWaWV3Q2hhbmdlZHx8KHRoaXMuX2VuZ2luZS5fb25FbmdpbmVWaWV3Q2hhbmdlZD0oKT0+e3RoaXMuX2VuYWJsZUV2ZW50cygpfSl9cG9sbElucHV0KGUsdCxpKXtjb25zdCBzPXRoaXMuX2lucHV0c1tlXVt0XTtpZighcyl0aHJvd2BVbmFibGUgdG8gZmluZCBkZXZpY2UgJHt6W2VdfWA7ZT49ei5EdWFsU2hvY2smJmU8PXouRHVhbFNlbnNlJiZ0aGlzLl91cGRhdGVEZXZpY2UoZSx0LGkpO2NvbnN0IHI9c1tpXTtpZihyPT09dm9pZCAwKXRocm93YFVuYWJsZSB0byBmaW5kIGlucHV0ICR7aX0gZm9yIGRldmljZSAke3pbZV19IGluIHNsb3QgJHt0fWA7cmV0dXJuIGk9PT1RLk1vdmUmJkguV2FybigiVW5hYmxlIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gZm9yIFBvaW50ZXJJbnB1dC5Nb3ZlLiAgVHJ5IHVzaW5nIFBvaW50ZXJJbnB1dC5Ib3Jpem9udGFsIG9yIFBvaW50ZXJJbnB1dC5WZXJ0aWNhbCBmb3IgbW92ZSBkYXRhLiIpLHJ9aXNEZXZpY2VBdmFpbGFibGUoZSl7cmV0dXJuIHRoaXMuX2lucHV0c1tlXSE9PXZvaWQgMH1kaXNwb3NlKCl7dGhpcy5fb25EZXZpY2VDb25uZWN0ZWQ9KCk9Pnt9LHRoaXMuX29uRGV2aWNlRGlzY29ubmVjdGVkPSgpPT57fSx0aGlzLl9vbklucHV0Q2hhbmdlZD0oKT0+e30sZGVsZXRlIHRoaXMuX2VuZ2luZS5fb25FbmdpbmVWaWV3Q2hhbmdlZCx0aGlzLl9lbGVtZW50VG9BdHRhY2hUbyYmdGhpcy5fZGlzYWJsZUV2ZW50cygpfV9lbmFibGVFdmVudHMoKXtjb25zdCBlPXRoaXM9PT1udWxsfHx0aGlzPT09dm9pZCAwP3ZvaWQgMDp0aGlzLl9lbmdpbmUuZ2V0SW5wdXRFbGVtZW50KCk7aWYoZSYmKCF0aGlzLl9ldmVudHNBdHRhY2hlZHx8dGhpcy5fZWxlbWVudFRvQXR0YWNoVG8hPT1lKSl7aWYodGhpcy5fZGlzYWJsZUV2ZW50cygpLHRoaXMuX2lucHV0cyl7Zm9yKGNvbnN0IHQgb2YgdGhpcy5faW5wdXRzKWlmKHQpZm9yKGNvbnN0IGkgaW4gdCl7Y29uc3Qgcz0raSxyPXRbc107aWYocilmb3IobGV0IG49MDtuPHIubGVuZ3RoO24rKylyW25dPTB9fXRoaXMuX2VsZW1lbnRUb0F0dGFjaFRvPWUsdGhpcy5fZWxlbWVudFRvQXR0YWNoVG8udGFiSW5kZXg9dGhpcy5fZWxlbWVudFRvQXR0YWNoVG8udGFiSW5kZXghPT0tMT90aGlzLl9lbGVtZW50VG9BdHRhY2hUby50YWJJbmRleDp0aGlzLl9lbmdpbmUuY2FudmFzVGFiSW5kZXgsdGhpcy5faGFuZGxlS2V5QWN0aW9ucygpLHRoaXMuX2hhbmRsZVBvaW50ZXJBY3Rpb25zKCksdGhpcy5faGFuZGxlR2FtZXBhZEFjdGlvbnMoKSx0aGlzLl9ldmVudHNBdHRhY2hlZD0hMCx0aGlzLl9jaGVja0ZvckNvbm5lY3RlZERldmljZXMoKX19X2Rpc2FibGVFdmVudHMoKXt0aGlzLl9lbGVtZW50VG9BdHRhY2hUbyYmKHRoaXMuX2VsZW1lbnRUb0F0dGFjaFRvLnJlbW92ZUV2ZW50TGlzdGVuZXIoImJsdXIiLHRoaXMuX2tleWJvYXJkQmx1ckV2ZW50KSx0aGlzLl9lbGVtZW50VG9BdHRhY2hUby5yZW1vdmVFdmVudExpc3RlbmVyKCJibHVyIix0aGlzLl9wb2ludGVyQmx1ckV2ZW50KSx0aGlzLl9lbGVtZW50VG9BdHRhY2hUby5yZW1vdmVFdmVudExpc3RlbmVyKCJrZXlkb3duIix0aGlzLl9rZXlib2FyZERvd25FdmVudCksdGhpcy5fZWxlbWVudFRvQXR0YWNoVG8ucmVtb3ZlRXZlbnRMaXN0ZW5lcigia2V5dXAiLHRoaXMuX2tleWJvYXJkVXBFdmVudCksdGhpcy5fZWxlbWVudFRvQXR0YWNoVG8ucmVtb3ZlRXZlbnRMaXN0ZW5lcih0aGlzLl9ldmVudFByZWZpeCsibW92ZSIsdGhpcy5fcG9pbnRlck1vdmVFdmVudCksdGhpcy5fZWxlbWVudFRvQXR0YWNoVG8ucmVtb3ZlRXZlbnRMaXN0ZW5lcih0aGlzLl9ldmVudFByZWZpeCsiZG93biIsdGhpcy5fcG9pbnRlckRvd25FdmVudCksdGhpcy5fZWxlbWVudFRvQXR0YWNoVG8ucmVtb3ZlRXZlbnRMaXN0ZW5lcih0aGlzLl9ldmVudFByZWZpeCsidXAiLHRoaXMuX3BvaW50ZXJVcEV2ZW50KSx0aGlzLl9lbGVtZW50VG9BdHRhY2hUby5yZW1vdmVFdmVudExpc3RlbmVyKHRoaXMuX2V2ZW50UHJlZml4KyJjYW5jZWwiLHRoaXMuX3BvaW50ZXJDYW5jZWxFdmVudCksdGhpcy5fZWxlbWVudFRvQXR0YWNoVG8ucmVtb3ZlRXZlbnRMaXN0ZW5lcih0aGlzLl93aGVlbEV2ZW50TmFtZSx0aGlzLl9wb2ludGVyV2hlZWxFdmVudCksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoImdhbWVwYWRjb25uZWN0ZWQiLHRoaXMuX2dhbWVwYWRDb25uZWN0ZWRFdmVudCksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoImdhbWVwYWRkaXNjb25uZWN0ZWQiLHRoaXMuX2dhbWVwYWREaXNjb25uZWN0ZWRFdmVudCkpLHRoaXMuX3BvaW50ZXJJbnB1dENsZWFyT2JzZXJ2ZXImJnRoaXMuX2VuZ2luZS5vbkVuZEZyYW1lT2JzZXJ2YWJsZS5yZW1vdmUodGhpcy5fcG9pbnRlcklucHV0Q2xlYXJPYnNlcnZlciksdGhpcy5fZXZlbnRzQXR0YWNoZWQ9ITF9X2NoZWNrRm9yQ29ubmVjdGVkRGV2aWNlcygpe2lmKG5hdmlnYXRvci5nZXRHYW1lcGFkcyl7Y29uc3QgZT1uYXZpZ2F0b3IuZ2V0R2FtZXBhZHMoKTtmb3IoY29uc3QgdCBvZiBlKXQmJnRoaXMuX2FkZEdhbWVQYWQodCl9dHlwZW9mIG1hdGNoTWVkaWE9PSJmdW5jdGlvbiImJm1hdGNoTWVkaWEoIihwb2ludGVyOmZpbmUpIikubWF0Y2hlcyYmdGhpcy5fYWRkUG9pbnRlckRldmljZSh6Lk1vdXNlLDAsMCwwKX1fYWRkR2FtZVBhZChlKXtjb25zdCB0PXRoaXMuX2dldEdhbWVwYWREZXZpY2VUeXBlKGUuaWQpLGk9ZS5pbmRleDt0aGlzLl9nYW1lcGFkcz10aGlzLl9nYW1lcGFkc3x8bmV3IEFycmF5KGUuaW5kZXgrMSksdGhpcy5fcmVnaXN0ZXJEZXZpY2UodCxpLGUuYnV0dG9ucy5sZW5ndGgrZS5heGVzLmxlbmd0aCksdGhpcy5fZ2FtZXBhZHNbaV09dH1fYWRkUG9pbnRlckRldmljZShlLHQsaSxzKXt0aGlzLl9wb2ludGVyQWN0aXZlfHwodGhpcy5fcG9pbnRlckFjdGl2ZT0hMCksdGhpcy5fcmVnaXN0ZXJEZXZpY2UoZSx0LGJyKTtjb25zdCByPXRoaXMuX2lucHV0c1tlXVt0XTtyWzBdPWksclsxXT1zfV9yZWdpc3RlckRldmljZShlLHQsaSl7aWYodD09PXZvaWQgMCl0aHJvd2BVbmFibGUgdG8gcmVnaXN0ZXIgZGV2aWNlICR7eltlXX0gdG8gdW5kZWZpbmVkIHNsb3QuYDtpZih0aGlzLl9pbnB1dHNbZV18fCh0aGlzLl9pbnB1dHNbZV09e30pLCF0aGlzLl9pbnB1dHNbZV1bdF0pe2NvbnN0IHM9bmV3IEFycmF5KGkpO3MuZmlsbCgwKSx0aGlzLl9pbnB1dHNbZV1bdF09cyx0aGlzLl9vbkRldmljZUNvbm5lY3RlZChlLHQpfX1fdW5yZWdpc3RlckRldmljZShlLHQpe3RoaXMuX2lucHV0c1tlXVt0XSYmKGRlbGV0ZSB0aGlzLl9pbnB1dHNbZV1bdF0sdGhpcy5fb25EZXZpY2VEaXNjb25uZWN0ZWQoZSx0KSl9X2hhbmRsZUtleUFjdGlvbnMoKXt0aGlzLl9rZXlib2FyZERvd25FdmVudD1lPT57dGhpcy5fa2V5Ym9hcmRBY3RpdmV8fCh0aGlzLl9rZXlib2FyZEFjdGl2ZT0hMCx0aGlzLl9yZWdpc3RlckRldmljZSh6LktleWJvYXJkLDAsVHIpKTtjb25zdCB0PXRoaXMuX2lucHV0c1t6LktleWJvYXJkXVswXTtpZih0KXt0W2Uua2V5Q29kZV09MTtjb25zdCBpPWU7aS5pbnB1dEluZGV4PWUua2V5Q29kZSx0aGlzLl91c2luZ01hY09TJiZlLm1ldGFLZXkmJmUua2V5IT09Ik1ldGEiJiYodGhpcy5fbWV0YUtleXMuaW5jbHVkZXMoZS5rZXlDb2RlKXx8dGhpcy5fbWV0YUtleXMucHVzaChlLmtleUNvZGUpKSx0aGlzLl9vbklucHV0Q2hhbmdlZCh6LktleWJvYXJkLDAsaSl9fSx0aGlzLl9rZXlib2FyZFVwRXZlbnQ9ZT0+e3RoaXMuX2tleWJvYXJkQWN0aXZlfHwodGhpcy5fa2V5Ym9hcmRBY3RpdmU9ITAsdGhpcy5fcmVnaXN0ZXJEZXZpY2Uoei5LZXlib2FyZCwwLFRyKSk7Y29uc3QgdD10aGlzLl9pbnB1dHNbei5LZXlib2FyZF1bMF07aWYodCl7dFtlLmtleUNvZGVdPTA7Y29uc3QgaT1lO2lmKGkuaW5wdXRJbmRleD1lLmtleUNvZGUsdGhpcy5fdXNpbmdNYWNPUyYmZS5rZXk9PT0iTWV0YSImJnRoaXMuX21ldGFLZXlzLmxlbmd0aD4wKXtmb3IoY29uc3QgcyBvZiB0aGlzLl9tZXRhS2V5cyl7Y29uc3Qgcj1kaS5DcmVhdGVEZXZpY2VFdmVudCh6LktleWJvYXJkLDAscywwLHRoaXMsdGhpcy5fZWxlbWVudFRvQXR0YWNoVG8pO3Rbc109MCx0aGlzLl9vbklucHV0Q2hhbmdlZCh6LktleWJvYXJkLDAscil9dGhpcy5fbWV0YUtleXMuc3BsaWNlKDAsdGhpcy5fbWV0YUtleXMubGVuZ3RoKX10aGlzLl9vbklucHV0Q2hhbmdlZCh6LktleWJvYXJkLDAsaSl9fSx0aGlzLl9rZXlib2FyZEJsdXJFdmVudD0oKT0+e2lmKHRoaXMuX2tleWJvYXJkQWN0aXZlKXtjb25zdCBlPXRoaXMuX2lucHV0c1t6LktleWJvYXJkXVswXTtmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrKylpZihlW3RdIT09MCl7ZVt0XT0wO2NvbnN0IGk9ZGkuQ3JlYXRlRGV2aWNlRXZlbnQoei5LZXlib2FyZCwwLHQsMCx0aGlzLHRoaXMuX2VsZW1lbnRUb0F0dGFjaFRvKTt0aGlzLl9vbklucHV0Q2hhbmdlZCh6LktleWJvYXJkLDAsaSl9dGhpcy5fdXNpbmdNYWNPUyYmdGhpcy5fbWV0YUtleXMuc3BsaWNlKDAsdGhpcy5fbWV0YUtleXMubGVuZ3RoKX19LHRoaXMuX2VsZW1lbnRUb0F0dGFjaFRvLmFkZEV2ZW50TGlzdGVuZXIoImtleWRvd24iLHRoaXMuX2tleWJvYXJkRG93bkV2ZW50KSx0aGlzLl9lbGVtZW50VG9BdHRhY2hUby5hZGRFdmVudExpc3RlbmVyKCJrZXl1cCIsdGhpcy5fa2V5Ym9hcmRVcEV2ZW50KSx0aGlzLl9lbGVtZW50VG9BdHRhY2hUby5hZGRFdmVudExpc3RlbmVyKCJibHVyIix0aGlzLl9rZXlib2FyZEJsdXJFdmVudCl9X2hhbmRsZVBvaW50ZXJBY3Rpb25zKCl7dGhpcy5fbWF4VG91Y2hQb2ludHM9cHMuSXNOYXZpZ2F0b3JBdmFpbGFibGUoKSYmbmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzfHwyLHRoaXMuX2FjdGl2ZVRvdWNoSWRzfHwodGhpcy5fYWN0aXZlVG91Y2hJZHM9bmV3IEFycmF5KHRoaXMuX21heFRvdWNoUG9pbnRzKSk7Zm9yKGxldCBpPTA7aTx0aGlzLl9tYXhUb3VjaFBvaW50cztpKyspdGhpcy5fYWN0aXZlVG91Y2hJZHNbaV09LTE7dGhpcy5fcG9pbnRlck1vdmVFdmVudD1pPT57Y29uc3Qgcz10aGlzLl9nZXRQb2ludGVyVHlwZShpKSxyPXM9PT16Lk1vdXNlPzA6dGhpcy5fYWN0aXZlVG91Y2hJZHMuaW5kZXhPZihpLnBvaW50ZXJJZCk7dGhpcy5faW5wdXRzW3NdfHwodGhpcy5faW5wdXRzW3NdPXt9KSx0aGlzLl9pbnB1dHNbc11bcl18fHRoaXMuX2FkZFBvaW50ZXJEZXZpY2UocyxyLGkuY2xpZW50WCxpLmNsaWVudFkpO2NvbnN0IG49dGhpcy5faW5wdXRzW3NdW3JdO2lmKG4pe2NvbnN0IGE9aTthLmlucHV0SW5kZXg9US5Nb3ZlLG5bUS5Ib3Jpem9udGFsXT1pLmNsaWVudFgsbltRLlZlcnRpY2FsXT1pLmNsaWVudFksdGhpcy5fb25JbnB1dENoYW5nZWQocyxyLGEpLCF0aGlzLl91c2luZ1NhZmFyaSYmaS5idXR0b24hPT0tMSYmKGEuaW5wdXRJbmRleD1pLmJ1dHRvbisyLG5baS5idXR0b24rMl09bltpLmJ1dHRvbisyXT8wOjEsdGhpcy5fb25JbnB1dENoYW5nZWQocyxyLGEpKX19LHRoaXMuX3BvaW50ZXJEb3duRXZlbnQ9aT0+e2NvbnN0IHM9dGhpcy5fZ2V0UG9pbnRlclR5cGUoaSk7bGV0IHI9cz09PXouTW91c2U/MDppLnBvaW50ZXJJZDtpZihzPT09ei5Ub3VjaCl7Y29uc3QgYT10aGlzLl9hY3RpdmVUb3VjaElkcy5pbmRleE9mKC0xKTtpZihhPj0wKXI9YSx0aGlzLl9hY3RpdmVUb3VjaElkc1thXT1pLnBvaW50ZXJJZDtlbHNle0guV2FybihgTWF4IG51bWJlciBvZiB0b3VjaGVzIGV4Y2VlZGVkLiAgSWdub3JpbmcgdG91Y2hlcyBpbiBleGNlc3Mgb2YgJHt0aGlzLl9tYXhUb3VjaFBvaW50c31gKTtyZXR1cm59fXRoaXMuX2lucHV0c1tzXXx8KHRoaXMuX2lucHV0c1tzXT17fSksdGhpcy5faW5wdXRzW3NdW3JdP3M9PT16LlRvdWNoJiZ0aGlzLl9vbkRldmljZUNvbm5lY3RlZChzLHIpOnRoaXMuX2FkZFBvaW50ZXJEZXZpY2UocyxyLGkuY2xpZW50WCxpLmNsaWVudFkpO2NvbnN0IG49dGhpcy5faW5wdXRzW3NdW3JdO2lmKG4pe2NvbnN0IGE9bltRLkhvcml6b250YWxdLG89bltRLlZlcnRpY2FsXTtpZihzPT09ei5Nb3VzZSl7aWYodGhpcy5fbW91c2VJZD09PS0xJiYoaS5wb2ludGVySWQ9PT12b2lkIDA/dGhpcy5fbW91c2VJZD10aGlzLl9pc1VzaW5nRmlyZWZveD8wOjE6dGhpcy5fbW91c2VJZD1pLnBvaW50ZXJJZCksIWRvY3VtZW50LnBvaW50ZXJMb2NrRWxlbWVudCl0cnl7dGhpcy5fZWxlbWVudFRvQXR0YWNoVG8uc2V0UG9pbnRlckNhcHR1cmUodGhpcy5fbW91c2VJZCl9Y2F0Y2h7fX1lbHNlIGlmKGkucG9pbnRlcklkJiYhZG9jdW1lbnQucG9pbnRlckxvY2tFbGVtZW50KXRyeXt0aGlzLl9lbGVtZW50VG9BdHRhY2hUby5zZXRQb2ludGVyQ2FwdHVyZShpLnBvaW50ZXJJZCl9Y2F0Y2h7fW5bUS5Ib3Jpem9udGFsXT1pLmNsaWVudFgsbltRLlZlcnRpY2FsXT1pLmNsaWVudFksbltpLmJ1dHRvbisyXT0xO2NvbnN0IGg9aTtoLmlucHV0SW5kZXg9aS5idXR0b24rMix0aGlzLl9vbklucHV0Q2hhbmdlZChzLHIsaCksKGEhPT1pLmNsaWVudFh8fG8hPT1pLmNsaWVudFkpJiYoaC5pbnB1dEluZGV4PVEuTW92ZSx0aGlzLl9vbklucHV0Q2hhbmdlZChzLHIsaCkpfX0sdGhpcy5fcG9pbnRlclVwRXZlbnQ9aT0+e3ZhciBzLHIsbixhLG87Y29uc3QgaD10aGlzLl9nZXRQb2ludGVyVHlwZShpKSxsPWg9PT16Lk1vdXNlPzA6dGhpcy5fYWN0aXZlVG91Y2hJZHMuaW5kZXhPZihpLnBvaW50ZXJJZCk7aWYoaD09PXouVG91Y2gpe2lmKGw9PT0tMSlyZXR1cm47dGhpcy5fYWN0aXZlVG91Y2hJZHNbbF09LTF9Y29uc3QgdT0ocz10aGlzLl9pbnB1dHNbaF0pPT09bnVsbHx8cz09PXZvaWQgMD92b2lkIDA6c1tsXTtpZih1JiZ1W2kuYnV0dG9uKzJdIT09MCl7Y29uc3QgZD11W1EuSG9yaXpvbnRhbF0sZj11W1EuVmVydGljYWxdO3VbUS5Ib3Jpem9udGFsXT1pLmNsaWVudFgsdVtRLlZlcnRpY2FsXT1pLmNsaWVudFksdVtpLmJ1dHRvbisyXT0wO2NvbnN0IF89aTsoZCE9PWkuY2xpZW50WHx8ZiE9PWkuY2xpZW50WSkmJihfLmlucHV0SW5kZXg9US5Nb3ZlLHRoaXMuX29uSW5wdXRDaGFuZ2VkKGgsbCxfKSksXy5pbnB1dEluZGV4PWkuYnV0dG9uKzIsaD09PXouTW91c2UmJnRoaXMuX21vdXNlSWQ+PTAmJighKChuPShyPXRoaXMuX2VsZW1lbnRUb0F0dGFjaFRvKS5oYXNQb2ludGVyQ2FwdHVyZSk9PT1udWxsfHxuPT09dm9pZCAwKSYmbi5jYWxsKHIsdGhpcy5fbW91c2VJZCkpP3RoaXMuX2VsZW1lbnRUb0F0dGFjaFRvLnJlbGVhc2VQb2ludGVyQ2FwdHVyZSh0aGlzLl9tb3VzZUlkKTppLnBvaW50ZXJJZCYmKCEoKG89KGE9dGhpcy5fZWxlbWVudFRvQXR0YWNoVG8pLmhhc1BvaW50ZXJDYXB0dXJlKT09PW51bGx8fG89PT12b2lkIDApJiZvLmNhbGwoYSxpLnBvaW50ZXJJZCkpJiZ0aGlzLl9lbGVtZW50VG9BdHRhY2hUby5yZWxlYXNlUG9pbnRlckNhcHR1cmUoaS5wb2ludGVySWQpLHRoaXMuX29uSW5wdXRDaGFuZ2VkKGgsbCxfKSxoPT09ei5Ub3VjaCYmdGhpcy5fb25EZXZpY2VEaXNjb25uZWN0ZWQoaCxsKX19LHRoaXMuX3BvaW50ZXJDYW5jZWxFdmVudD1pPT57dmFyIHMscixuLGE7aWYoaS5wb2ludGVyVHlwZT09PSJtb3VzZSIpe2NvbnN0IG89dGhpcy5faW5wdXRzW3ouTW91c2VdWzBdO3RoaXMuX21vdXNlSWQ+PTAmJighKChyPShzPXRoaXMuX2VsZW1lbnRUb0F0dGFjaFRvKS5oYXNQb2ludGVyQ2FwdHVyZSk9PT1udWxsfHxyPT09dm9pZCAwKSYmci5jYWxsKHMsdGhpcy5fbW91c2VJZCkpJiZ0aGlzLl9lbGVtZW50VG9BdHRhY2hUby5yZWxlYXNlUG9pbnRlckNhcHR1cmUodGhpcy5fbW91c2VJZCk7Zm9yKGxldCBoPVEuTGVmdENsaWNrO2g8PVEuQnJvd3NlckZvcndhcmQ7aCsrKWlmKG9baF09PT0xKXtvW2hdPTA7Y29uc3QgbD1kaS5DcmVhdGVEZXZpY2VFdmVudCh6Lk1vdXNlLDAsaCwwLHRoaXMsdGhpcy5fZWxlbWVudFRvQXR0YWNoVG8pO3RoaXMuX29uSW5wdXRDaGFuZ2VkKHouTW91c2UsMCxsKX19ZWxzZXtjb25zdCBvPXRoaXMuX2FjdGl2ZVRvdWNoSWRzLmluZGV4T2YoaS5wb2ludGVySWQpOyEoKGE9KG49dGhpcy5fZWxlbWVudFRvQXR0YWNoVG8pLmhhc1BvaW50ZXJDYXB0dXJlKT09PW51bGx8fGE9PT12b2lkIDApJiZhLmNhbGwobixpLnBvaW50ZXJJZCkmJnRoaXMuX2VsZW1lbnRUb0F0dGFjaFRvLnJlbGVhc2VQb2ludGVyQ2FwdHVyZShpLnBvaW50ZXJJZCksdGhpcy5faW5wdXRzW3ouVG91Y2hdW29dW1EuTGVmdENsaWNrXT0wO2NvbnN0IGg9ZGkuQ3JlYXRlRGV2aWNlRXZlbnQoei5Ub3VjaCxvLFEuTGVmdENsaWNrLDAsdGhpcyx0aGlzLl9lbGVtZW50VG9BdHRhY2hUbyk7dGhpcy5fb25JbnB1dENoYW5nZWQoei5Ub3VjaCxvLGgpLHRoaXMuX2FjdGl2ZVRvdWNoSWRzW29dPS0xLHRoaXMuX29uRGV2aWNlRGlzY29ubmVjdGVkKHouVG91Y2gsbyl9fSx0aGlzLl93aGVlbEV2ZW50TmFtZT0ib253aGVlbCJpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKT8id2hlZWwiOmRvY3VtZW50Lm9ubW91c2V3aGVlbCE9PXZvaWQgMD8ibW91c2V3aGVlbCI6IkRPTU1vdXNlU2Nyb2xsIjtsZXQgZT0hMTtjb25zdCB0PWZ1bmN0aW9uKCl7fTt0cnl7Y29uc3QgaT1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sInBhc3NpdmUiLHtnZXQ6ZnVuY3Rpb24oKXtlPSEwfX0pO3RoaXMuX2VsZW1lbnRUb0F0dGFjaFRvLmFkZEV2ZW50TGlzdGVuZXIoInRlc3QiLHQsaSksdGhpcy5fZWxlbWVudFRvQXR0YWNoVG8ucmVtb3ZlRXZlbnRMaXN0ZW5lcigidGVzdCIsdCxpKX1jYXRjaHt9dGhpcy5fcG9pbnRlckJsdXJFdmVudD0oKT0+e3ZhciBpLHMscixuLGE7aWYodGhpcy5pc0RldmljZUF2YWlsYWJsZSh6Lk1vdXNlKSl7Y29uc3Qgbz10aGlzLl9pbnB1dHNbei5Nb3VzZV1bMF07dGhpcy5fbW91c2VJZD49MCYmKCEoKHM9KGk9dGhpcy5fZWxlbWVudFRvQXR0YWNoVG8pLmhhc1BvaW50ZXJDYXB0dXJlKT09PW51bGx8fHM9PT12b2lkIDApJiZzLmNhbGwoaSx0aGlzLl9tb3VzZUlkKSkmJnRoaXMuX2VsZW1lbnRUb0F0dGFjaFRvLnJlbGVhc2VQb2ludGVyQ2FwdHVyZSh0aGlzLl9tb3VzZUlkKTtmb3IobGV0IGg9US5MZWZ0Q2xpY2s7aDw9US5Ccm93c2VyRm9yd2FyZDtoKyspaWYob1toXT09PTEpe29baF09MDtjb25zdCBsPWRpLkNyZWF0ZURldmljZUV2ZW50KHouTW91c2UsMCxoLDAsdGhpcyx0aGlzLl9lbGVtZW50VG9BdHRhY2hUbyk7dGhpcy5fb25JbnB1dENoYW5nZWQoei5Nb3VzZSwwLGwpfX1pZih0aGlzLmlzRGV2aWNlQXZhaWxhYmxlKHouVG91Y2gpKXtjb25zdCBvPXRoaXMuX2lucHV0c1t6LlRvdWNoXTtmb3IobGV0IGg9MDtoPHRoaXMuX2FjdGl2ZVRvdWNoSWRzLmxlbmd0aDtoKyspe2NvbnN0IGw9dGhpcy5fYWN0aXZlVG91Y2hJZHNbaF07aWYoISgobj0ocj10aGlzLl9lbGVtZW50VG9BdHRhY2hUbykuaGFzUG9pbnRlckNhcHR1cmUpPT09bnVsbHx8bj09PXZvaWQgMCkmJm4uY2FsbChyLGwpJiZ0aGlzLl9lbGVtZW50VG9BdHRhY2hUby5yZWxlYXNlUG9pbnRlckNhcHR1cmUobCksbCE9PS0xJiYoKGE9b1toXSk9PT1udWxsfHxhPT09dm9pZCAwP3ZvaWQgMDphW1EuTGVmdENsaWNrXSk9PT0xKXtvW2hdW1EuTGVmdENsaWNrXT0wO2NvbnN0IHU9ZGkuQ3JlYXRlRGV2aWNlRXZlbnQoei5Ub3VjaCxoLFEuTGVmdENsaWNrLDAsdGhpcyx0aGlzLl9lbGVtZW50VG9BdHRhY2hUbyk7dGhpcy5fb25JbnB1dENoYW5nZWQoei5Ub3VjaCxoLHUpLHRoaXMuX2FjdGl2ZVRvdWNoSWRzW2hdPS0xLHRoaXMuX29uRGV2aWNlRGlzY29ubmVjdGVkKHouVG91Y2gsaCl9fX19LHRoaXMuX3BvaW50ZXJXaGVlbEV2ZW50PWk9Pntjb25zdCBzPXouTW91c2Uscj0wO3RoaXMuX2lucHV0c1tzXXx8KHRoaXMuX2lucHV0c1tzXT1bXSksdGhpcy5faW5wdXRzW3NdW3JdfHwodGhpcy5fcG9pbnRlckFjdGl2ZT0hMCx0aGlzLl9yZWdpc3RlckRldmljZShzLHIsYnIpKTtjb25zdCBuPXRoaXMuX2lucHV0c1tzXVtyXTtpZihuKXtuW1EuTW91c2VXaGVlbFhdPWkuZGVsdGFYfHwwLG5bUS5Nb3VzZVdoZWVsWV09aS5kZWx0YVl8fGkud2hlZWxEZWx0YXx8MCxuW1EuTW91c2VXaGVlbFpdPWkuZGVsdGFafHwwO2NvbnN0IGE9aTtuW1EuTW91c2VXaGVlbFhdIT09MCYmKGEuaW5wdXRJbmRleD1RLk1vdXNlV2hlZWxYLHRoaXMuX29uSW5wdXRDaGFuZ2VkKHMscixhKSksbltRLk1vdXNlV2hlZWxZXSE9PTAmJihhLmlucHV0SW5kZXg9US5Nb3VzZVdoZWVsWSx0aGlzLl9vbklucHV0Q2hhbmdlZChzLHIsYSkpLG5bUS5Nb3VzZVdoZWVsWl0hPT0wJiYoYS5pbnB1dEluZGV4PVEuTW91c2VXaGVlbFosdGhpcy5fb25JbnB1dENoYW5nZWQocyxyLGEpKX19LHRoaXMuX2VsZW1lbnRUb0F0dGFjaFRvLmFkZEV2ZW50TGlzdGVuZXIodGhpcy5fZXZlbnRQcmVmaXgrIm1vdmUiLHRoaXMuX3BvaW50ZXJNb3ZlRXZlbnQpLHRoaXMuX2VsZW1lbnRUb0F0dGFjaFRvLmFkZEV2ZW50TGlzdGVuZXIodGhpcy5fZXZlbnRQcmVmaXgrImRvd24iLHRoaXMuX3BvaW50ZXJEb3duRXZlbnQpLHRoaXMuX2VsZW1lbnRUb0F0dGFjaFRvLmFkZEV2ZW50TGlzdGVuZXIodGhpcy5fZXZlbnRQcmVmaXgrInVwIix0aGlzLl9wb2ludGVyVXBFdmVudCksdGhpcy5fZWxlbWVudFRvQXR0YWNoVG8uYWRkRXZlbnRMaXN0ZW5lcih0aGlzLl9ldmVudFByZWZpeCsiY2FuY2VsIix0aGlzLl9wb2ludGVyQ2FuY2VsRXZlbnQpLHRoaXMuX2VsZW1lbnRUb0F0dGFjaFRvLmFkZEV2ZW50TGlzdGVuZXIoImJsdXIiLHRoaXMuX3BvaW50ZXJCbHVyRXZlbnQpLHRoaXMuX2VsZW1lbnRUb0F0dGFjaFRvLmFkZEV2ZW50TGlzdGVuZXIodGhpcy5fd2hlZWxFdmVudE5hbWUsdGhpcy5fcG9pbnRlcldoZWVsRXZlbnQsZT97cGFzc2l2ZTohMX06ITEpLHRoaXMuX3BvaW50ZXJJbnB1dENsZWFyT2JzZXJ2ZXI9dGhpcy5fZW5naW5lLm9uRW5kRnJhbWVPYnNlcnZhYmxlLmFkZCgoKT0+e2lmKHRoaXMuaXNEZXZpY2VBdmFpbGFibGUoei5Nb3VzZSkpe2NvbnN0IGk9dGhpcy5faW5wdXRzW3ouTW91c2VdWzBdO2lbUS5Nb3VzZVdoZWVsWF09MCxpW1EuTW91c2VXaGVlbFldPTAsaVtRLk1vdXNlV2hlZWxaXT0wfX0pfV9oYW5kbGVHYW1lcGFkQWN0aW9ucygpe3RoaXMuX2dhbWVwYWRDb25uZWN0ZWRFdmVudD1lPT57dGhpcy5fYWRkR2FtZVBhZChlLmdhbWVwYWQpfSx0aGlzLl9nYW1lcGFkRGlzY29ubmVjdGVkRXZlbnQ9ZT0+e2lmKHRoaXMuX2dhbWVwYWRzKXtjb25zdCB0PXRoaXMuX2dldEdhbWVwYWREZXZpY2VUeXBlKGUuZ2FtZXBhZC5pZCksaT1lLmdhbWVwYWQuaW5kZXg7dGhpcy5fdW5yZWdpc3RlckRldmljZSh0LGkpLGRlbGV0ZSB0aGlzLl9nYW1lcGFkc1tpXX19LHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJnYW1lcGFkY29ubmVjdGVkIix0aGlzLl9nYW1lcGFkQ29ubmVjdGVkRXZlbnQpLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJnYW1lcGFkZGlzY29ubmVjdGVkIix0aGlzLl9nYW1lcGFkRGlzY29ubmVjdGVkRXZlbnQpfV91cGRhdGVEZXZpY2UoZSx0LGkpe2NvbnN0IHM9bmF2aWdhdG9yLmdldEdhbWVwYWRzKClbdF07aWYocyYmZT09PXRoaXMuX2dhbWVwYWRzW3RdKXtjb25zdCByPXRoaXMuX2lucHV0c1tlXVt0XTtpPj1zLmJ1dHRvbnMubGVuZ3RoP3JbaV09cy5heGVzW2ktcy5idXR0b25zLmxlbmd0aF0udmFsdWVPZigpOnJbaV09cy5idXR0b25zW2ldLnZhbHVlfX1fZ2V0R2FtZXBhZERldmljZVR5cGUoZSl7cmV0dXJuIGUuaW5kZXhPZigiMDU0YyIpIT09LTE/ZS5pbmRleE9mKCIwY2U2IikhPT0tMT96LkR1YWxTZW5zZTp6LkR1YWxTaG9jazplLmluZGV4T2YoIlhib3ggT25lIikhPT0tMXx8ZS5zZWFyY2goIlhib3ggMzYwIikhPT0tMXx8ZS5zZWFyY2goInhpbnB1dCIpIT09LTE/ei5YYm94OmUuaW5kZXhPZigiMDU3ZSIpIT09LTE/ei5Td2l0Y2g6ei5HZW5lcmljfV9nZXRQb2ludGVyVHlwZShlKXtsZXQgdD16Lk1vdXNlO3JldHVybihlLnBvaW50ZXJUeXBlPT09InRvdWNoInx8ZS5wb2ludGVyVHlwZT09PSJwZW4ifHxlLnRvdWNoZXMpJiYodD16LlRvdWNoKSx0fX1jbGFzcyBTcntjb25zdHJ1Y3RvcihlLHQsaT0wKXt0aGlzLmRldmljZVR5cGU9dCx0aGlzLmRldmljZVNsb3Q9aSx0aGlzLm9uSW5wdXRDaGFuZ2VkT2JzZXJ2YWJsZT1uZXcgRix0aGlzLl9kZXZpY2VJbnB1dFN5c3RlbT1lfWdldElucHV0KGUpe3JldHVybiB0aGlzLl9kZXZpY2VJbnB1dFN5c3RlbS5wb2xsSW5wdXQodGhpcy5kZXZpY2VUeXBlLHRoaXMuZGV2aWNlU2xvdCxlKX19Y2xhc3MgRG57Y29uc3RydWN0b3IoZSl7dGhpcy5fcmVnaXN0ZXJlZE1hbmFnZXJzPW5ldyBBcnJheSx0aGlzLl9yZWZDb3VudD0wLHRoaXMucmVnaXN0ZXJNYW5hZ2VyPW49Pntmb3IobGV0IGE9MDthPHRoaXMuX2RldmljZXMubGVuZ3RoO2ErKyl7Y29uc3Qgbz10aGlzLl9kZXZpY2VzW2FdO2Zvcihjb25zdCBoIGluIG8pe2NvbnN0IGw9K2g7bi5fYWRkRGV2aWNlKG5ldyBTcih0aGlzLl9kZXZpY2VJbnB1dFN5c3RlbSxhLGwpKX19dGhpcy5fcmVnaXN0ZXJlZE1hbmFnZXJzLnB1c2gobil9LHRoaXMudW5yZWdpc3Rlck1hbmFnZXI9bj0+e2NvbnN0IGE9dGhpcy5fcmVnaXN0ZXJlZE1hbmFnZXJzLmluZGV4T2Yobik7YT4tMSYmdGhpcy5fcmVnaXN0ZXJlZE1hbmFnZXJzLnNwbGljZShhLDEpfTtjb25zdCB0PU9iamVjdC5rZXlzKHopLmxlbmd0aC8yO3RoaXMuX2RldmljZXM9bmV3IEFycmF5KHQpO2NvbnN0IGk9KG4sYSk9Pnt0aGlzLl9kZXZpY2VzW25dfHwodGhpcy5fZGV2aWNlc1tuXT1uZXcgQXJyYXkpLHRoaXMuX2RldmljZXNbbl1bYV18fCh0aGlzLl9kZXZpY2VzW25dW2FdPWEpO2Zvcihjb25zdCBvIG9mIHRoaXMuX3JlZ2lzdGVyZWRNYW5hZ2Vycyl7Y29uc3QgaD1uZXcgU3IodGhpcy5fZGV2aWNlSW5wdXRTeXN0ZW0sbixhKTtvLl9hZGREZXZpY2UoaCl9fSxzPShuLGEpPT57dmFyIG87ISgobz10aGlzLl9kZXZpY2VzW25dKT09PW51bGx8fG89PT12b2lkIDApJiZvW2FdJiZkZWxldGUgdGhpcy5fZGV2aWNlc1tuXVthXTtmb3IoY29uc3QgaCBvZiB0aGlzLl9yZWdpc3RlcmVkTWFuYWdlcnMpaC5fcmVtb3ZlRGV2aWNlKG4sYSl9LHI9KG4sYSxvKT0+e2lmKG8pZm9yKGNvbnN0IGggb2YgdGhpcy5fcmVnaXN0ZXJlZE1hbmFnZXJzKWguX29uSW5wdXRDaGFuZ2VkKG4sYSxvKX07dHlwZW9mIF9uYXRpdmU8InUiP3RoaXMuX2RldmljZUlucHV0U3lzdGVtPW5ldyBJbihpLHMscik6dGhpcy5fZGV2aWNlSW5wdXRTeXN0ZW09bmV3IFBuKGUsaSxzLHIpfWRpc3Bvc2UoKXt0aGlzLl9kZXZpY2VJbnB1dFN5c3RlbS5kaXNwb3NlKCl9fWNsYXNzIEZue2NvbnN0cnVjdG9yKGUpe2NvbnN0IHQ9T2JqZWN0LmtleXMoeikubGVuZ3RoLzI7dGhpcy5fZGV2aWNlcz1uZXcgQXJyYXkodCksdGhpcy5fZmlyc3REZXZpY2U9bmV3IEFycmF5KHQpLHRoaXMuX2VuZ2luZT1lLHRoaXMuX2VuZ2luZS5fZGV2aWNlU291cmNlTWFuYWdlcnx8KHRoaXMuX2VuZ2luZS5fZGV2aWNlU291cmNlTWFuYWdlcj1uZXcgRG4oZSkpLHRoaXMuX2VuZ2luZS5fZGV2aWNlU291cmNlTWFuYWdlci5fcmVmQ291bnQrKyx0aGlzLm9uRGV2aWNlQ29ubmVjdGVkT2JzZXJ2YWJsZT1uZXcgRihpPT57Zm9yKGNvbnN0IHMgb2YgdGhpcy5fZGV2aWNlcylpZihzKWZvcihjb25zdCByIG9mIHMpciYmdGhpcy5vbkRldmljZUNvbm5lY3RlZE9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXIoaSxyKX0pLHRoaXMub25EZXZpY2VEaXNjb25uZWN0ZWRPYnNlcnZhYmxlPW5ldyBGLHRoaXMuX2VuZ2luZS5fZGV2aWNlU291cmNlTWFuYWdlci5yZWdpc3Rlck1hbmFnZXIodGhpcyksdGhpcy5fb25EaXNwb3NlT2JzZXJ2ZXI9ZS5vbkRpc3Bvc2VPYnNlcnZhYmxlLmFkZCgoKT0+e3RoaXMuZGlzcG9zZSgpfSl9Z2V0RGV2aWNlU291cmNlKGUsdCl7aWYodD09PXZvaWQgMCl7aWYodGhpcy5fZmlyc3REZXZpY2VbZV09PT12b2lkIDApcmV0dXJuIG51bGw7dD10aGlzLl9maXJzdERldmljZVtlXX1yZXR1cm4hdGhpcy5fZGV2aWNlc1tlXXx8dGhpcy5fZGV2aWNlc1tlXVt0XT09PXZvaWQgMD9udWxsOnRoaXMuX2RldmljZXNbZV1bdF19Z2V0RGV2aWNlU291cmNlcyhlKXtyZXR1cm4gdGhpcy5fZGV2aWNlc1tlXT90aGlzLl9kZXZpY2VzW2VdLmZpbHRlcih0PT4hIXQpOltdfWRpc3Bvc2UoKXt0aGlzLm9uRGV2aWNlQ29ubmVjdGVkT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25EZXZpY2VEaXNjb25uZWN0ZWRPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5fZW5naW5lLl9kZXZpY2VTb3VyY2VNYW5hZ2VyJiYodGhpcy5fZW5naW5lLl9kZXZpY2VTb3VyY2VNYW5hZ2VyLnVucmVnaXN0ZXJNYW5hZ2VyKHRoaXMpLC0tdGhpcy5fZW5naW5lLl9kZXZpY2VTb3VyY2VNYW5hZ2VyLl9yZWZDb3VudDwxJiYodGhpcy5fZW5naW5lLl9kZXZpY2VTb3VyY2VNYW5hZ2VyLmRpc3Bvc2UoKSxkZWxldGUgdGhpcy5fZW5naW5lLl9kZXZpY2VTb3VyY2VNYW5hZ2VyKSksdGhpcy5fZW5naW5lLm9uRGlzcG9zZU9ic2VydmFibGUucmVtb3ZlKHRoaXMuX29uRGlzcG9zZU9ic2VydmVyKX1fYWRkRGV2aWNlKGUpe3RoaXMuX2RldmljZXNbZS5kZXZpY2VUeXBlXXx8KHRoaXMuX2RldmljZXNbZS5kZXZpY2VUeXBlXT1uZXcgQXJyYXkpLHRoaXMuX2RldmljZXNbZS5kZXZpY2VUeXBlXVtlLmRldmljZVNsb3RdfHwodGhpcy5fZGV2aWNlc1tlLmRldmljZVR5cGVdW2UuZGV2aWNlU2xvdF09ZSx0aGlzLl91cGRhdGVGaXJzdERldmljZXMoZS5kZXZpY2VUeXBlKSksdGhpcy5vbkRldmljZUNvbm5lY3RlZE9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKGUpfV9yZW1vdmVEZXZpY2UoZSx0KXt2YXIgaSxzO2NvbnN0IHI9KGk9dGhpcy5fZGV2aWNlc1tlXSk9PT1udWxsfHxpPT09dm9pZCAwP3ZvaWQgMDppW3RdO3RoaXMub25EZXZpY2VEaXNjb25uZWN0ZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhyKSwhKChzPXRoaXMuX2RldmljZXNbZV0pPT09bnVsbHx8cz09PXZvaWQgMCkmJnNbdF0mJmRlbGV0ZSB0aGlzLl9kZXZpY2VzW2VdW3RdLHRoaXMuX3VwZGF0ZUZpcnN0RGV2aWNlcyhlKX1fb25JbnB1dENoYW5nZWQoZSx0LGkpe3ZhciBzLHI7KHI9KHM9dGhpcy5fZGV2aWNlc1tlXSk9PT1udWxsfHxzPT09dm9pZCAwP3ZvaWQgMDpzW3RdKT09PW51bGx8fHI9PT12b2lkIDB8fHIub25JbnB1dENoYW5nZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhpKX1fdXBkYXRlRmlyc3REZXZpY2VzKGUpe3N3aXRjaChlKXtjYXNlIHouS2V5Ym9hcmQ6Y2FzZSB6Lk1vdXNlOnRoaXMuX2ZpcnN0RGV2aWNlW2VdPTA7YnJlYWs7Y2FzZSB6LlRvdWNoOmNhc2Ugei5EdWFsU2Vuc2U6Y2FzZSB6LkR1YWxTaG9jazpjYXNlIHouWGJveDpjYXNlIHouU3dpdGNoOmNhc2Ugei5HZW5lcmljOntkZWxldGUgdGhpcy5fZmlyc3REZXZpY2VbZV07Y29uc3QgdD10aGlzLl9kZXZpY2VzW2VdO2lmKHQpe2ZvcihsZXQgaT0wO2k8dC5sZW5ndGg7aSsrKWlmKHRbaV0pe3RoaXMuX2ZpcnN0RGV2aWNlW2VdPWk7YnJlYWt9fWJyZWFrfX19fWNsYXNzIHhye2NvbnN0cnVjdG9yKCl7dGhpcy5fc2luZ2xlQ2xpY2s9ITEsdGhpcy5fZG91YmxlQ2xpY2s9ITEsdGhpcy5faGFzU3dpcGVkPSExLHRoaXMuX2lnbm9yZT0hMX1nZXQgc2luZ2xlQ2xpY2soKXtyZXR1cm4gdGhpcy5fc2luZ2xlQ2xpY2t9Z2V0IGRvdWJsZUNsaWNrKCl7cmV0dXJuIHRoaXMuX2RvdWJsZUNsaWNrfWdldCBoYXNTd2lwZWQoKXtyZXR1cm4gdGhpcy5faGFzU3dpcGVkfWdldCBpZ25vcmUoKXtyZXR1cm4gdGhpcy5faWdub3JlfXNldCBzaW5nbGVDbGljayhlKXt0aGlzLl9zaW5nbGVDbGljaz1lfXNldCBkb3VibGVDbGljayhlKXt0aGlzLl9kb3VibGVDbGljaz1lfXNldCBoYXNTd2lwZWQoZSl7dGhpcy5faGFzU3dpcGVkPWV9c2V0IGlnbm9yZShlKXt0aGlzLl9pZ25vcmU9ZX19Y2xhc3MgRGV7Y29uc3RydWN0b3IoZSl7dGhpcy5fYWxyZWFkeUF0dGFjaGVkPSExLHRoaXMuX21lc2hQaWNrUHJvY2VlZD0hMSx0aGlzLl9jdXJyZW50UGlja1Jlc3VsdD1udWxsLHRoaXMuX3ByZXZpb3VzUGlja1Jlc3VsdD1udWxsLHRoaXMuX3RvdGFsUG9pbnRlcnNQcmVzc2VkPTAsdGhpcy5fZG91YmxlQ2xpY2tPY2N1cmVkPSExLHRoaXMuX2lzU3dpcGluZz0hMSx0aGlzLl9zd2lwZUJ1dHRvblByZXNzZWQ9LTEsdGhpcy5fc2tpcFBvaW50ZXJUYXA9ITEsdGhpcy5fcG9pbnRlclg9MCx0aGlzLl9wb2ludGVyWT0wLHRoaXMuX3N0YXJ0aW5nUG9pbnRlclBvc2l0aW9uPW5ldyB2ZSgwLDApLHRoaXMuX3ByZXZpb3VzU3RhcnRpbmdQb2ludGVyUG9zaXRpb249bmV3IHZlKDAsMCksdGhpcy5fc3RhcnRpbmdQb2ludGVyVGltZT0wLHRoaXMuX3ByZXZpb3VzU3RhcnRpbmdQb2ludGVyVGltZT0wLHRoaXMuX3BvaW50ZXJDYXB0dXJlcz17fSx0aGlzLl9tZXNoVW5kZXJQb2ludGVySWQ9e30sdGhpcy5fbW92ZVBvaW50ZXJJbmZvPW51bGwsdGhpcy5fY2FtZXJhT2JzZXJ2ZXJDb3VudD0wLHRoaXMuX2RldmljZVNvdXJjZU1hbmFnZXI9bnVsbCx0aGlzLl9zY2VuZT1lfHxmZS5MYXN0Q3JlYXRlZFNjZW5lLHRoaXMuX3NjZW5lfWdldCBtZXNoVW5kZXJQb2ludGVyKCl7cmV0dXJuIHRoaXMuX21vdmVQb2ludGVySW5mbyYmKHRoaXMuX21vdmVQb2ludGVySW5mby5fZ2VuZXJhdGVQaWNrSW5mbygpLHRoaXMuX21vdmVQb2ludGVySW5mbz1udWxsKSx0aGlzLl9wb2ludGVyT3Zlck1lc2h9Z2V0TWVzaFVuZGVyUG9pbnRlckJ5UG9pbnRlcklkKGUpe3JldHVybiB0aGlzLl9tZXNoVW5kZXJQb2ludGVySWRbZV18fG51bGx9Z2V0IHVuVHJhbnNsYXRlZFBvaW50ZXIoKXtyZXR1cm4gbmV3IHZlKHRoaXMuX3VuVHJhbnNsYXRlZFBvaW50ZXJYLHRoaXMuX3VuVHJhbnNsYXRlZFBvaW50ZXJZKX1nZXQgcG9pbnRlclgoKXtyZXR1cm4gdGhpcy5fcG9pbnRlclh9c2V0IHBvaW50ZXJYKGUpe3RoaXMuX3BvaW50ZXJYPWV9Z2V0IHBvaW50ZXJZKCl7cmV0dXJuIHRoaXMuX3BvaW50ZXJZfXNldCBwb2ludGVyWShlKXt0aGlzLl9wb2ludGVyWT1lfV91cGRhdGVQb2ludGVyUG9zaXRpb24oZSl7Y29uc3QgdD10aGlzLl9zY2VuZS5nZXRFbmdpbmUoKS5nZXRJbnB1dEVsZW1lbnRDbGllbnRSZWN0KCk7dCYmKHRoaXMuX3BvaW50ZXJYPWUuY2xpZW50WC10LmxlZnQsdGhpcy5fcG9pbnRlclk9ZS5jbGllbnRZLXQudG9wLHRoaXMuX3VuVHJhbnNsYXRlZFBvaW50ZXJYPXRoaXMuX3BvaW50ZXJYLHRoaXMuX3VuVHJhbnNsYXRlZFBvaW50ZXJZPXRoaXMuX3BvaW50ZXJZKX1fcHJvY2Vzc1BvaW50ZXJNb3ZlKGUsdCl7Y29uc3QgaT10aGlzLl9zY2VuZSxzPWkuZ2V0RW5naW5lKCkscj1zLmdldElucHV0RWxlbWVudCgpO3ImJihyLnRhYkluZGV4PXMuY2FudmFzVGFiSW5kZXgsaS5kb05vdEhhbmRsZUN1cnNvcnN8fChyLnN0eWxlLmN1cnNvcj1pLmRlZmF1bHRDdXJzb3IpKSx0aGlzLl9zZXRDdXJzb3JBbmRQb2ludGVyT3Zlck1lc2goZSx0LnBvaW50ZXJJZCxpKTtmb3IoY29uc3QgbyBvZiBpLl9wb2ludGVyTW92ZVN0YWdlKXtjb25zdCBoPSEhKGUhPW51bGwmJmUucGlja2VkTWVzaCk7ZT1vLmFjdGlvbih0aGlzLl91blRyYW5zbGF0ZWRQb2ludGVyWCx0aGlzLl91blRyYW5zbGF0ZWRQb2ludGVyWSxlLGgscil9Y29uc3Qgbj10LmlucHV0SW5kZXg+PVEuTW91c2VXaGVlbFgmJnQuaW5wdXRJbmRleDw9US5Nb3VzZVdoZWVsWj9UZS5QT0lOVEVSV0hFRUw6VGUuUE9JTlRFUk1PVkU7aS5vblBvaW50ZXJNb3ZlJiYoZT1lfHx0aGlzLl9waWNrTW92ZSh0LnBvaW50ZXJJZCksaS5vblBvaW50ZXJNb3ZlKHQsZSxuKSk7bGV0IGE7ZT8oYT1uZXcgdWkobix0LGUpLHRoaXMuX3NldFJheU9uUG9pbnRlckluZm8oZSx0KSk6KGE9bmV3IHVpKG4sdCxudWxsLHRoaXMpLHRoaXMuX21vdmVQb2ludGVySW5mbz1hKSxpLm9uUG9pbnRlck9ic2VydmFibGUuaGFzT2JzZXJ2ZXJzKCkmJmkub25Qb2ludGVyT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoYSxuKX1fc2V0UmF5T25Qb2ludGVySW5mbyhlLHQpe2NvbnN0IGk9dGhpcy5fc2NlbmU7ZSYmaS5fcGlja2luZ0F2YWlsYWJsZSYmKGUucmF5fHwoZS5yYXk9aS5jcmVhdGVQaWNraW5nUmF5KHQub2Zmc2V0WCx0Lm9mZnNldFkseC5JZGVudGl0eSgpLGkuYWN0aXZlQ2FtZXJhKSkpfV9hZGRDYW1lcmFQb2ludGVyT2JzZXJ2ZXIoZSx0KXtyZXR1cm4gdGhpcy5fY2FtZXJhT2JzZXJ2ZXJDb3VudCsrLHRoaXMuX3NjZW5lLm9uUG9pbnRlck9ic2VydmFibGUuYWRkKGUsdCl9X3JlbW92ZUNhbWVyYVBvaW50ZXJPYnNlcnZlcihlKXtyZXR1cm4gdGhpcy5fY2FtZXJhT2JzZXJ2ZXJDb3VudC0tLHRoaXMuX3NjZW5lLm9uUG9pbnRlck9ic2VydmFibGUucmVtb3ZlKGUpfV9jaGVja0ZvclBpY2tpbmcoKXtyZXR1cm4hISh0aGlzLl9zY2VuZS5vblBvaW50ZXJPYnNlcnZhYmxlLm9ic2VydmVycy5sZW5ndGg+dGhpcy5fY2FtZXJhT2JzZXJ2ZXJDb3VudHx8dGhpcy5fc2NlbmUub25Qb2ludGVyUGljayl9X2NoZWNrUHJlUG9pbnRlck9ic2VydmFibGUoZSx0LGkpe2NvbnN0IHM9dGhpcy5fc2NlbmUscj1uZXcgQ24oaSx0LHRoaXMuX3VuVHJhbnNsYXRlZFBvaW50ZXJYLHRoaXMuX3VuVHJhbnNsYXRlZFBvaW50ZXJZKTtyZXR1cm4gZSYmKHIub3JpZ2luYWxQaWNraW5nSW5mbz1lLHIucmF5PWUucmF5LGUub3JpZ2luTWVzaCYmKHIubmVhckludGVyYWN0aW9uUGlja2luZ0luZm89ZSkpLHMub25QcmVQb2ludGVyT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMocixpKSwhIXIuc2tpcE9uUG9pbnRlck9ic2VydmFibGV9X3BpY2tNb3ZlKGUpe2NvbnN0IHQ9dGhpcy5fc2NlbmUsaT10LnBpY2sodGhpcy5fdW5UcmFuc2xhdGVkUG9pbnRlclgsdGhpcy5fdW5UcmFuc2xhdGVkUG9pbnRlclksdC5wb2ludGVyTW92ZVByZWRpY2F0ZSwhMSx0LmNhbWVyYVRvVXNlRm9yUG9pbnRlcnMsdC5wb2ludGVyTW92ZVRyaWFuZ2xlUHJlZGljYXRlKTtyZXR1cm4gdGhpcy5fc2V0Q3Vyc29yQW5kUG9pbnRlck92ZXJNZXNoKGksZSx0KSxpfV9zZXRDdXJzb3JBbmRQb2ludGVyT3Zlck1lc2goZSx0LGkpe2NvbnN0IHI9aS5nZXRFbmdpbmUoKS5nZXRJbnB1dEVsZW1lbnQoKTtpZihlIT1udWxsJiZlLnBpY2tlZE1lc2gpe2lmKHRoaXMuc2V0UG9pbnRlck92ZXJNZXNoKGUucGlja2VkTWVzaCx0LGUpLCFpLmRvTm90SGFuZGxlQ3Vyc29ycyYmciYmdGhpcy5fcG9pbnRlck92ZXJNZXNoKXtjb25zdCBuPXRoaXMuX3BvaW50ZXJPdmVyTWVzaC5fZ2V0QWN0aW9uTWFuYWdlckZvclRyaWdnZXIoKTtuJiZuLmhhc1BvaW50ZXJUcmlnZ2VycyYmKHIuc3R5bGUuY3Vyc29yPW4uaG92ZXJDdXJzb3J8fGkuaG92ZXJDdXJzb3IpfX1lbHNlIHRoaXMuc2V0UG9pbnRlck92ZXJNZXNoKG51bGwsdCxlKX1zaW11bGF0ZVBvaW50ZXJNb3ZlKGUsdCl7Y29uc3QgaT1uZXcgUG9pbnRlckV2ZW50KCJwb2ludGVybW92ZSIsdCk7aS5pbnB1dEluZGV4PVEuTW92ZSwhdGhpcy5fY2hlY2tQcmVQb2ludGVyT2JzZXJ2YWJsZShlLGksVGUuUE9JTlRFUk1PVkUpJiZ0aGlzLl9wcm9jZXNzUG9pbnRlck1vdmUoZSxpKX1zaW11bGF0ZVBvaW50ZXJEb3duKGUsdCl7Y29uc3QgaT1uZXcgUG9pbnRlckV2ZW50KCJwb2ludGVyZG93biIsdCk7aS5pbnB1dEluZGV4PWkuYnV0dG9uKzIsIXRoaXMuX2NoZWNrUHJlUG9pbnRlck9ic2VydmFibGUoZSxpLFRlLlBPSU5URVJET1dOKSYmdGhpcy5fcHJvY2Vzc1BvaW50ZXJEb3duKGUsaSl9X3Byb2Nlc3NQb2ludGVyRG93bihlLHQpe2NvbnN0IGk9dGhpcy5fc2NlbmU7aWYoZSE9bnVsbCYmZS5waWNrZWRNZXNoKXt0aGlzLl9waWNrZWREb3duTWVzaD1lLnBpY2tlZE1lc2g7Y29uc3Qgbj1lLnBpY2tlZE1lc2guX2dldEFjdGlvbk1hbmFnZXJGb3JUcmlnZ2VyKCk7aWYobil7aWYobi5oYXNQaWNrVHJpZ2dlcnMpc3dpdGNoKG4ucHJvY2Vzc1RyaWdnZXIoNSxWZS5DcmVhdGVOZXcoZS5waWNrZWRNZXNoLHQpKSx0LmJ1dHRvbil7Y2FzZSAwOm4ucHJvY2Vzc1RyaWdnZXIoMixWZS5DcmVhdGVOZXcoZS5waWNrZWRNZXNoLHQpKTticmVhaztjYXNlIDE6bi5wcm9jZXNzVHJpZ2dlcig0LFZlLkNyZWF0ZU5ldyhlLnBpY2tlZE1lc2gsdCkpO2JyZWFrO2Nhc2UgMjpuLnByb2Nlc3NUcmlnZ2VyKDMsVmUuQ3JlYXRlTmV3KGUucGlja2VkTWVzaCx0KSk7YnJlYWt9bi5oYXNTcGVjaWZpY1RyaWdnZXIoOCkmJndpbmRvdy5zZXRUaW1lb3V0KCgpPT57Y29uc3QgYT1pLnBpY2sodGhpcy5fdW5UcmFuc2xhdGVkUG9pbnRlclgsdGhpcy5fdW5UcmFuc2xhdGVkUG9pbnRlclksbz0+by5pc1BpY2thYmxlJiZvLmlzVmlzaWJsZSYmby5pc1JlYWR5KCkmJm8uYWN0aW9uTWFuYWdlciYmby5hY3Rpb25NYW5hZ2VyLmhhc1NwZWNpZmljVHJpZ2dlcig4KSYmbz09PXRoaXMuX3BpY2tlZERvd25NZXNoLCExLGkuY2FtZXJhVG9Vc2VGb3JQb2ludGVycyk7YSE9bnVsbCYmYS5waWNrZWRNZXNoJiZuJiZ0aGlzLl90b3RhbFBvaW50ZXJzUHJlc3NlZCE9PTAmJkRhdGUubm93KCktdGhpcy5fc3RhcnRpbmdQb2ludGVyVGltZT5EZS5Mb25nUHJlc3NEZWxheSYmIXRoaXMuX2lzUG9pbnRlclN3aXBpbmcoKSYmKHRoaXMuX3N0YXJ0aW5nUG9pbnRlclRpbWU9MCxuLnByb2Nlc3NUcmlnZ2VyKDgsVmUuQ3JlYXRlTmV3KGEucGlja2VkTWVzaCx0KSkpfSxEZS5Mb25nUHJlc3NEZWxheSl9fWVsc2UgZm9yKGNvbnN0IG4gb2YgaS5fcG9pbnRlckRvd25TdGFnZSllPW4uYWN0aW9uKHRoaXMuX3VuVHJhbnNsYXRlZFBvaW50ZXJYLHRoaXMuX3VuVHJhbnNsYXRlZFBvaW50ZXJZLGUsdCwhMSk7bGV0IHM7Y29uc3Qgcj1UZS5QT0lOVEVSRE9XTjtlPyhpLm9uUG9pbnRlckRvd24mJmkub25Qb2ludGVyRG93bih0LGUscikscz1uZXcgdWkocix0LGUpLHRoaXMuX3NldFJheU9uUG9pbnRlckluZm8oZSx0KSk6cz1uZXcgdWkocix0LG51bGwsdGhpcyksaS5vblBvaW50ZXJPYnNlcnZhYmxlLmhhc09ic2VydmVycygpJiZpLm9uUG9pbnRlck9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHMscil9X2lzUG9pbnRlclN3aXBpbmcoKXtyZXR1cm4gdGhpcy5faXNTd2lwaW5nfXNpbXVsYXRlUG9pbnRlclVwKGUsdCxpKXtjb25zdCBzPW5ldyBQb2ludGVyRXZlbnQoInBvaW50ZXJ1cCIsdCk7cy5pbnB1dEluZGV4PVEuTW92ZTtjb25zdCByPW5ldyB4cjtpP3IuZG91YmxlQ2xpY2s9ITA6ci5zaW5nbGVDbGljaz0hMCwhdGhpcy5fY2hlY2tQcmVQb2ludGVyT2JzZXJ2YWJsZShlLHMsVGUuUE9JTlRFUlVQKSYmdGhpcy5fcHJvY2Vzc1BvaW50ZXJVcChlLHMscil9X3Byb2Nlc3NQb2ludGVyVXAoZSx0LGkpe2NvbnN0IHM9dGhpcy5fc2NlbmU7aWYoZSE9bnVsbCYmZS5waWNrZWRNZXNoKXtpZih0aGlzLl9waWNrZWRVcE1lc2g9ZS5waWNrZWRNZXNoLHRoaXMuX3BpY2tlZERvd25NZXNoPT09dGhpcy5fcGlja2VkVXBNZXNoJiYocy5vblBvaW50ZXJQaWNrJiZzLm9uUG9pbnRlclBpY2sodCxlKSxpLnNpbmdsZUNsaWNrJiYhaS5pZ25vcmUmJnMub25Qb2ludGVyT2JzZXJ2YWJsZS5vYnNlcnZlcnMubGVuZ3RoPnRoaXMuX2NhbWVyYU9ic2VydmVyQ291bnQpKXtjb25zdCBuPVRlLlBPSU5URVJQSUNLLGE9bmV3IHVpKG4sdCxlKTt0aGlzLl9zZXRSYXlPblBvaW50ZXJJbmZvKGUsdCkscy5vblBvaW50ZXJPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhhLG4pfWNvbnN0IHI9ZS5waWNrZWRNZXNoLl9nZXRBY3Rpb25NYW5hZ2VyRm9yVHJpZ2dlcigpO2lmKHImJiFpLmlnbm9yZSl7ci5wcm9jZXNzVHJpZ2dlcig3LFZlLkNyZWF0ZU5ldyhlLnBpY2tlZE1lc2gsdCxlKSksIWkuaGFzU3dpcGVkJiZpLnNpbmdsZUNsaWNrJiZyLnByb2Nlc3NUcmlnZ2VyKDEsVmUuQ3JlYXRlTmV3KGUucGlja2VkTWVzaCx0LGUpKTtjb25zdCBuPWUucGlja2VkTWVzaC5fZ2V0QWN0aW9uTWFuYWdlckZvclRyaWdnZXIoNik7aS5kb3VibGVDbGljayYmbiYmbi5wcm9jZXNzVHJpZ2dlcig2LFZlLkNyZWF0ZU5ldyhlLnBpY2tlZE1lc2gsdCxlKSl9fWVsc2UgaWYoIWkuaWdub3JlKWZvcihjb25zdCByIG9mIHMuX3BvaW50ZXJVcFN0YWdlKWU9ci5hY3Rpb24odGhpcy5fdW5UcmFuc2xhdGVkUG9pbnRlclgsdGhpcy5fdW5UcmFuc2xhdGVkUG9pbnRlclksZSx0LGkuZG91YmxlQ2xpY2spO2lmKHRoaXMuX3BpY2tlZERvd25NZXNoJiZ0aGlzLl9waWNrZWREb3duTWVzaCE9PXRoaXMuX3BpY2tlZFVwTWVzaCl7Y29uc3Qgcj10aGlzLl9waWNrZWREb3duTWVzaC5fZ2V0QWN0aW9uTWFuYWdlckZvclRyaWdnZXIoMTYpO3ImJnIucHJvY2Vzc1RyaWdnZXIoMTYsVmUuQ3JlYXRlTmV3KHRoaXMuX3BpY2tlZERvd25NZXNoLHQpKX1pZighaS5pZ25vcmUpe2NvbnN0IHI9bmV3IHVpKFRlLlBPSU5URVJVUCx0LGUpO2lmKHRoaXMuX3NldFJheU9uUG9pbnRlckluZm8oZSx0KSxzLm9uUG9pbnRlck9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHIsVGUuUE9JTlRFUlVQKSxzLm9uUG9pbnRlclVwJiZzLm9uUG9pbnRlclVwKHQsZSxUZS5QT0lOVEVSVVApLCFpLmhhc1N3aXBlZCYmIXRoaXMuX3NraXBQb2ludGVyVGFwKXtsZXQgbj0wO2lmKGkuc2luZ2xlQ2xpY2s/bj1UZS5QT0lOVEVSVEFQOmkuZG91YmxlQ2xpY2smJihuPVRlLlBPSU5URVJET1VCTEVUQVApLG4pe2NvbnN0IGE9bmV3IHVpKG4sdCxlKTtzLm9uUG9pbnRlck9ic2VydmFibGUuaGFzT2JzZXJ2ZXJzKCkmJnMub25Qb2ludGVyT2JzZXJ2YWJsZS5oYXNTcGVjaWZpY01hc2sobikmJnMub25Qb2ludGVyT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoYSxuKX19fX1pc1BvaW50ZXJDYXB0dXJlZChlPTApe3JldHVybiB0aGlzLl9wb2ludGVyQ2FwdHVyZXNbZV19YXR0YWNoQ29udHJvbChlPSEwLHQ9ITAsaT0hMCxzPW51bGwpe2NvbnN0IHI9dGhpcy5fc2NlbmUsbj1yLmdldEVuZ2luZSgpO3N8fChzPW4uZ2V0SW5wdXRFbGVtZW50KCkpLHRoaXMuX2FscmVhZHlBdHRhY2hlZCYmdGhpcy5kZXRhY2hDb250cm9sKCkscyYmKHRoaXMuX2FscmVhZHlBdHRhY2hlZFRvPXMpLHRoaXMuX2RldmljZVNvdXJjZU1hbmFnZXI9bmV3IEZuKG4pLHRoaXMuX2luaXRBY3Rpb25NYW5hZ2VyPWE9PntpZighdGhpcy5fbWVzaFBpY2tQcm9jZWVkKXtjb25zdCBvPXIuc2tpcFBvaW50ZXJVcFBpY2tpbmd8fHIuX3JlZ2lzdGVyZWRBY3Rpb25zPT09MCYmIXRoaXMuX2NoZWNrRm9yUGlja2luZygpJiYhci5vblBvaW50ZXJVcD9udWxsOnIucGljayh0aGlzLl91blRyYW5zbGF0ZWRQb2ludGVyWCx0aGlzLl91blRyYW5zbGF0ZWRQb2ludGVyWSxyLnBvaW50ZXJVcFByZWRpY2F0ZSwhMSxyLmNhbWVyYVRvVXNlRm9yUG9pbnRlcnMpO3RoaXMuX2N1cnJlbnRQaWNrUmVzdWx0PW8sbyYmKGE9by5oaXQmJm8ucGlja2VkTWVzaD9vLnBpY2tlZE1lc2guX2dldEFjdGlvbk1hbmFnZXJGb3JUcmlnZ2VyKCk6bnVsbCksdGhpcy5fbWVzaFBpY2tQcm9jZWVkPSEwfXJldHVybiBhfSx0aGlzLl9kZWxheWVkU2ltcGxlQ2xpY2s9KGEsbyxoKT0+eyhEYXRlLm5vdygpLXRoaXMuX3ByZXZpb3VzU3RhcnRpbmdQb2ludGVyVGltZT5EZS5Eb3VibGVDbGlja0RlbGF5JiYhdGhpcy5fZG91YmxlQ2xpY2tPY2N1cmVkfHxhIT09dGhpcy5fcHJldmlvdXNCdXR0b25QcmVzc2VkKSYmKHRoaXMuX2RvdWJsZUNsaWNrT2NjdXJlZD0hMSxvLnNpbmdsZUNsaWNrPSEwLG8uaWdub3JlPSExLGgobyx0aGlzLl9jdXJyZW50UGlja1Jlc3VsdCkpfSx0aGlzLl9pbml0Q2xpY2tFdmVudD0oYSxvLGgsbCk9Pntjb25zdCB1PW5ldyB4cjt0aGlzLl9jdXJyZW50UGlja1Jlc3VsdD1udWxsO2xldCBkPW51bGwsZj1hLmhhc1NwZWNpZmljTWFzayhUZS5QT0lOVEVSUElDSyl8fG8uaGFzU3BlY2lmaWNNYXNrKFRlLlBPSU5URVJQSUNLKXx8YS5oYXNTcGVjaWZpY01hc2soVGUuUE9JTlRFUlRBUCl8fG8uaGFzU3BlY2lmaWNNYXNrKFRlLlBPSU5URVJUQVApfHxhLmhhc1NwZWNpZmljTWFzayhUZS5QT0lOVEVSRE9VQkxFVEFQKXx8by5oYXNTcGVjaWZpY01hc2soVGUuUE9JTlRFUkRPVUJMRVRBUCk7IWYmJnV0JiYoZD10aGlzLl9pbml0QWN0aW9uTWFuYWdlcihkLHUpLGQmJihmPWQuaGFzUGlja1RyaWdnZXJzKSk7bGV0IF89ITE7aWYoZil7Y29uc3QgRT1oLmJ1dHRvbjtpZih1Lmhhc1N3aXBlZD10aGlzLl9pc1BvaW50ZXJTd2lwaW5nKCksIXUuaGFzU3dpcGVkKXtsZXQgbT0hRGUuRXhjbHVzaXZlRG91YmxlQ2xpY2tNb2RlO218fChtPSFhLmhhc1NwZWNpZmljTWFzayhUZS5QT0lOVEVSRE9VQkxFVEFQKSYmIW8uaGFzU3BlY2lmaWNNYXNrKFRlLlBPSU5URVJET1VCTEVUQVApLG0mJiF1dC5IYXNTcGVjaWZpY1RyaWdnZXIoNikmJihkPXRoaXMuX2luaXRBY3Rpb25NYW5hZ2VyKGQsdSksZCYmKG09IWQuaGFzU3BlY2lmaWNUcmlnZ2VyKDYpKSkpLG0/KERhdGUubm93KCktdGhpcy5fcHJldmlvdXNTdGFydGluZ1BvaW50ZXJUaW1lPkRlLkRvdWJsZUNsaWNrRGVsYXl8fEUhPT10aGlzLl9wcmV2aW91c0J1dHRvblByZXNzZWQpJiYodS5zaW5nbGVDbGljaz0hMCxsKHUsdGhpcy5fY3VycmVudFBpY2tSZXN1bHQpLF89ITApOih0aGlzLl9wcmV2aW91c0RlbGF5ZWRTaW1wbGVDbGlja1RpbWVvdXQ9dGhpcy5fZGVsYXllZFNpbXBsZUNsaWNrVGltZW91dCx0aGlzLl9kZWxheWVkU2ltcGxlQ2xpY2tUaW1lb3V0PXdpbmRvdy5zZXRUaW1lb3V0KHRoaXMuX2RlbGF5ZWRTaW1wbGVDbGljay5iaW5kKHRoaXMsRSx1LGwpLERlLkRvdWJsZUNsaWNrRGVsYXkpKTtsZXQgdj1hLmhhc1NwZWNpZmljTWFzayhUZS5QT0lOVEVSRE9VQkxFVEFQKXx8by5oYXNTcGVjaWZpY01hc2soVGUuUE9JTlRFUkRPVUJMRVRBUCk7IXYmJnV0Lkhhc1NwZWNpZmljVHJpZ2dlcig2KSYmKGQ9dGhpcy5faW5pdEFjdGlvbk1hbmFnZXIoZCx1KSxkJiYodj1kLmhhc1NwZWNpZmljVHJpZ2dlcig2KSkpLHYmJihFPT09dGhpcy5fcHJldmlvdXNCdXR0b25QcmVzc2VkJiZEYXRlLm5vdygpLXRoaXMuX3ByZXZpb3VzU3RhcnRpbmdQb2ludGVyVGltZTxEZS5Eb3VibGVDbGlja0RlbGF5JiYhdGhpcy5fZG91YmxlQ2xpY2tPY2N1cmVkPyghdS5oYXNTd2lwZWQmJiF0aGlzLl9pc1BvaW50ZXJTd2lwaW5nKCk/KHRoaXMuX3ByZXZpb3VzU3RhcnRpbmdQb2ludGVyVGltZT0wLHRoaXMuX2RvdWJsZUNsaWNrT2NjdXJlZD0hMCx1LmRvdWJsZUNsaWNrPSEwLHUuaWdub3JlPSExLERlLkV4Y2x1c2l2ZURvdWJsZUNsaWNrTW9kZSYmdGhpcy5fcHJldmlvdXNEZWxheWVkU2ltcGxlQ2xpY2tUaW1lb3V0JiZjbGVhclRpbWVvdXQodGhpcy5fcHJldmlvdXNEZWxheWVkU2ltcGxlQ2xpY2tUaW1lb3V0KSx0aGlzLl9wcmV2aW91c0RlbGF5ZWRTaW1wbGVDbGlja1RpbWVvdXQ9dGhpcy5fZGVsYXllZFNpbXBsZUNsaWNrVGltZW91dCxsKHUsdGhpcy5fY3VycmVudFBpY2tSZXN1bHQpKToodGhpcy5fZG91YmxlQ2xpY2tPY2N1cmVkPSExLHRoaXMuX3ByZXZpb3VzU3RhcnRpbmdQb2ludGVyVGltZT10aGlzLl9zdGFydGluZ1BvaW50ZXJUaW1lLHRoaXMuX3ByZXZpb3VzU3RhcnRpbmdQb2ludGVyUG9zaXRpb24ueD10aGlzLl9zdGFydGluZ1BvaW50ZXJQb3NpdGlvbi54LHRoaXMuX3ByZXZpb3VzU3RhcnRpbmdQb2ludGVyUG9zaXRpb24ueT10aGlzLl9zdGFydGluZ1BvaW50ZXJQb3NpdGlvbi55LHRoaXMuX3ByZXZpb3VzQnV0dG9uUHJlc3NlZD1FLERlLkV4Y2x1c2l2ZURvdWJsZUNsaWNrTW9kZT8odGhpcy5fcHJldmlvdXNEZWxheWVkU2ltcGxlQ2xpY2tUaW1lb3V0JiZjbGVhclRpbWVvdXQodGhpcy5fcHJldmlvdXNEZWxheWVkU2ltcGxlQ2xpY2tUaW1lb3V0KSx0aGlzLl9wcmV2aW91c0RlbGF5ZWRTaW1wbGVDbGlja1RpbWVvdXQ9dGhpcy5fZGVsYXllZFNpbXBsZUNsaWNrVGltZW91dCxsKHUsdGhpcy5fcHJldmlvdXNQaWNrUmVzdWx0KSk6bCh1LHRoaXMuX2N1cnJlbnRQaWNrUmVzdWx0KSksXz0hMCk6KHRoaXMuX2RvdWJsZUNsaWNrT2NjdXJlZD0hMSx0aGlzLl9wcmV2aW91c1N0YXJ0aW5nUG9pbnRlclRpbWU9dGhpcy5fc3RhcnRpbmdQb2ludGVyVGltZSx0aGlzLl9wcmV2aW91c1N0YXJ0aW5nUG9pbnRlclBvc2l0aW9uLng9dGhpcy5fc3RhcnRpbmdQb2ludGVyUG9zaXRpb24ueCx0aGlzLl9wcmV2aW91c1N0YXJ0aW5nUG9pbnRlclBvc2l0aW9uLnk9dGhpcy5fc3RhcnRpbmdQb2ludGVyUG9zaXRpb24ueSx0aGlzLl9wcmV2aW91c0J1dHRvblByZXNzZWQ9RSkpfX1ffHxsKHUsdGhpcy5fY3VycmVudFBpY2tSZXN1bHQpfSx0aGlzLl9vblBvaW50ZXJNb3ZlPWE9PntpZihhLnBvaW50ZXJJZD09PXZvaWQgMCYmKGEucG9pbnRlcklkPTApLHRoaXMuX3VwZGF0ZVBvaW50ZXJQb3NpdGlvbihhKSwhdGhpcy5faXNTd2lwaW5nJiZ0aGlzLl9zd2lwZUJ1dHRvblByZXNzZWQhPT0tMSYmKHRoaXMuX2lzU3dpcGluZz1NYXRoLmFicyh0aGlzLl9zdGFydGluZ1BvaW50ZXJQb3NpdGlvbi54LXRoaXMuX3BvaW50ZXJYKT5EZS5EcmFnTW92ZW1lbnRUaHJlc2hvbGR8fE1hdGguYWJzKHRoaXMuX3N0YXJ0aW5nUG9pbnRlclBvc2l0aW9uLnktdGhpcy5fcG9pbnRlclkpPkRlLkRyYWdNb3ZlbWVudFRocmVzaG9sZCksdGhpcy5fY2hlY2tQcmVQb2ludGVyT2JzZXJ2YWJsZShudWxsLGEsYS5pbnB1dEluZGV4Pj1RLk1vdXNlV2hlZWxYJiZhLmlucHV0SW5kZXg8PVEuTW91c2VXaGVlbFo/VGUuUE9JTlRFUldIRUVMOlRlLlBPSU5URVJNT1ZFKXx8IXIuY2FtZXJhVG9Vc2VGb3JQb2ludGVycyYmIXIuYWN0aXZlQ2FtZXJhKXJldHVybjtpZihyLnNraXBQb2ludGVyTW92ZVBpY2tpbmcpe3RoaXMuX3Byb2Nlc3NQb2ludGVyTW92ZShuZXcgVXQsYSk7cmV0dXJufXIucG9pbnRlck1vdmVQcmVkaWNhdGV8fChyLnBvaW50ZXJNb3ZlUHJlZGljYXRlPWg9PmguaXNQaWNrYWJsZSYmaC5pc1Zpc2libGUmJmguaXNSZWFkeSgpJiZoLmlzRW5hYmxlZCgpJiYoaC5lbmFibGVQb2ludGVyTW92ZUV2ZW50c3x8ci5jb25zdGFudGx5VXBkYXRlTWVzaFVuZGVyUG9pbnRlcnx8aC5fZ2V0QWN0aW9uTWFuYWdlckZvclRyaWdnZXIoKSE9PW51bGwpJiYoIXIuY2FtZXJhVG9Vc2VGb3JQb2ludGVyc3x8KHIuY2FtZXJhVG9Vc2VGb3JQb2ludGVycy5sYXllck1hc2smaC5sYXllck1hc2spIT09MCkpO2NvbnN0IG89ci5fcmVnaXN0ZXJlZEFjdGlvbnM+MD90aGlzLl9waWNrTW92ZShhLnBvaW50ZXJJZCk6bnVsbDt0aGlzLl9wcm9jZXNzUG9pbnRlck1vdmUobyxhKX0sdGhpcy5fb25Qb2ludGVyRG93bj1hPT57aWYodGhpcy5fdG90YWxQb2ludGVyc1ByZXNzZWQrKyx0aGlzLl9waWNrZWREb3duTWVzaD1udWxsLHRoaXMuX21lc2hQaWNrUHJvY2VlZD0hMSxhLnBvaW50ZXJJZD09PXZvaWQgMCYmKGEucG9pbnRlcklkPTApLHRoaXMuX3VwZGF0ZVBvaW50ZXJQb3NpdGlvbihhKSx0aGlzLl9zd2lwZUJ1dHRvblByZXNzZWQ9PT0tMSYmKHRoaXMuX3N3aXBlQnV0dG9uUHJlc3NlZD1hLmJ1dHRvbiksci5wcmV2ZW50RGVmYXVsdE9uUG9pbnRlckRvd24mJnMmJihhLnByZXZlbnREZWZhdWx0KCkscy5mb2N1cygpKSx0aGlzLl9zdGFydGluZ1BvaW50ZXJQb3NpdGlvbi54PXRoaXMuX3BvaW50ZXJYLHRoaXMuX3N0YXJ0aW5nUG9pbnRlclBvc2l0aW9uLnk9dGhpcy5fcG9pbnRlclksdGhpcy5fc3RhcnRpbmdQb2ludGVyVGltZT1EYXRlLm5vdygpLHRoaXMuX2NoZWNrUHJlUG9pbnRlck9ic2VydmFibGUobnVsbCxhLFRlLlBPSU5URVJET1dOKXx8IXIuY2FtZXJhVG9Vc2VGb3JQb2ludGVycyYmIXIuYWN0aXZlQ2FtZXJhKXJldHVybjt0aGlzLl9wb2ludGVyQ2FwdHVyZXNbYS5wb2ludGVySWRdPSEwLHIucG9pbnRlckRvd25QcmVkaWNhdGV8fChyLnBvaW50ZXJEb3duUHJlZGljYXRlPWg9PmguaXNQaWNrYWJsZSYmaC5pc1Zpc2libGUmJmguaXNSZWFkeSgpJiZoLmlzRW5hYmxlZCgpJiYoIXIuY2FtZXJhVG9Vc2VGb3JQb2ludGVyc3x8KHIuY2FtZXJhVG9Vc2VGb3JQb2ludGVycy5sYXllck1hc2smaC5sYXllck1hc2spIT09MCkpLHRoaXMuX3BpY2tlZERvd25NZXNoPW51bGw7bGV0IG87ci5za2lwUG9pbnRlckRvd25QaWNraW5nfHxyLl9yZWdpc3RlcmVkQWN0aW9ucz09PTAmJiF0aGlzLl9jaGVja0ZvclBpY2tpbmcoKSYmIXIub25Qb2ludGVyRG93bj9vPW5ldyBVdDpvPXIucGljayh0aGlzLl91blRyYW5zbGF0ZWRQb2ludGVyWCx0aGlzLl91blRyYW5zbGF0ZWRQb2ludGVyWSxyLnBvaW50ZXJEb3duUHJlZGljYXRlLCExLHIuY2FtZXJhVG9Vc2VGb3JQb2ludGVycyksdGhpcy5fcHJvY2Vzc1BvaW50ZXJEb3duKG8sYSl9LHRoaXMuX29uUG9pbnRlclVwPWE9Pnt0aGlzLl90b3RhbFBvaW50ZXJzUHJlc3NlZCE9PTAmJih0aGlzLl90b3RhbFBvaW50ZXJzUHJlc3NlZC0tLHRoaXMuX3BpY2tlZFVwTWVzaD1udWxsLHRoaXMuX21lc2hQaWNrUHJvY2VlZD0hMSxhLnBvaW50ZXJJZD09PXZvaWQgMCYmKGEucG9pbnRlcklkPTApLHRoaXMuX3VwZGF0ZVBvaW50ZXJQb3NpdGlvbihhKSxyLnByZXZlbnREZWZhdWx0T25Qb2ludGVyVXAmJnMmJihhLnByZXZlbnREZWZhdWx0KCkscy5mb2N1cygpKSx0aGlzLl9pbml0Q2xpY2tFdmVudChyLm9uUHJlUG9pbnRlck9ic2VydmFibGUsci5vblBvaW50ZXJPYnNlcnZhYmxlLGEsKG8saCk9PntpZihyLm9uUHJlUG9pbnRlck9ic2VydmFibGUuaGFzT2JzZXJ2ZXJzKCkmJih0aGlzLl9za2lwUG9pbnRlclRhcD0hMSwhby5pZ25vcmUpKXtpZih0aGlzLl9jaGVja1ByZVBvaW50ZXJPYnNlcnZhYmxlKG51bGwsYSxUZS5QT0lOVEVSVVApKXt0aGlzLl9zd2lwZUJ1dHRvblByZXNzZWQ9PT1hLmJ1dHRvbiYmKHRoaXMuX2lzU3dpcGluZz0hMSx0aGlzLl9zd2lwZUJ1dHRvblByZXNzZWQ9LTEpO3JldHVybn1vLmhhc1N3aXBlZHx8KG8uc2luZ2xlQ2xpY2smJnIub25QcmVQb2ludGVyT2JzZXJ2YWJsZS5oYXNTcGVjaWZpY01hc2soVGUuUE9JTlRFUlRBUCkmJnRoaXMuX2NoZWNrUHJlUG9pbnRlck9ic2VydmFibGUobnVsbCxhLFRlLlBPSU5URVJUQVApJiYodGhpcy5fc2tpcFBvaW50ZXJUYXA9ITApLG8uZG91YmxlQ2xpY2smJnIub25QcmVQb2ludGVyT2JzZXJ2YWJsZS5oYXNTcGVjaWZpY01hc2soVGUuUE9JTlRFUkRPVUJMRVRBUCkmJnRoaXMuX2NoZWNrUHJlUG9pbnRlck9ic2VydmFibGUobnVsbCxhLFRlLlBPSU5URVJET1VCTEVUQVApJiYodGhpcy5fc2tpcFBvaW50ZXJUYXA9ITApKX10aGlzLl9wb2ludGVyQ2FwdHVyZXNbYS5wb2ludGVySWRdPSExLCEoIXIuY2FtZXJhVG9Vc2VGb3JQb2ludGVycyYmIXIuYWN0aXZlQ2FtZXJhKSYmKHIucG9pbnRlclVwUHJlZGljYXRlfHwoci5wb2ludGVyVXBQcmVkaWNhdGU9bD0+bC5pc1BpY2thYmxlJiZsLmlzVmlzaWJsZSYmbC5pc1JlYWR5KCkmJmwuaXNFbmFibGVkKCkmJighci5jYW1lcmFUb1VzZUZvclBvaW50ZXJzfHwoci5jYW1lcmFUb1VzZUZvclBvaW50ZXJzLmxheWVyTWFzayZsLmxheWVyTWFzaykhPT0wKSksIXRoaXMuX21lc2hQaWNrUHJvY2VlZCYmKHV0JiZ1dC5IYXNUcmlnZ2Vyc3x8dGhpcy5fY2hlY2tGb3JQaWNraW5nKCl8fHIub25Qb2ludGVyVXApJiZ0aGlzLl9pbml0QWN0aW9uTWFuYWdlcihudWxsLG8pLGh8fChoPXRoaXMuX2N1cnJlbnRQaWNrUmVzdWx0KSx0aGlzLl9wcm9jZXNzUG9pbnRlclVwKGgsYSxvKSx0aGlzLl9wcmV2aW91c1BpY2tSZXN1bHQ9dGhpcy5fY3VycmVudFBpY2tSZXN1bHQsdGhpcy5fc3dpcGVCdXR0b25QcmVzc2VkPT09YS5idXR0b24mJih0aGlzLl9pc1N3aXBpbmc9ITEsdGhpcy5fc3dpcGVCdXR0b25QcmVzc2VkPS0xKSl9KSl9LHRoaXMuX29uS2V5RG93bj1hPT57Y29uc3Qgbz1KaS5LRVlET1dOO2lmKHIub25QcmVLZXlib2FyZE9ic2VydmFibGUuaGFzT2JzZXJ2ZXJzKCkpe2NvbnN0IGg9bmV3IF9yKG8sYSk7aWYoci5vblByZUtleWJvYXJkT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoaCxvKSxoLnNraXBPbktleWJvYXJkT2JzZXJ2YWJsZSlyZXR1cm59aWYoci5vbktleWJvYXJkT2JzZXJ2YWJsZS5oYXNPYnNlcnZlcnMoKSl7Y29uc3QgaD1uZXcgQ3MobyxhKTtyLm9uS2V5Ym9hcmRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhoLG8pfXIuYWN0aW9uTWFuYWdlciYmci5hY3Rpb25NYW5hZ2VyLnByb2Nlc3NUcmlnZ2VyKDE0LFZlLkNyZWF0ZU5ld0Zyb21TY2VuZShyLGEpKX0sdGhpcy5fb25LZXlVcD1hPT57Y29uc3Qgbz1KaS5LRVlVUDtpZihyLm9uUHJlS2V5Ym9hcmRPYnNlcnZhYmxlLmhhc09ic2VydmVycygpKXtjb25zdCBoPW5ldyBfcihvLGEpO2lmKHIub25QcmVLZXlib2FyZE9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKGgsbyksaC5za2lwT25LZXlib2FyZE9ic2VydmFibGUpcmV0dXJufWlmKHIub25LZXlib2FyZE9ic2VydmFibGUuaGFzT2JzZXJ2ZXJzKCkpe2NvbnN0IGg9bmV3IENzKG8sYSk7ci5vbktleWJvYXJkT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoaCxvKX1yLmFjdGlvbk1hbmFnZXImJnIuYWN0aW9uTWFuYWdlci5wcm9jZXNzVHJpZ2dlcigxNSxWZS5DcmVhdGVOZXdGcm9tU2NlbmUocixhKSl9LHRoaXMuX2RldmljZVNvdXJjZU1hbmFnZXIub25EZXZpY2VDb25uZWN0ZWRPYnNlcnZhYmxlLmFkZChhPT57YS5kZXZpY2VUeXBlPT09ei5Nb3VzZT9hLm9uSW5wdXRDaGFuZ2VkT2JzZXJ2YWJsZS5hZGQobz0+e28uaW5wdXRJbmRleD09PVEuTGVmdENsaWNrfHxvLmlucHV0SW5kZXg9PT1RLk1pZGRsZUNsaWNrfHxvLmlucHV0SW5kZXg9PT1RLlJpZ2h0Q2xpY2t8fG8uaW5wdXRJbmRleD09PVEuQnJvd3NlckJhY2t8fG8uaW5wdXRJbmRleD09PVEuQnJvd3NlckZvcndhcmQ/dCYmYS5nZXRJbnB1dChvLmlucHV0SW5kZXgpPT09MT90aGlzLl9vblBvaW50ZXJEb3duKG8pOmUmJmEuZ2V0SW5wdXQoby5pbnB1dEluZGV4KT09PTAmJnRoaXMuX29uUG9pbnRlclVwKG8pOmkmJihvLmlucHV0SW5kZXg9PT1RLk1vdmU/dGhpcy5fb25Qb2ludGVyTW92ZShvKTooby5pbnB1dEluZGV4PT09US5Nb3VzZVdoZWVsWHx8by5pbnB1dEluZGV4PT09US5Nb3VzZVdoZWVsWXx8by5pbnB1dEluZGV4PT09US5Nb3VzZVdoZWVsWikmJnRoaXMuX29uUG9pbnRlck1vdmUobykpfSk6YS5kZXZpY2VUeXBlPT09ei5Ub3VjaD9hLm9uSW5wdXRDaGFuZ2VkT2JzZXJ2YWJsZS5hZGQobz0+e28uaW5wdXRJbmRleD09PVEuTGVmdENsaWNrJiYodCYmYS5nZXRJbnB1dChvLmlucHV0SW5kZXgpPT09MT90aGlzLl9vblBvaW50ZXJEb3duKG8pOmUmJmEuZ2V0SW5wdXQoby5pbnB1dEluZGV4KT09PTAmJnRoaXMuX29uUG9pbnRlclVwKG8pKSxpJiZvLmlucHV0SW5kZXg9PT1RLk1vdmUmJnRoaXMuX29uUG9pbnRlck1vdmUobyl9KTphLmRldmljZVR5cGU9PT16LktleWJvYXJkJiZhLm9uSW5wdXRDaGFuZ2VkT2JzZXJ2YWJsZS5hZGQobz0+e28udHlwZT09PSJrZXlkb3duIj90aGlzLl9vbktleURvd24obyk6by50eXBlPT09ImtleXVwIiYmdGhpcy5fb25LZXlVcChvKX0pfSksdGhpcy5fYWxyZWFkeUF0dGFjaGVkPSEwfWRldGFjaENvbnRyb2woKXt0aGlzLl9hbHJlYWR5QXR0YWNoZWQmJih0aGlzLl9kZXZpY2VTb3VyY2VNYW5hZ2VyLmRpc3Bvc2UoKSx0aGlzLl9kZXZpY2VTb3VyY2VNYW5hZ2VyPW51bGwsdGhpcy5fYWxyZWFkeUF0dGFjaGVkVG8mJiF0aGlzLl9zY2VuZS5kb05vdEhhbmRsZUN1cnNvcnMmJih0aGlzLl9hbHJlYWR5QXR0YWNoZWRUby5zdHlsZS5jdXJzb3I9dGhpcy5fc2NlbmUuZGVmYXVsdEN1cnNvciksdGhpcy5fYWxyZWFkeUF0dGFjaGVkPSExLHRoaXMuX2FscmVhZHlBdHRhY2hlZFRvPW51bGwpfXNldFBvaW50ZXJPdmVyTWVzaChlLHQ9MCxpKXtpZih0aGlzLl9tZXNoVW5kZXJQb2ludGVySWRbdF09PT1lJiYoIWV8fCFlLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9wb2ludGVyT3ZlckRpc2FibGVNZXNoVGVzdGluZykpcmV0dXJuO2NvbnN0IHM9dGhpcy5fbWVzaFVuZGVyUG9pbnRlcklkW3RdO2xldCByO3MmJihyPXMuX2dldEFjdGlvbk1hbmFnZXJGb3JUcmlnZ2VyKDEwKSxyJiZyLnByb2Nlc3NUcmlnZ2VyKDEwLFZlLkNyZWF0ZU5ldyhzLHZvaWQgMCx7cG9pbnRlcklkOnR9KSkpLGU/KHRoaXMuX21lc2hVbmRlclBvaW50ZXJJZFt0XT1lLHRoaXMuX3BvaW50ZXJPdmVyTWVzaD1lLHI9ZS5fZ2V0QWN0aW9uTWFuYWdlckZvclRyaWdnZXIoOSksciYmci5wcm9jZXNzVHJpZ2dlcig5LFZlLkNyZWF0ZU5ldyhlLHZvaWQgMCx7cG9pbnRlcklkOnQscGlja1Jlc3VsdDppfSkpKTooZGVsZXRlIHRoaXMuX21lc2hVbmRlclBvaW50ZXJJZFt0XSx0aGlzLl9wb2ludGVyT3Zlck1lc2g9bnVsbCl9Z2V0UG9pbnRlck92ZXJNZXNoKCl7cmV0dXJuIHRoaXMubWVzaFVuZGVyUG9pbnRlcn1faW52YWxpZGF0ZU1lc2goZSl7dGhpcy5fcG9pbnRlck92ZXJNZXNoPT09ZSYmKHRoaXMuX3BvaW50ZXJPdmVyTWVzaD1udWxsKSx0aGlzLl9waWNrZWREb3duTWVzaD09PWUmJih0aGlzLl9waWNrZWREb3duTWVzaD1udWxsKSx0aGlzLl9waWNrZWRVcE1lc2g9PT1lJiYodGhpcy5fcGlja2VkVXBNZXNoPW51bGwpO2Zvcihjb25zdCB0IGluIHRoaXMuX21lc2hVbmRlclBvaW50ZXJJZCl0aGlzLl9tZXNoVW5kZXJQb2ludGVySWRbdF09PT1lJiZkZWxldGUgdGhpcy5fbWVzaFVuZGVyUG9pbnRlcklkW3RdfX1EZS5EcmFnTW92ZW1lbnRUaHJlc2hvbGQ9MTAsRGUuTG9uZ1ByZXNzRGVsYXk9NTAwLERlLkRvdWJsZUNsaWNrRGVsYXk9MzAwLERlLkV4Y2x1c2l2ZURvdWJsZUNsaWNrTW9kZT0hMTtjbGFzcyB4dHtjb25zdHJ1Y3RvcihlLHQsaSxzKXt0aGlzLm5vcm1hbD1uZXcgcChlLHQsaSksdGhpcy5kPXN9YXNBcnJheSgpe3JldHVyblt0aGlzLm5vcm1hbC54LHRoaXMubm9ybWFsLnksdGhpcy5ub3JtYWwueix0aGlzLmRdfWNsb25lKCl7cmV0dXJuIG5ldyB4dCh0aGlzLm5vcm1hbC54LHRoaXMubm9ybWFsLnksdGhpcy5ub3JtYWwueix0aGlzLmQpfWdldENsYXNzTmFtZSgpe3JldHVybiJQbGFuZSJ9Z2V0SGFzaENvZGUoKXtsZXQgZT10aGlzLm5vcm1hbC5nZXRIYXNoQ29kZSgpO3JldHVybiBlPWUqMzk3Xih0aGlzLmR8MCksZX1ub3JtYWxpemUoKXtjb25zdCBlPU1hdGguc3FydCh0aGlzLm5vcm1hbC54KnRoaXMubm9ybWFsLngrdGhpcy5ub3JtYWwueSp0aGlzLm5vcm1hbC55K3RoaXMubm9ybWFsLnoqdGhpcy5ub3JtYWwueik7bGV0IHQ9MDtyZXR1cm4gZSE9PTAmJih0PTEvZSksdGhpcy5ub3JtYWwueCo9dCx0aGlzLm5vcm1hbC55Kj10LHRoaXMubm9ybWFsLnoqPXQsdGhpcy5kKj10LHRoaXN9dHJhbnNmb3JtKGUpe2NvbnN0IHQ9eHQuX1RtcE1hdHJpeDtlLmludmVydFRvUmVmKHQpO2NvbnN0IGk9dC5tLHM9dGhpcy5ub3JtYWwueCxyPXRoaXMubm9ybWFsLnksbj10aGlzLm5vcm1hbC56LGE9dGhpcy5kLG89cyppWzBdK3IqaVsxXStuKmlbMl0rYSppWzNdLGg9cyppWzRdK3IqaVs1XStuKmlbNl0rYSppWzddLGw9cyppWzhdK3IqaVs5XStuKmlbMTBdK2EqaVsxMV0sdT1zKmlbMTJdK3IqaVsxM10rbippWzE0XSthKmlbMTVdO3JldHVybiBuZXcgeHQobyxoLGwsdSl9ZG90Q29vcmRpbmF0ZShlKXtyZXR1cm4gdGhpcy5ub3JtYWwueCplLngrdGhpcy5ub3JtYWwueSplLnkrdGhpcy5ub3JtYWwueiplLnordGhpcy5kfWNvcHlGcm9tUG9pbnRzKGUsdCxpKXtjb25zdCBzPXQueC1lLngscj10LnktZS55LG49dC56LWUueixhPWkueC1lLngsbz1pLnktZS55LGg9aS56LWUueixsPXIqaC1uKm8sdT1uKmEtcypoLGQ9cypvLXIqYSxmPU1hdGguc3FydChsKmwrdSp1K2QqZCk7bGV0IF87cmV0dXJuIGYhPT0wP189MS9mOl89MCx0aGlzLm5vcm1hbC54PWwqXyx0aGlzLm5vcm1hbC55PXUqXyx0aGlzLm5vcm1hbC56PWQqXyx0aGlzLmQ9LSh0aGlzLm5vcm1hbC54KmUueCt0aGlzLm5vcm1hbC55KmUueSt0aGlzLm5vcm1hbC56KmUueiksdGhpc31pc0Zyb250RmFjaW5nVG8oZSx0KXtyZXR1cm4gcC5Eb3QodGhpcy5ub3JtYWwsZSk8PXR9c2lnbmVkRGlzdGFuY2VUbyhlKXtyZXR1cm4gcC5Eb3QoZSx0aGlzLm5vcm1hbCkrdGhpcy5kfXN0YXRpYyBGcm9tQXJyYXkoZSl7cmV0dXJuIG5ldyB4dChlWzBdLGVbMV0sZVsyXSxlWzNdKX1zdGF0aWMgRnJvbVBvaW50cyhlLHQsaSl7Y29uc3Qgcz1uZXcgeHQoMCwwLDAsMCk7cmV0dXJuIHMuY29weUZyb21Qb2ludHMoZSx0LGkpLHN9c3RhdGljIEZyb21Qb3NpdGlvbkFuZE5vcm1hbChlLHQpe2NvbnN0IGk9bmV3IHh0KDAsMCwwLDApO3JldHVybiB0Lm5vcm1hbGl6ZSgpLGkubm9ybWFsPXQsaS5kPS0odC54KmUueCt0LnkqZS55K3QueiplLnopLGl9c3RhdGljIFNpZ25lZERpc3RhbmNlVG9QbGFuZUZyb21Qb3NpdGlvbkFuZE5vcm1hbChlLHQsaSl7Y29uc3Qgcz0tKHQueCplLngrdC55KmUueSt0LnoqZS56KTtyZXR1cm4gcC5Eb3QoaSx0KStzfX14dC5fVG1wTWF0cml4PXguSWRlbnRpdHkoKTtjbGFzcyBFdHtzdGF0aWMgR2V0UGxhbmVzKGUpe2NvbnN0IHQ9W107Zm9yKGxldCBpPTA7aTw2O2krKyl0LnB1c2gobmV3IHh0KDAsMCwwLDApKTtyZXR1cm4gRXQuR2V0UGxhbmVzVG9SZWYoZSx0KSx0fXN0YXRpYyBHZXROZWFyUGxhbmVUb1JlZihlLHQpe2NvbnN0IGk9ZS5tO3Qubm9ybWFsLng9aVszXStpWzJdLHQubm9ybWFsLnk9aVs3XStpWzZdLHQubm9ybWFsLno9aVsxMV0raVsxMF0sdC5kPWlbMTVdK2lbMTRdLHQubm9ybWFsaXplKCl9c3RhdGljIEdldEZhclBsYW5lVG9SZWYoZSx0KXtjb25zdCBpPWUubTt0Lm5vcm1hbC54PWlbM10taVsyXSx0Lm5vcm1hbC55PWlbN10taVs2XSx0Lm5vcm1hbC56PWlbMTFdLWlbMTBdLHQuZD1pWzE1XS1pWzE0XSx0Lm5vcm1hbGl6ZSgpfXN0YXRpYyBHZXRMZWZ0UGxhbmVUb1JlZihlLHQpe2NvbnN0IGk9ZS5tO3Qubm9ybWFsLng9aVszXStpWzBdLHQubm9ybWFsLnk9aVs3XStpWzRdLHQubm9ybWFsLno9aVsxMV0raVs4XSx0LmQ9aVsxNV0raVsxMl0sdC5ub3JtYWxpemUoKX1zdGF0aWMgR2V0UmlnaHRQbGFuZVRvUmVmKGUsdCl7Y29uc3QgaT1lLm07dC5ub3JtYWwueD1pWzNdLWlbMF0sdC5ub3JtYWwueT1pWzddLWlbNF0sdC5ub3JtYWwuej1pWzExXS1pWzhdLHQuZD1pWzE1XS1pWzEyXSx0Lm5vcm1hbGl6ZSgpfXN0YXRpYyBHZXRUb3BQbGFuZVRvUmVmKGUsdCl7Y29uc3QgaT1lLm07dC5ub3JtYWwueD1pWzNdLWlbMV0sdC5ub3JtYWwueT1pWzddLWlbNV0sdC5ub3JtYWwuej1pWzExXS1pWzldLHQuZD1pWzE1XS1pWzEzXSx0Lm5vcm1hbGl6ZSgpfXN0YXRpYyBHZXRCb3R0b21QbGFuZVRvUmVmKGUsdCl7Y29uc3QgaT1lLm07dC5ub3JtYWwueD1pWzNdK2lbMV0sdC5ub3JtYWwueT1pWzddK2lbNV0sdC5ub3JtYWwuej1pWzExXStpWzldLHQuZD1pWzE1XStpWzEzXSx0Lm5vcm1hbGl6ZSgpfXN0YXRpYyBHZXRQbGFuZXNUb1JlZihlLHQpe0V0LkdldE5lYXJQbGFuZVRvUmVmKGUsdFswXSksRXQuR2V0RmFyUGxhbmVUb1JlZihlLHRbMV0pLEV0LkdldExlZnRQbGFuZVRvUmVmKGUsdFsyXSksRXQuR2V0UmlnaHRQbGFuZVRvUmVmKGUsdFszXSksRXQuR2V0VG9wUGxhbmVUb1JlZihlLHRbNF0pLEV0LkdldEJvdHRvbVBsYW5lVG9SZWYoZSx0WzVdKX19Y2xhc3MgTXJ7c3RhdGljIGdldCBVbmlxdWVJZCgpe2NvbnN0IGU9dGhpcy5fVW5pcXVlSWRDb3VudGVyO3JldHVybiB0aGlzLl9VbmlxdWVJZENvdW50ZXIrKyxlfX1Nci5fVW5pcXVlSWRDb3VudGVyPTE7Y2xhc3MgRWV7c3RhdGljIENvbXBhcmVMaWdodHNQcmlvcml0eShlLHQpe3JldHVybiBlLnNoYWRvd0VuYWJsZWQhPT10LnNoYWRvd0VuYWJsZWQ/KHQuc2hhZG93RW5hYmxlZD8xOjApLShlLnNoYWRvd0VuYWJsZWQ/MTowKTp0LnJlbmRlclByaW9yaXR5LWUucmVuZGVyUHJpb3JpdHl9fUVlLkZBTExPRkZfREVGQVVMVD0wLEVlLkZBTExPRkZfUEhZU0lDQUw9MSxFZS5GQUxMT0ZGX0dMVEY9MixFZS5GQUxMT0ZGX1NUQU5EQVJEPTMsRWUuTElHSFRNQVBfREVGQVVMVD0wLEVlLkxJR0hUTUFQX1NQRUNVTEFSPTEsRWUuTElHSFRNQVBfU0hBRE9XU09OTFk9MixFZS5JTlRFTlNJVFlNT0RFX0FVVE9NQVRJQz0wLEVlLklOVEVOU0lUWU1PREVfTFVNSU5PVVNQT1dFUj0xLEVlLklOVEVOU0lUWU1PREVfTFVNSU5PVVNJTlRFTlNJVFk9MixFZS5JTlRFTlNJVFlNT0RFX0lMTFVNSU5BTkNFPTMsRWUuSU5URU5TSVRZTU9ERV9MVU1JTkFOQ0U9NCxFZS5MSUdIVFRZUEVJRF9QT0lOVExJR0hUPTAsRWUuTElHSFRUWVBFSURfRElSRUNUSU9OQUxMSUdIVD0xLEVlLkxJR0hUVFlQRUlEX1NQT1RMSUdIVD0yLEVlLkxJR0hUVFlQRUlEX0hFTUlTUEhFUklDTElHSFQ9Mzt2YXIgQ3Q7KGZ1bmN0aW9uKGMpe2NbYy5CYWNrd2FyZENvbXBhdGlibGU9MF09IkJhY2t3YXJkQ29tcGF0aWJsZSIsY1tjLkludGVybWVkaWF0ZT0xXT0iSW50ZXJtZWRpYXRlIixjW2MuQWdncmVzc2l2ZT0yXT0iQWdncmVzc2l2ZSJ9KShDdHx8KEN0PXt9KSk7Y2xhc3MgbmUgZXh0ZW5kcyBaaXtjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCksdGhpcy5faW5wdXRNYW5hZ2VyPW5ldyBEZSh0aGlzKSx0aGlzLmNhbWVyYVRvVXNlRm9yUG9pbnRlcnM9bnVsbCx0aGlzLl9pc1NjZW5lPSEwLHRoaXMuX2Jsb2NrRW50aXR5Q29sbGVjdGlvbj0hMSx0aGlzLmF1dG9DbGVhcj0hMCx0aGlzLmF1dG9DbGVhckRlcHRoQW5kU3RlbmNpbD0hMCx0aGlzLmNsZWFyQ29sb3I9bmV3IG1lKC4yLC4yLC4zLDEpLHRoaXMuYW1iaWVudENvbG9yPW5ldyByZSgwLDAsMCksdGhpcy5lbnZpcm9ubWVudEludGVuc2l0eT0xLHRoaXMuX3BlcmZvcm1hbmNlUHJpb3JpdHk9Q3QuQmFja3dhcmRDb21wYXRpYmxlLHRoaXMuX2ZvcmNlV2lyZWZyYW1lPSExLHRoaXMuX3NraXBGcnVzdHVtQ2xpcHBpbmc9ITEsdGhpcy5fZm9yY2VQb2ludHNDbG91ZD0hMSx0aGlzLmFuaW1hdGlvbnNFbmFibGVkPSEwLHRoaXMuX2FuaW1hdGlvblByb3BlcnRpZXNPdmVycmlkZT1udWxsLHRoaXMudXNlQ29uc3RhbnRBbmltYXRpb25EZWx0YVRpbWU9ITEsdGhpcy5jb25zdGFudGx5VXBkYXRlTWVzaFVuZGVyUG9pbnRlcj0hMSx0aGlzLmhvdmVyQ3Vyc29yPSJwb2ludGVyIix0aGlzLmRlZmF1bHRDdXJzb3I9IiIsdGhpcy5kb05vdEhhbmRsZUN1cnNvcnM9ITEsdGhpcy5wcmV2ZW50RGVmYXVsdE9uUG9pbnRlckRvd249ITAsdGhpcy5wcmV2ZW50RGVmYXVsdE9uUG9pbnRlclVwPSEwLHRoaXMubWV0YWRhdGE9bnVsbCx0aGlzLnJlc2VydmVkRGF0YVN0b3JlPW51bGwsdGhpcy5kaXNhYmxlT2ZmbGluZVN1cHBvcnRFeGNlcHRpb25SdWxlcz1uZXcgQXJyYXksdGhpcy5vbkRpc3Bvc2VPYnNlcnZhYmxlPW5ldyBGLHRoaXMuX29uRGlzcG9zZU9ic2VydmVyPW51bGwsdGhpcy5vbkJlZm9yZVJlbmRlck9ic2VydmFibGU9bmV3IEYsdGhpcy5fb25CZWZvcmVSZW5kZXJPYnNlcnZlcj1udWxsLHRoaXMub25BZnRlclJlbmRlck9ic2VydmFibGU9bmV3IEYsdGhpcy5vbkFmdGVyUmVuZGVyQ2FtZXJhT2JzZXJ2YWJsZT1uZXcgRix0aGlzLl9vbkFmdGVyUmVuZGVyT2JzZXJ2ZXI9bnVsbCx0aGlzLm9uQmVmb3JlQW5pbWF0aW9uc09ic2VydmFibGU9bmV3IEYsdGhpcy5vbkFmdGVyQW5pbWF0aW9uc09ic2VydmFibGU9bmV3IEYsdGhpcy5vbkJlZm9yZURyYXdQaGFzZU9ic2VydmFibGU9bmV3IEYsdGhpcy5vbkFmdGVyRHJhd1BoYXNlT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uUmVhZHlPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25CZWZvcmVDYW1lcmFSZW5kZXJPYnNlcnZhYmxlPW5ldyBGLHRoaXMuX29uQmVmb3JlQ2FtZXJhUmVuZGVyT2JzZXJ2ZXI9bnVsbCx0aGlzLm9uQWZ0ZXJDYW1lcmFSZW5kZXJPYnNlcnZhYmxlPW5ldyBGLHRoaXMuX29uQWZ0ZXJDYW1lcmFSZW5kZXJPYnNlcnZlcj1udWxsLHRoaXMub25CZWZvcmVBY3RpdmVNZXNoZXNFdmFsdWF0aW9uT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uQWZ0ZXJBY3RpdmVNZXNoZXNFdmFsdWF0aW9uT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uQmVmb3JlUGFydGljbGVzUmVuZGVyaW5nT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uQWZ0ZXJQYXJ0aWNsZXNSZW5kZXJpbmdPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25EYXRhTG9hZGVkT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uTmV3Q2FtZXJhQWRkZWRPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25DYW1lcmFSZW1vdmVkT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uTmV3TGlnaHRBZGRlZE9ic2VydmFibGU9bmV3IEYsdGhpcy5vbkxpZ2h0UmVtb3ZlZE9ic2VydmFibGU9bmV3IEYsdGhpcy5vbk5ld0dlb21ldHJ5QWRkZWRPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25HZW9tZXRyeVJlbW92ZWRPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25OZXdUcmFuc2Zvcm1Ob2RlQWRkZWRPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25UcmFuc2Zvcm1Ob2RlUmVtb3ZlZE9ic2VydmFibGU9bmV3IEYsdGhpcy5vbk5ld01lc2hBZGRlZE9ic2VydmFibGU9bmV3IEYsdGhpcy5vbk1lc2hSZW1vdmVkT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uTmV3U2tlbGV0b25BZGRlZE9ic2VydmFibGU9bmV3IEYsdGhpcy5vblNrZWxldG9uUmVtb3ZlZE9ic2VydmFibGU9bmV3IEYsdGhpcy5vbk5ld01hdGVyaWFsQWRkZWRPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25OZXdNdWx0aU1hdGVyaWFsQWRkZWRPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25NYXRlcmlhbFJlbW92ZWRPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25NdWx0aU1hdGVyaWFsUmVtb3ZlZE9ic2VydmFibGU9bmV3IEYsdGhpcy5vbk5ld1RleHR1cmVBZGRlZE9ic2VydmFibGU9bmV3IEYsdGhpcy5vblRleHR1cmVSZW1vdmVkT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uQmVmb3JlUmVuZGVyVGFyZ2V0c1JlbmRlck9ic2VydmFibGU9bmV3IEYsdGhpcy5vbkFmdGVyUmVuZGVyVGFyZ2V0c1JlbmRlck9ic2VydmFibGU9bmV3IEYsdGhpcy5vbkJlZm9yZVN0ZXBPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25BZnRlclN0ZXBPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25BY3RpdmVDYW1lcmFDaGFuZ2VkPW5ldyBGLHRoaXMub25BY3RpdmVDYW1lcmFzQ2hhbmdlZD1uZXcgRix0aGlzLm9uQmVmb3JlUmVuZGVyaW5nR3JvdXBPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25BZnRlclJlbmRlcmluZ0dyb3VwT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uTWVzaEltcG9ydGVkT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uQW5pbWF0aW9uRmlsZUltcG9ydGVkT2JzZXJ2YWJsZT1uZXcgRix0aGlzLl9yZWdpc3RlcmVkRm9yTGF0ZUFuaW1hdGlvbkJpbmRpbmdzPW5ldyBoaSgyNTYpLHRoaXMuc2tpcFBvaW50ZXJNb3ZlUGlja2luZz0hMSx0aGlzLnNraXBQb2ludGVyRG93blBpY2tpbmc9ITEsdGhpcy5za2lwUG9pbnRlclVwUGlja2luZz0hMSx0aGlzLm9uUHJlUG9pbnRlck9ic2VydmFibGU9bmV3IEYsdGhpcy5vblBvaW50ZXJPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25QcmVLZXlib2FyZE9ic2VydmFibGU9bmV3IEYsdGhpcy5vbktleWJvYXJkT2JzZXJ2YWJsZT1uZXcgRix0aGlzLl91c2VSaWdodEhhbmRlZFN5c3RlbT0hMSx0aGlzLl90aW1lQWNjdW11bGF0b3I9MCx0aGlzLl9jdXJyZW50U3RlcElkPTAsdGhpcy5fY3VycmVudEludGVybmFsU3RlcD0wLHRoaXMuX2ZvZ0VuYWJsZWQ9ITAsdGhpcy5fZm9nTW9kZT1uZS5GT0dNT0RFX05PTkUsdGhpcy5mb2dDb2xvcj1uZXcgcmUoLjIsLjIsLjMpLHRoaXMuZm9nRGVuc2l0eT0uMSx0aGlzLmZvZ1N0YXJ0PTAsdGhpcy5mb2dFbmQ9MWUzLHRoaXMubmVlZHNQcmV2aW91c1dvcmxkTWF0cmljZXM9ITEsdGhpcy5fc2hhZG93c0VuYWJsZWQ9ITAsdGhpcy5fbGlnaHRzRW5hYmxlZD0hMCx0aGlzLl91bk9ic2VydmVBY3RpdmVDYW1lcmFzPW51bGwsdGhpcy5fdGV4dHVyZXNFbmFibGVkPSEwLHRoaXMucGh5c2ljc0VuYWJsZWQ9ITAsdGhpcy5wYXJ0aWNsZXNFbmFibGVkPSEwLHRoaXMuc3ByaXRlc0VuYWJsZWQ9ITAsdGhpcy5fc2tlbGV0b25zRW5hYmxlZD0hMCx0aGlzLmxlbnNGbGFyZXNFbmFibGVkPSEwLHRoaXMuY29sbGlzaW9uc0VuYWJsZWQ9ITAsdGhpcy5ncmF2aXR5PW5ldyBwKDAsLTkuODA3LDApLHRoaXMucG9zdFByb2Nlc3Nlc0VuYWJsZWQ9ITAsdGhpcy5yZW5kZXJUYXJnZXRzRW5hYmxlZD0hMCx0aGlzLmR1bXBOZXh0UmVuZGVyVGFyZ2V0cz0hMSx0aGlzLmN1c3RvbVJlbmRlclRhcmdldHM9bmV3IEFycmF5LHRoaXMuaW1wb3J0ZWRNZXNoZXNGaWxlcz1uZXcgQXJyYXksdGhpcy5wcm9iZXNFbmFibGVkPSEwLHRoaXMuX21lc2hlc0ZvckludGVyc2VjdGlvbnM9bmV3IGhpKDI1NiksdGhpcy5wcm9jZWR1cmFsVGV4dHVyZXNFbmFibGVkPSEwLHRoaXMuX3RvdGFsVmVydGljZXM9bmV3IFJ0LHRoaXMuX2FjdGl2ZUluZGljZXM9bmV3IFJ0LHRoaXMuX2FjdGl2ZVBhcnRpY2xlcz1uZXcgUnQsdGhpcy5fYWN0aXZlQm9uZXM9bmV3IFJ0LHRoaXMuX2FuaW1hdGlvblRpbWU9MCx0aGlzLmFuaW1hdGlvblRpbWVTY2FsZT0xLHRoaXMuX3JlbmRlcklkPTAsdGhpcy5fZnJhbWVJZD0wLHRoaXMuX2V4ZWN1dGVXaGVuUmVhZHlUaW1lb3V0SWQ9bnVsbCx0aGlzLl9pbnRlcm1lZGlhdGVSZW5kZXJpbmc9ITEsdGhpcy5fZGVmYXVsdEZyYW1lQnVmZmVyQ2xlYXJlZD0hMSx0aGlzLl92aWV3VXBkYXRlRmxhZz0tMSx0aGlzLl9wcm9qZWN0aW9uVXBkYXRlRmxhZz0tMSx0aGlzLl90b0JlRGlzcG9zZWQ9bmV3IEFycmF5KDI1NiksdGhpcy5fYWN0aXZlUmVxdWVzdHM9bmV3IEFycmF5LHRoaXMuX3BlbmRpbmdEYXRhPW5ldyBBcnJheSx0aGlzLl9pc0Rpc3Bvc2VkPSExLHRoaXMuZGlzcGF0Y2hBbGxTdWJNZXNoZXNPZkFjdGl2ZU1lc2hlcz0hMSx0aGlzLl9hY3RpdmVNZXNoZXM9bmV3ICRlKDI1NiksdGhpcy5fcHJvY2Vzc2VkTWF0ZXJpYWxzPW5ldyAkZSgyNTYpLHRoaXMuX3JlbmRlclRhcmdldHM9bmV3IGhpKDI1NiksdGhpcy5fbWF0ZXJpYWxzUmVuZGVyVGFyZ2V0cz1uZXcgaGkoMjU2KSx0aGlzLl9hY3RpdmVQYXJ0aWNsZVN5c3RlbXM9bmV3ICRlKDI1NiksdGhpcy5fYWN0aXZlU2tlbGV0b25zPW5ldyBoaSgzMiksdGhpcy5fc29mdHdhcmVTa2lubmVkTWVzaGVzPW5ldyBoaSgzMiksdGhpcy5fYWN0aXZlQW5pbWF0YWJsZXM9bmV3IEFycmF5LHRoaXMuX3RyYW5zZm9ybU1hdHJpeD14Llplcm8oKSx0aGlzLnJlcXVpcmVMaWdodFNvcnRpbmc9ITEsdGhpcy5fY29tcG9uZW50cz1bXSx0aGlzLl9zZXJpYWxpemFibGVDb21wb25lbnRzPVtdLHRoaXMuX3RyYW5zaWVudENvbXBvbmVudHM9W10sdGhpcy5fYmVmb3JlQ2FtZXJhVXBkYXRlU3RhZ2U9SWUuQ3JlYXRlKCksdGhpcy5fYmVmb3JlQ2xlYXJTdGFnZT1JZS5DcmVhdGUoKSx0aGlzLl9iZWZvcmVSZW5kZXJUYXJnZXRDbGVhclN0YWdlPUllLkNyZWF0ZSgpLHRoaXMuX2dhdGhlclJlbmRlclRhcmdldHNTdGFnZT1JZS5DcmVhdGUoKSx0aGlzLl9nYXRoZXJBY3RpdmVDYW1lcmFSZW5kZXJUYXJnZXRzU3RhZ2U9SWUuQ3JlYXRlKCksdGhpcy5faXNSZWFkeUZvck1lc2hTdGFnZT1JZS5DcmVhdGUoKSx0aGlzLl9iZWZvcmVFdmFsdWF0ZUFjdGl2ZU1lc2hTdGFnZT1JZS5DcmVhdGUoKSx0aGlzLl9ldmFsdWF0ZVN1Yk1lc2hTdGFnZT1JZS5DcmVhdGUoKSx0aGlzLl9wcmVBY3RpdmVNZXNoU3RhZ2U9SWUuQ3JlYXRlKCksdGhpcy5fY2FtZXJhRHJhd1JlbmRlclRhcmdldFN0YWdlPUllLkNyZWF0ZSgpLHRoaXMuX2JlZm9yZUNhbWVyYURyYXdTdGFnZT1JZS5DcmVhdGUoKSx0aGlzLl9iZWZvcmVSZW5kZXJUYXJnZXREcmF3U3RhZ2U9SWUuQ3JlYXRlKCksdGhpcy5fYmVmb3JlUmVuZGVyaW5nR3JvdXBEcmF3U3RhZ2U9SWUuQ3JlYXRlKCksdGhpcy5fYmVmb3JlUmVuZGVyaW5nTWVzaFN0YWdlPUllLkNyZWF0ZSgpLHRoaXMuX2FmdGVyUmVuZGVyaW5nTWVzaFN0YWdlPUllLkNyZWF0ZSgpLHRoaXMuX2FmdGVyUmVuZGVyaW5nR3JvdXBEcmF3U3RhZ2U9SWUuQ3JlYXRlKCksdGhpcy5fYWZ0ZXJDYW1lcmFEcmF3U3RhZ2U9SWUuQ3JlYXRlKCksdGhpcy5fYWZ0ZXJDYW1lcmFQb3N0UHJvY2Vzc1N0YWdlPUllLkNyZWF0ZSgpLHRoaXMuX2FmdGVyUmVuZGVyVGFyZ2V0RHJhd1N0YWdlPUllLkNyZWF0ZSgpLHRoaXMuX2FmdGVyUmVuZGVyVGFyZ2V0UG9zdFByb2Nlc3NTdGFnZT1JZS5DcmVhdGUoKSx0aGlzLl9hZnRlclJlbmRlclN0YWdlPUllLkNyZWF0ZSgpLHRoaXMuX3BvaW50ZXJNb3ZlU3RhZ2U9SWUuQ3JlYXRlKCksdGhpcy5fcG9pbnRlckRvd25TdGFnZT1JZS5DcmVhdGUoKSx0aGlzLl9wb2ludGVyVXBTdGFnZT1JZS5DcmVhdGUoKSx0aGlzLl9nZW9tZXRyaWVzQnlVbmlxdWVJZD1udWxsLHRoaXMuX2RlZmF1bHRNZXNoQ2FuZGlkYXRlcz17ZGF0YTpbXSxsZW5ndGg6MH0sdGhpcy5fZGVmYXVsdFN1Yk1lc2hDYW5kaWRhdGVzPXtkYXRhOltdLGxlbmd0aDowfSx0aGlzLl9wcmV2ZW50RnJlZUFjdGl2ZU1lc2hlc0FuZFJlbmRlcmluZ0dyb3Vwcz0hMSx0aGlzLl9hY3RpdmVNZXNoZXNGcm96ZW49ITEsdGhpcy5fYWN0aXZlTWVzaGVzRnJvemVuQnV0S2VlcENsaXBwaW5nPSExLHRoaXMuX3NraXBFdmFsdWF0ZUFjdGl2ZU1lc2hlc0NvbXBsZXRlbHk9ITEsdGhpcy5fYWxsb3dQb3N0UHJvY2Vzc0NsZWFyQ29sb3I9ITAsdGhpcy5nZXREZXRlcm1pbmlzdGljRnJhbWVUaW1lPSgpPT50aGlzLl9lbmdpbmUuZ2V0VGltZVN0ZXAoKSx0aGlzLl9yZWdpc3RlcmVkQWN0aW9ucz0wLHRoaXMuX2Jsb2NrTWF0ZXJpYWxEaXJ0eU1lY2hhbmlzbT0hMSx0aGlzLl9wZXJmQ29sbGVjdG9yPW51bGwsdGhpcy5hY3RpdmVDYW1lcmFzPW5ldyBBcnJheTtjb25zdCBpPXt1c2VHZW9tZXRyeVVuaXF1ZUlkc01hcDohMCx1c2VNYXRlcmlhbE1lc2hNYXA6ITAsdXNlQ2xvbmVkTWVzaE1hcDohMCx2aXJ0dWFsOiExLC4uLnR9O3RoaXMuX2VuZ2luZT1lfHxmZS5MYXN0Q3JlYXRlZEVuZ2luZSxpLnZpcnR1YWw/dGhpcy5fZW5naW5lLl92aXJ0dWFsU2NlbmVzLnB1c2godGhpcyk6KGZlLl9MYXN0Q3JlYXRlZFNjZW5lPXRoaXMsdGhpcy5fZW5naW5lLnNjZW5lcy5wdXNoKHRoaXMpKSx0aGlzLl91aWQ9bnVsbCx0aGlzLl9yZW5kZXJpbmdNYW5hZ2VyPW5ldyBXZSh0aGlzKSxRaSYmKHRoaXMucG9zdFByb2Nlc3NNYW5hZ2VyPW5ldyBRaSh0aGlzKSksamUoKSYmdGhpcy5hdHRhY2hDb250cm9sKCksdGhpcy5fY3JlYXRlVWJvKCkscGUmJih0aGlzLl9pbWFnZVByb2Nlc3NpbmdDb25maWd1cmF0aW9uPW5ldyBwZSksdGhpcy5zZXREZWZhdWx0Q2FuZGlkYXRlUHJvdmlkZXJzKCksaS51c2VHZW9tZXRyeVVuaXF1ZUlkc01hcCYmKHRoaXMuX2dlb21ldHJpZXNCeVVuaXF1ZUlkPXt9KSx0aGlzLnVzZU1hdGVyaWFsTWVzaE1hcD1pLnVzZU1hdGVyaWFsTWVzaE1hcCx0aGlzLnVzZUNsb25lZE1lc2hNYXA9aS51c2VDbG9uZWRNZXNoTWFwLCghdHx8IXQudmlydHVhbCkmJnRoaXMuX2VuZ2luZS5vbk5ld1NjZW5lQWRkZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKX1zdGF0aWMgRGVmYXVsdE1hdGVyaWFsRmFjdG9yeShlKXt0aHJvdyAkKCJTdGFuZGFyZE1hdGVyaWFsIil9c3RhdGljIENvbGxpc2lvbkNvb3JkaW5hdG9yRmFjdG9yeSgpe3Rocm93ICQoIkRlZmF1bHRDb2xsaXNpb25Db29yZGluYXRvciIpfWdldCBlbnZpcm9ubWVudFRleHR1cmUoKXtyZXR1cm4gdGhpcy5fZW52aXJvbm1lbnRUZXh0dXJlfXNldCBlbnZpcm9ubWVudFRleHR1cmUoZSl7dGhpcy5fZW52aXJvbm1lbnRUZXh0dXJlIT09ZSYmKHRoaXMuX2Vudmlyb25tZW50VGV4dHVyZT1lLHRoaXMubWFya0FsbE1hdGVyaWFsc0FzRGlydHkoMSkpfWdldCBpbWFnZVByb2Nlc3NpbmdDb25maWd1cmF0aW9uKCl7cmV0dXJuIHRoaXMuX2ltYWdlUHJvY2Vzc2luZ0NvbmZpZ3VyYXRpb259Z2V0IHBlcmZvcm1hbmNlUHJpb3JpdHkoKXtyZXR1cm4gdGhpcy5fcGVyZm9ybWFuY2VQcmlvcml0eX1zZXQgcGVyZm9ybWFuY2VQcmlvcml0eShlKXtpZihlIT09dGhpcy5fcGVyZm9ybWFuY2VQcmlvcml0eSlzd2l0Y2godGhpcy5fcGVyZm9ybWFuY2VQcmlvcml0eT1lLGUpe2Nhc2UgQ3QuQmFja3dhcmRDb21wYXRpYmxlOnRoaXMuc2tpcEZydXN0dW1DbGlwcGluZz0hMSx0aGlzLl9yZW5kZXJpbmdNYW5hZ2VyLm1haW50YWluU3RhdGVCZXR3ZWVuRnJhbWVzPSExLHRoaXMuc2tpcFBvaW50ZXJNb3ZlUGlja2luZz0hMSx0aGlzLmF1dG9DbGVhcj0hMDticmVhaztjYXNlIEN0LkludGVybWVkaWF0ZTp0aGlzLnNraXBGcnVzdHVtQ2xpcHBpbmc9ITEsdGhpcy5fcmVuZGVyaW5nTWFuYWdlci5tYWludGFpblN0YXRlQmV0d2VlbkZyYW1lcz0hMSx0aGlzLnNraXBQb2ludGVyTW92ZVBpY2tpbmc9ITAsdGhpcy5hdXRvQ2xlYXI9ITE7YnJlYWs7Y2FzZSBDdC5BZ2dyZXNzaXZlOnRoaXMuc2tpcEZydXN0dW1DbGlwcGluZz0hMCx0aGlzLl9yZW5kZXJpbmdNYW5hZ2VyLm1haW50YWluU3RhdGVCZXR3ZWVuRnJhbWVzPSEwLHRoaXMuc2tpcFBvaW50ZXJNb3ZlUGlja2luZz0hMCx0aGlzLmF1dG9DbGVhcj0hMTticmVha319c2V0IGZvcmNlV2lyZWZyYW1lKGUpe3RoaXMuX2ZvcmNlV2lyZWZyYW1lIT09ZSYmKHRoaXMuX2ZvcmNlV2lyZWZyYW1lPWUsdGhpcy5tYXJrQWxsTWF0ZXJpYWxzQXNEaXJ0eSgxNikpfWdldCBmb3JjZVdpcmVmcmFtZSgpe3JldHVybiB0aGlzLl9mb3JjZVdpcmVmcmFtZX1zZXQgc2tpcEZydXN0dW1DbGlwcGluZyhlKXt0aGlzLl9za2lwRnJ1c3R1bUNsaXBwaW5nIT09ZSYmKHRoaXMuX3NraXBGcnVzdHVtQ2xpcHBpbmc9ZSl9Z2V0IHNraXBGcnVzdHVtQ2xpcHBpbmcoKXtyZXR1cm4gdGhpcy5fc2tpcEZydXN0dW1DbGlwcGluZ31zZXQgZm9yY2VQb2ludHNDbG91ZChlKXt0aGlzLl9mb3JjZVBvaW50c0Nsb3VkIT09ZSYmKHRoaXMuX2ZvcmNlUG9pbnRzQ2xvdWQ9ZSx0aGlzLm1hcmtBbGxNYXRlcmlhbHNBc0RpcnR5KDE2KSl9Z2V0IGZvcmNlUG9pbnRzQ2xvdWQoKXtyZXR1cm4gdGhpcy5fZm9yY2VQb2ludHNDbG91ZH1nZXQgYW5pbWF0aW9uUHJvcGVydGllc092ZXJyaWRlKCl7cmV0dXJuIHRoaXMuX2FuaW1hdGlvblByb3BlcnRpZXNPdmVycmlkZX1zZXQgYW5pbWF0aW9uUHJvcGVydGllc092ZXJyaWRlKGUpe3RoaXMuX2FuaW1hdGlvblByb3BlcnRpZXNPdmVycmlkZT1lfXNldCBvbkRpc3Bvc2UoZSl7dGhpcy5fb25EaXNwb3NlT2JzZXJ2ZXImJnRoaXMub25EaXNwb3NlT2JzZXJ2YWJsZS5yZW1vdmUodGhpcy5fb25EaXNwb3NlT2JzZXJ2ZXIpLHRoaXMuX29uRGlzcG9zZU9ic2VydmVyPXRoaXMub25EaXNwb3NlT2JzZXJ2YWJsZS5hZGQoZSl9c2V0IGJlZm9yZVJlbmRlcihlKXt0aGlzLl9vbkJlZm9yZVJlbmRlck9ic2VydmVyJiZ0aGlzLm9uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZS5yZW1vdmUodGhpcy5fb25CZWZvcmVSZW5kZXJPYnNlcnZlciksZSYmKHRoaXMuX29uQmVmb3JlUmVuZGVyT2JzZXJ2ZXI9dGhpcy5vbkJlZm9yZVJlbmRlck9ic2VydmFibGUuYWRkKGUpKX1zZXQgYWZ0ZXJSZW5kZXIoZSl7dGhpcy5fb25BZnRlclJlbmRlck9ic2VydmVyJiZ0aGlzLm9uQWZ0ZXJSZW5kZXJPYnNlcnZhYmxlLnJlbW92ZSh0aGlzLl9vbkFmdGVyUmVuZGVyT2JzZXJ2ZXIpLGUmJih0aGlzLl9vbkFmdGVyUmVuZGVyT2JzZXJ2ZXI9dGhpcy5vbkFmdGVyUmVuZGVyT2JzZXJ2YWJsZS5hZGQoZSkpfXNldCBiZWZvcmVDYW1lcmFSZW5kZXIoZSl7dGhpcy5fb25CZWZvcmVDYW1lcmFSZW5kZXJPYnNlcnZlciYmdGhpcy5vbkJlZm9yZUNhbWVyYVJlbmRlck9ic2VydmFibGUucmVtb3ZlKHRoaXMuX29uQmVmb3JlQ2FtZXJhUmVuZGVyT2JzZXJ2ZXIpLHRoaXMuX29uQmVmb3JlQ2FtZXJhUmVuZGVyT2JzZXJ2ZXI9dGhpcy5vbkJlZm9yZUNhbWVyYVJlbmRlck9ic2VydmFibGUuYWRkKGUpfXNldCBhZnRlckNhbWVyYVJlbmRlcihlKXt0aGlzLl9vbkFmdGVyQ2FtZXJhUmVuZGVyT2JzZXJ2ZXImJnRoaXMub25BZnRlckNhbWVyYVJlbmRlck9ic2VydmFibGUucmVtb3ZlKHRoaXMuX29uQWZ0ZXJDYW1lcmFSZW5kZXJPYnNlcnZlciksdGhpcy5fb25BZnRlckNhbWVyYVJlbmRlck9ic2VydmVyPXRoaXMub25BZnRlckNhbWVyYVJlbmRlck9ic2VydmFibGUuYWRkKGUpfWdldCB1blRyYW5zbGF0ZWRQb2ludGVyKCl7cmV0dXJuIHRoaXMuX2lucHV0TWFuYWdlci51blRyYW5zbGF0ZWRQb2ludGVyfXN0YXRpYyBnZXQgRHJhZ01vdmVtZW50VGhyZXNob2xkKCl7cmV0dXJuIERlLkRyYWdNb3ZlbWVudFRocmVzaG9sZH1zdGF0aWMgc2V0IERyYWdNb3ZlbWVudFRocmVzaG9sZChlKXtEZS5EcmFnTW92ZW1lbnRUaHJlc2hvbGQ9ZX1zdGF0aWMgZ2V0IExvbmdQcmVzc0RlbGF5KCl7cmV0dXJuIERlLkxvbmdQcmVzc0RlbGF5fXN0YXRpYyBzZXQgTG9uZ1ByZXNzRGVsYXkoZSl7RGUuTG9uZ1ByZXNzRGVsYXk9ZX1zdGF0aWMgZ2V0IERvdWJsZUNsaWNrRGVsYXkoKXtyZXR1cm4gRGUuRG91YmxlQ2xpY2tEZWxheX1zdGF0aWMgc2V0IERvdWJsZUNsaWNrRGVsYXkoZSl7RGUuRG91YmxlQ2xpY2tEZWxheT1lfXN0YXRpYyBnZXQgRXhjbHVzaXZlRG91YmxlQ2xpY2tNb2RlKCl7cmV0dXJuIERlLkV4Y2x1c2l2ZURvdWJsZUNsaWNrTW9kZX1zdGF0aWMgc2V0IEV4Y2x1c2l2ZURvdWJsZUNsaWNrTW9kZShlKXtEZS5FeGNsdXNpdmVEb3VibGVDbGlja01vZGU9ZX1iaW5kRXllUG9zaXRpb24oZSx0PSJ2RXllUG9zaXRpb24iLGk9ITEpe3ZhciBzO2NvbnN0IHI9dGhpcy5fZm9yY2VkVmlld1Bvc2l0aW9uP3RoaXMuX2ZvcmNlZFZpZXdQb3NpdGlvbjp0aGlzLl9taXJyb3JlZENhbWVyYVBvc2l0aW9uP3RoaXMuX21pcnJvcmVkQ2FtZXJhUG9zaXRpb246KHM9dGhpcy5hY3RpdmVDYW1lcmEuZ2xvYmFsUG9zaXRpb24pIT09bnVsbCYmcyE9PXZvaWQgMD9zOnRoaXMuYWN0aXZlQ2FtZXJhLmRldmljZVBvc2l0aW9uLG49dGhpcy51c2VSaWdodEhhbmRlZFN5c3RlbT09PSh0aGlzLl9taXJyb3JlZENhbWVyYVBvc2l0aW9uIT1udWxsKTtyZXR1cm4gRC5WZWN0b3I0WzBdLnNldChyLngsci55LHIueixuPy0xOjEpLGUmJihpP2Uuc2V0RmxvYXQzKHQsRC5WZWN0b3I0WzBdLngsRC5WZWN0b3I0WzBdLnksRC5WZWN0b3I0WzBdLnopOmUuc2V0VmVjdG9yNCh0LEQuVmVjdG9yNFswXSkpLEQuVmVjdG9yNFswXX1maW5hbGl6ZVNjZW5lVWJvKCl7Y29uc3QgZT10aGlzLmdldFNjZW5lVW5pZm9ybUJ1ZmZlcigpLHQ9dGhpcy5iaW5kRXllUG9zaXRpb24obnVsbCk7cmV0dXJuIGUudXBkYXRlRmxvYXQ0KCJ2RXllUG9zaXRpb24iLHQueCx0LnksdC56LHQudyksZS51cGRhdGUoKSxlfXNldCB1c2VSaWdodEhhbmRlZFN5c3RlbShlKXt0aGlzLl91c2VSaWdodEhhbmRlZFN5c3RlbSE9PWUmJih0aGlzLl91c2VSaWdodEhhbmRlZFN5c3RlbT1lLHRoaXMubWFya0FsbE1hdGVyaWFsc0FzRGlydHkoMTYpKX1nZXQgdXNlUmlnaHRIYW5kZWRTeXN0ZW0oKXtyZXR1cm4gdGhpcy5fdXNlUmlnaHRIYW5kZWRTeXN0ZW19c2V0U3RlcElkKGUpe3RoaXMuX2N1cnJlbnRTdGVwSWQ9ZX1nZXRTdGVwSWQoKXtyZXR1cm4gdGhpcy5fY3VycmVudFN0ZXBJZH1nZXRJbnRlcm5hbFN0ZXAoKXtyZXR1cm4gdGhpcy5fY3VycmVudEludGVybmFsU3RlcH1zZXQgZm9nRW5hYmxlZChlKXt0aGlzLl9mb2dFbmFibGVkIT09ZSYmKHRoaXMuX2ZvZ0VuYWJsZWQ9ZSx0aGlzLm1hcmtBbGxNYXRlcmlhbHNBc0RpcnR5KDE2KSl9Z2V0IGZvZ0VuYWJsZWQoKXtyZXR1cm4gdGhpcy5fZm9nRW5hYmxlZH1zZXQgZm9nTW9kZShlKXt0aGlzLl9mb2dNb2RlIT09ZSYmKHRoaXMuX2ZvZ01vZGU9ZSx0aGlzLm1hcmtBbGxNYXRlcmlhbHNBc0RpcnR5KDE2KSl9Z2V0IGZvZ01vZGUoKXtyZXR1cm4gdGhpcy5fZm9nTW9kZX1nZXQgcHJlUGFzcygpe3JldHVybiEhdGhpcy5wcmVQYXNzUmVuZGVyZXImJnRoaXMucHJlUGFzc1JlbmRlcmVyLmRlZmF1bHRSVC5lbmFibGVkfXNldCBzaGFkb3dzRW5hYmxlZChlKXt0aGlzLl9zaGFkb3dzRW5hYmxlZCE9PWUmJih0aGlzLl9zaGFkb3dzRW5hYmxlZD1lLHRoaXMubWFya0FsbE1hdGVyaWFsc0FzRGlydHkoMikpfWdldCBzaGFkb3dzRW5hYmxlZCgpe3JldHVybiB0aGlzLl9zaGFkb3dzRW5hYmxlZH1zZXQgbGlnaHRzRW5hYmxlZChlKXt0aGlzLl9saWdodHNFbmFibGVkIT09ZSYmKHRoaXMuX2xpZ2h0c0VuYWJsZWQ9ZSx0aGlzLm1hcmtBbGxNYXRlcmlhbHNBc0RpcnR5KDIpKX1nZXQgbGlnaHRzRW5hYmxlZCgpe3JldHVybiB0aGlzLl9saWdodHNFbmFibGVkfWdldCBhY3RpdmVDYW1lcmFzKCl7cmV0dXJuIHRoaXMuX2FjdGl2ZUNhbWVyYXN9c2V0IGFjdGl2ZUNhbWVyYXMoZSl7dGhpcy5fdW5PYnNlcnZlQWN0aXZlQ2FtZXJhcyYmKHRoaXMuX3VuT2JzZXJ2ZUFjdGl2ZUNhbWVyYXMoKSx0aGlzLl91bk9ic2VydmVBY3RpdmVDYW1lcmFzPW51bGwpLGUmJih0aGlzLl91bk9ic2VydmVBY3RpdmVDYW1lcmFzPSRzKGUsKCk9Pnt0aGlzLm9uQWN0aXZlQ2FtZXJhc0NoYW5nZWQubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpfSkpLHRoaXMuX2FjdGl2ZUNhbWVyYXM9ZX1nZXQgYWN0aXZlQ2FtZXJhKCl7cmV0dXJuIHRoaXMuX2FjdGl2ZUNhbWVyYX1zZXQgYWN0aXZlQ2FtZXJhKGUpe2UhPT10aGlzLl9hY3RpdmVDYW1lcmEmJih0aGlzLl9hY3RpdmVDYW1lcmE9ZSx0aGlzLm9uQWN0aXZlQ2FtZXJhQ2hhbmdlZC5ub3RpZnlPYnNlcnZlcnModGhpcykpfWdldCBkZWZhdWx0TWF0ZXJpYWwoKXtyZXR1cm4gdGhpcy5fZGVmYXVsdE1hdGVyaWFsfHwodGhpcy5fZGVmYXVsdE1hdGVyaWFsPW5lLkRlZmF1bHRNYXRlcmlhbEZhY3RvcnkodGhpcykpLHRoaXMuX2RlZmF1bHRNYXRlcmlhbH1zZXQgZGVmYXVsdE1hdGVyaWFsKGUpe3RoaXMuX2RlZmF1bHRNYXRlcmlhbD1lfXNldCB0ZXh0dXJlc0VuYWJsZWQoZSl7dGhpcy5fdGV4dHVyZXNFbmFibGVkIT09ZSYmKHRoaXMuX3RleHR1cmVzRW5hYmxlZD1lLHRoaXMubWFya0FsbE1hdGVyaWFsc0FzRGlydHkoMSkpfWdldCB0ZXh0dXJlc0VuYWJsZWQoKXtyZXR1cm4gdGhpcy5fdGV4dHVyZXNFbmFibGVkfXNldCBza2VsZXRvbnNFbmFibGVkKGUpe3RoaXMuX3NrZWxldG9uc0VuYWJsZWQhPT1lJiYodGhpcy5fc2tlbGV0b25zRW5hYmxlZD1lLHRoaXMubWFya0FsbE1hdGVyaWFsc0FzRGlydHkoOCkpfWdldCBza2VsZXRvbnNFbmFibGVkKCl7cmV0dXJuIHRoaXMuX3NrZWxldG9uc0VuYWJsZWR9Z2V0IGNvbGxpc2lvbkNvb3JkaW5hdG9yKCl7cmV0dXJuIHRoaXMuX2NvbGxpc2lvbkNvb3JkaW5hdG9yfHwodGhpcy5fY29sbGlzaW9uQ29vcmRpbmF0b3I9bmUuQ29sbGlzaW9uQ29vcmRpbmF0b3JGYWN0b3J5KCksdGhpcy5fY29sbGlzaW9uQ29vcmRpbmF0b3IuaW5pdCh0aGlzKSksdGhpcy5fY29sbGlzaW9uQ29vcmRpbmF0b3J9Z2V0IHJlbmRlcmluZ01hbmFnZXIoKXtyZXR1cm4gdGhpcy5fcmVuZGVyaW5nTWFuYWdlcn1nZXQgZnJ1c3R1bVBsYW5lcygpe3JldHVybiB0aGlzLl9mcnVzdHVtUGxhbmVzfV9yZWdpc3RlclRyYW5zaWVudENvbXBvbmVudHMoKXtpZih0aGlzLl90cmFuc2llbnRDb21wb25lbnRzLmxlbmd0aD4wKXtmb3IoY29uc3QgZSBvZiB0aGlzLl90cmFuc2llbnRDb21wb25lbnRzKWUucmVnaXN0ZXIoKTt0aGlzLl90cmFuc2llbnRDb21wb25lbnRzLmxlbmd0aD0wfX1fYWRkQ29tcG9uZW50KGUpe3RoaXMuX2NvbXBvbmVudHMucHVzaChlKSx0aGlzLl90cmFuc2llbnRDb21wb25lbnRzLnB1c2goZSk7Y29uc3QgdD1lO3QuYWRkRnJvbUNvbnRhaW5lciYmdC5zZXJpYWxpemUmJnRoaXMuX3NlcmlhbGl6YWJsZUNvbXBvbmVudHMucHVzaCh0KX1fZ2V0Q29tcG9uZW50KGUpe2Zvcihjb25zdCB0IG9mIHRoaXMuX2NvbXBvbmVudHMpaWYodC5uYW1lPT09ZSlyZXR1cm4gdDtyZXR1cm4gbnVsbH1nZXRDbGFzc05hbWUoKXtyZXR1cm4iU2NlbmUifV9nZXREZWZhdWx0TWVzaENhbmRpZGF0ZXMoKXtyZXR1cm4gdGhpcy5fZGVmYXVsdE1lc2hDYW5kaWRhdGVzLmRhdGE9dGhpcy5tZXNoZXMsdGhpcy5fZGVmYXVsdE1lc2hDYW5kaWRhdGVzLmxlbmd0aD10aGlzLm1lc2hlcy5sZW5ndGgsdGhpcy5fZGVmYXVsdE1lc2hDYW5kaWRhdGVzfV9nZXREZWZhdWx0U3ViTWVzaENhbmRpZGF0ZXMoZSl7cmV0dXJuIHRoaXMuX2RlZmF1bHRTdWJNZXNoQ2FuZGlkYXRlcy5kYXRhPWUuc3ViTWVzaGVzLHRoaXMuX2RlZmF1bHRTdWJNZXNoQ2FuZGlkYXRlcy5sZW5ndGg9ZS5zdWJNZXNoZXMubGVuZ3RoLHRoaXMuX2RlZmF1bHRTdWJNZXNoQ2FuZGlkYXRlc31zZXREZWZhdWx0Q2FuZGlkYXRlUHJvdmlkZXJzKCl7dGhpcy5nZXRBY3RpdmVNZXNoQ2FuZGlkYXRlcz10aGlzLl9nZXREZWZhdWx0TWVzaENhbmRpZGF0ZXMuYmluZCh0aGlzKSx0aGlzLmdldEFjdGl2ZVN1Yk1lc2hDYW5kaWRhdGVzPXRoaXMuX2dldERlZmF1bHRTdWJNZXNoQ2FuZGlkYXRlcy5iaW5kKHRoaXMpLHRoaXMuZ2V0SW50ZXJzZWN0aW5nU3ViTWVzaENhbmRpZGF0ZXM9dGhpcy5fZ2V0RGVmYXVsdFN1Yk1lc2hDYW5kaWRhdGVzLmJpbmQodGhpcyksdGhpcy5nZXRDb2xsaWRpbmdTdWJNZXNoQ2FuZGlkYXRlcz10aGlzLl9nZXREZWZhdWx0U3ViTWVzaENhbmRpZGF0ZXMuYmluZCh0aGlzKX1nZXQgbWVzaFVuZGVyUG9pbnRlcigpe3JldHVybiB0aGlzLl9pbnB1dE1hbmFnZXIubWVzaFVuZGVyUG9pbnRlcn1nZXQgcG9pbnRlclgoKXtyZXR1cm4gdGhpcy5faW5wdXRNYW5hZ2VyLnBvaW50ZXJYfXNldCBwb2ludGVyWChlKXt0aGlzLl9pbnB1dE1hbmFnZXIucG9pbnRlclg9ZX1nZXQgcG9pbnRlclkoKXtyZXR1cm4gdGhpcy5faW5wdXRNYW5hZ2VyLnBvaW50ZXJZfXNldCBwb2ludGVyWShlKXt0aGlzLl9pbnB1dE1hbmFnZXIucG9pbnRlclk9ZX1nZXRDYWNoZWRNYXRlcmlhbCgpe3JldHVybiB0aGlzLl9jYWNoZWRNYXRlcmlhbH1nZXRDYWNoZWRFZmZlY3QoKXtyZXR1cm4gdGhpcy5fY2FjaGVkRWZmZWN0fWdldENhY2hlZFZpc2liaWxpdHkoKXtyZXR1cm4gdGhpcy5fY2FjaGVkVmlzaWJpbGl0eX1pc0NhY2hlZE1hdGVyaWFsSW52YWxpZChlLHQsaT0xKXtyZXR1cm4gdGhpcy5fY2FjaGVkRWZmZWN0IT09dHx8dGhpcy5fY2FjaGVkTWF0ZXJpYWwhPT1lfHx0aGlzLl9jYWNoZWRWaXNpYmlsaXR5IT09aX1nZXRFbmdpbmUoKXtyZXR1cm4gdGhpcy5fZW5naW5lfWdldFRvdGFsVmVydGljZXMoKXtyZXR1cm4gdGhpcy5fdG90YWxWZXJ0aWNlcy5jdXJyZW50fWdldCB0b3RhbFZlcnRpY2VzUGVyZkNvdW50ZXIoKXtyZXR1cm4gdGhpcy5fdG90YWxWZXJ0aWNlc31nZXRBY3RpdmVJbmRpY2VzKCl7cmV0dXJuIHRoaXMuX2FjdGl2ZUluZGljZXMuY3VycmVudH1nZXQgdG90YWxBY3RpdmVJbmRpY2VzUGVyZkNvdW50ZXIoKXtyZXR1cm4gdGhpcy5fYWN0aXZlSW5kaWNlc31nZXRBY3RpdmVQYXJ0aWNsZXMoKXtyZXR1cm4gdGhpcy5fYWN0aXZlUGFydGljbGVzLmN1cnJlbnR9Z2V0IGFjdGl2ZVBhcnRpY2xlc1BlcmZDb3VudGVyKCl7cmV0dXJuIHRoaXMuX2FjdGl2ZVBhcnRpY2xlc31nZXRBY3RpdmVCb25lcygpe3JldHVybiB0aGlzLl9hY3RpdmVCb25lcy5jdXJyZW50fWdldCBhY3RpdmVCb25lc1BlcmZDb3VudGVyKCl7cmV0dXJuIHRoaXMuX2FjdGl2ZUJvbmVzfWdldEFjdGl2ZU1lc2hlcygpe3JldHVybiB0aGlzLl9hY3RpdmVNZXNoZXN9Z2V0QW5pbWF0aW9uUmF0aW8oKXtyZXR1cm4gdGhpcy5fYW5pbWF0aW9uUmF0aW8hPT12b2lkIDA/dGhpcy5fYW5pbWF0aW9uUmF0aW86MX1nZXRSZW5kZXJJZCgpe3JldHVybiB0aGlzLl9yZW5kZXJJZH1nZXRGcmFtZUlkKCl7cmV0dXJuIHRoaXMuX2ZyYW1lSWR9aW5jcmVtZW50UmVuZGVySWQoKXt0aGlzLl9yZW5kZXJJZCsrfV9jcmVhdGVVYm8oKXt0aGlzLnNldFNjZW5lVW5pZm9ybUJ1ZmZlcih0aGlzLmNyZWF0ZVNjZW5lVW5pZm9ybUJ1ZmZlcigpKX1zaW11bGF0ZVBvaW50ZXJNb3ZlKGUsdCl7cmV0dXJuIHRoaXMuX2lucHV0TWFuYWdlci5zaW11bGF0ZVBvaW50ZXJNb3ZlKGUsdCksdGhpc31zaW11bGF0ZVBvaW50ZXJEb3duKGUsdCl7cmV0dXJuIHRoaXMuX2lucHV0TWFuYWdlci5zaW11bGF0ZVBvaW50ZXJEb3duKGUsdCksdGhpc31zaW11bGF0ZVBvaW50ZXJVcChlLHQsaSl7cmV0dXJuIHRoaXMuX2lucHV0TWFuYWdlci5zaW11bGF0ZVBvaW50ZXJVcChlLHQsaSksdGhpc31pc1BvaW50ZXJDYXB0dXJlZChlPTApe3JldHVybiB0aGlzLl9pbnB1dE1hbmFnZXIuaXNQb2ludGVyQ2FwdHVyZWQoZSl9YXR0YWNoQ29udHJvbChlPSEwLHQ9ITAsaT0hMCl7dGhpcy5faW5wdXRNYW5hZ2VyLmF0dGFjaENvbnRyb2woZSx0LGkpfWRldGFjaENvbnRyb2woKXt0aGlzLl9pbnB1dE1hbmFnZXIuZGV0YWNoQ29udHJvbCgpfWlzUmVhZHkoZT0hMCl7aWYodGhpcy5faXNEaXNwb3NlZClyZXR1cm4hMTtsZXQgdDtjb25zdCBpPXRoaXMuZ2V0RW5naW5lKCk7bGV0IHM9ITA7Zm9yKHRoaXMuX3BlbmRpbmdEYXRhLmxlbmd0aD4wJiYocz0hMSksZSYmKHRoaXMuX3Byb2Nlc3NlZE1hdGVyaWFscy5yZXNldCgpLHRoaXMuX21hdGVyaWFsc1JlbmRlclRhcmdldHMucmVzZXQoKSksdD0wO3Q8dGhpcy5tZXNoZXMubGVuZ3RoO3QrKyl7Y29uc3Qgcj10aGlzLm1lc2hlc1t0XTtpZighci5zdWJNZXNoZXN8fHIuc3ViTWVzaGVzLmxlbmd0aD09PTApY29udGludWU7aWYoIXIuaXNSZWFkeSghMCkpe3M9ITE7Y29udGludWV9Y29uc3Qgbj1yLmhhc1RoaW5JbnN0YW5jZXN8fHIuZ2V0Q2xhc3NOYW1lKCk9PT0iSW5zdGFuY2VkTWVzaCJ8fHIuZ2V0Q2xhc3NOYW1lKCk9PT0iSW5zdGFuY2VkTGluZXNNZXNoInx8aS5nZXRDYXBzKCkuaW5zdGFuY2VkQXJyYXlzJiZyLmluc3RhbmNlcy5sZW5ndGg+MDtmb3IoY29uc3QgbyBvZiB0aGlzLl9pc1JlYWR5Rm9yTWVzaFN0YWdlKW8uYWN0aW9uKHIsbil8fChzPSExKTtpZighZSljb250aW51ZTtjb25zdCBhPXIubWF0ZXJpYWx8fHRoaXMuZGVmYXVsdE1hdGVyaWFsO2lmKGEpaWYoYS5fc3RvcmVFZmZlY3RPblN1Yk1lc2hlcylmb3IoY29uc3QgbyBvZiByLnN1Yk1lc2hlcyl7Y29uc3QgaD1vLmdldE1hdGVyaWFsKCk7aCYmaC5oYXNSZW5kZXJUYXJnZXRUZXh0dXJlcyYmaC5nZXRSZW5kZXJUYXJnZXRUZXh0dXJlcyE9bnVsbCYmdGhpcy5fcHJvY2Vzc2VkTWF0ZXJpYWxzLmluZGV4T2YoaCk9PT0tMSYmKHRoaXMuX3Byb2Nlc3NlZE1hdGVyaWFscy5wdXNoKGgpLHRoaXMuX21hdGVyaWFsc1JlbmRlclRhcmdldHMuY29uY2F0V2l0aE5vRHVwbGljYXRlKGguZ2V0UmVuZGVyVGFyZ2V0VGV4dHVyZXMoKSkpfWVsc2UgYS5oYXNSZW5kZXJUYXJnZXRUZXh0dXJlcyYmYS5nZXRSZW5kZXJUYXJnZXRUZXh0dXJlcyE9bnVsbCYmdGhpcy5fcHJvY2Vzc2VkTWF0ZXJpYWxzLmluZGV4T2YoYSk9PT0tMSYmKHRoaXMuX3Byb2Nlc3NlZE1hdGVyaWFscy5wdXNoKGEpLHRoaXMuX21hdGVyaWFsc1JlbmRlclRhcmdldHMuY29uY2F0V2l0aE5vRHVwbGljYXRlKGEuZ2V0UmVuZGVyVGFyZ2V0VGV4dHVyZXMoKSkpfWlmKCFzfHwhaS5hcmVBbGxFZmZlY3RzUmVhZHkoKSlyZXR1cm4hMTtpZihlKXtmb3IodD0wO3Q8dGhpcy5fbWF0ZXJpYWxzUmVuZGVyVGFyZ2V0cy5sZW5ndGg7Kyt0KWlmKCF0aGlzLl9tYXRlcmlhbHNSZW5kZXJUYXJnZXRzLmRhdGFbdF0uaXNSZWFkeUZvclJlbmRlcmluZygpKXJldHVybiExfWZvcih0PTA7dDx0aGlzLmdlb21ldHJpZXMubGVuZ3RoO3QrKylpZih0aGlzLmdlb21ldHJpZXNbdF0uZGVsYXlMb2FkU3RhdGU9PT0yKXJldHVybiExO2lmKHRoaXMuYWN0aXZlQ2FtZXJhcyYmdGhpcy5hY3RpdmVDYW1lcmFzLmxlbmd0aD4wKXtmb3IoY29uc3QgciBvZiB0aGlzLmFjdGl2ZUNhbWVyYXMpaWYoIXIuaXNSZWFkeSghMCkpcmV0dXJuITF9ZWxzZSBpZih0aGlzLmFjdGl2ZUNhbWVyYSYmIXRoaXMuYWN0aXZlQ2FtZXJhLmlzUmVhZHkoITApKXJldHVybiExO2Zvcihjb25zdCByIG9mIHRoaXMucGFydGljbGVTeXN0ZW1zKWlmKCFyLmlzUmVhZHkoKSlyZXR1cm4hMTtyZXR1cm4hMH1yZXNldENhY2hlZE1hdGVyaWFsKCl7dGhpcy5fY2FjaGVkTWF0ZXJpYWw9bnVsbCx0aGlzLl9jYWNoZWRFZmZlY3Q9bnVsbCx0aGlzLl9jYWNoZWRWaXNpYmlsaXR5PW51bGx9cmVnaXN0ZXJCZWZvcmVSZW5kZXIoZSl7dGhpcy5vbkJlZm9yZVJlbmRlck9ic2VydmFibGUuYWRkKGUpfXVucmVnaXN0ZXJCZWZvcmVSZW5kZXIoZSl7dGhpcy5vbkJlZm9yZVJlbmRlck9ic2VydmFibGUucmVtb3ZlQ2FsbGJhY2soZSl9cmVnaXN0ZXJBZnRlclJlbmRlcihlKXt0aGlzLm9uQWZ0ZXJSZW5kZXJPYnNlcnZhYmxlLmFkZChlKX11bnJlZ2lzdGVyQWZ0ZXJSZW5kZXIoZSl7dGhpcy5vbkFmdGVyUmVuZGVyT2JzZXJ2YWJsZS5yZW1vdmVDYWxsYmFjayhlKX1fZXhlY3V0ZU9uY2VCZWZvcmVSZW5kZXIoZSl7Y29uc3QgdD0oKT0+e2UoKSxzZXRUaW1lb3V0KCgpPT57dGhpcy51bnJlZ2lzdGVyQmVmb3JlUmVuZGVyKHQpfSl9O3RoaXMucmVnaXN0ZXJCZWZvcmVSZW5kZXIodCl9ZXhlY3V0ZU9uY2VCZWZvcmVSZW5kZXIoZSx0KXt0IT09dm9pZCAwP3NldFRpbWVvdXQoKCk9Pnt0aGlzLl9leGVjdXRlT25jZUJlZm9yZVJlbmRlcihlKX0sdCk6dGhpcy5fZXhlY3V0ZU9uY2VCZWZvcmVSZW5kZXIoZSl9YWRkUGVuZGluZ0RhdGEoZSl7dGhpcy5fcGVuZGluZ0RhdGEucHVzaChlKX1yZW1vdmVQZW5kaW5nRGF0YShlKXtjb25zdCB0PXRoaXMuaXNMb2FkaW5nLGk9dGhpcy5fcGVuZGluZ0RhdGEuaW5kZXhPZihlKTtpIT09LTEmJnRoaXMuX3BlbmRpbmdEYXRhLnNwbGljZShpLDEpLHQmJiF0aGlzLmlzTG9hZGluZyYmdGhpcy5vbkRhdGFMb2FkZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKX1nZXRXYWl0aW5nSXRlbXNDb3VudCgpe3JldHVybiB0aGlzLl9wZW5kaW5nRGF0YS5sZW5ndGh9Z2V0IGlzTG9hZGluZygpe3JldHVybiB0aGlzLl9wZW5kaW5nRGF0YS5sZW5ndGg+MH1leGVjdXRlV2hlblJlYWR5KGUsdD0hMSl7dGhpcy5vblJlYWR5T2JzZXJ2YWJsZS5hZGRPbmNlKGUpLHRoaXMuX2V4ZWN1dGVXaGVuUmVhZHlUaW1lb3V0SWQ9PT1udWxsJiZ0aGlzLl9jaGVja0lzUmVhZHkodCl9d2hlblJlYWR5QXN5bmMoZT0hMSl7cmV0dXJuIG5ldyBQcm9taXNlKHQ9Pnt0aGlzLmV4ZWN1dGVXaGVuUmVhZHkoKCk9Pnt0KCl9LGUpfSl9X2NoZWNrSXNSZWFkeShlPSExKXtpZih0aGlzLl9yZWdpc3RlclRyYW5zaWVudENvbXBvbmVudHMoKSx0aGlzLmlzUmVhZHkoZSkpe3RoaXMub25SZWFkeU9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLHRoaXMub25SZWFkeU9ic2VydmFibGUuY2xlYXIoKSx0aGlzLl9leGVjdXRlV2hlblJlYWR5VGltZW91dElkPW51bGw7cmV0dXJufWlmKHRoaXMuX2lzRGlzcG9zZWQpe3RoaXMub25SZWFkeU9ic2VydmFibGUuY2xlYXIoKSx0aGlzLl9leGVjdXRlV2hlblJlYWR5VGltZW91dElkPW51bGw7cmV0dXJufXRoaXMuX2V4ZWN1dGVXaGVuUmVhZHlUaW1lb3V0SWQ9c2V0VGltZW91dCgoKT0+e3RoaXMuaW5jcmVtZW50UmVuZGVySWQoKSx0aGlzLl9jaGVja0lzUmVhZHkoZSl9LDEwMCl9Z2V0IGFuaW1hdGFibGVzKCl7cmV0dXJuIHRoaXMuX2FjdGl2ZUFuaW1hdGFibGVzfXJlc2V0TGFzdEFuaW1hdGlvblRpbWVGcmFtZSgpe3RoaXMuX2FuaW1hdGlvblRpbWVMYXN0PWFpLk5vd31nZXRWaWV3TWF0cml4KCl7cmV0dXJuIHRoaXMuX3ZpZXdNYXRyaXh9Z2V0UHJvamVjdGlvbk1hdHJpeCgpe3JldHVybiB0aGlzLl9wcm9qZWN0aW9uTWF0cml4fWdldFRyYW5zZm9ybU1hdHJpeCgpe3JldHVybiB0aGlzLl90cmFuc2Zvcm1NYXRyaXh9c2V0VHJhbnNmb3JtTWF0cml4KGUsdCxpLHMpeyFpJiYhcyYmdGhpcy5fbXVsdGl2aWV3U2NlbmVVYm8mJih0aGlzLl9tdWx0aXZpZXdTY2VuZVViby5kaXNwb3NlKCksdGhpcy5fbXVsdGl2aWV3U2NlbmVVYm89bnVsbCksISh0aGlzLl92aWV3VXBkYXRlRmxhZz09PWUudXBkYXRlRmxhZyYmdGhpcy5fcHJvamVjdGlvblVwZGF0ZUZsYWc9PT10LnVwZGF0ZUZsYWcpJiYodGhpcy5fdmlld1VwZGF0ZUZsYWc9ZS51cGRhdGVGbGFnLHRoaXMuX3Byb2plY3Rpb25VcGRhdGVGbGFnPXQudXBkYXRlRmxhZyx0aGlzLl92aWV3TWF0cml4PWUsdGhpcy5fcHJvamVjdGlvbk1hdHJpeD10LHRoaXMuX3ZpZXdNYXRyaXgubXVsdGlwbHlUb1JlZih0aGlzLl9wcm9qZWN0aW9uTWF0cml4LHRoaXMuX3RyYW5zZm9ybU1hdHJpeCksdGhpcy5fZnJ1c3R1bVBsYW5lcz9FdC5HZXRQbGFuZXNUb1JlZih0aGlzLl90cmFuc2Zvcm1NYXRyaXgsdGhpcy5fZnJ1c3R1bVBsYW5lcyk6dGhpcy5fZnJ1c3R1bVBsYW5lcz1FdC5HZXRQbGFuZXModGhpcy5fdHJhbnNmb3JtTWF0cml4KSx0aGlzLl9tdWx0aXZpZXdTY2VuZVVibyYmdGhpcy5fbXVsdGl2aWV3U2NlbmVVYm8udXNlVWJvP3RoaXMuX3VwZGF0ZU11bHRpdmlld1VibyhpLHMpOnRoaXMuX3NjZW5lVWJvLnVzZVVibyYmKHRoaXMuX3NjZW5lVWJvLnVwZGF0ZU1hdHJpeCgidmlld1Byb2plY3Rpb24iLHRoaXMuX3RyYW5zZm9ybU1hdHJpeCksdGhpcy5fc2NlbmVVYm8udXBkYXRlTWF0cml4KCJ2aWV3Iix0aGlzLl92aWV3TWF0cml4KSx0aGlzLl9zY2VuZVViby51cGRhdGVNYXRyaXgoInByb2plY3Rpb24iLHRoaXMuX3Byb2plY3Rpb25NYXRyaXgpKSl9Z2V0U2NlbmVVbmlmb3JtQnVmZmVyKCl7cmV0dXJuIHRoaXMuX211bHRpdmlld1NjZW5lVWJvP3RoaXMuX211bHRpdmlld1NjZW5lVWJvOnRoaXMuX3NjZW5lVWJvfWNyZWF0ZVNjZW5lVW5pZm9ybUJ1ZmZlcihlKXtjb25zdCB0PW5ldyBWKHRoaXMuX2VuZ2luZSx2b2lkIDAsITEsZT8/InNjZW5lIik7cmV0dXJuIHQuYWRkVW5pZm9ybSgidmlld1Byb2plY3Rpb24iLDE2KSx0LmFkZFVuaWZvcm0oInZpZXciLDE2KSx0LmFkZFVuaWZvcm0oInByb2plY3Rpb24iLDE2KSx0LmFkZFVuaWZvcm0oInZFeWVQb3NpdGlvbiIsNCksdH1zZXRTY2VuZVVuaWZvcm1CdWZmZXIoZSl7dGhpcy5fc2NlbmVVYm89ZSx0aGlzLl92aWV3VXBkYXRlRmxhZz0tMSx0aGlzLl9wcm9qZWN0aW9uVXBkYXRlRmxhZz0tMX1nZXRVbmlxdWVJZCgpe3JldHVybiBNci5VbmlxdWVJZH1hZGRNZXNoKGUsdD0hMSl7dGhpcy5fYmxvY2tFbnRpdHlDb2xsZWN0aW9ufHwodGhpcy5tZXNoZXMucHVzaChlKSxlLl9yZXN5bmNMaWdodFNvdXJjZXMoKSxlLnBhcmVudHx8ZS5fYWRkVG9TY2VuZVJvb3ROb2RlcygpLHRoaXMub25OZXdNZXNoQWRkZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhlKSx0JiZlLmdldENoaWxkTWVzaGVzKCkuZm9yRWFjaChpPT57dGhpcy5hZGRNZXNoKGkpfSkpfXJlbW92ZU1lc2goZSx0PSExKXtjb25zdCBpPXRoaXMubWVzaGVzLmluZGV4T2YoZSk7cmV0dXJuIGkhPT0tMSYmKHRoaXMubWVzaGVzW2ldPXRoaXMubWVzaGVzW3RoaXMubWVzaGVzLmxlbmd0aC0xXSx0aGlzLm1lc2hlcy5wb3AoKSxlLnBhcmVudHx8ZS5fcmVtb3ZlRnJvbVNjZW5lUm9vdE5vZGVzKCkpLHRoaXMuX2lucHV0TWFuYWdlci5faW52YWxpZGF0ZU1lc2goZSksdGhpcy5vbk1lc2hSZW1vdmVkT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoZSksdCYmZS5nZXRDaGlsZE1lc2hlcygpLmZvckVhY2gocz0+e3RoaXMucmVtb3ZlTWVzaChzKX0pLGl9YWRkVHJhbnNmb3JtTm9kZShlKXt0aGlzLl9ibG9ja0VudGl0eUNvbGxlY3Rpb258fGUuZ2V0U2NlbmUoKT09PXRoaXMmJmUuX2luZGV4SW5TY2VuZVRyYW5zZm9ybU5vZGVzQXJyYXkhPT0tMXx8KGUuX2luZGV4SW5TY2VuZVRyYW5zZm9ybU5vZGVzQXJyYXk9dGhpcy50cmFuc2Zvcm1Ob2Rlcy5sZW5ndGgsdGhpcy50cmFuc2Zvcm1Ob2Rlcy5wdXNoKGUpLGUucGFyZW50fHxlLl9hZGRUb1NjZW5lUm9vdE5vZGVzKCksdGhpcy5vbk5ld1RyYW5zZm9ybU5vZGVBZGRlZE9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKGUpKX1yZW1vdmVUcmFuc2Zvcm1Ob2RlKGUpe2NvbnN0IHQ9ZS5faW5kZXhJblNjZW5lVHJhbnNmb3JtTm9kZXNBcnJheTtpZih0IT09LTEpe2lmKHQhPT10aGlzLnRyYW5zZm9ybU5vZGVzLmxlbmd0aC0xKXtjb25zdCBpPXRoaXMudHJhbnNmb3JtTm9kZXNbdGhpcy50cmFuc2Zvcm1Ob2Rlcy5sZW5ndGgtMV07dGhpcy50cmFuc2Zvcm1Ob2Rlc1t0XT1pLGkuX2luZGV4SW5TY2VuZVRyYW5zZm9ybU5vZGVzQXJyYXk9dH1lLl9pbmRleEluU2NlbmVUcmFuc2Zvcm1Ob2Rlc0FycmF5PS0xLHRoaXMudHJhbnNmb3JtTm9kZXMucG9wKCksZS5wYXJlbnR8fGUuX3JlbW92ZUZyb21TY2VuZVJvb3ROb2RlcygpfXJldHVybiB0aGlzLm9uVHJhbnNmb3JtTm9kZVJlbW92ZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhlKSx0fXJlbW92ZVNrZWxldG9uKGUpe2NvbnN0IHQ9dGhpcy5za2VsZXRvbnMuaW5kZXhPZihlKTtyZXR1cm4gdCE9PS0xJiYodGhpcy5za2VsZXRvbnMuc3BsaWNlKHQsMSksdGhpcy5vblNrZWxldG9uUmVtb3ZlZE9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKGUpLHRoaXMuX2V4ZWN1dGVBY3RpdmVDb250YWluZXJDbGVhbnVwKHRoaXMuX2FjdGl2ZVNrZWxldG9ucykpLHR9cmVtb3ZlTW9ycGhUYXJnZXRNYW5hZ2VyKGUpe2NvbnN0IHQ9dGhpcy5tb3JwaFRhcmdldE1hbmFnZXJzLmluZGV4T2YoZSk7cmV0dXJuIHQhPT0tMSYmdGhpcy5tb3JwaFRhcmdldE1hbmFnZXJzLnNwbGljZSh0LDEpLHR9cmVtb3ZlTGlnaHQoZSl7Y29uc3QgdD10aGlzLmxpZ2h0cy5pbmRleE9mKGUpO2lmKHQhPT0tMSl7Zm9yKGNvbnN0IGkgb2YgdGhpcy5tZXNoZXMpaS5fcmVtb3ZlTGlnaHRTb3VyY2UoZSwhMSk7dGhpcy5saWdodHMuc3BsaWNlKHQsMSksdGhpcy5zb3J0TGlnaHRzQnlQcmlvcml0eSgpLGUucGFyZW50fHxlLl9yZW1vdmVGcm9tU2NlbmVSb290Tm9kZXMoKX1yZXR1cm4gdGhpcy5vbkxpZ2h0UmVtb3ZlZE9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKGUpLHR9cmVtb3ZlQ2FtZXJhKGUpe2NvbnN0IHQ9dGhpcy5jYW1lcmFzLmluZGV4T2YoZSk7aWYodCE9PS0xJiYodGhpcy5jYW1lcmFzLnNwbGljZSh0LDEpLGUucGFyZW50fHxlLl9yZW1vdmVGcm9tU2NlbmVSb290Tm9kZXMoKSksdGhpcy5hY3RpdmVDYW1lcmFzKXtjb25zdCBpPXRoaXMuYWN0aXZlQ2FtZXJhcy5pbmRleE9mKGUpO2khPT0tMSYmdGhpcy5hY3RpdmVDYW1lcmFzLnNwbGljZShpLDEpfXJldHVybiB0aGlzLmFjdGl2ZUNhbWVyYT09PWUmJih0aGlzLmNhbWVyYXMubGVuZ3RoPjA/dGhpcy5hY3RpdmVDYW1lcmE9dGhpcy5jYW1lcmFzWzBdOnRoaXMuYWN0aXZlQ2FtZXJhPW51bGwpLHRoaXMub25DYW1lcmFSZW1vdmVkT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoZSksdH1yZW1vdmVQYXJ0aWNsZVN5c3RlbShlKXtjb25zdCB0PXRoaXMucGFydGljbGVTeXN0ZW1zLmluZGV4T2YoZSk7cmV0dXJuIHQhPT0tMSYmKHRoaXMucGFydGljbGVTeXN0ZW1zLnNwbGljZSh0LDEpLHRoaXMuX2V4ZWN1dGVBY3RpdmVDb250YWluZXJDbGVhbnVwKHRoaXMuX2FjdGl2ZVBhcnRpY2xlU3lzdGVtcykpLHR9cmVtb3ZlQW5pbWF0aW9uKGUpe2NvbnN0IHQ9dGhpcy5hbmltYXRpb25zLmluZGV4T2YoZSk7cmV0dXJuIHQhPT0tMSYmdGhpcy5hbmltYXRpb25zLnNwbGljZSh0LDEpLHR9c3RvcEFuaW1hdGlvbihlLHQsaSl7fXJlbW92ZUFuaW1hdGlvbkdyb3VwKGUpe2NvbnN0IHQ9dGhpcy5hbmltYXRpb25Hcm91cHMuaW5kZXhPZihlKTtyZXR1cm4gdCE9PS0xJiZ0aGlzLmFuaW1hdGlvbkdyb3Vwcy5zcGxpY2UodCwxKSx0fXJlbW92ZU11bHRpTWF0ZXJpYWwoZSl7Y29uc3QgdD10aGlzLm11bHRpTWF0ZXJpYWxzLmluZGV4T2YoZSk7cmV0dXJuIHQhPT0tMSYmdGhpcy5tdWx0aU1hdGVyaWFscy5zcGxpY2UodCwxKSx0aGlzLm9uTXVsdGlNYXRlcmlhbFJlbW92ZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhlKSx0fXJlbW92ZU1hdGVyaWFsKGUpe2NvbnN0IHQ9ZS5faW5kZXhJblNjZW5lTWF0ZXJpYWxBcnJheTtpZih0IT09LTEmJnQ8dGhpcy5tYXRlcmlhbHMubGVuZ3RoKXtpZih0IT09dGhpcy5tYXRlcmlhbHMubGVuZ3RoLTEpe2NvbnN0IGk9dGhpcy5tYXRlcmlhbHNbdGhpcy5tYXRlcmlhbHMubGVuZ3RoLTFdO3RoaXMubWF0ZXJpYWxzW3RdPWksaS5faW5kZXhJblNjZW5lTWF0ZXJpYWxBcnJheT10fWUuX2luZGV4SW5TY2VuZU1hdGVyaWFsQXJyYXk9LTEsdGhpcy5tYXRlcmlhbHMucG9wKCl9cmV0dXJuIHRoaXMub25NYXRlcmlhbFJlbW92ZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhlKSx0fXJlbW92ZUFjdGlvbk1hbmFnZXIoZSl7Y29uc3QgdD10aGlzLmFjdGlvbk1hbmFnZXJzLmluZGV4T2YoZSk7cmV0dXJuIHQhPT0tMSYmdGhpcy5hY3Rpb25NYW5hZ2Vycy5zcGxpY2UodCwxKSx0fXJlbW92ZVRleHR1cmUoZSl7Y29uc3QgdD10aGlzLnRleHR1cmVzLmluZGV4T2YoZSk7cmV0dXJuIHQhPT0tMSYmdGhpcy50ZXh0dXJlcy5zcGxpY2UodCwxKSx0aGlzLm9uVGV4dHVyZVJlbW92ZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhlKSx0fWFkZExpZ2h0KGUpe2lmKCF0aGlzLl9ibG9ja0VudGl0eUNvbGxlY3Rpb24pe3RoaXMubGlnaHRzLnB1c2goZSksdGhpcy5zb3J0TGlnaHRzQnlQcmlvcml0eSgpLGUucGFyZW50fHxlLl9hZGRUb1NjZW5lUm9vdE5vZGVzKCk7Zm9yKGNvbnN0IHQgb2YgdGhpcy5tZXNoZXMpdC5saWdodFNvdXJjZXMuaW5kZXhPZihlKT09PS0xJiYodC5saWdodFNvdXJjZXMucHVzaChlKSx0Ll9yZXN5bmNMaWdodFNvdXJjZXMoKSk7dGhpcy5vbk5ld0xpZ2h0QWRkZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhlKX19c29ydExpZ2h0c0J5UHJpb3JpdHkoKXt0aGlzLnJlcXVpcmVMaWdodFNvcnRpbmcmJnRoaXMubGlnaHRzLnNvcnQoRWUuQ29tcGFyZUxpZ2h0c1ByaW9yaXR5KX1hZGRDYW1lcmEoZSl7dGhpcy5fYmxvY2tFbnRpdHlDb2xsZWN0aW9ufHwodGhpcy5jYW1lcmFzLnB1c2goZSksdGhpcy5vbk5ld0NhbWVyYUFkZGVkT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoZSksZS5wYXJlbnR8fGUuX2FkZFRvU2NlbmVSb290Tm9kZXMoKSl9YWRkU2tlbGV0b24oZSl7dGhpcy5fYmxvY2tFbnRpdHlDb2xsZWN0aW9ufHwodGhpcy5za2VsZXRvbnMucHVzaChlKSx0aGlzLm9uTmV3U2tlbGV0b25BZGRlZE9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKGUpKX1hZGRQYXJ0aWNsZVN5c3RlbShlKXt0aGlzLl9ibG9ja0VudGl0eUNvbGxlY3Rpb258fHRoaXMucGFydGljbGVTeXN0ZW1zLnB1c2goZSl9YWRkQW5pbWF0aW9uKGUpe3RoaXMuX2Jsb2NrRW50aXR5Q29sbGVjdGlvbnx8dGhpcy5hbmltYXRpb25zLnB1c2goZSl9YWRkQW5pbWF0aW9uR3JvdXAoZSl7dGhpcy5fYmxvY2tFbnRpdHlDb2xsZWN0aW9ufHx0aGlzLmFuaW1hdGlvbkdyb3Vwcy5wdXNoKGUpfWFkZE11bHRpTWF0ZXJpYWwoZSl7dGhpcy5fYmxvY2tFbnRpdHlDb2xsZWN0aW9ufHwodGhpcy5tdWx0aU1hdGVyaWFscy5wdXNoKGUpLHRoaXMub25OZXdNdWx0aU1hdGVyaWFsQWRkZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhlKSl9YWRkTWF0ZXJpYWwoZSl7dGhpcy5fYmxvY2tFbnRpdHlDb2xsZWN0aW9ufHxlLmdldFNjZW5lKCk9PT10aGlzJiZlLl9pbmRleEluU2NlbmVNYXRlcmlhbEFycmF5IT09LTF8fChlLl9pbmRleEluU2NlbmVNYXRlcmlhbEFycmF5PXRoaXMubWF0ZXJpYWxzLmxlbmd0aCx0aGlzLm1hdGVyaWFscy5wdXNoKGUpLHRoaXMub25OZXdNYXRlcmlhbEFkZGVkT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoZSkpfWFkZE1vcnBoVGFyZ2V0TWFuYWdlcihlKXt0aGlzLl9ibG9ja0VudGl0eUNvbGxlY3Rpb258fHRoaXMubW9ycGhUYXJnZXRNYW5hZ2Vycy5wdXNoKGUpfWFkZEdlb21ldHJ5KGUpe3RoaXMuX2Jsb2NrRW50aXR5Q29sbGVjdGlvbnx8KHRoaXMuX2dlb21ldHJpZXNCeVVuaXF1ZUlkJiYodGhpcy5fZ2VvbWV0cmllc0J5VW5pcXVlSWRbZS51bmlxdWVJZF09dGhpcy5nZW9tZXRyaWVzLmxlbmd0aCksdGhpcy5nZW9tZXRyaWVzLnB1c2goZSkpfWFkZEFjdGlvbk1hbmFnZXIoZSl7dGhpcy5hY3Rpb25NYW5hZ2Vycy5wdXNoKGUpfWFkZFRleHR1cmUoZSl7dGhpcy5fYmxvY2tFbnRpdHlDb2xsZWN0aW9ufHwodGhpcy50ZXh0dXJlcy5wdXNoKGUpLHRoaXMub25OZXdUZXh0dXJlQWRkZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhlKSl9c3dpdGNoQWN0aXZlQ2FtZXJhKGUsdD0hMCl7dGhpcy5fZW5naW5lLmdldElucHV0RWxlbWVudCgpJiYodGhpcy5hY3RpdmVDYW1lcmEmJnRoaXMuYWN0aXZlQ2FtZXJhLmRldGFjaENvbnRyb2woKSx0aGlzLmFjdGl2ZUNhbWVyYT1lLHQmJmUuYXR0YWNoQ29udHJvbCgpKX1zZXRBY3RpdmVDYW1lcmFCeUlkKGUpe2NvbnN0IHQ9dGhpcy5nZXRDYW1lcmFCeUlkKGUpO3JldHVybiB0Pyh0aGlzLmFjdGl2ZUNhbWVyYT10LHQpOm51bGx9c2V0QWN0aXZlQ2FtZXJhQnlOYW1lKGUpe2NvbnN0IHQ9dGhpcy5nZXRDYW1lcmFCeU5hbWUoZSk7cmV0dXJuIHQ/KHRoaXMuYWN0aXZlQ2FtZXJhPXQsdCk6bnVsbH1nZXRBbmltYXRpb25Hcm91cEJ5TmFtZShlKXtmb3IobGV0IHQ9MDt0PHRoaXMuYW5pbWF0aW9uR3JvdXBzLmxlbmd0aDt0KyspaWYodGhpcy5hbmltYXRpb25Hcm91cHNbdF0ubmFtZT09PWUpcmV0dXJuIHRoaXMuYW5pbWF0aW9uR3JvdXBzW3RdO3JldHVybiBudWxsfV9nZXRNYXRlcmlhbChlLHQpe2ZvcihsZXQgaT0wO2k8dGhpcy5tYXRlcmlhbHMubGVuZ3RoO2krKyl7Y29uc3Qgcz10aGlzLm1hdGVyaWFsc1tpXTtpZih0KHMpKXJldHVybiBzfWlmKGUpZm9yKGxldCBpPTA7aTx0aGlzLm11bHRpTWF0ZXJpYWxzLmxlbmd0aDtpKyspe2NvbnN0IHM9dGhpcy5tdWx0aU1hdGVyaWFsc1tpXTtpZih0KHMpKXJldHVybiBzfXJldHVybiBudWxsfWdldE1hdGVyaWFsQnlVbmlxdWVJRChlLHQ9ITEpe3JldHVybiB0aGlzLl9nZXRNYXRlcmlhbCh0LGk9PmkudW5pcXVlSWQ9PT1lKX1nZXRNYXRlcmlhbEJ5SWQoZSx0PSExKXtyZXR1cm4gdGhpcy5fZ2V0TWF0ZXJpYWwodCxpPT5pLmlkPT09ZSl9Z2V0TWF0ZXJpYWxCeU5hbWUoZSx0PSExKXtyZXR1cm4gdGhpcy5fZ2V0TWF0ZXJpYWwodCxpPT5pLm5hbWU9PT1lKX1nZXRMYXN0TWF0ZXJpYWxCeUlkKGUsdD0hMSl7Zm9yKGxldCBpPXRoaXMubWF0ZXJpYWxzLmxlbmd0aC0xO2k+PTA7aS0tKWlmKHRoaXMubWF0ZXJpYWxzW2ldLmlkPT09ZSlyZXR1cm4gdGhpcy5tYXRlcmlhbHNbaV07aWYodCl7Zm9yKGxldCBpPXRoaXMubXVsdGlNYXRlcmlhbHMubGVuZ3RoLTE7aT49MDtpLS0paWYodGhpcy5tdWx0aU1hdGVyaWFsc1tpXS5pZD09PWUpcmV0dXJuIHRoaXMubXVsdGlNYXRlcmlhbHNbaV19cmV0dXJuIG51bGx9Z2V0VGV4dHVyZUJ5VW5pcXVlSWQoZSl7Zm9yKGxldCB0PTA7dDx0aGlzLnRleHR1cmVzLmxlbmd0aDt0KyspaWYodGhpcy50ZXh0dXJlc1t0XS51bmlxdWVJZD09PWUpcmV0dXJuIHRoaXMudGV4dHVyZXNbdF07cmV0dXJuIG51bGx9Z2V0VGV4dHVyZUJ5TmFtZShlKXtmb3IobGV0IHQ9MDt0PHRoaXMudGV4dHVyZXMubGVuZ3RoO3QrKylpZih0aGlzLnRleHR1cmVzW3RdLm5hbWU9PT1lKXJldHVybiB0aGlzLnRleHR1cmVzW3RdO3JldHVybiBudWxsfWdldENhbWVyYUJ5SWQoZSl7Zm9yKGxldCB0PTA7dDx0aGlzLmNhbWVyYXMubGVuZ3RoO3QrKylpZih0aGlzLmNhbWVyYXNbdF0uaWQ9PT1lKXJldHVybiB0aGlzLmNhbWVyYXNbdF07cmV0dXJuIG51bGx9Z2V0Q2FtZXJhQnlVbmlxdWVJZChlKXtmb3IobGV0IHQ9MDt0PHRoaXMuY2FtZXJhcy5sZW5ndGg7dCsrKWlmKHRoaXMuY2FtZXJhc1t0XS51bmlxdWVJZD09PWUpcmV0dXJuIHRoaXMuY2FtZXJhc1t0XTtyZXR1cm4gbnVsbH1nZXRDYW1lcmFCeU5hbWUoZSl7Zm9yKGxldCB0PTA7dDx0aGlzLmNhbWVyYXMubGVuZ3RoO3QrKylpZih0aGlzLmNhbWVyYXNbdF0ubmFtZT09PWUpcmV0dXJuIHRoaXMuY2FtZXJhc1t0XTtyZXR1cm4gbnVsbH1nZXRCb25lQnlJZChlKXtmb3IobGV0IHQ9MDt0PHRoaXMuc2tlbGV0b25zLmxlbmd0aDt0Kyspe2NvbnN0IGk9dGhpcy5za2VsZXRvbnNbdF07Zm9yKGxldCBzPTA7czxpLmJvbmVzLmxlbmd0aDtzKyspaWYoaS5ib25lc1tzXS5pZD09PWUpcmV0dXJuIGkuYm9uZXNbc119cmV0dXJuIG51bGx9Z2V0Qm9uZUJ5TmFtZShlKXtmb3IobGV0IHQ9MDt0PHRoaXMuc2tlbGV0b25zLmxlbmd0aDt0Kyspe2NvbnN0IGk9dGhpcy5za2VsZXRvbnNbdF07Zm9yKGxldCBzPTA7czxpLmJvbmVzLmxlbmd0aDtzKyspaWYoaS5ib25lc1tzXS5uYW1lPT09ZSlyZXR1cm4gaS5ib25lc1tzXX1yZXR1cm4gbnVsbH1nZXRMaWdodEJ5TmFtZShlKXtmb3IobGV0IHQ9MDt0PHRoaXMubGlnaHRzLmxlbmd0aDt0KyspaWYodGhpcy5saWdodHNbdF0ubmFtZT09PWUpcmV0dXJuIHRoaXMubGlnaHRzW3RdO3JldHVybiBudWxsfWdldExpZ2h0QnlJZChlKXtmb3IobGV0IHQ9MDt0PHRoaXMubGlnaHRzLmxlbmd0aDt0KyspaWYodGhpcy5saWdodHNbdF0uaWQ9PT1lKXJldHVybiB0aGlzLmxpZ2h0c1t0XTtyZXR1cm4gbnVsbH1nZXRMaWdodEJ5VW5pcXVlSWQoZSl7Zm9yKGxldCB0PTA7dDx0aGlzLmxpZ2h0cy5sZW5ndGg7dCsrKWlmKHRoaXMubGlnaHRzW3RdLnVuaXF1ZUlkPT09ZSlyZXR1cm4gdGhpcy5saWdodHNbdF07cmV0dXJuIG51bGx9Z2V0UGFydGljbGVTeXN0ZW1CeUlkKGUpe2ZvcihsZXQgdD0wO3Q8dGhpcy5wYXJ0aWNsZVN5c3RlbXMubGVuZ3RoO3QrKylpZih0aGlzLnBhcnRpY2xlU3lzdGVtc1t0XS5pZD09PWUpcmV0dXJuIHRoaXMucGFydGljbGVTeXN0ZW1zW3RdO3JldHVybiBudWxsfWdldEdlb21ldHJ5QnlJZChlKXtmb3IobGV0IHQ9MDt0PHRoaXMuZ2VvbWV0cmllcy5sZW5ndGg7dCsrKWlmKHRoaXMuZ2VvbWV0cmllc1t0XS5pZD09PWUpcmV0dXJuIHRoaXMuZ2VvbWV0cmllc1t0XTtyZXR1cm4gbnVsbH1fZ2V0R2VvbWV0cnlCeVVuaXF1ZUlkKGUpe2lmKHRoaXMuX2dlb21ldHJpZXNCeVVuaXF1ZUlkKXtjb25zdCB0PXRoaXMuX2dlb21ldHJpZXNCeVVuaXF1ZUlkW2VdO2lmKHQhPT12b2lkIDApcmV0dXJuIHRoaXMuZ2VvbWV0cmllc1t0XX1lbHNlIGZvcihsZXQgdD0wO3Q8dGhpcy5nZW9tZXRyaWVzLmxlbmd0aDt0KyspaWYodGhpcy5nZW9tZXRyaWVzW3RdLnVuaXF1ZUlkPT09ZSlyZXR1cm4gdGhpcy5nZW9tZXRyaWVzW3RdO3JldHVybiBudWxsfXB1c2hHZW9tZXRyeShlLHQpe3JldHVybiF0JiZ0aGlzLl9nZXRHZW9tZXRyeUJ5VW5pcXVlSWQoZS51bmlxdWVJZCk/ITE6KHRoaXMuYWRkR2VvbWV0cnkoZSksdGhpcy5vbk5ld0dlb21ldHJ5QWRkZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhlKSwhMCl9cmVtb3ZlR2VvbWV0cnkoZSl7bGV0IHQ7aWYodGhpcy5fZ2VvbWV0cmllc0J5VW5pcXVlSWQpe2lmKHQ9dGhpcy5fZ2VvbWV0cmllc0J5VW5pcXVlSWRbZS51bmlxdWVJZF0sdD09PXZvaWQgMClyZXR1cm4hMX1lbHNlIGlmKHQ9dGhpcy5nZW9tZXRyaWVzLmluZGV4T2YoZSksdDwwKXJldHVybiExO2lmKHQhPT10aGlzLmdlb21ldHJpZXMubGVuZ3RoLTEpe2NvbnN0IGk9dGhpcy5nZW9tZXRyaWVzW3RoaXMuZ2VvbWV0cmllcy5sZW5ndGgtMV07aSYmKHRoaXMuZ2VvbWV0cmllc1t0XT1pLHRoaXMuX2dlb21ldHJpZXNCeVVuaXF1ZUlkJiYodGhpcy5fZ2VvbWV0cmllc0J5VW5pcXVlSWRbaS51bmlxdWVJZF09dCkpfXJldHVybiB0aGlzLl9nZW9tZXRyaWVzQnlVbmlxdWVJZCYmKHRoaXMuX2dlb21ldHJpZXNCeVVuaXF1ZUlkW2UudW5pcXVlSWRdPXZvaWQgMCksdGhpcy5nZW9tZXRyaWVzLnBvcCgpLHRoaXMub25HZW9tZXRyeVJlbW92ZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhlKSwhMH1nZXRHZW9tZXRyaWVzKCl7cmV0dXJuIHRoaXMuZ2VvbWV0cmllc31nZXRNZXNoQnlJZChlKXtmb3IobGV0IHQ9MDt0PHRoaXMubWVzaGVzLmxlbmd0aDt0KyspaWYodGhpcy5tZXNoZXNbdF0uaWQ9PT1lKXJldHVybiB0aGlzLm1lc2hlc1t0XTtyZXR1cm4gbnVsbH1nZXRNZXNoZXNCeUlkKGUpe3JldHVybiB0aGlzLm1lc2hlcy5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIHQuaWQ9PT1lfSl9Z2V0VHJhbnNmb3JtTm9kZUJ5SWQoZSl7Zm9yKGxldCB0PTA7dDx0aGlzLnRyYW5zZm9ybU5vZGVzLmxlbmd0aDt0KyspaWYodGhpcy50cmFuc2Zvcm1Ob2Rlc1t0XS5pZD09PWUpcmV0dXJuIHRoaXMudHJhbnNmb3JtTm9kZXNbdF07cmV0dXJuIG51bGx9Z2V0VHJhbnNmb3JtTm9kZUJ5VW5pcXVlSWQoZSl7Zm9yKGxldCB0PTA7dDx0aGlzLnRyYW5zZm9ybU5vZGVzLmxlbmd0aDt0KyspaWYodGhpcy50cmFuc2Zvcm1Ob2Rlc1t0XS51bmlxdWVJZD09PWUpcmV0dXJuIHRoaXMudHJhbnNmb3JtTm9kZXNbdF07cmV0dXJuIG51bGx9Z2V0VHJhbnNmb3JtTm9kZXNCeUlkKGUpe3JldHVybiB0aGlzLnRyYW5zZm9ybU5vZGVzLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdC5pZD09PWV9KX1nZXRNZXNoQnlVbmlxdWVJZChlKXtmb3IobGV0IHQ9MDt0PHRoaXMubWVzaGVzLmxlbmd0aDt0KyspaWYodGhpcy5tZXNoZXNbdF0udW5pcXVlSWQ9PT1lKXJldHVybiB0aGlzLm1lc2hlc1t0XTtyZXR1cm4gbnVsbH1nZXRMYXN0TWVzaEJ5SWQoZSl7Zm9yKGxldCB0PXRoaXMubWVzaGVzLmxlbmd0aC0xO3Q+PTA7dC0tKWlmKHRoaXMubWVzaGVzW3RdLmlkPT09ZSlyZXR1cm4gdGhpcy5tZXNoZXNbdF07cmV0dXJuIG51bGx9Z2V0TGFzdEVudHJ5QnlJZChlKXtsZXQgdDtmb3IodD10aGlzLm1lc2hlcy5sZW5ndGgtMTt0Pj0wO3QtLSlpZih0aGlzLm1lc2hlc1t0XS5pZD09PWUpcmV0dXJuIHRoaXMubWVzaGVzW3RdO2Zvcih0PXRoaXMudHJhbnNmb3JtTm9kZXMubGVuZ3RoLTE7dD49MDt0LS0paWYodGhpcy50cmFuc2Zvcm1Ob2Rlc1t0XS5pZD09PWUpcmV0dXJuIHRoaXMudHJhbnNmb3JtTm9kZXNbdF07Zm9yKHQ9dGhpcy5jYW1lcmFzLmxlbmd0aC0xO3Q+PTA7dC0tKWlmKHRoaXMuY2FtZXJhc1t0XS5pZD09PWUpcmV0dXJuIHRoaXMuY2FtZXJhc1t0XTtmb3IodD10aGlzLmxpZ2h0cy5sZW5ndGgtMTt0Pj0wO3QtLSlpZih0aGlzLmxpZ2h0c1t0XS5pZD09PWUpcmV0dXJuIHRoaXMubGlnaHRzW3RdO3JldHVybiBudWxsfWdldE5vZGVCeUlkKGUpe2NvbnN0IHQ9dGhpcy5nZXRNZXNoQnlJZChlKTtpZih0KXJldHVybiB0O2NvbnN0IGk9dGhpcy5nZXRUcmFuc2Zvcm1Ob2RlQnlJZChlKTtpZihpKXJldHVybiBpO2NvbnN0IHM9dGhpcy5nZXRMaWdodEJ5SWQoZSk7aWYocylyZXR1cm4gcztjb25zdCByPXRoaXMuZ2V0Q2FtZXJhQnlJZChlKTtpZihyKXJldHVybiByO2NvbnN0IG49dGhpcy5nZXRCb25lQnlJZChlKTtyZXR1cm4gbnx8bnVsbH1nZXROb2RlQnlOYW1lKGUpe2NvbnN0IHQ9dGhpcy5nZXRNZXNoQnlOYW1lKGUpO2lmKHQpcmV0dXJuIHQ7Y29uc3QgaT10aGlzLmdldFRyYW5zZm9ybU5vZGVCeU5hbWUoZSk7aWYoaSlyZXR1cm4gaTtjb25zdCBzPXRoaXMuZ2V0TGlnaHRCeU5hbWUoZSk7aWYocylyZXR1cm4gcztjb25zdCByPXRoaXMuZ2V0Q2FtZXJhQnlOYW1lKGUpO2lmKHIpcmV0dXJuIHI7Y29uc3Qgbj10aGlzLmdldEJvbmVCeU5hbWUoZSk7cmV0dXJuIG58fG51bGx9Z2V0TWVzaEJ5TmFtZShlKXtmb3IobGV0IHQ9MDt0PHRoaXMubWVzaGVzLmxlbmd0aDt0KyspaWYodGhpcy5tZXNoZXNbdF0ubmFtZT09PWUpcmV0dXJuIHRoaXMubWVzaGVzW3RdO3JldHVybiBudWxsfWdldFRyYW5zZm9ybU5vZGVCeU5hbWUoZSl7Zm9yKGxldCB0PTA7dDx0aGlzLnRyYW5zZm9ybU5vZGVzLmxlbmd0aDt0KyspaWYodGhpcy50cmFuc2Zvcm1Ob2Rlc1t0XS5uYW1lPT09ZSlyZXR1cm4gdGhpcy50cmFuc2Zvcm1Ob2Rlc1t0XTtyZXR1cm4gbnVsbH1nZXRMYXN0U2tlbGV0b25CeUlkKGUpe2ZvcihsZXQgdD10aGlzLnNrZWxldG9ucy5sZW5ndGgtMTt0Pj0wO3QtLSlpZih0aGlzLnNrZWxldG9uc1t0XS5pZD09PWUpcmV0dXJuIHRoaXMuc2tlbGV0b25zW3RdO3JldHVybiBudWxsfWdldFNrZWxldG9uQnlVbmlxdWVJZChlKXtmb3IobGV0IHQ9MDt0PHRoaXMuc2tlbGV0b25zLmxlbmd0aDt0KyspaWYodGhpcy5za2VsZXRvbnNbdF0udW5pcXVlSWQ9PT1lKXJldHVybiB0aGlzLnNrZWxldG9uc1t0XTtyZXR1cm4gbnVsbH1nZXRTa2VsZXRvbkJ5SWQoZSl7Zm9yKGxldCB0PTA7dDx0aGlzLnNrZWxldG9ucy5sZW5ndGg7dCsrKWlmKHRoaXMuc2tlbGV0b25zW3RdLmlkPT09ZSlyZXR1cm4gdGhpcy5za2VsZXRvbnNbdF07cmV0dXJuIG51bGx9Z2V0U2tlbGV0b25CeU5hbWUoZSl7Zm9yKGxldCB0PTA7dDx0aGlzLnNrZWxldG9ucy5sZW5ndGg7dCsrKWlmKHRoaXMuc2tlbGV0b25zW3RdLm5hbWU9PT1lKXJldHVybiB0aGlzLnNrZWxldG9uc1t0XTtyZXR1cm4gbnVsbH1nZXRNb3JwaFRhcmdldE1hbmFnZXJCeUlkKGUpe2ZvcihsZXQgdD0wO3Q8dGhpcy5tb3JwaFRhcmdldE1hbmFnZXJzLmxlbmd0aDt0KyspaWYodGhpcy5tb3JwaFRhcmdldE1hbmFnZXJzW3RdLnVuaXF1ZUlkPT09ZSlyZXR1cm4gdGhpcy5tb3JwaFRhcmdldE1hbmFnZXJzW3RdO3JldHVybiBudWxsfWdldE1vcnBoVGFyZ2V0QnlJZChlKXtmb3IobGV0IHQ9MDt0PHRoaXMubW9ycGhUYXJnZXRNYW5hZ2Vycy5sZW5ndGg7Kyt0KXtjb25zdCBpPXRoaXMubW9ycGhUYXJnZXRNYW5hZ2Vyc1t0XTtmb3IobGV0IHM9MDtzPGkubnVtVGFyZ2V0czsrK3Mpe2NvbnN0IHI9aS5nZXRUYXJnZXQocyk7aWYoci5pZD09PWUpcmV0dXJuIHJ9fXJldHVybiBudWxsfWdldE1vcnBoVGFyZ2V0QnlOYW1lKGUpe2ZvcihsZXQgdD0wO3Q8dGhpcy5tb3JwaFRhcmdldE1hbmFnZXJzLmxlbmd0aDsrK3Qpe2NvbnN0IGk9dGhpcy5tb3JwaFRhcmdldE1hbmFnZXJzW3RdO2ZvcihsZXQgcz0wO3M8aS5udW1UYXJnZXRzOysrcyl7Y29uc3Qgcj1pLmdldFRhcmdldChzKTtpZihyLm5hbWU9PT1lKXJldHVybiByfX1yZXR1cm4gbnVsbH1nZXRQb3N0UHJvY2Vzc0J5TmFtZShlKXtmb3IobGV0IHQ9MDt0PHRoaXMucG9zdFByb2Nlc3Nlcy5sZW5ndGg7Kyt0KXtjb25zdCBpPXRoaXMucG9zdFByb2Nlc3Nlc1t0XTtpZihpLm5hbWU9PT1lKXJldHVybiBpfXJldHVybiBudWxsfWlzQWN0aXZlTWVzaChlKXtyZXR1cm4gdGhpcy5fYWN0aXZlTWVzaGVzLmluZGV4T2YoZSkhPT0tMX1nZXQgdWlkKCl7cmV0dXJuIHRoaXMuX3VpZHx8KHRoaXMuX3VpZD1ILlJhbmRvbUlkKCkpLHRoaXMuX3VpZH1hZGRFeHRlcm5hbERhdGEoZSx0KXtyZXR1cm4gdGhpcy5fZXh0ZXJuYWxEYXRhfHwodGhpcy5fZXh0ZXJuYWxEYXRhPW5ldyBjciksdGhpcy5fZXh0ZXJuYWxEYXRhLmFkZChlLHQpfWdldEV4dGVybmFsRGF0YShlKXtyZXR1cm4gdGhpcy5fZXh0ZXJuYWxEYXRhP3RoaXMuX2V4dGVybmFsRGF0YS5nZXQoZSk6bnVsbH1nZXRPckFkZEV4dGVybmFsRGF0YVdpdGhGYWN0b3J5KGUsdCl7cmV0dXJuIHRoaXMuX2V4dGVybmFsRGF0YXx8KHRoaXMuX2V4dGVybmFsRGF0YT1uZXcgY3IpLHRoaXMuX2V4dGVybmFsRGF0YS5nZXRPckFkZFdpdGhGYWN0b3J5KGUsdCl9cmVtb3ZlRXh0ZXJuYWxEYXRhKGUpe3JldHVybiB0aGlzLl9leHRlcm5hbERhdGEucmVtb3ZlKGUpfV9ldmFsdWF0ZVN1Yk1lc2goZSx0LGkscyl7aWYoc3x8ZS5pc0luRnJ1c3R1bSh0aGlzLl9mcnVzdHVtUGxhbmVzKSl7Zm9yKGNvbnN0IG4gb2YgdGhpcy5fZXZhbHVhdGVTdWJNZXNoU3RhZ2Upbi5hY3Rpb24odCxlKTtjb25zdCByPWUuZ2V0TWF0ZXJpYWwoKTtyIT1udWxsJiYoci5oYXNSZW5kZXJUYXJnZXRUZXh0dXJlcyYmci5nZXRSZW5kZXJUYXJnZXRUZXh0dXJlcyE9bnVsbCYmdGhpcy5fcHJvY2Vzc2VkTWF0ZXJpYWxzLmluZGV4T2Yocik9PT0tMSYmKHRoaXMuX3Byb2Nlc3NlZE1hdGVyaWFscy5wdXNoKHIpLHRoaXMuX21hdGVyaWFsc1JlbmRlclRhcmdldHMuY29uY2F0V2l0aE5vRHVwbGljYXRlKHIuZ2V0UmVuZGVyVGFyZ2V0VGV4dHVyZXMoKSkpLHRoaXMuX3JlbmRlcmluZ01hbmFnZXIuZGlzcGF0Y2goZSx0LHIpKX19ZnJlZVByb2Nlc3NlZE1hdGVyaWFscygpe3RoaXMuX3Byb2Nlc3NlZE1hdGVyaWFscy5kaXNwb3NlKCl9Z2V0IGJsb2NrZnJlZUFjdGl2ZU1lc2hlc0FuZFJlbmRlcmluZ0dyb3Vwcygpe3JldHVybiB0aGlzLl9wcmV2ZW50RnJlZUFjdGl2ZU1lc2hlc0FuZFJlbmRlcmluZ0dyb3Vwc31zZXQgYmxvY2tmcmVlQWN0aXZlTWVzaGVzQW5kUmVuZGVyaW5nR3JvdXBzKGUpe3RoaXMuX3ByZXZlbnRGcmVlQWN0aXZlTWVzaGVzQW5kUmVuZGVyaW5nR3JvdXBzIT09ZSYmKGUmJih0aGlzLmZyZWVBY3RpdmVNZXNoZXMoKSx0aGlzLmZyZWVSZW5kZXJpbmdHcm91cHMoKSksdGhpcy5fcHJldmVudEZyZWVBY3RpdmVNZXNoZXNBbmRSZW5kZXJpbmdHcm91cHM9ZSl9ZnJlZUFjdGl2ZU1lc2hlcygpe2lmKCF0aGlzLmJsb2NrZnJlZUFjdGl2ZU1lc2hlc0FuZFJlbmRlcmluZ0dyb3VwcyYmKHRoaXMuX2FjdGl2ZU1lc2hlcy5kaXNwb3NlKCksdGhpcy5hY3RpdmVDYW1lcmEmJnRoaXMuYWN0aXZlQ2FtZXJhLl9hY3RpdmVNZXNoZXMmJnRoaXMuYWN0aXZlQ2FtZXJhLl9hY3RpdmVNZXNoZXMuZGlzcG9zZSgpLHRoaXMuYWN0aXZlQ2FtZXJhcykpZm9yKGxldCBlPTA7ZTx0aGlzLmFjdGl2ZUNhbWVyYXMubGVuZ3RoO2UrKyl7Y29uc3QgdD10aGlzLmFjdGl2ZUNhbWVyYXNbZV07dCYmdC5fYWN0aXZlTWVzaGVzJiZ0Ll9hY3RpdmVNZXNoZXMuZGlzcG9zZSgpfX1mcmVlUmVuZGVyaW5nR3JvdXBzKCl7aWYoIXRoaXMuYmxvY2tmcmVlQWN0aXZlTWVzaGVzQW5kUmVuZGVyaW5nR3JvdXBzJiYodGhpcy5fcmVuZGVyaW5nTWFuYWdlciYmdGhpcy5fcmVuZGVyaW5nTWFuYWdlci5mcmVlUmVuZGVyaW5nR3JvdXBzKCksdGhpcy50ZXh0dXJlcykpZm9yKGxldCBlPTA7ZTx0aGlzLnRleHR1cmVzLmxlbmd0aDtlKyspe2NvbnN0IHQ9dGhpcy50ZXh0dXJlc1tlXTt0JiZ0LnJlbmRlckxpc3QmJnQuZnJlZVJlbmRlcmluZ0dyb3VwcygpfX1faXNJbkludGVybWVkaWF0ZVJlbmRlcmluZygpe3JldHVybiB0aGlzLl9pbnRlcm1lZGlhdGVSZW5kZXJpbmd9ZnJlZXplQWN0aXZlTWVzaGVzKGU9ITEsdCxpLHM9ITAscj0hMSl7cmV0dXJuIHRoaXMuZXhlY3V0ZVdoZW5SZWFkeSgoKT0+e2lmKCF0aGlzLmFjdGl2ZUNhbWVyYSl7aSYmaSgiTm8gYWN0aXZlIGNhbWVyYSBmb3VuZCIpO3JldHVybn1pZih0aGlzLl9mcnVzdHVtUGxhbmVzfHx0aGlzLnVwZGF0ZVRyYW5zZm9ybU1hdHJpeCgpLHRoaXMuX2V2YWx1YXRlQWN0aXZlTWVzaGVzKCksdGhpcy5fYWN0aXZlTWVzaGVzRnJvemVuPSEwLHRoaXMuX2FjdGl2ZU1lc2hlc0Zyb3plbkJ1dEtlZXBDbGlwcGluZz1yLHRoaXMuX3NraXBFdmFsdWF0ZUFjdGl2ZU1lc2hlc0NvbXBsZXRlbHk9ZSxzKWZvcihsZXQgbj0wO248dGhpcy5fYWN0aXZlTWVzaGVzLmxlbmd0aDtuKyspdGhpcy5fYWN0aXZlTWVzaGVzLmRhdGFbbl0uX2ZyZWV6ZSgpO3QmJnQoKX0pLHRoaXN9dW5mcmVlemVBY3RpdmVNZXNoZXMoKXtmb3IobGV0IGU9MDtlPHRoaXMubWVzaGVzLmxlbmd0aDtlKyspe2NvbnN0IHQ9dGhpcy5tZXNoZXNbZV07dC5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mbyYmKHQuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2lzQWN0aXZlPSExKX1mb3IobGV0IGU9MDtlPHRoaXMuX2FjdGl2ZU1lc2hlcy5sZW5ndGg7ZSsrKXRoaXMuX2FjdGl2ZU1lc2hlcy5kYXRhW2VdLl91bkZyZWV6ZSgpO3JldHVybiB0aGlzLl9hY3RpdmVNZXNoZXNGcm96ZW49ITEsdGhpc31fZXhlY3V0ZUFjdGl2ZUNvbnRhaW5lckNsZWFudXAoZSl7ISh0aGlzLl9lbmdpbmUuc25hcHNob3RSZW5kZXJpbmcmJnRoaXMuX2VuZ2luZS5zbmFwc2hvdFJlbmRlcmluZ01vZGU9PT0xKSYmdGhpcy5fYWN0aXZlTWVzaGVzRnJvemVuJiZ0aGlzLl9hY3RpdmVNZXNoZXMubGVuZ3RofHx0aGlzLm9uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZS5hZGRPbmNlKCgpPT5lLmRpc3Bvc2UoKSl9X2V2YWx1YXRlQWN0aXZlTWVzaGVzKCl7dmFyIGU7aWYodGhpcy5fZW5naW5lLnNuYXBzaG90UmVuZGVyaW5nJiZ0aGlzLl9lbmdpbmUuc25hcHNob3RSZW5kZXJpbmdNb2RlPT09MSl7dGhpcy5fYWN0aXZlTWVzaGVzLmxlbmd0aD4wJiYoKGU9dGhpcy5hY3RpdmVDYW1lcmEpPT09bnVsbHx8ZT09PXZvaWQgMHx8ZS5fYWN0aXZlTWVzaGVzLnJlc2V0KCksdGhpcy5fYWN0aXZlTWVzaGVzLnJlc2V0KCksdGhpcy5fcmVuZGVyaW5nTWFuYWdlci5yZXNldCgpLHRoaXMuX3Byb2Nlc3NlZE1hdGVyaWFscy5yZXNldCgpLHRoaXMuX2FjdGl2ZVBhcnRpY2xlU3lzdGVtcy5yZXNldCgpLHRoaXMuX2FjdGl2ZVNrZWxldG9ucy5yZXNldCgpLHRoaXMuX3NvZnR3YXJlU2tpbm5lZE1lc2hlcy5yZXNldCgpKTtyZXR1cm59aWYodGhpcy5fYWN0aXZlTWVzaGVzRnJvemVuJiZ0aGlzLl9hY3RpdmVNZXNoZXMubGVuZ3RoKXtpZighdGhpcy5fc2tpcEV2YWx1YXRlQWN0aXZlTWVzaGVzQ29tcGxldGVseSl7Y29uc3Qgcz10aGlzLl9hY3RpdmVNZXNoZXMubGVuZ3RoO2ZvcihsZXQgcj0wO3I8cztyKyspdGhpcy5fYWN0aXZlTWVzaGVzLmRhdGFbcl0uY29tcHV0ZVdvcmxkTWF0cml4KCl9aWYodGhpcy5fYWN0aXZlUGFydGljbGVTeXN0ZW1zKXtjb25zdCBzPXRoaXMuX2FjdGl2ZVBhcnRpY2xlU3lzdGVtcy5sZW5ndGg7Zm9yKGxldCByPTA7cjxzO3IrKyl0aGlzLl9hY3RpdmVQYXJ0aWNsZVN5c3RlbXMuZGF0YVtyXS5hbmltYXRlKCl9dGhpcy5fcmVuZGVyaW5nTWFuYWdlci5yZXNldFNwcml0ZXMoKTtyZXR1cm59aWYoIXRoaXMuYWN0aXZlQ2FtZXJhKXJldHVybjt0aGlzLm9uQmVmb3JlQWN0aXZlTWVzaGVzRXZhbHVhdGlvbk9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLHRoaXMuYWN0aXZlQ2FtZXJhLl9hY3RpdmVNZXNoZXMucmVzZXQoKSx0aGlzLl9hY3RpdmVNZXNoZXMucmVzZXQoKSx0aGlzLl9yZW5kZXJpbmdNYW5hZ2VyLnJlc2V0KCksdGhpcy5fcHJvY2Vzc2VkTWF0ZXJpYWxzLnJlc2V0KCksdGhpcy5fYWN0aXZlUGFydGljbGVTeXN0ZW1zLnJlc2V0KCksdGhpcy5fYWN0aXZlU2tlbGV0b25zLnJlc2V0KCksdGhpcy5fc29mdHdhcmVTa2lubmVkTWVzaGVzLnJlc2V0KCksdGhpcy5fbWF0ZXJpYWxzUmVuZGVyVGFyZ2V0cy5yZXNldCgpO2Zvcihjb25zdCBzIG9mIHRoaXMuX2JlZm9yZUV2YWx1YXRlQWN0aXZlTWVzaFN0YWdlKXMuYWN0aW9uKCk7Y29uc3QgdD10aGlzLmdldEFjdGl2ZU1lc2hDYW5kaWRhdGVzKCksaT10Lmxlbmd0aDtmb3IobGV0IHM9MDtzPGk7cysrKXtjb25zdCByPXQuZGF0YVtzXTtpZihyLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9jdXJyZW50TE9ESXNVcFRvRGF0ZT0hMSxyLmlzQmxvY2tlZHx8KHRoaXMuX3RvdGFsVmVydGljZXMuYWRkQ291bnQoci5nZXRUb3RhbFZlcnRpY2VzKCksITEpLCFyLmlzUmVhZHkoKXx8IXIuaXNFbmFibGVkKCl8fHIuc2NhbGluZy5oYXNBWmVyb0NvbXBvbmVudCkpY29udGludWU7ci5jb21wdXRlV29ybGRNYXRyaXgoKSxyLmFjdGlvbk1hbmFnZXImJnIuYWN0aW9uTWFuYWdlci5oYXNTcGVjaWZpY1RyaWdnZXJzMigxMiwxMykmJnRoaXMuX21lc2hlc0ZvckludGVyc2VjdGlvbnMucHVzaE5vRHVwbGljYXRlKHIpO2xldCBuPXRoaXMuY3VzdG9tTE9EU2VsZWN0b3I/dGhpcy5jdXN0b21MT0RTZWxlY3RvcihyLHRoaXMuYWN0aXZlQ2FtZXJhKTpyLmdldExPRCh0aGlzLmFjdGl2ZUNhbWVyYSk7aWYoci5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fY3VycmVudExPRD1uLHIuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2N1cnJlbnRMT0RJc1VwVG9EYXRlPSEwLG4hPW51bGwmJihuIT09ciYmbi5iaWxsYm9hcmRNb2RlIT09MCYmbi5jb21wdXRlV29ybGRNYXRyaXgoKSxyLl9wcmVBY3RpdmF0ZSgpLHIuaXNWaXNpYmxlJiZyLnZpc2liaWxpdHk+MCYmci5sYXllck1hc2smdGhpcy5hY3RpdmVDYW1lcmEubGF5ZXJNYXNrJiYodGhpcy5fc2tpcEZydXN0dW1DbGlwcGluZ3x8ci5hbHdheXNTZWxlY3RBc0FjdGl2ZU1lc2h8fHIuaXNJbkZydXN0dW0odGhpcy5fZnJ1c3R1bVBsYW5lcykpKSl7dGhpcy5fYWN0aXZlTWVzaGVzLnB1c2gociksdGhpcy5hY3RpdmVDYW1lcmEuX2FjdGl2ZU1lc2hlcy5wdXNoKHIpLG4hPT1yJiZuLl9hY3RpdmF0ZSh0aGlzLl9yZW5kZXJJZCwhMSk7Zm9yKGNvbnN0IGEgb2YgdGhpcy5fcHJlQWN0aXZlTWVzaFN0YWdlKWEuYWN0aW9uKHIpO3IuX2FjdGl2YXRlKHRoaXMuX3JlbmRlcklkLCExKSYmKHIuaXNBbkluc3RhbmNlP3IuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2FjdEFzUmVndWxhck1lc2gmJihuPXIpOm4uX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX29ubHlGb3JJbnN0YW5jZXM9ITEsbi5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5faXNBY3RpdmU9ITAsdGhpcy5fYWN0aXZlTWVzaChyLG4pKSxyLl9wb3N0QWN0aXZhdGUoKX19aWYodGhpcy5wYXJ0aWNsZXNFbmFibGVkKXt0aGlzLm9uQmVmb3JlUGFydGljbGVzUmVuZGVyaW5nT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyk7Zm9yKGxldCBzPTA7czx0aGlzLnBhcnRpY2xlU3lzdGVtcy5sZW5ndGg7cysrKXtjb25zdCByPXRoaXMucGFydGljbGVTeXN0ZW1zW3NdO2lmKCFyLmlzU3RhcnRlZCgpfHwhci5lbWl0dGVyKWNvbnRpbnVlO2NvbnN0IG49ci5lbWl0dGVyOyghbi5wb3NpdGlvbnx8bi5pc0VuYWJsZWQoKSkmJih0aGlzLl9hY3RpdmVQYXJ0aWNsZVN5c3RlbXMucHVzaChyKSxyLmFuaW1hdGUoKSx0aGlzLl9yZW5kZXJpbmdNYW5hZ2VyLmRpc3BhdGNoUGFydGljbGVzKHIpKX10aGlzLm9uQWZ0ZXJQYXJ0aWNsZXNSZW5kZXJpbmdPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKX19X2FjdGl2ZU1lc2goZSx0KXt0aGlzLl9za2VsZXRvbnNFbmFibGVkJiZ0LnNrZWxldG9uIT09bnVsbCYmdC5za2VsZXRvbiE9PXZvaWQgMCYmKHRoaXMuX2FjdGl2ZVNrZWxldG9ucy5wdXNoTm9EdXBsaWNhdGUodC5za2VsZXRvbikmJih0LnNrZWxldG9uLnByZXBhcmUoKSx0aGlzLl9hY3RpdmVCb25lcy5hZGRDb3VudCh0LnNrZWxldG9uLmJvbmVzLmxlbmd0aCwhMSkpLHQuY29tcHV0ZUJvbmVzVXNpbmdTaGFkZXJzfHx0aGlzLl9zb2Z0d2FyZVNraW5uZWRNZXNoZXMucHVzaE5vRHVwbGljYXRlKHQpKTtsZXQgaT1lLmhhc0luc3RhbmNlc3x8ZS5pc0FuSW5zdGFuY2V8fHRoaXMuZGlzcGF0Y2hBbGxTdWJNZXNoZXNPZkFjdGl2ZU1lc2hlc3x8dGhpcy5fc2tpcEZydXN0dW1DbGlwcGluZ3x8dC5hbHdheXNTZWxlY3RBc0FjdGl2ZU1lc2g7aWYodCYmdC5zdWJNZXNoZXMmJnQuc3ViTWVzaGVzLmxlbmd0aD4wKXtjb25zdCBzPXRoaXMuZ2V0QWN0aXZlU3ViTWVzaENhbmRpZGF0ZXModCkscj1zLmxlbmd0aDtpPWl8fHI9PT0xO2ZvcihsZXQgbj0wO248cjtuKyspe2NvbnN0IGE9cy5kYXRhW25dO3RoaXMuX2V2YWx1YXRlU3ViTWVzaChhLHQsZSxpKX19fXVwZGF0ZVRyYW5zZm9ybU1hdHJpeChlKXtpZih0aGlzLmFjdGl2ZUNhbWVyYSlpZih0aGlzLmFjdGl2ZUNhbWVyYS5fcmVuZGVyaW5nTXVsdGl2aWV3KXtjb25zdCB0PXRoaXMuYWN0aXZlQ2FtZXJhLl9yaWdDYW1lcmFzWzBdLGk9dGhpcy5hY3RpdmVDYW1lcmEuX3JpZ0NhbWVyYXNbMV07dGhpcy5zZXRUcmFuc2Zvcm1NYXRyaXgodC5nZXRWaWV3TWF0cml4KCksdC5nZXRQcm9qZWN0aW9uTWF0cml4KGUpLGkuZ2V0Vmlld01hdHJpeCgpLGkuZ2V0UHJvamVjdGlvbk1hdHJpeChlKSl9ZWxzZSB0aGlzLnNldFRyYW5zZm9ybU1hdHJpeCh0aGlzLmFjdGl2ZUNhbWVyYS5nZXRWaWV3TWF0cml4KCksdGhpcy5hY3RpdmVDYW1lcmEuZ2V0UHJvamVjdGlvbk1hdHJpeChlKSl9X2JpbmRGcmFtZUJ1ZmZlcihlLHQ9ITApe2UmJmUuX211bHRpdmlld1RleHR1cmU/ZS5fbXVsdGl2aWV3VGV4dHVyZS5fYmluZEZyYW1lQnVmZmVyKCk6ZSYmZS5vdXRwdXRSZW5kZXJUYXJnZXQ/ZS5vdXRwdXRSZW5kZXJUYXJnZXQuX2JpbmRGcmFtZUJ1ZmZlcigpOnRoaXMuX2VuZ2luZS5fY3VycmVudEZyYW1lQnVmZmVySXNEZWZhdWx0RnJhbWVCdWZmZXIoKXx8dGhpcy5fZW5naW5lLnJlc3RvcmVEZWZhdWx0RnJhbWVidWZmZXIoKSx0JiZ0aGlzLl9jbGVhckZyYW1lQnVmZmVyKGUpfV9jbGVhckZyYW1lQnVmZmVyKGUpe2lmKCEoZSYmZS5fbXVsdGl2aWV3VGV4dHVyZSkpaWYoZSYmZS5vdXRwdXRSZW5kZXJUYXJnZXQmJiFlLl9yZW5kZXJpbmdNdWx0aXZpZXcpe2NvbnN0IHQ9ZS5vdXRwdXRSZW5kZXJUYXJnZXQ7dC5vbkNsZWFyT2JzZXJ2YWJsZS5oYXNPYnNlcnZlcnMoKT90Lm9uQ2xlYXJPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzLl9lbmdpbmUpOnQuc2tpcEluaXRpYWxDbGVhcnx8KHRoaXMuYXV0b0NsZWFyJiZ0aGlzLl9lbmdpbmUuY2xlYXIodC5jbGVhckNvbG9yfHx0aGlzLmNsZWFyQ29sb3IsIXQuX2NsZWFyZWQsITAsITApLHQuX2NsZWFyZWQ9ITApfWVsc2UgdGhpcy5fZGVmYXVsdEZyYW1lQnVmZmVyQ2xlYXJlZD90aGlzLl9lbmdpbmUuY2xlYXIobnVsbCwhMSwhMCwhMCk6KHRoaXMuX2RlZmF1bHRGcmFtZUJ1ZmZlckNsZWFyZWQ9ITAsdGhpcy5fY2xlYXIoKSl9X3JlbmRlckZvckNhbWVyYShlLHQsaT0hMCl7dmFyIHMscixuO2lmKGUmJmUuX3NraXBSZW5kZXJpbmcpcmV0dXJuO2NvbnN0IGE9dGhpcy5fZW5naW5lO2lmKHRoaXMuX2FjdGl2ZUNhbWVyYT1lLCF0aGlzLmFjdGl2ZUNhbWVyYSl0aHJvdyBuZXcgRXJyb3IoIkFjdGl2ZSBjYW1lcmEgbm90IHNldCIpO2lmKGEuc2V0Vmlld3BvcnQodGhpcy5hY3RpdmVDYW1lcmEudmlld3BvcnQpLHRoaXMucmVzZXRDYWNoZWRNYXRlcmlhbCgpLHRoaXMuX3JlbmRlcklkKyssIXRoaXMucHJlUGFzcyYmaSl7bGV0IGg9ITA7ZS5fcmVuZGVyaW5nTXVsdGl2aWV3JiZlLm91dHB1dFJlbmRlclRhcmdldCYmKGg9ZS5vdXRwdXRSZW5kZXJUYXJnZXQuc2tpcEluaXRpYWxDbGVhcix0aGlzLmF1dG9DbGVhciYmKGUub3V0cHV0UmVuZGVyVGFyZ2V0LnNraXBJbml0aWFsQ2xlYXI9ITEpKSx0aGlzLl9iaW5kRnJhbWVCdWZmZXIodGhpcy5fYWN0aXZlQ2FtZXJhKSxlLl9yZW5kZXJpbmdNdWx0aXZpZXcmJmUub3V0cHV0UmVuZGVyVGFyZ2V0JiYoZS5vdXRwdXRSZW5kZXJUYXJnZXQuc2tpcEluaXRpYWxDbGVhcj1oKX10aGlzLnVwZGF0ZVRyYW5zZm9ybU1hdHJpeCgpLHRoaXMub25CZWZvcmVDYW1lcmFSZW5kZXJPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzLmFjdGl2ZUNhbWVyYSksdGhpcy5fZXZhbHVhdGVBY3RpdmVNZXNoZXMoKTtmb3IobGV0IGg9MDtoPHRoaXMuX3NvZnR3YXJlU2tpbm5lZE1lc2hlcy5sZW5ndGg7aCsrKXtjb25zdCBsPXRoaXMuX3NvZnR3YXJlU2tpbm5lZE1lc2hlcy5kYXRhW2hdO2wuYXBwbHlTa2VsZXRvbihsLnNrZWxldG9uKX10aGlzLm9uQmVmb3JlUmVuZGVyVGFyZ2V0c1JlbmRlck9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLHRoaXMuX3JlbmRlclRhcmdldHMuY29uY2F0V2l0aE5vRHVwbGljYXRlKHRoaXMuX21hdGVyaWFsc1JlbmRlclRhcmdldHMpLGUuY3VzdG9tUmVuZGVyVGFyZ2V0cyYmZS5jdXN0b21SZW5kZXJUYXJnZXRzLmxlbmd0aD4wJiZ0aGlzLl9yZW5kZXJUYXJnZXRzLmNvbmNhdFdpdGhOb0R1cGxpY2F0ZShlLmN1c3RvbVJlbmRlclRhcmdldHMpLHQmJnQuY3VzdG9tUmVuZGVyVGFyZ2V0cyYmdC5jdXN0b21SZW5kZXJUYXJnZXRzLmxlbmd0aD4wJiZ0aGlzLl9yZW5kZXJUYXJnZXRzLmNvbmNhdFdpdGhOb0R1cGxpY2F0ZSh0LmN1c3RvbVJlbmRlclRhcmdldHMpLHRoaXMuZW52aXJvbm1lbnRUZXh0dXJlJiZ0aGlzLmVudmlyb25tZW50VGV4dHVyZS5pc1JlbmRlclRhcmdldCYmdGhpcy5fcmVuZGVyVGFyZ2V0cy5wdXNoTm9EdXBsaWNhdGUodGhpcy5lbnZpcm9ubWVudFRleHR1cmUpO2Zvcihjb25zdCBoIG9mIHRoaXMuX2dhdGhlckFjdGl2ZUNhbWVyYVJlbmRlclRhcmdldHNTdGFnZSloLmFjdGlvbih0aGlzLl9yZW5kZXJUYXJnZXRzKTtsZXQgbz0hMTtpZih0aGlzLnJlbmRlclRhcmdldHNFbmFibGVkKXtpZih0aGlzLl9pbnRlcm1lZGlhdGVSZW5kZXJpbmc9ITAsdGhpcy5fcmVuZGVyVGFyZ2V0cy5sZW5ndGg+MCl7SC5TdGFydFBlcmZvcm1hbmNlQ291bnRlcigiUmVuZGVyIHRhcmdldHMiLHRoaXMuX3JlbmRlclRhcmdldHMubGVuZ3RoPjApO2ZvcihsZXQgaD0wO2g8dGhpcy5fcmVuZGVyVGFyZ2V0cy5sZW5ndGg7aCsrKXtjb25zdCBsPXRoaXMuX3JlbmRlclRhcmdldHMuZGF0YVtoXTtpZihsLl9zaG91bGRSZW5kZXIoKSl7dGhpcy5fcmVuZGVySWQrKztjb25zdCB1PWwuYWN0aXZlQ2FtZXJhJiZsLmFjdGl2ZUNhbWVyYSE9PXRoaXMuYWN0aXZlQ2FtZXJhO2wucmVuZGVyKHUsdGhpcy5kdW1wTmV4dFJlbmRlclRhcmdldHMpLG89ITB9fUguRW5kUGVyZm9ybWFuY2VDb3VudGVyKCJSZW5kZXIgdGFyZ2V0cyIsdGhpcy5fcmVuZGVyVGFyZ2V0cy5sZW5ndGg+MCksdGhpcy5fcmVuZGVySWQrK31mb3IoY29uc3QgaCBvZiB0aGlzLl9jYW1lcmFEcmF3UmVuZGVyVGFyZ2V0U3RhZ2Upbz1oLmFjdGlvbih0aGlzLmFjdGl2ZUNhbWVyYSl8fG87dGhpcy5faW50ZXJtZWRpYXRlUmVuZGVyaW5nPSExfXRoaXMuX2VuZ2luZS5jdXJyZW50UmVuZGVyUGFzc0lkPShuPShyPShzPWUub3V0cHV0UmVuZGVyVGFyZ2V0KT09PW51bGx8fHM9PT12b2lkIDA/dm9pZCAwOnMucmVuZGVyUGFzc0lkKSE9PW51bGwmJnIhPT12b2lkIDA/cjplLnJlbmRlclBhc3NJZCkhPT1udWxsJiZuIT09dm9pZCAwP246MCxvJiYhdGhpcy5wcmVQYXNzJiZ0aGlzLl9iaW5kRnJhbWVCdWZmZXIodGhpcy5fYWN0aXZlQ2FtZXJhLCExKSx0aGlzLm9uQWZ0ZXJSZW5kZXJUYXJnZXRzUmVuZGVyT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyksdGhpcy5wb3N0UHJvY2Vzc01hbmFnZXImJiFlLl9tdWx0aXZpZXdUZXh0dXJlJiYhdGhpcy5wcmVQYXNzJiZ0aGlzLnBvc3RQcm9jZXNzTWFuYWdlci5fcHJlcGFyZUZyYW1lKCk7Zm9yKGNvbnN0IGggb2YgdGhpcy5fYmVmb3JlQ2FtZXJhRHJhd1N0YWdlKWguYWN0aW9uKHRoaXMuYWN0aXZlQ2FtZXJhKTt0aGlzLm9uQmVmb3JlRHJhd1BoYXNlT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyksYS5zbmFwc2hvdFJlbmRlcmluZyYmYS5zbmFwc2hvdFJlbmRlcmluZ01vZGU9PT0xJiZ0aGlzLmZpbmFsaXplU2NlbmVVYm8oKSx0aGlzLl9yZW5kZXJpbmdNYW5hZ2VyLnJlbmRlcihudWxsLG51bGwsITAsITApLHRoaXMub25BZnRlckRyYXdQaGFzZU9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpO2Zvcihjb25zdCBoIG9mIHRoaXMuX2FmdGVyQ2FtZXJhRHJhd1N0YWdlKWguYWN0aW9uKHRoaXMuYWN0aXZlQ2FtZXJhKTtpZih0aGlzLnBvc3RQcm9jZXNzTWFuYWdlciYmIWUuX211bHRpdmlld1RleHR1cmUpe2NvbnN0IGg9ZS5vdXRwdXRSZW5kZXJUYXJnZXQ/ZS5vdXRwdXRSZW5kZXJUYXJnZXQucmVuZGVyVGFyZ2V0OnZvaWQgMDt0aGlzLnBvc3RQcm9jZXNzTWFuYWdlci5fZmluYWxpemVGcmFtZShlLmlzSW50ZXJtZWRpYXRlLGgpfWZvcihjb25zdCBoIG9mIHRoaXMuX2FmdGVyQ2FtZXJhUG9zdFByb2Nlc3NTdGFnZSloLmFjdGlvbih0aGlzLmFjdGl2ZUNhbWVyYSk7dGhpcy5fcmVuZGVyVGFyZ2V0cy5yZXNldCgpLHRoaXMub25BZnRlckNhbWVyYVJlbmRlck9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMuYWN0aXZlQ2FtZXJhKX1fcHJvY2Vzc1N1YkNhbWVyYXMoZSx0PSEwKXtpZihlLmNhbWVyYVJpZ01vZGU9PT0wfHxlLl9yZW5kZXJpbmdNdWx0aXZpZXcpe2UuX3JlbmRlcmluZ011bHRpdmlldyYmIXRoaXMuX211bHRpdmlld1NjZW5lVWJvJiZ0aGlzLl9jcmVhdGVNdWx0aXZpZXdVYm8oKSx0aGlzLl9yZW5kZXJGb3JDYW1lcmEoZSx2b2lkIDAsdCksdGhpcy5vbkFmdGVyUmVuZGVyQ2FtZXJhT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoZSk7cmV0dXJufWlmKGUuX3VzZU11bHRpdmlld1RvU2luZ2xlVmlldyl0aGlzLl9yZW5kZXJNdWx0aXZpZXdUb1NpbmdsZVZpZXcoZSk7ZWxzZXt0aGlzLm9uQmVmb3JlQ2FtZXJhUmVuZGVyT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoZSk7Zm9yKGxldCBpPTA7aTxlLl9yaWdDYW1lcmFzLmxlbmd0aDtpKyspdGhpcy5fcmVuZGVyRm9yQ2FtZXJhKGUuX3JpZ0NhbWVyYXNbaV0sZSl9dGhpcy5fYWN0aXZlQ2FtZXJhPWUsdGhpcy51cGRhdGVUcmFuc2Zvcm1NYXRyaXgoKSx0aGlzLm9uQWZ0ZXJSZW5kZXJDYW1lcmFPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhlKX1fY2hlY2tJbnRlcnNlY3Rpb25zKCl7Zm9yKGxldCBlPTA7ZTx0aGlzLl9tZXNoZXNGb3JJbnRlcnNlY3Rpb25zLmxlbmd0aDtlKyspe2NvbnN0IHQ9dGhpcy5fbWVzaGVzRm9ySW50ZXJzZWN0aW9ucy5kYXRhW2VdO2lmKHQuYWN0aW9uTWFuYWdlcilmb3IobGV0IGk9MDt0LmFjdGlvbk1hbmFnZXImJmk8dC5hY3Rpb25NYW5hZ2VyLmFjdGlvbnMubGVuZ3RoO2krKyl7Y29uc3Qgcz10LmFjdGlvbk1hbmFnZXIuYWN0aW9uc1tpXTtpZihzLnRyaWdnZXI9PT0xMnx8cy50cmlnZ2VyPT09MTMpe2NvbnN0IHI9cy5nZXRUcmlnZ2VyUGFyYW1ldGVyKCksbj1yLm1lc2g/ci5tZXNoOnIsYT1uLmludGVyc2VjdHNNZXNoKHQsci51c2VQcmVjaXNlSW50ZXJzZWN0aW9uKSxvPXQuX2ludGVyc2VjdGlvbnNJblByb2dyZXNzLmluZGV4T2Yobik7YSYmbz09PS0xP3MudHJpZ2dlcj09PTEyPyhzLl9leGVjdXRlQ3VycmVudChWZS5DcmVhdGVOZXcodCx2b2lkIDAsbikpLHQuX2ludGVyc2VjdGlvbnNJblByb2dyZXNzLnB1c2gobikpOnMudHJpZ2dlcj09PTEzJiZ0Ll9pbnRlcnNlY3Rpb25zSW5Qcm9ncmVzcy5wdXNoKG4pOiFhJiZvPi0xJiYocy50cmlnZ2VyPT09MTMmJnMuX2V4ZWN1dGVDdXJyZW50KFZlLkNyZWF0ZU5ldyh0LHZvaWQgMCxuKSksKCF0LmFjdGlvbk1hbmFnZXIuaGFzU3BlY2lmaWNUcmlnZ2VyKDEzLGg9Pntjb25zdCBsPWgubWVzaD9oLm1lc2g6aDtyZXR1cm4gbj09PWx9KXx8cy50cmlnZ2VyPT09MTMpJiZ0Ll9pbnRlcnNlY3Rpb25zSW5Qcm9ncmVzcy5zcGxpY2UobywxKSl9fX19X2FkdmFuY2VQaHlzaWNzRW5naW5lU3RlcChlKXt9X2FuaW1hdGUoKXt9YW5pbWF0ZSgpe2lmKHRoaXMuX2VuZ2luZS5pc0RldGVybWluaXN0aWNMb2NrU3RlcCgpKXtsZXQgZT1NYXRoLm1heChuZS5NaW5EZWx0YVRpbWUsTWF0aC5taW4odGhpcy5fZW5naW5lLmdldERlbHRhVGltZSgpLG5lLk1heERlbHRhVGltZSkpK3RoaXMuX3RpbWVBY2N1bXVsYXRvcjtjb25zdCB0PXRoaXMuX2VuZ2luZS5nZXRUaW1lU3RlcCgpLGk9MWUzL3QvMWUzO2xldCBzPTA7Y29uc3Qgcj10aGlzLl9lbmdpbmUuZ2V0TG9ja3N0ZXBNYXhTdGVwcygpO2xldCBuPU1hdGguZmxvb3IoZS90KTtmb3Iobj1NYXRoLm1pbihuLHIpO2U+MCYmczxuOyl0aGlzLm9uQmVmb3JlU3RlcE9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLHRoaXMuX2FuaW1hdGlvblJhdGlvPXQqaSx0aGlzLl9hbmltYXRlKCksdGhpcy5vbkFmdGVyQW5pbWF0aW9uc09ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLHRoaXMucGh5c2ljc0VuYWJsZWQmJnRoaXMuX2FkdmFuY2VQaHlzaWNzRW5naW5lU3RlcCh0KSx0aGlzLm9uQWZ0ZXJTdGVwT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyksdGhpcy5fY3VycmVudFN0ZXBJZCsrLHMrKyxlLT10O3RoaXMuX3RpbWVBY2N1bXVsYXRvcj1lPDA/MDplfWVsc2V7Y29uc3QgZT10aGlzLnVzZUNvbnN0YW50QW5pbWF0aW9uRGVsdGFUaW1lPzE2Ok1hdGgubWF4KG5lLk1pbkRlbHRhVGltZSxNYXRoLm1pbih0aGlzLl9lbmdpbmUuZ2V0RGVsdGFUaW1lKCksbmUuTWF4RGVsdGFUaW1lKSk7dGhpcy5fYW5pbWF0aW9uUmF0aW89ZSooNjAvMWUzKSx0aGlzLl9hbmltYXRlKCksdGhpcy5vbkFmdGVyQW5pbWF0aW9uc09ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLHRoaXMucGh5c2ljc0VuYWJsZWQmJnRoaXMuX2FkdmFuY2VQaHlzaWNzRW5naW5lU3RlcChlKX19X2NsZWFyKCl7KHRoaXMuYXV0b0NsZWFyRGVwdGhBbmRTdGVuY2lsfHx0aGlzLmF1dG9DbGVhcikmJnRoaXMuX2VuZ2luZS5jbGVhcih0aGlzLmNsZWFyQ29sb3IsdGhpcy5hdXRvQ2xlYXJ8fHRoaXMuZm9yY2VXaXJlZnJhbWV8fHRoaXMuZm9yY2VQb2ludHNDbG91ZCx0aGlzLmF1dG9DbGVhckRlcHRoQW5kU3RlbmNpbCx0aGlzLmF1dG9DbGVhckRlcHRoQW5kU3RlbmNpbCl9X2NoZWNrQ2FtZXJhUmVuZGVyVGFyZ2V0KGUpe3ZhciB0O2lmKGUhPW51bGwmJmUub3V0cHV0UmVuZGVyVGFyZ2V0JiYhKGUhPW51bGwmJmUuaXNSaWdDYW1lcmEpJiYoZS5vdXRwdXRSZW5kZXJUYXJnZXQuX2NsZWFyZWQ9ITEpLCEoKHQ9ZT09bnVsbD92b2lkIDA6ZS5yaWdDYW1lcmFzKT09PW51bGx8fHQ9PT12b2lkIDApJiZ0Lmxlbmd0aClmb3IobGV0IGk9MDtpPGUucmlnQ2FtZXJhcy5sZW5ndGg7KytpKXtjb25zdCBzPWUucmlnQ2FtZXJhc1tpXS5vdXRwdXRSZW5kZXJUYXJnZXQ7cyYmKHMuX2NsZWFyZWQ9ITEpfX1yZXNldERyYXdDYWNoZShlKXtpZih0aGlzLm1lc2hlcylmb3IoY29uc3QgdCBvZiB0aGlzLm1lc2hlcyl0LnJlc2V0RHJhd0NhY2hlKGUpfXJlbmRlcihlPSEwLHQ9ITEpe3ZhciBpLHMscjtpZih0aGlzLmlzRGlzcG9zZWQpcmV0dXJuO3RoaXMub25SZWFkeU9ic2VydmFibGUuaGFzT2JzZXJ2ZXJzKCkmJnRoaXMuX2V4ZWN1dGVXaGVuUmVhZHlUaW1lb3V0SWQ9PT1udWxsJiZ0aGlzLl9jaGVja0lzUmVhZHkoKSx0aGlzLl9mcmFtZUlkKyssdGhpcy5fZGVmYXVsdEZyYW1lQnVmZmVyQ2xlYXJlZD0hMSx0aGlzLl9jaGVja0NhbWVyYVJlbmRlclRhcmdldCh0aGlzLmFjdGl2ZUNhbWVyYSksISgoaT10aGlzLmFjdGl2ZUNhbWVyYXMpPT09bnVsbHx8aT09PXZvaWQgMCkmJmkubGVuZ3RoJiZ0aGlzLmFjdGl2ZUNhbWVyYXMuZm9yRWFjaCh0aGlzLl9jaGVja0NhbWVyYVJlbmRlclRhcmdldCksdGhpcy5fcmVnaXN0ZXJUcmFuc2llbnRDb21wb25lbnRzKCksdGhpcy5fYWN0aXZlUGFydGljbGVzLmZldGNoTmV3RnJhbWUoKSx0aGlzLl90b3RhbFZlcnRpY2VzLmZldGNoTmV3RnJhbWUoKSx0aGlzLl9hY3RpdmVJbmRpY2VzLmZldGNoTmV3RnJhbWUoKSx0aGlzLl9hY3RpdmVCb25lcy5mZXRjaE5ld0ZyYW1lKCksdGhpcy5fbWVzaGVzRm9ySW50ZXJzZWN0aW9ucy5yZXNldCgpLHRoaXMucmVzZXRDYWNoZWRNYXRlcmlhbCgpLHRoaXMub25CZWZvcmVBbmltYXRpb25zT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyksdGhpcy5hY3Rpb25NYW5hZ2VyJiZ0aGlzLmFjdGlvbk1hbmFnZXIucHJvY2Vzc1RyaWdnZXIoMTEpLHR8fHRoaXMuYW5pbWF0ZSgpO2Zvcihjb25zdCBvIG9mIHRoaXMuX2JlZm9yZUNhbWVyYVVwZGF0ZVN0YWdlKW8uYWN0aW9uKCk7aWYoZSl7aWYodGhpcy5hY3RpdmVDYW1lcmFzJiZ0aGlzLmFjdGl2ZUNhbWVyYXMubGVuZ3RoPjApZm9yKGxldCBvPTA7bzx0aGlzLmFjdGl2ZUNhbWVyYXMubGVuZ3RoO28rKyl7Y29uc3QgaD10aGlzLmFjdGl2ZUNhbWVyYXNbb107aWYoaC51cGRhdGUoKSxoLmNhbWVyYVJpZ01vZGUhPT0wKWZvcihsZXQgbD0wO2w8aC5fcmlnQ2FtZXJhcy5sZW5ndGg7bCsrKWguX3JpZ0NhbWVyYXNbbF0udXBkYXRlKCl9ZWxzZSBpZih0aGlzLmFjdGl2ZUNhbWVyYSYmKHRoaXMuYWN0aXZlQ2FtZXJhLnVwZGF0ZSgpLHRoaXMuYWN0aXZlQ2FtZXJhLmNhbWVyYVJpZ01vZGUhPT0wKSlmb3IobGV0IG89MDtvPHRoaXMuYWN0aXZlQ2FtZXJhLl9yaWdDYW1lcmFzLmxlbmd0aDtvKyspdGhpcy5hY3RpdmVDYW1lcmEuX3JpZ0NhbWVyYXNbb10udXBkYXRlKCl9dGhpcy5vbkJlZm9yZVJlbmRlck9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpO2NvbnN0IG49dGhpcy5nZXRFbmdpbmUoKTt0aGlzLm9uQmVmb3JlUmVuZGVyVGFyZ2V0c1JlbmRlck9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpO2NvbnN0IGE9ISgocz10aGlzLmFjdGl2ZUNhbWVyYXMpPT09bnVsbHx8cz09PXZvaWQgMCkmJnMubGVuZ3RoP3RoaXMuYWN0aXZlQ2FtZXJhc1swXTp0aGlzLmFjdGl2ZUNhbWVyYTtpZih0aGlzLnJlbmRlclRhcmdldHNFbmFibGVkKXtILlN0YXJ0UGVyZm9ybWFuY2VDb3VudGVyKCJDdXN0b20gcmVuZGVyIHRhcmdldHMiLHRoaXMuY3VzdG9tUmVuZGVyVGFyZ2V0cy5sZW5ndGg+MCksdGhpcy5faW50ZXJtZWRpYXRlUmVuZGVyaW5nPSEwO2ZvcihsZXQgbz0wO288dGhpcy5jdXN0b21SZW5kZXJUYXJnZXRzLmxlbmd0aDtvKyspe2NvbnN0IGg9dGhpcy5jdXN0b21SZW5kZXJUYXJnZXRzW29dO2lmKGguX3Nob3VsZFJlbmRlcigpKXtpZih0aGlzLl9yZW5kZXJJZCsrLHRoaXMuYWN0aXZlQ2FtZXJhPWguYWN0aXZlQ2FtZXJhfHx0aGlzLmFjdGl2ZUNhbWVyYSwhdGhpcy5hY3RpdmVDYW1lcmEpdGhyb3cgbmV3IEVycm9yKCJBY3RpdmUgY2FtZXJhIG5vdCBzZXQiKTtuLnNldFZpZXdwb3J0KHRoaXMuYWN0aXZlQ2FtZXJhLnZpZXdwb3J0KSx0aGlzLnVwZGF0ZVRyYW5zZm9ybU1hdHJpeCgpLGgucmVuZGVyKGEhPT10aGlzLmFjdGl2ZUNhbWVyYSx0aGlzLmR1bXBOZXh0UmVuZGVyVGFyZ2V0cyl9fUguRW5kUGVyZm9ybWFuY2VDb3VudGVyKCJDdXN0b20gcmVuZGVyIHRhcmdldHMiLHRoaXMuY3VzdG9tUmVuZGVyVGFyZ2V0cy5sZW5ndGg+MCksdGhpcy5faW50ZXJtZWRpYXRlUmVuZGVyaW5nPSExLHRoaXMuX3JlbmRlcklkKyt9dGhpcy5fZW5naW5lLmN1cnJlbnRSZW5kZXJQYXNzSWQ9KHI9YT09bnVsbD92b2lkIDA6YS5yZW5kZXJQYXNzSWQpIT09bnVsbCYmciE9PXZvaWQgMD9yOjAsdGhpcy5hY3RpdmVDYW1lcmE9YSx0aGlzLl9hY3RpdmVDYW1lcmEmJnRoaXMuX2FjdGl2ZUNhbWVyYS5jYW1lcmFSaWdNb2RlIT09MjImJiF0aGlzLnByZVBhc3MmJnRoaXMuX2JpbmRGcmFtZUJ1ZmZlcih0aGlzLl9hY3RpdmVDYW1lcmEsITEpLHRoaXMub25BZnRlclJlbmRlclRhcmdldHNSZW5kZXJPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKTtmb3IoY29uc3QgbyBvZiB0aGlzLl9iZWZvcmVDbGVhclN0YWdlKW8uYWN0aW9uKCk7dGhpcy5fY2xlYXJGcmFtZUJ1ZmZlcih0aGlzLmFjdGl2ZUNhbWVyYSk7Zm9yKGNvbnN0IG8gb2YgdGhpcy5fZ2F0aGVyUmVuZGVyVGFyZ2V0c1N0YWdlKW8uYWN0aW9uKHRoaXMuX3JlbmRlclRhcmdldHMpO2lmKHRoaXMuYWN0aXZlQ2FtZXJhcyYmdGhpcy5hY3RpdmVDYW1lcmFzLmxlbmd0aD4wKWZvcihsZXQgbz0wO288dGhpcy5hY3RpdmVDYW1lcmFzLmxlbmd0aDtvKyspdGhpcy5fcHJvY2Vzc1N1YkNhbWVyYXModGhpcy5hY3RpdmVDYW1lcmFzW29dLG8+MCk7ZWxzZXtpZighdGhpcy5hY3RpdmVDYW1lcmEpdGhyb3cgbmV3IEVycm9yKCJObyBjYW1lcmEgZGVmaW5lZCIpO3RoaXMuX3Byb2Nlc3NTdWJDYW1lcmFzKHRoaXMuYWN0aXZlQ2FtZXJhLCEhdGhpcy5hY3RpdmVDYW1lcmEub3V0cHV0UmVuZGVyVGFyZ2V0KX10aGlzLl9jaGVja0ludGVyc2VjdGlvbnMoKTtmb3IoY29uc3QgbyBvZiB0aGlzLl9hZnRlclJlbmRlclN0YWdlKW8uYWN0aW9uKCk7aWYodGhpcy5hZnRlclJlbmRlciYmdGhpcy5hZnRlclJlbmRlcigpLHRoaXMub25BZnRlclJlbmRlck9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLHRoaXMuX3RvQmVEaXNwb3NlZC5sZW5ndGgpe2ZvcihsZXQgbz0wO288dGhpcy5fdG9CZURpc3Bvc2VkLmxlbmd0aDtvKyspe2NvbnN0IGg9dGhpcy5fdG9CZURpc3Bvc2VkW29dO2gmJmguZGlzcG9zZSgpfXRoaXMuX3RvQmVEaXNwb3NlZC5sZW5ndGg9MH10aGlzLmR1bXBOZXh0UmVuZGVyVGFyZ2V0cyYmKHRoaXMuZHVtcE5leHRSZW5kZXJUYXJnZXRzPSExKSx0aGlzLl9hY3RpdmVCb25lcy5hZGRDb3VudCgwLCEwKSx0aGlzLl9hY3RpdmVJbmRpY2VzLmFkZENvdW50KDAsITApLHRoaXMuX2FjdGl2ZVBhcnRpY2xlcy5hZGRDb3VudCgwLCEwKSx0aGlzLl9lbmdpbmUucmVzdG9yZURlZmF1bHRGcmFtZWJ1ZmZlcigpfWZyZWV6ZU1hdGVyaWFscygpe2ZvcihsZXQgZT0wO2U8dGhpcy5tYXRlcmlhbHMubGVuZ3RoO2UrKyl0aGlzLm1hdGVyaWFsc1tlXS5mcmVlemUoKX11bmZyZWV6ZU1hdGVyaWFscygpe2ZvcihsZXQgZT0wO2U8dGhpcy5tYXRlcmlhbHMubGVuZ3RoO2UrKyl0aGlzLm1hdGVyaWFsc1tlXS51bmZyZWV6ZSgpfWRpc3Bvc2UoKXtpZih0aGlzLmlzRGlzcG9zZWQpcmV0dXJuO3RoaXMuYmVmb3JlUmVuZGVyPW51bGwsdGhpcy5hZnRlclJlbmRlcj1udWxsLHRoaXMubWV0YWRhdGE9bnVsbCx0aGlzLnNrZWxldG9ucy5sZW5ndGg9MCx0aGlzLm1vcnBoVGFyZ2V0TWFuYWdlcnMubGVuZ3RoPTAsdGhpcy5fdHJhbnNpZW50Q29tcG9uZW50cy5sZW5ndGg9MCx0aGlzLl9pc1JlYWR5Rm9yTWVzaFN0YWdlLmNsZWFyKCksdGhpcy5fYmVmb3JlRXZhbHVhdGVBY3RpdmVNZXNoU3RhZ2UuY2xlYXIoKSx0aGlzLl9ldmFsdWF0ZVN1Yk1lc2hTdGFnZS5jbGVhcigpLHRoaXMuX3ByZUFjdGl2ZU1lc2hTdGFnZS5jbGVhcigpLHRoaXMuX2NhbWVyYURyYXdSZW5kZXJUYXJnZXRTdGFnZS5jbGVhcigpLHRoaXMuX2JlZm9yZUNhbWVyYURyYXdTdGFnZS5jbGVhcigpLHRoaXMuX2JlZm9yZVJlbmRlclRhcmdldERyYXdTdGFnZS5jbGVhcigpLHRoaXMuX2JlZm9yZVJlbmRlcmluZ0dyb3VwRHJhd1N0YWdlLmNsZWFyKCksdGhpcy5fYmVmb3JlUmVuZGVyaW5nTWVzaFN0YWdlLmNsZWFyKCksdGhpcy5fYWZ0ZXJSZW5kZXJpbmdNZXNoU3RhZ2UuY2xlYXIoKSx0aGlzLl9hZnRlclJlbmRlcmluZ0dyb3VwRHJhd1N0YWdlLmNsZWFyKCksdGhpcy5fYWZ0ZXJDYW1lcmFEcmF3U3RhZ2UuY2xlYXIoKSx0aGlzLl9hZnRlclJlbmRlclRhcmdldERyYXdTdGFnZS5jbGVhcigpLHRoaXMuX2FmdGVyUmVuZGVyU3RhZ2UuY2xlYXIoKSx0aGlzLl9iZWZvcmVDYW1lcmFVcGRhdGVTdGFnZS5jbGVhcigpLHRoaXMuX2JlZm9yZUNsZWFyU3RhZ2UuY2xlYXIoKSx0aGlzLl9nYXRoZXJSZW5kZXJUYXJnZXRzU3RhZ2UuY2xlYXIoKSx0aGlzLl9nYXRoZXJBY3RpdmVDYW1lcmFSZW5kZXJUYXJnZXRzU3RhZ2UuY2xlYXIoKSx0aGlzLl9wb2ludGVyTW92ZVN0YWdlLmNsZWFyKCksdGhpcy5fcG9pbnRlckRvd25TdGFnZS5jbGVhcigpLHRoaXMuX3BvaW50ZXJVcFN0YWdlLmNsZWFyKCksdGhpcy5pbXBvcnRlZE1lc2hlc0ZpbGVzPW5ldyBBcnJheSx0aGlzLnN0b3BBbGxBbmltYXRpb25zJiZ0aGlzLnN0b3BBbGxBbmltYXRpb25zKCksdGhpcy5yZXNldENhY2hlZE1hdGVyaWFsKCksdGhpcy5hY3RpdmVDYW1lcmEmJih0aGlzLmFjdGl2ZUNhbWVyYS5fYWN0aXZlTWVzaGVzLmRpc3Bvc2UoKSx0aGlzLmFjdGl2ZUNhbWVyYT1udWxsKSx0aGlzLmFjdGl2ZUNhbWVyYXM9bnVsbCx0aGlzLl9hY3RpdmVNZXNoZXMuZGlzcG9zZSgpLHRoaXMuX3JlbmRlcmluZ01hbmFnZXIuZGlzcG9zZSgpLHRoaXMuX3Byb2Nlc3NlZE1hdGVyaWFscy5kaXNwb3NlKCksdGhpcy5fYWN0aXZlUGFydGljbGVTeXN0ZW1zLmRpc3Bvc2UoKSx0aGlzLl9hY3RpdmVTa2VsZXRvbnMuZGlzcG9zZSgpLHRoaXMuX3NvZnR3YXJlU2tpbm5lZE1lc2hlcy5kaXNwb3NlKCksdGhpcy5fcmVuZGVyVGFyZ2V0cy5kaXNwb3NlKCksdGhpcy5fbWF0ZXJpYWxzUmVuZGVyVGFyZ2V0cy5kaXNwb3NlKCksdGhpcy5fcmVnaXN0ZXJlZEZvckxhdGVBbmltYXRpb25CaW5kaW5ncy5kaXNwb3NlKCksdGhpcy5fbWVzaGVzRm9ySW50ZXJzZWN0aW9ucy5kaXNwb3NlKCksdGhpcy5fdG9CZURpc3Bvc2VkLmxlbmd0aD0wO2NvbnN0IGU9dGhpcy5fYWN0aXZlUmVxdWVzdHMuc2xpY2UoKTtmb3IoY29uc3QgciBvZiBlKXIuYWJvcnQoKTt0aGlzLl9hY3RpdmVSZXF1ZXN0cy5sZW5ndGg9MDt0cnl7dGhpcy5vbkRpc3Bvc2VPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKX1jYXRjaChyKXtjb25zb2xlLmVycm9yKCJBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSBjYWxsaW5nIG9uRGlzcG9zZU9ic2VydmFibGUhIixyKX1pZih0aGlzLm9uRGlzcG9zZU9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25BZnRlclJlbmRlck9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uQmVmb3JlUmVuZGVyVGFyZ2V0c1JlbmRlck9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uQWZ0ZXJSZW5kZXJUYXJnZXRzUmVuZGVyT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25BZnRlclN0ZXBPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkJlZm9yZVN0ZXBPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkJlZm9yZUFjdGl2ZU1lc2hlc0V2YWx1YXRpb25PYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkFmdGVyQWN0aXZlTWVzaGVzRXZhbHVhdGlvbk9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uQmVmb3JlUGFydGljbGVzUmVuZGVyaW5nT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25BZnRlclBhcnRpY2xlc1JlbmRlcmluZ09ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uQmVmb3JlRHJhd1BoYXNlT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25BZnRlckRyYXdQaGFzZU9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uQmVmb3JlQW5pbWF0aW9uc09ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uQWZ0ZXJBbmltYXRpb25zT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25EYXRhTG9hZGVkT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25CZWZvcmVSZW5kZXJpbmdHcm91cE9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uQWZ0ZXJSZW5kZXJpbmdHcm91cE9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uTWVzaEltcG9ydGVkT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25CZWZvcmVDYW1lcmFSZW5kZXJPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkFmdGVyQ2FtZXJhUmVuZGVyT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25SZWFkeU9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uTmV3Q2FtZXJhQWRkZWRPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkNhbWVyYVJlbW92ZWRPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbk5ld0xpZ2h0QWRkZWRPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkxpZ2h0UmVtb3ZlZE9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uTmV3R2VvbWV0cnlBZGRlZE9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uR2VvbWV0cnlSZW1vdmVkT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25OZXdUcmFuc2Zvcm1Ob2RlQWRkZWRPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vblRyYW5zZm9ybU5vZGVSZW1vdmVkT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25OZXdNZXNoQWRkZWRPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbk1lc2hSZW1vdmVkT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25OZXdTa2VsZXRvbkFkZGVkT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25Ta2VsZXRvblJlbW92ZWRPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbk5ld01hdGVyaWFsQWRkZWRPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbk5ld011bHRpTWF0ZXJpYWxBZGRlZE9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uTWF0ZXJpYWxSZW1vdmVkT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25NdWx0aU1hdGVyaWFsUmVtb3ZlZE9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uTmV3VGV4dHVyZUFkZGVkT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25UZXh0dXJlUmVtb3ZlZE9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uUHJlUG9pbnRlck9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uUG9pbnRlck9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uUHJlS2V5Ym9hcmRPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbktleWJvYXJkT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25BY3RpdmVDYW1lcmFDaGFuZ2VkLmNsZWFyKCksdGhpcy5kZXRhY2hDb250cm9sKCksdGhpcy5fZW5naW5lLmdldElucHV0RWxlbWVudCgpKWZvcihsZXQgcj0wO3I8dGhpcy5jYW1lcmFzLmxlbmd0aDtyKyspdGhpcy5jYW1lcmFzW3JdLmRldGFjaENvbnRyb2woKTt0aGlzLl9kaXNwb3NlTGlzdCh0aGlzLmFuaW1hdGlvbkdyb3VwcyksdGhpcy5fZGlzcG9zZUxpc3QodGhpcy5saWdodHMpLHRoaXMuX2Rpc3Bvc2VMaXN0KHRoaXMubWVzaGVzLHI9PnIuZGlzcG9zZSghMCkpLHRoaXMuX2Rpc3Bvc2VMaXN0KHRoaXMudHJhbnNmb3JtTm9kZXMscj0+ci5kaXNwb3NlKCEwKSk7Y29uc3QgaT10aGlzLmNhbWVyYXM7dGhpcy5fZGlzcG9zZUxpc3QoaSksdGhpcy5fZGVmYXVsdE1hdGVyaWFsJiZ0aGlzLl9kZWZhdWx0TWF0ZXJpYWwuZGlzcG9zZSgpLHRoaXMuX2Rpc3Bvc2VMaXN0KHRoaXMubXVsdGlNYXRlcmlhbHMpLHRoaXMuX2Rpc3Bvc2VMaXN0KHRoaXMubWF0ZXJpYWxzKSx0aGlzLl9kaXNwb3NlTGlzdCh0aGlzLnBhcnRpY2xlU3lzdGVtcyksdGhpcy5fZGlzcG9zZUxpc3QodGhpcy5wb3N0UHJvY2Vzc2VzKSx0aGlzLl9kaXNwb3NlTGlzdCh0aGlzLnRleHR1cmVzKSx0aGlzLl9kaXNwb3NlTGlzdCh0aGlzLm1vcnBoVGFyZ2V0TWFuYWdlcnMpLHRoaXMuX3NjZW5lVWJvLmRpc3Bvc2UoKSx0aGlzLl9tdWx0aXZpZXdTY2VuZVVibyYmdGhpcy5fbXVsdGl2aWV3U2NlbmVVYm8uZGlzcG9zZSgpLHRoaXMucG9zdFByb2Nlc3NNYW5hZ2VyLmRpc3Bvc2UoKSx0aGlzLl9kaXNwb3NlTGlzdCh0aGlzLl9jb21wb25lbnRzKTtsZXQgcz10aGlzLl9lbmdpbmUuc2NlbmVzLmluZGV4T2YodGhpcyk7cz4tMSYmdGhpcy5fZW5naW5lLnNjZW5lcy5zcGxpY2UocywxKSxmZS5fTGFzdENyZWF0ZWRTY2VuZT09PXRoaXMmJih0aGlzLl9lbmdpbmUuc2NlbmVzLmxlbmd0aD4wP2ZlLl9MYXN0Q3JlYXRlZFNjZW5lPXRoaXMuX2VuZ2luZS5zY2VuZXNbdGhpcy5fZW5naW5lLnNjZW5lcy5sZW5ndGgtMV06ZmUuX0xhc3RDcmVhdGVkU2NlbmU9bnVsbCkscz10aGlzLl9lbmdpbmUuX3ZpcnR1YWxTY2VuZXMuaW5kZXhPZih0aGlzKSxzPi0xJiZ0aGlzLl9lbmdpbmUuX3ZpcnR1YWxTY2VuZXMuc3BsaWNlKHMsMSksdGhpcy5fZW5naW5lLndpcGVDYWNoZXMoITApLHRoaXMuX2lzRGlzcG9zZWQ9ITB9X2Rpc3Bvc2VMaXN0KGUsdCl7Y29uc3QgaT1lLnNsaWNlKDApO3Q9dD8/KHM9PnMuZGlzcG9zZSgpKTtmb3IoY29uc3QgcyBvZiBpKXQocyk7ZS5sZW5ndGg9MH1nZXQgaXNEaXNwb3NlZCgpe3JldHVybiB0aGlzLl9pc0Rpc3Bvc2VkfWNsZWFyQ2FjaGVkVmVydGV4RGF0YSgpe2ZvcihsZXQgZT0wO2U8dGhpcy5tZXNoZXMubGVuZ3RoO2UrKyl7Y29uc3QgaT10aGlzLm1lc2hlc1tlXS5nZW9tZXRyeTtpJiZpLmNsZWFyQ2FjaGVkRGF0YSgpfX1jbGVhbkNhY2hlZFRleHR1cmVCdWZmZXIoKXtmb3IoY29uc3QgZSBvZiB0aGlzLnRleHR1cmVzKWUuX2J1ZmZlciYmKGUuX2J1ZmZlcj1udWxsKX1nZXRXb3JsZEV4dGVuZHMoZSl7Y29uc3QgdD1uZXcgcChOdW1iZXIuTUFYX1ZBTFVFLE51bWJlci5NQVhfVkFMVUUsTnVtYmVyLk1BWF9WQUxVRSksaT1uZXcgcCgtTnVtYmVyLk1BWF9WQUxVRSwtTnVtYmVyLk1BWF9WQUxVRSwtTnVtYmVyLk1BWF9WQUxVRSk7cmV0dXJuIGU9ZXx8KCgpPT4hMCksdGhpcy5tZXNoZXMuZmlsdGVyKGUpLmZvckVhY2gocz0+e2lmKHMuY29tcHV0ZVdvcmxkTWF0cml4KCEwKSwhcy5zdWJNZXNoZXN8fHMuc3ViTWVzaGVzLmxlbmd0aD09PTB8fHMuaW5maW5pdGVEaXN0YW5jZSlyZXR1cm47Y29uc3Qgcj1zLmdldEJvdW5kaW5nSW5mbygpLG49ci5ib3VuZGluZ0JveC5taW5pbXVtV29ybGQsYT1yLmJvdW5kaW5nQm94Lm1heGltdW1Xb3JsZDtwLkNoZWNrRXh0ZW5kcyhuLHQsaSkscC5DaGVja0V4dGVuZHMoYSx0LGkpfSkse21pbjp0LG1heDppfX1jcmVhdGVQaWNraW5nUmF5KGUsdCxpLHMscj0hMSl7dGhyb3cgJCgiUmF5Iil9Y3JlYXRlUGlja2luZ1JheVRvUmVmKGUsdCxpLHMscixuPSExLGE9ITEpe3Rocm93ICQoIlJheSIpfWNyZWF0ZVBpY2tpbmdSYXlJbkNhbWVyYVNwYWNlKGUsdCxpKXt0aHJvdyAkKCJSYXkiKX1jcmVhdGVQaWNraW5nUmF5SW5DYW1lcmFTcGFjZVRvUmVmKGUsdCxpLHMpe3Rocm93ICQoIlJheSIpfWdldCBfcGlja2luZ0F2YWlsYWJsZSgpe3JldHVybiExfXBpY2soZSx0LGkscyxyLG4pe3JldHVybiBuZXcgVXR9cGlja1dpdGhCb3VuZGluZ0luZm8oZSx0LGkscyxyKXtyZXR1cm4gbmV3IFV0fXBpY2tXaXRoUmF5KGUsdCxpLHMpe3Rocm93ICQoIlJheSIpfW11bHRpUGljayhlLHQsaSxzLHIpe3Rocm93ICQoIlJheSIpfW11bHRpUGlja1dpdGhSYXkoZSx0LGkpe3Rocm93ICQoIlJheSIpfXNldFBvaW50ZXJPdmVyTWVzaChlLHQsaSl7dGhpcy5faW5wdXRNYW5hZ2VyLnNldFBvaW50ZXJPdmVyTWVzaChlLHQsaSl9Z2V0UG9pbnRlck92ZXJNZXNoKCl7cmV0dXJuIHRoaXMuX2lucHV0TWFuYWdlci5nZXRQb2ludGVyT3Zlck1lc2goKX1fcmVidWlsZEdlb21ldHJpZXMoKXtmb3IoY29uc3QgZSBvZiB0aGlzLmdlb21ldHJpZXMpZS5fcmVidWlsZCgpO2Zvcihjb25zdCBlIG9mIHRoaXMubWVzaGVzKWUuX3JlYnVpbGQoKTt0aGlzLnBvc3RQcm9jZXNzTWFuYWdlciYmdGhpcy5wb3N0UHJvY2Vzc01hbmFnZXIuX3JlYnVpbGQoKTtmb3IoY29uc3QgZSBvZiB0aGlzLl9jb21wb25lbnRzKWUucmVidWlsZCgpO2Zvcihjb25zdCBlIG9mIHRoaXMucGFydGljbGVTeXN0ZW1zKWUucmVidWlsZCgpO2lmKHRoaXMuc3ByaXRlTWFuYWdlcnMpZm9yKGNvbnN0IGUgb2YgdGhpcy5zcHJpdGVNYW5hZ2VycyllLnJlYnVpbGQoKX1fcmVidWlsZFRleHR1cmVzKCl7Zm9yKGNvbnN0IGUgb2YgdGhpcy50ZXh0dXJlcyllLl9yZWJ1aWxkKCk7dGhpcy5tYXJrQWxsTWF0ZXJpYWxzQXNEaXJ0eSgxKX1fZ2V0QnlUYWdzKGUsdCxpKXtpZih0PT09dm9pZCAwKXJldHVybiBlO2NvbnN0IHM9W107aT1pfHwocj0+e30pO2Zvcihjb25zdCByIGluIGUpe2NvbnN0IG49ZVtyXTtnZSYmZ2UuTWF0Y2hlc1F1ZXJ5KG4sdCkmJihzLnB1c2gobiksaShuKSl9cmV0dXJuIHN9Z2V0TWVzaGVzQnlUYWdzKGUsdCl7cmV0dXJuIHRoaXMuX2dldEJ5VGFncyh0aGlzLm1lc2hlcyxlLHQpfWdldENhbWVyYXNCeVRhZ3MoZSx0KXtyZXR1cm4gdGhpcy5fZ2V0QnlUYWdzKHRoaXMuY2FtZXJhcyxlLHQpfWdldExpZ2h0c0J5VGFncyhlLHQpe3JldHVybiB0aGlzLl9nZXRCeVRhZ3ModGhpcy5saWdodHMsZSx0KX1nZXRNYXRlcmlhbEJ5VGFncyhlLHQpe3JldHVybiB0aGlzLl9nZXRCeVRhZ3ModGhpcy5tYXRlcmlhbHMsZSx0KS5jb25jYXQodGhpcy5fZ2V0QnlUYWdzKHRoaXMubXVsdGlNYXRlcmlhbHMsZSx0KSl9Z2V0VHJhbnNmb3JtTm9kZXNCeVRhZ3MoZSx0KXtyZXR1cm4gdGhpcy5fZ2V0QnlUYWdzKHRoaXMudHJhbnNmb3JtTm9kZXMsZSx0KX1zZXRSZW5kZXJpbmdPcmRlcihlLHQ9bnVsbCxpPW51bGwscz1udWxsKXt0aGlzLl9yZW5kZXJpbmdNYW5hZ2VyLnNldFJlbmRlcmluZ09yZGVyKGUsdCxpLHMpfXNldFJlbmRlcmluZ0F1dG9DbGVhckRlcHRoU3RlbmNpbChlLHQsaT0hMCxzPSEwKXt0aGlzLl9yZW5kZXJpbmdNYW5hZ2VyLnNldFJlbmRlcmluZ0F1dG9DbGVhckRlcHRoU3RlbmNpbChlLHQsaSxzKX1nZXRBdXRvQ2xlYXJEZXB0aFN0ZW5jaWxTZXR1cChlKXtyZXR1cm4gdGhpcy5fcmVuZGVyaW5nTWFuYWdlci5nZXRBdXRvQ2xlYXJEZXB0aFN0ZW5jaWxTZXR1cChlKX1nZXQgYmxvY2tNYXRlcmlhbERpcnR5TWVjaGFuaXNtKCl7cmV0dXJuIHRoaXMuX2Jsb2NrTWF0ZXJpYWxEaXJ0eU1lY2hhbmlzbX1zZXQgYmxvY2tNYXRlcmlhbERpcnR5TWVjaGFuaXNtKGUpe3RoaXMuX2Jsb2NrTWF0ZXJpYWxEaXJ0eU1lY2hhbmlzbSE9PWUmJih0aGlzLl9ibG9ja01hdGVyaWFsRGlydHlNZWNoYW5pc209ZSxlfHx0aGlzLm1hcmtBbGxNYXRlcmlhbHNBc0RpcnR5KDYzKSl9bWFya0FsbE1hdGVyaWFsc0FzRGlydHkoZSx0KXtpZighdGhpcy5fYmxvY2tNYXRlcmlhbERpcnR5TWVjaGFuaXNtKWZvcihjb25zdCBpIG9mIHRoaXMubWF0ZXJpYWxzKXQmJiF0KGkpfHxpLm1hcmtBc0RpcnR5KGUpfV9sb2FkRmlsZShlLHQsaSxzLHIsbixhKXtjb25zdCBvPWp0KGUsdCxpLHM/dGhpcy5vZmZsaW5lUHJvdmlkZXI6dm9pZCAwLHIsbixhKTtyZXR1cm4gdGhpcy5fYWN0aXZlUmVxdWVzdHMucHVzaChvKSxvLm9uQ29tcGxldGVPYnNlcnZhYmxlLmFkZChoPT57dGhpcy5fYWN0aXZlUmVxdWVzdHMuc3BsaWNlKHRoaXMuX2FjdGl2ZVJlcXVlc3RzLmluZGV4T2YoaCksMSl9KSxvfV9sb2FkRmlsZUFzeW5jKGUsdCxpLHMscil7cmV0dXJuIG5ldyBQcm9taXNlKChuLGEpPT57dGhpcy5fbG9hZEZpbGUoZSxvPT57bihvKX0sdCxpLHMsKG8saCk9PnthKGgpfSxyKX0pfV9yZXF1ZXN0RmlsZShlLHQsaSxzLHIsbixhKXtjb25zdCBvPXhzKGUsdCxpLHM/dGhpcy5vZmZsaW5lUHJvdmlkZXI6dm9pZCAwLHIsbixhKTtyZXR1cm4gdGhpcy5fYWN0aXZlUmVxdWVzdHMucHVzaChvKSxvLm9uQ29tcGxldGVPYnNlcnZhYmxlLmFkZChoPT57dGhpcy5fYWN0aXZlUmVxdWVzdHMuc3BsaWNlKHRoaXMuX2FjdGl2ZVJlcXVlc3RzLmluZGV4T2YoaCksMSl9KSxvfV9yZXF1ZXN0RmlsZUFzeW5jKGUsdCxpLHMscil7cmV0dXJuIG5ldyBQcm9taXNlKChuLGEpPT57dGhpcy5fcmVxdWVzdEZpbGUoZSxvPT57bihvKX0sdCxpLHMsbz0+e2Eobyl9LHIpfSl9X3JlYWRGaWxlKGUsdCxpLHMscil7Y29uc3Qgbj13aShlLHQsaSxzLHIpO3JldHVybiB0aGlzLl9hY3RpdmVSZXF1ZXN0cy5wdXNoKG4pLG4ub25Db21wbGV0ZU9ic2VydmFibGUuYWRkKGE9Pnt0aGlzLl9hY3RpdmVSZXF1ZXN0cy5zcGxpY2UodGhpcy5fYWN0aXZlUmVxdWVzdHMuaW5kZXhPZihhKSwxKX0pLG59X3JlYWRGaWxlQXN5bmMoZSx0LGkpe3JldHVybiBuZXcgUHJvbWlzZSgocyxyKT0+e3RoaXMuX3JlYWRGaWxlKGUsbj0+e3Mobil9LHQsaSxuPT57cihuKX0pfSl9Z2V0UGVyZkNvbGxlY3Rvcigpe3Rocm93ICQoInBlcmZvcm1hbmNlVmlld2VyU2NlbmVFeHRlbnNpb24iKX19bmUuRk9HTU9ERV9OT05FPTAsbmUuRk9HTU9ERV9FWFA9MSxuZS5GT0dNT0RFX0VYUDI9MixuZS5GT0dNT0RFX0xJTkVBUj0zLG5lLk1pbkRlbHRhVGltZT0xLG5lLk1heERlbHRhVGltZT0xZTMsbmUucHJvdG90eXBlLnNldEFjdGl2ZUNhbWVyYUJ5SUQ9ZnVuY3Rpb24oYyl7cmV0dXJuIHRoaXMuc2V0QWN0aXZlQ2FtZXJhQnlJZChjKX0sbmUucHJvdG90eXBlLmdldExhc3RNYXRlcmlhbEJ5SUQ9ZnVuY3Rpb24oYyl7cmV0dXJuIHRoaXMuZ2V0TGFzdE1hdGVyaWFsQnlJZChjKX0sbmUucHJvdG90eXBlLmdldE1hdGVyaWFsQnlJRD1mdW5jdGlvbihjKXtyZXR1cm4gdGhpcy5nZXRNYXRlcmlhbEJ5SWQoYyl9LG5lLnByb3RvdHlwZS5nZXRUZXh0dXJlQnlVbmlxdWVJRD1mdW5jdGlvbihjKXtyZXR1cm4gdGhpcy5nZXRUZXh0dXJlQnlVbmlxdWVJZChjKX0sbmUucHJvdG90eXBlLmdldENhbWVyYUJ5SUQ9ZnVuY3Rpb24oYyl7cmV0dXJuIHRoaXMuZ2V0Q2FtZXJhQnlJZChjKX0sbmUucHJvdG90eXBlLmdldENhbWVyYUJ5VW5pcXVlSUQ9ZnVuY3Rpb24oYyl7cmV0dXJuIHRoaXMuZ2V0Q2FtZXJhQnlVbmlxdWVJZChjKX0sbmUucHJvdG90eXBlLmdldEJvbmVCeUlEPWZ1bmN0aW9uKGMpe3JldHVybiB0aGlzLmdldEJvbmVCeUlkKGMpfSxuZS5wcm90b3R5cGUuZ2V0TGlnaHRCeUlEPWZ1bmN0aW9uKGMpe3JldHVybiB0aGlzLmdldExpZ2h0QnlJZChjKX0sbmUucHJvdG90eXBlLmdldExpZ2h0QnlVbmlxdWVJRD1mdW5jdGlvbihjKXtyZXR1cm4gdGhpcy5nZXRMaWdodEJ5VW5pcXVlSWQoYyl9LG5lLnByb3RvdHlwZS5nZXRQYXJ0aWNsZVN5c3RlbUJ5SUQ9ZnVuY3Rpb24oYyl7cmV0dXJuIHRoaXMuZ2V0UGFydGljbGVTeXN0ZW1CeUlkKGMpfSxuZS5wcm90b3R5cGUuZ2V0R2VvbWV0cnlCeUlEPWZ1bmN0aW9uKGMpe3JldHVybiB0aGlzLmdldEdlb21ldHJ5QnlJZChjKX0sbmUucHJvdG90eXBlLmdldE1lc2hCeUlEPWZ1bmN0aW9uKGMpe3JldHVybiB0aGlzLmdldE1lc2hCeUlkKGMpfSxuZS5wcm90b3R5cGUuZ2V0TWVzaGVzQnlJRD1mdW5jdGlvbihjKXtyZXR1cm4gdGhpcy5nZXRNZXNoZXNCeUlkKGMpfSxuZS5wcm90b3R5cGUuZ2V0VHJhbnNmb3JtTm9kZUJ5SUQ9ZnVuY3Rpb24oYyl7cmV0dXJuIHRoaXMuZ2V0VHJhbnNmb3JtTm9kZUJ5SWQoYyl9LG5lLnByb3RvdHlwZS5nZXRUcmFuc2Zvcm1Ob2RlQnlVbmlxdWVJRD1mdW5jdGlvbihjKXtyZXR1cm4gdGhpcy5nZXRUcmFuc2Zvcm1Ob2RlQnlVbmlxdWVJZChjKX0sbmUucHJvdG90eXBlLmdldFRyYW5zZm9ybU5vZGVzQnlJRD1mdW5jdGlvbihjKXtyZXR1cm4gdGhpcy5nZXRUcmFuc2Zvcm1Ob2Rlc0J5SWQoYyl9LG5lLnByb3RvdHlwZS5nZXRNZXNoQnlVbmlxdWVJRD1mdW5jdGlvbihjKXtyZXR1cm4gdGhpcy5nZXRNZXNoQnlVbmlxdWVJZChjKX0sbmUucHJvdG90eXBlLmdldExhc3RNZXNoQnlJRD1mdW5jdGlvbihjKXtyZXR1cm4gdGhpcy5nZXRMYXN0TWVzaEJ5SWQoYyl9LG5lLnByb3RvdHlwZS5nZXRMYXN0RW50cnlCeUlEPWZ1bmN0aW9uKGMpe3JldHVybiB0aGlzLmdldExhc3RFbnRyeUJ5SWQoYyl9LG5lLnByb3RvdHlwZS5nZXROb2RlQnlJRD1mdW5jdGlvbihjKXtyZXR1cm4gdGhpcy5nZXROb2RlQnlJZChjKX0sbmUucHJvdG90eXBlLmdldExhc3RTa2VsZXRvbkJ5SUQ9ZnVuY3Rpb24oYyl7cmV0dXJuIHRoaXMuZ2V0TGFzdFNrZWxldG9uQnlJZChjKX07ZnVuY3Rpb24gSXMoYyxlLHQpe3RyeXtjb25zdCBpPWMubmV4dCgpO2kuZG9uZT9lKGkpOmkudmFsdWU/aS52YWx1ZS50aGVuKCgpPT57aS52YWx1ZT12b2lkIDAsZShpKX0sdCk6ZShpKX1jYXRjaChpKXt0KGkpfX1mdW5jdGlvbiB3bihjPTI1KXtsZXQgZTtyZXR1cm4odCxpLHMpPT57Y29uc3Qgcj1wZXJmb3JtYW5jZS5ub3coKTtlPT09dm9pZCAwfHxyLWU+Yz8oZT1yLHNldFRpbWVvdXQoKCk9PntJcyh0LGkscyl9LDApKTpJcyh0LGkscyl9fWZ1bmN0aW9uIEFyKGMsZSx0LGkscyl7Y29uc3Qgcj0oKT0+e2xldCBuO2NvbnN0IGE9bz0+e28uZG9uZT90KG8udmFsdWUpOm49PT12b2lkIDA/bj0hMDpyKCl9O2RvIG49dm9pZCAwLCFzfHwhcy5hYm9ydGVkP2UoYyxhLGkpOmkobmV3IEVycm9yKCJBYm9ydGVkIikpLG49PT12b2lkIDAmJihuPSExKTt3aGlsZShuKX07cigpfWZ1bmN0aW9uIFBzKGMsZSl7bGV0IHQ7cmV0dXJuIEFyKGMsSXMsaT0+dD1pLGk9Pnt0aHJvdyBpfSxlKSx0fWZ1bmN0aW9uIE9uKGMsZSx0KXtyZXR1cm4gbmV3IFByb21pc2UoKGkscyk9PntBcihjLGUsaSxzLHQpfSl9ZnVuY3Rpb24gTG4oYyxlKXtyZXR1cm4oLi4udCk9PlBzKGMoLi4udCksZSl9Y2xhc3MgTm57Y29uc3RydWN0b3IoKXt0aGlzLl9kb05vdFNlcmlhbGl6ZT0hMSx0aGlzLl9pc0Rpc3Bvc2VkPSExLHRoaXMuX3NjZW5lUm9vdE5vZGVzSW5kZXg9LTEsdGhpcy5faXNFbmFibGVkPSEwLHRoaXMuX2lzUGFyZW50RW5hYmxlZD0hMCx0aGlzLl9pc1JlYWR5PSEwLHRoaXMuX29uRW5hYmxlZFN0YXRlQ2hhbmdlZE9ic2VydmFibGU9bmV3IEYsdGhpcy5fb25DbG9uZWRPYnNlcnZhYmxlPW5ldyBGfX1jbGFzcyB6ZXtjb25zdHJ1Y3RvcihlLHQ9bnVsbCl7dGhpcy5faXNEaXJ0eT0hMSx0aGlzLl9ub2RlRGF0YVN0b3JhZ2U9bmV3IE5uLHRoaXMuc3RhdGU9IiIsdGhpcy5tZXRhZGF0YT1udWxsLHRoaXMucmVzZXJ2ZWREYXRhU3RvcmU9bnVsbCx0aGlzLl9hY2Nlc3NpYmlsaXR5VGFnPW51bGwsdGhpcy5vbkFjY2Vzc2liaWxpdHlUYWdDaGFuZ2VkT2JzZXJ2YWJsZT1uZXcgRix0aGlzLl9wYXJlbnRDb250YWluZXI9bnVsbCx0aGlzLmFuaW1hdGlvbnM9bmV3IEFycmF5LHRoaXMuX3Jhbmdlcz17fSx0aGlzLm9uUmVhZHk9bnVsbCx0aGlzLl9jdXJyZW50UmVuZGVySWQ9LTEsdGhpcy5fcGFyZW50VXBkYXRlSWQ9LTEsdGhpcy5fY2hpbGRVcGRhdGVJZD0tMSx0aGlzLl93YWl0aW5nUGFyZW50SWQ9bnVsbCx0aGlzLl93YWl0aW5nUGFyZW50SW5zdGFuY2VJbmRleD1udWxsLHRoaXMuX3dhaXRpbmdQYXJzZWRVbmlxdWVJZD1udWxsLHRoaXMuX2NhY2hlPXt9LHRoaXMuX3BhcmVudE5vZGU9bnVsbCx0aGlzLl9jaGlsZHJlbj1udWxsLHRoaXMuX3dvcmxkTWF0cml4PXguSWRlbnRpdHkoKSx0aGlzLl93b3JsZE1hdHJpeERldGVybWluYW50PTAsdGhpcy5fd29ybGRNYXRyaXhEZXRlcm1pbmFudElzRGlydHk9ITAsdGhpcy5fYW5pbWF0aW9uUHJvcGVydGllc092ZXJyaWRlPW51bGwsdGhpcy5faXNOb2RlPSEwLHRoaXMub25EaXNwb3NlT2JzZXJ2YWJsZT1uZXcgRix0aGlzLl9vbkRpc3Bvc2VPYnNlcnZlcj1udWxsLHRoaXMuX2JlaGF2aW9ycz1uZXcgQXJyYXksdGhpcy5uYW1lPWUsdGhpcy5pZD1lLHRoaXMuX3NjZW5lPXR8fGZlLkxhc3RDcmVhdGVkU2NlbmUsdGhpcy51bmlxdWVJZD10aGlzLl9zY2VuZS5nZXRVbmlxdWVJZCgpLHRoaXMuX2luaXRDYWNoZSgpfXN0YXRpYyBBZGROb2RlQ29uc3RydWN0b3IoZSx0KXt0aGlzLl9Ob2RlQ29uc3RydWN0b3JzW2VdPXR9c3RhdGljIENvbnN0cnVjdChlLHQsaSxzKXtjb25zdCByPXRoaXMuX05vZGVDb25zdHJ1Y3RvcnNbZV07cmV0dXJuIHI/cih0LGkscyk6bnVsbH1zZXQgYWNjZXNzaWJpbGl0eVRhZyhlKXt0aGlzLl9hY2Nlc3NpYmlsaXR5VGFnPWUsdGhpcy5vbkFjY2Vzc2liaWxpdHlUYWdDaGFuZ2VkT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoZSl9Z2V0IGFjY2Vzc2liaWxpdHlUYWcoKXtyZXR1cm4gdGhpcy5fYWNjZXNzaWJpbGl0eVRhZ31nZXQgZG9Ob3RTZXJpYWxpemUoKXtyZXR1cm4gdGhpcy5fbm9kZURhdGFTdG9yYWdlLl9kb05vdFNlcmlhbGl6ZT8hMDp0aGlzLl9wYXJlbnROb2RlP3RoaXMuX3BhcmVudE5vZGUuZG9Ob3RTZXJpYWxpemU6ITF9c2V0IGRvTm90U2VyaWFsaXplKGUpe3RoaXMuX25vZGVEYXRhU3RvcmFnZS5fZG9Ob3RTZXJpYWxpemU9ZX1pc0Rpc3Bvc2VkKCl7cmV0dXJuIHRoaXMuX25vZGVEYXRhU3RvcmFnZS5faXNEaXNwb3NlZH1zZXQgcGFyZW50KGUpe2lmKHRoaXMuX3BhcmVudE5vZGU9PT1lKXJldHVybjtjb25zdCB0PXRoaXMuX3BhcmVudE5vZGU7aWYodGhpcy5fcGFyZW50Tm9kZSYmdGhpcy5fcGFyZW50Tm9kZS5fY2hpbGRyZW4hPT12b2lkIDAmJnRoaXMuX3BhcmVudE5vZGUuX2NoaWxkcmVuIT09bnVsbCl7Y29uc3QgaT10aGlzLl9wYXJlbnROb2RlLl9jaGlsZHJlbi5pbmRleE9mKHRoaXMpO2khPT0tMSYmdGhpcy5fcGFyZW50Tm9kZS5fY2hpbGRyZW4uc3BsaWNlKGksMSksIWUmJiF0aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX2lzRGlzcG9zZWQmJnRoaXMuX2FkZFRvU2NlbmVSb290Tm9kZXMoKX10aGlzLl9wYXJlbnROb2RlPWUsdGhpcy5fcGFyZW50Tm9kZSYmKCh0aGlzLl9wYXJlbnROb2RlLl9jaGlsZHJlbj09PXZvaWQgMHx8dGhpcy5fcGFyZW50Tm9kZS5fY2hpbGRyZW49PT1udWxsKSYmKHRoaXMuX3BhcmVudE5vZGUuX2NoaWxkcmVuPW5ldyBBcnJheSksdGhpcy5fcGFyZW50Tm9kZS5fY2hpbGRyZW4ucHVzaCh0aGlzKSx0fHx0aGlzLl9yZW1vdmVGcm9tU2NlbmVSb290Tm9kZXMoKSksdGhpcy5fc3luY1BhcmVudEVuYWJsZWRTdGF0ZSgpfWdldCBwYXJlbnQoKXtyZXR1cm4gdGhpcy5fcGFyZW50Tm9kZX1fc2VyaWFsaXplQXNQYXJlbnQoZSl7ZS5wYXJlbnRJZD10aGlzLnVuaXF1ZUlkfV9hZGRUb1NjZW5lUm9vdE5vZGVzKCl7dGhpcy5fbm9kZURhdGFTdG9yYWdlLl9zY2VuZVJvb3ROb2Rlc0luZGV4PT09LTEmJih0aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX3NjZW5lUm9vdE5vZGVzSW5kZXg9dGhpcy5fc2NlbmUucm9vdE5vZGVzLmxlbmd0aCx0aGlzLl9zY2VuZS5yb290Tm9kZXMucHVzaCh0aGlzKSl9X3JlbW92ZUZyb21TY2VuZVJvb3ROb2Rlcygpe2lmKHRoaXMuX25vZGVEYXRhU3RvcmFnZS5fc2NlbmVSb290Tm9kZXNJbmRleCE9PS0xKXtjb25zdCBlPXRoaXMuX3NjZW5lLnJvb3ROb2Rlcyx0PWUubGVuZ3RoLTE7ZVt0aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX3NjZW5lUm9vdE5vZGVzSW5kZXhdPWVbdF0sZVt0aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX3NjZW5lUm9vdE5vZGVzSW5kZXhdLl9ub2RlRGF0YVN0b3JhZ2UuX3NjZW5lUm9vdE5vZGVzSW5kZXg9dGhpcy5fbm9kZURhdGFTdG9yYWdlLl9zY2VuZVJvb3ROb2Rlc0luZGV4LHRoaXMuX3NjZW5lLnJvb3ROb2Rlcy5wb3AoKSx0aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX3NjZW5lUm9vdE5vZGVzSW5kZXg9LTF9fWdldCBhbmltYXRpb25Qcm9wZXJ0aWVzT3ZlcnJpZGUoKXtyZXR1cm4gdGhpcy5fYW5pbWF0aW9uUHJvcGVydGllc092ZXJyaWRlP3RoaXMuX2FuaW1hdGlvblByb3BlcnRpZXNPdmVycmlkZTp0aGlzLl9zY2VuZS5hbmltYXRpb25Qcm9wZXJ0aWVzT3ZlcnJpZGV9c2V0IGFuaW1hdGlvblByb3BlcnRpZXNPdmVycmlkZShlKXt0aGlzLl9hbmltYXRpb25Qcm9wZXJ0aWVzT3ZlcnJpZGU9ZX1nZXRDbGFzc05hbWUoKXtyZXR1cm4iTm9kZSJ9c2V0IG9uRGlzcG9zZShlKXt0aGlzLl9vbkRpc3Bvc2VPYnNlcnZlciYmdGhpcy5vbkRpc3Bvc2VPYnNlcnZhYmxlLnJlbW92ZSh0aGlzLl9vbkRpc3Bvc2VPYnNlcnZlciksdGhpcy5fb25EaXNwb3NlT2JzZXJ2ZXI9dGhpcy5vbkRpc3Bvc2VPYnNlcnZhYmxlLmFkZChlKX1nZXQgb25FbmFibGVkU3RhdGVDaGFuZ2VkT2JzZXJ2YWJsZSgpe3JldHVybiB0aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX29uRW5hYmxlZFN0YXRlQ2hhbmdlZE9ic2VydmFibGV9Z2V0IG9uQ2xvbmVkT2JzZXJ2YWJsZSgpe3JldHVybiB0aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX29uQ2xvbmVkT2JzZXJ2YWJsZX1nZXRTY2VuZSgpe3JldHVybiB0aGlzLl9zY2VuZX1nZXRFbmdpbmUoKXtyZXR1cm4gdGhpcy5fc2NlbmUuZ2V0RW5naW5lKCl9YWRkQmVoYXZpb3IoZSx0PSExKXtyZXR1cm4gdGhpcy5fYmVoYXZpb3JzLmluZGV4T2YoZSkhPT0tMT90aGlzOihlLmluaXQoKSx0aGlzLl9zY2VuZS5pc0xvYWRpbmcmJiF0P3RoaXMuX3NjZW5lLm9uRGF0YUxvYWRlZE9ic2VydmFibGUuYWRkT25jZSgoKT0+e2UuYXR0YWNoKHRoaXMpfSk6ZS5hdHRhY2godGhpcyksdGhpcy5fYmVoYXZpb3JzLnB1c2goZSksdGhpcyl9cmVtb3ZlQmVoYXZpb3IoZSl7Y29uc3QgdD10aGlzLl9iZWhhdmlvcnMuaW5kZXhPZihlKTtyZXR1cm4gdD09PS0xP3RoaXM6KHRoaXMuX2JlaGF2aW9yc1t0XS5kZXRhY2goKSx0aGlzLl9iZWhhdmlvcnMuc3BsaWNlKHQsMSksdGhpcyl9Z2V0IGJlaGF2aW9ycygpe3JldHVybiB0aGlzLl9iZWhhdmlvcnN9Z2V0QmVoYXZpb3JCeU5hbWUoZSl7Zm9yKGNvbnN0IHQgb2YgdGhpcy5fYmVoYXZpb3JzKWlmKHQubmFtZT09PWUpcmV0dXJuIHQ7cmV0dXJuIG51bGx9Z2V0V29ybGRNYXRyaXgoKXtyZXR1cm4gdGhpcy5fY3VycmVudFJlbmRlcklkIT09dGhpcy5fc2NlbmUuZ2V0UmVuZGVySWQoKSYmdGhpcy5jb21wdXRlV29ybGRNYXRyaXgoKSx0aGlzLl93b3JsZE1hdHJpeH1fZ2V0V29ybGRNYXRyaXhEZXRlcm1pbmFudCgpe3JldHVybiB0aGlzLl93b3JsZE1hdHJpeERldGVybWluYW50SXNEaXJ0eSYmKHRoaXMuX3dvcmxkTWF0cml4RGV0ZXJtaW5hbnRJc0RpcnR5PSExLHRoaXMuX3dvcmxkTWF0cml4RGV0ZXJtaW5hbnQ9dGhpcy5fd29ybGRNYXRyaXguZGV0ZXJtaW5hbnQoKSksdGhpcy5fd29ybGRNYXRyaXhEZXRlcm1pbmFudH1nZXQgd29ybGRNYXRyaXhGcm9tQ2FjaGUoKXtyZXR1cm4gdGhpcy5fd29ybGRNYXRyaXh9X2luaXRDYWNoZSgpe3RoaXMuX2NhY2hlPXt9LHRoaXMuX2NhY2hlLnBhcmVudD12b2lkIDB9dXBkYXRlQ2FjaGUoZSl7IWUmJnRoaXMuaXNTeW5jaHJvbml6ZWQoKXx8KHRoaXMuX2NhY2hlLnBhcmVudD10aGlzLnBhcmVudCx0aGlzLl91cGRhdGVDYWNoZSgpKX1fZ2V0QWN0aW9uTWFuYWdlckZvclRyaWdnZXIoZSx0PSEwKXtyZXR1cm4gdGhpcy5wYXJlbnQ/dGhpcy5wYXJlbnQuX2dldEFjdGlvbk1hbmFnZXJGb3JUcmlnZ2VyKGUsITEpOm51bGx9X3VwZGF0ZUNhY2hlKGUpe31faXNTeW5jaHJvbml6ZWQoKXtyZXR1cm4hMH1fbWFya1N5bmNlZFdpdGhQYXJlbnQoKXt0aGlzLl9wYXJlbnROb2RlJiYodGhpcy5fcGFyZW50VXBkYXRlSWQ9dGhpcy5fcGFyZW50Tm9kZS5fY2hpbGRVcGRhdGVJZCl9aXNTeW5jaHJvbml6ZWRXaXRoUGFyZW50KCl7cmV0dXJuIHRoaXMuX3BhcmVudE5vZGU/dGhpcy5fcGFyZW50Tm9kZS5faXNEaXJ0eXx8dGhpcy5fcGFyZW50VXBkYXRlSWQhPT10aGlzLl9wYXJlbnROb2RlLl9jaGlsZFVwZGF0ZUlkPyExOnRoaXMuX3BhcmVudE5vZGUuaXNTeW5jaHJvbml6ZWQoKTohMH1pc1N5bmNocm9uaXplZCgpe3JldHVybiB0aGlzLl9jYWNoZS5wYXJlbnQhPT10aGlzLl9wYXJlbnROb2RlPyh0aGlzLl9jYWNoZS5wYXJlbnQ9dGhpcy5fcGFyZW50Tm9kZSwhMSk6dGhpcy5fcGFyZW50Tm9kZSYmIXRoaXMuaXNTeW5jaHJvbml6ZWRXaXRoUGFyZW50KCk/ITE6dGhpcy5faXNTeW5jaHJvbml6ZWQoKX1pc1JlYWR5KGU9ITEpe3JldHVybiB0aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX2lzUmVhZHl9bWFya0FzRGlydHkoZSl7cmV0dXJuIHRoaXMuX2N1cnJlbnRSZW5kZXJJZD1OdW1iZXIuTUFYX1ZBTFVFLHRoaXMuX2lzRGlydHk9ITAsdGhpc31pc0VuYWJsZWQoZT0hMCl7cmV0dXJuIGU9PT0hMT90aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX2lzRW5hYmxlZDp0aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX2lzRW5hYmxlZD90aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX2lzUGFyZW50RW5hYmxlZDohMX1fc3luY1BhcmVudEVuYWJsZWRTdGF0ZSgpe3RoaXMuX25vZGVEYXRhU3RvcmFnZS5faXNQYXJlbnRFbmFibGVkPXRoaXMuX3BhcmVudE5vZGU/dGhpcy5fcGFyZW50Tm9kZS5pc0VuYWJsZWQoKTohMCx0aGlzLl9jaGlsZHJlbiYmdGhpcy5fY2hpbGRyZW4uZm9yRWFjaChlPT57ZS5fc3luY1BhcmVudEVuYWJsZWRTdGF0ZSgpfSl9c2V0RW5hYmxlZChlKXt0aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX2lzRW5hYmxlZCE9PWUmJih0aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX2lzRW5hYmxlZD1lLHRoaXMuX3N5bmNQYXJlbnRFbmFibGVkU3RhdGUoKSx0aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX29uRW5hYmxlZFN0YXRlQ2hhbmdlZE9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKGUpKX1pc0Rlc2NlbmRhbnRPZihlKXtyZXR1cm4gdGhpcy5wYXJlbnQ/dGhpcy5wYXJlbnQ9PT1lPyEwOnRoaXMucGFyZW50LmlzRGVzY2VuZGFudE9mKGUpOiExfV9nZXREZXNjZW5kYW50cyhlLHQ9ITEsaSl7aWYodGhpcy5fY2hpbGRyZW4pZm9yKGxldCBzPTA7czx0aGlzLl9jaGlsZHJlbi5sZW5ndGg7cysrKXtjb25zdCByPXRoaXMuX2NoaWxkcmVuW3NdOyghaXx8aShyKSkmJmUucHVzaChyKSx0fHxyLl9nZXREZXNjZW5kYW50cyhlLCExLGkpfX1nZXREZXNjZW5kYW50cyhlLHQpe2NvbnN0IGk9bmV3IEFycmF5O3JldHVybiB0aGlzLl9nZXREZXNjZW5kYW50cyhpLGUsdCksaX1nZXRDaGlsZE1lc2hlcyhlLHQpe2NvbnN0IGk9W107cmV0dXJuIHRoaXMuX2dldERlc2NlbmRhbnRzKGksZSxzPT4oIXR8fHQocykpJiZzLmN1bGxpbmdTdHJhdGVneSE9PXZvaWQgMCksaX1nZXRDaGlsZHJlbihlLHQ9ITApe3JldHVybiB0aGlzLmdldERlc2NlbmRhbnRzKHQsZSl9X3NldFJlYWR5KGUpe2lmKGUhPT10aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX2lzUmVhZHkpe2lmKCFlKXt0aGlzLl9ub2RlRGF0YVN0b3JhZ2UuX2lzUmVhZHk9ITE7cmV0dXJufXRoaXMub25SZWFkeSYmdGhpcy5vblJlYWR5KHRoaXMpLHRoaXMuX25vZGVEYXRhU3RvcmFnZS5faXNSZWFkeT0hMH19Z2V0QW5pbWF0aW9uQnlOYW1lKGUpe2ZvcihsZXQgdD0wO3Q8dGhpcy5hbmltYXRpb25zLmxlbmd0aDt0Kyspe2NvbnN0IGk9dGhpcy5hbmltYXRpb25zW3RdO2lmKGkubmFtZT09PWUpcmV0dXJuIGl9cmV0dXJuIG51bGx9Y3JlYXRlQW5pbWF0aW9uUmFuZ2UoZSx0LGkpe2lmKCF0aGlzLl9yYW5nZXNbZV0pe3RoaXMuX3Jhbmdlc1tlXT16ZS5fQW5pbWF0aW9uUmFuZ2VGYWN0b3J5KGUsdCxpKTtmb3IobGV0IHM9MCxyPXRoaXMuYW5pbWF0aW9ucy5sZW5ndGg7czxyO3MrKyl0aGlzLmFuaW1hdGlvbnNbc10mJnRoaXMuYW5pbWF0aW9uc1tzXS5jcmVhdGVSYW5nZShlLHQsaSl9fWRlbGV0ZUFuaW1hdGlvblJhbmdlKGUsdD0hMCl7Zm9yKGxldCBpPTAscz10aGlzLmFuaW1hdGlvbnMubGVuZ3RoO2k8cztpKyspdGhpcy5hbmltYXRpb25zW2ldJiZ0aGlzLmFuaW1hdGlvbnNbaV0uZGVsZXRlUmFuZ2UoZSx0KTt0aGlzLl9yYW5nZXNbZV09bnVsbH1nZXRBbmltYXRpb25SYW5nZShlKXtyZXR1cm4gdGhpcy5fcmFuZ2VzW2VdfHxudWxsfWdldEFuaW1hdGlvblJhbmdlcygpe2NvbnN0IGU9W107bGV0IHQ7Zm9yKHQgaW4gdGhpcy5fcmFuZ2VzKWUucHVzaCh0aGlzLl9yYW5nZXNbdF0pO3JldHVybiBlfWJlZ2luQW5pbWF0aW9uKGUsdCxpLHMpe2NvbnN0IHI9dGhpcy5nZXRBbmltYXRpb25SYW5nZShlKTtyZXR1cm4gcj90aGlzLl9zY2VuZS5iZWdpbkFuaW1hdGlvbih0aGlzLHIuZnJvbSxyLnRvLHQsaSxzKTpudWxsfXNlcmlhbGl6ZUFuaW1hdGlvblJhbmdlcygpe2NvbnN0IGU9W107Zm9yKGNvbnN0IHQgaW4gdGhpcy5fcmFuZ2VzKXtjb25zdCBpPXRoaXMuX3Jhbmdlc1t0XTtpZighaSljb250aW51ZTtjb25zdCBzPXt9O3MubmFtZT10LHMuZnJvbT1pLmZyb20scy50bz1pLnRvLGUucHVzaChzKX1yZXR1cm4gZX1jb21wdXRlV29ybGRNYXRyaXgoZSl7cmV0dXJuIHRoaXMuX3dvcmxkTWF0cml4fHwodGhpcy5fd29ybGRNYXRyaXg9eC5JZGVudGl0eSgpKSx0aGlzLl93b3JsZE1hdHJpeH1kaXNwb3NlKGUsdD0hMSl7aWYodGhpcy5fbm9kZURhdGFTdG9yYWdlLl9pc0Rpc3Bvc2VkPSEwLCFlKXtjb25zdCBpPXRoaXMuZ2V0RGVzY2VuZGFudHMoITApO2Zvcihjb25zdCBzIG9mIGkpcy5kaXNwb3NlKGUsdCl9dGhpcy5wYXJlbnQ/dGhpcy5wYXJlbnQ9bnVsbDp0aGlzLl9yZW1vdmVGcm9tU2NlbmVSb290Tm9kZXMoKSx0aGlzLm9uRGlzcG9zZU9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLHRoaXMub25EaXNwb3NlT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25FbmFibGVkU3RhdGVDaGFuZ2VkT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25DbG9uZWRPYnNlcnZhYmxlLmNsZWFyKCk7Zm9yKGNvbnN0IGkgb2YgdGhpcy5fYmVoYXZpb3JzKWkuZGV0YWNoKCk7dGhpcy5fYmVoYXZpb3JzLmxlbmd0aD0wLHRoaXMubWV0YWRhdGE9bnVsbH1zdGF0aWMgUGFyc2VBbmltYXRpb25SYW5nZXMoZSx0LGkpe2lmKHQucmFuZ2VzKWZvcihsZXQgcz0wO3M8dC5yYW5nZXMubGVuZ3RoO3MrKyl7Y29uc3Qgcj10LnJhbmdlc1tzXTtlLmNyZWF0ZUFuaW1hdGlvblJhbmdlKHIubmFtZSxyLmZyb20sci50byl9fWdldEhpZXJhcmNoeUJvdW5kaW5nVmVjdG9ycyhlPSEwLHQ9bnVsbCl7dGhpcy5nZXRTY2VuZSgpLmluY3JlbWVudFJlbmRlcklkKCksdGhpcy5jb21wdXRlV29ybGRNYXRyaXgoITApO2xldCBpLHM7Y29uc3Qgcj10aGlzO2lmKHIuZ2V0Qm91bmRpbmdJbmZvJiZyLnN1Yk1lc2hlcyl7Y29uc3Qgbj1yLmdldEJvdW5kaW5nSW5mbygpO2k9bi5ib3VuZGluZ0JveC5taW5pbXVtV29ybGQuY2xvbmUoKSxzPW4uYm91bmRpbmdCb3gubWF4aW11bVdvcmxkLmNsb25lKCl9ZWxzZSBpPW5ldyBwKE51bWJlci5NQVhfVkFMVUUsTnVtYmVyLk1BWF9WQUxVRSxOdW1iZXIuTUFYX1ZBTFVFKSxzPW5ldyBwKC1OdW1iZXIuTUFYX1ZBTFVFLC1OdW1iZXIuTUFYX1ZBTFVFLC1OdW1iZXIuTUFYX1ZBTFVFKTtpZihlKXtjb25zdCBuPXRoaXMuZ2V0RGVzY2VuZGFudHMoITEpO2Zvcihjb25zdCBhIG9mIG4pe2NvbnN0IG89YTtpZihvLmNvbXB1dGVXb3JsZE1hdHJpeCghMCksdCYmIXQobyl8fCFvLmdldEJvdW5kaW5nSW5mb3x8by5nZXRUb3RhbFZlcnRpY2VzKCk9PT0wKWNvbnRpbnVlO2NvbnN0IGw9by5nZXRCb3VuZGluZ0luZm8oKS5ib3VuZGluZ0JveCx1PWwubWluaW11bVdvcmxkLGQ9bC5tYXhpbXVtV29ybGQ7cC5DaGVja0V4dGVuZHModSxpLHMpLHAuQ2hlY2tFeHRlbmRzKGQsaSxzKX19cmV0dXJue21pbjppLG1heDpzfX19emUuX0FuaW1hdGlvblJhbmdlRmFjdG9yeT0oYyxlLHQpPT57dGhyb3cgJCgiQW5pbWF0aW9uUmFuZ2UiKX0semUuX05vZGVDb25zdHJ1Y3RvcnM9e30sVChbUigpXSx6ZS5wcm90b3R5cGUsIm5hbWUiLHZvaWQgMCksVChbUigpXSx6ZS5wcm90b3R5cGUsImlkIix2b2lkIDApLFQoW1IoKV0semUucHJvdG90eXBlLCJ1bmlxdWVJZCIsdm9pZCAwKSxUKFtSKCldLHplLnByb3RvdHlwZSwic3RhdGUiLHZvaWQgMCksVChbUigpXSx6ZS5wcm90b3R5cGUsIm1ldGFkYXRhIix2b2lkIDApO2NsYXNzIEJpe2NvbnN0cnVjdG9yKGUsdCxpLHMpe3RoaXMueD1lLHRoaXMueT10LHRoaXMud2lkdGg9aSx0aGlzLmhlaWdodD1zfXRvR2xvYmFsKGUsdCl7cmV0dXJuIG5ldyBCaSh0aGlzLngqZSx0aGlzLnkqdCx0aGlzLndpZHRoKmUsdGhpcy5oZWlnaHQqdCl9dG9HbG9iYWxUb1JlZihlLHQsaSl7cmV0dXJuIGkueD10aGlzLngqZSxpLnk9dGhpcy55KnQsaS53aWR0aD10aGlzLndpZHRoKmUsaS5oZWlnaHQ9dGhpcy5oZWlnaHQqdCx0aGlzfWNsb25lKCl7cmV0dXJuIG5ldyBCaSh0aGlzLngsdGhpcy55LHRoaXMud2lkdGgsdGhpcy5oZWlnaHQpfX1jbGFzcyBqIGV4dGVuZHMgemV7Y29uc3RydWN0b3IoZSx0LGkscz0hMCl7c3VwZXIoZSxpKSx0aGlzLl9wb3NpdGlvbj1wLlplcm8oKSx0aGlzLl91cFZlY3Rvcj1wLlVwKCksdGhpcy5fb3J0aG9MZWZ0PW51bGwsdGhpcy5fb3J0aG9SaWdodD1udWxsLHRoaXMuX29ydGhvQm90dG9tPW51bGwsdGhpcy5fb3J0aG9Ub3A9bnVsbCx0aGlzLmZvdj0uOCx0aGlzLnByb2plY3Rpb25QbGFuZVRpbHQ9MCx0aGlzLm1pblo9MSx0aGlzLm1heFo9MWU0LHRoaXMuaW5lcnRpYT0uOSx0aGlzLl9tb2RlPWouUEVSU1BFQ1RJVkVfQ0FNRVJBLHRoaXMuaXNJbnRlcm1lZGlhdGU9ITEsdGhpcy52aWV3cG9ydD1uZXcgQmkoMCwwLDEsMSksdGhpcy5sYXllck1hc2s9MjY4NDM1NDU1LHRoaXMuZm92TW9kZT1qLkZPVk1PREVfVkVSVElDQUxfRklYRUQsdGhpcy5jYW1lcmFSaWdNb2RlPWouUklHX01PREVfTk9ORSx0aGlzLmN1c3RvbVJlbmRlclRhcmdldHM9bmV3IEFycmF5LHRoaXMub3V0cHV0UmVuZGVyVGFyZ2V0PW51bGwsdGhpcy5vblZpZXdNYXRyaXhDaGFuZ2VkT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uUHJvamVjdGlvbk1hdHJpeENoYW5nZWRPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25BZnRlckNoZWNrSW5wdXRzT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uUmVzdG9yZVN0YXRlT2JzZXJ2YWJsZT1uZXcgRix0aGlzLmlzUmlnQ2FtZXJhPSExLHRoaXMuX3JpZ0NhbWVyYXM9bmV3IEFycmF5LHRoaXMuX3dlYnZyVmlld01hdHJpeD14LklkZW50aXR5KCksdGhpcy5fc2tpcFJlbmRlcmluZz0hMSx0aGlzLl9wcm9qZWN0aW9uTWF0cml4PW5ldyB4LHRoaXMuX3Bvc3RQcm9jZXNzZXM9bmV3IEFycmF5LHRoaXMuX2FjdGl2ZU1lc2hlcz1uZXcgJGUoMjU2KSx0aGlzLl9nbG9iYWxQb3NpdGlvbj1wLlplcm8oKSx0aGlzLl9jb21wdXRlZFZpZXdNYXRyaXg9eC5JZGVudGl0eSgpLHRoaXMuX2RvTm90Q29tcHV0ZVByb2plY3Rpb25NYXRyaXg9ITEsdGhpcy5fdHJhbnNmb3JtTWF0cml4PXguWmVybygpLHRoaXMuX3JlZnJlc2hGcnVzdHVtUGxhbmVzPSEwLHRoaXMuX2Fic29sdXRlUm90YXRpb249Wi5JZGVudGl0eSgpLHRoaXMuX2lzQ2FtZXJhPSEwLHRoaXMuX2lzTGVmdENhbWVyYT0hMSx0aGlzLl9pc1JpZ2h0Q2FtZXJhPSExLHRoaXMuZ2V0U2NlbmUoKS5hZGRDYW1lcmEodGhpcykscyYmIXRoaXMuZ2V0U2NlbmUoKS5hY3RpdmVDYW1lcmEmJih0aGlzLmdldFNjZW5lKCkuYWN0aXZlQ2FtZXJhPXRoaXMpLHRoaXMucG9zaXRpb249dCx0aGlzLnJlbmRlclBhc3NJZD10aGlzLmdldFNjZW5lKCkuZ2V0RW5naW5lKCkuY3JlYXRlUmVuZGVyUGFzc0lkKGBDYW1lcmEgJHtlfWApfWdldCBwb3NpdGlvbigpe3JldHVybiB0aGlzLl9wb3NpdGlvbn1zZXQgcG9zaXRpb24oZSl7dGhpcy5fcG9zaXRpb249ZX1zZXQgdXBWZWN0b3IoZSl7dGhpcy5fdXBWZWN0b3I9ZX1nZXQgdXBWZWN0b3IoKXtyZXR1cm4gdGhpcy5fdXBWZWN0b3J9Z2V0IHNjcmVlbkFyZWEoKXt2YXIgZSx0LGkscztsZXQgcj0wLG49MDtpZih0aGlzLm1vZGU9PT1qLlBFUlNQRUNUSVZFX0NBTUVSQSl0aGlzLmZvdk1vZGU9PT1qLkZPVk1PREVfVkVSVElDQUxfRklYRUQ/KG49dGhpcy5taW5aKjIqTWF0aC50YW4odGhpcy5mb3YvMikscj10aGlzLmdldEVuZ2luZSgpLmdldEFzcGVjdFJhdGlvKHRoaXMpKm4pOihyPXRoaXMubWluWioyKk1hdGgudGFuKHRoaXMuZm92LzIpLG49ci90aGlzLmdldEVuZ2luZSgpLmdldEFzcGVjdFJhdGlvKHRoaXMpKTtlbHNle2NvbnN0IGE9dGhpcy5nZXRFbmdpbmUoKS5nZXRSZW5kZXJXaWR0aCgpLzIsbz10aGlzLmdldEVuZ2luZSgpLmdldFJlbmRlckhlaWdodCgpLzI7cj0oKGU9dGhpcy5vcnRob1JpZ2h0KSE9PW51bGwmJmUhPT12b2lkIDA/ZTphKS0oKHQ9dGhpcy5vcnRob0xlZnQpIT09bnVsbCYmdCE9PXZvaWQgMD90Oi1hKSxuPSgoaT10aGlzLm9ydGhvVG9wKSE9PW51bGwmJmkhPT12b2lkIDA/aTpvKS0oKHM9dGhpcy5vcnRob0JvdHRvbSkhPT1udWxsJiZzIT09dm9pZCAwP3M6LW8pfXJldHVybiByKm59c2V0IG9ydGhvTGVmdChlKXt0aGlzLl9vcnRob0xlZnQ9ZTtmb3IoY29uc3QgdCBvZiB0aGlzLl9yaWdDYW1lcmFzKXQub3J0aG9MZWZ0PWV9Z2V0IG9ydGhvTGVmdCgpe3JldHVybiB0aGlzLl9vcnRob0xlZnR9c2V0IG9ydGhvUmlnaHQoZSl7dGhpcy5fb3J0aG9SaWdodD1lO2Zvcihjb25zdCB0IG9mIHRoaXMuX3JpZ0NhbWVyYXMpdC5vcnRob1JpZ2h0PWV9Z2V0IG9ydGhvUmlnaHQoKXtyZXR1cm4gdGhpcy5fb3J0aG9SaWdodH1zZXQgb3J0aG9Cb3R0b20oZSl7dGhpcy5fb3J0aG9Cb3R0b209ZTtmb3IoY29uc3QgdCBvZiB0aGlzLl9yaWdDYW1lcmFzKXQub3J0aG9Cb3R0b209ZX1nZXQgb3J0aG9Cb3R0b20oKXtyZXR1cm4gdGhpcy5fb3J0aG9Cb3R0b219c2V0IG9ydGhvVG9wKGUpe3RoaXMuX29ydGhvVG9wPWU7Zm9yKGNvbnN0IHQgb2YgdGhpcy5fcmlnQ2FtZXJhcyl0Lm9ydGhvVG9wPWV9Z2V0IG9ydGhvVG9wKCl7cmV0dXJuIHRoaXMuX29ydGhvVG9wfXNldCBtb2RlKGUpe3RoaXMuX21vZGU9ZTtmb3IoY29uc3QgdCBvZiB0aGlzLl9yaWdDYW1lcmFzKXQubW9kZT1lfWdldCBtb2RlKCl7cmV0dXJuIHRoaXMuX21vZGV9c3RvcmVTdGF0ZSgpe3JldHVybiB0aGlzLl9zdGF0ZVN0b3JlZD0hMCx0aGlzLl9zdG9yZWRGb3Y9dGhpcy5mb3YsdGhpc31fcmVzdG9yZVN0YXRlVmFsdWVzKCl7cmV0dXJuIHRoaXMuX3N0YXRlU3RvcmVkPyh0aGlzLmZvdj10aGlzLl9zdG9yZWRGb3YsITApOiExfXJlc3RvcmVTdGF0ZSgpe3JldHVybiB0aGlzLl9yZXN0b3JlU3RhdGVWYWx1ZXMoKT8odGhpcy5vblJlc3RvcmVTdGF0ZU9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLCEwKTohMX1nZXRDbGFzc05hbWUoKXtyZXR1cm4iQ2FtZXJhIn10b1N0cmluZyhlKXtsZXQgdD0iTmFtZTogIit0aGlzLm5hbWU7aWYodCs9IiwgdHlwZTogIit0aGlzLmdldENsYXNzTmFtZSgpLHRoaXMuYW5pbWF0aW9ucylmb3IobGV0IGk9MDtpPHRoaXMuYW5pbWF0aW9ucy5sZW5ndGg7aSsrKXQrPSIsIGFuaW1hdGlvblswXTogIit0aGlzLmFuaW1hdGlvbnNbaV0udG9TdHJpbmcoZSk7cmV0dXJuIHR9YXBwbHlWZXJ0aWNhbENvcnJlY3Rpb24oKXtjb25zdCBlPXRoaXMuYWJzb2x1dGVSb3RhdGlvbi50b0V1bGVyQW5nbGVzKCk7dGhpcy5wcm9qZWN0aW9uUGxhbmVUaWx0PXRoaXMuX3NjZW5lLnVzZVJpZ2h0SGFuZGVkU3lzdGVtPy1lLng6ZS54fWdldCBnbG9iYWxQb3NpdGlvbigpe3JldHVybiB0aGlzLl9nbG9iYWxQb3NpdGlvbn1nZXRBY3RpdmVNZXNoZXMoKXtyZXR1cm4gdGhpcy5fYWN0aXZlTWVzaGVzfWlzQWN0aXZlTWVzaChlKXtyZXR1cm4gdGhpcy5fYWN0aXZlTWVzaGVzLmluZGV4T2YoZSkhPT0tMX1pc1JlYWR5KGU9ITEpe2lmKGUpe2Zvcihjb25zdCB0IG9mIHRoaXMuX3Bvc3RQcm9jZXNzZXMpaWYodCYmIXQuaXNSZWFkeSgpKXJldHVybiExfXJldHVybiBzdXBlci5pc1JlYWR5KGUpfV9pbml0Q2FjaGUoKXtzdXBlci5faW5pdENhY2hlKCksdGhpcy5fY2FjaGUucG9zaXRpb249bmV3IHAoTnVtYmVyLk1BWF9WQUxVRSxOdW1iZXIuTUFYX1ZBTFVFLE51bWJlci5NQVhfVkFMVUUpLHRoaXMuX2NhY2hlLnVwVmVjdG9yPW5ldyBwKE51bWJlci5NQVhfVkFMVUUsTnVtYmVyLk1BWF9WQUxVRSxOdW1iZXIuTUFYX1ZBTFVFKSx0aGlzLl9jYWNoZS5tb2RlPXZvaWQgMCx0aGlzLl9jYWNoZS5taW5aPXZvaWQgMCx0aGlzLl9jYWNoZS5tYXhaPXZvaWQgMCx0aGlzLl9jYWNoZS5mb3Y9dm9pZCAwLHRoaXMuX2NhY2hlLmZvdk1vZGU9dm9pZCAwLHRoaXMuX2NhY2hlLmFzcGVjdFJhdGlvPXZvaWQgMCx0aGlzLl9jYWNoZS5vcnRob0xlZnQ9dm9pZCAwLHRoaXMuX2NhY2hlLm9ydGhvUmlnaHQ9dm9pZCAwLHRoaXMuX2NhY2hlLm9ydGhvQm90dG9tPXZvaWQgMCx0aGlzLl9jYWNoZS5vcnRob1RvcD12b2lkIDAsdGhpcy5fY2FjaGUucmVuZGVyV2lkdGg9dm9pZCAwLHRoaXMuX2NhY2hlLnJlbmRlckhlaWdodD12b2lkIDB9X3VwZGF0ZUNhY2hlKGUpe2V8fHN1cGVyLl91cGRhdGVDYWNoZSgpLHRoaXMuX2NhY2hlLnBvc2l0aW9uLmNvcHlGcm9tKHRoaXMucG9zaXRpb24pLHRoaXMuX2NhY2hlLnVwVmVjdG9yLmNvcHlGcm9tKHRoaXMudXBWZWN0b3IpfV9pc1N5bmNocm9uaXplZCgpe3JldHVybiB0aGlzLl9pc1N5bmNocm9uaXplZFZpZXdNYXRyaXgoKSYmdGhpcy5faXNTeW5jaHJvbml6ZWRQcm9qZWN0aW9uTWF0cml4KCl9X2lzU3luY2hyb25pemVkVmlld01hdHJpeCgpe3JldHVybiBzdXBlci5faXNTeW5jaHJvbml6ZWQoKT90aGlzLl9jYWNoZS5wb3NpdGlvbi5lcXVhbHModGhpcy5wb3NpdGlvbikmJnRoaXMuX2NhY2hlLnVwVmVjdG9yLmVxdWFscyh0aGlzLnVwVmVjdG9yKSYmdGhpcy5pc1N5bmNocm9uaXplZFdpdGhQYXJlbnQoKTohMX1faXNTeW5jaHJvbml6ZWRQcm9qZWN0aW9uTWF0cml4KCl7bGV0IGU9dGhpcy5fY2FjaGUubW9kZT09PXRoaXMubW9kZSYmdGhpcy5fY2FjaGUubWluWj09PXRoaXMubWluWiYmdGhpcy5fY2FjaGUubWF4Wj09PXRoaXMubWF4WjtpZighZSlyZXR1cm4hMTtjb25zdCB0PXRoaXMuZ2V0RW5naW5lKCk7cmV0dXJuIHRoaXMubW9kZT09PWouUEVSU1BFQ1RJVkVfQ0FNRVJBP2U9dGhpcy5fY2FjaGUuZm92PT09dGhpcy5mb3YmJnRoaXMuX2NhY2hlLmZvdk1vZGU9PT10aGlzLmZvdk1vZGUmJnRoaXMuX2NhY2hlLmFzcGVjdFJhdGlvPT09dC5nZXRBc3BlY3RSYXRpbyh0aGlzKSYmdGhpcy5fY2FjaGUucHJvamVjdGlvblBsYW5lVGlsdD09PXRoaXMucHJvamVjdGlvblBsYW5lVGlsdDplPXRoaXMuX2NhY2hlLm9ydGhvTGVmdD09PXRoaXMub3J0aG9MZWZ0JiZ0aGlzLl9jYWNoZS5vcnRob1JpZ2h0PT09dGhpcy5vcnRob1JpZ2h0JiZ0aGlzLl9jYWNoZS5vcnRob0JvdHRvbT09PXRoaXMub3J0aG9Cb3R0b20mJnRoaXMuX2NhY2hlLm9ydGhvVG9wPT09dGhpcy5vcnRob1RvcCYmdGhpcy5fY2FjaGUucmVuZGVyV2lkdGg9PT10LmdldFJlbmRlcldpZHRoKCkmJnRoaXMuX2NhY2hlLnJlbmRlckhlaWdodD09PXQuZ2V0UmVuZGVySGVpZ2h0KCksZX1hdHRhY2hDb250cm9sKGUsdCl7fWRldGFjaENvbnRyb2woZSl7fXVwZGF0ZSgpe3RoaXMuX2NoZWNrSW5wdXRzKCksdGhpcy5jYW1lcmFSaWdNb2RlIT09ai5SSUdfTU9ERV9OT05FJiZ0aGlzLl91cGRhdGVSaWdDYW1lcmFzKCl9X2NoZWNrSW5wdXRzKCl7dGhpcy5vbkFmdGVyQ2hlY2tJbnB1dHNPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKX1nZXQgcmlnQ2FtZXJhcygpe3JldHVybiB0aGlzLl9yaWdDYW1lcmFzfWdldCByaWdQb3N0UHJvY2Vzcygpe3JldHVybiB0aGlzLl9yaWdQb3N0UHJvY2Vzc31fZ2V0Rmlyc3RQb3N0UHJvY2Vzcygpe2ZvcihsZXQgZT0wO2U8dGhpcy5fcG9zdFByb2Nlc3Nlcy5sZW5ndGg7ZSsrKWlmKHRoaXMuX3Bvc3RQcm9jZXNzZXNbZV0hPT1udWxsKXJldHVybiB0aGlzLl9wb3N0UHJvY2Vzc2VzW2VdO3JldHVybiBudWxsfV9jYXNjYWRlUG9zdFByb2Nlc3Nlc1RvUmlnQ2Ftcygpe2NvbnN0IGU9dGhpcy5fZ2V0Rmlyc3RQb3N0UHJvY2VzcygpO2UmJmUubWFya1RleHR1cmVEaXJ0eSgpO2ZvcihsZXQgdD0wLGk9dGhpcy5fcmlnQ2FtZXJhcy5sZW5ndGg7dDxpO3QrKyl7Y29uc3Qgcz10aGlzLl9yaWdDYW1lcmFzW3RdLHI9cy5fcmlnUG9zdFByb2Nlc3M7cj8oci5nZXRFZmZlY3ROYW1lKCk9PT0icGFzcyImJihzLmlzSW50ZXJtZWRpYXRlPXRoaXMuX3Bvc3RQcm9jZXNzZXMubGVuZ3RoPT09MCkscy5fcG9zdFByb2Nlc3Nlcz10aGlzLl9wb3N0UHJvY2Vzc2VzLnNsaWNlKDApLmNvbmNhdChyKSxyLm1hcmtUZXh0dXJlRGlydHkoKSk6cy5fcG9zdFByb2Nlc3Nlcz10aGlzLl9wb3N0UHJvY2Vzc2VzLnNsaWNlKDApfX1hdHRhY2hQb3N0UHJvY2VzcyhlLHQ9bnVsbCl7cmV0dXJuIWUuaXNSZXVzYWJsZSgpJiZ0aGlzLl9wb3N0UHJvY2Vzc2VzLmluZGV4T2YoZSk+LTE/KE8uRXJyb3IoIllvdSdyZSB0cnlpbmcgdG8gcmV1c2UgYSBwb3N0IHByb2Nlc3Mgbm90IGRlZmluZWQgYXMgcmV1c2FibGUuIiksMCk6KHQ9PW51bGx8fHQ8MD90aGlzLl9wb3N0UHJvY2Vzc2VzLnB1c2goZSk6dGhpcy5fcG9zdFByb2Nlc3Nlc1t0XT09PW51bGw/dGhpcy5fcG9zdFByb2Nlc3Nlc1t0XT1lOnRoaXMuX3Bvc3RQcm9jZXNzZXMuc3BsaWNlKHQsMCxlKSx0aGlzLl9jYXNjYWRlUG9zdFByb2Nlc3Nlc1RvUmlnQ2FtcygpLHRoaXMuX3NjZW5lLnByZVBhc3NSZW5kZXJlciYmdGhpcy5fc2NlbmUucHJlUGFzc1JlbmRlcmVyLm1hcmtBc0RpcnR5KCksdGhpcy5fcG9zdFByb2Nlc3Nlcy5pbmRleE9mKGUpKX1kZXRhY2hQb3N0UHJvY2VzcyhlKXtjb25zdCB0PXRoaXMuX3Bvc3RQcm9jZXNzZXMuaW5kZXhPZihlKTt0IT09LTEmJih0aGlzLl9wb3N0UHJvY2Vzc2VzW3RdPW51bGwpLHRoaXMuX3NjZW5lLnByZVBhc3NSZW5kZXJlciYmdGhpcy5fc2NlbmUucHJlUGFzc1JlbmRlcmVyLm1hcmtBc0RpcnR5KCksdGhpcy5fY2FzY2FkZVBvc3RQcm9jZXNzZXNUb1JpZ0NhbXMoKX1nZXRXb3JsZE1hdHJpeCgpe3JldHVybiB0aGlzLl9pc1N5bmNocm9uaXplZFZpZXdNYXRyaXgoKT90aGlzLl93b3JsZE1hdHJpeDoodGhpcy5nZXRWaWV3TWF0cml4KCksdGhpcy5fd29ybGRNYXRyaXgpfV9nZXRWaWV3TWF0cml4KCl7cmV0dXJuIHguSWRlbnRpdHkoKX1nZXRWaWV3TWF0cml4KGUpe3JldHVybiFlJiZ0aGlzLl9pc1N5bmNocm9uaXplZFZpZXdNYXRyaXgoKT90aGlzLl9jb21wdXRlZFZpZXdNYXRyaXg6KHRoaXMudXBkYXRlQ2FjaGUoKSx0aGlzLl9jb21wdXRlZFZpZXdNYXRyaXg9dGhpcy5fZ2V0Vmlld01hdHJpeCgpLHRoaXMuX2N1cnJlbnRSZW5kZXJJZD10aGlzLmdldFNjZW5lKCkuZ2V0UmVuZGVySWQoKSx0aGlzLl9jaGlsZFVwZGF0ZUlkKyssdGhpcy5fcmVmcmVzaEZydXN0dW1QbGFuZXM9ITAsdGhpcy5fY2FtZXJhUmlnUGFyYW1zJiZ0aGlzLl9jYW1lcmFSaWdQYXJhbXMudnJQcmVWaWV3TWF0cml4JiZ0aGlzLl9jb21wdXRlZFZpZXdNYXRyaXgubXVsdGlwbHlUb1JlZih0aGlzLl9jYW1lcmFSaWdQYXJhbXMudnJQcmVWaWV3TWF0cml4LHRoaXMuX2NvbXB1dGVkVmlld01hdHJpeCksdGhpcy5wYXJlbnQmJnRoaXMucGFyZW50Lm9uVmlld01hdHJpeENoYW5nZWRPYnNlcnZhYmxlJiZ0aGlzLnBhcmVudC5vblZpZXdNYXRyaXhDaGFuZ2VkT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcy5wYXJlbnQpLHRoaXMub25WaWV3TWF0cml4Q2hhbmdlZE9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLHRoaXMuX2NvbXB1dGVkVmlld01hdHJpeC5pbnZlcnRUb1JlZih0aGlzLl93b3JsZE1hdHJpeCksdGhpcy5fY29tcHV0ZWRWaWV3TWF0cml4KX1mcmVlemVQcm9qZWN0aW9uTWF0cml4KGUpe3RoaXMuX2RvTm90Q29tcHV0ZVByb2plY3Rpb25NYXRyaXg9ITAsZSE9PXZvaWQgMCYmKHRoaXMuX3Byb2plY3Rpb25NYXRyaXg9ZSl9dW5mcmVlemVQcm9qZWN0aW9uTWF0cml4KCl7dGhpcy5fZG9Ob3RDb21wdXRlUHJvamVjdGlvbk1hdHJpeD0hMX1nZXRQcm9qZWN0aW9uTWF0cml4KGUpe3ZhciB0LGkscyxyLG4sYSxvLGg7aWYodGhpcy5fZG9Ob3RDb21wdXRlUHJvamVjdGlvbk1hdHJpeHx8IWUmJnRoaXMuX2lzU3luY2hyb25pemVkUHJvamVjdGlvbk1hdHJpeCgpKXJldHVybiB0aGlzLl9wcm9qZWN0aW9uTWF0cml4O3RoaXMuX2NhY2hlLm1vZGU9dGhpcy5tb2RlLHRoaXMuX2NhY2hlLm1pblo9dGhpcy5taW5aLHRoaXMuX2NhY2hlLm1heFo9dGhpcy5tYXhaLHRoaXMuX3JlZnJlc2hGcnVzdHVtUGxhbmVzPSEwO2NvbnN0IGw9dGhpcy5nZXRFbmdpbmUoKSx1PXRoaXMuZ2V0U2NlbmUoKSxkPWwudXNlUmV2ZXJzZURlcHRoQnVmZmVyO2lmKHRoaXMubW9kZT09PWouUEVSU1BFQ1RJVkVfQ0FNRVJBKXt0aGlzLl9jYWNoZS5mb3Y9dGhpcy5mb3YsdGhpcy5fY2FjaGUuZm92TW9kZT10aGlzLmZvdk1vZGUsdGhpcy5fY2FjaGUuYXNwZWN0UmF0aW89bC5nZXRBc3BlY3RSYXRpbyh0aGlzKSx0aGlzLl9jYWNoZS5wcm9qZWN0aW9uUGxhbmVUaWx0PXRoaXMucHJvamVjdGlvblBsYW5lVGlsdCx0aGlzLm1pblo8PTAmJih0aGlzLm1pblo9LjEpO2xldCBmO3UudXNlUmlnaHRIYW5kZWRTeXN0ZW0/Zj14LlBlcnNwZWN0aXZlRm92UkhUb1JlZjpmPXguUGVyc3BlY3RpdmVGb3ZMSFRvUmVmLGYodGhpcy5mb3YsbC5nZXRBc3BlY3RSYXRpbyh0aGlzKSxkP3RoaXMubWF4Wjp0aGlzLm1pblosZD90aGlzLm1pblo6dGhpcy5tYXhaLHRoaXMuX3Byb2plY3Rpb25NYXRyaXgsdGhpcy5mb3ZNb2RlPT09ai5GT1ZNT0RFX1ZFUlRJQ0FMX0ZJWEVELGwuaXNORENIYWxmWlJhbmdlLHRoaXMucHJvamVjdGlvblBsYW5lVGlsdCxkKX1lbHNle2NvbnN0IGY9bC5nZXRSZW5kZXJXaWR0aCgpLzIsXz1sLmdldFJlbmRlckhlaWdodCgpLzI7dS51c2VSaWdodEhhbmRlZFN5c3RlbT94Lk9ydGhvT2ZmQ2VudGVyUkhUb1JlZigodD10aGlzLm9ydGhvTGVmdCkhPT1udWxsJiZ0IT09dm9pZCAwP3Q6LWYsKGk9dGhpcy5vcnRob1JpZ2h0KSE9PW51bGwmJmkhPT12b2lkIDA/aTpmLChzPXRoaXMub3J0aG9Cb3R0b20pIT09bnVsbCYmcyE9PXZvaWQgMD9zOi1fLChyPXRoaXMub3J0aG9Ub3ApIT09bnVsbCYmciE9PXZvaWQgMD9yOl8sZD90aGlzLm1heFo6dGhpcy5taW5aLGQ/dGhpcy5taW5aOnRoaXMubWF4Wix0aGlzLl9wcm9qZWN0aW9uTWF0cml4LGwuaXNORENIYWxmWlJhbmdlKTp4Lk9ydGhvT2ZmQ2VudGVyTEhUb1JlZigobj10aGlzLm9ydGhvTGVmdCkhPT1udWxsJiZuIT09dm9pZCAwP246LWYsKGE9dGhpcy5vcnRob1JpZ2h0KSE9PW51bGwmJmEhPT12b2lkIDA/YTpmLChvPXRoaXMub3J0aG9Cb3R0b20pIT09bnVsbCYmbyE9PXZvaWQgMD9vOi1fLChoPXRoaXMub3J0aG9Ub3ApIT09bnVsbCYmaCE9PXZvaWQgMD9oOl8sZD90aGlzLm1heFo6dGhpcy5taW5aLGQ/dGhpcy5taW5aOnRoaXMubWF4Wix0aGlzLl9wcm9qZWN0aW9uTWF0cml4LGwuaXNORENIYWxmWlJhbmdlKSx0aGlzLl9jYWNoZS5vcnRob0xlZnQ9dGhpcy5vcnRob0xlZnQsdGhpcy5fY2FjaGUub3J0aG9SaWdodD10aGlzLm9ydGhvUmlnaHQsdGhpcy5fY2FjaGUub3J0aG9Cb3R0b209dGhpcy5vcnRob0JvdHRvbSx0aGlzLl9jYWNoZS5vcnRob1RvcD10aGlzLm9ydGhvVG9wLHRoaXMuX2NhY2hlLnJlbmRlcldpZHRoPWwuZ2V0UmVuZGVyV2lkdGgoKSx0aGlzLl9jYWNoZS5yZW5kZXJIZWlnaHQ9bC5nZXRSZW5kZXJIZWlnaHQoKX1yZXR1cm4gdGhpcy5vblByb2plY3Rpb25NYXRyaXhDaGFuZ2VkT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyksdGhpcy5fcHJvamVjdGlvbk1hdHJpeH1nZXRUcmFuc2Zvcm1hdGlvbk1hdHJpeCgpe3JldHVybiB0aGlzLl9jb21wdXRlZFZpZXdNYXRyaXgubXVsdGlwbHlUb1JlZih0aGlzLl9wcm9qZWN0aW9uTWF0cml4LHRoaXMuX3RyYW5zZm9ybU1hdHJpeCksdGhpcy5fdHJhbnNmb3JtTWF0cml4fV91cGRhdGVGcnVzdHVtUGxhbmVzKCl7dGhpcy5fcmVmcmVzaEZydXN0dW1QbGFuZXMmJih0aGlzLmdldFRyYW5zZm9ybWF0aW9uTWF0cml4KCksdGhpcy5fZnJ1c3R1bVBsYW5lcz9FdC5HZXRQbGFuZXNUb1JlZih0aGlzLl90cmFuc2Zvcm1NYXRyaXgsdGhpcy5fZnJ1c3R1bVBsYW5lcyk6dGhpcy5fZnJ1c3R1bVBsYW5lcz1FdC5HZXRQbGFuZXModGhpcy5fdHJhbnNmb3JtTWF0cml4KSx0aGlzLl9yZWZyZXNoRnJ1c3R1bVBsYW5lcz0hMSl9aXNJbkZydXN0dW0oZSx0PSExKXtpZih0aGlzLl91cGRhdGVGcnVzdHVtUGxhbmVzKCksdCYmdGhpcy5yaWdDYW1lcmFzLmxlbmd0aD4wKXtsZXQgaT0hMTtyZXR1cm4gdGhpcy5yaWdDYW1lcmFzLmZvckVhY2gocz0+e3MuX3VwZGF0ZUZydXN0dW1QbGFuZXMoKSxpPWl8fGUuaXNJbkZydXN0dW0ocy5fZnJ1c3R1bVBsYW5lcyl9KSxpfWVsc2UgcmV0dXJuIGUuaXNJbkZydXN0dW0odGhpcy5fZnJ1c3R1bVBsYW5lcyl9aXNDb21wbGV0ZWx5SW5GcnVzdHVtKGUpe3JldHVybiB0aGlzLl91cGRhdGVGcnVzdHVtUGxhbmVzKCksZS5pc0NvbXBsZXRlbHlJbkZydXN0dW0odGhpcy5fZnJ1c3R1bVBsYW5lcyl9Z2V0Rm9yd2FyZFJheShlPTEwMCx0LGkpe3Rocm93ICQoIlJheSIpfWdldEZvcndhcmRSYXlUb1JlZihlLHQ9MTAwLGkscyl7dGhyb3cgJCgiUmF5Iil9ZGlzcG9zZShlLHQ9ITEpe2Zvcih0aGlzLm9uVmlld01hdHJpeENoYW5nZWRPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vblByb2plY3Rpb25NYXRyaXhDaGFuZ2VkT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25BZnRlckNoZWNrSW5wdXRzT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25SZXN0b3JlU3RhdGVPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5pbnB1dHMmJnRoaXMuaW5wdXRzLmNsZWFyKCksdGhpcy5nZXRTY2VuZSgpLnN0b3BBbmltYXRpb24odGhpcyksdGhpcy5nZXRTY2VuZSgpLnJlbW92ZUNhbWVyYSh0aGlzKTt0aGlzLl9yaWdDYW1lcmFzLmxlbmd0aD4wOyl7Y29uc3Qgcz10aGlzLl9yaWdDYW1lcmFzLnBvcCgpO3MmJnMuZGlzcG9zZSgpfWlmKHRoaXMuX3BhcmVudENvbnRhaW5lcil7Y29uc3Qgcz10aGlzLl9wYXJlbnRDb250YWluZXIuY2FtZXJhcy5pbmRleE9mKHRoaXMpO3M+LTEmJnRoaXMuX3BhcmVudENvbnRhaW5lci5jYW1lcmFzLnNwbGljZShzLDEpLHRoaXMuX3BhcmVudENvbnRhaW5lcj1udWxsfWlmKHRoaXMuX3JpZ1Bvc3RQcm9jZXNzKXRoaXMuX3JpZ1Bvc3RQcm9jZXNzLmRpc3Bvc2UodGhpcyksdGhpcy5fcmlnUG9zdFByb2Nlc3M9bnVsbCx0aGlzLl9wb3N0UHJvY2Vzc2VzLmxlbmd0aD0wO2Vsc2UgaWYodGhpcy5jYW1lcmFSaWdNb2RlIT09ai5SSUdfTU9ERV9OT05FKXRoaXMuX3JpZ1Bvc3RQcm9jZXNzPW51bGwsdGhpcy5fcG9zdFByb2Nlc3Nlcy5sZW5ndGg9MDtlbHNle2xldCBzPXRoaXMuX3Bvc3RQcm9jZXNzZXMubGVuZ3RoO2Zvcig7LS1zPj0wOyl7Y29uc3Qgcj10aGlzLl9wb3N0UHJvY2Vzc2VzW3NdO3ImJnIuZGlzcG9zZSh0aGlzKX19bGV0IGk9dGhpcy5jdXN0b21SZW5kZXJUYXJnZXRzLmxlbmd0aDtmb3IoOy0taT49MDspdGhpcy5jdXN0b21SZW5kZXJUYXJnZXRzW2ldLmRpc3Bvc2UoKTt0aGlzLmN1c3RvbVJlbmRlclRhcmdldHMubGVuZ3RoPTAsdGhpcy5fYWN0aXZlTWVzaGVzLmRpc3Bvc2UoKSx0aGlzLmdldFNjZW5lKCkuZ2V0RW5naW5lKCkucmVsZWFzZVJlbmRlclBhc3NJZCh0aGlzLnJlbmRlclBhc3NJZCksc3VwZXIuZGlzcG9zZShlLHQpfWdldCBpc0xlZnRDYW1lcmEoKXtyZXR1cm4gdGhpcy5faXNMZWZ0Q2FtZXJhfWdldCBpc1JpZ2h0Q2FtZXJhKCl7cmV0dXJuIHRoaXMuX2lzUmlnaHRDYW1lcmF9Z2V0IGxlZnRDYW1lcmEoKXtyZXR1cm4gdGhpcy5fcmlnQ2FtZXJhcy5sZW5ndGg8MT9udWxsOnRoaXMuX3JpZ0NhbWVyYXNbMF19Z2V0IHJpZ2h0Q2FtZXJhKCl7cmV0dXJuIHRoaXMuX3JpZ0NhbWVyYXMubGVuZ3RoPDI/bnVsbDp0aGlzLl9yaWdDYW1lcmFzWzFdfWdldExlZnRUYXJnZXQoKXtyZXR1cm4gdGhpcy5fcmlnQ2FtZXJhcy5sZW5ndGg8MT9udWxsOnRoaXMuX3JpZ0NhbWVyYXNbMF0uZ2V0VGFyZ2V0KCl9Z2V0UmlnaHRUYXJnZXQoKXtyZXR1cm4gdGhpcy5fcmlnQ2FtZXJhcy5sZW5ndGg8Mj9udWxsOnRoaXMuX3JpZ0NhbWVyYXNbMV0uZ2V0VGFyZ2V0KCl9c2V0Q2FtZXJhUmlnTW9kZShlLHQpe2lmKHRoaXMuY2FtZXJhUmlnTW9kZSE9PWUpe2Zvcig7dGhpcy5fcmlnQ2FtZXJhcy5sZW5ndGg+MDspe2NvbnN0IGk9dGhpcy5fcmlnQ2FtZXJhcy5wb3AoKTtpJiZpLmRpc3Bvc2UoKX1pZih0aGlzLmNhbWVyYVJpZ01vZGU9ZSx0aGlzLl9jYW1lcmFSaWdQYXJhbXM9e30sdGhpcy5fY2FtZXJhUmlnUGFyYW1zLmludGVyYXhpYWxEaXN0YW5jZT10LmludGVyYXhpYWxEaXN0YW5jZXx8LjA2MzcsdGhpcy5fY2FtZXJhUmlnUGFyYW1zLnN0ZXJlb0hhbGZBbmdsZT1ILlRvUmFkaWFucyh0aGlzLl9jYW1lcmFSaWdQYXJhbXMuaW50ZXJheGlhbERpc3RhbmNlLy4wNjM3KSx0aGlzLmNhbWVyYVJpZ01vZGUhPT1qLlJJR19NT0RFX05PTkUpe2NvbnN0IGk9dGhpcy5jcmVhdGVSaWdDYW1lcmEodGhpcy5uYW1lKyJfTCIsMCk7aSYmKGkuX2lzTGVmdENhbWVyYT0hMCk7Y29uc3Qgcz10aGlzLmNyZWF0ZVJpZ0NhbWVyYSh0aGlzLm5hbWUrIl9SIiwxKTtzJiYocy5faXNSaWdodENhbWVyYT0hMCksaSYmcyYmKHRoaXMuX3JpZ0NhbWVyYXMucHVzaChpKSx0aGlzLl9yaWdDYW1lcmFzLnB1c2gocykpfXRoaXMuX3NldFJpZ01vZGUodCksdGhpcy5fY2FzY2FkZVBvc3RQcm9jZXNzZXNUb1JpZ0NhbXMoKSx0aGlzLnVwZGF0ZSgpfX1fc2V0UmlnTW9kZShlKXt9X2dldFZSUHJvamVjdGlvbk1hdHJpeCgpe3JldHVybiB4LlBlcnNwZWN0aXZlRm92TEhUb1JlZih0aGlzLl9jYW1lcmFSaWdQYXJhbXMudnJNZXRyaWNzLmFzcGVjdFJhdGlvRm92LHRoaXMuX2NhbWVyYVJpZ1BhcmFtcy52ck1ldHJpY3MuYXNwZWN0UmF0aW8sdGhpcy5taW5aLHRoaXMubWF4Wix0aGlzLl9jYW1lcmFSaWdQYXJhbXMudnJXb3JrTWF0cml4LCEwLHRoaXMuZ2V0RW5naW5lKCkuaXNORENIYWxmWlJhbmdlKSx0aGlzLl9jYW1lcmFSaWdQYXJhbXMudnJXb3JrTWF0cml4Lm11bHRpcGx5VG9SZWYodGhpcy5fY2FtZXJhUmlnUGFyYW1zLnZySE1hdHJpeCx0aGlzLl9wcm9qZWN0aW9uTWF0cml4KSx0aGlzLl9wcm9qZWN0aW9uTWF0cml4fV91cGRhdGVDYW1lcmFSb3RhdGlvbk1hdHJpeCgpe31fdXBkYXRlV2ViVlJDYW1lcmFSb3RhdGlvbk1hdHJpeCgpe31fZ2V0V2ViVlJQcm9qZWN0aW9uTWF0cml4KCl7cmV0dXJuIHguSWRlbnRpdHkoKX1fZ2V0V2ViVlJWaWV3TWF0cml4KCl7cmV0dXJuIHguSWRlbnRpdHkoKX1zZXRDYW1lcmFSaWdQYXJhbWV0ZXIoZSx0KXt0aGlzLl9jYW1lcmFSaWdQYXJhbXN8fCh0aGlzLl9jYW1lcmFSaWdQYXJhbXM9e30pLHRoaXMuX2NhbWVyYVJpZ1BhcmFtc1tlXT10LGU9PT0iaW50ZXJheGlhbERpc3RhbmNlIiYmKHRoaXMuX2NhbWVyYVJpZ1BhcmFtcy5zdGVyZW9IYWxmQW5nbGU9SC5Ub1JhZGlhbnModC8uMDYzNykpfWNyZWF0ZVJpZ0NhbWVyYShlLHQpe3JldHVybiBudWxsfV91cGRhdGVSaWdDYW1lcmFzKCl7Zm9yKGxldCBlPTA7ZTx0aGlzLl9yaWdDYW1lcmFzLmxlbmd0aDtlKyspdGhpcy5fcmlnQ2FtZXJhc1tlXS5taW5aPXRoaXMubWluWix0aGlzLl9yaWdDYW1lcmFzW2VdLm1heFo9dGhpcy5tYXhaLHRoaXMuX3JpZ0NhbWVyYXNbZV0uZm92PXRoaXMuZm92LHRoaXMuX3JpZ0NhbWVyYXNbZV0udXBWZWN0b3IuY29weUZyb20odGhpcy51cFZlY3Rvcik7dGhpcy5jYW1lcmFSaWdNb2RlPT09ai5SSUdfTU9ERV9TVEVSRU9TQ09QSUNfQU5BR0xZUEgmJih0aGlzLl9yaWdDYW1lcmFzWzBdLnZpZXdwb3J0PXRoaXMuX3JpZ0NhbWVyYXNbMV0udmlld3BvcnQ9dGhpcy52aWV3cG9ydCl9X3NldHVwSW5wdXRzKCl7fXNlcmlhbGl6ZSgpe2NvbnN0IGU9YWUuU2VyaWFsaXplKHRoaXMpO3JldHVybiBlLnVuaXF1ZUlkPXRoaXMudW5pcXVlSWQsZS50eXBlPXRoaXMuZ2V0Q2xhc3NOYW1lKCksdGhpcy5wYXJlbnQmJnRoaXMucGFyZW50Ll9zZXJpYWxpemVBc1BhcmVudChlKSx0aGlzLmlucHV0cyYmdGhpcy5pbnB1dHMuc2VyaWFsaXplKGUpLGFlLkFwcGVuZFNlcmlhbGl6ZWRBbmltYXRpb25zKHRoaXMsZSksZS5yYW5nZXM9dGhpcy5zZXJpYWxpemVBbmltYXRpb25SYW5nZXMoKSxlLmlzRW5hYmxlZD10aGlzLmlzRW5hYmxlZCgpLGV9Y2xvbmUoZSx0PW51bGwpe2NvbnN0IGk9YWUuQ2xvbmUoai5HZXRDb25zdHJ1Y3RvckZyb21OYW1lKHRoaXMuZ2V0Q2xhc3NOYW1lKCksZSx0aGlzLmdldFNjZW5lKCksdGhpcy5pbnRlcmF4aWFsRGlzdGFuY2UsdGhpcy5pc1N0ZXJlb3Njb3BpY1NpZGVCeVNpZGUpLHRoaXMpO3JldHVybiBpLm5hbWU9ZSxpLnBhcmVudD10LHRoaXMub25DbG9uZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhpKSxpfWdldERpcmVjdGlvbihlKXtjb25zdCB0PXAuWmVybygpO3JldHVybiB0aGlzLmdldERpcmVjdGlvblRvUmVmKGUsdCksdH1nZXQgYWJzb2x1dGVSb3RhdGlvbigpe3JldHVybiB0aGlzLmdldFdvcmxkTWF0cml4KCkuZGVjb21wb3NlKHZvaWQgMCx0aGlzLl9hYnNvbHV0ZVJvdGF0aW9uKSx0aGlzLl9hYnNvbHV0ZVJvdGF0aW9ufWdldERpcmVjdGlvblRvUmVmKGUsdCl7cC5UcmFuc2Zvcm1Ob3JtYWxUb1JlZihlLHRoaXMuZ2V0V29ybGRNYXRyaXgoKSx0KX1zdGF0aWMgR2V0Q29uc3RydWN0b3JGcm9tTmFtZShlLHQsaSxzPTAscj0hMCl7Y29uc3Qgbj16ZS5Db25zdHJ1Y3QoZSx0LGkse2ludGVyYXhpYWxfZGlzdGFuY2U6cyxpc1N0ZXJlb3Njb3BpY1NpZGVCeVNpZGU6cn0pO3JldHVybiBufHwoKCk9PmouX0NyZWF0ZURlZmF1bHRQYXJzZWRDYW1lcmEodCxpKSl9Y29tcHV0ZVdvcmxkTWF0cml4KCl7cmV0dXJuIHRoaXMuZ2V0V29ybGRNYXRyaXgoKX1zdGF0aWMgUGFyc2UoZSx0KXtjb25zdCBpPWUudHlwZSxzPWouR2V0Q29uc3RydWN0b3JGcm9tTmFtZShpLGUubmFtZSx0LGUuaW50ZXJheGlhbF9kaXN0YW5jZSxlLmlzU3RlcmVvc2NvcGljU2lkZUJ5U2lkZSkscj1hZS5QYXJzZShzLGUsdCk7aWYoZS5wYXJlbnRJZCE9PXZvaWQgMCYmKHIuX3dhaXRpbmdQYXJlbnRJZD1lLnBhcmVudElkKSxlLnBhcmVudEluc3RhbmNlSW5kZXghPT12b2lkIDAmJihyLl93YWl0aW5nUGFyZW50SW5zdGFuY2VJbmRleD1lLnBhcmVudEluc3RhbmNlSW5kZXgpLHIuaW5wdXRzJiYoci5pbnB1dHMucGFyc2UoZSksci5fc2V0dXBJbnB1dHMoKSksZS51cFZlY3RvciYmKHIudXBWZWN0b3I9cC5Gcm9tQXJyYXkoZS51cFZlY3RvcikpLHIuc2V0UG9zaXRpb24mJihyLnBvc2l0aW9uLmNvcHlGcm9tRmxvYXRzKDAsMCwwKSxyLnNldFBvc2l0aW9uKHAuRnJvbUFycmF5KGUucG9zaXRpb24pKSksZS50YXJnZXQmJnIuc2V0VGFyZ2V0JiZyLnNldFRhcmdldChwLkZyb21BcnJheShlLnRhcmdldCkpLGUuY2FtZXJhUmlnTW9kZSl7Y29uc3Qgbj1lLmludGVyYXhpYWxfZGlzdGFuY2U/e2ludGVyYXhpYWxEaXN0YW5jZTplLmludGVyYXhpYWxfZGlzdGFuY2V9Ont9O3Iuc2V0Q2FtZXJhUmlnTW9kZShlLmNhbWVyYVJpZ01vZGUsbil9aWYoZS5hbmltYXRpb25zKXtmb3IobGV0IG49MDtuPGUuYW5pbWF0aW9ucy5sZW5ndGg7bisrKXtjb25zdCBhPWUuYW5pbWF0aW9uc1tuXSxvPXJpKCJCQUJZTE9OLkFuaW1hdGlvbiIpO28mJnIuYW5pbWF0aW9ucy5wdXNoKG8uUGFyc2UoYSkpfXplLlBhcnNlQW5pbWF0aW9uUmFuZ2VzKHIsZSx0KX1yZXR1cm4gZS5hdXRvQW5pbWF0ZSYmdC5iZWdpbkFuaW1hdGlvbihyLGUuYXV0b0FuaW1hdGVGcm9tLGUuYXV0b0FuaW1hdGVUbyxlLmF1dG9BbmltYXRlTG9vcCxlLmF1dG9BbmltYXRlU3BlZWR8fDEpLGUuaXNFbmFibGVkIT09dm9pZCAwJiZyLnNldEVuYWJsZWQoZS5pc0VuYWJsZWQpLHJ9fWouX0NyZWF0ZURlZmF1bHRQYXJzZWRDYW1lcmE9KGMsZSk9Pnt0aHJvdyAkKCJVbml2ZXJzYWxDYW1lcmEiKX0sai5QRVJTUEVDVElWRV9DQU1FUkE9MCxqLk9SVEhPR1JBUEhJQ19DQU1FUkE9MSxqLkZPVk1PREVfVkVSVElDQUxfRklYRUQ9MCxqLkZPVk1PREVfSE9SSVpPTlRBTF9GSVhFRD0xLGouUklHX01PREVfTk9ORT0wLGouUklHX01PREVfU1RFUkVPU0NPUElDX0FOQUdMWVBIPTEwLGouUklHX01PREVfU1RFUkVPU0NPUElDX1NJREVCWVNJREVfUEFSQUxMRUw9MTEsai5SSUdfTU9ERV9TVEVSRU9TQ09QSUNfU0lERUJZU0lERV9DUk9TU0VZRUQ9MTIsai5SSUdfTU9ERV9TVEVSRU9TQ09QSUNfT1ZFUlVOREVSPTEzLGouUklHX01PREVfU1RFUkVPU0NPUElDX0lOVEVSTEFDRUQ9MTQsai5SSUdfTU9ERV9WUj0yMCxqLlJJR19NT0RFX1dFQlZSPTIxLGouUklHX01PREVfQ1VTVE9NPTIyLGouRm9yY2VBdHRhY2hDb250cm9sVG9BbHdheXNQcmV2ZW50RGVmYXVsdD0hMSxUKFtCdCgicG9zaXRpb24iKV0sai5wcm90b3R5cGUsIl9wb3NpdGlvbiIsdm9pZCAwKSxUKFtCdCgidXBWZWN0b3IiKV0sai5wcm90b3R5cGUsIl91cFZlY3RvciIsdm9pZCAwKSxUKFtSKCldLGoucHJvdG90eXBlLCJvcnRob0xlZnQiLG51bGwpLFQoW1IoKV0sai5wcm90b3R5cGUsIm9ydGhvUmlnaHQiLG51bGwpLFQoW1IoKV0sai5wcm90b3R5cGUsIm9ydGhvQm90dG9tIixudWxsKSxUKFtSKCldLGoucHJvdG90eXBlLCJvcnRob1RvcCIsbnVsbCksVChbUigpXSxqLnByb3RvdHlwZSwiZm92Iix2b2lkIDApLFQoW1IoKV0sai5wcm90b3R5cGUsInByb2plY3Rpb25QbGFuZVRpbHQiLHZvaWQgMCksVChbUigpXSxqLnByb3RvdHlwZSwibWluWiIsdm9pZCAwKSxUKFtSKCldLGoucHJvdG90eXBlLCJtYXhaIix2b2lkIDApLFQoW1IoKV0sai5wcm90b3R5cGUsImluZXJ0aWEiLHZvaWQgMCksVChbUigpXSxqLnByb3RvdHlwZSwibW9kZSIsbnVsbCksVChbUigpXSxqLnByb3RvdHlwZSwibGF5ZXJNYXNrIix2b2lkIDApLFQoW1IoKV0sai5wcm90b3R5cGUsImZvdk1vZGUiLHZvaWQgMCksVChbUigpXSxqLnByb3RvdHlwZSwiY2FtZXJhUmlnTW9kZSIsdm9pZCAwKSxUKFtSKCldLGoucHJvdG90eXBlLCJpbnRlcmF4aWFsRGlzdGFuY2UiLHZvaWQgMCksVChbUigpXSxqLnByb3RvdHlwZSwiaXNTdGVyZW9zY29waWNTaWRlQnlTaWRlIix2b2lkIDApO2NsYXNzIGVle2NvbnN0cnVjdG9yKCl7dGhpcy5fYXBwbHlUbz1Mbih0aGlzLl9hcHBseVRvQ29yb3V0aW5lLmJpbmQodGhpcykpfXNldChlLHQpe3N3aXRjaChlLmxlbmd0aHx8Ty5XYXJuKGBTZXR0aW5nIHZlcnRleCBkYXRhIGtpbmQgJyR7dH0nIHdpdGggYW4gZW1wdHkgYXJyYXlgKSx0KXtjYXNlIGcuUG9zaXRpb25LaW5kOnRoaXMucG9zaXRpb25zPWU7YnJlYWs7Y2FzZSBnLk5vcm1hbEtpbmQ6dGhpcy5ub3JtYWxzPWU7YnJlYWs7Y2FzZSBnLlRhbmdlbnRLaW5kOnRoaXMudGFuZ2VudHM9ZTticmVhaztjYXNlIGcuVVZLaW5kOnRoaXMudXZzPWU7YnJlYWs7Y2FzZSBnLlVWMktpbmQ6dGhpcy51dnMyPWU7YnJlYWs7Y2FzZSBnLlVWM0tpbmQ6dGhpcy51dnMzPWU7YnJlYWs7Y2FzZSBnLlVWNEtpbmQ6dGhpcy51dnM0PWU7YnJlYWs7Y2FzZSBnLlVWNUtpbmQ6dGhpcy51dnM1PWU7YnJlYWs7Y2FzZSBnLlVWNktpbmQ6dGhpcy51dnM2PWU7YnJlYWs7Y2FzZSBnLkNvbG9yS2luZDp0aGlzLmNvbG9ycz1lO2JyZWFrO2Nhc2UgZy5NYXRyaWNlc0luZGljZXNLaW5kOnRoaXMubWF0cmljZXNJbmRpY2VzPWU7YnJlYWs7Y2FzZSBnLk1hdHJpY2VzV2VpZ2h0c0tpbmQ6dGhpcy5tYXRyaWNlc1dlaWdodHM9ZTticmVhaztjYXNlIGcuTWF0cmljZXNJbmRpY2VzRXh0cmFLaW5kOnRoaXMubWF0cmljZXNJbmRpY2VzRXh0cmE9ZTticmVhaztjYXNlIGcuTWF0cmljZXNXZWlnaHRzRXh0cmFLaW5kOnRoaXMubWF0cmljZXNXZWlnaHRzRXh0cmE9ZTticmVha319YXBwbHlUb01lc2goZSx0KXtyZXR1cm4gdGhpcy5fYXBwbHlUbyhlLHQsITEpLHRoaXN9YXBwbHlUb0dlb21ldHJ5KGUsdCl7cmV0dXJuIHRoaXMuX2FwcGx5VG8oZSx0LCExKSx0aGlzfXVwZGF0ZU1lc2goZSl7cmV0dXJuIHRoaXMuX3VwZGF0ZShlKSx0aGlzfXVwZGF0ZUdlb21ldHJ5KGUpe3JldHVybiB0aGlzLl91cGRhdGUoZSksdGhpc30qX2FwcGx5VG9Db3JvdXRpbmUoZSx0PSExLGkpe3JldHVybiB0aGlzLnBvc2l0aW9ucyYmKGUuc2V0VmVydGljZXNEYXRhKGcuUG9zaXRpb25LaW5kLHRoaXMucG9zaXRpb25zLHQpLGkmJih5aWVsZCkpLHRoaXMubm9ybWFscyYmKGUuc2V0VmVydGljZXNEYXRhKGcuTm9ybWFsS2luZCx0aGlzLm5vcm1hbHMsdCksaSYmKHlpZWxkKSksdGhpcy50YW5nZW50cyYmKGUuc2V0VmVydGljZXNEYXRhKGcuVGFuZ2VudEtpbmQsdGhpcy50YW5nZW50cyx0KSxpJiYoeWllbGQpKSx0aGlzLnV2cyYmKGUuc2V0VmVydGljZXNEYXRhKGcuVVZLaW5kLHRoaXMudXZzLHQpLGkmJih5aWVsZCkpLHRoaXMudXZzMiYmKGUuc2V0VmVydGljZXNEYXRhKGcuVVYyS2luZCx0aGlzLnV2czIsdCksaSYmKHlpZWxkKSksdGhpcy51dnMzJiYoZS5zZXRWZXJ0aWNlc0RhdGEoZy5VVjNLaW5kLHRoaXMudXZzMyx0KSxpJiYoeWllbGQpKSx0aGlzLnV2czQmJihlLnNldFZlcnRpY2VzRGF0YShnLlVWNEtpbmQsdGhpcy51dnM0LHQpLGkmJih5aWVsZCkpLHRoaXMudXZzNSYmKGUuc2V0VmVydGljZXNEYXRhKGcuVVY1S2luZCx0aGlzLnV2czUsdCksaSYmKHlpZWxkKSksdGhpcy51dnM2JiYoZS5zZXRWZXJ0aWNlc0RhdGEoZy5VVjZLaW5kLHRoaXMudXZzNix0KSxpJiYoeWllbGQpKSx0aGlzLmNvbG9ycyYmKGUuc2V0VmVydGljZXNEYXRhKGcuQ29sb3JLaW5kLHRoaXMuY29sb3JzLHQpLGkmJih5aWVsZCkpLHRoaXMubWF0cmljZXNJbmRpY2VzJiYoZS5zZXRWZXJ0aWNlc0RhdGEoZy5NYXRyaWNlc0luZGljZXNLaW5kLHRoaXMubWF0cmljZXNJbmRpY2VzLHQpLGkmJih5aWVsZCkpLHRoaXMubWF0cmljZXNXZWlnaHRzJiYoZS5zZXRWZXJ0aWNlc0RhdGEoZy5NYXRyaWNlc1dlaWdodHNLaW5kLHRoaXMubWF0cmljZXNXZWlnaHRzLHQpLGkmJih5aWVsZCkpLHRoaXMubWF0cmljZXNJbmRpY2VzRXh0cmEmJihlLnNldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzSW5kaWNlc0V4dHJhS2luZCx0aGlzLm1hdHJpY2VzSW5kaWNlc0V4dHJhLHQpLGkmJih5aWVsZCkpLHRoaXMubWF0cmljZXNXZWlnaHRzRXh0cmEmJihlLnNldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzV2VpZ2h0c0V4dHJhS2luZCx0aGlzLm1hdHJpY2VzV2VpZ2h0c0V4dHJhLHQpLGkmJih5aWVsZCkpLHRoaXMuaW5kaWNlcz8oZS5zZXRJbmRpY2VzKHRoaXMuaW5kaWNlcyxudWxsLHQpLGkmJih5aWVsZCkpOmUuc2V0SW5kaWNlcyhbXSxudWxsKSx0aGlzfV91cGRhdGUoZSx0LGkpe3JldHVybiB0aGlzLnBvc2l0aW9ucyYmZS51cGRhdGVWZXJ0aWNlc0RhdGEoZy5Qb3NpdGlvbktpbmQsdGhpcy5wb3NpdGlvbnMsdCxpKSx0aGlzLm5vcm1hbHMmJmUudXBkYXRlVmVydGljZXNEYXRhKGcuTm9ybWFsS2luZCx0aGlzLm5vcm1hbHMsdCxpKSx0aGlzLnRhbmdlbnRzJiZlLnVwZGF0ZVZlcnRpY2VzRGF0YShnLlRhbmdlbnRLaW5kLHRoaXMudGFuZ2VudHMsdCxpKSx0aGlzLnV2cyYmZS51cGRhdGVWZXJ0aWNlc0RhdGEoZy5VVktpbmQsdGhpcy51dnMsdCxpKSx0aGlzLnV2czImJmUudXBkYXRlVmVydGljZXNEYXRhKGcuVVYyS2luZCx0aGlzLnV2czIsdCxpKSx0aGlzLnV2czMmJmUudXBkYXRlVmVydGljZXNEYXRhKGcuVVYzS2luZCx0aGlzLnV2czMsdCxpKSx0aGlzLnV2czQmJmUudXBkYXRlVmVydGljZXNEYXRhKGcuVVY0S2luZCx0aGlzLnV2czQsdCxpKSx0aGlzLnV2czUmJmUudXBkYXRlVmVydGljZXNEYXRhKGcuVVY1S2luZCx0aGlzLnV2czUsdCxpKSx0aGlzLnV2czYmJmUudXBkYXRlVmVydGljZXNEYXRhKGcuVVY2S2luZCx0aGlzLnV2czYsdCxpKSx0aGlzLmNvbG9ycyYmZS51cGRhdGVWZXJ0aWNlc0RhdGEoZy5Db2xvcktpbmQsdGhpcy5jb2xvcnMsdCxpKSx0aGlzLm1hdHJpY2VzSW5kaWNlcyYmZS51cGRhdGVWZXJ0aWNlc0RhdGEoZy5NYXRyaWNlc0luZGljZXNLaW5kLHRoaXMubWF0cmljZXNJbmRpY2VzLHQsaSksdGhpcy5tYXRyaWNlc1dlaWdodHMmJmUudXBkYXRlVmVydGljZXNEYXRhKGcuTWF0cmljZXNXZWlnaHRzS2luZCx0aGlzLm1hdHJpY2VzV2VpZ2h0cyx0LGkpLHRoaXMubWF0cmljZXNJbmRpY2VzRXh0cmEmJmUudXBkYXRlVmVydGljZXNEYXRhKGcuTWF0cmljZXNJbmRpY2VzRXh0cmFLaW5kLHRoaXMubWF0cmljZXNJbmRpY2VzRXh0cmEsdCxpKSx0aGlzLm1hdHJpY2VzV2VpZ2h0c0V4dHJhJiZlLnVwZGF0ZVZlcnRpY2VzRGF0YShnLk1hdHJpY2VzV2VpZ2h0c0V4dHJhS2luZCx0aGlzLm1hdHJpY2VzV2VpZ2h0c0V4dHJhLHQsaSksdGhpcy5pbmRpY2VzJiZlLnNldEluZGljZXModGhpcy5pbmRpY2VzLG51bGwpLHRoaXN9c3RhdGljIF9UcmFuc2Zvcm1WZWN0b3IzQ29vcmRpbmF0ZXMoZSx0LGk9MCxzPWUubGVuZ3RoKXtjb25zdCByPUQuVmVjdG9yM1swXSxuPUQuVmVjdG9yM1sxXTtmb3IobGV0IGE9aTthPGkrczthKz0zKXAuRnJvbUFycmF5VG9SZWYoZSxhLHIpLHAuVHJhbnNmb3JtQ29vcmRpbmF0ZXNUb1JlZihyLHQsbiksZVthXT1uLngsZVthKzFdPW4ueSxlW2ErMl09bi56fXN0YXRpYyBfVHJhbnNmb3JtVmVjdG9yM05vcm1hbHMoZSx0LGk9MCxzPWUubGVuZ3RoKXtjb25zdCByPUQuVmVjdG9yM1swXSxuPUQuVmVjdG9yM1sxXTtmb3IobGV0IGE9aTthPGkrczthKz0zKXAuRnJvbUFycmF5VG9SZWYoZSxhLHIpLHAuVHJhbnNmb3JtTm9ybWFsVG9SZWYocix0LG4pLGVbYV09bi54LGVbYSsxXT1uLnksZVthKzJdPW4uen1zdGF0aWMgX1RyYW5zZm9ybVZlY3RvcjROb3JtYWxzKGUsdCxpPTAscz1lLmxlbmd0aCl7Y29uc3Qgcj1ELlZlY3RvcjRbMF0sbj1ELlZlY3RvcjRbMV07Zm9yKGxldCBhPWk7YTxpK3M7YSs9NClDZS5Gcm9tQXJyYXlUb1JlZihlLGEsciksQ2UuVHJhbnNmb3JtTm9ybWFsVG9SZWYocix0LG4pLGVbYV09bi54LGVbYSsxXT1uLnksZVthKzJdPW4ueixlW2ErM109bi53fXN0YXRpYyBfRmxpcEZhY2VzKGUsdD0wLGk9ZS5sZW5ndGgpe2ZvcihsZXQgcz10O3M8dCtpO3MrPTMpe2NvbnN0IHI9ZVtzKzFdO2VbcysxXT1lW3MrMl0sZVtzKzJdPXJ9fXRyYW5zZm9ybShlKXtjb25zdCB0PWUuZGV0ZXJtaW5hbnQoKTwwO3JldHVybiB0aGlzLnBvc2l0aW9ucyYmZWUuX1RyYW5zZm9ybVZlY3RvcjNDb29yZGluYXRlcyh0aGlzLnBvc2l0aW9ucyxlKSx0aGlzLm5vcm1hbHMmJmVlLl9UcmFuc2Zvcm1WZWN0b3IzTm9ybWFscyh0aGlzLm5vcm1hbHMsZSksdGhpcy50YW5nZW50cyYmZWUuX1RyYW5zZm9ybVZlY3RvcjROb3JtYWxzKHRoaXMudGFuZ2VudHMsZSksdCYmdGhpcy5pbmRpY2VzJiZlZS5fRmxpcEZhY2VzKHRoaXMuaW5kaWNlcyksdGhpc31tZXJnZShlLHQ9ITEsaT0hMSl7Y29uc3Qgcz1BcnJheS5pc0FycmF5KGUpP2UubWFwKHI9PltyLHZvaWQgMF0pOltbZSx2b2lkIDBdXTtyZXR1cm4gUHModGhpcy5fbWVyZ2VDb3JvdXRpbmUodm9pZCAwLHMsdCwhMSxpKSl9Kl9tZXJnZUNvcm91dGluZShlLHQsaT0hMSxzLHIpe3ZhciBuLGEsbyxoO3RoaXMuX3ZhbGlkYXRlKCk7Y29uc3QgbD10Lm1hcChfPT5fWzBdKTtmb3IoY29uc3QgXyBvZiBsKWlmKF8uX3ZhbGlkYXRlKCksIXRoaXMubm9ybWFscyE9IV8ubm9ybWFsc3x8IXRoaXMudGFuZ2VudHMhPSFfLnRhbmdlbnRzfHwhdGhpcy51dnMhPSFfLnV2c3x8IXRoaXMudXZzMiE9IV8udXZzMnx8IXRoaXMudXZzMyE9IV8udXZzM3x8IXRoaXMudXZzNCE9IV8udXZzNHx8IXRoaXMudXZzNSE9IV8udXZzNXx8IXRoaXMudXZzNiE9IV8udXZzNnx8IXRoaXMuY29sb3JzIT0hXy5jb2xvcnN8fCF0aGlzLm1hdHJpY2VzSW5kaWNlcyE9IV8ubWF0cmljZXNJbmRpY2VzfHwhdGhpcy5tYXRyaWNlc1dlaWdodHMhPSFfLm1hdHJpY2VzV2VpZ2h0c3x8IXRoaXMubWF0cmljZXNJbmRpY2VzRXh0cmEhPSFfLm1hdHJpY2VzSW5kaWNlc0V4dHJhfHwhdGhpcy5tYXRyaWNlc1dlaWdodHNFeHRyYSE9IV8ubWF0cmljZXNXZWlnaHRzRXh0cmEpdGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgbWVyZ2UgdmVydGV4IGRhdGEgdGhhdCBkbyBub3QgaGF2ZSB0aGUgc2FtZSBzZXQgb2YgYXR0cmlidXRlcyIpO2NvbnN0IHU9bC5yZWR1Y2UoKF8sRSk9Pnt2YXIgbSx2O3JldHVybiBfKygodj0obT1FLmluZGljZXMpPT09bnVsbHx8bT09PXZvaWQgMD92b2lkIDA6bS5sZW5ndGgpIT09bnVsbCYmdiE9PXZvaWQgMD92OjApfSwoYT0obj10aGlzLmluZGljZXMpPT09bnVsbHx8bj09PXZvaWQgMD92b2lkIDA6bi5sZW5ndGgpIT09bnVsbCYmYSE9PXZvaWQgMD9hOjApO2xldCBmPXJ8fGwuc29tZShfPT5fLmluZGljZXM9PT10aGlzLmluZGljZXMpPyhvPXRoaXMuaW5kaWNlcyk9PT1udWxsfHxvPT09dm9pZCAwP3ZvaWQgMDpvLnNsaWNlKCk6dGhpcy5pbmRpY2VzO2lmKHU+MCl7bGV0IF89KGg9Zj09bnVsbD92b2lkIDA6Zi5sZW5ndGgpIT09bnVsbCYmaCE9PXZvaWQgMD9oOjA7aWYoZnx8KGY9bmV3IEFycmF5KHUpKSxmLmxlbmd0aCE9PXUpe2lmKEFycmF5LmlzQXJyYXkoZikpZi5sZW5ndGg9dTtlbHNle2NvbnN0IG09aXx8ZiBpbnN0YW5jZW9mIFVpbnQzMkFycmF5P25ldyBVaW50MzJBcnJheSh1KTpuZXcgVWludDE2QXJyYXkodSk7bS5zZXQoZiksZj1tfWUmJmUuZGV0ZXJtaW5hbnQoKTwwJiZlZS5fRmxpcEZhY2VzKGYsMCxfKX1sZXQgRT10aGlzLnBvc2l0aW9ucz90aGlzLnBvc2l0aW9ucy5sZW5ndGgvMzowO2Zvcihjb25zdFttLHZdb2YgdClpZihtLmluZGljZXMpe2ZvcihsZXQgUz0wO1M8bS5pbmRpY2VzLmxlbmd0aDtTKyspZltfK1NdPW0uaW5kaWNlc1tTXStFO3YmJnYuZGV0ZXJtaW5hbnQoKTwwJiZlZS5fRmxpcEZhY2VzKGYsXyxtLmluZGljZXMubGVuZ3RoKSxFKz1tLnBvc2l0aW9ucy5sZW5ndGgvMyxfKz1tLmluZGljZXMubGVuZ3RoLHMmJih5aWVsZCl9fXJldHVybiB0aGlzLmluZGljZXM9Zix0aGlzLnBvc2l0aW9ucz1lZS5fTWVyZ2VFbGVtZW50KGcuUG9zaXRpb25LaW5kLHRoaXMucG9zaXRpb25zLGUsdC5tYXAoXz0+W19bMF0ucG9zaXRpb25zLF9bMV1dKSkscyYmKHlpZWxkKSx0aGlzLm5vcm1hbHM9ZWUuX01lcmdlRWxlbWVudChnLk5vcm1hbEtpbmQsdGhpcy5ub3JtYWxzLGUsdC5tYXAoXz0+W19bMF0ubm9ybWFscyxfWzFdXSkpLHMmJih5aWVsZCksdGhpcy50YW5nZW50cz1lZS5fTWVyZ2VFbGVtZW50KGcuVGFuZ2VudEtpbmQsdGhpcy50YW5nZW50cyxlLHQubWFwKF89PltfWzBdLnRhbmdlbnRzLF9bMV1dKSkscyYmKHlpZWxkKSx0aGlzLnV2cz1lZS5fTWVyZ2VFbGVtZW50KGcuVVZLaW5kLHRoaXMudXZzLGUsdC5tYXAoXz0+W19bMF0udXZzLF9bMV1dKSkscyYmKHlpZWxkKSx0aGlzLnV2czI9ZWUuX01lcmdlRWxlbWVudChnLlVWMktpbmQsdGhpcy51dnMyLGUsdC5tYXAoXz0+W19bMF0udXZzMixfWzFdXSkpLHMmJih5aWVsZCksdGhpcy51dnMzPWVlLl9NZXJnZUVsZW1lbnQoZy5VVjNLaW5kLHRoaXMudXZzMyxlLHQubWFwKF89PltfWzBdLnV2czMsX1sxXV0pKSxzJiYoeWllbGQpLHRoaXMudXZzND1lZS5fTWVyZ2VFbGVtZW50KGcuVVY0S2luZCx0aGlzLnV2czQsZSx0Lm1hcChfPT5bX1swXS51dnM0LF9bMV1dKSkscyYmKHlpZWxkKSx0aGlzLnV2czU9ZWUuX01lcmdlRWxlbWVudChnLlVWNUtpbmQsdGhpcy51dnM1LGUsdC5tYXAoXz0+W19bMF0udXZzNSxfWzFdXSkpLHMmJih5aWVsZCksdGhpcy51dnM2PWVlLl9NZXJnZUVsZW1lbnQoZy5VVjZLaW5kLHRoaXMudXZzNixlLHQubWFwKF89PltfWzBdLnV2czYsX1sxXV0pKSxzJiYoeWllbGQpLHRoaXMuY29sb3JzPWVlLl9NZXJnZUVsZW1lbnQoZy5Db2xvcktpbmQsdGhpcy5jb2xvcnMsZSx0Lm1hcChfPT5bX1swXS5jb2xvcnMsX1sxXV0pKSxzJiYoeWllbGQpLHRoaXMubWF0cmljZXNJbmRpY2VzPWVlLl9NZXJnZUVsZW1lbnQoZy5NYXRyaWNlc0luZGljZXNLaW5kLHRoaXMubWF0cmljZXNJbmRpY2VzLGUsdC5tYXAoXz0+W19bMF0ubWF0cmljZXNJbmRpY2VzLF9bMV1dKSkscyYmKHlpZWxkKSx0aGlzLm1hdHJpY2VzV2VpZ2h0cz1lZS5fTWVyZ2VFbGVtZW50KGcuTWF0cmljZXNXZWlnaHRzS2luZCx0aGlzLm1hdHJpY2VzV2VpZ2h0cyxlLHQubWFwKF89PltfWzBdLm1hdHJpY2VzV2VpZ2h0cyxfWzFdXSkpLHMmJih5aWVsZCksdGhpcy5tYXRyaWNlc0luZGljZXNFeHRyYT1lZS5fTWVyZ2VFbGVtZW50KGcuTWF0cmljZXNJbmRpY2VzRXh0cmFLaW5kLHRoaXMubWF0cmljZXNJbmRpY2VzRXh0cmEsZSx0Lm1hcChfPT5bX1swXS5tYXRyaWNlc0luZGljZXNFeHRyYSxfWzFdXSkpLHMmJih5aWVsZCksdGhpcy5tYXRyaWNlc1dlaWdodHNFeHRyYT1lZS5fTWVyZ2VFbGVtZW50KGcuTWF0cmljZXNXZWlnaHRzRXh0cmFLaW5kLHRoaXMubWF0cmljZXNXZWlnaHRzRXh0cmEsZSx0Lm1hcChfPT5bX1swXS5tYXRyaWNlc1dlaWdodHNFeHRyYSxfWzFdXSkpLHRoaXN9c3RhdGljIF9NZXJnZUVsZW1lbnQoZSx0LGkscyl7Y29uc3Qgcj1zLmZpbHRlcihvPT5vWzBdIT09bnVsbCYmb1swXSE9PXZvaWQgMCk7aWYoIXQmJnIubGVuZ3RoPT0wKXJldHVybiB0O2lmKCF0KXJldHVybiB0aGlzLl9NZXJnZUVsZW1lbnQoZSxyWzBdWzBdLHJbMF1bMV0sci5zbGljZSgxKSk7Y29uc3Qgbj1yLnJlZHVjZSgobyxoKT0+bytoWzBdLmxlbmd0aCx0Lmxlbmd0aCksYT1lPT09Zy5Qb3NpdGlvbktpbmQ/ZWUuX1RyYW5zZm9ybVZlY3RvcjNDb29yZGluYXRlczplPT09Zy5Ob3JtYWxLaW5kP2VlLl9UcmFuc2Zvcm1WZWN0b3IzTm9ybWFsczplPT09Zy5UYW5nZW50S2luZD9lZS5fVHJhbnNmb3JtVmVjdG9yNE5vcm1hbHM6KCk9Pnt9O2lmKHQgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXkpe2NvbnN0IG89bmV3IEZsb2F0MzJBcnJheShuKTtvLnNldCh0KSxpJiZhKG8saSwwLHQubGVuZ3RoKTtsZXQgaD10Lmxlbmd0aDtmb3IoY29uc3RbbCx1XW9mIHIpby5zZXQobCxoKSx1JiZhKG8sdSxoLGwubGVuZ3RoKSxoKz1sLmxlbmd0aDtyZXR1cm4gb31lbHNle2NvbnN0IG89bmV3IEFycmF5KG4pO2ZvcihsZXQgbD0wO2w8dC5sZW5ndGg7bCsrKW9bbF09dFtsXTtpJiZhKG8saSwwLHQubGVuZ3RoKTtsZXQgaD10Lmxlbmd0aDtmb3IoY29uc3RbbCx1XW9mIHIpe2ZvcihsZXQgZD0wO2Q8bC5sZW5ndGg7ZCsrKW9baCtkXT1sW2RdO3UmJmEobyx1LGgsbC5sZW5ndGgpLGgrPWwubGVuZ3RofXJldHVybiBvfX1fdmFsaWRhdGUoKXtpZighdGhpcy5wb3NpdGlvbnMpdGhyb3cgbmV3IE50KCJQb3NpdGlvbnMgYXJlIHJlcXVpcmVkIixvaS5NZXNoSW52YWxpZFBvc2l0aW9uc0Vycm9yKTtjb25zdCBlPShzLHIpPT57Y29uc3Qgbj1nLkRlZHVjZVN0cmlkZShzKTtpZihyLmxlbmd0aCVuIT09MCl0aHJvdyBuZXcgRXJyb3IoIlRoZSAiK3MrInMgYXJyYXkgY291bnQgbXVzdCBiZSBhIG11bHRpcGxlIG9mICIrbik7cmV0dXJuIHIubGVuZ3RoL259LHQ9ZShnLlBvc2l0aW9uS2luZCx0aGlzLnBvc2l0aW9ucyksaT0ocyxyKT0+e2NvbnN0IG49ZShzLHIpO2lmKG4hPT10KXRocm93IG5ldyBFcnJvcigiVGhlICIrcysicyBlbGVtZW50IGNvdW50ICgiK24rIikgZG9lcyBub3QgbWF0Y2ggdGhlIHBvc2l0aW9ucyBjb3VudCAoIit0KyIpIil9O3RoaXMubm9ybWFscyYmaShnLk5vcm1hbEtpbmQsdGhpcy5ub3JtYWxzKSx0aGlzLnRhbmdlbnRzJiZpKGcuVGFuZ2VudEtpbmQsdGhpcy50YW5nZW50cyksdGhpcy51dnMmJmkoZy5VVktpbmQsdGhpcy51dnMpLHRoaXMudXZzMiYmaShnLlVWMktpbmQsdGhpcy51dnMyKSx0aGlzLnV2czMmJmkoZy5VVjNLaW5kLHRoaXMudXZzMyksdGhpcy51dnM0JiZpKGcuVVY0S2luZCx0aGlzLnV2czQpLHRoaXMudXZzNSYmaShnLlVWNUtpbmQsdGhpcy51dnM1KSx0aGlzLnV2czYmJmkoZy5VVjZLaW5kLHRoaXMudXZzNiksdGhpcy5jb2xvcnMmJmkoZy5Db2xvcktpbmQsdGhpcy5jb2xvcnMpLHRoaXMubWF0cmljZXNJbmRpY2VzJiZpKGcuTWF0cmljZXNJbmRpY2VzS2luZCx0aGlzLm1hdHJpY2VzSW5kaWNlcyksdGhpcy5tYXRyaWNlc1dlaWdodHMmJmkoZy5NYXRyaWNlc1dlaWdodHNLaW5kLHRoaXMubWF0cmljZXNXZWlnaHRzKSx0aGlzLm1hdHJpY2VzSW5kaWNlc0V4dHJhJiZpKGcuTWF0cmljZXNJbmRpY2VzRXh0cmFLaW5kLHRoaXMubWF0cmljZXNJbmRpY2VzRXh0cmEpLHRoaXMubWF0cmljZXNXZWlnaHRzRXh0cmEmJmkoZy5NYXRyaWNlc1dlaWdodHNFeHRyYUtpbmQsdGhpcy5tYXRyaWNlc1dlaWdodHNFeHRyYSl9c2VyaWFsaXplKCl7Y29uc3QgZT17fTtyZXR1cm4gdGhpcy5wb3NpdGlvbnMmJihlLnBvc2l0aW9ucz10aGlzLnBvc2l0aW9ucyksdGhpcy5ub3JtYWxzJiYoZS5ub3JtYWxzPXRoaXMubm9ybWFscyksdGhpcy50YW5nZW50cyYmKGUudGFuZ2VudHM9dGhpcy50YW5nZW50cyksdGhpcy51dnMmJihlLnV2cz10aGlzLnV2cyksdGhpcy51dnMyJiYoZS51dnMyPXRoaXMudXZzMiksdGhpcy51dnMzJiYoZS51dnMzPXRoaXMudXZzMyksdGhpcy51dnM0JiYoZS51dnM0PXRoaXMudXZzNCksdGhpcy51dnM1JiYoZS51dnM1PXRoaXMudXZzNSksdGhpcy51dnM2JiYoZS51dnM2PXRoaXMudXZzNiksdGhpcy5jb2xvcnMmJihlLmNvbG9ycz10aGlzLmNvbG9ycyksdGhpcy5tYXRyaWNlc0luZGljZXMmJihlLm1hdHJpY2VzSW5kaWNlcz10aGlzLm1hdHJpY2VzSW5kaWNlcyxlLm1hdHJpY2VzSW5kaWNlcy5faXNFeHBhbmRlZD0hMCksdGhpcy5tYXRyaWNlc1dlaWdodHMmJihlLm1hdHJpY2VzV2VpZ2h0cz10aGlzLm1hdHJpY2VzV2VpZ2h0cyksdGhpcy5tYXRyaWNlc0luZGljZXNFeHRyYSYmKGUubWF0cmljZXNJbmRpY2VzRXh0cmE9dGhpcy5tYXRyaWNlc0luZGljZXNFeHRyYSxlLm1hdHJpY2VzSW5kaWNlc0V4dHJhLl9pc0V4cGFuZGVkPSEwKSx0aGlzLm1hdHJpY2VzV2VpZ2h0c0V4dHJhJiYoZS5tYXRyaWNlc1dlaWdodHNFeHRyYT10aGlzLm1hdHJpY2VzV2VpZ2h0c0V4dHJhKSxlLmluZGljZXM9dGhpcy5pbmRpY2VzLGV9c3RhdGljIEV4dHJhY3RGcm9tTWVzaChlLHQsaSl7cmV0dXJuIGVlLl9FeHRyYWN0RnJvbShlLHQsaSl9c3RhdGljIEV4dHJhY3RGcm9tR2VvbWV0cnkoZSx0LGkpe3JldHVybiBlZS5fRXh0cmFjdEZyb20oZSx0LGkpfXN0YXRpYyBfRXh0cmFjdEZyb20oZSx0LGkpe2NvbnN0IHM9bmV3IGVlO3JldHVybiBlLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlBvc2l0aW9uS2luZCkmJihzLnBvc2l0aW9ucz1lLmdldFZlcnRpY2VzRGF0YShnLlBvc2l0aW9uS2luZCx0LGkpKSxlLmlzVmVydGljZXNEYXRhUHJlc2VudChnLk5vcm1hbEtpbmQpJiYocy5ub3JtYWxzPWUuZ2V0VmVydGljZXNEYXRhKGcuTm9ybWFsS2luZCx0LGkpKSxlLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlRhbmdlbnRLaW5kKSYmKHMudGFuZ2VudHM9ZS5nZXRWZXJ0aWNlc0RhdGEoZy5UYW5nZW50S2luZCx0LGkpKSxlLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlVWS2luZCkmJihzLnV2cz1lLmdldFZlcnRpY2VzRGF0YShnLlVWS2luZCx0LGkpKSxlLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlVWMktpbmQpJiYocy51dnMyPWUuZ2V0VmVydGljZXNEYXRhKGcuVVYyS2luZCx0LGkpKSxlLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlVWM0tpbmQpJiYocy51dnMzPWUuZ2V0VmVydGljZXNEYXRhKGcuVVYzS2luZCx0LGkpKSxlLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlVWNEtpbmQpJiYocy51dnM0PWUuZ2V0VmVydGljZXNEYXRhKGcuVVY0S2luZCx0LGkpKSxlLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlVWNUtpbmQpJiYocy51dnM1PWUuZ2V0VmVydGljZXNEYXRhKGcuVVY1S2luZCx0LGkpKSxlLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlVWNktpbmQpJiYocy51dnM2PWUuZ2V0VmVydGljZXNEYXRhKGcuVVY2S2luZCx0LGkpKSxlLmlzVmVydGljZXNEYXRhUHJlc2VudChnLkNvbG9yS2luZCkmJihzLmNvbG9ycz1lLmdldFZlcnRpY2VzRGF0YShnLkNvbG9yS2luZCx0LGkpKSxlLmlzVmVydGljZXNEYXRhUHJlc2VudChnLk1hdHJpY2VzSW5kaWNlc0tpbmQpJiYocy5tYXRyaWNlc0luZGljZXM9ZS5nZXRWZXJ0aWNlc0RhdGEoZy5NYXRyaWNlc0luZGljZXNLaW5kLHQsaSkpLGUuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuTWF0cmljZXNXZWlnaHRzS2luZCkmJihzLm1hdHJpY2VzV2VpZ2h0cz1lLmdldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzV2VpZ2h0c0tpbmQsdCxpKSksZS5pc1ZlcnRpY2VzRGF0YVByZXNlbnQoZy5NYXRyaWNlc0luZGljZXNFeHRyYUtpbmQpJiYocy5tYXRyaWNlc0luZGljZXNFeHRyYT1lLmdldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzSW5kaWNlc0V4dHJhS2luZCx0LGkpKSxlLmlzVmVydGljZXNEYXRhUHJlc2VudChnLk1hdHJpY2VzV2VpZ2h0c0V4dHJhS2luZCkmJihzLm1hdHJpY2VzV2VpZ2h0c0V4dHJhPWUuZ2V0VmVydGljZXNEYXRhKGcuTWF0cmljZXNXZWlnaHRzRXh0cmFLaW5kLHQsaSkpLHMuaW5kaWNlcz1lLmdldEluZGljZXModCxpKSxzfXN0YXRpYyBDcmVhdGVSaWJib24oZSl7dGhyb3cgJCgicmliYm9uQnVpbGRlciIpfXN0YXRpYyBDcmVhdGVCb3goZSl7dGhyb3cgJCgiYm94QnVpbGRlciIpfXN0YXRpYyBDcmVhdGVUaWxlZEJveChlKXt0aHJvdyAkKCJ0aWxlZEJveEJ1aWxkZXIiKX1zdGF0aWMgQ3JlYXRlVGlsZWRQbGFuZShlKXt0aHJvdyAkKCJ0aWxlZFBsYW5lQnVpbGRlciIpfXN0YXRpYyBDcmVhdGVTcGhlcmUoZSl7dGhyb3cgJCgic3BoZXJlQnVpbGRlciIpfXN0YXRpYyBDcmVhdGVDeWxpbmRlcihlKXt0aHJvdyAkKCJjeWxpbmRlckJ1aWxkZXIiKX1zdGF0aWMgQ3JlYXRlVG9ydXMoZSl7dGhyb3cgJCgidG9ydXNCdWlsZGVyIil9c3RhdGljIENyZWF0ZUxpbmVTeXN0ZW0oZSl7dGhyb3cgJCgibGluZXNCdWlsZGVyIil9c3RhdGljIENyZWF0ZURhc2hlZExpbmVzKGUpe3Rocm93ICQoImxpbmVzQnVpbGRlciIpfXN0YXRpYyBDcmVhdGVHcm91bmQoZSl7dGhyb3cgJCgiZ3JvdW5kQnVpbGRlciIpfXN0YXRpYyBDcmVhdGVUaWxlZEdyb3VuZChlKXt0aHJvdyAkKCJncm91bmRCdWlsZGVyIil9c3RhdGljIENyZWF0ZUdyb3VuZEZyb21IZWlnaHRNYXAoZSl7dGhyb3cgJCgiZ3JvdW5kQnVpbGRlciIpfXN0YXRpYyBDcmVhdGVQbGFuZShlKXt0aHJvdyAkKCJwbGFuZUJ1aWxkZXIiKX1zdGF0aWMgQ3JlYXRlRGlzYyhlKXt0aHJvdyAkKCJkaXNjQnVpbGRlciIpfXN0YXRpYyBDcmVhdGVQb2x5Z29uKGUsdCxpLHMscixuLGEpe3Rocm93ICQoInBvbHlnb25CdWlsZGVyIil9c3RhdGljIENyZWF0ZUljb1NwaGVyZShlKXt0aHJvdyAkKCJpY29TcGhlcmVCdWlsZGVyIil9c3RhdGljIENyZWF0ZVBvbHloZWRyb24oZSl7dGhyb3cgJCgicG9seWhlZHJvbkJ1aWxkZXIiKX1zdGF0aWMgQ3JlYXRlQ2Fwc3VsZShlPXtvcmllbnRhdGlvbjpwLlVwKCksc3ViZGl2aXNpb25zOjIsdGVzc2VsbGF0aW9uOjE2LGhlaWdodDoxLHJhZGl1czouMjUsY2FwU3ViZGl2aXNpb25zOjZ9KXt0aHJvdyAkKCJjYXBzdWxlQnVpbGRlciIpfXN0YXRpYyBDcmVhdGVUb3J1c0tub3QoZSl7dGhyb3cgJCgidG9ydXNLbm90QnVpbGRlciIpfXN0YXRpYyBDb21wdXRlTm9ybWFscyhlLHQsaSxzKXtsZXQgcj0wLG49MCxhPTAsbz0wLGg9MCxsPTAsdT0wLGQ9MCxmPTAsXz0wLEU9MCxtPTAsdj0wLFM9MCx5PTAsQT0wLEM9MCxiPTAsTT0wLEw9MCxrPSExLHc9ITEsZGU9ITEsY2U9ITEsc2U9MSx0ZT0wLEZlPW51bGw7cyYmKGs9ISFzLmZhY2V0Tm9ybWFscyx3PSEhcy5mYWNldFBvc2l0aW9ucyxkZT0hIXMuZmFjZXRQYXJ0aXRpb25pbmcsc2U9cy51c2VSaWdodEhhbmRlZFN5c3RlbT09PSEwPy0xOjEsdGU9cy5yYXRpb3x8MCxjZT0hIXMuZGVwdGhTb3J0LEZlPXMuZGlzdGFuY2VUbyxjZSYmRmU9PT12b2lkIDAmJihGZT1wLlplcm8oKSkpO2xldCB3ZT0wLEhlPTAsS2U9MCxZZT0wO2ZvcihkZSYmcyYmcy5iYlNpemUmJih3ZT1zLnN1YkRpdi5YKnRlL3MuYmJTaXplLngsSGU9cy5zdWJEaXYuWSp0ZS9zLmJiU2l6ZS55LEtlPXMuc3ViRGl2LloqdGUvcy5iYlNpemUueixZZT1zLnN1YkRpdi5tYXgqcy5zdWJEaXYubWF4LHMuZmFjZXRQYXJ0aXRpb25pbmcubGVuZ3RoPTApLHI9MDtyPGUubGVuZ3RoO3IrKylpW3JdPTA7Y29uc3QgcHQ9dC5sZW5ndGgvM3wwO2ZvcihyPTA7cjxwdDtyKyspe2lmKG09dFtyKjNdKjMsdj1tKzEsUz1tKzIseT10W3IqMysxXSozLEE9eSsxLEM9eSsyLGI9dFtyKjMrMl0qMyxNPWIrMSxMPWIrMixuPWVbbV0tZVt5XSxhPWVbdl0tZVtBXSxvPWVbU10tZVtDXSxoPWVbYl0tZVt5XSxsPWVbTV0tZVtBXSx1PWVbTF0tZVtDXSxkPXNlKihhKnUtbypsKSxmPXNlKihvKmgtbip1KSxfPXNlKihuKmwtYSpoKSxFPU1hdGguc3FydChkKmQrZipmK18qXyksRT1FPT09MD8xOkUsZC89RSxmLz1FLF8vPUUsayYmcyYmKHMuZmFjZXROb3JtYWxzW3JdLng9ZCxzLmZhY2V0Tm9ybWFsc1tyXS55PWYscy5mYWNldE5vcm1hbHNbcl0uej1fKSx3JiZzJiYocy5mYWNldFBvc2l0aW9uc1tyXS54PShlW21dK2VbeV0rZVtiXSkvMyxzLmZhY2V0UG9zaXRpb25zW3JdLnk9KGVbdl0rZVtBXStlW01dKS8zLHMuZmFjZXRQb3NpdGlvbnNbcl0uej0oZVtTXStlW0NdK2VbTF0pLzMpLGRlJiZzKXtjb25zdCBodD1NYXRoLmZsb29yKChzLmZhY2V0UG9zaXRpb25zW3JdLngtcy5iSW5mby5taW5pbXVtLngqdGUpKndlKSx3dD1NYXRoLmZsb29yKChzLmZhY2V0UG9zaXRpb25zW3JdLnktcy5iSW5mby5taW5pbXVtLnkqdGUpKkhlKSxzaT1NYXRoLmZsb29yKChzLmZhY2V0UG9zaXRpb25zW3JdLnotcy5iSW5mby5taW5pbXVtLnoqdGUpKktlKSxkcz1NYXRoLmZsb29yKChlW21dLXMuYkluZm8ubWluaW11bS54KnRlKSp3ZSksZnM9TWF0aC5mbG9vcigoZVt2XS1zLmJJbmZvLm1pbmltdW0ueSp0ZSkqSGUpLF9zPU1hdGguZmxvb3IoKGVbU10tcy5iSW5mby5taW5pbXVtLnoqdGUpKktlKSxYcz1NYXRoLmZsb29yKChlW3ldLXMuYkluZm8ubWluaW11bS54KnRlKSp3ZSksSHM9TWF0aC5mbG9vcigoZVtBXS1zLmJJbmZvLm1pbmltdW0ueSp0ZSkqSGUpLEtzPU1hdGguZmxvb3IoKGVbQ10tcy5iSW5mby5taW5pbXVtLnoqdGUpKktlKSxZcz1NYXRoLmZsb29yKChlW2JdLXMuYkluZm8ubWluaW11bS54KnRlKSp3ZSksWnM9TWF0aC5mbG9vcigoZVtNXS1zLmJJbmZvLm1pbmltdW0ueSp0ZSkqSGUpLHFzPU1hdGguZmxvb3IoKGVbTF0tcy5iSW5mby5taW5pbXVtLnoqdGUpKktlKSxIdD1kcytzLnN1YkRpdi5tYXgqZnMrWWUqX3MsS3Q9WHMrcy5zdWJEaXYubWF4KkhzK1llKktzLFl0PVlzK3Muc3ViRGl2Lm1heCpacytZZSpxcyxadD1odCtzLnN1YkRpdi5tYXgqd3QrWWUqc2k7cy5mYWNldFBhcnRpdGlvbmluZ1tadF09cy5mYWNldFBhcnRpdGlvbmluZ1tadF0/cy5mYWNldFBhcnRpdGlvbmluZ1tadF06bmV3IEFycmF5LHMuZmFjZXRQYXJ0aXRpb25pbmdbSHRdPXMuZmFjZXRQYXJ0aXRpb25pbmdbSHRdP3MuZmFjZXRQYXJ0aXRpb25pbmdbSHRdOm5ldyBBcnJheSxzLmZhY2V0UGFydGl0aW9uaW5nW0t0XT1zLmZhY2V0UGFydGl0aW9uaW5nW0t0XT9zLmZhY2V0UGFydGl0aW9uaW5nW0t0XTpuZXcgQXJyYXkscy5mYWNldFBhcnRpdGlvbmluZ1tZdF09cy5mYWNldFBhcnRpdGlvbmluZ1tZdF0/cy5mYWNldFBhcnRpdGlvbmluZ1tZdF06bmV3IEFycmF5LHMuZmFjZXRQYXJ0aXRpb25pbmdbSHRdLnB1c2gociksS3QhPUh0JiZzLmZhY2V0UGFydGl0aW9uaW5nW0t0XS5wdXNoKHIpLFl0PT1LdHx8WXQ9PUh0fHxzLmZhY2V0UGFydGl0aW9uaW5nW1l0XS5wdXNoKHIpLFp0PT1IdHx8WnQ9PUt0fHxadD09WXR8fHMuZmFjZXRQYXJ0aXRpb25pbmdbWnRdLnB1c2gocil9aWYoY2UmJnMmJnMuZmFjZXRQb3NpdGlvbnMpe2NvbnN0IGh0PXMuZGVwdGhTb3J0ZWRGYWNldHNbcl07aHQuaW5kPXIqMyxodC5zcURpc3RhbmNlPXAuRGlzdGFuY2VTcXVhcmVkKHMuZmFjZXRQb3NpdGlvbnNbcl0sRmUpfWlbbV0rPWQsaVt2XSs9ZixpW1NdKz1fLGlbeV0rPWQsaVtBXSs9ZixpW0NdKz1fLGlbYl0rPWQsaVtNXSs9ZixpW0xdKz1ffWZvcihyPTA7cjxpLmxlbmd0aC8zO3IrKylkPWlbciozXSxmPWlbciozKzFdLF89aVtyKjMrMl0sRT1NYXRoLnNxcnQoZCpkK2YqZitfKl8pLEU9RT09PTA/MTpFLGQvPUUsZi89RSxfLz1FLGlbciozXT1kLGlbciozKzFdPWYsaVtyKjMrMl09X31zdGF0aWMgX0NvbXB1dGVTaWRlcyhlLHQsaSxzLHIsbixhKXtjb25zdCBvPWkubGVuZ3RoLGg9cy5sZW5ndGg7bGV0IGwsdTtzd2l0Y2goZT1lfHxlZS5ERUZBVUxUU0lERSxlKXtjYXNlIGVlLkZST05UU0lERTpicmVhaztjYXNlIGVlLkJBQ0tTSURFOmZvcihsPTA7bDxvO2wrPTMpe2NvbnN0IGQ9aVtsXTtpW2xdPWlbbCsyXSxpW2wrMl09ZH1mb3IodT0wO3U8aDt1Kyspc1t1XT0tc1t1XTticmVhaztjYXNlIGVlLkRPVUJMRVNJREU6e2NvbnN0IGQ9dC5sZW5ndGgsZj1kLzM7Zm9yKGxldCBtPTA7bTxkO20rKyl0W2QrbV09dFttXTtmb3IobD0wO2w8bztsKz0zKWlbbCtvXT1pW2wrMl0rZixpW2wrMStvXT1pW2wrMV0rZixpW2wrMitvXT1pW2xdK2Y7Zm9yKHU9MDt1PGg7dSsrKXNbaCt1XT0tc1t1XTtjb25zdCBfPXIubGVuZ3RoO2xldCBFPTA7Zm9yKEU9MDtFPF87RSsrKXJbRStfXT1yW0VdO2ZvcihuPW58fG5ldyBDZSgwLDAsMSwxKSxhPWF8fG5ldyBDZSgwLDAsMSwxKSxFPTAsbD0wO2w8Xy8yO2wrKylyW0VdPW4ueCsobi56LW4ueCkqcltFXSxyW0UrMV09bi55KyhuLnctbi55KSpyW0UrMV0scltFK19dPWEueCsoYS56LWEueCkqcltFK19dLHJbRStfKzFdPWEueSsoYS53LWEueSkqcltFK18rMV0sRSs9MjticmVha319fXN0YXRpYyBJbXBvcnRWZXJ0ZXhEYXRhKGUsdCl7Y29uc3QgaT1uZXcgZWUscz1lLnBvc2l0aW9ucztzJiZpLnNldChzLGcuUG9zaXRpb25LaW5kKTtjb25zdCByPWUubm9ybWFscztyJiZpLnNldChyLGcuTm9ybWFsS2luZCk7Y29uc3Qgbj1lLnRhbmdlbnRzO24mJmkuc2V0KG4sZy5UYW5nZW50S2luZCk7Y29uc3QgYT1lLnV2czthJiZpLnNldChhLGcuVVZLaW5kKTtjb25zdCBvPWUudXYycztvJiZpLnNldChvLGcuVVYyS2luZCk7Y29uc3QgaD1lLnV2M3M7aCYmaS5zZXQoaCxnLlVWM0tpbmQpO2NvbnN0IGw9ZS51djRzO2wmJmkuc2V0KGwsZy5VVjRLaW5kKTtjb25zdCB1PWUudXY1czt1JiZpLnNldCh1LGcuVVY1S2luZCk7Y29uc3QgZD1lLnV2NnM7ZCYmaS5zZXQoZCxnLlVWNktpbmQpO2NvbnN0IGY9ZS5jb2xvcnM7ZiYmaS5zZXQobWUuQ2hlY2tDb2xvcnM0KGYscy5sZW5ndGgvMyksZy5Db2xvcktpbmQpO2NvbnN0IF89ZS5tYXRyaWNlc0luZGljZXM7XyYmaS5zZXQoXyxnLk1hdHJpY2VzSW5kaWNlc0tpbmQpO2NvbnN0IEU9ZS5tYXRyaWNlc1dlaWdodHM7RSYmaS5zZXQoRSxnLk1hdHJpY2VzV2VpZ2h0c0tpbmQpO2NvbnN0IG09ZS5pbmRpY2VzO20mJihpLmluZGljZXM9bSksdC5zZXRBbGxWZXJ0aWNlc0RhdGEoaSxlLnVwZGF0YWJsZSl9fWVlLkZST05UU0lERT0wLGVlLkJBQ0tTSURFPTEsZWUuRE9VQkxFU0lERT0yLGVlLkRFRkFVTFRTSURFPTAsVChbJHQuZmlsdGVyKCguLi5bY10pPT4hQXJyYXkuaXNBcnJheShjKSldLGVlLCJfVHJhbnNmb3JtVmVjdG9yM0Nvb3JkaW5hdGVzIixudWxsKSxUKFskdC5maWx0ZXIoKC4uLltjXSk9PiFBcnJheS5pc0FycmF5KGMpKV0sZWUsIl9UcmFuc2Zvcm1WZWN0b3IzTm9ybWFscyIsbnVsbCksVChbJHQuZmlsdGVyKCguLi5bY10pPT4hQXJyYXkuaXNBcnJheShjKSldLGVlLCJfVHJhbnNmb3JtVmVjdG9yNE5vcm1hbHMiLG51bGwpLFQoWyR0LmZpbHRlcigoLi4uW2NdKT0+IUFycmF5LmlzQXJyYXkoYykpXSxlZSwiX0ZsaXBGYWNlcyIsbnVsbCk7Y2xhc3MgRHN7Y29uc3RydWN0b3IoZSx0LGkpe3RoaXMuYnU9ZSx0aGlzLmJ2PXQsdGhpcy5kaXN0YW5jZT1pLHRoaXMuZmFjZUlkPTAsdGhpcy5zdWJNZXNoSWQ9MH19Y2xhc3Mga3R7Y29uc3RydWN0b3IoZSx0LGkpe3RoaXMudmVjdG9ycz1CZS5CdWlsZEFycmF5KDgscC5aZXJvKSx0aGlzLmNlbnRlcj1wLlplcm8oKSx0aGlzLmNlbnRlcldvcmxkPXAuWmVybygpLHRoaXMuZXh0ZW5kU2l6ZT1wLlplcm8oKSx0aGlzLmV4dGVuZFNpemVXb3JsZD1wLlplcm8oKSx0aGlzLmRpcmVjdGlvbnM9QmUuQnVpbGRBcnJheSgzLHAuWmVybyksdGhpcy52ZWN0b3JzV29ybGQ9QmUuQnVpbGRBcnJheSg4LHAuWmVybyksdGhpcy5taW5pbXVtV29ybGQ9cC5aZXJvKCksdGhpcy5tYXhpbXVtV29ybGQ9cC5aZXJvKCksdGhpcy5taW5pbXVtPXAuWmVybygpLHRoaXMubWF4aW11bT1wLlplcm8oKSx0aGlzLl9kcmF3V3JhcHBlckZyb250PW51bGwsdGhpcy5fZHJhd1dyYXBwZXJCYWNrPW51bGwsdGhpcy5yZUNvbnN0cnVjdChlLHQsaSl9cmVDb25zdHJ1Y3QoZSx0LGkpe2NvbnN0IHM9ZS54LHI9ZS55LG49ZS56LGE9dC54LG89dC55LGg9dC56LGw9dGhpcy52ZWN0b3JzO3RoaXMubWluaW11bS5jb3B5RnJvbUZsb2F0cyhzLHIsbiksdGhpcy5tYXhpbXVtLmNvcHlGcm9tRmxvYXRzKGEsbyxoKSxsWzBdLmNvcHlGcm9tRmxvYXRzKHMscixuKSxsWzFdLmNvcHlGcm9tRmxvYXRzKGEsbyxoKSxsWzJdLmNvcHlGcm9tRmxvYXRzKGEscixuKSxsWzNdLmNvcHlGcm9tRmxvYXRzKHMsbyxuKSxsWzRdLmNvcHlGcm9tRmxvYXRzKHMscixoKSxsWzVdLmNvcHlGcm9tRmxvYXRzKGEsbyxuKSxsWzZdLmNvcHlGcm9tRmxvYXRzKHMsbyxoKSxsWzddLmNvcHlGcm9tRmxvYXRzKGEscixoKSx0LmFkZFRvUmVmKGUsdGhpcy5jZW50ZXIpLnNjYWxlSW5QbGFjZSguNSksdC5zdWJ0cmFjdFRvUmVmKGUsdGhpcy5leHRlbmRTaXplKS5zY2FsZUluUGxhY2UoLjUpLHRoaXMuX3dvcmxkTWF0cml4PWl8fHguSWRlbnRpdHlSZWFkT25seSx0aGlzLl91cGRhdGUodGhpcy5fd29ybGRNYXRyaXgpfXNjYWxlKGUpe2NvbnN0IHQ9a3QuX1RtcFZlY3RvcjMsaT10aGlzLm1heGltdW0uc3VidHJhY3RUb1JlZih0aGlzLm1pbmltdW0sdFswXSkscz1pLmxlbmd0aCgpO2kubm9ybWFsaXplRnJvbUxlbmd0aChzKTtjb25zdCByPXMqZSxuPWkuc2NhbGVJblBsYWNlKHIqLjUpLGE9dGhpcy5jZW50ZXIuc3VidHJhY3RUb1JlZihuLHRbMV0pLG89dGhpcy5jZW50ZXIuYWRkVG9SZWYobix0WzJdKTtyZXR1cm4gdGhpcy5yZUNvbnN0cnVjdChhLG8sdGhpcy5fd29ybGRNYXRyaXgpLHRoaXN9Z2V0V29ybGRNYXRyaXgoKXtyZXR1cm4gdGhpcy5fd29ybGRNYXRyaXh9X3VwZGF0ZShlKXtjb25zdCB0PXRoaXMubWluaW11bVdvcmxkLGk9dGhpcy5tYXhpbXVtV29ybGQscz10aGlzLmRpcmVjdGlvbnMscj10aGlzLnZlY3RvcnNXb3JsZCxuPXRoaXMudmVjdG9ycztpZihlLmlzSWRlbnRpdHkoKSl7dC5jb3B5RnJvbSh0aGlzLm1pbmltdW0pLGkuY29weUZyb20odGhpcy5tYXhpbXVtKTtmb3IobGV0IGE9MDthPDg7KythKXJbYV0uY29weUZyb20oblthXSk7dGhpcy5leHRlbmRTaXplV29ybGQuY29weUZyb20odGhpcy5leHRlbmRTaXplKSx0aGlzLmNlbnRlcldvcmxkLmNvcHlGcm9tKHRoaXMuY2VudGVyKX1lbHNle3Quc2V0QWxsKE51bWJlci5NQVhfVkFMVUUpLGkuc2V0QWxsKC1OdW1iZXIuTUFYX1ZBTFVFKTtmb3IobGV0IGE9MDthPDg7KythKXtjb25zdCBvPXJbYV07cC5UcmFuc2Zvcm1Db29yZGluYXRlc1RvUmVmKG5bYV0sZSxvKSx0Lm1pbmltaXplSW5QbGFjZShvKSxpLm1heGltaXplSW5QbGFjZShvKX1pLnN1YnRyYWN0VG9SZWYodCx0aGlzLmV4dGVuZFNpemVXb3JsZCkuc2NhbGVJblBsYWNlKC41KSxpLmFkZFRvUmVmKHQsdGhpcy5jZW50ZXJXb3JsZCkuc2NhbGVJblBsYWNlKC41KX1wLkZyb21BcnJheVRvUmVmKGUubSwwLHNbMF0pLHAuRnJvbUFycmF5VG9SZWYoZS5tLDQsc1sxXSkscC5Gcm9tQXJyYXlUb1JlZihlLm0sOCxzWzJdKSx0aGlzLl93b3JsZE1hdHJpeD1lfWlzSW5GcnVzdHVtKGUpe3JldHVybiBrdC5Jc0luRnJ1c3R1bSh0aGlzLnZlY3RvcnNXb3JsZCxlKX1pc0NvbXBsZXRlbHlJbkZydXN0dW0oZSl7cmV0dXJuIGt0LklzQ29tcGxldGVseUluRnJ1c3R1bSh0aGlzLnZlY3RvcnNXb3JsZCxlKX1pbnRlcnNlY3RzUG9pbnQoZSl7Y29uc3QgdD10aGlzLm1pbmltdW1Xb3JsZCxpPXRoaXMubWF4aW11bVdvcmxkLHM9dC54LHI9dC55LG49dC56LGE9aS54LG89aS55LGg9aS56LGw9ZS54LHU9ZS55LGQ9ZS56LGY9LXhlO3JldHVybiEoYS1sPGZ8fGY+bC1zfHxvLXU8Znx8Zj51LXJ8fGgtZDxmfHxmPmQtbil9aW50ZXJzZWN0c1NwaGVyZShlKXtyZXR1cm4ga3QuSW50ZXJzZWN0c1NwaGVyZSh0aGlzLm1pbmltdW1Xb3JsZCx0aGlzLm1heGltdW1Xb3JsZCxlLmNlbnRlcldvcmxkLGUucmFkaXVzV29ybGQpfWludGVyc2VjdHNNaW5NYXgoZSx0KXtjb25zdCBpPXRoaXMubWluaW11bVdvcmxkLHM9dGhpcy5tYXhpbXVtV29ybGQscj1pLngsbj1pLnksYT1pLnosbz1zLngsaD1zLnksbD1zLnosdT1lLngsZD1lLnksZj1lLnosXz10LngsRT10LnksbT10Lno7cmV0dXJuIShvPHV8fHI+X3x8aDxkfHxuPkV8fGw8Znx8YT5tKX1kaXNwb3NlKCl7dmFyIGUsdDsoZT10aGlzLl9kcmF3V3JhcHBlckZyb250KT09PW51bGx8fGU9PT12b2lkIDB8fGUuZGlzcG9zZSgpLCh0PXRoaXMuX2RyYXdXcmFwcGVyQmFjayk9PT1udWxsfHx0PT09dm9pZCAwfHx0LmRpc3Bvc2UoKX1zdGF0aWMgSW50ZXJzZWN0cyhlLHQpe3JldHVybiBlLmludGVyc2VjdHNNaW5NYXgodC5taW5pbXVtV29ybGQsdC5tYXhpbXVtV29ybGQpfXN0YXRpYyBJbnRlcnNlY3RzU3BoZXJlKGUsdCxpLHMpe2NvbnN0IHI9a3QuX1RtcFZlY3RvcjNbMF07cmV0dXJuIHAuQ2xhbXBUb1JlZihpLGUsdCxyKSxwLkRpc3RhbmNlU3F1YXJlZChpLHIpPD1zKnN9c3RhdGljIElzQ29tcGxldGVseUluRnJ1c3R1bShlLHQpe2ZvcihsZXQgaT0wO2k8NjsrK2kpe2NvbnN0IHM9dFtpXTtmb3IobGV0IHI9MDtyPDg7KytyKWlmKHMuZG90Q29vcmRpbmF0ZShlW3JdKTwwKXJldHVybiExfXJldHVybiEwfXN0YXRpYyBJc0luRnJ1c3R1bShlLHQpe2ZvcihsZXQgaT0wO2k8NjsrK2kpe2xldCBzPSEwO2NvbnN0IHI9dFtpXTtmb3IobGV0IG49MDtuPDg7KytuKWlmKHIuZG90Q29vcmRpbmF0ZShlW25dKT49MCl7cz0hMTticmVha31pZihzKXJldHVybiExfXJldHVybiEwfX1rdC5fVG1wVmVjdG9yMz1CZS5CdWlsZEFycmF5KDMscC5aZXJvKTtjbGFzcyBmaXtjb25zdHJ1Y3RvcihlLHQsaSl7dGhpcy5jZW50ZXI9cC5aZXJvKCksdGhpcy5jZW50ZXJXb3JsZD1wLlplcm8oKSx0aGlzLm1pbmltdW09cC5aZXJvKCksdGhpcy5tYXhpbXVtPXAuWmVybygpLHRoaXMucmVDb25zdHJ1Y3QoZSx0LGkpfXJlQ29uc3RydWN0KGUsdCxpKXt0aGlzLm1pbmltdW0uY29weUZyb20oZSksdGhpcy5tYXhpbXVtLmNvcHlGcm9tKHQpO2NvbnN0IHM9cC5EaXN0YW5jZShlLHQpO3QuYWRkVG9SZWYoZSx0aGlzLmNlbnRlcikuc2NhbGVJblBsYWNlKC41KSx0aGlzLnJhZGl1cz1zKi41LHRoaXMuX3VwZGF0ZShpfHx4LklkZW50aXR5UmVhZE9ubHkpfXNjYWxlKGUpe2NvbnN0IHQ9dGhpcy5yYWRpdXMqZSxpPWZpLl9UbXBWZWN0b3IzLHM9aVswXS5zZXRBbGwodCkscj10aGlzLmNlbnRlci5zdWJ0cmFjdFRvUmVmKHMsaVsxXSksbj10aGlzLmNlbnRlci5hZGRUb1JlZihzLGlbMl0pO3JldHVybiB0aGlzLnJlQ29uc3RydWN0KHIsbix0aGlzLl93b3JsZE1hdHJpeCksdGhpc31nZXRXb3JsZE1hdHJpeCgpe3JldHVybiB0aGlzLl93b3JsZE1hdHJpeH1fdXBkYXRlKGUpe2lmKGUuaXNJZGVudGl0eSgpKXRoaXMuY2VudGVyV29ybGQuY29weUZyb20odGhpcy5jZW50ZXIpLHRoaXMucmFkaXVzV29ybGQ9dGhpcy5yYWRpdXM7ZWxzZXtwLlRyYW5zZm9ybUNvb3JkaW5hdGVzVG9SZWYodGhpcy5jZW50ZXIsZSx0aGlzLmNlbnRlcldvcmxkKTtjb25zdCB0PWZpLl9UbXBWZWN0b3IzWzBdO3AuVHJhbnNmb3JtTm9ybWFsRnJvbUZsb2F0c1RvUmVmKDEsMSwxLGUsdCksdGhpcy5yYWRpdXNXb3JsZD1NYXRoLm1heChNYXRoLmFicyh0LngpLE1hdGguYWJzKHQueSksTWF0aC5hYnModC56KSkqdGhpcy5yYWRpdXN9fWlzSW5GcnVzdHVtKGUpe2NvbnN0IHQ9dGhpcy5jZW50ZXJXb3JsZCxpPXRoaXMucmFkaXVzV29ybGQ7Zm9yKGxldCBzPTA7czw2O3MrKylpZihlW3NdLmRvdENvb3JkaW5hdGUodCk8PS1pKXJldHVybiExO3JldHVybiEwfWlzQ2VudGVySW5GcnVzdHVtKGUpe2NvbnN0IHQ9dGhpcy5jZW50ZXJXb3JsZDtmb3IobGV0IGk9MDtpPDY7aSsrKWlmKGVbaV0uZG90Q29vcmRpbmF0ZSh0KTwwKXJldHVybiExO3JldHVybiEwfWludGVyc2VjdHNQb2ludChlKXtjb25zdCB0PXAuRGlzdGFuY2VTcXVhcmVkKHRoaXMuY2VudGVyV29ybGQsZSk7cmV0dXJuISh0aGlzLnJhZGl1c1dvcmxkKnRoaXMucmFkaXVzV29ybGQ8dCl9c3RhdGljIEludGVyc2VjdHMoZSx0KXtjb25zdCBpPXAuRGlzdGFuY2VTcXVhcmVkKGUuY2VudGVyV29ybGQsdC5jZW50ZXJXb3JsZCkscz1lLnJhZGl1c1dvcmxkK3QucmFkaXVzV29ybGQ7cmV0dXJuIShzKnM8aSl9c3RhdGljIENyZWF0ZUZyb21DZW50ZXJBbmRSYWRpdXMoZSx0LGkpe3RoaXMuX1RtcFZlY3RvcjNbMF0uY29weUZyb20oZSksdGhpcy5fVG1wVmVjdG9yM1sxXS5jb3B5RnJvbUZsb2F0cygwLDAsdCksdGhpcy5fVG1wVmVjdG9yM1syXS5jb3B5RnJvbShlKSx0aGlzLl9UbXBWZWN0b3IzWzBdLmFkZEluUGxhY2UodGhpcy5fVG1wVmVjdG9yM1sxXSksdGhpcy5fVG1wVmVjdG9yM1syXS5zdWJ0cmFjdEluUGxhY2UodGhpcy5fVG1wVmVjdG9yM1sxXSk7Y29uc3Qgcz1uZXcgZmkodGhpcy5fVG1wVmVjdG9yM1swXSx0aGlzLl9UbXBWZWN0b3IzWzJdKTtyZXR1cm4gaT9zLl93b3JsZE1hdHJpeD1pOnMuX3dvcmxkTWF0cml4PXguSWRlbnRpdHkoKSxzfX1maS5fVG1wVmVjdG9yMz1CZS5CdWlsZEFycmF5KDMscC5aZXJvKTtjb25zdCBGcz17bWluOjAsbWF4OjB9LHdzPXttaW46MCxtYXg6MH0sUnI9KGMsZSx0KT0+e2NvbnN0IGk9cC5Eb3QoZS5jZW50ZXJXb3JsZCxjKSxzPU1hdGguYWJzKHAuRG90KGUuZGlyZWN0aW9uc1swXSxjKSkqZS5leHRlbmRTaXplLngscj1NYXRoLmFicyhwLkRvdChlLmRpcmVjdGlvbnNbMV0sYykpKmUuZXh0ZW5kU2l6ZS55LG49TWF0aC5hYnMocC5Eb3QoZS5kaXJlY3Rpb25zWzJdLGMpKSplLmV4dGVuZFNpemUueixhPXMrcituO3QubWluPWktYSx0Lm1heD1pK2F9LHJ0PShjLGUsdCk9PihScihjLGUsRnMpLFJyKGMsdCx3cyksIShGcy5taW4+d3MubWF4fHx3cy5taW4+RnMubWF4KSk7Y2xhc3MgZHR7Y29uc3RydWN0b3IoZSx0LGkpe3RoaXMuX2lzTG9ja2VkPSExLHRoaXMuYm91bmRpbmdCb3g9bmV3IGt0KGUsdCxpKSx0aGlzLmJvdW5kaW5nU3BoZXJlPW5ldyBmaShlLHQsaSl9cmVDb25zdHJ1Y3QoZSx0LGkpe3RoaXMuYm91bmRpbmdCb3gucmVDb25zdHJ1Y3QoZSx0LGkpLHRoaXMuYm91bmRpbmdTcGhlcmUucmVDb25zdHJ1Y3QoZSx0LGkpfWdldCBtaW5pbXVtKCl7cmV0dXJuIHRoaXMuYm91bmRpbmdCb3gubWluaW11bX1nZXQgbWF4aW11bSgpe3JldHVybiB0aGlzLmJvdW5kaW5nQm94Lm1heGltdW19Z2V0IGlzTG9ja2VkKCl7cmV0dXJuIHRoaXMuX2lzTG9ja2VkfXNldCBpc0xvY2tlZChlKXt0aGlzLl9pc0xvY2tlZD1lfXVwZGF0ZShlKXt0aGlzLl9pc0xvY2tlZHx8KHRoaXMuYm91bmRpbmdCb3guX3VwZGF0ZShlKSx0aGlzLmJvdW5kaW5nU3BoZXJlLl91cGRhdGUoZSkpfWNlbnRlck9uKGUsdCl7Y29uc3QgaT1kdC5fVG1wVmVjdG9yM1swXS5jb3B5RnJvbShlKS5zdWJ0cmFjdEluUGxhY2UodCkscz1kdC5fVG1wVmVjdG9yM1sxXS5jb3B5RnJvbShlKS5hZGRJblBsYWNlKHQpO3JldHVybiB0aGlzLmJvdW5kaW5nQm94LnJlQ29uc3RydWN0KGkscyx0aGlzLmJvdW5kaW5nQm94LmdldFdvcmxkTWF0cml4KCkpLHRoaXMuYm91bmRpbmdTcGhlcmUucmVDb25zdHJ1Y3QoaSxzLHRoaXMuYm91bmRpbmdCb3guZ2V0V29ybGRNYXRyaXgoKSksdGhpc31lbmNhcHN1bGF0ZShlKXtjb25zdCB0PXAuTWluaW1pemUodGhpcy5taW5pbXVtLGUpLGk9cC5NYXhpbWl6ZSh0aGlzLm1heGltdW0sZSk7cmV0dXJuIHRoaXMucmVDb25zdHJ1Y3QodCxpLHRoaXMuYm91bmRpbmdCb3guZ2V0V29ybGRNYXRyaXgoKSksdGhpc31lbmNhcHN1bGF0ZUJvdW5kaW5nSW5mbyhlKXtyZXR1cm4gdGhpcy5lbmNhcHN1bGF0ZShlLmJvdW5kaW5nQm94LmNlbnRlcldvcmxkLnN1YnRyYWN0KGUuYm91bmRpbmdCb3guZXh0ZW5kU2l6ZVdvcmxkKSksdGhpcy5lbmNhcHN1bGF0ZShlLmJvdW5kaW5nQm94LmNlbnRlcldvcmxkLmFkZChlLmJvdW5kaW5nQm94LmV4dGVuZFNpemVXb3JsZCkpLHRoaXN9c2NhbGUoZSl7cmV0dXJuIHRoaXMuYm91bmRpbmdCb3guc2NhbGUoZSksdGhpcy5ib3VuZGluZ1NwaGVyZS5zY2FsZShlKSx0aGlzfWlzSW5GcnVzdHVtKGUsdD0wKXtyZXR1cm4odD09PTJ8fHQ9PT0zKSYmdGhpcy5ib3VuZGluZ1NwaGVyZS5pc0NlbnRlckluRnJ1c3R1bShlKT8hMDp0aGlzLmJvdW5kaW5nU3BoZXJlLmlzSW5GcnVzdHVtKGUpP3Q9PT0xfHx0PT09Mz8hMDp0aGlzLmJvdW5kaW5nQm94LmlzSW5GcnVzdHVtKGUpOiExfWdldCBkaWFnb25hbExlbmd0aCgpe2NvbnN0IGU9dGhpcy5ib3VuZGluZ0JveDtyZXR1cm4gZS5tYXhpbXVtV29ybGQuc3VidHJhY3RUb1JlZihlLm1pbmltdW1Xb3JsZCxkdC5fVG1wVmVjdG9yM1swXSkubGVuZ3RoKCl9aXNDb21wbGV0ZWx5SW5GcnVzdHVtKGUpe3JldHVybiB0aGlzLmJvdW5kaW5nQm94LmlzQ29tcGxldGVseUluRnJ1c3R1bShlKX1fY2hlY2tDb2xsaXNpb24oZSl7cmV0dXJuIGUuX2NhbkRvQ29sbGlzaW9uKHRoaXMuYm91bmRpbmdTcGhlcmUuY2VudGVyV29ybGQsdGhpcy5ib3VuZGluZ1NwaGVyZS5yYWRpdXNXb3JsZCx0aGlzLmJvdW5kaW5nQm94Lm1pbmltdW1Xb3JsZCx0aGlzLmJvdW5kaW5nQm94Lm1heGltdW1Xb3JsZCl9aW50ZXJzZWN0c1BvaW50KGUpe3JldHVybiEoIXRoaXMuYm91bmRpbmdTcGhlcmUuY2VudGVyV29ybGR8fCF0aGlzLmJvdW5kaW5nU3BoZXJlLmludGVyc2VjdHNQb2ludChlKXx8IXRoaXMuYm91bmRpbmdCb3guaW50ZXJzZWN0c1BvaW50KGUpKX1pbnRlcnNlY3RzKGUsdCl7aWYoIWZpLkludGVyc2VjdHModGhpcy5ib3VuZGluZ1NwaGVyZSxlLmJvdW5kaW5nU3BoZXJlKXx8IWt0LkludGVyc2VjdHModGhpcy5ib3VuZGluZ0JveCxlLmJvdW5kaW5nQm94KSlyZXR1cm4hMTtpZighdClyZXR1cm4hMDtjb25zdCBpPXRoaXMuYm91bmRpbmdCb3gscz1lLmJvdW5kaW5nQm94O3JldHVybiEoIXJ0KGkuZGlyZWN0aW9uc1swXSxpLHMpfHwhcnQoaS5kaXJlY3Rpb25zWzFdLGkscyl8fCFydChpLmRpcmVjdGlvbnNbMl0saSxzKXx8IXJ0KHMuZGlyZWN0aW9uc1swXSxpLHMpfHwhcnQocy5kaXJlY3Rpb25zWzFdLGkscyl8fCFydChzLmRpcmVjdGlvbnNbMl0saSxzKXx8IXJ0KHAuQ3Jvc3MoaS5kaXJlY3Rpb25zWzBdLHMuZGlyZWN0aW9uc1swXSksaSxzKXx8IXJ0KHAuQ3Jvc3MoaS5kaXJlY3Rpb25zWzBdLHMuZGlyZWN0aW9uc1sxXSksaSxzKXx8IXJ0KHAuQ3Jvc3MoaS5kaXJlY3Rpb25zWzBdLHMuZGlyZWN0aW9uc1syXSksaSxzKXx8IXJ0KHAuQ3Jvc3MoaS5kaXJlY3Rpb25zWzFdLHMuZGlyZWN0aW9uc1swXSksaSxzKXx8IXJ0KHAuQ3Jvc3MoaS5kaXJlY3Rpb25zWzFdLHMuZGlyZWN0aW9uc1sxXSksaSxzKXx8IXJ0KHAuQ3Jvc3MoaS5kaXJlY3Rpb25zWzFdLHMuZGlyZWN0aW9uc1syXSksaSxzKXx8IXJ0KHAuQ3Jvc3MoaS5kaXJlY3Rpb25zWzJdLHMuZGlyZWN0aW9uc1swXSksaSxzKXx8IXJ0KHAuQ3Jvc3MoaS5kaXJlY3Rpb25zWzJdLHMuZGlyZWN0aW9uc1sxXSksaSxzKXx8IXJ0KHAuQ3Jvc3MoaS5kaXJlY3Rpb25zWzJdLHMuZGlyZWN0aW9uc1syXSksaSxzKSl9fWR0Ll9UbXBWZWN0b3IzPUJlLkJ1aWxkQXJyYXkoMixwLlplcm8pO2NsYXNzIGlze3N0YXRpYyBleHRyYWN0TWluQW5kTWF4SW5kZXhlZChlLHQsaSxzLHIsbil7Zm9yKGxldCBhPWk7YTxpK3M7YSsrKXtjb25zdCBvPXRbYV0qMyxoPWVbb10sbD1lW28rMV0sdT1lW28rMl07ci5taW5pbWl6ZUluUGxhY2VGcm9tRmxvYXRzKGgsbCx1KSxuLm1heGltaXplSW5QbGFjZUZyb21GbG9hdHMoaCxsLHUpfX1zdGF0aWMgZXh0cmFjdE1pbkFuZE1heChlLHQsaSxzLHIsbil7Zm9yKGxldCBhPXQsbz10KnM7YTx0K2k7YSsrLG8rPXMpe2NvbnN0IGg9ZVtvXSxsPWVbbysxXSx1PWVbbysyXTtyLm1pbmltaXplSW5QbGFjZUZyb21GbG9hdHMoaCxsLHUpLG4ubWF4aW1pemVJblBsYWNlRnJvbUZsb2F0cyhoLGwsdSl9fX1UKFskdC5maWx0ZXIoKC4uLltjLGVdKT0+IUFycmF5LmlzQXJyYXkoYykmJiFBcnJheS5pc0FycmF5KGUpKV0saXMsImV4dHJhY3RNaW5BbmRNYXhJbmRleGVkIixudWxsKSxUKFskdC5maWx0ZXIoKC4uLltjXSk9PiFBcnJheS5pc0FycmF5KGMpKV0saXMsImV4dHJhY3RNaW5BbmRNYXgiLG51bGwpO2Z1bmN0aW9uIEJuKGMsZSx0LGkscz1udWxsKXtjb25zdCByPW5ldyBwKE51bWJlci5NQVhfVkFMVUUsTnVtYmVyLk1BWF9WQUxVRSxOdW1iZXIuTUFYX1ZBTFVFKSxuPW5ldyBwKC1OdW1iZXIuTUFYX1ZBTFVFLC1OdW1iZXIuTUFYX1ZBTFVFLC1OdW1iZXIuTUFYX1ZBTFVFKTtyZXR1cm4gaXMuZXh0cmFjdE1pbkFuZE1heEluZGV4ZWQoYyxlLHQsaSxyLG4pLHMmJihyLngtPXIueCpzLngrcy55LHIueS09ci55KnMueCtzLnksci56LT1yLnoqcy54K3MueSxuLngrPW4ueCpzLngrcy55LG4ueSs9bi55KnMueCtzLnksbi56Kz1uLnoqcy54K3MueSkse21pbmltdW06cixtYXhpbXVtOm59fWZ1bmN0aW9uIHlyKGMsZSx0LGk9bnVsbCxzKXtjb25zdCByPW5ldyBwKE51bWJlci5NQVhfVkFMVUUsTnVtYmVyLk1BWF9WQUxVRSxOdW1iZXIuTUFYX1ZBTFVFKSxuPW5ldyBwKC1OdW1iZXIuTUFYX1ZBTFVFLC1OdW1iZXIuTUFYX1ZBTFVFLC1OdW1iZXIuTUFYX1ZBTFVFKTtyZXR1cm4gc3x8KHM9MyksaXMuZXh0cmFjdE1pbkFuZE1heChjLGUsdCxzLHIsbiksaSYmKHIueC09ci54KmkueCtpLnksci55LT1yLnkqaS54K2kueSxyLnotPXIueippLngraS55LG4ueCs9bi54KmkueCtpLnksbi55Kz1uLnkqaS54K2kueSxuLnorPW4ueippLngraS55KSx7bWluaW11bTpyLG1heGltdW06bn19Y2xhc3MgdnR7Y29uc3RydWN0b3IoZSx0LGkscyxyLG4sYSxvPSEwLGg9ITApe3RoaXMubWF0ZXJpYWxJbmRleD1lLHRoaXMudmVydGljZXNTdGFydD10LHRoaXMudmVydGljZXNDb3VudD1pLHRoaXMuaW5kZXhTdGFydD1zLHRoaXMuaW5kZXhDb3VudD1yLHRoaXMuX21haW5EcmF3V3JhcHBlck92ZXJyaWRlPW51bGwsdGhpcy5fbGluZXNJbmRleENvdW50PTAsdGhpcy5fbGluZXNJbmRleEJ1ZmZlcj1udWxsLHRoaXMuX2xhc3RDb2xsaWRlcldvcmxkVmVydGljZXM9bnVsbCx0aGlzLl9sYXN0Q29sbGlkZXJUcmFuc2Zvcm1NYXRyaXg9bnVsbCx0aGlzLl93YXNEaXNwYXRjaGVkPSExLHRoaXMuX3JlbmRlcklkPTAsdGhpcy5fYWxwaGFJbmRleD0wLHRoaXMuX2Rpc3RhbmNlVG9DYW1lcmE9MCx0aGlzLl9jdXJyZW50TWF0ZXJpYWw9bnVsbCx0aGlzLl9tZXNoPW4sdGhpcy5fcmVuZGVyaW5nTWVzaD1hfHxuLGgmJm4uc3ViTWVzaGVzLnB1c2godGhpcyksdGhpcy5fZW5naW5lPXRoaXMuX21lc2guZ2V0U2NlbmUoKS5nZXRFbmdpbmUoKSx0aGlzLnJlc2V0RHJhd0NhY2hlKCksdGhpcy5fdHJpYW5nbGVQbGFuZXM9W10sdGhpcy5faWQ9bi5zdWJNZXNoZXMubGVuZ3RoLTEsbyYmKHRoaXMucmVmcmVzaEJvdW5kaW5nSW5mbygpLG4uY29tcHV0ZVdvcmxkTWF0cml4KCEwKSl9Z2V0IG1hdGVyaWFsRGVmaW5lcygpe3ZhciBlO3JldHVybiB0aGlzLl9tYWluRHJhd1dyYXBwZXJPdmVycmlkZT90aGlzLl9tYWluRHJhd1dyYXBwZXJPdmVycmlkZS5kZWZpbmVzOihlPXRoaXMuX2dldERyYXdXcmFwcGVyKCkpPT09bnVsbHx8ZT09PXZvaWQgMD92b2lkIDA6ZS5kZWZpbmVzfXNldCBtYXRlcmlhbERlZmluZXMoZSl7dmFyIHQ7Y29uc3QgaT0odD10aGlzLl9tYWluRHJhd1dyYXBwZXJPdmVycmlkZSkhPT1udWxsJiZ0IT09dm9pZCAwP3Q6dGhpcy5fZ2V0RHJhd1dyYXBwZXIodm9pZCAwLCEwKTtpLmRlZmluZXM9ZX1fZ2V0RHJhd1dyYXBwZXIoZSx0PSExKXtlPWU/P3RoaXMuX2VuZ2luZS5jdXJyZW50UmVuZGVyUGFzc0lkO2xldCBpPXRoaXMuX2RyYXdXcmFwcGVyc1tlXTtyZXR1cm4haSYmdCYmKHRoaXMuX2RyYXdXcmFwcGVyc1tlXT1pPW5ldyBtaSh0aGlzLl9tZXNoLmdldFNjZW5lKCkuZ2V0RW5naW5lKCkpKSxpfV9yZW1vdmVEcmF3V3JhcHBlcihlLHQ9ITApe3ZhciBpO3QmJigoaT10aGlzLl9kcmF3V3JhcHBlcnNbZV0pPT09bnVsbHx8aT09PXZvaWQgMHx8aS5kaXNwb3NlKCkpLHRoaXMuX2RyYXdXcmFwcGVyc1tlXT12b2lkIDB9Z2V0IGVmZmVjdCgpe3ZhciBlLHQ7cmV0dXJuIHRoaXMuX21haW5EcmF3V3JhcHBlck92ZXJyaWRlP3RoaXMuX21haW5EcmF3V3JhcHBlck92ZXJyaWRlLmVmZmVjdDoodD0oZT10aGlzLl9nZXREcmF3V3JhcHBlcigpKT09PW51bGx8fGU9PT12b2lkIDA/dm9pZCAwOmUuZWZmZWN0KSE9PW51bGwmJnQhPT12b2lkIDA/dDpudWxsfWdldCBfZHJhd1dyYXBwZXIoKXt2YXIgZTtyZXR1cm4oZT10aGlzLl9tYWluRHJhd1dyYXBwZXJPdmVycmlkZSkhPT1udWxsJiZlIT09dm9pZCAwP2U6dGhpcy5fZ2V0RHJhd1dyYXBwZXIodm9pZCAwLCEwKX1nZXQgX2RyYXdXcmFwcGVyT3ZlcnJpZGUoKXtyZXR1cm4gdGhpcy5fbWFpbkRyYXdXcmFwcGVyT3ZlcnJpZGV9X3NldE1haW5EcmF3V3JhcHBlck92ZXJyaWRlKGUpe3RoaXMuX21haW5EcmF3V3JhcHBlck92ZXJyaWRlPWV9c2V0RWZmZWN0KGUsdD1udWxsLGkscz0hMCl7Y29uc3Qgcj10aGlzLl9kcmF3V3JhcHBlcjtyLnNldEVmZmVjdChlLHQscyksaSE9PXZvaWQgMCYmKHIubWF0ZXJpYWxDb250ZXh0PWkpLGV8fChyLmRlZmluZXM9bnVsbCxyLm1hdGVyaWFsQ29udGV4dD12b2lkIDApfXJlc2V0RHJhd0NhY2hlKGUpe2lmKHRoaXMuX2RyYXdXcmFwcGVycylpZihlIT09dm9pZCAwKXt0aGlzLl9yZW1vdmVEcmF3V3JhcHBlcihlKTtyZXR1cm59ZWxzZSBmb3IoY29uc3QgdCBvZiB0aGlzLl9kcmF3V3JhcHBlcnMpdD09bnVsbHx8dC5kaXNwb3NlKCk7dGhpcy5fZHJhd1dyYXBwZXJzPVtdfXN0YXRpYyBBZGRUb01lc2goZSx0LGkscyxyLG4sYSxvPSEwKXtyZXR1cm4gbmV3IHZ0KGUsdCxpLHMscixuLGEsbyl9Z2V0IElzR2xvYmFsKCl7cmV0dXJuIHRoaXMudmVydGljZXNTdGFydD09PTAmJnRoaXMudmVydGljZXNDb3VudD09PXRoaXMuX21lc2guZ2V0VG90YWxWZXJ0aWNlcygpJiZ0aGlzLmluZGV4U3RhcnQ9PT0wJiZ0aGlzLmluZGV4Q291bnQ9PT10aGlzLl9tZXNoLmdldFRvdGFsSW5kaWNlcygpfWdldEJvdW5kaW5nSW5mbygpe3JldHVybiB0aGlzLklzR2xvYmFsP3RoaXMuX21lc2guZ2V0Qm91bmRpbmdJbmZvKCk6dGhpcy5fYm91bmRpbmdJbmZvfXNldEJvdW5kaW5nSW5mbyhlKXtyZXR1cm4gdGhpcy5fYm91bmRpbmdJbmZvPWUsdGhpc31nZXRNZXNoKCl7cmV0dXJuIHRoaXMuX21lc2h9Z2V0UmVuZGVyaW5nTWVzaCgpe3JldHVybiB0aGlzLl9yZW5kZXJpbmdNZXNofWdldFJlcGxhY2VtZW50TWVzaCgpe3JldHVybiB0aGlzLl9tZXNoLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9hY3RBc1JlZ3VsYXJNZXNoP3RoaXMuX21lc2g6bnVsbH1nZXRFZmZlY3RpdmVNZXNoKCl7Y29uc3QgZT10aGlzLl9tZXNoLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9hY3RBc1JlZ3VsYXJNZXNoP3RoaXMuX21lc2g6bnVsbDtyZXR1cm4gZXx8dGhpcy5fcmVuZGVyaW5nTWVzaH1nZXRNYXRlcmlhbChlPSEwKXt2YXIgdDtjb25zdCBpPSh0PXRoaXMuX3JlbmRlcmluZ01lc2guZ2V0TWF0ZXJpYWxGb3JSZW5kZXJQYXNzKHRoaXMuX2VuZ2luZS5jdXJyZW50UmVuZGVyUGFzc0lkKSkhPT1udWxsJiZ0IT09dm9pZCAwP3Q6dGhpcy5fcmVuZGVyaW5nTWVzaC5tYXRlcmlhbDtpZihpKXtpZih0aGlzLl9pc011bHRpTWF0ZXJpYWwoaSkpe2NvbnN0IHM9aS5nZXRTdWJNYXRlcmlhbCh0aGlzLm1hdGVyaWFsSW5kZXgpO3JldHVybiB0aGlzLl9jdXJyZW50TWF0ZXJpYWwhPT1zJiYodGhpcy5fY3VycmVudE1hdGVyaWFsPXMsdGhpcy5yZXNldERyYXdDYWNoZSgpKSxzfX1lbHNlIHJldHVybiBlP3RoaXMuX21lc2guZ2V0U2NlbmUoKS5kZWZhdWx0TWF0ZXJpYWw6bnVsbDtyZXR1cm4gaX1faXNNdWx0aU1hdGVyaWFsKGUpe3JldHVybiBlLmdldFN1Yk1hdGVyaWFsIT09dm9pZCAwfXJlZnJlc2hCb3VuZGluZ0luZm8oZT1udWxsKXtpZih0aGlzLl9sYXN0Q29sbGlkZXJXb3JsZFZlcnRpY2VzPW51bGwsdGhpcy5Jc0dsb2JhbHx8IXRoaXMuX3JlbmRlcmluZ01lc2h8fCF0aGlzLl9yZW5kZXJpbmdNZXNoLmdlb21ldHJ5KXJldHVybiB0aGlzO2lmKGV8fChlPXRoaXMuX3JlbmRlcmluZ01lc2guZ2V0VmVydGljZXNEYXRhKGcuUG9zaXRpb25LaW5kKSksIWUpcmV0dXJuIHRoaXMuX2JvdW5kaW5nSW5mbz10aGlzLl9tZXNoLmdldEJvdW5kaW5nSW5mbygpLHRoaXM7Y29uc3QgdD10aGlzLl9yZW5kZXJpbmdNZXNoLmdldEluZGljZXMoKTtsZXQgaTtpZih0aGlzLmluZGV4U3RhcnQ9PT0wJiZ0aGlzLmluZGV4Q291bnQ9PT10Lmxlbmd0aCl7Y29uc3Qgcz10aGlzLl9yZW5kZXJpbmdNZXNoLmdldEJvdW5kaW5nSW5mbygpO2k9e21pbmltdW06cy5taW5pbXVtLmNsb25lKCksbWF4aW11bTpzLm1heGltdW0uY2xvbmUoKX19ZWxzZSBpPUJuKGUsdCx0aGlzLmluZGV4U3RhcnQsdGhpcy5pbmRleENvdW50LHRoaXMuX3JlbmRlcmluZ01lc2guZ2VvbWV0cnkuYm91bmRpbmdCaWFzKTtyZXR1cm4gdGhpcy5fYm91bmRpbmdJbmZvP3RoaXMuX2JvdW5kaW5nSW5mby5yZUNvbnN0cnVjdChpLm1pbmltdW0saS5tYXhpbXVtKTp0aGlzLl9ib3VuZGluZ0luZm89bmV3IGR0KGkubWluaW11bSxpLm1heGltdW0pLHRoaXN9X2NoZWNrQ29sbGlzaW9uKGUpe3JldHVybiB0aGlzLmdldEJvdW5kaW5nSW5mbygpLl9jaGVja0NvbGxpc2lvbihlKX11cGRhdGVCb3VuZGluZ0luZm8oZSl7bGV0IHQ9dGhpcy5nZXRCb3VuZGluZ0luZm8oKTtyZXR1cm4gdHx8KHRoaXMucmVmcmVzaEJvdW5kaW5nSW5mbygpLHQ9dGhpcy5nZXRCb3VuZGluZ0luZm8oKSksdCYmdC51cGRhdGUoZSksdGhpc31pc0luRnJ1c3R1bShlKXtjb25zdCB0PXRoaXMuZ2V0Qm91bmRpbmdJbmZvKCk7cmV0dXJuIHQ/dC5pc0luRnJ1c3R1bShlLHRoaXMuX21lc2guY3VsbGluZ1N0cmF0ZWd5KTohMX1pc0NvbXBsZXRlbHlJbkZydXN0dW0oZSl7Y29uc3QgdD10aGlzLmdldEJvdW5kaW5nSW5mbygpO3JldHVybiB0P3QuaXNDb21wbGV0ZWx5SW5GcnVzdHVtKGUpOiExfXJlbmRlcihlKXtyZXR1cm4gdGhpcy5fcmVuZGVyaW5nTWVzaC5yZW5kZXIodGhpcyxlLHRoaXMuX21lc2guX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2FjdEFzUmVndWxhck1lc2g/dGhpcy5fbWVzaDp2b2lkIDApLHRoaXN9X2dldExpbmVzSW5kZXhCdWZmZXIoZSx0KXtpZighdGhpcy5fbGluZXNJbmRleEJ1ZmZlcil7Y29uc3QgaT1bXTtmb3IobGV0IHM9dGhpcy5pbmRleFN0YXJ0O3M8dGhpcy5pbmRleFN0YXJ0K3RoaXMuaW5kZXhDb3VudDtzKz0zKWkucHVzaChlW3NdLGVbcysxXSxlW3MrMV0sZVtzKzJdLGVbcysyXSxlW3NdKTt0aGlzLl9saW5lc0luZGV4QnVmZmVyPXQuY3JlYXRlSW5kZXhCdWZmZXIoaSksdGhpcy5fbGluZXNJbmRleENvdW50PWkubGVuZ3RofXJldHVybiB0aGlzLl9saW5lc0luZGV4QnVmZmVyfWNhbkludGVyc2VjdHMoZSl7Y29uc3QgdD10aGlzLmdldEJvdW5kaW5nSW5mbygpO3JldHVybiB0P2UuaW50ZXJzZWN0c0JveCh0LmJvdW5kaW5nQm94KTohMX1pbnRlcnNlY3RzKGUsdCxpLHMscil7Y29uc3Qgbj10aGlzLmdldE1hdGVyaWFsKCk7aWYoIW4pcmV0dXJuIG51bGw7bGV0IGE9MyxvPSExO3N3aXRjaChuLmZpbGxNb2RlKXtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDg6cmV0dXJuIG51bGw7Y2FzZSA3OmE9MSxvPSEwO2JyZWFrfXJldHVybiBuLmZpbGxNb2RlPT09ND9pLmxlbmd0aD90aGlzLl9pbnRlcnNlY3RMaW5lcyhlLHQsaSx0aGlzLl9tZXNoLmludGVyc2VjdGlvblRocmVzaG9sZCxzKTp0aGlzLl9pbnRlcnNlY3RVbkluZGV4ZWRMaW5lcyhlLHQsaSx0aGlzLl9tZXNoLmludGVyc2VjdGlvblRocmVzaG9sZCxzKTohaS5sZW5ndGgmJnRoaXMuX21lc2guX3VuSW5kZXhlZD90aGlzLl9pbnRlcnNlY3RVbkluZGV4ZWRUcmlhbmdsZXMoZSx0LGkscyxyKTp0aGlzLl9pbnRlcnNlY3RUcmlhbmdsZXMoZSx0LGksYSxvLHMscil9X2ludGVyc2VjdExpbmVzKGUsdCxpLHMscil7bGV0IG49bnVsbDtmb3IobGV0IGE9dGhpcy5pbmRleFN0YXJ0O2E8dGhpcy5pbmRleFN0YXJ0K3RoaXMuaW5kZXhDb3VudDthKz0yKXtjb25zdCBvPXRbaVthXV0saD10W2lbYSsxXV0sbD1lLmludGVyc2VjdGlvblNlZ21lbnQobyxoLHMpO2lmKCEobDwwKSYmKHJ8fCFufHxsPG4uZGlzdGFuY2UpJiYobj1uZXcgRHMobnVsbCxudWxsLGwpLG4uZmFjZUlkPWEvMixyKSlicmVha31yZXR1cm4gbn1faW50ZXJzZWN0VW5JbmRleGVkTGluZXMoZSx0LGkscyxyKXtsZXQgbj1udWxsO2ZvcihsZXQgYT10aGlzLnZlcnRpY2VzU3RhcnQ7YTx0aGlzLnZlcnRpY2VzU3RhcnQrdGhpcy52ZXJ0aWNlc0NvdW50O2ErPTIpe2NvbnN0IG89dFthXSxoPXRbYSsxXSxsPWUuaW50ZXJzZWN0aW9uU2VnbWVudChvLGgscyk7aWYoIShsPDApJiYocnx8IW58fGw8bi5kaXN0YW5jZSkmJihuPW5ldyBEcyhudWxsLG51bGwsbCksbi5mYWNlSWQ9YS8yLHIpKWJyZWFrfXJldHVybiBufV9pbnRlcnNlY3RUcmlhbmdsZXMoZSx0LGkscyxyLG4sYSl7bGV0IG89bnVsbCxoPS0xO2ZvcihsZXQgbD10aGlzLmluZGV4U3RhcnQ7bDx0aGlzLmluZGV4U3RhcnQrdGhpcy5pbmRleENvdW50LSgzLXMpO2wrPXMpe2grKztjb25zdCB1PWlbbF0sZD1pW2wrMV0sZj1pW2wrMl07aWYociYmZj09PTQyOTQ5NjcyOTUpe2wrPTI7Y29udGludWV9Y29uc3QgXz10W3VdLEU9dFtkXSxtPXRbZl07aWYoIV98fCFFfHwhbXx8YSYmIWEoXyxFLG0sZSx1LGQsZikpY29udGludWU7Y29uc3Qgdj1lLmludGVyc2VjdHNUcmlhbmdsZShfLEUsbSk7aWYodil7aWYodi5kaXN0YW5jZTwwKWNvbnRpbnVlO2lmKChufHwhb3x8di5kaXN0YW5jZTxvLmRpc3RhbmNlKSYmKG89dixvLmZhY2VJZD1oLG4pKWJyZWFrfX1yZXR1cm4gb31faW50ZXJzZWN0VW5JbmRleGVkVHJpYW5nbGVzKGUsdCxpLHMscil7bGV0IG49bnVsbDtmb3IobGV0IGE9dGhpcy52ZXJ0aWNlc1N0YXJ0O2E8dGhpcy52ZXJ0aWNlc1N0YXJ0K3RoaXMudmVydGljZXNDb3VudDthKz0zKXtjb25zdCBvPXRbYV0saD10W2ErMV0sbD10W2ErMl07aWYociYmIXIobyxoLGwsZSwtMSwtMSwtMSkpY29udGludWU7Y29uc3QgdT1lLmludGVyc2VjdHNUcmlhbmdsZShvLGgsbCk7aWYodSl7aWYodS5kaXN0YW5jZTwwKWNvbnRpbnVlO2lmKChzfHwhbnx8dS5kaXN0YW5jZTxuLmRpc3RhbmNlKSYmKG49dSxuLmZhY2VJZD1hLzMscykpYnJlYWt9fXJldHVybiBufV9yZWJ1aWxkKCl7dGhpcy5fbGluZXNJbmRleEJ1ZmZlciYmKHRoaXMuX2xpbmVzSW5kZXhCdWZmZXI9bnVsbCl9Y2xvbmUoZSx0KXtjb25zdCBpPW5ldyB2dCh0aGlzLm1hdGVyaWFsSW5kZXgsdGhpcy52ZXJ0aWNlc1N0YXJ0LHRoaXMudmVydGljZXNDb3VudCx0aGlzLmluZGV4U3RhcnQsdGhpcy5pbmRleENvdW50LGUsdCwhMSk7aWYoIXRoaXMuSXNHbG9iYWwpe2NvbnN0IHM9dGhpcy5nZXRCb3VuZGluZ0luZm8oKTtpZighcylyZXR1cm4gaTtpLl9ib3VuZGluZ0luZm89bmV3IGR0KHMubWluaW11bSxzLm1heGltdW0pfXJldHVybiBpfWRpc3Bvc2UoKXt0aGlzLl9saW5lc0luZGV4QnVmZmVyJiYodGhpcy5fbWVzaC5nZXRTY2VuZSgpLmdldEVuZ2luZSgpLl9yZWxlYXNlQnVmZmVyKHRoaXMuX2xpbmVzSW5kZXhCdWZmZXIpLHRoaXMuX2xpbmVzSW5kZXhCdWZmZXI9bnVsbCk7Y29uc3QgZT10aGlzLl9tZXNoLnN1Yk1lc2hlcy5pbmRleE9mKHRoaXMpO3RoaXMuX21lc2guc3ViTWVzaGVzLnNwbGljZShlLDEpLHRoaXMucmVzZXREcmF3Q2FjaGUoKX1nZXRDbGFzc05hbWUoKXtyZXR1cm4iU3ViTWVzaCJ9c3RhdGljIENyZWF0ZUZyb21JbmRpY2VzKGUsdCxpLHMscixuPSEwKXtsZXQgYT1OdW1iZXIuTUFYX1ZBTFVFLG89LU51bWJlci5NQVhfVkFMVUU7Y29uc3QgbD0ocnx8cykuZ2V0SW5kaWNlcygpO2ZvcihsZXQgdT10O3U8dCtpO3UrKyl7Y29uc3QgZD1sW3VdO2Q8YSYmKGE9ZCksZD5vJiYobz1kKX1yZXR1cm4gbmV3IHZ0KGUsYSxvLWErMSx0LGkscyxyLG4pfX1jbGFzcyBPZXtzdGF0aWMgZ2V0IEZvcmNlRnVsbFNjZW5lTG9hZGluZ0ZvckluY3JlbWVudGFsKCl7cmV0dXJuIE9lLl9Gb3JjZUZ1bGxTY2VuZUxvYWRpbmdGb3JJbmNyZW1lbnRhbH1zdGF0aWMgc2V0IEZvcmNlRnVsbFNjZW5lTG9hZGluZ0ZvckluY3JlbWVudGFsKGUpe09lLl9Gb3JjZUZ1bGxTY2VuZUxvYWRpbmdGb3JJbmNyZW1lbnRhbD1lfXN0YXRpYyBnZXQgU2hvd0xvYWRpbmdTY3JlZW4oKXtyZXR1cm4gT2UuX1Nob3dMb2FkaW5nU2NyZWVufXN0YXRpYyBzZXQgU2hvd0xvYWRpbmdTY3JlZW4oZSl7T2UuX1Nob3dMb2FkaW5nU2NyZWVuPWV9c3RhdGljIGdldCBsb2dnaW5nTGV2ZWwoKXtyZXR1cm4gT2UuX0xvZ2dpbmdMZXZlbH1zdGF0aWMgc2V0IGxvZ2dpbmdMZXZlbChlKXtPZS5fTG9nZ2luZ0xldmVsPWV9c3RhdGljIGdldCBDbGVhbkJvbmVNYXRyaXhXZWlnaHRzKCl7cmV0dXJuIE9lLl9DbGVhbkJvbmVNYXRyaXhXZWlnaHRzfXN0YXRpYyBzZXQgQ2xlYW5Cb25lTWF0cml4V2VpZ2h0cyhlKXtPZS5fQ2xlYW5Cb25lTWF0cml4V2VpZ2h0cz1lfX1PZS5fRm9yY2VGdWxsU2NlbmVMb2FkaW5nRm9ySW5jcmVtZW50YWw9ITEsT2UuX1Nob3dMb2FkaW5nU2NyZWVuPSEwLE9lLl9DbGVhbkJvbmVNYXRyaXhXZWlnaHRzPSExLE9lLl9Mb2dnaW5nTGV2ZWw9MDtjbGFzcyBmdHt9ZnQuVXNlT3BlbkdMT3JpZW50YXRpb25Gb3JVVj0hMTtjbGFzcyBhdHtjb25zdHJ1Y3RvcihlLHQsaSxzPSExLHI9bnVsbCl7dGhpcy5kZWxheUxvYWRTdGF0ZT0wLHRoaXMuX3RvdGFsVmVydGljZXM9MCx0aGlzLl9pc0Rpc3Bvc2VkPSExLHRoaXMuX2luZGV4QnVmZmVySXNVcGRhdGFibGU9ITEsdGhpcy5fcG9zaXRpb25zQ2FjaGU9W10sdGhpcy5fcGFyZW50Q29udGFpbmVyPW51bGwsdGhpcy51c2VCb3VuZGluZ0luZm9Gcm9tR2VvbWV0cnk9ITEsdGhpcy5fc2NlbmU9dHx8ZmUuTGFzdENyZWF0ZWRTY2VuZSx0aGlzLl9zY2VuZSYmKHRoaXMuaWQ9ZSx0aGlzLnVuaXF1ZUlkPXRoaXMuX3NjZW5lLmdldFVuaXF1ZUlkKCksdGhpcy5fZW5naW5lPXRoaXMuX3NjZW5lLmdldEVuZ2luZSgpLHRoaXMuX21lc2hlcz1bXSx0aGlzLl92ZXJ0ZXhCdWZmZXJzPXt9LHRoaXMuX2luZGljZXM9W10sdGhpcy5fdXBkYXRhYmxlPXMsaT90aGlzLnNldEFsbFZlcnRpY2VzRGF0YShpLHMpOnRoaXMuX3RvdGFsVmVydGljZXM9MCx0aGlzLl9lbmdpbmUuZ2V0Q2FwcygpLnZlcnRleEFycmF5T2JqZWN0JiYodGhpcy5fdmVydGV4QXJyYXlPYmplY3RzPXt9KSxyJiYodGhpcy5hcHBseVRvTWVzaChyKSxyLmNvbXB1dGVXb3JsZE1hdHJpeCghMCkpKX1nZXQgYm91bmRpbmdCaWFzKCl7cmV0dXJuIHRoaXMuX2JvdW5kaW5nQmlhc31zZXQgYm91bmRpbmdCaWFzKGUpe3RoaXMuX2JvdW5kaW5nQmlhcz90aGlzLl9ib3VuZGluZ0JpYXMuY29weUZyb20oZSk6dGhpcy5fYm91bmRpbmdCaWFzPWUuY2xvbmUoKSx0aGlzLl91cGRhdGVCb3VuZGluZ0luZm8oITAsbnVsbCl9c3RhdGljIENyZWF0ZUdlb21ldHJ5Rm9yTWVzaChlKXtjb25zdCB0PW5ldyBhdChhdC5SYW5kb21JZCgpLGUuZ2V0U2NlbmUoKSk7cmV0dXJuIHQuYXBwbHlUb01lc2goZSksdH1nZXQgbWVzaGVzKCl7cmV0dXJuIHRoaXMuX21lc2hlc31nZXQgZXh0ZW5kKCl7cmV0dXJuIHRoaXMuX2V4dGVuZH1nZXRTY2VuZSgpe3JldHVybiB0aGlzLl9zY2VuZX1nZXRFbmdpbmUoKXtyZXR1cm4gdGhpcy5fZW5naW5lfWlzUmVhZHkoKXtyZXR1cm4gdGhpcy5kZWxheUxvYWRTdGF0ZT09PTF8fHRoaXMuZGVsYXlMb2FkU3RhdGU9PT0wfWdldCBkb05vdFNlcmlhbGl6ZSgpe2ZvcihsZXQgZT0wO2U8dGhpcy5fbWVzaGVzLmxlbmd0aDtlKyspaWYoIXRoaXMuX21lc2hlc1tlXS5kb05vdFNlcmlhbGl6ZSlyZXR1cm4hMTtyZXR1cm4hMH1fcmVidWlsZCgpe3RoaXMuX3ZlcnRleEFycmF5T2JqZWN0cyYmKHRoaXMuX3ZlcnRleEFycmF5T2JqZWN0cz17fSksdGhpcy5fbWVzaGVzLmxlbmd0aCE9PTAmJnRoaXMuX2luZGljZXMmJih0aGlzLl9pbmRleEJ1ZmZlcj10aGlzLl9lbmdpbmUuY3JlYXRlSW5kZXhCdWZmZXIodGhpcy5faW5kaWNlcyx0aGlzLl91cGRhdGFibGUpKTtmb3IoY29uc3QgZSBpbiB0aGlzLl92ZXJ0ZXhCdWZmZXJzKXRoaXMuX3ZlcnRleEJ1ZmZlcnNbZV0uX3JlYnVpbGQoKX1zZXRBbGxWZXJ0aWNlc0RhdGEoZSx0KXtlLmFwcGx5VG9HZW9tZXRyeSh0aGlzLHQpLHRoaXMuX25vdGlmeVVwZGF0ZSgpfXNldFZlcnRpY2VzRGF0YShlLHQsaT0hMSxzKXtpJiZBcnJheS5pc0FycmF5KHQpJiYodD1uZXcgRmxvYXQzMkFycmF5KHQpKTtjb25zdCByPW5ldyBnKHRoaXMuX2VuZ2luZSx0LGUsaSx0aGlzLl9tZXNoZXMubGVuZ3RoPT09MCxzKTt0aGlzLnNldFZlcnRpY2VzQnVmZmVyKHIpfXJlbW92ZVZlcnRpY2VzRGF0YShlKXt0aGlzLl92ZXJ0ZXhCdWZmZXJzW2VdJiYodGhpcy5fdmVydGV4QnVmZmVyc1tlXS5kaXNwb3NlKCksZGVsZXRlIHRoaXMuX3ZlcnRleEJ1ZmZlcnNbZV0pLHRoaXMuX3ZlcnRleEFycmF5T2JqZWN0cyYmdGhpcy5fZGlzcG9zZVZlcnRleEFycmF5T2JqZWN0cygpfXNldFZlcnRpY2VzQnVmZmVyKGUsdD1udWxsLGk9ITApe2NvbnN0IHM9ZS5nZXRLaW5kKCk7dGhpcy5fdmVydGV4QnVmZmVyc1tzXSYmaSYmdGhpcy5fdmVydGV4QnVmZmVyc1tzXS5kaXNwb3NlKCksZS5fYnVmZmVyJiZlLl9idWZmZXIuX2luY3JlYXNlUmVmZXJlbmNlcygpLHRoaXMuX3ZlcnRleEJ1ZmZlcnNbc109ZTtjb25zdCByPXRoaXMuX21lc2hlcyxuPXIubGVuZ3RoO2lmKHM9PT1nLlBvc2l0aW9uS2luZCl7Y29uc3QgYT1lLmdldERhdGEoKTt0IT1udWxsP3RoaXMuX3RvdGFsVmVydGljZXM9dDphIT1udWxsJiYodGhpcy5fdG90YWxWZXJ0aWNlcz1hLmxlbmd0aC8oZS50eXBlPT09Zy5CWVRFP2UuYnl0ZVN0cmlkZTplLmJ5dGVTdHJpZGUvNCkpLHRoaXMuX3VwZGF0ZUV4dGVuZChhKSx0aGlzLl9yZXNldFBvaW50c0FycmF5Q2FjaGUoKTtmb3IobGV0IG89MDtvPG47bysrKXtjb25zdCBoPXJbb107aC5idWlsZEJvdW5kaW5nSW5mbyh0aGlzLl9leHRlbmQubWluaW11bSx0aGlzLl9leHRlbmQubWF4aW11bSksaC5fY3JlYXRlR2xvYmFsU3ViTWVzaChoLmlzVW5JbmRleGVkKSxoLmNvbXB1dGVXb3JsZE1hdHJpeCghMCksaC5zeW5jaHJvbml6ZUluc3RhbmNlcygpfX10aGlzLl9ub3RpZnlVcGRhdGUocyl9dXBkYXRlVmVydGljZXNEYXRhRGlyZWN0bHkoZSx0LGkscz0hMSl7Y29uc3Qgcj10aGlzLmdldFZlcnRleEJ1ZmZlcihlKTtyJiYoci51cGRhdGVEaXJlY3RseSh0LGkscyksdGhpcy5fbm90aWZ5VXBkYXRlKGUpKX11cGRhdGVWZXJ0aWNlc0RhdGEoZSx0LGk9ITEpe2NvbnN0IHM9dGhpcy5nZXRWZXJ0ZXhCdWZmZXIoZSk7cyYmKHMudXBkYXRlKHQpLGU9PT1nLlBvc2l0aW9uS2luZCYmdGhpcy5fdXBkYXRlQm91bmRpbmdJbmZvKGksdCksdGhpcy5fbm90aWZ5VXBkYXRlKGUpKX1fdXBkYXRlQm91bmRpbmdJbmZvKGUsdCl7aWYoZSYmdGhpcy5fdXBkYXRlRXh0ZW5kKHQpLHRoaXMuX3Jlc2V0UG9pbnRzQXJyYXlDYWNoZSgpLGUpe2NvbnN0IGk9dGhpcy5fbWVzaGVzO2Zvcihjb25zdCBzIG9mIGkpe3MuaGFzQm91bmRpbmdJbmZvP3MuZ2V0Qm91bmRpbmdJbmZvKCkucmVDb25zdHJ1Y3QodGhpcy5fZXh0ZW5kLm1pbmltdW0sdGhpcy5fZXh0ZW5kLm1heGltdW0pOnMuYnVpbGRCb3VuZGluZ0luZm8odGhpcy5fZXh0ZW5kLm1pbmltdW0sdGhpcy5fZXh0ZW5kLm1heGltdW0pO2NvbnN0IHI9cy5zdWJNZXNoZXM7Zm9yKGNvbnN0IG4gb2YgciluLnJlZnJlc2hCb3VuZGluZ0luZm8oKX19fV9iaW5kKGUsdCxpLHMpe2lmKCFlKXJldHVybjt0PT09dm9pZCAwJiYodD10aGlzLl9pbmRleEJ1ZmZlcik7Y29uc3Qgcj10aGlzLmdldFZlcnRleEJ1ZmZlcnMoKTtpZighcilyZXR1cm47aWYodCE9dGhpcy5faW5kZXhCdWZmZXJ8fCF0aGlzLl92ZXJ0ZXhBcnJheU9iamVjdHMmJiFzKXt0aGlzLl9lbmdpbmUuYmluZEJ1ZmZlcnMocix0LGUsaSk7cmV0dXJufWNvbnN0IG49c3x8dGhpcy5fdmVydGV4QXJyYXlPYmplY3RzO25bZS5rZXldfHwobltlLmtleV09dGhpcy5fZW5naW5lLnJlY29yZFZlcnRleEFycmF5T2JqZWN0KHIsdCxlLGkpKSx0aGlzLl9lbmdpbmUuYmluZFZlcnRleEFycmF5T2JqZWN0KG5bZS5rZXldLHQpfWdldFRvdGFsVmVydGljZXMoKXtyZXR1cm4gdGhpcy5pc1JlYWR5KCk/dGhpcy5fdG90YWxWZXJ0aWNlczowfWdldFZlcnRpY2VzRGF0YShlLHQsaSl7Y29uc3Qgcz10aGlzLmdldFZlcnRleEJ1ZmZlcihlKTtyZXR1cm4gcz9zLmdldEZsb2F0RGF0YSh0aGlzLl90b3RhbFZlcnRpY2VzLGl8fHQmJnRoaXMuX21lc2hlcy5sZW5ndGghPT0xKTpudWxsfWlzVmVydGV4QnVmZmVyVXBkYXRhYmxlKGUpe2NvbnN0IHQ9dGhpcy5fdmVydGV4QnVmZmVyc1tlXTtyZXR1cm4gdD90LmlzVXBkYXRhYmxlKCk6ITF9Z2V0VmVydGV4QnVmZmVyKGUpe3JldHVybiB0aGlzLmlzUmVhZHkoKT90aGlzLl92ZXJ0ZXhCdWZmZXJzW2VdOm51bGx9Z2V0VmVydGV4QnVmZmVycygpe3JldHVybiB0aGlzLmlzUmVhZHkoKT90aGlzLl92ZXJ0ZXhCdWZmZXJzOm51bGx9aXNWZXJ0aWNlc0RhdGFQcmVzZW50KGUpe3JldHVybiB0aGlzLl92ZXJ0ZXhCdWZmZXJzP3RoaXMuX3ZlcnRleEJ1ZmZlcnNbZV0hPT12b2lkIDA6dGhpcy5fZGVsYXlJbmZvP3RoaXMuX2RlbGF5SW5mby5pbmRleE9mKGUpIT09LTE6ITF9Z2V0VmVydGljZXNEYXRhS2luZHMoKXtjb25zdCBlPVtdO2xldCB0O2lmKCF0aGlzLl92ZXJ0ZXhCdWZmZXJzJiZ0aGlzLl9kZWxheUluZm8pZm9yKHQgaW4gdGhpcy5fZGVsYXlJbmZvKWUucHVzaCh0KTtlbHNlIGZvcih0IGluIHRoaXMuX3ZlcnRleEJ1ZmZlcnMpZS5wdXNoKHQpO3JldHVybiBlfXVwZGF0ZUluZGljZXMoZSx0LGk9ITEpe2lmKHRoaXMuX2luZGV4QnVmZmVyKWlmKCF0aGlzLl9pbmRleEJ1ZmZlcklzVXBkYXRhYmxlKXRoaXMuc2V0SW5kaWNlcyhlLG51bGwsITApO2Vsc2V7Y29uc3Qgcz1lLmxlbmd0aCE9PXRoaXMuX2luZGljZXMubGVuZ3RoO2lmKGl8fCh0aGlzLl9pbmRpY2VzPWUuc2xpY2UoKSksdGhpcy5fZW5naW5lLnVwZGF0ZUR5bmFtaWNJbmRleEJ1ZmZlcih0aGlzLl9pbmRleEJ1ZmZlcixlLHQpLHMpZm9yKGNvbnN0IHIgb2YgdGhpcy5fbWVzaGVzKXIuX2NyZWF0ZUdsb2JhbFN1Yk1lc2goITApfX1zZXRJbmRpY2VzKGUsdD1udWxsLGk9ITEpe3RoaXMuX2luZGV4QnVmZmVyJiZ0aGlzLl9lbmdpbmUuX3JlbGVhc2VCdWZmZXIodGhpcy5faW5kZXhCdWZmZXIpLHRoaXMuX2luZGljZXM9ZSx0aGlzLl9pbmRleEJ1ZmZlcklzVXBkYXRhYmxlPWksdGhpcy5fbWVzaGVzLmxlbmd0aCE9PTAmJnRoaXMuX2luZGljZXMmJih0aGlzLl9pbmRleEJ1ZmZlcj10aGlzLl9lbmdpbmUuY3JlYXRlSW5kZXhCdWZmZXIodGhpcy5faW5kaWNlcyxpKSksdCE9bnVsbCYmKHRoaXMuX3RvdGFsVmVydGljZXM9dCk7Zm9yKGNvbnN0IHMgb2YgdGhpcy5fbWVzaGVzKXMuX2NyZWF0ZUdsb2JhbFN1Yk1lc2goITApLHMuc3luY2hyb25pemVJbnN0YW5jZXMoKTt0aGlzLl9ub3RpZnlVcGRhdGUoKX1nZXRUb3RhbEluZGljZXMoKXtyZXR1cm4gdGhpcy5pc1JlYWR5KCk/dGhpcy5faW5kaWNlcy5sZW5ndGg6MH1nZXRJbmRpY2VzKGUsdCl7aWYoIXRoaXMuaXNSZWFkeSgpKXJldHVybiBudWxsO2NvbnN0IGk9dGhpcy5faW5kaWNlcztyZXR1cm4hdCYmKCFlfHx0aGlzLl9tZXNoZXMubGVuZ3RoPT09MSk/aTppLnNsaWNlKCl9Z2V0SW5kZXhCdWZmZXIoKXtyZXR1cm4gdGhpcy5pc1JlYWR5KCk/dGhpcy5faW5kZXhCdWZmZXI6bnVsbH1fcmVsZWFzZVZlcnRleEFycmF5T2JqZWN0KGU9bnVsbCl7IWV8fCF0aGlzLl92ZXJ0ZXhBcnJheU9iamVjdHN8fHRoaXMuX3ZlcnRleEFycmF5T2JqZWN0c1tlLmtleV0mJih0aGlzLl9lbmdpbmUucmVsZWFzZVZlcnRleEFycmF5T2JqZWN0KHRoaXMuX3ZlcnRleEFycmF5T2JqZWN0c1tlLmtleV0pLGRlbGV0ZSB0aGlzLl92ZXJ0ZXhBcnJheU9iamVjdHNbZS5rZXldKX1yZWxlYXNlRm9yTWVzaChlLHQpe2NvbnN0IGk9dGhpcy5fbWVzaGVzLHM9aS5pbmRleE9mKGUpO3MhPT0tMSYmKGkuc3BsaWNlKHMsMSksdGhpcy5fdmVydGV4QXJyYXlPYmplY3RzJiZlLl9pbnZhbGlkYXRlSW5zdGFuY2VWZXJ0ZXhBcnJheU9iamVjdCgpLGUuX2dlb21ldHJ5PW51bGwsaS5sZW5ndGg9PT0wJiZ0JiZ0aGlzLmRpc3Bvc2UoKSl9YXBwbHlUb01lc2goZSl7aWYoZS5fZ2VvbWV0cnk9PT10aGlzKXJldHVybjtjb25zdCB0PWUuX2dlb21ldHJ5O3QmJnQucmVsZWFzZUZvck1lc2goZSksdGhpcy5fdmVydGV4QXJyYXlPYmplY3RzJiZlLl9pbnZhbGlkYXRlSW5zdGFuY2VWZXJ0ZXhBcnJheU9iamVjdCgpO2NvbnN0IGk9dGhpcy5fbWVzaGVzO2UuX2dlb21ldHJ5PXRoaXMsZS5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fcG9zaXRpb25zPW51bGwsdGhpcy5fc2NlbmUucHVzaEdlb21ldHJ5KHRoaXMpLGkucHVzaChlKSx0aGlzLmlzUmVhZHkoKT90aGlzLl9hcHBseVRvTWVzaChlKTp0aGlzLl9ib3VuZGluZ0luZm8mJmUuc2V0Qm91bmRpbmdJbmZvKHRoaXMuX2JvdW5kaW5nSW5mbyl9X3VwZGF0ZUV4dGVuZChlPW51bGwpe2lmKHRoaXMudXNlQm91bmRpbmdJbmZvRnJvbUdlb21ldHJ5JiZ0aGlzLl9ib3VuZGluZ0luZm8pdGhpcy5fZXh0ZW5kPXttaW5pbXVtOnRoaXMuX2JvdW5kaW5nSW5mby5taW5pbXVtLmNsb25lKCksbWF4aW11bTp0aGlzLl9ib3VuZGluZ0luZm8ubWF4aW11bS5jbG9uZSgpfTtlbHNle2lmKCFlJiYoZT10aGlzLmdldFZlcnRpY2VzRGF0YShnLlBvc2l0aW9uS2luZCksIWUpKXJldHVybjt0aGlzLl9leHRlbmQ9eXIoZSwwLHRoaXMuX3RvdGFsVmVydGljZXMsdGhpcy5ib3VuZGluZ0JpYXMsMyl9fV9hcHBseVRvTWVzaChlKXtjb25zdCB0PXRoaXMuX21lc2hlcy5sZW5ndGg7Zm9yKGNvbnN0IGkgaW4gdGhpcy5fdmVydGV4QnVmZmVycyl0PT09MSYmdGhpcy5fdmVydGV4QnVmZmVyc1tpXS5jcmVhdGUoKSxpPT09Zy5Qb3NpdGlvbktpbmQmJih0aGlzLl9leHRlbmR8fHRoaXMuX3VwZGF0ZUV4dGVuZCgpLGUuYnVpbGRCb3VuZGluZ0luZm8odGhpcy5fZXh0ZW5kLm1pbmltdW0sdGhpcy5fZXh0ZW5kLm1heGltdW0pLGUuX2NyZWF0ZUdsb2JhbFN1Yk1lc2goZS5pc1VuSW5kZXhlZCksZS5fdXBkYXRlQm91bmRpbmdJbmZvKCkpO3Q9PT0xJiZ0aGlzLl9pbmRpY2VzJiZ0aGlzLl9pbmRpY2VzLmxlbmd0aD4wJiYodGhpcy5faW5kZXhCdWZmZXI9dGhpcy5fZW5naW5lLmNyZWF0ZUluZGV4QnVmZmVyKHRoaXMuX2luZGljZXMsdGhpcy5fdXBkYXRhYmxlKSksZS5fc3luY0dlb21ldHJ5V2l0aE1vcnBoVGFyZ2V0TWFuYWdlcigpLGUuc3luY2hyb25pemVJbnN0YW5jZXMoKX1fbm90aWZ5VXBkYXRlKGUpe3RoaXMub25HZW9tZXRyeVVwZGF0ZWQmJnRoaXMub25HZW9tZXRyeVVwZGF0ZWQodGhpcyxlKSx0aGlzLl92ZXJ0ZXhBcnJheU9iamVjdHMmJnRoaXMuX2Rpc3Bvc2VWZXJ0ZXhBcnJheU9iamVjdHMoKTtmb3IoY29uc3QgdCBvZiB0aGlzLl9tZXNoZXMpdC5fbWFya1N1Yk1lc2hlc0FzQXR0cmlidXRlc0RpcnR5KCl9bG9hZChlLHQpe2lmKHRoaXMuZGVsYXlMb2FkU3RhdGUhPT0yKXtpZih0aGlzLmlzUmVhZHkoKSl7dCYmdCgpO3JldHVybn10aGlzLmRlbGF5TG9hZFN0YXRlPTIsdGhpcy5fcXVldWVMb2FkKGUsdCl9fV9xdWV1ZUxvYWQoZSx0KXt0aGlzLmRlbGF5TG9hZGluZ0ZpbGUmJihlLmFkZFBlbmRpbmdEYXRhKHRoaXMpLGUuX2xvYWRGaWxlKHRoaXMuZGVsYXlMb2FkaW5nRmlsZSxpPT57aWYoIXRoaXMuX2RlbGF5TG9hZGluZ0Z1bmN0aW9uKXJldHVybjt0aGlzLl9kZWxheUxvYWRpbmdGdW5jdGlvbihKU09OLnBhcnNlKGkpLHRoaXMpLHRoaXMuZGVsYXlMb2FkU3RhdGU9MSx0aGlzLl9kZWxheUluZm89W10sZS5yZW1vdmVQZW5kaW5nRGF0YSh0aGlzKTtjb25zdCBzPXRoaXMuX21lc2hlcyxyPXMubGVuZ3RoO2ZvcihsZXQgbj0wO248cjtuKyspdGhpcy5fYXBwbHlUb01lc2goc1tuXSk7dCYmdCgpfSx2b2lkIDAsITApKX10b0xlZnRIYW5kZWQoKXtjb25zdCBlPXRoaXMuZ2V0SW5kaWNlcyghMSk7aWYoZSE9bnVsbCYmZS5sZW5ndGg+MCl7Zm9yKGxldCBzPTA7czxlLmxlbmd0aDtzKz0zKXtjb25zdCByPWVbcyswXTtlW3MrMF09ZVtzKzJdLGVbcysyXT1yfXRoaXMuc2V0SW5kaWNlcyhlKX1jb25zdCB0PXRoaXMuZ2V0VmVydGljZXNEYXRhKGcuUG9zaXRpb25LaW5kLCExKTtpZih0IT1udWxsJiZ0Lmxlbmd0aD4wKXtmb3IobGV0IHM9MDtzPHQubGVuZ3RoO3MrPTMpdFtzKzJdPS10W3MrMl07dGhpcy5zZXRWZXJ0aWNlc0RhdGEoZy5Qb3NpdGlvbktpbmQsdCwhMSl9Y29uc3QgaT10aGlzLmdldFZlcnRpY2VzRGF0YShnLk5vcm1hbEtpbmQsITEpO2lmKGkhPW51bGwmJmkubGVuZ3RoPjApe2ZvcihsZXQgcz0wO3M8aS5sZW5ndGg7cys9MylpW3MrMl09LWlbcysyXTt0aGlzLnNldFZlcnRpY2VzRGF0YShnLk5vcm1hbEtpbmQsaSwhMSl9fV9yZXNldFBvaW50c0FycmF5Q2FjaGUoKXt0aGlzLl9wb3NpdGlvbnM9bnVsbH1fZ2VuZXJhdGVQb2ludHNBcnJheSgpe2lmKHRoaXMuX3Bvc2l0aW9ucylyZXR1cm4hMDtjb25zdCBlPXRoaXMuZ2V0VmVydGljZXNEYXRhKGcuUG9zaXRpb25LaW5kKTtpZighZXx8ZS5sZW5ndGg9PT0wKXJldHVybiExO2ZvcihsZXQgdD10aGlzLl9wb3NpdGlvbnNDYWNoZS5sZW5ndGgqMyxpPXRoaXMuX3Bvc2l0aW9uc0NhY2hlLmxlbmd0aDt0PGUubGVuZ3RoO3QrPTMsKytpKXRoaXMuX3Bvc2l0aW9uc0NhY2hlW2ldPXAuRnJvbUFycmF5KGUsdCk7Zm9yKGxldCB0PTAsaT0wO3Q8ZS5sZW5ndGg7dCs9MywrK2kpdGhpcy5fcG9zaXRpb25zQ2FjaGVbaV0uc2V0KGVbMCt0XSxlWzErdF0sZVsyK3RdKTtyZXR1cm4gdGhpcy5fcG9zaXRpb25zQ2FjaGUubGVuZ3RoPWUubGVuZ3RoLzMsdGhpcy5fcG9zaXRpb25zPXRoaXMuX3Bvc2l0aW9uc0NhY2hlLCEwfWlzRGlzcG9zZWQoKXtyZXR1cm4gdGhpcy5faXNEaXNwb3NlZH1fZGlzcG9zZVZlcnRleEFycmF5T2JqZWN0cygpe2lmKHRoaXMuX3ZlcnRleEFycmF5T2JqZWN0cyl7Zm9yKGNvbnN0IGkgaW4gdGhpcy5fdmVydGV4QXJyYXlPYmplY3RzKXRoaXMuX2VuZ2luZS5yZWxlYXNlVmVydGV4QXJyYXlPYmplY3QodGhpcy5fdmVydGV4QXJyYXlPYmplY3RzW2ldKTt0aGlzLl92ZXJ0ZXhBcnJheU9iamVjdHM9e307Y29uc3QgZT10aGlzLl9tZXNoZXMsdD1lLmxlbmd0aDtmb3IobGV0IGk9MDtpPHQ7aSsrKWVbaV0uX2ludmFsaWRhdGVJbnN0YW5jZVZlcnRleEFycmF5T2JqZWN0KCl9fWRpc3Bvc2UoKXtjb25zdCBlPXRoaXMuX21lc2hlcyx0PWUubGVuZ3RoO2xldCBpO2ZvcihpPTA7aTx0O2krKyl0aGlzLnJlbGVhc2VGb3JNZXNoKGVbaV0pO3RoaXMuX21lc2hlcy5sZW5ndGg9MCx0aGlzLl9kaXNwb3NlVmVydGV4QXJyYXlPYmplY3RzKCk7Zm9yKGNvbnN0IHMgaW4gdGhpcy5fdmVydGV4QnVmZmVycyl0aGlzLl92ZXJ0ZXhCdWZmZXJzW3NdLmRpc3Bvc2UoKTtpZih0aGlzLl92ZXJ0ZXhCdWZmZXJzPXt9LHRoaXMuX3RvdGFsVmVydGljZXM9MCx0aGlzLl9pbmRleEJ1ZmZlciYmdGhpcy5fZW5naW5lLl9yZWxlYXNlQnVmZmVyKHRoaXMuX2luZGV4QnVmZmVyKSx0aGlzLl9pbmRleEJ1ZmZlcj1udWxsLHRoaXMuX2luZGljZXM9W10sdGhpcy5kZWxheUxvYWRTdGF0ZT0wLHRoaXMuZGVsYXlMb2FkaW5nRmlsZT1udWxsLHRoaXMuX2RlbGF5TG9hZGluZ0Z1bmN0aW9uPW51bGwsdGhpcy5fZGVsYXlJbmZvPVtdLHRoaXMuX2JvdW5kaW5nSW5mbz1udWxsLHRoaXMuX3NjZW5lLnJlbW92ZUdlb21ldHJ5KHRoaXMpLHRoaXMuX3BhcmVudENvbnRhaW5lcil7Y29uc3Qgcz10aGlzLl9wYXJlbnRDb250YWluZXIuZ2VvbWV0cmllcy5pbmRleE9mKHRoaXMpO3M+LTEmJnRoaXMuX3BhcmVudENvbnRhaW5lci5nZW9tZXRyaWVzLnNwbGljZShzLDEpLHRoaXMuX3BhcmVudENvbnRhaW5lcj1udWxsfXRoaXMuX2lzRGlzcG9zZWQ9ITB9Y29weShlKXtjb25zdCB0PW5ldyBlZTt0LmluZGljZXM9W107Y29uc3QgaT10aGlzLmdldEluZGljZXMoKTtpZihpKWZvcihsZXQgbz0wO288aS5sZW5ndGg7bysrKXQuaW5kaWNlcy5wdXNoKGlbb10pO2xldCBzPSExLHI9ITEsbjtmb3IobiBpbiB0aGlzLl92ZXJ0ZXhCdWZmZXJzKXtjb25zdCBvPXRoaXMuZ2V0VmVydGljZXNEYXRhKG4pO2lmKG8mJihvIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5P3Quc2V0KG5ldyBGbG9hdDMyQXJyYXkobyksbik6dC5zZXQoby5zbGljZSgwKSxuKSwhcikpe2NvbnN0IGg9dGhpcy5nZXRWZXJ0ZXhCdWZmZXIobik7aCYmKHM9aC5pc1VwZGF0YWJsZSgpLHI9IXMpfX1jb25zdCBhPW5ldyBhdChlLHRoaXMuX3NjZW5lLHQscyk7YS5kZWxheUxvYWRTdGF0ZT10aGlzLmRlbGF5TG9hZFN0YXRlLGEuZGVsYXlMb2FkaW5nRmlsZT10aGlzLmRlbGF5TG9hZGluZ0ZpbGUsYS5fZGVsYXlMb2FkaW5nRnVuY3Rpb249dGhpcy5fZGVsYXlMb2FkaW5nRnVuY3Rpb247Zm9yKG4gaW4gdGhpcy5fZGVsYXlJbmZvKWEuX2RlbGF5SW5mbz1hLl9kZWxheUluZm98fFtdLGEuX2RlbGF5SW5mby5wdXNoKG4pO3JldHVybiBhLl9ib3VuZGluZ0luZm89bmV3IGR0KHRoaXMuX2V4dGVuZC5taW5pbXVtLHRoaXMuX2V4dGVuZC5tYXhpbXVtKSxhfXNlcmlhbGl6ZSgpe2NvbnN0IGU9e307cmV0dXJuIGUuaWQ9dGhpcy5pZCxlLnVuaXF1ZUlkPXRoaXMudW5pcXVlSWQsZS51cGRhdGFibGU9dGhpcy5fdXBkYXRhYmxlLGdlJiZnZS5IYXNUYWdzKHRoaXMpJiYoZS50YWdzPWdlLkdldFRhZ3ModGhpcykpLGV9X3RvTnVtYmVyQXJyYXkoZSl7cmV0dXJuIEFycmF5LmlzQXJyYXkoZSk/ZTpBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlKX1jbGVhckNhY2hlZERhdGEoKXt0aGlzLl9pbmRpY2VzPVtdLHRoaXMuX3Jlc2V0UG9pbnRzQXJyYXlDYWNoZSgpO2Zvcihjb25zdCBlIGluIHRoaXMuX3ZlcnRleEJ1ZmZlcnMpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMuX3ZlcnRleEJ1ZmZlcnMsZSkmJih0aGlzLl92ZXJ0ZXhCdWZmZXJzW2VdLl9idWZmZXIuX2RhdGE9bnVsbCl9c2VyaWFsaXplVmVydGljZURhdGEoKXtjb25zdCBlPXRoaXMuc2VyaWFsaXplKCk7cmV0dXJuIHRoaXMuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuUG9zaXRpb25LaW5kKSYmKGUucG9zaXRpb25zPXRoaXMuX3RvTnVtYmVyQXJyYXkodGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5Qb3NpdGlvbktpbmQpKSx0aGlzLmlzVmVydGV4QnVmZmVyVXBkYXRhYmxlKGcuUG9zaXRpb25LaW5kKSYmKGUucG9zaXRpb25zLl91cGRhdGFibGU9ITApKSx0aGlzLmlzVmVydGljZXNEYXRhUHJlc2VudChnLk5vcm1hbEtpbmQpJiYoZS5ub3JtYWxzPXRoaXMuX3RvTnVtYmVyQXJyYXkodGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5Ob3JtYWxLaW5kKSksdGhpcy5pc1ZlcnRleEJ1ZmZlclVwZGF0YWJsZShnLk5vcm1hbEtpbmQpJiYoZS5ub3JtYWxzLl91cGRhdGFibGU9ITApKSx0aGlzLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlRhbmdlbnRLaW5kKSYmKGUudGFuZ2VudHM9dGhpcy5fdG9OdW1iZXJBcnJheSh0aGlzLmdldFZlcnRpY2VzRGF0YShnLlRhbmdlbnRLaW5kKSksdGhpcy5pc1ZlcnRleEJ1ZmZlclVwZGF0YWJsZShnLlRhbmdlbnRLaW5kKSYmKGUudGFuZ2VudHMuX3VwZGF0YWJsZT0hMCkpLHRoaXMuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuVVZLaW5kKSYmKGUudXZzPXRoaXMuX3RvTnVtYmVyQXJyYXkodGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5VVktpbmQpKSx0aGlzLmlzVmVydGV4QnVmZmVyVXBkYXRhYmxlKGcuVVZLaW5kKSYmKGUudXZzLl91cGRhdGFibGU9ITApKSx0aGlzLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlVWMktpbmQpJiYoZS51djJzPXRoaXMuX3RvTnVtYmVyQXJyYXkodGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5VVjJLaW5kKSksdGhpcy5pc1ZlcnRleEJ1ZmZlclVwZGF0YWJsZShnLlVWMktpbmQpJiYoZS51djJzLl91cGRhdGFibGU9ITApKSx0aGlzLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlVWM0tpbmQpJiYoZS51djNzPXRoaXMuX3RvTnVtYmVyQXJyYXkodGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5VVjNLaW5kKSksdGhpcy5pc1ZlcnRleEJ1ZmZlclVwZGF0YWJsZShnLlVWM0tpbmQpJiYoZS51djNzLl91cGRhdGFibGU9ITApKSx0aGlzLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlVWNEtpbmQpJiYoZS51djRzPXRoaXMuX3RvTnVtYmVyQXJyYXkodGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5VVjRLaW5kKSksdGhpcy5pc1ZlcnRleEJ1ZmZlclVwZGF0YWJsZShnLlVWNEtpbmQpJiYoZS51djRzLl91cGRhdGFibGU9ITApKSx0aGlzLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlVWNUtpbmQpJiYoZS51djVzPXRoaXMuX3RvTnVtYmVyQXJyYXkodGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5VVjVLaW5kKSksdGhpcy5pc1ZlcnRleEJ1ZmZlclVwZGF0YWJsZShnLlVWNUtpbmQpJiYoZS51djVzLl91cGRhdGFibGU9ITApKSx0aGlzLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlVWNktpbmQpJiYoZS51djZzPXRoaXMuX3RvTnVtYmVyQXJyYXkodGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5VVjZLaW5kKSksdGhpcy5pc1ZlcnRleEJ1ZmZlclVwZGF0YWJsZShnLlVWNktpbmQpJiYoZS51djZzLl91cGRhdGFibGU9ITApKSx0aGlzLmlzVmVydGljZXNEYXRhUHJlc2VudChnLkNvbG9yS2luZCkmJihlLmNvbG9ycz10aGlzLl90b051bWJlckFycmF5KHRoaXMuZ2V0VmVydGljZXNEYXRhKGcuQ29sb3JLaW5kKSksdGhpcy5pc1ZlcnRleEJ1ZmZlclVwZGF0YWJsZShnLkNvbG9yS2luZCkmJihlLmNvbG9ycy5fdXBkYXRhYmxlPSEwKSksdGhpcy5pc1ZlcnRpY2VzRGF0YVByZXNlbnQoZy5NYXRyaWNlc0luZGljZXNLaW5kKSYmKGUubWF0cmljZXNJbmRpY2VzPXRoaXMuX3RvTnVtYmVyQXJyYXkodGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5NYXRyaWNlc0luZGljZXNLaW5kKSksZS5tYXRyaWNlc0luZGljZXMuX2lzRXhwYW5kZWQ9ITAsdGhpcy5pc1ZlcnRleEJ1ZmZlclVwZGF0YWJsZShnLk1hdHJpY2VzSW5kaWNlc0tpbmQpJiYoZS5tYXRyaWNlc0luZGljZXMuX3VwZGF0YWJsZT0hMCkpLHRoaXMuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuTWF0cmljZXNXZWlnaHRzS2luZCkmJihlLm1hdHJpY2VzV2VpZ2h0cz10aGlzLl90b051bWJlckFycmF5KHRoaXMuZ2V0VmVydGljZXNEYXRhKGcuTWF0cmljZXNXZWlnaHRzS2luZCkpLHRoaXMuaXNWZXJ0ZXhCdWZmZXJVcGRhdGFibGUoZy5NYXRyaWNlc1dlaWdodHNLaW5kKSYmKGUubWF0cmljZXNXZWlnaHRzLl91cGRhdGFibGU9ITApKSxlLmluZGljZXM9dGhpcy5fdG9OdW1iZXJBcnJheSh0aGlzLmdldEluZGljZXMoKSksZX1zdGF0aWMgRXh0cmFjdEZyb21NZXNoKGUsdCl7Y29uc3QgaT1lLl9nZW9tZXRyeTtyZXR1cm4gaT9pLmNvcHkodCk6bnVsbH1zdGF0aWMgUmFuZG9tSWQoKXtyZXR1cm4gSC5SYW5kb21JZCgpfXN0YXRpYyBfR2V0R2VvbWV0cnlCeUxvYWRlZFVuaXF1ZUlkKGUsdCl7Zm9yKGxldCBpPTA7aTx0Lmdlb21ldHJpZXMubGVuZ3RoO2krKylpZih0Lmdlb21ldHJpZXNbaV0uX2xvYWRlZFVuaXF1ZUlkPT09ZSlyZXR1cm4gdC5nZW9tZXRyaWVzW2ldO3JldHVybiBudWxsfXN0YXRpYyBfSW1wb3J0R2VvbWV0cnkoZSx0KXtjb25zdCBpPXQuZ2V0U2NlbmUoKSxzPWUuZ2VvbWV0cnlVbmlxdWVJZCxyPWUuZ2VvbWV0cnlJZDtpZihzfHxyKXtjb25zdCBuPXM/dGhpcy5fR2V0R2VvbWV0cnlCeUxvYWRlZFVuaXF1ZUlkKHMsaSk6aS5nZXRHZW9tZXRyeUJ5SWQocik7biYmbi5hcHBseVRvTWVzaCh0KX1lbHNlIGlmKGUgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcil7Y29uc3Qgbj10Ll9iaW5hcnlJbmZvO2lmKG4ucG9zaXRpb25zQXR0ckRlc2MmJm4ucG9zaXRpb25zQXR0ckRlc2MuY291bnQ+MCl7Y29uc3QgYT1uZXcgRmxvYXQzMkFycmF5KGUsbi5wb3NpdGlvbnNBdHRyRGVzYy5vZmZzZXQsbi5wb3NpdGlvbnNBdHRyRGVzYy5jb3VudCk7dC5zZXRWZXJ0aWNlc0RhdGEoZy5Qb3NpdGlvbktpbmQsYSwhMSl9aWYobi5ub3JtYWxzQXR0ckRlc2MmJm4ubm9ybWFsc0F0dHJEZXNjLmNvdW50PjApe2NvbnN0IGE9bmV3IEZsb2F0MzJBcnJheShlLG4ubm9ybWFsc0F0dHJEZXNjLm9mZnNldCxuLm5vcm1hbHNBdHRyRGVzYy5jb3VudCk7dC5zZXRWZXJ0aWNlc0RhdGEoZy5Ob3JtYWxLaW5kLGEsITEpfWlmKG4udGFuZ2V0c0F0dHJEZXNjJiZuLnRhbmdldHNBdHRyRGVzYy5jb3VudD4wKXtjb25zdCBhPW5ldyBGbG9hdDMyQXJyYXkoZSxuLnRhbmdldHNBdHRyRGVzYy5vZmZzZXQsbi50YW5nZXRzQXR0ckRlc2MuY291bnQpO3Quc2V0VmVydGljZXNEYXRhKGcuVGFuZ2VudEtpbmQsYSwhMSl9aWYobi51dnNBdHRyRGVzYyYmbi51dnNBdHRyRGVzYy5jb3VudD4wKXtjb25zdCBhPW5ldyBGbG9hdDMyQXJyYXkoZSxuLnV2c0F0dHJEZXNjLm9mZnNldCxuLnV2c0F0dHJEZXNjLmNvdW50KTtpZihmdC5Vc2VPcGVuR0xPcmllbnRhdGlvbkZvclVWKWZvcihsZXQgbz0xO288YS5sZW5ndGg7bys9MilhW29dPTEtYVtvXTt0LnNldFZlcnRpY2VzRGF0YShnLlVWS2luZCxhLCExKX1pZihuLnV2czJBdHRyRGVzYyYmbi51dnMyQXR0ckRlc2MuY291bnQ+MCl7Y29uc3QgYT1uZXcgRmxvYXQzMkFycmF5KGUsbi51dnMyQXR0ckRlc2Mub2Zmc2V0LG4udXZzMkF0dHJEZXNjLmNvdW50KTtpZihmdC5Vc2VPcGVuR0xPcmllbnRhdGlvbkZvclVWKWZvcihsZXQgbz0xO288YS5sZW5ndGg7bys9MilhW29dPTEtYVtvXTt0LnNldFZlcnRpY2VzRGF0YShnLlVWMktpbmQsYSwhMSl9aWYobi51dnMzQXR0ckRlc2MmJm4udXZzM0F0dHJEZXNjLmNvdW50PjApe2NvbnN0IGE9bmV3IEZsb2F0MzJBcnJheShlLG4udXZzM0F0dHJEZXNjLm9mZnNldCxuLnV2czNBdHRyRGVzYy5jb3VudCk7aWYoZnQuVXNlT3BlbkdMT3JpZW50YXRpb25Gb3JVVilmb3IobGV0IG89MTtvPGEubGVuZ3RoO28rPTIpYVtvXT0xLWFbb107dC5zZXRWZXJ0aWNlc0RhdGEoZy5VVjNLaW5kLGEsITEpfWlmKG4udXZzNEF0dHJEZXNjJiZuLnV2czRBdHRyRGVzYy5jb3VudD4wKXtjb25zdCBhPW5ldyBGbG9hdDMyQXJyYXkoZSxuLnV2czRBdHRyRGVzYy5vZmZzZXQsbi51dnM0QXR0ckRlc2MuY291bnQpO2lmKGZ0LlVzZU9wZW5HTE9yaWVudGF0aW9uRm9yVVYpZm9yKGxldCBvPTE7bzxhLmxlbmd0aDtvKz0yKWFbb109MS1hW29dO3Quc2V0VmVydGljZXNEYXRhKGcuVVY0S2luZCxhLCExKX1pZihuLnV2czVBdHRyRGVzYyYmbi51dnM1QXR0ckRlc2MuY291bnQ+MCl7Y29uc3QgYT1uZXcgRmxvYXQzMkFycmF5KGUsbi51dnM1QXR0ckRlc2Mub2Zmc2V0LG4udXZzNUF0dHJEZXNjLmNvdW50KTtpZihmdC5Vc2VPcGVuR0xPcmllbnRhdGlvbkZvclVWKWZvcihsZXQgbz0xO288YS5sZW5ndGg7bys9MilhW29dPTEtYVtvXTt0LnNldFZlcnRpY2VzRGF0YShnLlVWNUtpbmQsYSwhMSl9aWYobi51dnM2QXR0ckRlc2MmJm4udXZzNkF0dHJEZXNjLmNvdW50PjApe2NvbnN0IGE9bmV3IEZsb2F0MzJBcnJheShlLG4udXZzNkF0dHJEZXNjLm9mZnNldCxuLnV2czZBdHRyRGVzYy5jb3VudCk7aWYoZnQuVXNlT3BlbkdMT3JpZW50YXRpb25Gb3JVVilmb3IobGV0IG89MTtvPGEubGVuZ3RoO28rPTIpYVtvXT0xLWFbb107dC5zZXRWZXJ0aWNlc0RhdGEoZy5VVjZLaW5kLGEsITEpfWlmKG4uY29sb3JzQXR0ckRlc2MmJm4uY29sb3JzQXR0ckRlc2MuY291bnQ+MCl7Y29uc3QgYT1uZXcgRmxvYXQzMkFycmF5KGUsbi5jb2xvcnNBdHRyRGVzYy5vZmZzZXQsbi5jb2xvcnNBdHRyRGVzYy5jb3VudCk7dC5zZXRWZXJ0aWNlc0RhdGEoZy5Db2xvcktpbmQsYSwhMSxuLmNvbG9yc0F0dHJEZXNjLnN0cmlkZSl9aWYobi5tYXRyaWNlc0luZGljZXNBdHRyRGVzYyYmbi5tYXRyaWNlc0luZGljZXNBdHRyRGVzYy5jb3VudD4wKXtjb25zdCBhPW5ldyBJbnQzMkFycmF5KGUsbi5tYXRyaWNlc0luZGljZXNBdHRyRGVzYy5vZmZzZXQsbi5tYXRyaWNlc0luZGljZXNBdHRyRGVzYy5jb3VudCksbz1bXTtmb3IobGV0IGg9MDtoPGEubGVuZ3RoO2grKyl7Y29uc3QgbD1hW2hdO28ucHVzaChsJjI1NSksby5wdXNoKChsJjY1MjgwKT4+OCksby5wdXNoKChsJjE2NzExNjgwKT4+MTYpLG8ucHVzaChsPj4yNCYyNTUpfXQuc2V0VmVydGljZXNEYXRhKGcuTWF0cmljZXNJbmRpY2VzS2luZCxvLCExKX1pZihuLm1hdHJpY2VzSW5kaWNlc0V4dHJhQXR0ckRlc2MmJm4ubWF0cmljZXNJbmRpY2VzRXh0cmFBdHRyRGVzYy5jb3VudD4wKXtjb25zdCBhPW5ldyBJbnQzMkFycmF5KGUsbi5tYXRyaWNlc0luZGljZXNFeHRyYUF0dHJEZXNjLm9mZnNldCxuLm1hdHJpY2VzSW5kaWNlc0V4dHJhQXR0ckRlc2MuY291bnQpLG89W107Zm9yKGxldCBoPTA7aDxhLmxlbmd0aDtoKyspe2NvbnN0IGw9YVtoXTtvLnB1c2gobCYyNTUpLG8ucHVzaCgobCY2NTI4MCk+PjgpLG8ucHVzaCgobCYxNjcxMTY4MCk+PjE2KSxvLnB1c2gobD4+MjQmMjU1KX10LnNldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzSW5kaWNlc0V4dHJhS2luZCxvLCExKX1pZihuLm1hdHJpY2VzV2VpZ2h0c0F0dHJEZXNjJiZuLm1hdHJpY2VzV2VpZ2h0c0F0dHJEZXNjLmNvdW50PjApe2NvbnN0IGE9bmV3IEZsb2F0MzJBcnJheShlLG4ubWF0cmljZXNXZWlnaHRzQXR0ckRlc2Mub2Zmc2V0LG4ubWF0cmljZXNXZWlnaHRzQXR0ckRlc2MuY291bnQpO3Quc2V0VmVydGljZXNEYXRhKGcuTWF0cmljZXNXZWlnaHRzS2luZCxhLCExKX1pZihuLmluZGljZXNBdHRyRGVzYyYmbi5pbmRpY2VzQXR0ckRlc2MuY291bnQ+MCl7Y29uc3QgYT1uZXcgSW50MzJBcnJheShlLG4uaW5kaWNlc0F0dHJEZXNjLm9mZnNldCxuLmluZGljZXNBdHRyRGVzYy5jb3VudCk7dC5zZXRJbmRpY2VzKGEsbnVsbCl9aWYobi5zdWJNZXNoZXNBdHRyRGVzYyYmbi5zdWJNZXNoZXNBdHRyRGVzYy5jb3VudD4wKXtjb25zdCBhPW5ldyBJbnQzMkFycmF5KGUsbi5zdWJNZXNoZXNBdHRyRGVzYy5vZmZzZXQsbi5zdWJNZXNoZXNBdHRyRGVzYy5jb3VudCo1KTt0LnN1Yk1lc2hlcz1bXTtmb3IobGV0IG89MDtvPG4uc3ViTWVzaGVzQXR0ckRlc2MuY291bnQ7bysrKXtjb25zdCBoPWFbbyo1KzBdLGw9YVtvKjUrMV0sdT1hW28qNSsyXSxkPWFbbyo1KzNdLGY9YVtvKjUrNF07dnQuQWRkVG9NZXNoKGgsbCx1LGQsZix0KX19fWVsc2UgaWYoZS5wb3NpdGlvbnMmJmUubm9ybWFscyYmZS5pbmRpY2VzKXtpZih0LnNldFZlcnRpY2VzRGF0YShnLlBvc2l0aW9uS2luZCxlLnBvc2l0aW9ucyxlLnBvc2l0aW9ucy5fdXBkYXRhYmxlKSx0LnNldFZlcnRpY2VzRGF0YShnLk5vcm1hbEtpbmQsZS5ub3JtYWxzLGUubm9ybWFscy5fdXBkYXRhYmxlKSxlLnRhbmdlbnRzJiZ0LnNldFZlcnRpY2VzRGF0YShnLlRhbmdlbnRLaW5kLGUudGFuZ2VudHMsZS50YW5nZW50cy5fdXBkYXRhYmxlKSxlLnV2cyYmdC5zZXRWZXJ0aWNlc0RhdGEoZy5VVktpbmQsZS51dnMsZS51dnMuX3VwZGF0YWJsZSksZS51dnMyJiZ0LnNldFZlcnRpY2VzRGF0YShnLlVWMktpbmQsZS51dnMyLGUudXZzMi5fdXBkYXRhYmxlKSxlLnV2czMmJnQuc2V0VmVydGljZXNEYXRhKGcuVVYzS2luZCxlLnV2czMsZS51dnMzLl91cGRhdGFibGUpLGUudXZzNCYmdC5zZXRWZXJ0aWNlc0RhdGEoZy5VVjRLaW5kLGUudXZzNCxlLnV2czQuX3VwZGF0YWJsZSksZS51dnM1JiZ0LnNldFZlcnRpY2VzRGF0YShnLlVWNUtpbmQsZS51dnM1LGUudXZzNS5fdXBkYXRhYmxlKSxlLnV2czYmJnQuc2V0VmVydGljZXNEYXRhKGcuVVY2S2luZCxlLnV2czYsZS51dnM2Ll91cGRhdGFibGUpLGUuY29sb3JzJiZ0LnNldFZlcnRpY2VzRGF0YShnLkNvbG9yS2luZCxtZS5DaGVja0NvbG9yczQoZS5jb2xvcnMsZS5wb3NpdGlvbnMubGVuZ3RoLzMpLGUuY29sb3JzLl91cGRhdGFibGUpLGUubWF0cmljZXNJbmRpY2VzKWlmKGUubWF0cmljZXNJbmRpY2VzLl9pc0V4cGFuZGVkKWRlbGV0ZSBlLm1hdHJpY2VzSW5kaWNlcy5faXNFeHBhbmRlZCx0LnNldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzSW5kaWNlc0tpbmQsZS5tYXRyaWNlc0luZGljZXMsZS5tYXRyaWNlc0luZGljZXMuX3VwZGF0YWJsZSk7ZWxzZXtjb25zdCBuPVtdO2ZvcihsZXQgYT0wO2E8ZS5tYXRyaWNlc0luZGljZXMubGVuZ3RoO2ErKyl7Y29uc3Qgbz1lLm1hdHJpY2VzSW5kaWNlc1thXTtuLnB1c2gobyYyNTUpLG4ucHVzaCgobyY2NTI4MCk+PjgpLG4ucHVzaCgobyYxNjcxMTY4MCk+PjE2KSxuLnB1c2gobz4+MjQmMjU1KX10LnNldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzSW5kaWNlc0tpbmQsbixlLm1hdHJpY2VzSW5kaWNlcy5fdXBkYXRhYmxlKX1pZihlLm1hdHJpY2VzSW5kaWNlc0V4dHJhKWlmKGUubWF0cmljZXNJbmRpY2VzRXh0cmEuX2lzRXhwYW5kZWQpZGVsZXRlIGUubWF0cmljZXNJbmRpY2VzLl9pc0V4cGFuZGVkLHQuc2V0VmVydGljZXNEYXRhKGcuTWF0cmljZXNJbmRpY2VzRXh0cmFLaW5kLGUubWF0cmljZXNJbmRpY2VzRXh0cmEsZS5tYXRyaWNlc0luZGljZXNFeHRyYS5fdXBkYXRhYmxlKTtlbHNle2NvbnN0IG49W107Zm9yKGxldCBhPTA7YTxlLm1hdHJpY2VzSW5kaWNlc0V4dHJhLmxlbmd0aDthKyspe2NvbnN0IG89ZS5tYXRyaWNlc0luZGljZXNFeHRyYVthXTtuLnB1c2gobyYyNTUpLG4ucHVzaCgobyY2NTI4MCk+PjgpLG4ucHVzaCgobyYxNjcxMTY4MCk+PjE2KSxuLnB1c2gobz4+MjQmMjU1KX10LnNldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzSW5kaWNlc0V4dHJhS2luZCxuLGUubWF0cmljZXNJbmRpY2VzRXh0cmEuX3VwZGF0YWJsZSl9ZS5tYXRyaWNlc1dlaWdodHMmJihhdC5fQ2xlYW5NYXRyaWNlc1dlaWdodHMoZSx0KSx0LnNldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzV2VpZ2h0c0tpbmQsZS5tYXRyaWNlc1dlaWdodHMsZS5tYXRyaWNlc1dlaWdodHMuX3VwZGF0YWJsZSkpLGUubWF0cmljZXNXZWlnaHRzRXh0cmEmJnQuc2V0VmVydGljZXNEYXRhKGcuTWF0cmljZXNXZWlnaHRzRXh0cmFLaW5kLGUubWF0cmljZXNXZWlnaHRzRXh0cmEsZS5tYXRyaWNlc1dlaWdodHMuX3VwZGF0YWJsZSksdC5zZXRJbmRpY2VzKGUuaW5kaWNlcyxudWxsKX1pZihlLnN1Yk1lc2hlcyl7dC5zdWJNZXNoZXM9W107Zm9yKGxldCBuPTA7bjxlLnN1Yk1lc2hlcy5sZW5ndGg7bisrKXtjb25zdCBhPWUuc3ViTWVzaGVzW25dO3Z0LkFkZFRvTWVzaChhLm1hdGVyaWFsSW5kZXgsYS52ZXJ0aWNlc1N0YXJ0LGEudmVydGljZXNDb3VudCxhLmluZGV4U3RhcnQsYS5pbmRleENvdW50LHQpfX10Ll9zaG91bGRHZW5lcmF0ZUZsYXRTaGFkaW5nJiYodC5jb252ZXJ0VG9GbGF0U2hhZGVkTWVzaCgpLHQuX3Nob3VsZEdlbmVyYXRlRmxhdFNoYWRpbmc9ITEpLHQuY29tcHV0ZVdvcmxkTWF0cml4KCEwKSxpLm9uTWVzaEltcG9ydGVkT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModCl9c3RhdGljIF9DbGVhbk1hdHJpY2VzV2VpZ2h0cyhlLHQpe2lmKCFPZS5DbGVhbkJvbmVNYXRyaXhXZWlnaHRzKXJldHVybjtsZXQgcz0wO2lmKGUuc2tlbGV0b25JZD4tMSl7Y29uc3QgdT10LmdldFNjZW5lKCkuZ2V0TGFzdFNrZWxldG9uQnlJZChlLnNrZWxldG9uSWQpO2lmKCF1KXJldHVybjtzPXUuYm9uZXMubGVuZ3RofWVsc2UgcmV0dXJuO2NvbnN0IHI9dC5nZXRWZXJ0aWNlc0RhdGEoZy5NYXRyaWNlc0luZGljZXNLaW5kKSxuPXQuZ2V0VmVydGljZXNEYXRhKGcuTWF0cmljZXNJbmRpY2VzRXh0cmFLaW5kKSxhPWUubWF0cmljZXNXZWlnaHRzLG89ZS5tYXRyaWNlc1dlaWdodHNFeHRyYSxoPWUubnVtQm9uZUluZmx1ZW5jZXIsbD1hLmxlbmd0aDtmb3IobGV0IHU9MDt1PGw7dSs9NCl7bGV0IGQ9MCxmPS0xO2ZvcihsZXQgXz0wO188NDtfKyspe2NvbnN0IEU9YVt1K19dO2QrPUUsRTwuMDAxJiZmPDAmJihmPV8pfWlmKG8pZm9yKGxldCBfPTA7Xzw0O18rKyl7Y29uc3QgRT1vW3UrX107ZCs9RSxFPC4wMDEmJmY8MCYmKGY9Xys0KX1pZigoZjwwfHxmPmgtMSkmJihmPWgtMSksZD4uMDAxKXtjb25zdCBfPTEvZDtmb3IobGV0IEU9MDtFPDQ7RSsrKWFbdStFXSo9XztpZihvKWZvcihsZXQgRT0wO0U8NDtFKyspb1t1K0VdKj1ffWVsc2UgZj49ND8ob1t1K2YtNF09MS1kLG5bdStmLTRdPXMpOihhW3UrZl09MS1kLHJbdStmXT1zKX10LnNldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzSW5kaWNlc0tpbmQsciksZS5tYXRyaWNlc1dlaWdodHNFeHRyYSYmdC5zZXRWZXJ0aWNlc0RhdGEoZy5NYXRyaWNlc0luZGljZXNFeHRyYUtpbmQsbil9c3RhdGljIFBhcnNlKGUsdCxpKXtjb25zdCBzPW5ldyBhdChlLmlkLHQsdm9pZCAwLGUudXBkYXRhYmxlKTtyZXR1cm4gcy5fbG9hZGVkVW5pcXVlSWQ9ZS51bmlxdWVJZCxnZSYmZ2UuQWRkVGFnc1RvKHMsZS50YWdzKSxlLmRlbGF5TG9hZGluZ0ZpbGU/KHMuZGVsYXlMb2FkU3RhdGU9NCxzLmRlbGF5TG9hZGluZ0ZpbGU9aStlLmRlbGF5TG9hZGluZ0ZpbGUscy5fYm91bmRpbmdJbmZvPW5ldyBkdChwLkZyb21BcnJheShlLmJvdW5kaW5nQm94TWluaW11bSkscC5Gcm9tQXJyYXkoZS5ib3VuZGluZ0JveE1heGltdW0pKSxzLl9kZWxheUluZm89W10sZS5oYXNVVnMmJnMuX2RlbGF5SW5mby5wdXNoKGcuVVZLaW5kKSxlLmhhc1VWczImJnMuX2RlbGF5SW5mby5wdXNoKGcuVVYyS2luZCksZS5oYXNVVnMzJiZzLl9kZWxheUluZm8ucHVzaChnLlVWM0tpbmQpLGUuaGFzVVZzNCYmcy5fZGVsYXlJbmZvLnB1c2goZy5VVjRLaW5kKSxlLmhhc1VWczUmJnMuX2RlbGF5SW5mby5wdXNoKGcuVVY1S2luZCksZS5oYXNVVnM2JiZzLl9kZWxheUluZm8ucHVzaChnLlVWNktpbmQpLGUuaGFzQ29sb3JzJiZzLl9kZWxheUluZm8ucHVzaChnLkNvbG9yS2luZCksZS5oYXNNYXRyaWNlc0luZGljZXMmJnMuX2RlbGF5SW5mby5wdXNoKGcuTWF0cmljZXNJbmRpY2VzS2luZCksZS5oYXNNYXRyaWNlc1dlaWdodHMmJnMuX2RlbGF5SW5mby5wdXNoKGcuTWF0cmljZXNXZWlnaHRzS2luZCkscy5fZGVsYXlMb2FkaW5nRnVuY3Rpb249ZWUuSW1wb3J0VmVydGV4RGF0YSk6ZWUuSW1wb3J0VmVydGV4RGF0YShlLHMpLHQucHVzaEdlb21ldHJ5KHMsITApLHN9fXZhciBWdDsoZnVuY3Rpb24oYyl7Y1tjLkxPQ0FMPTBdPSJMT0NBTCIsY1tjLldPUkxEPTFdPSJXT1JMRCIsY1tjLkJPTkU9Ml09IkJPTkUifSkoVnR8fChWdD17fSkpO2NsYXNzIF9pe31faS5YPW5ldyBwKDEsMCwwKSxfaS5ZPW5ldyBwKDAsMSwwKSxfaS5aPW5ldyBwKDAsMCwxKTt2YXIgQ3I7KGZ1bmN0aW9uKGMpe2NbYy5YPTBdPSJYIixjW2MuWT0xXT0iWSIsY1tjLlo9Ml09IloifSkoQ3J8fChDcj17fSkpO2NsYXNzIEogZXh0ZW5kcyB6ZXtjb25zdHJ1Y3RvcihlLHQ9bnVsbCxpPSEwKXtzdXBlcihlLHQpLHRoaXMuX2ZvcndhcmQ9bmV3IHAoMCwwLDEpLHRoaXMuX3VwPW5ldyBwKDAsMSwwKSx0aGlzLl9yaWdodD1uZXcgcCgxLDAsMCksdGhpcy5fcG9zaXRpb249cC5aZXJvKCksdGhpcy5fcm90YXRpb249cC5aZXJvKCksdGhpcy5fcm90YXRpb25RdWF0ZXJuaW9uPW51bGwsdGhpcy5fc2NhbGluZz1wLk9uZSgpLHRoaXMuX3RyYW5zZm9ybVRvQm9uZVJlZmVyYWw9bnVsbCx0aGlzLl9pc0Fic29sdXRlU3luY2VkPSExLHRoaXMuX2JpbGxib2FyZE1vZGU9Si5CSUxMQk9BUkRNT0RFX05PTkUsdGhpcy5fcHJlc2VydmVQYXJlbnRSb3RhdGlvbkZvckJpbGxib2FyZD0hMSx0aGlzLnNjYWxpbmdEZXRlcm1pbmFudD0xLHRoaXMuX2luZmluaXRlRGlzdGFuY2U9ITEsdGhpcy5pZ25vcmVOb25Vbmlmb3JtU2NhbGluZz0hMSx0aGlzLnJlSW50ZWdyYXRlUm90YXRpb25JbnRvUm90YXRpb25RdWF0ZXJuaW9uPSExLHRoaXMuX3Bvc2VNYXRyaXg9bnVsbCx0aGlzLl9sb2NhbE1hdHJpeD14Llplcm8oKSx0aGlzLl91c2VQaXZvdE1hdHJpeD0hMSx0aGlzLl9hYnNvbHV0ZVBvc2l0aW9uPXAuWmVybygpLHRoaXMuX2Fic29sdXRlU2NhbGluZz1wLlplcm8oKSx0aGlzLl9hYnNvbHV0ZVJvdGF0aW9uUXVhdGVybmlvbj1aLklkZW50aXR5KCksdGhpcy5fcGl2b3RNYXRyaXg9eC5JZGVudGl0eSgpLHRoaXMuX3Bvc3RNdWx0aXBseVBpdm90TWF0cml4PSExLHRoaXMuX2lzV29ybGRNYXRyaXhGcm96ZW49ITEsdGhpcy5faW5kZXhJblNjZW5lVHJhbnNmb3JtTm9kZXNBcnJheT0tMSx0aGlzLm9uQWZ0ZXJXb3JsZE1hdHJpeFVwZGF0ZU9ic2VydmFibGU9bmV3IEYsdGhpcy5fbm9uVW5pZm9ybVNjYWxpbmc9ITEsaSYmdGhpcy5nZXRTY2VuZSgpLmFkZFRyYW5zZm9ybU5vZGUodGhpcyl9Z2V0IGJpbGxib2FyZE1vZGUoKXtyZXR1cm4gdGhpcy5fYmlsbGJvYXJkTW9kZX1zZXQgYmlsbGJvYXJkTW9kZShlKXt0aGlzLl9iaWxsYm9hcmRNb2RlIT09ZSYmKHRoaXMuX2JpbGxib2FyZE1vZGU9ZSl9Z2V0IHByZXNlcnZlUGFyZW50Um90YXRpb25Gb3JCaWxsYm9hcmQoKXtyZXR1cm4gdGhpcy5fcHJlc2VydmVQYXJlbnRSb3RhdGlvbkZvckJpbGxib2FyZH1zZXQgcHJlc2VydmVQYXJlbnRSb3RhdGlvbkZvckJpbGxib2FyZChlKXtlIT09dGhpcy5fcHJlc2VydmVQYXJlbnRSb3RhdGlvbkZvckJpbGxib2FyZCYmKHRoaXMuX3ByZXNlcnZlUGFyZW50Um90YXRpb25Gb3JCaWxsYm9hcmQ9ZSl9Z2V0IGluZmluaXRlRGlzdGFuY2UoKXtyZXR1cm4gdGhpcy5faW5maW5pdGVEaXN0YW5jZX1zZXQgaW5maW5pdGVEaXN0YW5jZShlKXt0aGlzLl9pbmZpbml0ZURpc3RhbmNlIT09ZSYmKHRoaXMuX2luZmluaXRlRGlzdGFuY2U9ZSl9Z2V0Q2xhc3NOYW1lKCl7cmV0dXJuIlRyYW5zZm9ybU5vZGUifWdldCBwb3NpdGlvbigpe3JldHVybiB0aGlzLl9wb3NpdGlvbn1zZXQgcG9zaXRpb24oZSl7dGhpcy5fcG9zaXRpb249ZSx0aGlzLl9pc0RpcnR5PSEwfWlzVXNpbmdQaXZvdE1hdHJpeCgpe3JldHVybiB0aGlzLl91c2VQaXZvdE1hdHJpeH1nZXQgcm90YXRpb24oKXtyZXR1cm4gdGhpcy5fcm90YXRpb259c2V0IHJvdGF0aW9uKGUpe3RoaXMuX3JvdGF0aW9uPWUsdGhpcy5fcm90YXRpb25RdWF0ZXJuaW9uPW51bGwsdGhpcy5faXNEaXJ0eT0hMH1nZXQgc2NhbGluZygpe3JldHVybiB0aGlzLl9zY2FsaW5nfXNldCBzY2FsaW5nKGUpe3RoaXMuX3NjYWxpbmc9ZSx0aGlzLl9pc0RpcnR5PSEwfWdldCByb3RhdGlvblF1YXRlcm5pb24oKXtyZXR1cm4gdGhpcy5fcm90YXRpb25RdWF0ZXJuaW9ufXNldCByb3RhdGlvblF1YXRlcm5pb24oZSl7dGhpcy5fcm90YXRpb25RdWF0ZXJuaW9uPWUsZSYmdGhpcy5fcm90YXRpb24uc2V0QWxsKDApLHRoaXMuX2lzRGlydHk9ITB9Z2V0IGZvcndhcmQoKXtyZXR1cm4gcC5UcmFuc2Zvcm1Ob3JtYWxGcm9tRmxvYXRzVG9SZWYoMCwwLHRoaXMuZ2V0U2NlbmUoKS51c2VSaWdodEhhbmRlZFN5c3RlbT8tMToxLHRoaXMuZ2V0V29ybGRNYXRyaXgoKSx0aGlzLl9mb3J3YXJkKSx0aGlzLl9mb3J3YXJkLm5vcm1hbGl6ZSgpfWdldCB1cCgpe3JldHVybiBwLlRyYW5zZm9ybU5vcm1hbEZyb21GbG9hdHNUb1JlZigwLDEsMCx0aGlzLmdldFdvcmxkTWF0cml4KCksdGhpcy5fdXApLHRoaXMuX3VwLm5vcm1hbGl6ZSgpfWdldCByaWdodCgpe3JldHVybiBwLlRyYW5zZm9ybU5vcm1hbEZyb21GbG9hdHNUb1JlZih0aGlzLmdldFNjZW5lKCkudXNlUmlnaHRIYW5kZWRTeXN0ZW0/LTE6MSwwLDAsdGhpcy5nZXRXb3JsZE1hdHJpeCgpLHRoaXMuX3JpZ2h0KSx0aGlzLl9yaWdodC5ub3JtYWxpemUoKX11cGRhdGVQb3NlTWF0cml4KGUpe3JldHVybiB0aGlzLl9wb3NlTWF0cml4Pyh0aGlzLl9wb3NlTWF0cml4LmNvcHlGcm9tKGUpLHRoaXMpOih0aGlzLl9wb3NlTWF0cml4PWUuY2xvbmUoKSx0aGlzKX1nZXRQb3NlTWF0cml4KCl7cmV0dXJuIHRoaXMuX3Bvc2VNYXRyaXh8fCh0aGlzLl9wb3NlTWF0cml4PXguSWRlbnRpdHkoKSksdGhpcy5fcG9zZU1hdHJpeH1faXNTeW5jaHJvbml6ZWQoKXtjb25zdCBlPXRoaXMuX2NhY2hlO3JldHVybiEodGhpcy5fYmlsbGJvYXJkTW9kZSE9PWUuYmlsbGJvYXJkTW9kZXx8dGhpcy5fYmlsbGJvYXJkTW9kZSE9PUouQklMTEJPQVJETU9ERV9OT05FfHxlLnBpdm90TWF0cml4VXBkYXRlZHx8dGhpcy5faW5maW5pdGVEaXN0YW5jZXx8dGhpcy5fcG9zaXRpb24uX2lzRGlydHl8fHRoaXMuX3NjYWxpbmcuX2lzRGlydHl8fHRoaXMuX3JvdGF0aW9uUXVhdGVybmlvbiYmdGhpcy5fcm90YXRpb25RdWF0ZXJuaW9uLl9pc0RpcnR5fHx0aGlzLl9yb3RhdGlvbi5faXNEaXJ0eSl9X2luaXRDYWNoZSgpe3N1cGVyLl9pbml0Q2FjaGUoKTtjb25zdCBlPXRoaXMuX2NhY2hlO2UubG9jYWxNYXRyaXhVcGRhdGVkPSExLGUuYmlsbGJvYXJkTW9kZT0tMSxlLmluZmluaXRlRGlzdGFuY2U9ITF9Z2V0IGFic29sdXRlUG9zaXRpb24oKXtyZXR1cm4gdGhpcy5nZXRBYnNvbHV0ZVBvc2l0aW9uKCl9Z2V0IGFic29sdXRlU2NhbGluZygpe3JldHVybiB0aGlzLl9zeW5jQWJzb2x1dGVTY2FsaW5nQW5kUm90YXRpb24oKSx0aGlzLl9hYnNvbHV0ZVNjYWxpbmd9Z2V0IGFic29sdXRlUm90YXRpb25RdWF0ZXJuaW9uKCl7cmV0dXJuIHRoaXMuX3N5bmNBYnNvbHV0ZVNjYWxpbmdBbmRSb3RhdGlvbigpLHRoaXMuX2Fic29sdXRlUm90YXRpb25RdWF0ZXJuaW9ufXNldFByZVRyYW5zZm9ybU1hdHJpeChlKXtyZXR1cm4gdGhpcy5zZXRQaXZvdE1hdHJpeChlLCExKX1zZXRQaXZvdE1hdHJpeChlLHQ9ITApe3JldHVybiB0aGlzLl9waXZvdE1hdHJpeC5jb3B5RnJvbShlKSx0aGlzLl91c2VQaXZvdE1hdHJpeD0hdGhpcy5fcGl2b3RNYXRyaXguaXNJZGVudGl0eSgpLHRoaXMuX2NhY2hlLnBpdm90TWF0cml4VXBkYXRlZD0hMCx0aGlzLl9wb3N0TXVsdGlwbHlQaXZvdE1hdHJpeD10LHRoaXMuX3Bvc3RNdWx0aXBseVBpdm90TWF0cml4JiYodGhpcy5fcGl2b3RNYXRyaXhJbnZlcnNlP3RoaXMuX3Bpdm90TWF0cml4LmludmVydFRvUmVmKHRoaXMuX3Bpdm90TWF0cml4SW52ZXJzZSk6dGhpcy5fcGl2b3RNYXRyaXhJbnZlcnNlPXguSW52ZXJ0KHRoaXMuX3Bpdm90TWF0cml4KSksdGhpc31nZXRQaXZvdE1hdHJpeCgpe3JldHVybiB0aGlzLl9waXZvdE1hdHJpeH1pbnN0YW50aWF0ZUhpZXJhcmNoeShlPW51bGwsdCxpKXtjb25zdCBzPXRoaXMuY2xvbmUoIkNsb25lIG9mICIrKHRoaXMubmFtZXx8dGhpcy5pZCksZXx8dGhpcy5wYXJlbnQsITApO3MmJmkmJmkodGhpcyxzKTtmb3IoY29uc3QgciBvZiB0aGlzLmdldENoaWxkVHJhbnNmb3JtTm9kZXMoITApKXIuaW5zdGFudGlhdGVIaWVyYXJjaHkocyx0LGkpO3JldHVybiBzfWZyZWV6ZVdvcmxkTWF0cml4KGU9bnVsbCx0PSExKXtyZXR1cm4gZT90Pyh0aGlzLl9yb3RhdGlvbi5zZXRBbGwoMCksdGhpcy5fcm90YXRpb25RdWF0ZXJuaW9uPXRoaXMuX3JvdGF0aW9uUXVhdGVybmlvbnx8Wi5JZGVudGl0eSgpLGUuZGVjb21wb3NlKHRoaXMuX3NjYWxpbmcsdGhpcy5fcm90YXRpb25RdWF0ZXJuaW9uLHRoaXMuX3Bvc2l0aW9uKSx0aGlzLmNvbXB1dGVXb3JsZE1hdHJpeCghMCkpOih0aGlzLl93b3JsZE1hdHJpeD1lLHRoaXMuX2Fic29sdXRlUG9zaXRpb24uY29weUZyb21GbG9hdHModGhpcy5fd29ybGRNYXRyaXgubVsxMl0sdGhpcy5fd29ybGRNYXRyaXgubVsxM10sdGhpcy5fd29ybGRNYXRyaXgubVsxNF0pLHRoaXMuX2FmdGVyQ29tcHV0ZVdvcmxkTWF0cml4KCkpOih0aGlzLl9pc1dvcmxkTWF0cml4RnJvemVuPSExLHRoaXMuY29tcHV0ZVdvcmxkTWF0cml4KCEwKSksdGhpcy5faXNEaXJ0eT0hMSx0aGlzLl9pc1dvcmxkTWF0cml4RnJvemVuPSEwLHRoaXN9dW5mcmVlemVXb3JsZE1hdHJpeCgpe3JldHVybiB0aGlzLl9pc1dvcmxkTWF0cml4RnJvemVuPSExLHRoaXMuY29tcHV0ZVdvcmxkTWF0cml4KCEwKSx0aGlzfWdldCBpc1dvcmxkTWF0cml4RnJvemVuKCl7cmV0dXJuIHRoaXMuX2lzV29ybGRNYXRyaXhGcm96ZW59Z2V0QWJzb2x1dGVQb3NpdGlvbigpe3JldHVybiB0aGlzLmNvbXB1dGVXb3JsZE1hdHJpeCgpLHRoaXMuX2Fic29sdXRlUG9zaXRpb259c2V0QWJzb2x1dGVQb3NpdGlvbihlKXtpZighZSlyZXR1cm4gdGhpcztsZXQgdCxpLHM7aWYoZS54PT09dm9pZCAwKXtpZihhcmd1bWVudHMubGVuZ3RoPDMpcmV0dXJuIHRoaXM7dD1hcmd1bWVudHNbMF0saT1hcmd1bWVudHNbMV0scz1hcmd1bWVudHNbMl19ZWxzZSB0PWUueCxpPWUueSxzPWUuejtpZih0aGlzLnBhcmVudCl7Y29uc3Qgcj1ELk1hdHJpeFswXTt0aGlzLnBhcmVudC5nZXRXb3JsZE1hdHJpeCgpLmludmVydFRvUmVmKHIpLHAuVHJhbnNmb3JtQ29vcmRpbmF0ZXNGcm9tRmxvYXRzVG9SZWYodCxpLHMscix0aGlzLnBvc2l0aW9uKX1lbHNlIHRoaXMucG9zaXRpb24ueD10LHRoaXMucG9zaXRpb24ueT1pLHRoaXMucG9zaXRpb24uej1zO3JldHVybiB0aGlzLl9hYnNvbHV0ZVBvc2l0aW9uLmNvcHlGcm9tKGUpLHRoaXN9c2V0UG9zaXRpb25XaXRoTG9jYWxWZWN0b3IoZSl7cmV0dXJuIHRoaXMuY29tcHV0ZVdvcmxkTWF0cml4KCksdGhpcy5wb3NpdGlvbj1wLlRyYW5zZm9ybU5vcm1hbChlLHRoaXMuX2xvY2FsTWF0cml4KSx0aGlzfWdldFBvc2l0aW9uRXhwcmVzc2VkSW5Mb2NhbFNwYWNlKCl7dGhpcy5jb21wdXRlV29ybGRNYXRyaXgoKTtjb25zdCBlPUQuTWF0cml4WzBdO3JldHVybiB0aGlzLl9sb2NhbE1hdHJpeC5pbnZlcnRUb1JlZihlKSxwLlRyYW5zZm9ybU5vcm1hbCh0aGlzLnBvc2l0aW9uLGUpfWxvY2FsbHlUcmFuc2xhdGUoZSl7cmV0dXJuIHRoaXMuY29tcHV0ZVdvcmxkTWF0cml4KCEwKSx0aGlzLnBvc2l0aW9uPXAuVHJhbnNmb3JtQ29vcmRpbmF0ZXMoZSx0aGlzLl9sb2NhbE1hdHJpeCksdGhpc31sb29rQXQoZSx0PTAsaT0wLHM9MCxyPVZ0LkxPQ0FMKXtjb25zdCBuPUouX0xvb2tBdFZlY3RvckNhY2hlLGE9cj09PVZ0LkxPQ0FMP3RoaXMucG9zaXRpb246dGhpcy5nZXRBYnNvbHV0ZVBvc2l0aW9uKCk7aWYoZS5zdWJ0cmFjdFRvUmVmKGEsbiksdGhpcy5zZXREaXJlY3Rpb24obix0LGkscykscj09PVZ0LldPUkxEJiZ0aGlzLnBhcmVudClpZih0aGlzLnJvdGF0aW9uUXVhdGVybmlvbil7Y29uc3Qgbz1ELk1hdHJpeFswXTt0aGlzLnJvdGF0aW9uUXVhdGVybmlvbi50b1JvdGF0aW9uTWF0cml4KG8pO2NvbnN0IGg9RC5NYXRyaXhbMV07dGhpcy5wYXJlbnQuZ2V0V29ybGRNYXRyaXgoKS5nZXRSb3RhdGlvbk1hdHJpeFRvUmVmKGgpLGguaW52ZXJ0KCksby5tdWx0aXBseVRvUmVmKGgsbyksdGhpcy5yb3RhdGlvblF1YXRlcm5pb24uZnJvbVJvdGF0aW9uTWF0cml4KG8pfWVsc2V7Y29uc3Qgbz1ELlF1YXRlcm5pb25bMF07Wi5Gcm9tRXVsZXJWZWN0b3JUb1JlZih0aGlzLnJvdGF0aW9uLG8pO2NvbnN0IGg9RC5NYXRyaXhbMF07by50b1JvdGF0aW9uTWF0cml4KGgpO2NvbnN0IGw9RC5NYXRyaXhbMV07dGhpcy5wYXJlbnQuZ2V0V29ybGRNYXRyaXgoKS5nZXRSb3RhdGlvbk1hdHJpeFRvUmVmKGwpLGwuaW52ZXJ0KCksaC5tdWx0aXBseVRvUmVmKGwsaCksby5mcm9tUm90YXRpb25NYXRyaXgoaCksby50b0V1bGVyQW5nbGVzVG9SZWYodGhpcy5yb3RhdGlvbil9cmV0dXJuIHRoaXN9Z2V0RGlyZWN0aW9uKGUpe2NvbnN0IHQ9cC5aZXJvKCk7cmV0dXJuIHRoaXMuZ2V0RGlyZWN0aW9uVG9SZWYoZSx0KSx0fWdldERpcmVjdGlvblRvUmVmKGUsdCl7cmV0dXJuIHAuVHJhbnNmb3JtTm9ybWFsVG9SZWYoZSx0aGlzLmdldFdvcmxkTWF0cml4KCksdCksdGhpc31zZXREaXJlY3Rpb24oZSx0PTAsaT0wLHM9MCl7Y29uc3Qgcj0tTWF0aC5hdGFuMihlLnosZS54KStNYXRoLlBJLzIsbj1NYXRoLnNxcnQoZS54KmUueCtlLnoqZS56KSxhPS1NYXRoLmF0YW4yKGUueSxuKTtyZXR1cm4gdGhpcy5yb3RhdGlvblF1YXRlcm5pb24/Wi5Sb3RhdGlvbllhd1BpdGNoUm9sbFRvUmVmKHIrdCxhK2kscyx0aGlzLnJvdGF0aW9uUXVhdGVybmlvbik6KHRoaXMucm90YXRpb24ueD1hK2ksdGhpcy5yb3RhdGlvbi55PXIrdCx0aGlzLnJvdGF0aW9uLno9cyksdGhpc31zZXRQaXZvdFBvaW50KGUsdD1WdC5MT0NBTCl7dGhpcy5nZXRTY2VuZSgpLmdldFJlbmRlcklkKCk9PTAmJnRoaXMuY29tcHV0ZVdvcmxkTWF0cml4KCEwKTtjb25zdCBpPXRoaXMuZ2V0V29ybGRNYXRyaXgoKTtpZih0PT1WdC5XT1JMRCl7Y29uc3Qgcz1ELk1hdHJpeFswXTtpLmludmVydFRvUmVmKHMpLGU9cC5UcmFuc2Zvcm1Db29yZGluYXRlcyhlLHMpfXJldHVybiB0aGlzLnNldFBpdm90TWF0cml4KHguVHJhbnNsYXRpb24oLWUueCwtZS55LC1lLnopLCEwKX1nZXRQaXZvdFBvaW50KCl7Y29uc3QgZT1wLlplcm8oKTtyZXR1cm4gdGhpcy5nZXRQaXZvdFBvaW50VG9SZWYoZSksZX1nZXRQaXZvdFBvaW50VG9SZWYoZSl7cmV0dXJuIGUueD0tdGhpcy5fcGl2b3RNYXRyaXgubVsxMl0sZS55PS10aGlzLl9waXZvdE1hdHJpeC5tWzEzXSxlLno9LXRoaXMuX3Bpdm90TWF0cml4Lm1bMTRdLHRoaXN9Z2V0QWJzb2x1dGVQaXZvdFBvaW50KCl7Y29uc3QgZT1wLlplcm8oKTtyZXR1cm4gdGhpcy5nZXRBYnNvbHV0ZVBpdm90UG9pbnRUb1JlZihlKSxlfWdldEFic29sdXRlUGl2b3RQb2ludFRvUmVmKGUpe3JldHVybiB0aGlzLmdldFBpdm90UG9pbnRUb1JlZihlKSxwLlRyYW5zZm9ybUNvb3JkaW5hdGVzVG9SZWYoZSx0aGlzLmdldFdvcmxkTWF0cml4KCksZSksdGhpc31tYXJrQXNEaXJ0eShlKXtpZih0aGlzLl9pc0RpcnR5KXJldHVybiB0aGlzO2lmKHRoaXMuX2NoaWxkcmVuKWZvcihjb25zdCB0IG9mIHRoaXMuX2NoaWxkcmVuKXQubWFya0FzRGlydHkoZSk7cmV0dXJuIHN1cGVyLm1hcmtBc0RpcnR5KGUpfXNldFBhcmVudChlLHQ9ITEsaT0hMSl7aWYoIWUmJiF0aGlzLnBhcmVudClyZXR1cm4gdGhpcztjb25zdCBzPUQuUXVhdGVybmlvblswXSxyPUQuVmVjdG9yM1swXSxuPUQuVmVjdG9yM1sxXSxhPUQuTWF0cml4WzFdO3guSWRlbnRpdHlUb1JlZihhKTtjb25zdCBvPUQuTWF0cml4WzBdO3RoaXMuY29tcHV0ZVdvcmxkTWF0cml4KCEwKTtsZXQgaD10aGlzLnJvdGF0aW9uUXVhdGVybmlvbjtyZXR1cm4gaHx8KGg9Si5fVG1wUm90YXRpb24sWi5Sb3RhdGlvbllhd1BpdGNoUm9sbFRvUmVmKHRoaXMuX3JvdGF0aW9uLnksdGhpcy5fcm90YXRpb24ueCx0aGlzLl9yb3RhdGlvbi56LGgpKSx4LkNvbXBvc2VUb1JlZih0aGlzLnNjYWxpbmcsaCx0aGlzLnBvc2l0aW9uLG8pLHRoaXMucGFyZW50JiZvLm11bHRpcGx5VG9SZWYodGhpcy5wYXJlbnQuY29tcHV0ZVdvcmxkTWF0cml4KCEwKSxvKSxlJiYoZS5jb21wdXRlV29ybGRNYXRyaXgoITApLmludmVydFRvUmVmKGEpLG8ubXVsdGlwbHlUb1JlZihhLG8pKSxvLmRlY29tcG9zZShuLHMscix0P3RoaXM6dm9pZCAwKSx0aGlzLnJvdGF0aW9uUXVhdGVybmlvbj90aGlzLnJvdGF0aW9uUXVhdGVybmlvbi5jb3B5RnJvbShzKTpzLnRvRXVsZXJBbmdsZXNUb1JlZih0aGlzLnJvdGF0aW9uKSx0aGlzLnNjYWxpbmcuY29weUZyb20obiksdGhpcy5wb3NpdGlvbi5jb3B5RnJvbShyKSx0aGlzLnBhcmVudD1lLGkmJnRoaXMuc2V0UGl2b3RNYXRyaXgoeC5JZGVudGl0eSgpKSx0aGlzfWdldCBub25Vbmlmb3JtU2NhbGluZygpe3JldHVybiB0aGlzLl9ub25Vbmlmb3JtU2NhbGluZ31fdXBkYXRlTm9uVW5pZm9ybVNjYWxpbmdTdGF0ZShlKXtyZXR1cm4gdGhpcy5fbm9uVW5pZm9ybVNjYWxpbmc9PT1lPyExOih0aGlzLl9ub25Vbmlmb3JtU2NhbGluZz1lLCEwKX1hdHRhY2hUb0JvbmUoZSx0KXtyZXR1cm4gdGhpcy5fY3VycmVudFBhcmVudFdoZW5BdHRhY2hpbmdUb0JvbmU9dGhpcy5wYXJlbnQsdGhpcy5fdHJhbnNmb3JtVG9Cb25lUmVmZXJhbD10LHRoaXMucGFyZW50PWUsZS5nZXRTa2VsZXRvbigpLnByZXBhcmUoKSxlLmdldFdvcmxkTWF0cml4KCkuZGV0ZXJtaW5hbnQoKTwwJiYodGhpcy5zY2FsaW5nRGV0ZXJtaW5hbnQqPS0xKSx0aGlzfWRldGFjaEZyb21Cb25lKGU9ITEpe3JldHVybiB0aGlzLnBhcmVudD8odGhpcy5wYXJlbnQuZ2V0V29ybGRNYXRyaXgoKS5kZXRlcm1pbmFudCgpPDAmJih0aGlzLnNjYWxpbmdEZXRlcm1pbmFudCo9LTEpLHRoaXMuX3RyYW5zZm9ybVRvQm9uZVJlZmVyYWw9bnVsbCxlP3RoaXMucGFyZW50PXRoaXMuX2N1cnJlbnRQYXJlbnRXaGVuQXR0YWNoaW5nVG9Cb25lOnRoaXMucGFyZW50PW51bGwsdGhpcyk6KGUmJih0aGlzLnBhcmVudD10aGlzLl9jdXJyZW50UGFyZW50V2hlbkF0dGFjaGluZ1RvQm9uZSksdGhpcyl9cm90YXRlKGUsdCxpKXtlLm5vcm1hbGl6ZSgpLHRoaXMucm90YXRpb25RdWF0ZXJuaW9ufHwodGhpcy5yb3RhdGlvblF1YXRlcm5pb249dGhpcy5yb3RhdGlvbi50b1F1YXRlcm5pb24oKSx0aGlzLnJvdGF0aW9uLnNldEFsbCgwKSk7bGV0IHM7aWYoIWl8fGk9PT1WdC5MT0NBTClzPVouUm90YXRpb25BeGlzVG9SZWYoZSx0LEouX1JvdGF0aW9uQXhpc0NhY2hlKSx0aGlzLnJvdGF0aW9uUXVhdGVybmlvbi5tdWx0aXBseVRvUmVmKHMsdGhpcy5yb3RhdGlvblF1YXRlcm5pb24pO2Vsc2V7aWYodGhpcy5wYXJlbnQpe2NvbnN0IHI9RC5NYXRyaXhbMF07dGhpcy5wYXJlbnQuZ2V0V29ybGRNYXRyaXgoKS5pbnZlcnRUb1JlZihyKSxlPXAuVHJhbnNmb3JtTm9ybWFsKGUscil9cz1aLlJvdGF0aW9uQXhpc1RvUmVmKGUsdCxKLl9Sb3RhdGlvbkF4aXNDYWNoZSkscy5tdWx0aXBseVRvUmVmKHRoaXMucm90YXRpb25RdWF0ZXJuaW9uLHRoaXMucm90YXRpb25RdWF0ZXJuaW9uKX1yZXR1cm4gdGhpc31yb3RhdGVBcm91bmQoZSx0LGkpe3Qubm9ybWFsaXplKCksdGhpcy5yb3RhdGlvblF1YXRlcm5pb258fCh0aGlzLnJvdGF0aW9uUXVhdGVybmlvbj1aLlJvdGF0aW9uWWF3UGl0Y2hSb2xsKHRoaXMucm90YXRpb24ueSx0aGlzLnJvdGF0aW9uLngsdGhpcy5yb3RhdGlvbi56KSx0aGlzLnJvdGF0aW9uLnNldEFsbCgwKSk7Y29uc3Qgcz1ELlZlY3RvcjNbMF0scj1ELlZlY3RvcjNbMV0sbj1ELlZlY3RvcjNbMl0sYT1ELlF1YXRlcm5pb25bMF0sbz1ELk1hdHJpeFswXSxoPUQuTWF0cml4WzFdLGw9RC5NYXRyaXhbMl0sdT1ELk1hdHJpeFszXTtyZXR1cm4gZS5zdWJ0cmFjdFRvUmVmKHRoaXMucG9zaXRpb24scykseC5UcmFuc2xhdGlvblRvUmVmKHMueCxzLnkscy56LG8pLHguVHJhbnNsYXRpb25Ub1JlZigtcy54LC1zLnksLXMueixoKSx4LlJvdGF0aW9uQXhpc1RvUmVmKHQsaSxsKSxoLm11bHRpcGx5VG9SZWYobCx1KSx1Lm11bHRpcGx5VG9SZWYobyx1KSx1LmRlY29tcG9zZShyLGEsbiksdGhpcy5wb3NpdGlvbi5hZGRJblBsYWNlKG4pLGEubXVsdGlwbHlUb1JlZih0aGlzLnJvdGF0aW9uUXVhdGVybmlvbix0aGlzLnJvdGF0aW9uUXVhdGVybmlvbiksdGhpc310cmFuc2xhdGUoZSx0LGkpe2NvbnN0IHM9ZS5zY2FsZSh0KTtpZighaXx8aT09PVZ0LkxPQ0FMKXtjb25zdCByPXRoaXMuZ2V0UG9zaXRpb25FeHByZXNzZWRJbkxvY2FsU3BhY2UoKS5hZGQocyk7dGhpcy5zZXRQb3NpdGlvbldpdGhMb2NhbFZlY3RvcihyKX1lbHNlIHRoaXMuc2V0QWJzb2x1dGVQb3NpdGlvbih0aGlzLmdldEFic29sdXRlUG9zaXRpb24oKS5hZGQocykpO3JldHVybiB0aGlzfWFkZFJvdGF0aW9uKGUsdCxpKXtsZXQgczt0aGlzLnJvdGF0aW9uUXVhdGVybmlvbj9zPXRoaXMucm90YXRpb25RdWF0ZXJuaW9uOihzPUQuUXVhdGVybmlvblsxXSxaLlJvdGF0aW9uWWF3UGl0Y2hSb2xsVG9SZWYodGhpcy5yb3RhdGlvbi55LHRoaXMucm90YXRpb24ueCx0aGlzLnJvdGF0aW9uLnoscykpO2NvbnN0IHI9RC5RdWF0ZXJuaW9uWzBdO3JldHVybiBaLlJvdGF0aW9uWWF3UGl0Y2hSb2xsVG9SZWYodCxlLGkscikscy5tdWx0aXBseUluUGxhY2UociksdGhpcy5yb3RhdGlvblF1YXRlcm5pb258fHMudG9FdWxlckFuZ2xlc1RvUmVmKHRoaXMucm90YXRpb24pLHRoaXN9X2dldEVmZmVjdGl2ZVBhcmVudCgpe3JldHVybiB0aGlzLnBhcmVudH1jb21wdXRlV29ybGRNYXRyaXgoZSl7aWYodGhpcy5faXNXb3JsZE1hdHJpeEZyb3plbiYmIXRoaXMuX2lzRGlydHkpcmV0dXJuIHRoaXMuX3dvcmxkTWF0cml4O2NvbnN0IHQ9dGhpcy5nZXRTY2VuZSgpLmdldFJlbmRlcklkKCk7aWYoIXRoaXMuX2lzRGlydHkmJiFlJiYodGhpcy5fY3VycmVudFJlbmRlcklkPT09dHx8dGhpcy5pc1N5bmNocm9uaXplZCgpKSlyZXR1cm4gdGhpcy5fY3VycmVudFJlbmRlcklkPXQsdGhpcy5fd29ybGRNYXRyaXg7Y29uc3QgaT10aGlzLmdldFNjZW5lKCkuYWN0aXZlQ2FtZXJhLHM9KHRoaXMuX2JpbGxib2FyZE1vZGUmSi5CSUxMQk9BUkRNT0RFX1VTRV9QT1NJVElPTikhPT0wLHI9dGhpcy5fYmlsbGJvYXJkTW9kZSE9PUouQklMTEJPQVJETU9ERV9OT05FJiYhdGhpcy5wcmVzZXJ2ZVBhcmVudFJvdGF0aW9uRm9yQmlsbGJvYXJkO3RoaXMuX3VwZGF0ZUNhY2hlKCk7Y29uc3Qgbj10aGlzLl9jYWNoZTtuLnBpdm90TWF0cml4VXBkYXRlZD0hMSxuLmJpbGxib2FyZE1vZGU9dGhpcy5iaWxsYm9hcmRNb2RlLG4uaW5maW5pdGVEaXN0YW5jZT10aGlzLmluZmluaXRlRGlzdGFuY2Usbi5wYXJlbnQ9dGhpcy5fcGFyZW50Tm9kZSx0aGlzLl9jdXJyZW50UmVuZGVySWQ9dCx0aGlzLl9jaGlsZFVwZGF0ZUlkKz0xLHRoaXMuX2lzRGlydHk9ITEsdGhpcy5fcG9zaXRpb24uX2lzRGlydHk9ITEsdGhpcy5fcm90YXRpb24uX2lzRGlydHk9ITEsdGhpcy5fc2NhbGluZy5faXNEaXJ0eT0hMTtjb25zdCBhPXRoaXMuX2dldEVmZmVjdGl2ZVBhcmVudCgpLG89Si5fVG1wU2NhbGluZztsZXQgaD10aGlzLl9wb3NpdGlvbjtpZih0aGlzLl9pbmZpbml0ZURpc3RhbmNlJiYhdGhpcy5wYXJlbnQmJmkpe2NvbnN0IHU9aS5nZXRXb3JsZE1hdHJpeCgpLGQ9bmV3IHAodS5tWzEyXSx1Lm1bMTNdLHUubVsxNF0pO2g9Si5fVG1wVHJhbnNsYXRpb24saC5jb3B5RnJvbUZsb2F0cyh0aGlzLl9wb3NpdGlvbi54K2QueCx0aGlzLl9wb3NpdGlvbi55K2QueSx0aGlzLl9wb3NpdGlvbi56K2Queil9by5jb3B5RnJvbUZsb2F0cyh0aGlzLl9zY2FsaW5nLngqdGhpcy5zY2FsaW5nRGV0ZXJtaW5hbnQsdGhpcy5fc2NhbGluZy55KnRoaXMuc2NhbGluZ0RldGVybWluYW50LHRoaXMuX3NjYWxpbmcueip0aGlzLnNjYWxpbmdEZXRlcm1pbmFudCk7bGV0IGw7aWYodGhpcy5fcm90YXRpb25RdWF0ZXJuaW9uPyh0aGlzLl9yb3RhdGlvblF1YXRlcm5pb24uX2lzRGlydHk9ITEsbD10aGlzLl9yb3RhdGlvblF1YXRlcm5pb24sdGhpcy5yZUludGVncmF0ZVJvdGF0aW9uSW50b1JvdGF0aW9uUXVhdGVybmlvbiYmdGhpcy5yb3RhdGlvbi5sZW5ndGhTcXVhcmVkKCkmJih0aGlzLl9yb3RhdGlvblF1YXRlcm5pb24ubXVsdGlwbHlJblBsYWNlKFouUm90YXRpb25ZYXdQaXRjaFJvbGwodGhpcy5fcm90YXRpb24ueSx0aGlzLl9yb3RhdGlvbi54LHRoaXMuX3JvdGF0aW9uLnopKSx0aGlzLl9yb3RhdGlvbi5jb3B5RnJvbUZsb2F0cygwLDAsMCkpKToobD1KLl9UbXBSb3RhdGlvbixaLlJvdGF0aW9uWWF3UGl0Y2hSb2xsVG9SZWYodGhpcy5fcm90YXRpb24ueSx0aGlzLl9yb3RhdGlvbi54LHRoaXMuX3JvdGF0aW9uLnosbCkpLHRoaXMuX3VzZVBpdm90TWF0cml4KXtjb25zdCB1PUQuTWF0cml4WzFdO3guU2NhbGluZ1RvUmVmKG8ueCxvLnksby56LHUpO2NvbnN0IGQ9RC5NYXRyaXhbMF07bC50b1JvdGF0aW9uTWF0cml4KGQpLHRoaXMuX3Bpdm90TWF0cml4Lm11bHRpcGx5VG9SZWYodSxELk1hdHJpeFs0XSksRC5NYXRyaXhbNF0ubXVsdGlwbHlUb1JlZihkLHRoaXMuX2xvY2FsTWF0cml4KSx0aGlzLl9wb3N0TXVsdGlwbHlQaXZvdE1hdHJpeCYmdGhpcy5fbG9jYWxNYXRyaXgubXVsdGlwbHlUb1JlZih0aGlzLl9waXZvdE1hdHJpeEludmVyc2UsdGhpcy5fbG9jYWxNYXRyaXgpLHRoaXMuX2xvY2FsTWF0cml4LmFkZFRyYW5zbGF0aW9uRnJvbUZsb2F0cyhoLngsaC55LGgueil9ZWxzZSB4LkNvbXBvc2VUb1JlZihvLGwsaCx0aGlzLl9sb2NhbE1hdHJpeCk7aWYoYSYmYS5nZXRXb3JsZE1hdHJpeCl7aWYoZSYmYS5jb21wdXRlV29ybGRNYXRyaXgoZSkscil7dGhpcy5fdHJhbnNmb3JtVG9Cb25lUmVmZXJhbD9hLmdldFdvcmxkTWF0cml4KCkubXVsdGlwbHlUb1JlZih0aGlzLl90cmFuc2Zvcm1Ub0JvbmVSZWZlcmFsLmdldFdvcmxkTWF0cml4KCksRC5NYXRyaXhbN10pOkQuTWF0cml4WzddLmNvcHlGcm9tKGEuZ2V0V29ybGRNYXRyaXgoKSk7Y29uc3QgdT1ELlZlY3RvcjNbNV0sZD1ELlZlY3RvcjNbNl0sZj1ELlF1YXRlcm5pb25bMF07RC5NYXRyaXhbN10uZGVjb21wb3NlKGQsZix1KSx4LlNjYWxpbmdUb1JlZihkLngsZC55LGQueixELk1hdHJpeFs3XSksRC5NYXRyaXhbN10uc2V0VHJhbnNsYXRpb24odSksSi5CaWxsYm9hcmRVc2VQYXJlbnRPcmllbnRhdGlvbiYmKHRoaXMuX3Bvc2l0aW9uLmFwcGx5Um90YXRpb25RdWF0ZXJuaW9uVG9SZWYoZix1KSx0aGlzLl9sb2NhbE1hdHJpeC5zZXRUcmFuc2xhdGlvbih1KSksdGhpcy5fbG9jYWxNYXRyaXgubXVsdGlwbHlUb1JlZihELk1hdHJpeFs3XSx0aGlzLl93b3JsZE1hdHJpeCl9ZWxzZSB0aGlzLl90cmFuc2Zvcm1Ub0JvbmVSZWZlcmFsPyh0aGlzLl9sb2NhbE1hdHJpeC5tdWx0aXBseVRvUmVmKGEuZ2V0V29ybGRNYXRyaXgoKSxELk1hdHJpeFs2XSksRC5NYXRyaXhbNl0ubXVsdGlwbHlUb1JlZih0aGlzLl90cmFuc2Zvcm1Ub0JvbmVSZWZlcmFsLmdldFdvcmxkTWF0cml4KCksdGhpcy5fd29ybGRNYXRyaXgpKTp0aGlzLl9sb2NhbE1hdHJpeC5tdWx0aXBseVRvUmVmKGEuZ2V0V29ybGRNYXRyaXgoKSx0aGlzLl93b3JsZE1hdHJpeCk7dGhpcy5fbWFya1N5bmNlZFdpdGhQYXJlbnQoKX1lbHNlIHRoaXMuX3dvcmxkTWF0cml4LmNvcHlGcm9tKHRoaXMuX2xvY2FsTWF0cml4KTtpZihyJiZpJiZ0aGlzLmJpbGxib2FyZE1vZGUmJiFzKXtjb25zdCB1PUQuVmVjdG9yM1swXTtpZih0aGlzLl93b3JsZE1hdHJpeC5nZXRUcmFuc2xhdGlvblRvUmVmKHUpLEQuTWF0cml4WzFdLmNvcHlGcm9tKGkuZ2V0Vmlld01hdHJpeCgpKSxELk1hdHJpeFsxXS5zZXRUcmFuc2xhdGlvbkZyb21GbG9hdHMoMCwwLDApLEQuTWF0cml4WzFdLmludmVydFRvUmVmKEQuTWF0cml4WzBdKSwodGhpcy5iaWxsYm9hcmRNb2RlJkouQklMTEJPQVJETU9ERV9BTEwpIT09Si5CSUxMQk9BUkRNT0RFX0FMTCl7RC5NYXRyaXhbMF0uZGVjb21wb3NlKHZvaWQgMCxELlF1YXRlcm5pb25bMF0sdm9pZCAwKTtjb25zdCBkPUQuVmVjdG9yM1sxXTtELlF1YXRlcm5pb25bMF0udG9FdWxlckFuZ2xlc1RvUmVmKGQpLCh0aGlzLmJpbGxib2FyZE1vZGUmSi5CSUxMQk9BUkRNT0RFX1gpIT09Si5CSUxMQk9BUkRNT0RFX1gmJihkLng9MCksKHRoaXMuYmlsbGJvYXJkTW9kZSZKLkJJTExCT0FSRE1PREVfWSkhPT1KLkJJTExCT0FSRE1PREVfWSYmKGQueT0wKSwodGhpcy5iaWxsYm9hcmRNb2RlJkouQklMTEJPQVJETU9ERV9aKSE9PUouQklMTEJPQVJETU9ERV9aJiYoZC56PTApLHguUm90YXRpb25ZYXdQaXRjaFJvbGxUb1JlZihkLnksZC54LGQueixELk1hdHJpeFswXSl9dGhpcy5fd29ybGRNYXRyaXguc2V0VHJhbnNsYXRpb25Gcm9tRmxvYXRzKDAsMCwwKSx0aGlzLl93b3JsZE1hdHJpeC5tdWx0aXBseVRvUmVmKEQuTWF0cml4WzBdLHRoaXMuX3dvcmxkTWF0cml4KSx0aGlzLl93b3JsZE1hdHJpeC5zZXRUcmFuc2xhdGlvbihELlZlY3RvcjNbMF0pfWVsc2UgaWYociYmaSYmdGhpcy5iaWxsYm9hcmRNb2RlJiZzKXtjb25zdCB1PUQuVmVjdG9yM1swXTt0aGlzLl93b3JsZE1hdHJpeC5nZXRUcmFuc2xhdGlvblRvUmVmKHUpO2NvbnN0IGQ9aS5nbG9iYWxQb3NpdGlvbjt0aGlzLl93b3JsZE1hdHJpeC5pbnZlcnRUb1JlZihELk1hdHJpeFsxXSk7Y29uc3QgZj1ELlZlY3RvcjNbMV07cC5UcmFuc2Zvcm1Db29yZGluYXRlc1RvUmVmKGQsRC5NYXRyaXhbMV0sZiksZi5ub3JtYWxpemUoKTtjb25zdCBfPS1NYXRoLmF0YW4yKGYueixmLngpK01hdGguUEkvMixFPU1hdGguc3FydChmLngqZi54K2YueipmLnopLG09LU1hdGguYXRhbjIoZi55LEUpO2lmKFouUm90YXRpb25ZYXdQaXRjaFJvbGxUb1JlZihfLG0sMCxELlF1YXRlcm5pb25bMF0pLCh0aGlzLmJpbGxib2FyZE1vZGUmSi5CSUxMQk9BUkRNT0RFX0FMTCkhPT1KLkJJTExCT0FSRE1PREVfQUxMKXtjb25zdCB2PUQuVmVjdG9yM1sxXTtELlF1YXRlcm5pb25bMF0udG9FdWxlckFuZ2xlc1RvUmVmKHYpLCh0aGlzLmJpbGxib2FyZE1vZGUmSi5CSUxMQk9BUkRNT0RFX1gpIT09Si5CSUxMQk9BUkRNT0RFX1gmJih2Lng9MCksKHRoaXMuYmlsbGJvYXJkTW9kZSZKLkJJTExCT0FSRE1PREVfWSkhPT1KLkJJTExCT0FSRE1PREVfWSYmKHYueT0wKSwodGhpcy5iaWxsYm9hcmRNb2RlJkouQklMTEJPQVJETU9ERV9aKSE9PUouQklMTEJPQVJETU9ERV9aJiYodi56PTApLHguUm90YXRpb25ZYXdQaXRjaFJvbGxUb1JlZih2Lnksdi54LHYueixELk1hdHJpeFswXSl9ZWxzZSB4LkZyb21RdWF0ZXJuaW9uVG9SZWYoRC5RdWF0ZXJuaW9uWzBdLEQuTWF0cml4WzBdKTt0aGlzLl93b3JsZE1hdHJpeC5zZXRUcmFuc2xhdGlvbkZyb21GbG9hdHMoMCwwLDApLHRoaXMuX3dvcmxkTWF0cml4Lm11bHRpcGx5VG9SZWYoRC5NYXRyaXhbMF0sdGhpcy5fd29ybGRNYXRyaXgpLHRoaXMuX3dvcmxkTWF0cml4LnNldFRyYW5zbGF0aW9uKEQuVmVjdG9yM1swXSl9cmV0dXJuIHRoaXMuaWdub3JlTm9uVW5pZm9ybVNjYWxpbmc/dGhpcy5fdXBkYXRlTm9uVW5pZm9ybVNjYWxpbmdTdGF0ZSghMSk6dGhpcy5fc2NhbGluZy5pc05vblVuaWZvcm1XaXRoaW5FcHNpbG9uKDFlLTYpP3RoaXMuX3VwZGF0ZU5vblVuaWZvcm1TY2FsaW5nU3RhdGUoITApOmEmJmEuX25vblVuaWZvcm1TY2FsaW5nP3RoaXMuX3VwZGF0ZU5vblVuaWZvcm1TY2FsaW5nU3RhdGUoYS5fbm9uVW5pZm9ybVNjYWxpbmcpOnRoaXMuX3VwZGF0ZU5vblVuaWZvcm1TY2FsaW5nU3RhdGUoITEpLHRoaXMuX2FmdGVyQ29tcHV0ZVdvcmxkTWF0cml4KCksdGhpcy5fYWJzb2x1dGVQb3NpdGlvbi5jb3B5RnJvbUZsb2F0cyh0aGlzLl93b3JsZE1hdHJpeC5tWzEyXSx0aGlzLl93b3JsZE1hdHJpeC5tWzEzXSx0aGlzLl93b3JsZE1hdHJpeC5tWzE0XSksdGhpcy5faXNBYnNvbHV0ZVN5bmNlZD0hMSx0aGlzLm9uQWZ0ZXJXb3JsZE1hdHJpeFVwZGF0ZU9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLHRoaXMuX3Bvc2VNYXRyaXh8fCh0aGlzLl9wb3NlTWF0cml4PXguSW52ZXJ0KHRoaXMuX3dvcmxkTWF0cml4KSksdGhpcy5fd29ybGRNYXRyaXhEZXRlcm1pbmFudElzRGlydHk9ITAsdGhpcy5fd29ybGRNYXRyaXh9cmVzZXRMb2NhbE1hdHJpeChlPSEwKXtpZih0aGlzLmNvbXB1dGVXb3JsZE1hdHJpeCgpLGUpe2NvbnN0IHQ9dGhpcy5nZXRDaGlsZHJlbigpO2ZvcihsZXQgaT0wO2k8dC5sZW5ndGg7KytpKXtjb25zdCBzPXRbaV07aWYocyl7cy5jb21wdXRlV29ybGRNYXRyaXgoKTtjb25zdCByPUQuTWF0cml4WzBdO3MuX2xvY2FsTWF0cml4Lm11bHRpcGx5VG9SZWYodGhpcy5fbG9jYWxNYXRyaXgscik7Y29uc3Qgbj1ELlF1YXRlcm5pb25bMF07ci5kZWNvbXBvc2Uocy5zY2FsaW5nLG4scy5wb3NpdGlvbikscy5yb3RhdGlvblF1YXRlcm5pb24/cy5yb3RhdGlvblF1YXRlcm5pb24uY29weUZyb20obik6bi50b0V1bGVyQW5nbGVzVG9SZWYocy5yb3RhdGlvbil9fX10aGlzLnNjYWxpbmcuY29weUZyb21GbG9hdHMoMSwxLDEpLHRoaXMucG9zaXRpb24uY29weUZyb21GbG9hdHMoMCwwLDApLHRoaXMucm90YXRpb24uY29weUZyb21GbG9hdHMoMCwwLDApLHRoaXMucm90YXRpb25RdWF0ZXJuaW9uJiYodGhpcy5yb3RhdGlvblF1YXRlcm5pb249Wi5JZGVudGl0eSgpKSx0aGlzLl93b3JsZE1hdHJpeD14LklkZW50aXR5KCl9X2FmdGVyQ29tcHV0ZVdvcmxkTWF0cml4KCl7fXJlZ2lzdGVyQWZ0ZXJXb3JsZE1hdHJpeFVwZGF0ZShlKXtyZXR1cm4gdGhpcy5vbkFmdGVyV29ybGRNYXRyaXhVcGRhdGVPYnNlcnZhYmxlLmFkZChlKSx0aGlzfXVucmVnaXN0ZXJBZnRlcldvcmxkTWF0cml4VXBkYXRlKGUpe3JldHVybiB0aGlzLm9uQWZ0ZXJXb3JsZE1hdHJpeFVwZGF0ZU9ic2VydmFibGUucmVtb3ZlQ2FsbGJhY2soZSksdGhpc31nZXRQb3NpdGlvbkluQ2FtZXJhU3BhY2UoZT1udWxsKXtyZXR1cm4gZXx8KGU9dGhpcy5nZXRTY2VuZSgpLmFjdGl2ZUNhbWVyYSkscC5UcmFuc2Zvcm1Db29yZGluYXRlcyh0aGlzLmdldEFic29sdXRlUG9zaXRpb24oKSxlLmdldFZpZXdNYXRyaXgoKSl9Z2V0RGlzdGFuY2VUb0NhbWVyYShlPW51bGwpe3JldHVybiBlfHwoZT10aGlzLmdldFNjZW5lKCkuYWN0aXZlQ2FtZXJhKSx0aGlzLmdldEFic29sdXRlUG9zaXRpb24oKS5zdWJ0cmFjdChlLmdsb2JhbFBvc2l0aW9uKS5sZW5ndGgoKX1jbG9uZShlLHQsaSl7Y29uc3Qgcz1hZS5DbG9uZSgoKT0+bmV3IEooZSx0aGlzLmdldFNjZW5lKCkpLHRoaXMpO2lmKHMubmFtZT1lLHMuaWQ9ZSx0JiYocy5wYXJlbnQ9dCksIWkpe2NvbnN0IHI9dGhpcy5nZXREZXNjZW5kYW50cyghMCk7Zm9yKGxldCBuPTA7bjxyLmxlbmd0aDtuKyspe2NvbnN0IGE9cltuXTthLmNsb25lJiZhLmNsb25lKGUrIi4iK2EubmFtZSxzKX19cmV0dXJuIHN9c2VyaWFsaXplKGUpe2NvbnN0IHQ9YWUuU2VyaWFsaXplKHRoaXMsZSk7cmV0dXJuIHQudHlwZT10aGlzLmdldENsYXNzTmFtZSgpLHQudW5pcXVlSWQ9dGhpcy51bmlxdWVJZCx0aGlzLnBhcmVudCYmdGhpcy5wYXJlbnQuX3NlcmlhbGl6ZUFzUGFyZW50KHQpLHQubG9jYWxNYXRyaXg9dGhpcy5nZXRQaXZvdE1hdHJpeCgpLmFzQXJyYXkoKSx0LmlzRW5hYmxlZD10aGlzLmlzRW5hYmxlZCgpLHR9c3RhdGljIFBhcnNlKGUsdCxpKXtjb25zdCBzPWFlLlBhcnNlKCgpPT5uZXcgSihlLm5hbWUsdCksZSx0LGkpO3JldHVybiBlLmxvY2FsTWF0cml4P3Muc2V0UHJlVHJhbnNmb3JtTWF0cml4KHguRnJvbUFycmF5KGUubG9jYWxNYXRyaXgpKTplLnBpdm90TWF0cml4JiZzLnNldFBpdm90TWF0cml4KHguRnJvbUFycmF5KGUucGl2b3RNYXRyaXgpKSxzLnNldEVuYWJsZWQoZS5pc0VuYWJsZWQpLHMuX3dhaXRpbmdQYXJzZWRVbmlxdWVJZD1lLnVuaXF1ZUlkLGUucGFyZW50SWQhPT12b2lkIDAmJihzLl93YWl0aW5nUGFyZW50SWQ9ZS5wYXJlbnRJZCksZS5wYXJlbnRJbnN0YW5jZUluZGV4IT09dm9pZCAwJiYocy5fd2FpdGluZ1BhcmVudEluc3RhbmNlSW5kZXg9ZS5wYXJlbnRJbnN0YW5jZUluZGV4KSxzfWdldENoaWxkVHJhbnNmb3JtTm9kZXMoZSx0KXtjb25zdCBpPVtdO3JldHVybiB0aGlzLl9nZXREZXNjZW5kYW50cyhpLGUscz0+KCF0fHx0KHMpKSYmcyBpbnN0YW5jZW9mIEopLGl9ZGlzcG9zZShlLHQ9ITEpe2lmKHRoaXMuZ2V0U2NlbmUoKS5zdG9wQW5pbWF0aW9uKHRoaXMpLHRoaXMuZ2V0U2NlbmUoKS5yZW1vdmVUcmFuc2Zvcm1Ob2RlKHRoaXMpLHRoaXMuX3BhcmVudENvbnRhaW5lcil7Y29uc3QgaT10aGlzLl9wYXJlbnRDb250YWluZXIudHJhbnNmb3JtTm9kZXMuaW5kZXhPZih0aGlzKTtpPi0xJiZ0aGlzLl9wYXJlbnRDb250YWluZXIudHJhbnNmb3JtTm9kZXMuc3BsaWNlKGksMSksdGhpcy5fcGFyZW50Q29udGFpbmVyPW51bGx9aWYodGhpcy5vbkFmdGVyV29ybGRNYXRyaXhVcGRhdGVPYnNlcnZhYmxlLmNsZWFyKCksZSl7Y29uc3QgaT10aGlzLmdldENoaWxkVHJhbnNmb3JtTm9kZXMoITApO2Zvcihjb25zdCBzIG9mIGkpcy5wYXJlbnQ9bnVsbCxzLmNvbXB1dGVXb3JsZE1hdHJpeCghMCl9c3VwZXIuZGlzcG9zZShlLHQpfW5vcm1hbGl6ZVRvVW5pdEN1YmUoZT0hMCx0PSExLGkpe2xldCBzPW51bGwscj1udWxsO3QmJih0aGlzLnJvdGF0aW9uUXVhdGVybmlvbj8ocj10aGlzLnJvdGF0aW9uUXVhdGVybmlvbi5jbG9uZSgpLHRoaXMucm90YXRpb25RdWF0ZXJuaW9uLmNvcHlGcm9tRmxvYXRzKDAsMCwwLDEpKTp0aGlzLnJvdGF0aW9uJiYocz10aGlzLnJvdGF0aW9uLmNsb25lKCksdGhpcy5yb3RhdGlvbi5jb3B5RnJvbUZsb2F0cygwLDAsMCkpKTtjb25zdCBuPXRoaXMuZ2V0SGllcmFyY2h5Qm91bmRpbmdWZWN0b3JzKGUsaSksYT1uLm1heC5zdWJ0cmFjdChuLm1pbiksbz1NYXRoLm1heChhLngsYS55LGEueik7aWYobz09PTApcmV0dXJuIHRoaXM7Y29uc3QgaD0xL287cmV0dXJuIHRoaXMuc2NhbGluZy5zY2FsZUluUGxhY2UoaCksdCYmKHRoaXMucm90YXRpb25RdWF0ZXJuaW9uJiZyP3RoaXMucm90YXRpb25RdWF0ZXJuaW9uLmNvcHlGcm9tKHIpOnRoaXMucm90YXRpb24mJnMmJnRoaXMucm90YXRpb24uY29weUZyb20ocykpLHRoaXN9X3N5bmNBYnNvbHV0ZVNjYWxpbmdBbmRSb3RhdGlvbigpe3RoaXMuX2lzQWJzb2x1dGVTeW5jZWR8fCh0aGlzLl93b3JsZE1hdHJpeC5kZWNvbXBvc2UodGhpcy5fYWJzb2x1dGVTY2FsaW5nLHRoaXMuX2Fic29sdXRlUm90YXRpb25RdWF0ZXJuaW9uKSx0aGlzLl9pc0Fic29sdXRlU3luY2VkPSEwKX19Si5CSUxMQk9BUkRNT0RFX05PTkU9MCxKLkJJTExCT0FSRE1PREVfWD0xLEouQklMTEJPQVJETU9ERV9ZPTIsSi5CSUxMQk9BUkRNT0RFX1o9NCxKLkJJTExCT0FSRE1PREVfQUxMPTcsSi5CSUxMQk9BUkRNT0RFX1VTRV9QT1NJVElPTj0xMjgsSi5CaWxsYm9hcmRVc2VQYXJlbnRPcmllbnRhdGlvbj0hMSxKLl9UbXBSb3RhdGlvbj1aLlplcm8oKSxKLl9UbXBTY2FsaW5nPXAuWmVybygpLEouX1RtcFRyYW5zbGF0aW9uPXAuWmVybygpLEouX0xvb2tBdFZlY3RvckNhY2hlPW5ldyBwKDAsMCwwKSxKLl9Sb3RhdGlvbkF4aXNDYWNoZT1uZXcgWixUKFtCdCgicG9zaXRpb24iKV0sSi5wcm90b3R5cGUsIl9wb3NpdGlvbiIsdm9pZCAwKSxUKFtCdCgicm90YXRpb24iKV0sSi5wcm90b3R5cGUsIl9yb3RhdGlvbiIsdm9pZCAwKSxUKFtSbigicm90YXRpb25RdWF0ZXJuaW9uIildLEoucHJvdG90eXBlLCJfcm90YXRpb25RdWF0ZXJuaW9uIix2b2lkIDApLFQoW0J0KCJzY2FsaW5nIildLEoucHJvdG90eXBlLCJfc2NhbGluZyIsdm9pZCAwKSxUKFtSKCJiaWxsYm9hcmRNb2RlIildLEoucHJvdG90eXBlLCJfYmlsbGJvYXJkTW9kZSIsdm9pZCAwKSxUKFtSKCldLEoucHJvdG90eXBlLCJzY2FsaW5nRGV0ZXJtaW5hbnQiLHZvaWQgMCksVChbUigiaW5maW5pdGVEaXN0YW5jZSIpXSxKLnByb3RvdHlwZSwiX2luZmluaXRlRGlzdGFuY2UiLHZvaWQgMCksVChbUigpXSxKLnByb3RvdHlwZSwiaWdub3JlTm9uVW5pZm9ybVNjYWxpbmciLHZvaWQgMCksVChbUigpXSxKLnByb3RvdHlwZSwicmVJbnRlZ3JhdGVSb3RhdGlvbkludG9Sb3RhdGlvblF1YXRlcm5pb24iLHZvaWQgMCk7Y2xhc3MgVW57Y29uc3RydWN0b3IoKXt0aGlzLl9jaGVja0NvbGxpc2lvbnM9ITEsdGhpcy5fY29sbGlzaW9uTWFzaz0tMSx0aGlzLl9jb2xsaXNpb25Hcm91cD0tMSx0aGlzLl9zdXJyb3VuZGluZ01lc2hlcz1udWxsLHRoaXMuX2NvbGxpZGVyPW51bGwsdGhpcy5fb2xkUG9zaXRpb25Gb3JDb2xsaXNpb25zPW5ldyBwKDAsMCwwKSx0aGlzLl9kaWZmUG9zaXRpb25Gb3JDb2xsaXNpb25zPW5ldyBwKDAsMCwwKSx0aGlzLl9jb2xsaXNpb25SZXNwb25zZT0hMH19Y2xhc3Mga257Y29uc3RydWN0b3IoKXt0aGlzLmZhY2V0TmI9MCx0aGlzLnBhcnRpdGlvbmluZ1N1YmRpdmlzaW9ucz0xMCx0aGlzLnBhcnRpdGlvbmluZ0JCb3hSYXRpbz0xLjAxLHRoaXMuZmFjZXREYXRhRW5hYmxlZD0hMSx0aGlzLmZhY2V0UGFyYW1ldGVycz17fSx0aGlzLmJiU2l6ZT1wLlplcm8oKSx0aGlzLnN1YkRpdj17bWF4OjEsWDoxLFk6MSxaOjF9LHRoaXMuZmFjZXREZXB0aFNvcnQ9ITEsdGhpcy5mYWNldERlcHRoU29ydEVuYWJsZWQ9ITF9fWNsYXNzIFZue2NvbnN0cnVjdG9yKCl7dGhpcy5faGFzVmVydGV4QWxwaGE9ITEsdGhpcy5fdXNlVmVydGV4Q29sb3JzPSEwLHRoaXMuX251bUJvbmVJbmZsdWVuY2Vycz00LHRoaXMuX2FwcGx5Rm9nPSEwLHRoaXMuX3JlY2VpdmVTaGFkb3dzPSExLHRoaXMuX2ZhY2V0RGF0YT1uZXcga24sdGhpcy5fdmlzaWJpbGl0eT0xLHRoaXMuX3NrZWxldG9uPW51bGwsdGhpcy5fbGF5ZXJNYXNrPTI2ODQzNTQ1NSx0aGlzLl9jb21wdXRlQm9uZXNVc2luZ1NoYWRlcnM9ITAsdGhpcy5faXNBY3RpdmU9ITEsdGhpcy5fb25seUZvckluc3RhbmNlcz0hMSx0aGlzLl9pc0FjdGl2ZUludGVybWVkaWF0ZT0hMSx0aGlzLl9vbmx5Rm9ySW5zdGFuY2VzSW50ZXJtZWRpYXRlPSExLHRoaXMuX2FjdEFzUmVndWxhck1lc2g9ITEsdGhpcy5fY3VycmVudExPRD1udWxsLHRoaXMuX2N1cnJlbnRMT0RJc1VwVG9EYXRlPSExLHRoaXMuX2NvbGxpc2lvblJldHJ5Q291bnQ9Myx0aGlzLl9tb3JwaFRhcmdldE1hbmFnZXI9bnVsbCx0aGlzLl9yZW5kZXJpbmdHcm91cElkPTAsdGhpcy5fYmFrZWRWZXJ0ZXhBbmltYXRpb25NYW5hZ2VyPW51bGwsdGhpcy5fbWF0ZXJpYWw9bnVsbCx0aGlzLl9wb3NpdGlvbnM9bnVsbCx0aGlzLl9wb2ludGVyT3ZlckRpc2FibGVNZXNoVGVzdGluZz0hMSx0aGlzLl9tZXNoQ29sbGlzaW9uRGF0YT1uZXcgVW4sdGhpcy5fZW5hYmxlRGlzdGFudFBpY2tpbmc9ITF9fWNsYXNzIG90IGV4dGVuZHMgSntjb25zdHJ1Y3RvcihlLHQ9bnVsbCl7c3dpdGNoKHN1cGVyKGUsdCwhMSksdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mbz1uZXcgVm4sdGhpcy5fd2FpdGluZ01hdGVyaWFsSWQ9bnVsbCx0aGlzLmN1bGxpbmdTdHJhdGVneT1vdC5DVUxMSU5HU1RSQVRFR1lfQk9VTkRJTkdTUEhFUkVfT05MWSx0aGlzLm9uQ29sbGlkZU9ic2VydmFibGU9bmV3IEYsdGhpcy5vbkNvbGxpc2lvblBvc2l0aW9uQ2hhbmdlT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uTWF0ZXJpYWxDaGFuZ2VkT2JzZXJ2YWJsZT1uZXcgRix0aGlzLmRlZmluZWRGYWNpbmdGb3J3YXJkPSEwLHRoaXMuX29jY2x1c2lvblF1ZXJ5PW51bGwsdGhpcy5fcmVuZGVyaW5nR3JvdXA9bnVsbCx0aGlzLmFscGhhSW5kZXg9TnVtYmVyLk1BWF9WQUxVRSx0aGlzLmlzVmlzaWJsZT0hMCx0aGlzLmlzUGlja2FibGU9ITAsdGhpcy5pc05lYXJQaWNrYWJsZT0hMSx0aGlzLmlzTmVhckdyYWJiYWJsZT0hMSx0aGlzLnNob3dTdWJNZXNoZXNCb3VuZGluZ0JveD0hMSx0aGlzLmlzQmxvY2tlcj0hMSx0aGlzLmVuYWJsZVBvaW50ZXJNb3ZlRXZlbnRzPSExLHRoaXMub3V0bGluZUNvbG9yPXJlLlJlZCgpLHRoaXMub3V0bGluZVdpZHRoPS4wMix0aGlzLm92ZXJsYXlDb2xvcj1yZS5SZWQoKSx0aGlzLm92ZXJsYXlBbHBoYT0uNSx0aGlzLnVzZU9jdHJlZUZvclJlbmRlcmluZ1NlbGVjdGlvbj0hMCx0aGlzLnVzZU9jdHJlZUZvclBpY2tpbmc9ITAsdGhpcy51c2VPY3RyZWVGb3JDb2xsaXNpb25zPSEwLHRoaXMuYWx3YXlzU2VsZWN0QXNBY3RpdmVNZXNoPSExLHRoaXMuZG9Ob3RTeW5jQm91bmRpbmdJbmZvPSExLHRoaXMuYWN0aW9uTWFuYWdlcj1udWxsLHRoaXMuZWxsaXBzb2lkPW5ldyBwKC41LDEsLjUpLHRoaXMuZWxsaXBzb2lkT2Zmc2V0PW5ldyBwKDAsMCwwKSx0aGlzLmVkZ2VzV2lkdGg9MSx0aGlzLmVkZ2VzQ29sb3I9bmV3IG1lKDEsMCwwLDEpLHRoaXMuX2VkZ2VzUmVuZGVyZXI9bnVsbCx0aGlzLl9tYXN0ZXJNZXNoPW51bGwsdGhpcy5fYm91bmRpbmdJbmZvPW51bGwsdGhpcy5fYm91bmRpbmdJbmZvSXNEaXJ0eT0hMCx0aGlzLl9yZW5kZXJJZD0wLHRoaXMuX2ludGVyc2VjdGlvbnNJblByb2dyZXNzPW5ldyBBcnJheSx0aGlzLl91bkluZGV4ZWQ9ITEsdGhpcy5fbGlnaHRTb3VyY2VzPW5ldyBBcnJheSx0aGlzLl93YWl0aW5nRGF0YT17bG9kczpudWxsLGFjdGlvbnM6bnVsbCxmcmVlemVXb3JsZE1hdHJpeDpudWxsfSx0aGlzLl9ib25lc1RyYW5zZm9ybU1hdHJpY2VzPW51bGwsdGhpcy5fdHJhbnNmb3JtTWF0cml4VGV4dHVyZT1udWxsLHRoaXMub25SZWJ1aWxkT2JzZXJ2YWJsZT1uZXcgRix0aGlzLl9vbkNvbGxpc2lvblBvc2l0aW9uQ2hhbmdlPShpLHMscj1udWxsKT0+e3Muc3VidHJhY3RUb1JlZih0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9tZXNoQ29sbGlzaW9uRGF0YS5fb2xkUG9zaXRpb25Gb3JDb2xsaXNpb25zLHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX21lc2hDb2xsaXNpb25EYXRhLl9kaWZmUG9zaXRpb25Gb3JDb2xsaXNpb25zKSx0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9tZXNoQ29sbGlzaW9uRGF0YS5fZGlmZlBvc2l0aW9uRm9yQ29sbGlzaW9ucy5sZW5ndGgoKT5JLkNvbGxpc2lvbnNFcHNpbG9uJiZ0aGlzLnBvc2l0aW9uLmFkZEluUGxhY2UodGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWVzaENvbGxpc2lvbkRhdGEuX2RpZmZQb3NpdGlvbkZvckNvbGxpc2lvbnMpLHImJnRoaXMub25Db2xsaWRlT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMociksdGhpcy5vbkNvbGxpc2lvblBvc2l0aW9uQ2hhbmdlT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcy5wb3NpdGlvbil9LHQ9dGhpcy5nZXRTY2VuZSgpLHQuYWRkTWVzaCh0aGlzKSx0aGlzLl9yZXN5bmNMaWdodFNvdXJjZXMoKSx0aGlzLl91bmlmb3JtQnVmZmVyPW5ldyBWKHRoaXMuZ2V0U2NlbmUoKS5nZXRFbmdpbmUoKSx2b2lkIDAsdm9pZCAwLGUsIXRoaXMuZ2V0U2NlbmUoKS5nZXRFbmdpbmUoKS5pc1dlYkdQVSksdGhpcy5fYnVpbGRVbmlmb3JtTGF5b3V0KCksdC5wZXJmb3JtYW5jZVByaW9yaXR5KXtjYXNlIEN0LkFnZ3Jlc3NpdmU6dGhpcy5kb05vdFN5bmNCb3VuZGluZ0luZm89ITA7Y2FzZSBDdC5JbnRlcm1lZGlhdGU6dGhpcy5hbHdheXNTZWxlY3RBc0FjdGl2ZU1lc2g9ITAsdGhpcy5pc1BpY2thYmxlPSExO2JyZWFrfX1zdGF0aWMgZ2V0IEJJTExCT0FSRE1PREVfTk9ORSgpe3JldHVybiBKLkJJTExCT0FSRE1PREVfTk9ORX1zdGF0aWMgZ2V0IEJJTExCT0FSRE1PREVfWCgpe3JldHVybiBKLkJJTExCT0FSRE1PREVfWH1zdGF0aWMgZ2V0IEJJTExCT0FSRE1PREVfWSgpe3JldHVybiBKLkJJTExCT0FSRE1PREVfWX1zdGF0aWMgZ2V0IEJJTExCT0FSRE1PREVfWigpe3JldHVybiBKLkJJTExCT0FSRE1PREVfWn1zdGF0aWMgZ2V0IEJJTExCT0FSRE1PREVfQUxMKCl7cmV0dXJuIEouQklMTEJPQVJETU9ERV9BTEx9c3RhdGljIGdldCBCSUxMQk9BUkRNT0RFX1VTRV9QT1NJVElPTigpe3JldHVybiBKLkJJTExCT0FSRE1PREVfVVNFX1BPU0lUSU9OfWdldCBmYWNldE5iKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2ZhY2V0RGF0YS5mYWNldE5ifWdldCBwYXJ0aXRpb25pbmdTdWJkaXZpc2lvbnMoKXtyZXR1cm4gdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fZmFjZXREYXRhLnBhcnRpdGlvbmluZ1N1YmRpdmlzaW9uc31zZXQgcGFydGl0aW9uaW5nU3ViZGl2aXNpb25zKGUpe3RoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2ZhY2V0RGF0YS5wYXJ0aXRpb25pbmdTdWJkaXZpc2lvbnM9ZX1nZXQgcGFydGl0aW9uaW5nQkJveFJhdGlvKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2ZhY2V0RGF0YS5wYXJ0aXRpb25pbmdCQm94UmF0aW99c2V0IHBhcnRpdGlvbmluZ0JCb3hSYXRpbyhlKXt0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9mYWNldERhdGEucGFydGl0aW9uaW5nQkJveFJhdGlvPWV9Z2V0IG11c3REZXB0aFNvcnRGYWNldHMoKXtyZXR1cm4gdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fZmFjZXREYXRhLmZhY2V0RGVwdGhTb3J0fXNldCBtdXN0RGVwdGhTb3J0RmFjZXRzKGUpe3RoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2ZhY2V0RGF0YS5mYWNldERlcHRoU29ydD1lfWdldCBmYWNldERlcHRoU29ydEZyb20oKXtyZXR1cm4gdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fZmFjZXREYXRhLmZhY2V0RGVwdGhTb3J0RnJvbX1zZXQgZmFjZXREZXB0aFNvcnRGcm9tKGUpe3RoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2ZhY2V0RGF0YS5mYWNldERlcHRoU29ydEZyb209ZX1nZXQgY29sbGlzaW9uUmV0cnlDb3VudCgpe3JldHVybiB0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9jb2xsaXNpb25SZXRyeUNvdW50fXNldCBjb2xsaXNpb25SZXRyeUNvdW50KGUpe3RoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2NvbGxpc2lvblJldHJ5Q291bnQ9ZX1nZXQgaXNGYWNldERhdGFFbmFibGVkKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2ZhY2V0RGF0YS5mYWNldERhdGFFbmFibGVkfWdldCBtb3JwaFRhcmdldE1hbmFnZXIoKXtyZXR1cm4gdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbW9ycGhUYXJnZXRNYW5hZ2VyfXNldCBtb3JwaFRhcmdldE1hbmFnZXIoZSl7dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbW9ycGhUYXJnZXRNYW5hZ2VyIT09ZSYmKHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX21vcnBoVGFyZ2V0TWFuYWdlcj1lLHRoaXMuX3N5bmNHZW9tZXRyeVdpdGhNb3JwaFRhcmdldE1hbmFnZXIoKSl9Z2V0IGJha2VkVmVydGV4QW5pbWF0aW9uTWFuYWdlcigpe3JldHVybiB0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9iYWtlZFZlcnRleEFuaW1hdGlvbk1hbmFnZXJ9c2V0IGJha2VkVmVydGV4QW5pbWF0aW9uTWFuYWdlcihlKXt0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9iYWtlZFZlcnRleEFuaW1hdGlvbk1hbmFnZXIhPT1lJiYodGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fYmFrZWRWZXJ0ZXhBbmltYXRpb25NYW5hZ2VyPWUsdGhpcy5fbWFya1N1Yk1lc2hlc0FzQXR0cmlidXRlc0RpcnR5KCkpfV9zeW5jR2VvbWV0cnlXaXRoTW9ycGhUYXJnZXRNYW5hZ2VyKCl7fV91cGRhdGVOb25Vbmlmb3JtU2NhbGluZ1N0YXRlKGUpe3JldHVybiBzdXBlci5fdXBkYXRlTm9uVW5pZm9ybVNjYWxpbmdTdGF0ZShlKT8odGhpcy5fbWFya1N1Yk1lc2hlc0FzTWlzY0RpcnR5KCksITApOiExfXNldCBvbkNvbGxpZGUoZSl7dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWVzaENvbGxpc2lvbkRhdGEuX29uQ29sbGlkZU9ic2VydmVyJiZ0aGlzLm9uQ29sbGlkZU9ic2VydmFibGUucmVtb3ZlKHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX21lc2hDb2xsaXNpb25EYXRhLl9vbkNvbGxpZGVPYnNlcnZlciksdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWVzaENvbGxpc2lvbkRhdGEuX29uQ29sbGlkZU9ic2VydmVyPXRoaXMub25Db2xsaWRlT2JzZXJ2YWJsZS5hZGQoZSl9c2V0IG9uQ29sbGlzaW9uUG9zaXRpb25DaGFuZ2UoZSl7dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWVzaENvbGxpc2lvbkRhdGEuX29uQ29sbGlzaW9uUG9zaXRpb25DaGFuZ2VPYnNlcnZlciYmdGhpcy5vbkNvbGxpc2lvblBvc2l0aW9uQ2hhbmdlT2JzZXJ2YWJsZS5yZW1vdmUodGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWVzaENvbGxpc2lvbkRhdGEuX29uQ29sbGlzaW9uUG9zaXRpb25DaGFuZ2VPYnNlcnZlciksdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWVzaENvbGxpc2lvbkRhdGEuX29uQ29sbGlzaW9uUG9zaXRpb25DaGFuZ2VPYnNlcnZlcj10aGlzLm9uQ29sbGlzaW9uUG9zaXRpb25DaGFuZ2VPYnNlcnZhYmxlLmFkZChlKX1nZXQgdmlzaWJpbGl0eSgpe3JldHVybiB0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl92aXNpYmlsaXR5fXNldCB2aXNpYmlsaXR5KGUpe2lmKHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX3Zpc2liaWxpdHk9PT1lKXJldHVybjtjb25zdCB0PXRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX3Zpc2liaWxpdHk7dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fdmlzaWJpbGl0eT1lLCh0PT09MSYmZSE9PTF8fHQhPT0xJiZlPT09MSkmJnRoaXMuX21hcmtTdWJNZXNoZXNBc01pc2NEaXJ0eSgpfWdldCBwb2ludGVyT3ZlckRpc2FibGVNZXNoVGVzdGluZygpe3JldHVybiB0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9wb2ludGVyT3ZlckRpc2FibGVNZXNoVGVzdGluZ31zZXQgcG9pbnRlck92ZXJEaXNhYmxlTWVzaFRlc3RpbmcoZSl7dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fcG9pbnRlck92ZXJEaXNhYmxlTWVzaFRlc3Rpbmc9ZX1nZXQgcmVuZGVyaW5nR3JvdXBJZCgpe3JldHVybiB0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9yZW5kZXJpbmdHcm91cElkfXNldCByZW5kZXJpbmdHcm91cElkKGUpe3RoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX3JlbmRlcmluZ0dyb3VwSWQ9ZX1nZXQgbWF0ZXJpYWwoKXtyZXR1cm4gdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWF0ZXJpYWx9c2V0IG1hdGVyaWFsKGUpe3RoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX21hdGVyaWFsIT09ZSYmKHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX21hdGVyaWFsJiZ0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9tYXRlcmlhbC5tZXNoTWFwJiYodGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWF0ZXJpYWwubWVzaE1hcFt0aGlzLnVuaXF1ZUlkXT12b2lkIDApLHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX21hdGVyaWFsPWUsZSYmZS5tZXNoTWFwJiYoZS5tZXNoTWFwW3RoaXMudW5pcXVlSWRdPXRoaXMpLHRoaXMub25NYXRlcmlhbENoYW5nZWRPYnNlcnZhYmxlLmhhc09ic2VydmVycygpJiZ0aGlzLm9uTWF0ZXJpYWxDaGFuZ2VkT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyksdGhpcy5zdWJNZXNoZXMmJih0aGlzLnJlc2V0RHJhd0NhY2hlKCksdGhpcy5fdW5CaW5kRWZmZWN0KCkpKX1nZXRNYXRlcmlhbEZvclJlbmRlclBhc3MoZSl7dmFyIHQ7cmV0dXJuKHQ9dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWF0ZXJpYWxGb3JSZW5kZXJQYXNzKT09PW51bGx8fHQ9PT12b2lkIDA/dm9pZCAwOnRbZV19c2V0TWF0ZXJpYWxGb3JSZW5kZXJQYXNzKGUsdCl7dGhpcy5yZXNldERyYXdDYWNoZShlKSx0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9tYXRlcmlhbEZvclJlbmRlclBhc3N8fCh0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9tYXRlcmlhbEZvclJlbmRlclBhc3M9W10pLHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX21hdGVyaWFsRm9yUmVuZGVyUGFzc1tlXT10fWdldCByZWNlaXZlU2hhZG93cygpe3JldHVybiB0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9yZWNlaXZlU2hhZG93c31zZXQgcmVjZWl2ZVNoYWRvd3MoZSl7dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fcmVjZWl2ZVNoYWRvd3MhPT1lJiYodGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fcmVjZWl2ZVNoYWRvd3M9ZSx0aGlzLl9tYXJrU3ViTWVzaGVzQXNMaWdodERpcnR5KCkpfWdldCBoYXNWZXJ0ZXhBbHBoYSgpe3JldHVybiB0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9oYXNWZXJ0ZXhBbHBoYX1zZXQgaGFzVmVydGV4QWxwaGEoZSl7dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5faGFzVmVydGV4QWxwaGEhPT1lJiYodGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5faGFzVmVydGV4QWxwaGE9ZSx0aGlzLl9tYXJrU3ViTWVzaGVzQXNBdHRyaWJ1dGVzRGlydHkoKSx0aGlzLl9tYXJrU3ViTWVzaGVzQXNNaXNjRGlydHkoKSl9Z2V0IHVzZVZlcnRleENvbG9ycygpe3JldHVybiB0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl91c2VWZXJ0ZXhDb2xvcnN9c2V0IHVzZVZlcnRleENvbG9ycyhlKXt0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl91c2VWZXJ0ZXhDb2xvcnMhPT1lJiYodGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fdXNlVmVydGV4Q29sb3JzPWUsdGhpcy5fbWFya1N1Yk1lc2hlc0FzQXR0cmlidXRlc0RpcnR5KCkpfWdldCBjb21wdXRlQm9uZXNVc2luZ1NoYWRlcnMoKXtyZXR1cm4gdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fY29tcHV0ZUJvbmVzVXNpbmdTaGFkZXJzfXNldCBjb21wdXRlQm9uZXNVc2luZ1NoYWRlcnMoZSl7dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fY29tcHV0ZUJvbmVzVXNpbmdTaGFkZXJzIT09ZSYmKHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2NvbXB1dGVCb25lc1VzaW5nU2hhZGVycz1lLHRoaXMuX21hcmtTdWJNZXNoZXNBc0F0dHJpYnV0ZXNEaXJ0eSgpKX1nZXQgbnVtQm9uZUluZmx1ZW5jZXJzKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX251bUJvbmVJbmZsdWVuY2Vyc31zZXQgbnVtQm9uZUluZmx1ZW5jZXJzKGUpe3RoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX251bUJvbmVJbmZsdWVuY2VycyE9PWUmJih0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9udW1Cb25lSW5mbHVlbmNlcnM9ZSx0aGlzLl9tYXJrU3ViTWVzaGVzQXNBdHRyaWJ1dGVzRGlydHkoKSl9Z2V0IGFwcGx5Rm9nKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2FwcGx5Rm9nfXNldCBhcHBseUZvZyhlKXt0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9hcHBseUZvZyE9PWUmJih0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9hcHBseUZvZz1lLHRoaXMuX21hcmtTdWJNZXNoZXNBc01pc2NEaXJ0eSgpKX1nZXQgZW5hYmxlRGlzdGFudFBpY2tpbmcoKXtyZXR1cm4gdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fZW5hYmxlRGlzdGFudFBpY2tpbmd9c2V0IGVuYWJsZURpc3RhbnRQaWNraW5nKGUpe3RoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2VuYWJsZURpc3RhbnRQaWNraW5nPWV9Z2V0IGxheWVyTWFzaygpe3JldHVybiB0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9sYXllck1hc2t9c2V0IGxheWVyTWFzayhlKXtlIT09dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbGF5ZXJNYXNrJiYodGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbGF5ZXJNYXNrPWUsdGhpcy5fcmVzeW5jTGlnaHRTb3VyY2VzKCkpfWdldCBjb2xsaXNpb25NYXNrKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX21lc2hDb2xsaXNpb25EYXRhLl9jb2xsaXNpb25NYXNrfXNldCBjb2xsaXNpb25NYXNrKGUpe3RoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX21lc2hDb2xsaXNpb25EYXRhLl9jb2xsaXNpb25NYXNrPWlzTmFOKGUpPy0xOmV9Z2V0IGNvbGxpc2lvblJlc3BvbnNlKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX21lc2hDb2xsaXNpb25EYXRhLl9jb2xsaXNpb25SZXNwb25zZX1zZXQgY29sbGlzaW9uUmVzcG9uc2UoZSl7dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWVzaENvbGxpc2lvbkRhdGEuX2NvbGxpc2lvblJlc3BvbnNlPWV9Z2V0IGNvbGxpc2lvbkdyb3VwKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX21lc2hDb2xsaXNpb25EYXRhLl9jb2xsaXNpb25Hcm91cH1zZXQgY29sbGlzaW9uR3JvdXAoZSl7dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWVzaENvbGxpc2lvbkRhdGEuX2NvbGxpc2lvbkdyb3VwPWlzTmFOKGUpPy0xOmV9Z2V0IHN1cnJvdW5kaW5nTWVzaGVzKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX21lc2hDb2xsaXNpb25EYXRhLl9zdXJyb3VuZGluZ01lc2hlc31zZXQgc3Vycm91bmRpbmdNZXNoZXMoZSl7dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWVzaENvbGxpc2lvbkRhdGEuX3N1cnJvdW5kaW5nTWVzaGVzPWV9Z2V0IGxpZ2h0U291cmNlcygpe3JldHVybiB0aGlzLl9saWdodFNvdXJjZXN9Z2V0IF9wb3NpdGlvbnMoKXtyZXR1cm4gbnVsbH1zZXQgc2tlbGV0b24oZSl7Y29uc3QgdD10aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9za2VsZXRvbjt0JiZ0Lm5lZWRJbml0aWFsU2tpbk1hdHJpeCYmdC5fdW5yZWdpc3Rlck1lc2hXaXRoUG9zZU1hdHJpeCh0aGlzKSxlJiZlLm5lZWRJbml0aWFsU2tpbk1hdHJpeCYmZS5fcmVnaXN0ZXJNZXNoV2l0aFBvc2VNYXRyaXgodGhpcyksdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fc2tlbGV0b249ZSx0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9za2VsZXRvbnx8KHRoaXMuX2JvbmVzVHJhbnNmb3JtTWF0cmljZXM9bnVsbCksdGhpcy5fbWFya1N1Yk1lc2hlc0FzQXR0cmlidXRlc0RpcnR5KCl9Z2V0IHNrZWxldG9uKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX3NrZWxldG9ufV9idWlsZFVuaWZvcm1MYXlvdXQoKXt0aGlzLl91bmlmb3JtQnVmZmVyLmFkZFVuaWZvcm0oIndvcmxkIiwxNiksdGhpcy5fdW5pZm9ybUJ1ZmZlci5hZGRVbmlmb3JtKCJ2aXNpYmlsaXR5IiwxKSx0aGlzLl91bmlmb3JtQnVmZmVyLmNyZWF0ZSgpfXRyYW5zZmVyVG9FZmZlY3QoZSl7Y29uc3QgdD10aGlzLl91bmlmb3JtQnVmZmVyO3QudXBkYXRlTWF0cml4KCJ3b3JsZCIsZSksdC51cGRhdGVGbG9hdCgidmlzaWJpbGl0eSIsdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fdmlzaWJpbGl0eSksdC51cGRhdGUoKX1nZXRNZXNoVW5pZm9ybUJ1ZmZlcigpe3JldHVybiB0aGlzLl91bmlmb3JtQnVmZmVyfWdldENsYXNzTmFtZSgpe3JldHVybiJBYnN0cmFjdE1lc2gifXRvU3RyaW5nKGUpe2xldCB0PSJOYW1lOiAiK3RoaXMubmFtZSsiLCBpc0luc3RhbmNlOiAiKyh0aGlzLmdldENsYXNzTmFtZSgpIT09Ikluc3RhbmNlZE1lc2giPyJZRVMiOiJOTyIpO3QrPSIsICMgb2Ygc3VibWVzaGVzOiAiKyh0aGlzLnN1Yk1lc2hlcz90aGlzLnN1Yk1lc2hlcy5sZW5ndGg6MCk7Y29uc3QgaT10aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9za2VsZXRvbjtyZXR1cm4gaSYmKHQrPSIsIHNrZWxldG9uOiAiK2kubmFtZSksZSYmKHQrPSIsIGJpbGxib2FyZCBtb2RlOiAiK1siTk9ORSIsIlgiLCJZIixudWxsLCJaIixudWxsLG51bGwsIkFMTCJdW3RoaXMuYmlsbGJvYXJkTW9kZV0sdCs9IiwgZnJlZXplIHdybGQgbWF0OiAiKyh0aGlzLl9pc1dvcmxkTWF0cml4RnJvemVufHx0aGlzLl93YWl0aW5nRGF0YS5mcmVlemVXb3JsZE1hdHJpeD8iWUVTIjoiTk8iKSksdH1fZ2V0RWZmZWN0aXZlUGFyZW50KCl7cmV0dXJuIHRoaXMuX21hc3Rlck1lc2gmJnRoaXMuYmlsbGJvYXJkTW9kZSE9PUouQklMTEJPQVJETU9ERV9OT05FP3RoaXMuX21hc3Rlck1lc2g6c3VwZXIuX2dldEVmZmVjdGl2ZVBhcmVudCgpfV9nZXRBY3Rpb25NYW5hZ2VyRm9yVHJpZ2dlcihlLHQ9ITApe2lmKHRoaXMuYWN0aW9uTWFuYWdlciYmKHR8fHRoaXMuYWN0aW9uTWFuYWdlci5pc1JlY3Vyc2l2ZSkpaWYoZSl7aWYodGhpcy5hY3Rpb25NYW5hZ2VyLmhhc1NwZWNpZmljVHJpZ2dlcihlKSlyZXR1cm4gdGhpcy5hY3Rpb25NYW5hZ2VyfWVsc2UgcmV0dXJuIHRoaXMuYWN0aW9uTWFuYWdlcjtyZXR1cm4gdGhpcy5wYXJlbnQ/dGhpcy5wYXJlbnQuX2dldEFjdGlvbk1hbmFnZXJGb3JUcmlnZ2VyKGUsITEpOm51bGx9X3JlYnVpbGQoZT0hMSl7aWYodGhpcy5vblJlYnVpbGRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKSx0aGlzLl9vY2NsdXNpb25RdWVyeSE9PW51bGwmJih0aGlzLl9vY2NsdXNpb25RdWVyeT1udWxsKSwhIXRoaXMuc3ViTWVzaGVzKWZvcihjb25zdCB0IG9mIHRoaXMuc3ViTWVzaGVzKXQuX3JlYnVpbGQoKX1fcmVzeW5jTGlnaHRTb3VyY2VzKCl7dGhpcy5fbGlnaHRTb3VyY2VzLmxlbmd0aD0wO2Zvcihjb25zdCBlIG9mIHRoaXMuZ2V0U2NlbmUoKS5saWdodHMpZS5pc0VuYWJsZWQoKSYmZS5jYW5BZmZlY3RNZXNoKHRoaXMpJiZ0aGlzLl9saWdodFNvdXJjZXMucHVzaChlKTt0aGlzLl9tYXJrU3ViTWVzaGVzQXNMaWdodERpcnR5KCl9X3Jlc3luY0xpZ2h0U291cmNlKGUpe2NvbnN0IHQ9ZS5pc0VuYWJsZWQoKSYmZS5jYW5BZmZlY3RNZXNoKHRoaXMpLGk9dGhpcy5fbGlnaHRTb3VyY2VzLmluZGV4T2YoZSk7bGV0IHM9ITE7aWYoaT09PS0xKXtpZighdClyZXR1cm47dGhpcy5fbGlnaHRTb3VyY2VzLnB1c2goZSl9ZWxzZXtpZih0KXJldHVybjtzPSEwLHRoaXMuX2xpZ2h0U291cmNlcy5zcGxpY2UoaSwxKX10aGlzLl9tYXJrU3ViTWVzaGVzQXNMaWdodERpcnR5KHMpfV91bkJpbmRFZmZlY3QoKXtmb3IoY29uc3QgZSBvZiB0aGlzLnN1Yk1lc2hlcyllLnNldEVmZmVjdChudWxsKX1fcmVtb3ZlTGlnaHRTb3VyY2UoZSx0KXtjb25zdCBpPXRoaXMuX2xpZ2h0U291cmNlcy5pbmRleE9mKGUpO2khPT0tMSYmKHRoaXMuX2xpZ2h0U291cmNlcy5zcGxpY2UoaSwxKSx0aGlzLl9tYXJrU3ViTWVzaGVzQXNMaWdodERpcnR5KHQpKX1fbWFya1N1Yk1lc2hlc0FzRGlydHkoZSl7aWYodGhpcy5zdWJNZXNoZXMpZm9yKGNvbnN0IHQgb2YgdGhpcy5zdWJNZXNoZXMpZm9yKGxldCBpPTA7aTx0Ll9kcmF3V3JhcHBlcnMubGVuZ3RoOysraSl7Y29uc3Qgcz10Ll9kcmF3V3JhcHBlcnNbaV07IXN8fCFzLmRlZmluZXN8fCFzLmRlZmluZXMubWFya0FsbEFzRGlydHl8fGUocy5kZWZpbmVzKX19X21hcmtTdWJNZXNoZXNBc0xpZ2h0RGlydHkoZT0hMSl7dGhpcy5fbWFya1N1Yk1lc2hlc0FzRGlydHkodD0+dC5tYXJrQXNMaWdodERpcnR5KGUpKX1fbWFya1N1Yk1lc2hlc0FzQXR0cmlidXRlc0RpcnR5KCl7dGhpcy5fbWFya1N1Yk1lc2hlc0FzRGlydHkoZT0+ZS5tYXJrQXNBdHRyaWJ1dGVzRGlydHkoKSl9X21hcmtTdWJNZXNoZXNBc01pc2NEaXJ0eSgpe3RoaXMuX21hcmtTdWJNZXNoZXNBc0RpcnR5KGU9PmUubWFya0FzTWlzY0RpcnR5KCkpfW1hcmtBc0RpcnR5KGUpe3JldHVybiB0aGlzLl9jdXJyZW50UmVuZGVySWQ9TnVtYmVyLk1BWF9WQUxVRSx0aGlzLl9pc0RpcnR5PSEwLHRoaXN9cmVzZXREcmF3Q2FjaGUoZSl7aWYodGhpcy5zdWJNZXNoZXMpZm9yKGNvbnN0IHQgb2YgdGhpcy5zdWJNZXNoZXMpdC5yZXNldERyYXdDYWNoZShlKX1nZXQgaXNCbG9ja2VkKCl7cmV0dXJuITF9Z2V0TE9EKGUpe3JldHVybiB0aGlzfWdldFRvdGFsVmVydGljZXMoKXtyZXR1cm4gMH1nZXRUb3RhbEluZGljZXMoKXtyZXR1cm4gMH1nZXRJbmRpY2VzKCl7cmV0dXJuIG51bGx9Z2V0VmVydGljZXNEYXRhKGUpe3JldHVybiBudWxsfXNldFZlcnRpY2VzRGF0YShlLHQsaSxzKXtyZXR1cm4gdGhpc311cGRhdGVWZXJ0aWNlc0RhdGEoZSx0LGkscyl7cmV0dXJuIHRoaXN9c2V0SW5kaWNlcyhlLHQpe3JldHVybiB0aGlzfWlzVmVydGljZXNEYXRhUHJlc2VudChlKXtyZXR1cm4hMX1nZXRCb3VuZGluZ0luZm8oKXtyZXR1cm4gdGhpcy5fbWFzdGVyTWVzaD90aGlzLl9tYXN0ZXJNZXNoLmdldEJvdW5kaW5nSW5mbygpOih0aGlzLl9ib3VuZGluZ0luZm9Jc0RpcnR5JiYodGhpcy5fYm91bmRpbmdJbmZvSXNEaXJ0eT0hMSx0aGlzLl91cGRhdGVCb3VuZGluZ0luZm8oKSksdGhpcy5fYm91bmRpbmdJbmZvKX1zZXRCb3VuZGluZ0luZm8oZSl7cmV0dXJuIHRoaXMuX2JvdW5kaW5nSW5mbz1lLHRoaXN9Z2V0IGhhc0JvdW5kaW5nSW5mbygpe3JldHVybiB0aGlzLl9ib3VuZGluZ0luZm8hPT1udWxsfWJ1aWxkQm91bmRpbmdJbmZvKGUsdCxpKXtyZXR1cm4gdGhpcy5fYm91bmRpbmdJbmZvPW5ldyBkdChlLHQsaSksdGhpcy5fYm91bmRpbmdJbmZvfW5vcm1hbGl6ZVRvVW5pdEN1YmUoZT0hMCx0PSExLGkpe3JldHVybiBzdXBlci5ub3JtYWxpemVUb1VuaXRDdWJlKGUsdCxpKX1nZXQgdXNlQm9uZXMoKXtyZXR1cm4gdGhpcy5za2VsZXRvbiYmdGhpcy5nZXRTY2VuZSgpLnNrZWxldG9uc0VuYWJsZWQmJnRoaXMuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuTWF0cmljZXNJbmRpY2VzS2luZCkmJnRoaXMuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuTWF0cmljZXNXZWlnaHRzS2luZCl9X3ByZUFjdGl2YXRlKCl7fV9wcmVBY3RpdmF0ZUZvckludGVybWVkaWF0ZVJlbmRlcmluZyhlKXt9X2FjdGl2YXRlKGUsdCl7cmV0dXJuIHRoaXMuX3JlbmRlcklkPWUsITB9X3Bvc3RBY3RpdmF0ZSgpe31fZnJlZXplKCl7fV91bkZyZWV6ZSgpe31nZXRXb3JsZE1hdHJpeCgpe3JldHVybiB0aGlzLl9tYXN0ZXJNZXNoJiZ0aGlzLmJpbGxib2FyZE1vZGU9PT1KLkJJTExCT0FSRE1PREVfTk9ORT90aGlzLl9tYXN0ZXJNZXNoLmdldFdvcmxkTWF0cml4KCk6c3VwZXIuZ2V0V29ybGRNYXRyaXgoKX1fZ2V0V29ybGRNYXRyaXhEZXRlcm1pbmFudCgpe3JldHVybiB0aGlzLl9tYXN0ZXJNZXNoP3RoaXMuX21hc3Rlck1lc2guX2dldFdvcmxkTWF0cml4RGV0ZXJtaW5hbnQoKTpzdXBlci5fZ2V0V29ybGRNYXRyaXhEZXRlcm1pbmFudCgpfWdldCBpc0FuSW5zdGFuY2UoKXtyZXR1cm4hMX1nZXQgaGFzSW5zdGFuY2VzKCl7cmV0dXJuITF9Z2V0IGhhc1RoaW5JbnN0YW5jZXMoKXtyZXR1cm4hMX1tb3ZlUE9WKGUsdCxpKXtyZXR1cm4gdGhpcy5wb3NpdGlvbi5hZGRJblBsYWNlKHRoaXMuY2FsY01vdmVQT1YoZSx0LGkpKSx0aGlzfWNhbGNNb3ZlUE9WKGUsdCxpKXtjb25zdCBzPW5ldyB4Oyh0aGlzLnJvdGF0aW9uUXVhdGVybmlvbj90aGlzLnJvdGF0aW9uUXVhdGVybmlvbjpaLlJvdGF0aW9uWWF3UGl0Y2hSb2xsKHRoaXMucm90YXRpb24ueSx0aGlzLnJvdGF0aW9uLngsdGhpcy5yb3RhdGlvbi56KSkudG9Sb3RhdGlvbk1hdHJpeChzKTtjb25zdCBuPXAuWmVybygpLGE9dGhpcy5kZWZpbmVkRmFjaW5nRm9yd2FyZD8tMToxO3JldHVybiBwLlRyYW5zZm9ybUNvb3JkaW5hdGVzRnJvbUZsb2F0c1RvUmVmKGUqYSx0LGkqYSxzLG4pLG59cm90YXRlUE9WKGUsdCxpKXtyZXR1cm4gdGhpcy5yb3RhdGlvbi5hZGRJblBsYWNlKHRoaXMuY2FsY1JvdGF0ZVBPVihlLHQsaSkpLHRoaXN9Y2FsY1JvdGF0ZVBPVihlLHQsaSl7Y29uc3Qgcz10aGlzLmRlZmluZWRGYWNpbmdGb3J3YXJkPzE6LTE7cmV0dXJuIG5ldyBwKGUqcyx0LGkqcyl9cmVmcmVzaEJvdW5kaW5nSW5mbyhlPSExLHQ9ITEpe3JldHVybiB0aGlzLl9ib3VuZGluZ0luZm8mJnRoaXMuX2JvdW5kaW5nSW5mby5pc0xvY2tlZD90aGlzOih0aGlzLl9yZWZyZXNoQm91bmRpbmdJbmZvKHRoaXMuX2dldFBvc2l0aW9uRGF0YShlLHQpLG51bGwpLHRoaXMpfV9yZWZyZXNoQm91bmRpbmdJbmZvKGUsdCl7aWYoZSl7Y29uc3QgaT15cihlLDAsdGhpcy5nZXRUb3RhbFZlcnRpY2VzKCksdCk7dGhpcy5fYm91bmRpbmdJbmZvP3RoaXMuX2JvdW5kaW5nSW5mby5yZUNvbnN0cnVjdChpLm1pbmltdW0saS5tYXhpbXVtKTp0aGlzLl9ib3VuZGluZ0luZm89bmV3IGR0KGkubWluaW11bSxpLm1heGltdW0pfWlmKHRoaXMuc3ViTWVzaGVzKWZvcihsZXQgaT0wO2k8dGhpcy5zdWJNZXNoZXMubGVuZ3RoO2krKyl0aGlzLnN1Yk1lc2hlc1tpXS5yZWZyZXNoQm91bmRpbmdJbmZvKGUpO3RoaXMuX3VwZGF0ZUJvdW5kaW5nSW5mbygpfV9nZXREYXRhKGU9ITEsdD0hMSxpLHM9Zy5Qb3NpdGlvbktpbmQpe2lmKGk9aT8/dGhpcy5nZXRWZXJ0aWNlc0RhdGEocykuc2xpY2UoKSxpJiZ0JiZ0aGlzLm1vcnBoVGFyZ2V0TWFuYWdlcil7bGV0IHI9MCxuPTA7Zm9yKGxldCBhPTA7YTxpLmxlbmd0aDthKyspe2ZvcihsZXQgbz0wO288dGhpcy5tb3JwaFRhcmdldE1hbmFnZXIubnVtVGFyZ2V0cztvKyspe2NvbnN0IGg9dGhpcy5tb3JwaFRhcmdldE1hbmFnZXIuZ2V0VGFyZ2V0KG8pLGw9aC5pbmZsdWVuY2U7aWYobD4wKXtjb25zdCB1PWguZ2V0UG9zaXRpb25zKCk7dSYmKGlbYV0rPSh1W2FdLWlbYV0pKmwpfX1pZihyKysscz09PWcuUG9zaXRpb25LaW5kJiZ0aGlzLl9wb3NpdGlvbnMmJnI9PT0zKXtyPTA7Y29uc3Qgbz1uKjM7dGhpcy5fcG9zaXRpb25zW24rK10uY29weUZyb21GbG9hdHMoaVtvXSxpW28rMV0saVtvKzJdKX19fWlmKGkmJmUmJnRoaXMuc2tlbGV0b24pe2NvbnN0IHI9dGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5NYXRyaWNlc0luZGljZXNLaW5kKSxuPXRoaXMuZ2V0VmVydGljZXNEYXRhKGcuTWF0cmljZXNXZWlnaHRzS2luZCk7aWYobiYmcil7Y29uc3QgYT10aGlzLm51bUJvbmVJbmZsdWVuY2Vycz40LG89YT90aGlzLmdldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzSW5kaWNlc0V4dHJhS2luZCk6bnVsbCxoPWE/dGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5NYXRyaWNlc1dlaWdodHNFeHRyYUtpbmQpOm51bGwsbD10aGlzLnNrZWxldG9uLmdldFRyYW5zZm9ybU1hdHJpY2VzKHRoaXMpLHU9RC5WZWN0b3IzWzBdLGQ9RC5NYXRyaXhbMF0sZj1ELk1hdHJpeFsxXTtsZXQgXz0wO2ZvcihsZXQgRT0wO0U8aS5sZW5ndGg7RSs9MyxfKz00KXtkLnJlc2V0KCk7bGV0IG0sdjtmb3IobT0wO208NDttKyspdj1uW18rbV0sdj4wJiYoeC5Gcm9tRmxvYXQzMkFycmF5VG9SZWZTY2FsZWQobCxNYXRoLmZsb29yKHJbXyttXSoxNiksdixmKSxkLmFkZFRvU2VsZihmKSk7aWYoYSlmb3IobT0wO208NDttKyspdj1oW18rbV0sdj4wJiYoeC5Gcm9tRmxvYXQzMkFycmF5VG9SZWZTY2FsZWQobCxNYXRoLmZsb29yKG9bXyttXSoxNiksdixmKSxkLmFkZFRvU2VsZihmKSk7cz09PWcuTm9ybWFsS2luZD9wLlRyYW5zZm9ybU5vcm1hbEZyb21GbG9hdHNUb1JlZihpW0VdLGlbRSsxXSxpW0UrMl0sZCx1KTpwLlRyYW5zZm9ybUNvb3JkaW5hdGVzRnJvbUZsb2F0c1RvUmVmKGlbRV0saVtFKzFdLGlbRSsyXSxkLHUpLHUudG9BcnJheShpLEUpLHM9PT1nLlBvc2l0aW9uS2luZCYmdGhpcy5fcG9zaXRpb25zJiZ0aGlzLl9wb3NpdGlvbnNbRS8zXS5jb3B5RnJvbSh1KX19fXJldHVybiBpfWdldE5vcm1hbHNEYXRhKGU9ITEsdD0hMSl7cmV0dXJuIHRoaXMuX2dldERhdGEoZSx0LG51bGwsZy5Ob3JtYWxLaW5kKX1nZXRQb3NpdGlvbkRhdGEoZT0hMSx0PSExLGkpe3JldHVybiB0aGlzLl9nZXREYXRhKGUsdCxpLGcuUG9zaXRpb25LaW5kKX1fZ2V0UG9zaXRpb25EYXRhKGUsdCl7dmFyIGk7bGV0IHM9dGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5Qb3NpdGlvbktpbmQpO2lmKHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX3Bvc2l0aW9ucyYmKHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX3Bvc2l0aW9ucz1udWxsKSxzJiYoZSYmdGhpcy5za2VsZXRvbnx8dCYmdGhpcy5tb3JwaFRhcmdldE1hbmFnZXIpKXtpZihzPXMuc2xpY2UoKSx0aGlzLl9nZW5lcmF0ZVBvaW50c0FycmF5KCksdGhpcy5fcG9zaXRpb25zKXtjb25zdCByPXRoaXMuX3Bvc2l0aW9uczt0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9wb3NpdGlvbnM9bmV3IEFycmF5KHIubGVuZ3RoKTtmb3IobGV0IG49MDtuPHIubGVuZ3RoO24rKyl0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9wb3NpdGlvbnNbbl09KChpPXJbbl0pPT09bnVsbHx8aT09PXZvaWQgMD92b2lkIDA6aS5jbG9uZSgpKXx8bmV3IHB9cmV0dXJuIHRoaXMuZ2V0UG9zaXRpb25EYXRhKGUsdCxzKX1yZXR1cm4gc31fdXBkYXRlQm91bmRpbmdJbmZvKCl7cmV0dXJuIHRoaXMuX2JvdW5kaW5nSW5mbz90aGlzLl9ib3VuZGluZ0luZm8udXBkYXRlKHRoaXMud29ybGRNYXRyaXhGcm9tQ2FjaGUpOnRoaXMuX2JvdW5kaW5nSW5mbz1uZXcgZHQocC5aZXJvKCkscC5aZXJvKCksdGhpcy53b3JsZE1hdHJpeEZyb21DYWNoZSksdGhpcy5fdXBkYXRlU3ViTWVzaGVzQm91bmRpbmdJbmZvKHRoaXMud29ybGRNYXRyaXhGcm9tQ2FjaGUpLHRoaXN9X3VwZGF0ZVN1Yk1lc2hlc0JvdW5kaW5nSW5mbyhlKXtpZighdGhpcy5zdWJNZXNoZXMpcmV0dXJuIHRoaXM7Y29uc3QgdD10aGlzLnN1Yk1lc2hlcy5sZW5ndGg7Zm9yKGxldCBpPTA7aTx0O2krKyl7Y29uc3Qgcz10aGlzLnN1Yk1lc2hlc1tpXTsodD4xfHwhcy5Jc0dsb2JhbCkmJnMudXBkYXRlQm91bmRpbmdJbmZvKGUpfXJldHVybiB0aGlzfV9hZnRlckNvbXB1dGVXb3JsZE1hdHJpeCgpe3RoaXMuZG9Ob3RTeW5jQm91bmRpbmdJbmZvfHwodGhpcy5fYm91bmRpbmdJbmZvSXNEaXJ0eT0hMCl9aXNJbkZydXN0dW0oZSl7cmV0dXJuIHRoaXMuZ2V0Qm91bmRpbmdJbmZvKCkuaXNJbkZydXN0dW0oZSx0aGlzLmN1bGxpbmdTdHJhdGVneSl9aXNDb21wbGV0ZWx5SW5GcnVzdHVtKGUpe3JldHVybiB0aGlzLmdldEJvdW5kaW5nSW5mbygpLmlzQ29tcGxldGVseUluRnJ1c3R1bShlKX1pbnRlcnNlY3RzTWVzaChlLHQ9ITEsaSl7Y29uc3Qgcz10aGlzLmdldEJvdW5kaW5nSW5mbygpLHI9ZS5nZXRCb3VuZGluZ0luZm8oKTtpZihzLmludGVyc2VjdHMocix0KSlyZXR1cm4hMDtpZihpKXtmb3IoY29uc3QgbiBvZiB0aGlzLmdldENoaWxkTWVzaGVzKCkpaWYobi5pbnRlcnNlY3RzTWVzaChlLHQsITApKXJldHVybiEwfXJldHVybiExfWludGVyc2VjdHNQb2ludChlKXtyZXR1cm4gdGhpcy5nZXRCb3VuZGluZ0luZm8oKS5pbnRlcnNlY3RzUG9pbnQoZSl9Z2V0IGNoZWNrQ29sbGlzaW9ucygpe3JldHVybiB0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9tZXNoQ29sbGlzaW9uRGF0YS5fY2hlY2tDb2xsaXNpb25zfXNldCBjaGVja0NvbGxpc2lvbnMoZSl7dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWVzaENvbGxpc2lvbkRhdGEuX2NoZWNrQ29sbGlzaW9ucz1lfWdldCBjb2xsaWRlcigpe3JldHVybiB0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9tZXNoQ29sbGlzaW9uRGF0YS5fY29sbGlkZXJ9bW92ZVdpdGhDb2xsaXNpb25zKGUpe3RoaXMuZ2V0QWJzb2x1dGVQb3NpdGlvbigpLmFkZFRvUmVmKHRoaXMuZWxsaXBzb2lkT2Zmc2V0LHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX21lc2hDb2xsaXNpb25EYXRhLl9vbGRQb3NpdGlvbkZvckNvbGxpc2lvbnMpO2NvbnN0IGk9dGhpcy5nZXRTY2VuZSgpLmNvbGxpc2lvbkNvb3JkaW5hdG9yO3JldHVybiB0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9tZXNoQ29sbGlzaW9uRGF0YS5fY29sbGlkZXJ8fCh0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9tZXNoQ29sbGlzaW9uRGF0YS5fY29sbGlkZXI9aS5jcmVhdGVDb2xsaWRlcigpKSx0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9tZXNoQ29sbGlzaW9uRGF0YS5fY29sbGlkZXIuX3JhZGl1cz10aGlzLmVsbGlwc29pZCxpLmdldE5ld1Bvc2l0aW9uKHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX21lc2hDb2xsaXNpb25EYXRhLl9vbGRQb3NpdGlvbkZvckNvbGxpc2lvbnMsZSx0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9tZXNoQ29sbGlzaW9uRGF0YS5fY29sbGlkZXIsdGhpcy5jb2xsaXNpb25SZXRyeUNvdW50LHRoaXMsdGhpcy5fb25Db2xsaXNpb25Qb3NpdGlvbkNoYW5nZSx0aGlzLnVuaXF1ZUlkKSx0aGlzfV9jb2xsaWRlRm9yU3ViTWVzaChlLHQsaSl7dmFyIHM7aWYodGhpcy5fZ2VuZXJhdGVQb2ludHNBcnJheSgpLCF0aGlzLl9wb3NpdGlvbnMpcmV0dXJuIHRoaXM7aWYoIWUuX2xhc3RDb2xsaWRlcldvcmxkVmVydGljZXN8fCFlLl9sYXN0Q29sbGlkZXJUcmFuc2Zvcm1NYXRyaXguZXF1YWxzKHQpKXtlLl9sYXN0Q29sbGlkZXJUcmFuc2Zvcm1NYXRyaXg9dC5jbG9uZSgpLGUuX2xhc3RDb2xsaWRlcldvcmxkVmVydGljZXM9W10sZS5fdHJpYW5nbGVQbGFuZXM9W107Y29uc3Qgcj1lLnZlcnRpY2VzU3RhcnQsbj1lLnZlcnRpY2VzU3RhcnQrZS52ZXJ0aWNlc0NvdW50O2ZvcihsZXQgYT1yO2E8bjthKyspZS5fbGFzdENvbGxpZGVyV29ybGRWZXJ0aWNlcy5wdXNoKHAuVHJhbnNmb3JtQ29vcmRpbmF0ZXModGhpcy5fcG9zaXRpb25zW2FdLHQpKX1yZXR1cm4gaS5fY29sbGlkZShlLl90cmlhbmdsZVBsYW5lcyxlLl9sYXN0Q29sbGlkZXJXb3JsZFZlcnRpY2VzLHRoaXMuZ2V0SW5kaWNlcygpLGUuaW5kZXhTdGFydCxlLmluZGV4U3RhcnQrZS5pbmRleENvdW50LGUudmVydGljZXNTdGFydCwhIWUuZ2V0TWF0ZXJpYWwoKSx0aGlzLHRoaXMuX3Nob3VsZENvbnZlcnRSSFMoKSwoKHM9ZS5nZXRNYXRlcmlhbCgpKT09PW51bGx8fHM9PT12b2lkIDA/dm9pZCAwOnMuZmlsbE1vZGUpPT09NyksdGhpc31fcHJvY2Vzc0NvbGxpc2lvbnNGb3JTdWJNZXNoZXMoZSx0KXtjb25zdCBpPXRoaXMuX3NjZW5lLmdldENvbGxpZGluZ1N1Yk1lc2hDYW5kaWRhdGVzKHRoaXMsZSkscz1pLmxlbmd0aDtmb3IobGV0IHI9MDtyPHM7cisrKXtjb25zdCBuPWkuZGF0YVtyXTtzPjEmJiFuLl9jaGVja0NvbGxpc2lvbihlKXx8dGhpcy5fY29sbGlkZUZvclN1Yk1lc2gobix0LGUpfXJldHVybiB0aGlzfV9zaG91bGRDb252ZXJ0UkhTKCl7cmV0dXJuITF9X2NoZWNrQ29sbGlzaW9uKGUpe2lmKCF0aGlzLmdldEJvdW5kaW5nSW5mbygpLl9jaGVja0NvbGxpc2lvbihlKSlyZXR1cm4gdGhpcztjb25zdCB0PUQuTWF0cml4WzBdLGk9RC5NYXRyaXhbMV07cmV0dXJuIHguU2NhbGluZ1RvUmVmKDEvZS5fcmFkaXVzLngsMS9lLl9yYWRpdXMueSwxL2UuX3JhZGl1cy56LHQpLHRoaXMud29ybGRNYXRyaXhGcm9tQ2FjaGUubXVsdGlwbHlUb1JlZih0LGkpLHRoaXMuX3Byb2Nlc3NDb2xsaXNpb25zRm9yU3ViTWVzaGVzKGUsaSksdGhpc31fZ2VuZXJhdGVQb2ludHNBcnJheSgpe3JldHVybiExfWludGVyc2VjdHMoZSx0LGkscz0hMSxyLG49ITEpe2NvbnN0IGE9bmV3IFV0LG89dGhpcy5nZXRDbGFzc05hbWUoKT09PSJJbnN0YW5jZWRMaW5lc01lc2gifHx0aGlzLmdldENsYXNzTmFtZSgpPT09IkxpbmVzTWVzaCI/dGhpcy5pbnRlcnNlY3Rpb25UaHJlc2hvbGQ6MCxoPXRoaXMuZ2V0Qm91bmRpbmdJbmZvKCk7aWYoIXRoaXMuc3ViTWVzaGVzfHwhbiYmKCFlLmludGVyc2VjdHNTcGhlcmUoaC5ib3VuZGluZ1NwaGVyZSxvKXx8IWUuaW50ZXJzZWN0c0JveChoLmJvdW5kaW5nQm94LG8pKSlyZXR1cm4gYTtpZihzKXJldHVybiBhLmhpdD0hbixhLnBpY2tlZE1lc2g9bj9udWxsOnRoaXMsYS5kaXN0YW5jZT1uPzA6cC5EaXN0YW5jZShlLm9yaWdpbixoLmJvdW5kaW5nU3BoZXJlLmNlbnRlciksYS5zdWJNZXNoSWQ9MCxhO2lmKCF0aGlzLl9nZW5lcmF0ZVBvaW50c0FycmF5KCkpcmV0dXJuIGE7bGV0IGw9bnVsbDtjb25zdCB1PXRoaXMuX3NjZW5lLmdldEludGVyc2VjdGluZ1N1Yk1lc2hDYW5kaWRhdGVzKHRoaXMsZSksZD11Lmxlbmd0aDtsZXQgZj0hMTtmb3IobGV0IF89MDtfPGQ7XysrKXtjb25zdCBtPXUuZGF0YVtfXS5nZXRNYXRlcmlhbCgpO2lmKG0mJihtLmZpbGxNb2RlPT03fHxtLmZpbGxNb2RlPT0wfHxtLmZpbGxNb2RlPT0xfHxtLmZpbGxNb2RlPT0yfHxtLmZpbGxNb2RlPT00KSl7Zj0hMDticmVha319aWYoIWYpcmV0dXJuIGEuaGl0PSEwLGEucGlja2VkTWVzaD10aGlzLGEuZGlzdGFuY2U9cC5EaXN0YW5jZShlLm9yaWdpbixoLmJvdW5kaW5nU3BoZXJlLmNlbnRlciksYS5zdWJNZXNoSWQ9LTEsYTtmb3IobGV0IF89MDtfPGQ7XysrKXtjb25zdCBFPXUuZGF0YVtfXTtpZihkPjEmJiFFLmNhbkludGVyc2VjdHMoZSkpY29udGludWU7Y29uc3QgbT1FLmludGVyc2VjdHMoZSx0aGlzLl9wb3NpdGlvbnMsdGhpcy5nZXRJbmRpY2VzKCksdCxpKTtpZihtJiYodHx8IWx8fG0uZGlzdGFuY2U8bC5kaXN0YW5jZSkmJihsPW0sbC5zdWJNZXNoSWQ9Xyx0KSlicmVha31pZihsKXtjb25zdCBfPXI/P3RoaXMuZ2V0V29ybGRNYXRyaXgoKSxFPUQuVmVjdG9yM1swXSxtPUQuVmVjdG9yM1sxXTtwLlRyYW5zZm9ybUNvb3JkaW5hdGVzVG9SZWYoZS5vcmlnaW4sXyxFKSxlLmRpcmVjdGlvbi5zY2FsZVRvUmVmKGwuZGlzdGFuY2UsbSk7Y29uc3QgUz1wLlRyYW5zZm9ybU5vcm1hbChtLF8pLmFkZEluUGxhY2UoRSk7cmV0dXJuIGEuaGl0PSEwLGEuZGlzdGFuY2U9cC5EaXN0YW5jZShFLFMpLGEucGlja2VkUG9pbnQ9UyxhLnBpY2tlZE1lc2g9dGhpcyxhLmJ1PWwuYnV8fDAsYS5idj1sLmJ2fHwwLGEuc3ViTWVzaEZhY2VJZD1sLmZhY2VJZCxhLmZhY2VJZD1sLmZhY2VJZCt1LmRhdGFbbC5zdWJNZXNoSWRdLmluZGV4U3RhcnQvKHRoaXMuZ2V0Q2xhc3NOYW1lKCkuaW5kZXhPZigiTGluZXNNZXNoIikhPT0tMT8yOjMpLGEuc3ViTWVzaElkPWwuc3ViTWVzaElkLGF9cmV0dXJuIGF9Y2xvbmUoZSx0LGkpe3JldHVybiBudWxsfXJlbGVhc2VTdWJNZXNoZXMoKXtpZih0aGlzLnN1Yk1lc2hlcylmb3IoO3RoaXMuc3ViTWVzaGVzLmxlbmd0aDspdGhpcy5zdWJNZXNoZXNbMF0uZGlzcG9zZSgpO2Vsc2UgdGhpcy5zdWJNZXNoZXM9bmV3IEFycmF5O3JldHVybiB0aGlzfWRpc3Bvc2UoZSx0PSExKXtsZXQgaTtmb3IodGhpcy5fc2NlbmUudXNlTWF0ZXJpYWxNZXNoTWFwJiZ0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9tYXRlcmlhbCYmdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWF0ZXJpYWwubWVzaE1hcCYmKHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX21hdGVyaWFsLm1lc2hNYXBbdGhpcy51bmlxdWVJZF09dm9pZCAwKSx0aGlzLmdldFNjZW5lKCkuZnJlZUFjdGl2ZU1lc2hlcygpLHRoaXMuZ2V0U2NlbmUoKS5mcmVlUmVuZGVyaW5nR3JvdXBzKCksdGhpcy5hY3Rpb25NYW5hZ2VyIT09dm9pZCAwJiZ0aGlzLmFjdGlvbk1hbmFnZXIhPT1udWxsJiYodGhpcy5hY3Rpb25NYW5hZ2VyLmRpc3Bvc2UoKSx0aGlzLmFjdGlvbk1hbmFnZXI9bnVsbCksdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fc2tlbGV0b249bnVsbCx0aGlzLl90cmFuc2Zvcm1NYXRyaXhUZXh0dXJlJiYodGhpcy5fdHJhbnNmb3JtTWF0cml4VGV4dHVyZS5kaXNwb3NlKCksdGhpcy5fdHJhbnNmb3JtTWF0cml4VGV4dHVyZT1udWxsKSxpPTA7aTx0aGlzLl9pbnRlcnNlY3Rpb25zSW5Qcm9ncmVzcy5sZW5ndGg7aSsrKXtjb25zdCBuPXRoaXMuX2ludGVyc2VjdGlvbnNJblByb2dyZXNzW2ldLGE9bi5faW50ZXJzZWN0aW9uc0luUHJvZ3Jlc3MuaW5kZXhPZih0aGlzKTtuLl9pbnRlcnNlY3Rpb25zSW5Qcm9ncmVzcy5zcGxpY2UoYSwxKX10aGlzLl9pbnRlcnNlY3Rpb25zSW5Qcm9ncmVzcy5sZW5ndGg9MCx0aGlzLmdldFNjZW5lKCkubGlnaHRzLmZvckVhY2gobj0+e2xldCBhPW4uaW5jbHVkZWRPbmx5TWVzaGVzLmluZGV4T2YodGhpcyk7YSE9PS0xJiZuLmluY2x1ZGVkT25seU1lc2hlcy5zcGxpY2UoYSwxKSxhPW4uZXhjbHVkZWRNZXNoZXMuaW5kZXhPZih0aGlzKSxhIT09LTEmJm4uZXhjbHVkZWRNZXNoZXMuc3BsaWNlKGEsMSk7Y29uc3Qgbz1uLmdldFNoYWRvd0dlbmVyYXRvcnMoKTtpZihvKXtjb25zdCBoPW8udmFsdWVzKCk7Zm9yKGxldCBsPWgubmV4dCgpO2wuZG9uZSE9PSEwO2w9aC5uZXh0KCkpe2NvbnN0IGQ9bC52YWx1ZS5nZXRTaGFkb3dNYXAoKTtkJiZkLnJlbmRlckxpc3QmJihhPWQucmVuZGVyTGlzdC5pbmRleE9mKHRoaXMpLGEhPT0tMSYmZC5yZW5kZXJMaXN0LnNwbGljZShhLDEpKX19fSksKHRoaXMuZ2V0Q2xhc3NOYW1lKCkhPT0iSW5zdGFuY2VkTWVzaCJ8fHRoaXMuZ2V0Q2xhc3NOYW1lKCkhPT0iSW5zdGFuY2VkTGluZXNNZXNoIikmJnRoaXMucmVsZWFzZVN1Yk1lc2hlcygpO2NvbnN0IHI9dGhpcy5nZXRTY2VuZSgpLmdldEVuZ2luZSgpO2lmKHRoaXMuX29jY2x1c2lvblF1ZXJ5IT09bnVsbCYmKHRoaXMuaXNPY2NsdXNpb25RdWVyeUluUHJvZ3Jlc3M9ITEsci5kZWxldGVRdWVyeSh0aGlzLl9vY2NsdXNpb25RdWVyeSksdGhpcy5fb2NjbHVzaW9uUXVlcnk9bnVsbCksci53aXBlQ2FjaGVzKCksdGhpcy5nZXRTY2VuZSgpLnJlbW92ZU1lc2godGhpcyksdGhpcy5fcGFyZW50Q29udGFpbmVyKXtjb25zdCBuPXRoaXMuX3BhcmVudENvbnRhaW5lci5tZXNoZXMuaW5kZXhPZih0aGlzKTtuPi0xJiZ0aGlzLl9wYXJlbnRDb250YWluZXIubWVzaGVzLnNwbGljZShuLDEpLHRoaXMuX3BhcmVudENvbnRhaW5lcj1udWxsfWlmKHQmJnRoaXMubWF0ZXJpYWwmJih0aGlzLm1hdGVyaWFsLmdldENsYXNzTmFtZSgpPT09Ik11bHRpTWF0ZXJpYWwiP3RoaXMubWF0ZXJpYWwuZGlzcG9zZSghMSwhMCwhMCk6dGhpcy5tYXRlcmlhbC5kaXNwb3NlKCExLCEwKSksIWUpZm9yKGk9MDtpPHRoaXMuZ2V0U2NlbmUoKS5wYXJ0aWNsZVN5c3RlbXMubGVuZ3RoO2krKyl0aGlzLmdldFNjZW5lKCkucGFydGljbGVTeXN0ZW1zW2ldLmVtaXR0ZXI9PT10aGlzJiYodGhpcy5nZXRTY2VuZSgpLnBhcnRpY2xlU3lzdGVtc1tpXS5kaXNwb3NlKCksaS0tKTt0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9mYWNldERhdGEuZmFjZXREYXRhRW5hYmxlZCYmdGhpcy5kaXNhYmxlRmFjZXREYXRhKCksdGhpcy5fdW5pZm9ybUJ1ZmZlci5kaXNwb3NlKCksdGhpcy5vbkFmdGVyV29ybGRNYXRyaXhVcGRhdGVPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkNvbGxpZGVPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkNvbGxpc2lvblBvc2l0aW9uQ2hhbmdlT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25SZWJ1aWxkT2JzZXJ2YWJsZS5jbGVhcigpLHN1cGVyLmRpc3Bvc2UoZSx0KX1hZGRDaGlsZChlLHQ9ITEpe3JldHVybiBlLnNldFBhcmVudCh0aGlzLHQpLHRoaXN9cmVtb3ZlQ2hpbGQoZSx0PSExKXtyZXR1cm4gZS5zZXRQYXJlbnQobnVsbCx0KSx0aGlzfV9pbml0RmFjZXREYXRhKCl7Y29uc3QgZT10aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9mYWNldERhdGE7ZS5mYWNldE5vcm1hbHN8fChlLmZhY2V0Tm9ybWFscz1uZXcgQXJyYXkpLGUuZmFjZXRQb3NpdGlvbnN8fChlLmZhY2V0UG9zaXRpb25zPW5ldyBBcnJheSksZS5mYWNldFBhcnRpdGlvbmluZ3x8KGUuZmFjZXRQYXJ0aXRpb25pbmc9bmV3IEFycmF5KSxlLmZhY2V0TmI9dGhpcy5nZXRJbmRpY2VzKCkubGVuZ3RoLzN8MCxlLnBhcnRpdGlvbmluZ1N1YmRpdmlzaW9ucz1lLnBhcnRpdGlvbmluZ1N1YmRpdmlzaW9ucz9lLnBhcnRpdGlvbmluZ1N1YmRpdmlzaW9uczoxMCxlLnBhcnRpdGlvbmluZ0JCb3hSYXRpbz1lLnBhcnRpdGlvbmluZ0JCb3hSYXRpbz9lLnBhcnRpdGlvbmluZ0JCb3hSYXRpbzoxLjAxO2ZvcihsZXQgdD0wO3Q8ZS5mYWNldE5iO3QrKyllLmZhY2V0Tm9ybWFsc1t0XT1wLlplcm8oKSxlLmZhY2V0UG9zaXRpb25zW3RdPXAuWmVybygpO3JldHVybiBlLmZhY2V0RGF0YUVuYWJsZWQ9ITAsdGhpc311cGRhdGVGYWNldERhdGEoKXtjb25zdCBlPXRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2ZhY2V0RGF0YTtlLmZhY2V0RGF0YUVuYWJsZWR8fHRoaXMuX2luaXRGYWNldERhdGEoKTtjb25zdCB0PXRoaXMuZ2V0VmVydGljZXNEYXRhKGcuUG9zaXRpb25LaW5kKSxpPXRoaXMuZ2V0SW5kaWNlcygpLHM9dGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5Ob3JtYWxLaW5kKSxyPXRoaXMuZ2V0Qm91bmRpbmdJbmZvKCk7aWYoZS5mYWNldERlcHRoU29ydCYmIWUuZmFjZXREZXB0aFNvcnRFbmFibGVkKXtpZihlLmZhY2V0RGVwdGhTb3J0RW5hYmxlZD0hMCxpIGluc3RhbmNlb2YgVWludDE2QXJyYXkpZS5kZXB0aFNvcnRlZEluZGljZXM9bmV3IFVpbnQxNkFycmF5KGkpO2Vsc2UgaWYoaSBpbnN0YW5jZW9mIFVpbnQzMkFycmF5KWUuZGVwdGhTb3J0ZWRJbmRpY2VzPW5ldyBVaW50MzJBcnJheShpKTtlbHNle2xldCBhPSExO2ZvcihsZXQgbz0wO288aS5sZW5ndGg7bysrKWlmKGlbb10+NjU1MzUpe2E9ITA7YnJlYWt9YT9lLmRlcHRoU29ydGVkSW5kaWNlcz1uZXcgVWludDMyQXJyYXkoaSk6ZS5kZXB0aFNvcnRlZEluZGljZXM9bmV3IFVpbnQxNkFycmF5KGkpfWlmKGUuZmFjZXREZXB0aFNvcnRGdW5jdGlvbj1mdW5jdGlvbihhLG8pe3JldHVybiBvLnNxRGlzdGFuY2UtYS5zcURpc3RhbmNlfSwhZS5mYWNldERlcHRoU29ydEZyb20pe2NvbnN0IGE9dGhpcy5nZXRTY2VuZSgpLmFjdGl2ZUNhbWVyYTtlLmZhY2V0RGVwdGhTb3J0RnJvbT1hP2EucG9zaXRpb246cC5aZXJvKCl9ZS5kZXB0aFNvcnRlZEZhY2V0cz1bXTtmb3IobGV0IGE9MDthPGUuZmFjZXROYjthKyspe2NvbnN0IG89e2luZDphKjMsc3FEaXN0YW5jZTowfTtlLmRlcHRoU29ydGVkRmFjZXRzLnB1c2gobyl9ZS5pbnZlcnRlZE1hdHJpeD14LklkZW50aXR5KCksZS5mYWNldERlcHRoU29ydE9yaWdpbj1wLlplcm8oKX1lLmJiU2l6ZS54PXIubWF4aW11bS54LXIubWluaW11bS54PnhlP3IubWF4aW11bS54LXIubWluaW11bS54OnhlLGUuYmJTaXplLnk9ci5tYXhpbXVtLnktci5taW5pbXVtLnk+eGU/ci5tYXhpbXVtLnktci5taW5pbXVtLnk6eGUsZS5iYlNpemUuej1yLm1heGltdW0uei1yLm1pbmltdW0uej54ZT9yLm1heGltdW0uei1yLm1pbmltdW0uejp4ZTtsZXQgbj1lLmJiU2l6ZS54PmUuYmJTaXplLnk/ZS5iYlNpemUueDplLmJiU2l6ZS55O2lmKG49bj5lLmJiU2l6ZS56P246ZS5iYlNpemUueixlLnN1YkRpdi5tYXg9ZS5wYXJ0aXRpb25pbmdTdWJkaXZpc2lvbnMsZS5zdWJEaXYuWD1NYXRoLmZsb29yKGUuc3ViRGl2Lm1heCplLmJiU2l6ZS54L24pLGUuc3ViRGl2Llk9TWF0aC5mbG9vcihlLnN1YkRpdi5tYXgqZS5iYlNpemUueS9uKSxlLnN1YkRpdi5aPU1hdGguZmxvb3IoZS5zdWJEaXYubWF4KmUuYmJTaXplLnovbiksZS5zdWJEaXYuWD1lLnN1YkRpdi5YPDE/MTplLnN1YkRpdi5YLGUuc3ViRGl2Llk9ZS5zdWJEaXYuWTwxPzE6ZS5zdWJEaXYuWSxlLnN1YkRpdi5aPWUuc3ViRGl2Llo8MT8xOmUuc3ViRGl2LlosZS5mYWNldFBhcmFtZXRlcnMuZmFjZXROb3JtYWxzPXRoaXMuZ2V0RmFjZXRMb2NhbE5vcm1hbHMoKSxlLmZhY2V0UGFyYW1ldGVycy5mYWNldFBvc2l0aW9ucz10aGlzLmdldEZhY2V0TG9jYWxQb3NpdGlvbnMoKSxlLmZhY2V0UGFyYW1ldGVycy5mYWNldFBhcnRpdGlvbmluZz10aGlzLmdldEZhY2V0TG9jYWxQYXJ0aXRpb25pbmcoKSxlLmZhY2V0UGFyYW1ldGVycy5iSW5mbz1yLGUuZmFjZXRQYXJhbWV0ZXJzLmJiU2l6ZT1lLmJiU2l6ZSxlLmZhY2V0UGFyYW1ldGVycy5zdWJEaXY9ZS5zdWJEaXYsZS5mYWNldFBhcmFtZXRlcnMucmF0aW89dGhpcy5wYXJ0aXRpb25pbmdCQm94UmF0aW8sZS5mYWNldFBhcmFtZXRlcnMuZGVwdGhTb3J0PWUuZmFjZXREZXB0aFNvcnQsZS5mYWNldERlcHRoU29ydCYmZS5mYWNldERlcHRoU29ydEVuYWJsZWQmJih0aGlzLmNvbXB1dGVXb3JsZE1hdHJpeCghMCksdGhpcy5fd29ybGRNYXRyaXguaW52ZXJ0VG9SZWYoZS5pbnZlcnRlZE1hdHJpeCkscC5UcmFuc2Zvcm1Db29yZGluYXRlc1RvUmVmKGUuZmFjZXREZXB0aFNvcnRGcm9tLGUuaW52ZXJ0ZWRNYXRyaXgsZS5mYWNldERlcHRoU29ydE9yaWdpbiksZS5mYWNldFBhcmFtZXRlcnMuZGlzdGFuY2VUbz1lLmZhY2V0RGVwdGhTb3J0T3JpZ2luKSxlLmZhY2V0UGFyYW1ldGVycy5kZXB0aFNvcnRlZEZhY2V0cz1lLmRlcHRoU29ydGVkRmFjZXRzLHMmJmVlLkNvbXB1dGVOb3JtYWxzKHQsaSxzLGUuZmFjZXRQYXJhbWV0ZXJzKSxlLmZhY2V0RGVwdGhTb3J0JiZlLmZhY2V0RGVwdGhTb3J0RW5hYmxlZCl7ZS5kZXB0aFNvcnRlZEZhY2V0cy5zb3J0KGUuZmFjZXREZXB0aFNvcnRGdW5jdGlvbik7Y29uc3QgYT1lLmRlcHRoU29ydGVkSW5kaWNlcy5sZW5ndGgvM3wwO2ZvcihsZXQgbz0wO288YTtvKyspe2NvbnN0IGg9ZS5kZXB0aFNvcnRlZEZhY2V0c1tvXS5pbmQ7ZS5kZXB0aFNvcnRlZEluZGljZXNbbyozXT1pW2hdLGUuZGVwdGhTb3J0ZWRJbmRpY2VzW28qMysxXT1pW2grMV0sZS5kZXB0aFNvcnRlZEluZGljZXNbbyozKzJdPWlbaCsyXX10aGlzLnVwZGF0ZUluZGljZXMoZS5kZXB0aFNvcnRlZEluZGljZXMsdm9pZCAwLCEwKX1yZXR1cm4gdGhpc31nZXRGYWNldExvY2FsTm9ybWFscygpe2NvbnN0IGU9dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fZmFjZXREYXRhO3JldHVybiBlLmZhY2V0Tm9ybWFsc3x8dGhpcy51cGRhdGVGYWNldERhdGEoKSxlLmZhY2V0Tm9ybWFsc31nZXRGYWNldExvY2FsUG9zaXRpb25zKCl7Y29uc3QgZT10aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9mYWNldERhdGE7cmV0dXJuIGUuZmFjZXRQb3NpdGlvbnN8fHRoaXMudXBkYXRlRmFjZXREYXRhKCksZS5mYWNldFBvc2l0aW9uc31nZXRGYWNldExvY2FsUGFydGl0aW9uaW5nKCl7Y29uc3QgZT10aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9mYWNldERhdGE7cmV0dXJuIGUuZmFjZXRQYXJ0aXRpb25pbmd8fHRoaXMudXBkYXRlRmFjZXREYXRhKCksZS5mYWNldFBhcnRpdGlvbmluZ31nZXRGYWNldFBvc2l0aW9uKGUpe2NvbnN0IHQ9cC5aZXJvKCk7cmV0dXJuIHRoaXMuZ2V0RmFjZXRQb3NpdGlvblRvUmVmKGUsdCksdH1nZXRGYWNldFBvc2l0aW9uVG9SZWYoZSx0KXtjb25zdCBpPXRoaXMuZ2V0RmFjZXRMb2NhbFBvc2l0aW9ucygpW2VdLHM9dGhpcy5nZXRXb3JsZE1hdHJpeCgpO3JldHVybiBwLlRyYW5zZm9ybUNvb3JkaW5hdGVzVG9SZWYoaSxzLHQpLHRoaXN9Z2V0RmFjZXROb3JtYWwoZSl7Y29uc3QgdD1wLlplcm8oKTtyZXR1cm4gdGhpcy5nZXRGYWNldE5vcm1hbFRvUmVmKGUsdCksdH1nZXRGYWNldE5vcm1hbFRvUmVmKGUsdCl7Y29uc3QgaT10aGlzLmdldEZhY2V0TG9jYWxOb3JtYWxzKClbZV07cmV0dXJuIHAuVHJhbnNmb3JtTm9ybWFsVG9SZWYoaSx0aGlzLmdldFdvcmxkTWF0cml4KCksdCksdGhpc31nZXRGYWNldHNBdExvY2FsQ29vcmRpbmF0ZXMoZSx0LGkpe2NvbnN0IHM9dGhpcy5nZXRCb3VuZGluZ0luZm8oKSxyPXRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2ZhY2V0RGF0YSxuPU1hdGguZmxvb3IoKGUtcy5taW5pbXVtLngqci5wYXJ0aXRpb25pbmdCQm94UmF0aW8pKnIuc3ViRGl2Llgqci5wYXJ0aXRpb25pbmdCQm94UmF0aW8vci5iYlNpemUueCksYT1NYXRoLmZsb29yKCh0LXMubWluaW11bS55KnIucGFydGl0aW9uaW5nQkJveFJhdGlvKSpyLnN1YkRpdi5ZKnIucGFydGl0aW9uaW5nQkJveFJhdGlvL3IuYmJTaXplLnkpLG89TWF0aC5mbG9vcigoaS1zLm1pbmltdW0ueipyLnBhcnRpdGlvbmluZ0JCb3hSYXRpbykqci5zdWJEaXYuWipyLnBhcnRpdGlvbmluZ0JCb3hSYXRpby9yLmJiU2l6ZS56KTtyZXR1cm4gbjwwfHxuPnIuc3ViRGl2Lm1heHx8YTwwfHxhPnIuc3ViRGl2Lm1heHx8bzwwfHxvPnIuc3ViRGl2Lm1heD9udWxsOnIuZmFjZXRQYXJ0aXRpb25pbmdbbityLnN1YkRpdi5tYXgqYStyLnN1YkRpdi5tYXgqci5zdWJEaXYubWF4Km9dfWdldENsb3Nlc3RGYWNldEF0Q29vcmRpbmF0ZXMoZSx0LGkscyxyPSExLG49ITApe2NvbnN0IGE9dGhpcy5nZXRXb3JsZE1hdHJpeCgpLG89RC5NYXRyaXhbNV07YS5pbnZlcnRUb1JlZihvKTtjb25zdCBoPUQuVmVjdG9yM1s4XTtwLlRyYW5zZm9ybUNvb3JkaW5hdGVzRnJvbUZsb2F0c1RvUmVmKGUsdCxpLG8saCk7Y29uc3QgbD10aGlzLmdldENsb3Nlc3RGYWNldEF0TG9jYWxDb29yZGluYXRlcyhoLngsaC55LGgueixzLHIsbik7cmV0dXJuIHMmJnAuVHJhbnNmb3JtQ29vcmRpbmF0ZXNGcm9tRmxvYXRzVG9SZWYocy54LHMueSxzLnosYSxzKSxsfWdldENsb3Nlc3RGYWNldEF0TG9jYWxDb29yZGluYXRlcyhlLHQsaSxzLHI9ITEsbj0hMCl7bGV0IGE9bnVsbCxvPTAsaD0wLGw9MCx1PTAsZD0wLGY9MCxfPTAsRT0wO2NvbnN0IG09dGhpcy5nZXRGYWNldExvY2FsUG9zaXRpb25zKCksdj10aGlzLmdldEZhY2V0TG9jYWxOb3JtYWxzKCksUz10aGlzLmdldEZhY2V0c0F0TG9jYWxDb29yZGluYXRlcyhlLHQsaSk7aWYoIVMpcmV0dXJuIG51bGw7bGV0IHk9TnVtYmVyLk1BWF9WQUxVRSxBPXksQyxiLE07Zm9yKGxldCBMPTA7TDxTLmxlbmd0aDtMKyspQz1TW0xdLGI9dltDXSxNPW1bQ10sdT0oZS1NLngpKmIueCsodC1NLnkpKmIueSsoaS1NLnopKmIueiwoIXJ8fHImJm4mJnU+PTB8fHImJiFuJiZ1PD0wKSYmKHU9Yi54Kk0ueCtiLnkqTS55K2IueipNLnosZD0tKGIueCplK2IueSp0K2IueippLXUpLyhiLngqYi54K2IueSpiLnkrYi56KmIueiksZj1lK2IueCpkLF89dCtiLnkqZCxFPWkrYi56KmQsbz1mLWUsaD1fLXQsbD1FLWksQT1vKm8raCpoK2wqbCxBPHkmJih5PUEsYT1DLHMmJihzLng9ZixzLnk9XyxzLno9RSkpKTtyZXR1cm4gYX1nZXRGYWNldERhdGFQYXJhbWV0ZXJzKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2ZhY2V0RGF0YS5mYWNldFBhcmFtZXRlcnN9ZGlzYWJsZUZhY2V0RGF0YSgpe2NvbnN0IGU9dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fZmFjZXREYXRhO3JldHVybiBlLmZhY2V0RGF0YUVuYWJsZWQmJihlLmZhY2V0RGF0YUVuYWJsZWQ9ITEsZS5mYWNldFBvc2l0aW9ucz1uZXcgQXJyYXksZS5mYWNldE5vcm1hbHM9bmV3IEFycmF5LGUuZmFjZXRQYXJ0aXRpb25pbmc9bmV3IEFycmF5LGUuZmFjZXRQYXJhbWV0ZXJzPW51bGwsZS5kZXB0aFNvcnRlZEluZGljZXM9bmV3IFVpbnQzMkFycmF5KDApKSx0aGlzfXVwZGF0ZUluZGljZXMoZSx0LGk9ITEpe3JldHVybiB0aGlzfWNyZWF0ZU5vcm1hbHMoZSl7Y29uc3QgdD10aGlzLmdldFZlcnRpY2VzRGF0YShnLlBvc2l0aW9uS2luZCksaT10aGlzLmdldEluZGljZXMoKTtsZXQgcztyZXR1cm4gdGhpcy5pc1ZlcnRpY2VzRGF0YVByZXNlbnQoZy5Ob3JtYWxLaW5kKT9zPXRoaXMuZ2V0VmVydGljZXNEYXRhKGcuTm9ybWFsS2luZCk6cz1bXSxlZS5Db21wdXRlTm9ybWFscyh0LGkscyx7dXNlUmlnaHRIYW5kZWRTeXN0ZW06dGhpcy5nZXRTY2VuZSgpLnVzZVJpZ2h0SGFuZGVkU3lzdGVtfSksdGhpcy5zZXRWZXJ0aWNlc0RhdGEoZy5Ob3JtYWxLaW5kLHMsZSksdGhpc31hbGlnbldpdGhOb3JtYWwoZSx0KXt0fHwodD1faS5ZKTtjb25zdCBpPUQuVmVjdG9yM1swXSxzPUQuVmVjdG9yM1sxXTtyZXR1cm4gcC5Dcm9zc1RvUmVmKHQsZSxzKSxwLkNyb3NzVG9SZWYoZSxzLGkpLHRoaXMucm90YXRpb25RdWF0ZXJuaW9uP1ouUm90YXRpb25RdWF0ZXJuaW9uRnJvbUF4aXNUb1JlZihpLGUscyx0aGlzLnJvdGF0aW9uUXVhdGVybmlvbik6cC5Sb3RhdGlvbkZyb21BeGlzVG9SZWYoaSxlLHMsdGhpcy5yb3RhdGlvbiksdGhpc31fY2hlY2tPY2NsdXNpb25RdWVyeSgpe3JldHVybiExfWRpc2FibGVFZGdlc1JlbmRlcmluZygpe3Rocm93ICQoIkVkZ2VzUmVuZGVyZXIiKX1lbmFibGVFZGdlc1JlbmRlcmluZyhlLHQsaSl7dGhyb3cgJCgiRWRnZXNSZW5kZXJlciIpfWdldENvbm5lY3RlZFBhcnRpY2xlU3lzdGVtcygpe3JldHVybiB0aGlzLl9zY2VuZS5wYXJ0aWNsZVN5c3RlbXMuZmlsdGVyKGU9PmUuZW1pdHRlcj09PXRoaXMpfX1vdC5PQ0NMVVNJT05fVFlQRV9OT05FPTAsb3QuT0NDTFVTSU9OX1RZUEVfT1BUSU1JU1RJQz0xLG90Lk9DQ0xVU0lPTl9UWVBFX1NUUklDVD0yLG90Lk9DQ0xVU0lPTl9BTEdPUklUSE1fVFlQRV9BQ0NVUkFURT0wLG90Lk9DQ0xVU0lPTl9BTEdPUklUSE1fVFlQRV9DT05TRVJWQVRJVkU9MSxvdC5DVUxMSU5HU1RSQVRFR1lfU1RBTkRBUkQ9MCxvdC5DVUxMSU5HU1RSQVRFR1lfQk9VTkRJTkdTUEhFUkVfT05MWT0xLG90LkNVTExJTkdTVFJBVEVHWV9PUFRJTUlTVElDX0lOQ0xVU0lPTj0yLG90LkNVTExJTkdTVFJBVEVHWV9PUFRJTUlTVElDX0lOQ0xVU0lPTl9USEVOX0JTUEhFUkVfT05MWT0zLGl0KCJCQUJZTE9OLkFic3RyYWN0TWVzaCIsb3QpO2Z1bmN0aW9uIHNzKGMpe2MuaW5kZXhPZigidkNsaXBQbGFuZSIpPT09LTEmJmMucHVzaCgidkNsaXBQbGFuZSIpLGMuaW5kZXhPZigidkNsaXBQbGFuZTIiKT09PS0xJiZjLnB1c2goInZDbGlwUGxhbmUyIiksYy5pbmRleE9mKCJ2Q2xpcFBsYW5lMyIpPT09LTEmJmMucHVzaCgidkNsaXBQbGFuZTMiKSxjLmluZGV4T2YoInZDbGlwUGxhbmU0Iik9PT0tMSYmYy5wdXNoKCJ2Q2xpcFBsYW5lNCIpLGMuaW5kZXhPZigidkNsaXBQbGFuZTUiKT09PS0xJiZjLnB1c2goInZDbGlwUGxhbmU1IiksYy5pbmRleE9mKCJ2Q2xpcFBsYW5lNiIpPT09LTEmJmMucHVzaCgidkNsaXBQbGFuZTYiKX1mdW5jdGlvbiBPcyhjLGUsdCl7dmFyIGkscyxyLG4sYSxvO2xldCBoPSExLGw9KGk9Yy5jbGlwUGxhbmUpIT09bnVsbCYmaSE9PXZvaWQgMD9pOmUuY2xpcFBsYW5lO3JldHVybiBoPWJpKGwsdCwiQ0xJUFBMQU5FIil8fGgsbD0ocz1jLmNsaXBQbGFuZTIpIT09bnVsbCYmcyE9PXZvaWQgMD9zOmUuY2xpcFBsYW5lMixoPWJpKGwsdCwiQ0xJUFBMQU5FMiIpfHxoLGw9KHI9Yy5jbGlwUGxhbmUzKSE9PW51bGwmJnIhPT12b2lkIDA/cjplLmNsaXBQbGFuZTMsaD1iaShsLHQsIkNMSVBQTEFORTMiKXx8aCxsPShuPWMuY2xpcFBsYW5lNCkhPT1udWxsJiZuIT09dm9pZCAwP246ZS5jbGlwUGxhbmU0LGg9YmkobCx0LCJDTElQUExBTkU0Iil8fGgsbD0oYT1jLmNsaXBQbGFuZTUpIT09bnVsbCYmYSE9PXZvaWQgMD9hOmUuY2xpcFBsYW5lNSxoPWJpKGwsdCwiQ0xJUFBMQU5FNSIpfHxoLGw9KG89Yy5jbGlwUGxhbmU2KSE9PW51bGwmJm8hPT12b2lkIDA/bzplLmNsaXBQbGFuZTYsaD1iaShsLHQsIkNMSVBQTEFORTYiKXx8aCxofWZ1bmN0aW9uIHJzKGMsZSx0KXt2YXIgaSxzLHIsbixhLG87bGV0IGg9KGk9ZS5jbGlwUGxhbmUpIT09bnVsbCYmaSE9PXZvaWQgMD9pOnQuY2xpcFBsYW5lO1RpKGMsInZDbGlwUGxhbmUiLGgpLGg9KHM9ZS5jbGlwUGxhbmUyKSE9PW51bGwmJnMhPT12b2lkIDA/czp0LmNsaXBQbGFuZTIsVGkoYywidkNsaXBQbGFuZTIiLGgpLGg9KHI9ZS5jbGlwUGxhbmUzKSE9PW51bGwmJnIhPT12b2lkIDA/cjp0LmNsaXBQbGFuZTMsVGkoYywidkNsaXBQbGFuZTMiLGgpLGg9KG49ZS5jbGlwUGxhbmU0KSE9PW51bGwmJm4hPT12b2lkIDA/bjp0LmNsaXBQbGFuZTQsVGkoYywidkNsaXBQbGFuZTQiLGgpLGg9KGE9ZS5jbGlwUGxhbmU1KSE9PW51bGwmJmEhPT12b2lkIDA/YTp0LmNsaXBQbGFuZTUsVGkoYywidkNsaXBQbGFuZTUiLGgpLGg9KG89ZS5jbGlwUGxhbmU2KSE9PW51bGwmJm8hPT12b2lkIDA/bzp0LmNsaXBQbGFuZTYsVGkoYywidkNsaXBQbGFuZTYiLGgpfWZ1bmN0aW9uIFRpKGMsZSx0KXt0JiZjLnNldEZsb2F0NChlLHQubm9ybWFsLngsdC5ub3JtYWwueSx0Lm5vcm1hbC56LHQuZCl9ZnVuY3Rpb24gYmkoYyxlLHQpe2xldCBpPSEwO2lmKGMpaWYoQXJyYXkuaXNBcnJheShlKSl7Y29uc3Qgcz0iI2RlZmluZSAiK3Q7aT1lLmluZGV4T2YocykhPT0tMSxpfHxlLnB1c2gocyl9ZWxzZSBpPWVbdF0sZVt0XT0hMDtyZXR1cm4haX1jbGFzcyBpZXtzdGF0aWMgQmluZFNjZW5lVW5pZm9ybUJ1ZmZlcihlLHQpe3QuYmluZFRvRWZmZWN0KGUsIlNjZW5lIil9c3RhdGljIFByZXBhcmVEZWZpbmVzRm9yTWVyZ2VkVVYoZSx0LGkpe3QuX25lZWRVVnM9ITAsdFtpXT0hMCxlLm9wdGltaXplVVZBbGxvY2F0aW9uJiZlLmdldFRleHR1cmVNYXRyaXgoKS5pc0lkZW50aXR5QXMzeDIoKT8odFtpKyJESVJFQ1RVViJdPWUuY29vcmRpbmF0ZXNJbmRleCsxLHRbIk1BSU5VViIrKGUuY29vcmRpbmF0ZXNJbmRleCsxKV09ITApOnRbaSsiRElSRUNUVVYiXT0wfXN0YXRpYyBCaW5kVGV4dHVyZU1hdHJpeChlLHQsaSl7Y29uc3Qgcz1lLmdldFRleHR1cmVNYXRyaXgoKTt0LnVwZGF0ZU1hdHJpeChpKyJNYXRyaXgiLHMpfXN0YXRpYyBHZXRGb2dTdGF0ZShlLHQpe3JldHVybiB0LmZvZ0VuYWJsZWQmJmUuYXBwbHlGb2cmJnQuZm9nTW9kZSE9PW5lLkZPR01PREVfTk9ORX1zdGF0aWMgUHJlcGFyZURlZmluZXNGb3JNaXNjKGUsdCxpLHMscixuLGEpe2EuX2FyZU1pc2NEaXJ0eSYmKGEuTE9HQVJJVEhNSUNERVBUSD1pLGEuUE9JTlRTSVpFPXMsYS5GT0c9ciYmdGhpcy5HZXRGb2dTdGF0ZShlLHQpLGEuTk9OVU5JRk9STVNDQUxJTkc9ZS5ub25Vbmlmb3JtU2NhbGluZyxhLkFMUEhBVEVTVD1uKX1zdGF0aWMgUHJlcGFyZURlZmluZXNGb3JDYW1lcmEoZSx0KXtsZXQgaT0hMTtpZihlLmFjdGl2ZUNhbWVyYSl7Y29uc3Qgcz10LkNBTUVSQV9PUlRIT0dSQVBISUM/MTowLHI9dC5DQU1FUkFfUEVSU1BFQ1RJVkU/MTowLG49ZS5hY3RpdmVDYW1lcmEubW9kZT09PWouT1JUSE9HUkFQSElDX0NBTUVSQT8xOjAsYT1lLmFjdGl2ZUNhbWVyYS5tb2RlPT09ai5QRVJTUEVDVElWRV9DQU1FUkE/MTowOyhzXm58fHJeYSkmJih0LkNBTUVSQV9PUlRIT0dSQVBISUM9bj09PTEsdC5DQU1FUkFfUEVSU1BFQ1RJVkU9YT09PTEsaT0hMCl9cmV0dXJuIGl9c3RhdGljIFByZXBhcmVEZWZpbmVzRm9yRnJhbWVCb3VuZFZhbHVlcyhlLHQsaSxzLHIsbj1udWxsLGE9ITEpe2xldCBvPWllLlByZXBhcmVEZWZpbmVzRm9yQ2FtZXJhKGUscyk7biE9PSExJiYobz1PcyhpLGUscykpLHMuREVQVEhQUkVQQVNTIT09IXQuZ2V0Q29sb3JXcml0ZSgpJiYocy5ERVBUSFBSRVBBU1M9IXMuREVQVEhQUkVQQVNTLG89ITApLHMuSU5TVEFOQ0VTIT09ciYmKHMuSU5TVEFOQ0VTPXIsbz0hMCkscy5USElOX0lOU1RBTkNFUyE9PWEmJihzLlRISU5fSU5TVEFOQ0VTPWEsbz0hMCksbyYmcy5tYXJrQXNVbnByb2Nlc3NlZCgpfXN0YXRpYyBQcmVwYXJlRGVmaW5lc0ZvckJvbmVzKGUsdCl7aWYoZS51c2VCb25lcyYmZS5jb21wdXRlQm9uZXNVc2luZ1NoYWRlcnMmJmUuc2tlbGV0b24pe3QuTlVNX0JPTkVfSU5GTFVFTkNFUlM9ZS5udW1Cb25lSW5mbHVlbmNlcnM7Y29uc3QgaT10LkJPTkVURVhUVVJFIT09dm9pZCAwO2lmKGUuc2tlbGV0b24uaXNVc2luZ1RleHR1cmVGb3JNYXRyaWNlcyYmaSl0LkJPTkVURVhUVVJFPSEwO2Vsc2V7dC5Cb25lc1Blck1lc2g9ZS5za2VsZXRvbi5ib25lcy5sZW5ndGgrMSx0LkJPTkVURVhUVVJFPWk/ITE6dm9pZCAwO2NvbnN0IHM9ZS5nZXRTY2VuZSgpLnByZVBhc3NSZW5kZXJlcjtpZihzJiZzLmVuYWJsZWQpe2NvbnN0IHI9cy5leGNsdWRlZFNraW5uZWRNZXNoLmluZGV4T2YoZSk9PT0tMTt0LkJPTkVTX1ZFTE9DSVRZX0VOQUJMRUQ9cn19fWVsc2UgdC5OVU1fQk9ORV9JTkZMVUVOQ0VSUz0wLHQuQm9uZXNQZXJNZXNoPTAsdC5CT05FVEVYVFVSRSE9PXZvaWQgMCYmKHQuQk9ORVRFWFRVUkU9ITEpfXN0YXRpYyBQcmVwYXJlRGVmaW5lc0Zvck1vcnBoVGFyZ2V0cyhlLHQpe2NvbnN0IGk9ZS5tb3JwaFRhcmdldE1hbmFnZXI7aT8odC5NT1JQSFRBUkdFVFNfVVY9aS5zdXBwb3J0c1VWcyYmdC5VVjEsdC5NT1JQSFRBUkdFVFNfVEFOR0VOVD1pLnN1cHBvcnRzVGFuZ2VudHMmJnQuVEFOR0VOVCx0Lk1PUlBIVEFSR0VUU19OT1JNQUw9aS5zdXBwb3J0c05vcm1hbHMmJnQuTk9STUFMLHQuTU9SUEhUQVJHRVRTPWkubnVtSW5mbHVlbmNlcnM+MCx0Lk5VTV9NT1JQSF9JTkZMVUVOQ0VSUz1pLm51bUluZmx1ZW5jZXJzLHQuTU9SUEhUQVJHRVRTX1RFWFRVUkU9aS5pc1VzaW5nVGV4dHVyZUZvclRhcmdldHMpOih0Lk1PUlBIVEFSR0VUU19VVj0hMSx0Lk1PUlBIVEFSR0VUU19UQU5HRU5UPSExLHQuTU9SUEhUQVJHRVRTX05PUk1BTD0hMSx0Lk1PUlBIVEFSR0VUUz0hMSx0Lk5VTV9NT1JQSF9JTkZMVUVOQ0VSUz0wKX1zdGF0aWMgUHJlcGFyZURlZmluZXNGb3JCYWtlZFZlcnRleEFuaW1hdGlvbihlLHQpe2NvbnN0IGk9ZS5iYWtlZFZlcnRleEFuaW1hdGlvbk1hbmFnZXI7dC5CQUtFRF9WRVJURVhfQU5JTUFUSU9OX1RFWFRVUkU9ISEoaSYmaS5pc0VuYWJsZWQpfXN0YXRpYyBQcmVwYXJlRGVmaW5lc0ZvckF0dHJpYnV0ZXMoZSx0LGkscyxyPSExLG49ITAsYT0hMCl7aWYoIXQuX2FyZUF0dHJpYnV0ZXNEaXJ0eSYmdC5fbmVlZE5vcm1hbHM9PT10Ll9ub3JtYWxzJiZ0Ll9uZWVkVVZzPT09dC5fdXZzKXJldHVybiExO3QuX25vcm1hbHM9dC5fbmVlZE5vcm1hbHMsdC5fdXZzPXQuX25lZWRVVnMsdC5OT1JNQUw9dC5fbmVlZE5vcm1hbHMmJmUuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuTm9ybWFsS2luZCksdC5fbmVlZE5vcm1hbHMmJmUuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuVGFuZ2VudEtpbmQpJiYodC5UQU5HRU5UPSEwKTtmb3IobGV0IG89MTtvPD02Oysrbyl0WyJVViIrb109dC5fbmVlZFVWcz9lLmlzVmVydGljZXNEYXRhUHJlc2VudChgdXYke289PT0xPyIiOm99YCk6ITE7aWYoaSl7Y29uc3Qgbz1lLnVzZVZlcnRleENvbG9ycyYmZS5pc1ZlcnRpY2VzRGF0YVByZXNlbnQoZy5Db2xvcktpbmQpO3QuVkVSVEVYQ09MT1I9byx0LlZFUlRFWEFMUEhBPWUuaGFzVmVydGV4QWxwaGEmJm8mJm59cmV0dXJuIGUuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuQ29sb3JJbnN0YW5jZUtpbmQpJiYoZS5oYXNJbnN0YW5jZXN8fGUuaGFzVGhpbkluc3RhbmNlcykmJih0LklOU1RBTkNFU0NPTE9SPSEwKSxzJiZ0aGlzLlByZXBhcmVEZWZpbmVzRm9yQm9uZXMoZSx0KSxyJiZ0aGlzLlByZXBhcmVEZWZpbmVzRm9yTW9ycGhUYXJnZXRzKGUsdCksYSYmdGhpcy5QcmVwYXJlRGVmaW5lc0ZvckJha2VkVmVydGV4QW5pbWF0aW9uKGUsdCksITB9c3RhdGljIFByZXBhcmVEZWZpbmVzRm9yTXVsdGl2aWV3KGUsdCl7aWYoZS5hY3RpdmVDYW1lcmEpe2NvbnN0IGk9dC5NVUxUSVZJRVc7dC5NVUxUSVZJRVc9ZS5hY3RpdmVDYW1lcmEub3V0cHV0UmVuZGVyVGFyZ2V0IT09bnVsbCYmZS5hY3RpdmVDYW1lcmEub3V0cHV0UmVuZGVyVGFyZ2V0LmdldFZpZXdDb3VudCgpPjEsdC5NVUxUSVZJRVchPWkmJnQubWFya0FzVW5wcm9jZXNzZWQoKX19c3RhdGljIFByZXBhcmVEZWZpbmVzRm9yT0lUKGUsdCxpKXtjb25zdCBzPXQuT1JERVJfSU5ERVBFTkRFTlRfVFJBTlNQQVJFTkNZLHI9dC5PUkRFUl9JTkRFUEVOREVOVF9UUkFOU1BBUkVOQ1lfMTZCSVRTO3QuT1JERVJfSU5ERVBFTkRFTlRfVFJBTlNQQVJFTkNZPWUudXNlT3JkZXJJbmRlcGVuZGVudFRyYW5zcGFyZW5jeSYmaSx0Lk9SREVSX0lOREVQRU5ERU5UX1RSQU5TUEFSRU5DWV8xNkJJVFM9IWUuZ2V0RW5naW5lKCkuZ2V0Q2FwcygpLnRleHR1cmVGbG9hdExpbmVhckZpbHRlcmluZywocyE9PXQuT1JERVJfSU5ERVBFTkRFTlRfVFJBTlNQQVJFTkNZfHxyIT09dC5PUkRFUl9JTkRFUEVOREVOVF9UUkFOU1BBUkVOQ1lfMTZCSVRTKSYmdC5tYXJrQXNVbnByb2Nlc3NlZCgpfXN0YXRpYyBQcmVwYXJlRGVmaW5lc0ZvclByZVBhc3MoZSx0LGkpe2NvbnN0IHM9dC5QUkVQQVNTO2lmKCF0Ll9hcmVQcmVQYXNzRGlydHkpcmV0dXJuO2NvbnN0IHI9W3t0eXBlOjEsZGVmaW5lOiJQUkVQQVNTX1BPU0lUSU9OIixpbmRleDoiUFJFUEFTU19QT1NJVElPTl9JTkRFWCJ9LHt0eXBlOjIsZGVmaW5lOiJQUkVQQVNTX1ZFTE9DSVRZIixpbmRleDoiUFJFUEFTU19WRUxPQ0lUWV9JTkRFWCJ9LHt0eXBlOjMsZGVmaW5lOiJQUkVQQVNTX1JFRkxFQ1RJVklUWSIsaW5kZXg6IlBSRVBBU1NfUkVGTEVDVElWSVRZX0lOREVYIn0se3R5cGU6MCxkZWZpbmU6IlBSRVBBU1NfSVJSQURJQU5DRSIsaW5kZXg6IlBSRVBBU1NfSVJSQURJQU5DRV9JTkRFWCJ9LHt0eXBlOjcsZGVmaW5lOiJQUkVQQVNTX0FMQkVET19TUVJUIixpbmRleDoiUFJFUEFTU19BTEJFRE9fU1FSVF9JTkRFWCJ9LHt0eXBlOjUsZGVmaW5lOiJQUkVQQVNTX0RFUFRIIixpbmRleDoiUFJFUEFTU19ERVBUSF9JTkRFWCJ9LHt0eXBlOjYsZGVmaW5lOiJQUkVQQVNTX05PUk1BTCIsaW5kZXg6IlBSRVBBU1NfTk9STUFMX0lOREVYIn1dO2lmKGUucHJlUGFzc1JlbmRlcmVyJiZlLnByZVBhc3NSZW5kZXJlci5lbmFibGVkJiZpKXt0LlBSRVBBU1M9ITAsdC5TQ0VORV9NUlRfQ09VTlQ9ZS5wcmVQYXNzUmVuZGVyZXIubXJ0Q291bnQ7Zm9yKGxldCBuPTA7bjxyLmxlbmd0aDtuKyspe2NvbnN0IGE9ZS5wcmVQYXNzUmVuZGVyZXIuZ2V0SW5kZXgocltuXS50eXBlKTthIT09LTE/KHRbcltuXS5kZWZpbmVdPSEwLHRbcltuXS5pbmRleF09YSk6dFtyW25dLmRlZmluZV09ITF9fWVsc2V7dC5QUkVQQVNTPSExO2ZvcihsZXQgbj0wO248ci5sZW5ndGg7bisrKXRbcltuXS5kZWZpbmVdPSExfXQuUFJFUEFTUyE9cyYmKHQubWFya0FzVW5wcm9jZXNzZWQoKSx0Lm1hcmtBc0ltYWdlUHJvY2Vzc2luZ0RpcnR5KCkpfXN0YXRpYyBQcmVwYXJlRGVmaW5lc0ZvckxpZ2h0KGUsdCxpLHMscixuLGEpe3ZhciBvO3N3aXRjaChhLm5lZWROb3JtYWxzPSEwLHJbIkxJR0hUIitzXT09PXZvaWQgMCYmKGEubmVlZFJlYnVpbGQ9ITApLHJbIkxJR0hUIitzXT0hMCxyWyJTUE9UTElHSFQiK3NdPSExLHJbIkhFTUlMSUdIVCIrc109ITEsclsiUE9JTlRMSUdIVCIrc109ITEsclsiRElSTElHSFQiK3NdPSExLGkucHJlcGFyZUxpZ2h0U3BlY2lmaWNEZWZpbmVzKHIscyksclsiTElHSFRfRkFMTE9GRl9QSFlTSUNBTCIrc109ITEsclsiTElHSFRfRkFMTE9GRl9HTFRGIitzXT0hMSxyWyJMSUdIVF9GQUxMT0ZGX1NUQU5EQVJEIitzXT0hMSxpLmZhbGxvZmZUeXBlKXtjYXNlIEVlLkZBTExPRkZfR0xURjpyWyJMSUdIVF9GQUxMT0ZGX0dMVEYiK3NdPSEwO2JyZWFrO2Nhc2UgRWUuRkFMTE9GRl9QSFlTSUNBTDpyWyJMSUdIVF9GQUxMT0ZGX1BIWVNJQ0FMIitzXT0hMDticmVhaztjYXNlIEVlLkZBTExPRkZfU1RBTkRBUkQ6clsiTElHSFRfRkFMTE9GRl9TVEFOREFSRCIrc109ITA7YnJlYWt9aWYobiYmIWkuc3BlY3VsYXIuZXF1YWxzRmxvYXRzKDAsMCwwKSYmKGEuc3BlY3VsYXJFbmFibGVkPSEwKSxyWyJTSEFET1ciK3NdPSExLHJbIlNIQURPV0NTTSIrc109ITEsclsiU0hBRE9XQ1NNREVCVUciK3NdPSExLHJbIlNIQURPV0NTTU5VTV9DQVNDQURFUyIrc109ITEsclsiU0hBRE9XQ1NNVVNFU0hBRE9XTUFYWiIrc109ITEsclsiU0hBRE9XQ1NNTk9CTEVORCIrc109ITEsclsiU0hBRE9XQ1NNX1JJR0hUSEFOREVEIitzXT0hMSxyWyJTSEFET1dQQ0YiK3NdPSExLHJbIlNIQURPV1BDU1MiK3NdPSExLHJbIlNIQURPV1BPSVNTT04iK3NdPSExLHJbIlNIQURPV0VTTSIrc109ITEsclsiU0hBRE9XQ0xPU0VFU00iK3NdPSExLHJbIlNIQURPV0NVQkUiK3NdPSExLHJbIlNIQURPV0xPV1FVQUxJVFkiK3NdPSExLHJbIlNIQURPV01FRElVTVFVQUxJVFkiK3NdPSExLHQmJnQucmVjZWl2ZVNoYWRvd3MmJmUuc2hhZG93c0VuYWJsZWQmJmkuc2hhZG93RW5hYmxlZCl7Y29uc3QgaD0obz1pLmdldFNoYWRvd0dlbmVyYXRvcihlLmFjdGl2ZUNhbWVyYSkpIT09bnVsbCYmbyE9PXZvaWQgMD9vOmkuZ2V0U2hhZG93R2VuZXJhdG9yKCk7aWYoaCl7Y29uc3QgbD1oLmdldFNoYWRvd01hcCgpO2wmJmwucmVuZGVyTGlzdCYmbC5yZW5kZXJMaXN0Lmxlbmd0aD4wJiYoYS5zaGFkb3dFbmFibGVkPSEwLGgucHJlcGFyZURlZmluZXMocixzKSl9fWkubGlnaHRtYXBNb2RlIT1FZS5MSUdIVE1BUF9ERUZBVUxUPyhhLmxpZ2h0bWFwTW9kZT0hMCxyWyJMSUdIVE1BUEVYQ0xVREVEIitzXT0hMCxyWyJMSUdIVE1BUE5PU1BFQ1VMQVIiK3NdPWkubGlnaHRtYXBNb2RlPT1FZS5MSUdIVE1BUF9TSEFET1dTT05MWSk6KHJbIkxJR0hUTUFQRVhDTFVERUQiK3NdPSExLHJbIkxJR0hUTUFQTk9TUEVDVUxBUiIrc109ITEpfXN0YXRpYyBQcmVwYXJlRGVmaW5lc0ZvckxpZ2h0cyhlLHQsaSxzLHI9NCxuPSExKXtpZighaS5fYXJlTGlnaHRzRGlydHkpcmV0dXJuIGkuX25lZWROb3JtYWxzO2xldCBhPTA7Y29uc3Qgbz17bmVlZE5vcm1hbHM6aS5fbmVlZE5vcm1hbHMsbmVlZFJlYnVpbGQ6ITEsbGlnaHRtYXBNb2RlOiExLHNoYWRvd0VuYWJsZWQ6ITEsc3BlY3VsYXJFbmFibGVkOiExfTtpZihlLmxpZ2h0c0VuYWJsZWQmJiFuKXtmb3IoY29uc3QgbCBvZiB0LmxpZ2h0U291cmNlcylpZih0aGlzLlByZXBhcmVEZWZpbmVzRm9yTGlnaHQoZSx0LGwsYSxpLHMsbyksYSsrLGE9PT1yKWJyZWFrfWkuU1BFQ1VMQVJURVJNPW8uc3BlY3VsYXJFbmFibGVkLGkuU0hBRE9XUz1vLnNoYWRvd0VuYWJsZWQ7Zm9yKGxldCBsPWE7bDxyO2wrKylpWyJMSUdIVCIrbF0hPT12b2lkIDAmJihpWyJMSUdIVCIrbF09ITEsaVsiSEVNSUxJR0hUIitsXT0hMSxpWyJQT0lOVExJR0hUIitsXT0hMSxpWyJESVJMSUdIVCIrbF09ITEsaVsiU1BPVExJR0hUIitsXT0hMSxpWyJTSEFET1ciK2xdPSExLGlbIlNIQURPV0NTTSIrbF09ITEsaVsiU0hBRE9XQ1NNREVCVUciK2xdPSExLGlbIlNIQURPV0NTTU5VTV9DQVNDQURFUyIrbF09ITEsaVsiU0hBRE9XQ1NNVVNFU0hBRE9XTUFYWiIrbF09ITEsaVsiU0hBRE9XQ1NNTk9CTEVORCIrbF09ITEsaVsiU0hBRE9XQ1NNX1JJR0hUSEFOREVEIitsXT0hMSxpWyJTSEFET1dQQ0YiK2xdPSExLGlbIlNIQURPV1BDU1MiK2xdPSExLGlbIlNIQURPV1BPSVNTT04iK2xdPSExLGlbIlNIQURPV0VTTSIrbF09ITEsaVsiU0hBRE9XQ0xPU0VFU00iK2xdPSExLGlbIlNIQURPV0NVQkUiK2xdPSExLGlbIlNIQURPV0xPV1FVQUxJVFkiK2xdPSExLGlbIlNIQURPV01FRElVTVFVQUxJVFkiK2xdPSExKTtjb25zdCBoPWUuZ2V0RW5naW5lKCkuZ2V0Q2FwcygpO3JldHVybiBpLlNIQURPV0ZMT0FUPT09dm9pZCAwJiYoby5uZWVkUmVidWlsZD0hMCksaS5TSEFET1dGTE9BVD1vLnNoYWRvd0VuYWJsZWQmJihoLnRleHR1cmVGbG9hdFJlbmRlciYmaC50ZXh0dXJlRmxvYXRMaW5lYXJGaWx0ZXJpbmd8fGgudGV4dHVyZUhhbGZGbG9hdFJlbmRlciYmaC50ZXh0dXJlSGFsZkZsb2F0TGluZWFyRmlsdGVyaW5nKSxpLkxJR0hUTUFQRVhDTFVERUQ9by5saWdodG1hcE1vZGUsby5uZWVkUmVidWlsZCYmaS5yZWJ1aWxkKCksby5uZWVkTm9ybWFsc31zdGF0aWMgUHJlcGFyZVVuaWZvcm1zQW5kU2FtcGxlcnNGb3JMaWdodChlLHQsaSxzLHI9bnVsbCxuPSExKXtyJiZyLnB1c2goIkxpZ2h0IitlKSwhbiYmKHQucHVzaCgidkxpZ2h0RGF0YSIrZSwidkxpZ2h0RGlmZnVzZSIrZSwidkxpZ2h0U3BlY3VsYXIiK2UsInZMaWdodERpcmVjdGlvbiIrZSwidkxpZ2h0RmFsbG9mZiIrZSwidkxpZ2h0R3JvdW5kIitlLCJsaWdodE1hdHJpeCIrZSwic2hhZG93c0luZm8iK2UsImRlcHRoVmFsdWVzIitlKSxpLnB1c2goInNoYWRvd1NhbXBsZXIiK2UpLGkucHVzaCgiZGVwdGhTYW1wbGVyIitlKSx0LnB1c2goInZpZXdGcnVzdHVtWiIrZSwiY2FzY2FkZUJsZW5kRmFjdG9yIitlLCJsaWdodFNpemVVVkNvcnJlY3Rpb24iK2UsImRlcHRoQ29ycmVjdGlvbiIrZSwicGVudW1icmFEYXJrbmVzcyIrZSwiZnJ1c3R1bUxlbmd0aHMiK2UpLHMmJihpLnB1c2goInByb2plY3Rpb25MaWdodFNhbXBsZXIiK2UpLHQucHVzaCgidGV4dHVyZVByb2plY3Rpb25NYXRyaXgiK2UpKSl9c3RhdGljIFByZXBhcmVVbmlmb3Jtc0FuZFNhbXBsZXJzTGlzdChlLHQsaSxzPTQpe2xldCByLG49bnVsbDtpZihlLnVuaWZvcm1zTmFtZXMpe2NvbnN0IGE9ZTtyPWEudW5pZm9ybXNOYW1lcyxuPWEudW5pZm9ybUJ1ZmZlcnNOYW1lcyx0PWEuc2FtcGxlcnMsaT1hLmRlZmluZXMscz1hLm1heFNpbXVsdGFuZW91c0xpZ2h0c3x8MH1lbHNlIHI9ZSx0fHwodD1bXSk7Zm9yKGxldCBhPTA7YTxzJiZpWyJMSUdIVCIrYV07YSsrKXRoaXMuUHJlcGFyZVVuaWZvcm1zQW5kU2FtcGxlcnNGb3JMaWdodChhLHIsdCxpWyJQUk9KRUNURURMSUdIVFRFWFRVUkUiK2FdLG4pO2kuTlVNX01PUlBIX0lORkxVRU5DRVJTJiZyLnB1c2goIm1vcnBoVGFyZ2V0SW5mbHVlbmNlcyIpLGkuQkFLRURfVkVSVEVYX0FOSU1BVElPTl9URVhUVVJFJiYoci5wdXNoKCJiYWtlZFZlcnRleEFuaW1hdGlvblNldHRpbmdzIiksci5wdXNoKCJiYWtlZFZlcnRleEFuaW1hdGlvblRleHR1cmVTaXplSW52ZXJ0ZWQiKSxyLnB1c2goImJha2VkVmVydGV4QW5pbWF0aW9uVGltZSIpLHQucHVzaCgiYmFrZWRWZXJ0ZXhBbmltYXRpb25UZXh0dXJlIikpfXN0YXRpYyBIYW5kbGVGYWxsYmFja3NGb3JTaGFkb3dzKGUsdCxpPTQscz0wKXtsZXQgcj0wO2ZvcihsZXQgbj0wO248aSYmZVsiTElHSFQiK25dO24rKyluPjAmJihyPXMrbix0LmFkZEZhbGxiYWNrKHIsIkxJR0hUIituKSksZS5TSEFET1dTfHwoZVsiU0hBRE9XIituXSYmdC5hZGRGYWxsYmFjayhzLCJTSEFET1ciK24pLGVbIlNIQURPV1BDRiIrbl0mJnQuYWRkRmFsbGJhY2socywiU0hBRE9XUENGIituKSxlWyJTSEFET1dQQ1NTIituXSYmdC5hZGRGYWxsYmFjayhzLCJTSEFET1dQQ1NTIituKSxlWyJTSEFET1dQT0lTU09OIituXSYmdC5hZGRGYWxsYmFjayhzLCJTSEFET1dQT0lTU09OIituKSxlWyJTSEFET1dFU00iK25dJiZ0LmFkZEZhbGxiYWNrKHMsIlNIQURPV0VTTSIrbiksZVsiU0hBRE9XQ0xPU0VFU00iK25dJiZ0LmFkZEZhbGxiYWNrKHMsIlNIQURPV0NMT1NFRVNNIituKSk7cmV0dXJuIHIrK31zdGF0aWMgUHJlcGFyZUF0dHJpYnV0ZXNGb3JNb3JwaFRhcmdldHNJbmZsdWVuY2VycyhlLHQsaSl7dGhpcy5fVG1wTW9ycGhJbmZsdWVuY2Vycy5OVU1fTU9SUEhfSU5GTFVFTkNFUlM9aSx0aGlzLlByZXBhcmVBdHRyaWJ1dGVzRm9yTW9ycGhUYXJnZXRzKGUsdCx0aGlzLl9UbXBNb3JwaEluZmx1ZW5jZXJzKX1zdGF0aWMgUHJlcGFyZUF0dHJpYnV0ZXNGb3JNb3JwaFRhcmdldHMoZSx0LGkpe2NvbnN0IHM9aS5OVU1fTU9SUEhfSU5GTFVFTkNFUlM7aWYocz4wJiZmZS5MYXN0Q3JlYXRlZEVuZ2luZSl7Y29uc3Qgcj1mZS5MYXN0Q3JlYXRlZEVuZ2luZS5nZXRDYXBzKCkubWF4VmVydGV4QXR0cmlicyxuPXQubW9ycGhUYXJnZXRNYW5hZ2VyO2lmKG4hPW51bGwmJm4uaXNVc2luZ1RleHR1cmVGb3JUYXJnZXRzKXJldHVybjtjb25zdCBhPW4mJm4uc3VwcG9ydHNOb3JtYWxzJiZpLk5PUk1BTCxvPW4mJm4uc3VwcG9ydHNUYW5nZW50cyYmaS5UQU5HRU5ULGg9biYmbi5zdXBwb3J0c1VWcyYmaS5VVjE7Zm9yKGxldCBsPTA7bDxzO2wrKyllLnB1c2goZy5Qb3NpdGlvbktpbmQrbCksYSYmZS5wdXNoKGcuTm9ybWFsS2luZCtsKSxvJiZlLnB1c2goZy5UYW5nZW50S2luZCtsKSxoJiZlLnB1c2goZy5VVktpbmQrIl8iK2wpLGUubGVuZ3RoPnImJk8uRXJyb3IoIkNhbm5vdCBhZGQgbW9yZSB2ZXJ0ZXggYXR0cmlidXRlcyBmb3IgbWVzaCAiK3QubmFtZSl9fXN0YXRpYyBQcmVwYXJlQXR0cmlidXRlc0ZvckJha2VkVmVydGV4QW5pbWF0aW9uKGUsdCxpKXtpLkJBS0VEX1ZFUlRFWF9BTklNQVRJT05fVEVYVFVSRSYmaS5JTlNUQU5DRVMmJmUucHVzaCgiYmFrZWRWZXJ0ZXhBbmltYXRpb25TZXR0aW5nc0luc3RhbmNlZCIpfXN0YXRpYyBQcmVwYXJlQXR0cmlidXRlc0ZvckJvbmVzKGUsdCxpLHMpe2kuTlVNX0JPTkVfSU5GTFVFTkNFUlM+MCYmKHMuYWRkQ1BVU2tpbm5pbmdGYWxsYmFjaygwLHQpLGUucHVzaChnLk1hdHJpY2VzSW5kaWNlc0tpbmQpLGUucHVzaChnLk1hdHJpY2VzV2VpZ2h0c0tpbmQpLGkuTlVNX0JPTkVfSU5GTFVFTkNFUlM+NCYmKGUucHVzaChnLk1hdHJpY2VzSW5kaWNlc0V4dHJhS2luZCksZS5wdXNoKGcuTWF0cmljZXNXZWlnaHRzRXh0cmFLaW5kKSkpfXN0YXRpYyBQcmVwYXJlQXR0cmlidXRlc0Zvckluc3RhbmNlcyhlLHQpeyh0LklOU1RBTkNFU3x8dC5USElOX0lOU1RBTkNFUykmJnRoaXMuUHVzaEF0dHJpYnV0ZXNGb3JJbnN0YW5jZXMoZSwhIXQuUFJFUEFTU19WRUxPQ0lUWSksdC5JTlNUQU5DRVNDT0xPUiYmZS5wdXNoKGcuQ29sb3JJbnN0YW5jZUtpbmQpfXN0YXRpYyBQdXNoQXR0cmlidXRlc0Zvckluc3RhbmNlcyhlLHQ9ITEpe2UucHVzaCgid29ybGQwIiksZS5wdXNoKCJ3b3JsZDEiKSxlLnB1c2goIndvcmxkMiIpLGUucHVzaCgid29ybGQzIiksdCYmKGUucHVzaCgicHJldmlvdXNXb3JsZDAiKSxlLnB1c2goInByZXZpb3VzV29ybGQxIiksZS5wdXNoKCJwcmV2aW91c1dvcmxkMiIpLGUucHVzaCgicHJldmlvdXNXb3JsZDMiKSl9c3RhdGljIEJpbmRMaWdodFByb3BlcnRpZXMoZSx0LGkpe2UudHJhbnNmZXJUb0VmZmVjdCh0LGkrIiIpfXN0YXRpYyBCaW5kTGlnaHQoZSx0LGkscyxyLG49ITApe2UuX2JpbmRMaWdodCh0LGkscyxyLG4pfXN0YXRpYyBCaW5kTGlnaHRzKGUsdCxpLHMscj00KXtjb25zdCBuPU1hdGgubWluKHQubGlnaHRTb3VyY2VzLmxlbmd0aCxyKTtmb3IobGV0IGE9MDthPG47YSsrKXtjb25zdCBvPXQubGlnaHRTb3VyY2VzW2FdO3RoaXMuQmluZExpZ2h0KG8sYSxlLGksdHlwZW9mIHM9PSJib29sZWFuIj9zOnMuU1BFQ1VMQVJURVJNLHQucmVjZWl2ZVNoYWRvd3MpfX1zdGF0aWMgQmluZEZvZ1BhcmFtZXRlcnMoZSx0LGkscz0hMSl7ZS5mb2dFbmFibGVkJiZ0LmFwcGx5Rm9nJiZlLmZvZ01vZGUhPT1uZS5GT0dNT0RFX05PTkUmJihpLnNldEZsb2F0NCgidkZvZ0luZm9zIixlLmZvZ01vZGUsZS5mb2dTdGFydCxlLmZvZ0VuZCxlLmZvZ0RlbnNpdHkpLHM/KGUuZm9nQ29sb3IudG9MaW5lYXJTcGFjZVRvUmVmKHRoaXMuX1RlbXBGb2dDb2xvciksaS5zZXRDb2xvcjMoInZGb2dDb2xvciIsdGhpcy5fVGVtcEZvZ0NvbG9yKSk6aS5zZXRDb2xvcjMoInZGb2dDb2xvciIsZS5mb2dDb2xvcikpfXN0YXRpYyBCaW5kQm9uZXNQYXJhbWV0ZXJzKGUsdCxpKXtpZighKCF0fHwhZSkmJihlLmNvbXB1dGVCb25lc1VzaW5nU2hhZGVycyYmdC5fYm9uZXNDb21wdXRhdGlvbkZvcmNlZFRvQ1BVJiYoZS5jb21wdXRlQm9uZXNVc2luZ1NoYWRlcnM9ITEpLGUudXNlQm9uZXMmJmUuY29tcHV0ZUJvbmVzVXNpbmdTaGFkZXJzJiZlLnNrZWxldG9uKSl7Y29uc3Qgcz1lLnNrZWxldG9uO2lmKHMuaXNVc2luZ1RleHR1cmVGb3JNYXRyaWNlcyYmdC5nZXRVbmlmb3JtSW5kZXgoImJvbmVUZXh0dXJlV2lkdGgiKT4tMSl7Y29uc3Qgcj1zLmdldFRyYW5zZm9ybU1hdHJpeFRleHR1cmUoZSk7dC5zZXRUZXh0dXJlKCJib25lU2FtcGxlciIsciksdC5zZXRGbG9hdCgiYm9uZVRleHR1cmVXaWR0aCIsNCoocy5ib25lcy5sZW5ndGgrMSkpfWVsc2V7Y29uc3Qgcj1zLmdldFRyYW5zZm9ybU1hdHJpY2VzKGUpO3ImJih0LnNldE1hdHJpY2VzKCJtQm9uZXMiLHIpLGkmJmUuZ2V0U2NlbmUoKS5wcmVQYXNzUmVuZGVyZXImJmUuZ2V0U2NlbmUoKS5wcmVQYXNzUmVuZGVyZXIuZ2V0SW5kZXgoMikmJihpLnByZXZpb3VzQm9uZXNbZS51bmlxdWVJZF18fChpLnByZXZpb3VzQm9uZXNbZS51bmlxdWVJZF09ci5zbGljZSgpKSx0LnNldE1hdHJpY2VzKCJtUHJldmlvdXNCb25lcyIsaS5wcmV2aW91c0JvbmVzW2UudW5pcXVlSWRdKSxpZS5fQ29weUJvbmVzVHJhbnNmb3JtYXRpb25NYXRyaWNlcyhyLGkucHJldmlvdXNCb25lc1tlLnVuaXF1ZUlkXSkpKX19fXN0YXRpYyBfQ29weUJvbmVzVHJhbnNmb3JtYXRpb25NYXRyaWNlcyhlLHQpe3JldHVybiB0LnNldChlKSx0fXN0YXRpYyBCaW5kTW9ycGhUYXJnZXRQYXJhbWV0ZXJzKGUsdCl7Y29uc3QgaT1lLm1vcnBoVGFyZ2V0TWFuYWdlcjshZXx8IWl8fHQuc2V0RmxvYXRBcnJheSgibW9ycGhUYXJnZXRJbmZsdWVuY2VzIixpLmluZmx1ZW5jZXMpfXN0YXRpYyBCaW5kTG9nRGVwdGgoZSx0LGkpe2lmKCFlfHxlLkxPR0FSSVRITUlDREVQVEh8fGUuaW5kZXhPZiYmZS5pbmRleE9mKCJMT0dBUklUSE1JQ0RFUFRIIik+PTApe2NvbnN0IHM9aS5hY3RpdmVDYW1lcmE7cy5tb2RlPT09ai5PUlRIT0dSQVBISUNfQ0FNRVJBJiZPLkVycm9yKCJMb2dhcml0aG1pYyBkZXB0aCBpcyBub3QgY29tcGF0aWJsZSB3aXRoIG9ydGhvZ3JhcGhpYyBjYW1lcmFzISIsMjApLHQuc2V0RmxvYXQoImxvZ2FyaXRobWljRGVwdGhDb25zdGFudCIsMi8oTWF0aC5sb2cocy5tYXhaKzEpL01hdGguTE4yKSl9fX1pZS5fVG1wTW9ycGhJbmZsdWVuY2Vycz17TlVNX01PUlBIX0lORkxVRU5DRVJTOjB9LGllLl9UZW1wRm9nQ29sb3I9cmUuQmxhY2soKTtjbGFzcyBXdHtjb25zdHJ1Y3Rvcigpe3RoaXMucmVzZXQoKX1yZXNldCgpe3RoaXMuZW5hYmxlZD0hMSx0aGlzLm1hc2s9MjU1LHRoaXMuZnVuYz01MTksdGhpcy5mdW5jUmVmPTEsdGhpcy5mdW5jTWFzaz0yNTUsdGhpcy5vcFN0ZW5jaWxGYWlsPTc2ODAsdGhpcy5vcERlcHRoRmFpbD03NjgwLHRoaXMub3BTdGVuY2lsRGVwdGhQYXNzPTc2ODF9Z2V0IGZ1bmMoKXtyZXR1cm4gdGhpcy5fZnVuY31zZXQgZnVuYyhlKXt0aGlzLl9mdW5jPWV9Z2V0IGZ1bmNSZWYoKXtyZXR1cm4gdGhpcy5fZnVuY1JlZn1zZXQgZnVuY1JlZihlKXt0aGlzLl9mdW5jUmVmPWV9Z2V0IGZ1bmNNYXNrKCl7cmV0dXJuIHRoaXMuX2Z1bmNNYXNrfXNldCBmdW5jTWFzayhlKXt0aGlzLl9mdW5jTWFzaz1lfWdldCBvcFN0ZW5jaWxGYWlsKCl7cmV0dXJuIHRoaXMuX29wU3RlbmNpbEZhaWx9c2V0IG9wU3RlbmNpbEZhaWwoZSl7dGhpcy5fb3BTdGVuY2lsRmFpbD1lfWdldCBvcERlcHRoRmFpbCgpe3JldHVybiB0aGlzLl9vcERlcHRoRmFpbH1zZXQgb3BEZXB0aEZhaWwoZSl7dGhpcy5fb3BEZXB0aEZhaWw9ZX1nZXQgb3BTdGVuY2lsRGVwdGhQYXNzKCl7cmV0dXJuIHRoaXMuX29wU3RlbmNpbERlcHRoUGFzc31zZXQgb3BTdGVuY2lsRGVwdGhQYXNzKGUpe3RoaXMuX29wU3RlbmNpbERlcHRoUGFzcz1lfWdldCBtYXNrKCl7cmV0dXJuIHRoaXMuX21hc2t9c2V0IG1hc2soZSl7dGhpcy5fbWFzaz1lfWdldCBlbmFibGVkKCl7cmV0dXJuIHRoaXMuX2VuYWJsZWR9c2V0IGVuYWJsZWQoZSl7dGhpcy5fZW5hYmxlZD1lfWdldENsYXNzTmFtZSgpe3JldHVybiJNYXRlcmlhbFN0ZW5jaWxTdGF0ZSJ9Y29weVRvKGUpe2FlLkNsb25lKCgpPT5lLHRoaXMpfXNlcmlhbGl6ZSgpe3JldHVybiBhZS5TZXJpYWxpemUodGhpcyl9cGFyc2UoZSx0LGkpe2FlLlBhcnNlKCgpPT50aGlzLGUsdCxpKX19VChbUigpXSxXdC5wcm90b3R5cGUsImZ1bmMiLG51bGwpLFQoW1IoKV0sV3QucHJvdG90eXBlLCJmdW5jUmVmIixudWxsKSxUKFtSKCldLFd0LnByb3RvdHlwZSwiZnVuY01hc2siLG51bGwpLFQoW1IoKV0sV3QucHJvdG90eXBlLCJvcFN0ZW5jaWxGYWlsIixudWxsKSxUKFtSKCldLFd0LnByb3RvdHlwZSwib3BEZXB0aEZhaWwiLG51bGwpLFQoW1IoKV0sV3QucHJvdG90eXBlLCJvcFN0ZW5jaWxEZXB0aFBhc3MiLG51bGwpLFQoW1IoKV0sV3QucHJvdG90eXBlLCJtYXNrIixudWxsKSxUKFtSKCldLFd0LnByb3RvdHlwZSwiZW5hYmxlZCIsbnVsbCk7dmFyIFFlOyhmdW5jdGlvbihjKXtjW2MuQ3JlYXRlZD0xXT0iQ3JlYXRlZCIsY1tjLkRpc3Bvc2VkPTJdPSJEaXNwb3NlZCIsY1tjLkdldERlZmluZU5hbWVzPTRdPSJHZXREZWZpbmVOYW1lcyIsY1tjLlByZXBhcmVVbmlmb3JtQnVmZmVyPThdPSJQcmVwYXJlVW5pZm9ybUJ1ZmZlciIsY1tjLklzUmVhZHlGb3JTdWJNZXNoPTE2XT0iSXNSZWFkeUZvclN1Yk1lc2giLGNbYy5QcmVwYXJlRGVmaW5lcz0zMl09IlByZXBhcmVEZWZpbmVzIixjW2MuQmluZEZvclN1Yk1lc2g9NjRdPSJCaW5kRm9yU3ViTWVzaCIsY1tjLlByZXBhcmVFZmZlY3Q9MTI4XT0iUHJlcGFyZUVmZmVjdCIsY1tjLkdldEFuaW1hdGFibGVzPTI1Nl09IkdldEFuaW1hdGFibGVzIixjW2MuR2V0QWN0aXZlVGV4dHVyZXM9NTEyXT0iR2V0QWN0aXZlVGV4dHVyZXMiLGNbYy5IYXNUZXh0dXJlPTEwMjRdPSJIYXNUZXh0dXJlIixjW2MuRmlsbFJlbmRlclRhcmdldFRleHR1cmVzPTIwNDhdPSJGaWxsUmVuZGVyVGFyZ2V0VGV4dHVyZXMiLGNbYy5IYXNSZW5kZXJUYXJnZXRUZXh0dXJlcz00MDk2XT0iSGFzUmVuZGVyVGFyZ2V0VGV4dHVyZXMiLGNbYy5IYXJkQmluZEZvclN1Yk1lc2g9ODE5Ml09IkhhcmRCaW5kRm9yU3ViTWVzaCJ9KShRZXx8KFFlPXt9KSk7Y2xhc3MgUHtjb25zdHJ1Y3RvcihlLHQsaSl7dGhpcy5zaGFkb3dEZXB0aFdyYXBwZXI9bnVsbCx0aGlzLmFsbG93U2hhZGVySG90U3dhcHBpbmc9ITAsdGhpcy5tZXRhZGF0YT1udWxsLHRoaXMucmVzZXJ2ZWREYXRhU3RvcmU9bnVsbCx0aGlzLmNoZWNrUmVhZHlPbkV2ZXJ5Q2FsbD0hMSx0aGlzLmNoZWNrUmVhZHlPbmx5T25jZT0hMSx0aGlzLnN0YXRlPSIiLHRoaXMuX2FscGhhPTEsdGhpcy5fYmFja0ZhY2VDdWxsaW5nPSEwLHRoaXMuX2N1bGxCYWNrRmFjZXM9ITAsdGhpcy5fYmxvY2tEaXJ0eU1lY2hhbmlzbT0hMSx0aGlzLm9uQ29tcGlsZWQ9bnVsbCx0aGlzLm9uRXJyb3I9bnVsbCx0aGlzLmdldFJlbmRlclRhcmdldFRleHR1cmVzPW51bGwsdGhpcy5kb05vdFNlcmlhbGl6ZT0hMSx0aGlzLl9zdG9yZUVmZmVjdE9uU3ViTWVzaGVzPSExLHRoaXMuYW5pbWF0aW9ucz1udWxsLHRoaXMub25EaXNwb3NlT2JzZXJ2YWJsZT1uZXcgRix0aGlzLl9vbkRpc3Bvc2VPYnNlcnZlcj1udWxsLHRoaXMuX29uVW5CaW5kT2JzZXJ2YWJsZT1udWxsLHRoaXMuX29uQmluZE9ic2VydmVyPW51bGwsdGhpcy5fYWxwaGFNb2RlPTIsdGhpcy5fbmVlZERlcHRoUHJlUGFzcz0hMSx0aGlzLmRpc2FibGVEZXB0aFdyaXRlPSExLHRoaXMuZGlzYWJsZUNvbG9yV3JpdGU9ITEsdGhpcy5mb3JjZURlcHRoV3JpdGU9ITEsdGhpcy5kZXB0aEZ1bmN0aW9uPTAsdGhpcy5zZXBhcmF0ZUN1bGxpbmdQYXNzPSExLHRoaXMuX2ZvZ0VuYWJsZWQ9ITAsdGhpcy5wb2ludFNpemU9MSx0aGlzLnpPZmZzZXQ9MCx0aGlzLnpPZmZzZXRVbml0cz0wLHRoaXMuc3RlbmNpbD1uZXcgV3QsdGhpcy5fdXNlVUJPPSExLHRoaXMuX2ZpbGxNb2RlPVAuVHJpYW5nbGVGaWxsTW9kZSx0aGlzLl9jYWNoZWREZXB0aFdyaXRlU3RhdGU9ITEsdGhpcy5fY2FjaGVkQ29sb3JXcml0ZVN0YXRlPSExLHRoaXMuX2NhY2hlZERlcHRoRnVuY3Rpb25TdGF0ZT0wLHRoaXMuX2luZGV4SW5TY2VuZU1hdGVyaWFsQXJyYXk9LTEsdGhpcy5tZXNoTWFwPW51bGwsdGhpcy5fcGFyZW50Q29udGFpbmVyPW51bGwsdGhpcy5fdW5pZm9ybUJ1ZmZlckxheW91dEJ1aWx0PSExLHRoaXMuX2V2ZW50SW5mbz17fSx0aGlzLl9jYWxsYmFja1BsdWdpbkV2ZW50R2VuZXJpYz0oKT0+e30sdGhpcy5fY2FsbGJhY2tQbHVnaW5FdmVudElzUmVhZHlGb3JTdWJNZXNoPSgpPT57fSx0aGlzLl9jYWxsYmFja1BsdWdpbkV2ZW50UHJlcGFyZURlZmluZXM9KCk9Pnt9LHRoaXMuX2NhbGxiYWNrUGx1Z2luRXZlbnRQcmVwYXJlRGVmaW5lc0JlZm9yZUF0dHJpYnV0ZXM9KCk9Pnt9LHRoaXMuX2NhbGxiYWNrUGx1Z2luRXZlbnRIYXJkQmluZEZvclN1Yk1lc2g9KCk9Pnt9LHRoaXMuX2NhbGxiYWNrUGx1Z2luRXZlbnRCaW5kRm9yU3ViTWVzaD0oKT0+e30sdGhpcy5fY2FsbGJhY2tQbHVnaW5FdmVudEhhc1JlbmRlclRhcmdldFRleHR1cmVzPSgpPT57fSx0aGlzLl9jYWxsYmFja1BsdWdpbkV2ZW50RmlsbFJlbmRlclRhcmdldFRleHR1cmVzPSgpPT57fSx0aGlzLl9mb3JjZUFscGhhVGVzdD0hMSx0aGlzLl90cmFuc3BhcmVuY3lNb2RlPW51bGwsdGhpcy5uYW1lPWU7Y29uc3Qgcz10fHxmZS5MYXN0Q3JlYXRlZFNjZW5lO3MmJih0aGlzLl9zY2VuZT1zLHRoaXMuX2RpcnR5Q2FsbGJhY2tzPXt9LHRoaXMuX2RpcnR5Q2FsbGJhY2tzWzFdPXRoaXMuX21hcmtBbGxTdWJNZXNoZXNBc1RleHR1cmVzRGlydHkuYmluZCh0aGlzKSx0aGlzLl9kaXJ0eUNhbGxiYWNrc1syXT10aGlzLl9tYXJrQWxsU3ViTWVzaGVzQXNMaWdodHNEaXJ0eS5iaW5kKHRoaXMpLHRoaXMuX2RpcnR5Q2FsbGJhY2tzWzRdPXRoaXMuX21hcmtBbGxTdWJNZXNoZXNBc0ZyZXNuZWxEaXJ0eS5iaW5kKHRoaXMpLHRoaXMuX2RpcnR5Q2FsbGJhY2tzWzhdPXRoaXMuX21hcmtBbGxTdWJNZXNoZXNBc0F0dHJpYnV0ZXNEaXJ0eS5iaW5kKHRoaXMpLHRoaXMuX2RpcnR5Q2FsbGJhY2tzWzE2XT10aGlzLl9tYXJrQWxsU3ViTWVzaGVzQXNNaXNjRGlydHkuYmluZCh0aGlzKSx0aGlzLl9kaXJ0eUNhbGxiYWNrc1szMl09dGhpcy5fbWFya0FsbFN1Yk1lc2hlc0FzUHJlUGFzc0RpcnR5LmJpbmQodGhpcyksdGhpcy5fZGlydHlDYWxsYmFja3NbNjNdPXRoaXMuX21hcmtBbGxTdWJNZXNoZXNBc0FsbERpcnR5LmJpbmQodGhpcyksdGhpcy5pZD1lfHxILlJhbmRvbUlkKCksdGhpcy51bmlxdWVJZD10aGlzLl9zY2VuZS5nZXRVbmlxdWVJZCgpLHRoaXMuX21hdGVyaWFsQ29udGV4dD10aGlzLl9zY2VuZS5nZXRFbmdpbmUoKS5jcmVhdGVNYXRlcmlhbENvbnRleHQoKSx0aGlzLl9kcmF3V3JhcHBlcj1uZXcgbWkodGhpcy5fc2NlbmUuZ2V0RW5naW5lKCksITEpLHRoaXMuX2RyYXdXcmFwcGVyLm1hdGVyaWFsQ29udGV4dD10aGlzLl9tYXRlcmlhbENvbnRleHQsdGhpcy5fc2NlbmUudXNlUmlnaHRIYW5kZWRTeXN0ZW0/dGhpcy5zaWRlT3JpZW50YXRpb249UC5DbG9ja1dpc2VTaWRlT3JpZW50YXRpb246dGhpcy5zaWRlT3JpZW50YXRpb249UC5Db3VudGVyQ2xvY2tXaXNlU2lkZU9yaWVudGF0aW9uLHRoaXMuX3VuaWZvcm1CdWZmZXI9bmV3IFYodGhpcy5fc2NlbmUuZ2V0RW5naW5lKCksdm9pZCAwLHZvaWQgMCxlKSx0aGlzLl91c2VVQk89dGhpcy5nZXRTY2VuZSgpLmdldEVuZ2luZSgpLnN1cHBvcnRzVW5pZm9ybUJ1ZmZlcnMsaXx8dGhpcy5fc2NlbmUuYWRkTWF0ZXJpYWwodGhpcyksdGhpcy5fc2NlbmUudXNlTWF0ZXJpYWxNZXNoTWFwJiYodGhpcy5tZXNoTWFwPXt9KSxQLk9uRXZlbnRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzLFFlLkNyZWF0ZWQpKX1nZXQgY2FuUmVuZGVyVG9NUlQoKXtyZXR1cm4hMX1zZXQgYWxwaGEoZSl7aWYodGhpcy5fYWxwaGE9PT1lKXJldHVybjtjb25zdCB0PXRoaXMuX2FscGhhO3RoaXMuX2FscGhhPWUsKHQ9PT0xfHxlPT09MSkmJnRoaXMubWFya0FzRGlydHkoUC5NaXNjRGlydHlGbGFnKX1nZXQgYWxwaGEoKXtyZXR1cm4gdGhpcy5fYWxwaGF9c2V0IGJhY2tGYWNlQ3VsbGluZyhlKXt0aGlzLl9iYWNrRmFjZUN1bGxpbmchPT1lJiYodGhpcy5fYmFja0ZhY2VDdWxsaW5nPWUsdGhpcy5tYXJrQXNEaXJ0eShQLlRleHR1cmVEaXJ0eUZsYWcpKX1nZXQgYmFja0ZhY2VDdWxsaW5nKCl7cmV0dXJuIHRoaXMuX2JhY2tGYWNlQ3VsbGluZ31zZXQgY3VsbEJhY2tGYWNlcyhlKXt0aGlzLl9jdWxsQmFja0ZhY2VzIT09ZSYmKHRoaXMuX2N1bGxCYWNrRmFjZXM9ZSx0aGlzLm1hcmtBc0RpcnR5KFAuVGV4dHVyZURpcnR5RmxhZykpfWdldCBjdWxsQmFja0ZhY2VzKCl7cmV0dXJuIHRoaXMuX2N1bGxCYWNrRmFjZXN9Z2V0IGJsb2NrRGlydHlNZWNoYW5pc20oKXtyZXR1cm4gdGhpcy5fYmxvY2tEaXJ0eU1lY2hhbmlzbX1zZXQgYmxvY2tEaXJ0eU1lY2hhbmlzbShlKXt0aGlzLl9ibG9ja0RpcnR5TWVjaGFuaXNtIT09ZSYmKHRoaXMuX2Jsb2NrRGlydHlNZWNoYW5pc209ZSxlfHx0aGlzLm1hcmtEaXJ0eSgpKX1hdG9taWNNYXRlcmlhbHNVcGRhdGUoZSl7dGhpcy5ibG9ja0RpcnR5TWVjaGFuaXNtPSEwO3RyeXtlKHRoaXMpfWZpbmFsbHl7dGhpcy5ibG9ja0RpcnR5TWVjaGFuaXNtPSExfX1nZXQgaGFzUmVuZGVyVGFyZ2V0VGV4dHVyZXMoKXtyZXR1cm4gdGhpcy5fZXZlbnRJbmZvLmhhc1JlbmRlclRhcmdldFRleHR1cmVzPSExLHRoaXMuX2NhbGxiYWNrUGx1Z2luRXZlbnRIYXNSZW5kZXJUYXJnZXRUZXh0dXJlcyh0aGlzLl9ldmVudEluZm8pLHRoaXMuX2V2ZW50SW5mby5oYXNSZW5kZXJUYXJnZXRUZXh0dXJlc31zZXQgb25EaXNwb3NlKGUpe3RoaXMuX29uRGlzcG9zZU9ic2VydmVyJiZ0aGlzLm9uRGlzcG9zZU9ic2VydmFibGUucmVtb3ZlKHRoaXMuX29uRGlzcG9zZU9ic2VydmVyKSx0aGlzLl9vbkRpc3Bvc2VPYnNlcnZlcj10aGlzLm9uRGlzcG9zZU9ic2VydmFibGUuYWRkKGUpfWdldCBvbkJpbmRPYnNlcnZhYmxlKCl7cmV0dXJuIHRoaXMuX29uQmluZE9ic2VydmFibGV8fCh0aGlzLl9vbkJpbmRPYnNlcnZhYmxlPW5ldyBGKSx0aGlzLl9vbkJpbmRPYnNlcnZhYmxlfXNldCBvbkJpbmQoZSl7dGhpcy5fb25CaW5kT2JzZXJ2ZXImJnRoaXMub25CaW5kT2JzZXJ2YWJsZS5yZW1vdmUodGhpcy5fb25CaW5kT2JzZXJ2ZXIpLHRoaXMuX29uQmluZE9ic2VydmVyPXRoaXMub25CaW5kT2JzZXJ2YWJsZS5hZGQoZSl9Z2V0IG9uVW5CaW5kT2JzZXJ2YWJsZSgpe3JldHVybiB0aGlzLl9vblVuQmluZE9ic2VydmFibGV8fCh0aGlzLl9vblVuQmluZE9ic2VydmFibGU9bmV3IEYpLHRoaXMuX29uVW5CaW5kT2JzZXJ2YWJsZX1nZXQgb25FZmZlY3RDcmVhdGVkT2JzZXJ2YWJsZSgpe3JldHVybiB0aGlzLl9vbkVmZmVjdENyZWF0ZWRPYnNlcnZhYmxlfHwodGhpcy5fb25FZmZlY3RDcmVhdGVkT2JzZXJ2YWJsZT1uZXcgRiksdGhpcy5fb25FZmZlY3RDcmVhdGVkT2JzZXJ2YWJsZX1zZXQgYWxwaGFNb2RlKGUpe3RoaXMuX2FscGhhTW9kZSE9PWUmJih0aGlzLl9hbHBoYU1vZGU9ZSx0aGlzLm1hcmtBc0RpcnR5KFAuVGV4dHVyZURpcnR5RmxhZykpfWdldCBhbHBoYU1vZGUoKXtyZXR1cm4gdGhpcy5fYWxwaGFNb2RlfXNldCBuZWVkRGVwdGhQcmVQYXNzKGUpe3RoaXMuX25lZWREZXB0aFByZVBhc3MhPT1lJiYodGhpcy5fbmVlZERlcHRoUHJlUGFzcz1lLHRoaXMuX25lZWREZXB0aFByZVBhc3MmJih0aGlzLmNoZWNrUmVhZHlPbkV2ZXJ5Q2FsbD0hMCkpfWdldCBuZWVkRGVwdGhQcmVQYXNzKCl7cmV0dXJuIHRoaXMuX25lZWREZXB0aFByZVBhc3N9Z2V0IGlzUHJlUGFzc0NhcGFibGUoKXtyZXR1cm4hMX1zZXQgZm9nRW5hYmxlZChlKXt0aGlzLl9mb2dFbmFibGVkIT09ZSYmKHRoaXMuX2ZvZ0VuYWJsZWQ9ZSx0aGlzLm1hcmtBc0RpcnR5KFAuTWlzY0RpcnR5RmxhZykpfWdldCBmb2dFbmFibGVkKCl7cmV0dXJuIHRoaXMuX2ZvZ0VuYWJsZWR9Z2V0IHdpcmVmcmFtZSgpe3N3aXRjaCh0aGlzLl9maWxsTW9kZSl7Y2FzZSBQLldpcmVGcmFtZUZpbGxNb2RlOmNhc2UgUC5MaW5lTGlzdERyYXdNb2RlOmNhc2UgUC5MaW5lTG9vcERyYXdNb2RlOmNhc2UgUC5MaW5lU3RyaXBEcmF3TW9kZTpyZXR1cm4hMH1yZXR1cm4gdGhpcy5fc2NlbmUuZm9yY2VXaXJlZnJhbWV9c2V0IHdpcmVmcmFtZShlKXt0aGlzLmZpbGxNb2RlPWU/UC5XaXJlRnJhbWVGaWxsTW9kZTpQLlRyaWFuZ2xlRmlsbE1vZGV9Z2V0IHBvaW50c0Nsb3VkKCl7c3dpdGNoKHRoaXMuX2ZpbGxNb2RlKXtjYXNlIFAuUG9pbnRGaWxsTW9kZTpjYXNlIFAuUG9pbnRMaXN0RHJhd01vZGU6cmV0dXJuITB9cmV0dXJuIHRoaXMuX3NjZW5lLmZvcmNlUG9pbnRzQ2xvdWR9c2V0IHBvaW50c0Nsb3VkKGUpe3RoaXMuZmlsbE1vZGU9ZT9QLlBvaW50RmlsbE1vZGU6UC5UcmlhbmdsZUZpbGxNb2RlfWdldCBmaWxsTW9kZSgpe3JldHVybiB0aGlzLl9maWxsTW9kZX1zZXQgZmlsbE1vZGUoZSl7dGhpcy5fZmlsbE1vZGUhPT1lJiYodGhpcy5fZmlsbE1vZGU9ZSx0aGlzLm1hcmtBc0RpcnR5KFAuTWlzY0RpcnR5RmxhZykpfV9nZXREcmF3V3JhcHBlcigpe3JldHVybiB0aGlzLl9kcmF3V3JhcHBlcn1fc2V0RHJhd1dyYXBwZXIoZSl7dGhpcy5fZHJhd1dyYXBwZXI9ZX10b1N0cmluZyhlKXtyZXR1cm4iTmFtZTogIit0aGlzLm5hbWV9Z2V0Q2xhc3NOYW1lKCl7cmV0dXJuIk1hdGVyaWFsIn1nZXQgX2lzTWF0ZXJpYWwoKXtyZXR1cm4hMH1nZXQgaXNGcm96ZW4oKXtyZXR1cm4gdGhpcy5jaGVja1JlYWR5T25seU9uY2V9ZnJlZXplKCl7dGhpcy5tYXJrRGlydHkoKSx0aGlzLmNoZWNrUmVhZHlPbmx5T25jZT0hMH11bmZyZWV6ZSgpe3RoaXMubWFya0RpcnR5KCksdGhpcy5jaGVja1JlYWR5T25seU9uY2U9ITF9aXNSZWFkeShlLHQpe3JldHVybiEwfWlzUmVhZHlGb3JTdWJNZXNoKGUsdCxpKXtjb25zdCBzPXQubWF0ZXJpYWxEZWZpbmVzO3JldHVybiBzPyh0aGlzLl9ldmVudEluZm8uaXNSZWFkeUZvclN1Yk1lc2g9ITAsdGhpcy5fZXZlbnRJbmZvLmRlZmluZXM9cyx0aGlzLl9jYWxsYmFja1BsdWdpbkV2ZW50SXNSZWFkeUZvclN1Yk1lc2godGhpcy5fZXZlbnRJbmZvKSx0aGlzLl9ldmVudEluZm8uaXNSZWFkeUZvclN1Yk1lc2gpOiExfWdldEVmZmVjdCgpe3JldHVybiB0aGlzLl9kcmF3V3JhcHBlci5lZmZlY3R9Z2V0U2NlbmUoKXtyZXR1cm4gdGhpcy5fc2NlbmV9Z2V0IHRyYW5zcGFyZW5jeU1vZGUoKXtyZXR1cm4gdGhpcy5fdHJhbnNwYXJlbmN5TW9kZX1zZXQgdHJhbnNwYXJlbmN5TW9kZShlKXt0aGlzLl90cmFuc3BhcmVuY3lNb2RlIT09ZSYmKHRoaXMuX3RyYW5zcGFyZW5jeU1vZGU9ZSx0aGlzLl9mb3JjZUFscGhhVGVzdD1lPT09UC5NQVRFUklBTF9BTFBIQVRFU1RBTkRCTEVORCx0aGlzLl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0FuZE1pc2NEaXJ0eSgpKX1nZXQgX2Rpc2FibGVBbHBoYUJsZW5kaW5nKCl7cmV0dXJuIHRoaXMuX3RyYW5zcGFyZW5jeU1vZGU9PT1QLk1BVEVSSUFMX09QQVFVRXx8dGhpcy5fdHJhbnNwYXJlbmN5TW9kZT09PVAuTUFURVJJQUxfQUxQSEFURVNUfW5lZWRBbHBoYUJsZW5kaW5nKCl7cmV0dXJuIHRoaXMuX2Rpc2FibGVBbHBoYUJsZW5kaW5nPyExOnRoaXMuYWxwaGE8MX1uZWVkQWxwaGFCbGVuZGluZ0Zvck1lc2goZSl7cmV0dXJuIGUudmlzaWJpbGl0eTwxPyEwOnRoaXMuX2Rpc2FibGVBbHBoYUJsZW5kaW5nPyExOmUuaGFzVmVydGV4QWxwaGF8fHRoaXMubmVlZEFscGhhQmxlbmRpbmcoKX1uZWVkQWxwaGFUZXN0aW5nKCl7cmV0dXJuISF0aGlzLl9mb3JjZUFscGhhVGVzdH1fc2hvdWxkVHVybkFscGhhVGVzdE9uKGUpe3JldHVybiF0aGlzLm5lZWRBbHBoYUJsZW5kaW5nRm9yTWVzaChlKSYmdGhpcy5uZWVkQWxwaGFUZXN0aW5nKCl9Z2V0QWxwaGFUZXN0VGV4dHVyZSgpe3JldHVybiBudWxsfW1hcmtEaXJ0eShlPSExKXtjb25zdCB0PXRoaXMuZ2V0U2NlbmUoKS5tZXNoZXM7Zm9yKGNvbnN0IGkgb2YgdClpZihpLnN1Yk1lc2hlcylmb3IoY29uc3QgcyBvZiBpLnN1Yk1lc2hlcylzLmdldE1hdGVyaWFsKCk9PT10aGlzJiZzLmVmZmVjdCYmKHMuZWZmZWN0Ll93YXNQcmV2aW91c2x5UmVhZHk9ITEscy5lZmZlY3QuX3dhc1ByZXZpb3VzbHlVc2luZ0luc3RhbmNlcz1udWxsLHMuZWZmZWN0Ll9mb3JjZVJlYmluZE9uTmV4dENhbGw9ZSk7ZSYmdGhpcy5tYXJrQXNEaXJ0eShQLkFsbERpcnR5RmxhZyl9X3ByZUJpbmQoZSx0PW51bGwpe2NvbnN0IGk9dGhpcy5fc2NlbmUuZ2V0RW5naW5lKCkscj0odD8/dGhpcy5zaWRlT3JpZW50YXRpb24pPT09UC5DbG9ja1dpc2VTaWRlT3JpZW50YXRpb247cmV0dXJuIGkuZW5hYmxlRWZmZWN0KGV8fHRoaXMuX2dldERyYXdXcmFwcGVyKCkpLGkuc2V0U3RhdGUodGhpcy5iYWNrRmFjZUN1bGxpbmcsdGhpcy56T2Zmc2V0LCExLHIsdGhpcy5fc2NlbmUuX21pcnJvcmVkQ2FtZXJhUG9zaXRpb24/IXRoaXMuY3VsbEJhY2tGYWNlczp0aGlzLmN1bGxCYWNrRmFjZXMsdGhpcy5zdGVuY2lsLHRoaXMuek9mZnNldFVuaXRzKSxyfWJpbmQoZSx0KXt9YnVpbGRVbmlmb3JtTGF5b3V0KCl7Y29uc3QgZT10aGlzLl91bmlmb3JtQnVmZmVyO3RoaXMuX2V2ZW50SW5mby51Ym89ZSx0aGlzLl9jYWxsYmFja1BsdWdpbkV2ZW50R2VuZXJpYyhRZS5QcmVwYXJlVW5pZm9ybUJ1ZmZlcix0aGlzLl9ldmVudEluZm8pLGUuY3JlYXRlKCksdGhpcy5fdW5pZm9ybUJ1ZmZlckxheW91dEJ1aWx0PSEwfWJpbmRGb3JTdWJNZXNoKGUsdCxpKXtjb25zdCBzPWkuZWZmZWN0O3MmJih0aGlzLl9ldmVudEluZm8uc3ViTWVzaD1pLHRoaXMuX2NhbGxiYWNrUGx1Z2luRXZlbnRCaW5kRm9yU3ViTWVzaCh0aGlzLl9ldmVudEluZm8pLHMuX2ZvcmNlUmViaW5kT25OZXh0Q2FsbD0hMSl9YmluZE9ubHlXb3JsZE1hdHJpeChlKXt9YmluZFZpZXcoZSl7dGhpcy5fdXNlVUJPP3RoaXMuX25lZWRUb0JpbmRTY2VuZVVibz0hMDplLnNldE1hdHJpeCgidmlldyIsdGhpcy5nZXRTY2VuZSgpLmdldFZpZXdNYXRyaXgoKSl9YmluZFZpZXdQcm9qZWN0aW9uKGUpe3RoaXMuX3VzZVVCTz90aGlzLl9uZWVkVG9CaW5kU2NlbmVVYm89ITA6KGUuc2V0TWF0cml4KCJ2aWV3UHJvamVjdGlvbiIsdGhpcy5nZXRTY2VuZSgpLmdldFRyYW5zZm9ybU1hdHJpeCgpKSxlLnNldE1hdHJpeCgicHJvamVjdGlvbiIsdGhpcy5nZXRTY2VuZSgpLmdldFByb2plY3Rpb25NYXRyaXgoKSkpfWJpbmRFeWVQb3NpdGlvbihlLHQpe3RoaXMuX3VzZVVCTz90aGlzLl9uZWVkVG9CaW5kU2NlbmVVYm89ITA6dGhpcy5fc2NlbmUuYmluZEV5ZVBvc2l0aW9uKGUsdCl9X2FmdGVyQmluZChlLHQ9bnVsbCl7aWYodGhpcy5fc2NlbmUuX2NhY2hlZE1hdGVyaWFsPXRoaXMsdGhpcy5fbmVlZFRvQmluZFNjZW5lVWJvJiZ0JiYodGhpcy5fbmVlZFRvQmluZFNjZW5lVWJvPSExLGllLkJpbmRTY2VuZVVuaWZvcm1CdWZmZXIodCx0aGlzLmdldFNjZW5lKCkuZ2V0U2NlbmVVbmlmb3JtQnVmZmVyKCkpLHRoaXMuX3NjZW5lLmZpbmFsaXplU2NlbmVVYm8oKSksZT90aGlzLl9zY2VuZS5fY2FjaGVkVmlzaWJpbGl0eT1lLnZpc2liaWxpdHk6dGhpcy5fc2NlbmUuX2NhY2hlZFZpc2liaWxpdHk9MSx0aGlzLl9vbkJpbmRPYnNlcnZhYmxlJiZlJiZ0aGlzLl9vbkJpbmRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhlKSx0aGlzLmRpc2FibGVEZXB0aFdyaXRlKXtjb25zdCBpPXRoaXMuX3NjZW5lLmdldEVuZ2luZSgpO3RoaXMuX2NhY2hlZERlcHRoV3JpdGVTdGF0ZT1pLmdldERlcHRoV3JpdGUoKSxpLnNldERlcHRoV3JpdGUoITEpfWlmKHRoaXMuZGlzYWJsZUNvbG9yV3JpdGUpe2NvbnN0IGk9dGhpcy5fc2NlbmUuZ2V0RW5naW5lKCk7dGhpcy5fY2FjaGVkQ29sb3JXcml0ZVN0YXRlPWkuZ2V0Q29sb3JXcml0ZSgpLGkuc2V0Q29sb3JXcml0ZSghMSl9aWYodGhpcy5kZXB0aEZ1bmN0aW9uIT09MCl7Y29uc3QgaT10aGlzLl9zY2VuZS5nZXRFbmdpbmUoKTt0aGlzLl9jYWNoZWREZXB0aEZ1bmN0aW9uU3RhdGU9aS5nZXREZXB0aEZ1bmN0aW9uKCl8fDAsaS5zZXREZXB0aEZ1bmN0aW9uKHRoaXMuZGVwdGhGdW5jdGlvbil9fXVuYmluZCgpe3RoaXMuX29uVW5CaW5kT2JzZXJ2YWJsZSYmdGhpcy5fb25VbkJpbmRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKSx0aGlzLmRlcHRoRnVuY3Rpb24hPT0wJiZ0aGlzLl9zY2VuZS5nZXRFbmdpbmUoKS5zZXREZXB0aEZ1bmN0aW9uKHRoaXMuX2NhY2hlZERlcHRoRnVuY3Rpb25TdGF0ZSksdGhpcy5kaXNhYmxlRGVwdGhXcml0ZSYmdGhpcy5fc2NlbmUuZ2V0RW5naW5lKCkuc2V0RGVwdGhXcml0ZSh0aGlzLl9jYWNoZWREZXB0aFdyaXRlU3RhdGUpLHRoaXMuZGlzYWJsZUNvbG9yV3JpdGUmJnRoaXMuX3NjZW5lLmdldEVuZ2luZSgpLnNldENvbG9yV3JpdGUodGhpcy5fY2FjaGVkQ29sb3JXcml0ZVN0YXRlKX1nZXRBbmltYXRhYmxlcygpe3JldHVybiB0aGlzLl9ldmVudEluZm8uYW5pbWF0YWJsZXM9W10sdGhpcy5fY2FsbGJhY2tQbHVnaW5FdmVudEdlbmVyaWMoUWUuR2V0QW5pbWF0YWJsZXMsdGhpcy5fZXZlbnRJbmZvKSx0aGlzLl9ldmVudEluZm8uYW5pbWF0YWJsZXN9Z2V0QWN0aXZlVGV4dHVyZXMoKXtyZXR1cm4gdGhpcy5fZXZlbnRJbmZvLmFjdGl2ZVRleHR1cmVzPVtdLHRoaXMuX2NhbGxiYWNrUGx1Z2luRXZlbnRHZW5lcmljKFFlLkdldEFjdGl2ZVRleHR1cmVzLHRoaXMuX2V2ZW50SW5mbyksdGhpcy5fZXZlbnRJbmZvLmFjdGl2ZVRleHR1cmVzfWhhc1RleHR1cmUoZSl7cmV0dXJuIHRoaXMuX2V2ZW50SW5mby5oYXNUZXh0dXJlPSExLHRoaXMuX2V2ZW50SW5mby50ZXh0dXJlPWUsdGhpcy5fY2FsbGJhY2tQbHVnaW5FdmVudEdlbmVyaWMoUWUuSGFzVGV4dHVyZSx0aGlzLl9ldmVudEluZm8pLHRoaXMuX2V2ZW50SW5mby5oYXNUZXh0dXJlfWNsb25lKGUpe3JldHVybiBudWxsfWdldEJpbmRlZE1lc2hlcygpe2lmKHRoaXMubWVzaE1hcCl7Y29uc3QgZT1uZXcgQXJyYXk7Zm9yKGNvbnN0IHQgaW4gdGhpcy5tZXNoTWFwKXtjb25zdCBpPXRoaXMubWVzaE1hcFt0XTtpJiZlLnB1c2goaSl9cmV0dXJuIGV9ZWxzZSByZXR1cm4gdGhpcy5fc2NlbmUubWVzaGVzLmZpbHRlcih0PT50Lm1hdGVyaWFsPT09dGhpcyl9Zm9yY2VDb21waWxhdGlvbihlLHQsaSxzKXtjb25zdCByPXtjbGlwUGxhbmU6ITEsdXNlSW5zdGFuY2VzOiExLC4uLml9LG49dGhpcy5nZXRTY2VuZSgpLGE9dGhpcy5hbGxvd1NoYWRlckhvdFN3YXBwaW5nO3RoaXMuYWxsb3dTaGFkZXJIb3RTd2FwcGluZz0hMTtjb25zdCBvPSgpPT57aWYoIXRoaXMuX3NjZW5lfHwhdGhpcy5fc2NlbmUuZ2V0RW5naW5lKCkpcmV0dXJuO2NvbnN0IGg9bi5jbGlwUGxhbmU7aWYoci5jbGlwUGxhbmUmJihuLmNsaXBQbGFuZT1uZXcgeHQoMCwwLDAsMSkpLHRoaXMuX3N0b3JlRWZmZWN0T25TdWJNZXNoZXMpe2xldCBsPSEwLHU9bnVsbDtpZihlLnN1Yk1lc2hlcyl7Y29uc3QgZD1uZXcgdnQoMCwwLDAsMCwwLGUsdm9pZCAwLCExLCExKTtkLm1hdGVyaWFsRGVmaW5lcyYmKGQubWF0ZXJpYWxEZWZpbmVzLl9yZW5kZXJJZD0tMSksdGhpcy5pc1JlYWR5Rm9yU3ViTWVzaChlLGQsci51c2VJbnN0YW5jZXMpfHwoZC5lZmZlY3QmJmQuZWZmZWN0LmdldENvbXBpbGF0aW9uRXJyb3IoKSYmZC5lZmZlY3QuYWxsRmFsbGJhY2tzUHJvY2Vzc2VkKCk/dT1kLmVmZmVjdC5nZXRDb21waWxhdGlvbkVycm9yKCk6KGw9ITEsc2V0VGltZW91dChvLDE2KSkpfWwmJih0aGlzLmFsbG93U2hhZGVySG90U3dhcHBpbmc9YSx1JiZzJiZzKHUpLHQmJnQodGhpcykpfWVsc2UgdGhpcy5pc1JlYWR5KCk/KHRoaXMuYWxsb3dTaGFkZXJIb3RTd2FwcGluZz1hLHQmJnQodGhpcykpOnNldFRpbWVvdXQobywxNik7ci5jbGlwUGxhbmUmJihuLmNsaXBQbGFuZT1oKX07bygpfWZvcmNlQ29tcGlsYXRpb25Bc3luYyhlLHQpe3JldHVybiBuZXcgUHJvbWlzZSgoaSxzKT0+e3RoaXMuZm9yY2VDb21waWxhdGlvbihlLCgpPT57aSgpfSx0LHI9PntzKHIpfSl9KX1tYXJrQXNEaXJ0eShlKXt0aGlzLmdldFNjZW5lKCkuYmxvY2tNYXRlcmlhbERpcnR5TWVjaGFuaXNtfHx0aGlzLl9ibG9ja0RpcnR5TWVjaGFuaXNtfHwoUC5fRGlydHlDYWxsYmFja0FycmF5Lmxlbmd0aD0wLGUmUC5UZXh0dXJlRGlydHlGbGFnJiZQLl9EaXJ0eUNhbGxiYWNrQXJyYXkucHVzaChQLl9UZXh0dXJlRGlydHlDYWxsQmFjayksZSZQLkxpZ2h0RGlydHlGbGFnJiZQLl9EaXJ0eUNhbGxiYWNrQXJyYXkucHVzaChQLl9MaWdodHNEaXJ0eUNhbGxCYWNrKSxlJlAuRnJlc25lbERpcnR5RmxhZyYmUC5fRGlydHlDYWxsYmFja0FycmF5LnB1c2goUC5fRnJlc25lbERpcnR5Q2FsbEJhY2spLGUmUC5BdHRyaWJ1dGVzRGlydHlGbGFnJiZQLl9EaXJ0eUNhbGxiYWNrQXJyYXkucHVzaChQLl9BdHRyaWJ1dGVEaXJ0eUNhbGxCYWNrKSxlJlAuTWlzY0RpcnR5RmxhZyYmUC5fRGlydHlDYWxsYmFja0FycmF5LnB1c2goUC5fTWlzY0RpcnR5Q2FsbEJhY2spLGUmUC5QcmVQYXNzRGlydHlGbGFnJiZQLl9EaXJ0eUNhbGxiYWNrQXJyYXkucHVzaChQLl9QcmVQYXNzRGlydHlDYWxsQmFjayksUC5fRGlydHlDYWxsYmFja0FycmF5Lmxlbmd0aCYmdGhpcy5fbWFya0FsbFN1Yk1lc2hlc0FzRGlydHkoUC5fUnVuRGlydHlDYWxsQmFja3MpLHRoaXMuZ2V0U2NlbmUoKS5yZXNldENhY2hlZE1hdGVyaWFsKCkpfXJlc2V0RHJhd0NhY2hlKCl7Y29uc3QgZT10aGlzLmdldFNjZW5lKCkubWVzaGVzO2Zvcihjb25zdCB0IG9mIGUpaWYodC5zdWJNZXNoZXMpZm9yKGNvbnN0IGkgb2YgdC5zdWJNZXNoZXMpaS5nZXRNYXRlcmlhbCgpPT09dGhpcyYmaS5yZXNldERyYXdDYWNoZSgpfV9tYXJrQWxsU3ViTWVzaGVzQXNEaXJ0eShlKXtpZih0aGlzLmdldFNjZW5lKCkuYmxvY2tNYXRlcmlhbERpcnR5TWVjaGFuaXNtfHx0aGlzLl9ibG9ja0RpcnR5TWVjaGFuaXNtKXJldHVybjtjb25zdCB0PXRoaXMuZ2V0U2NlbmUoKS5tZXNoZXM7Zm9yKGNvbnN0IGkgb2YgdClpZihpLnN1Yk1lc2hlcyl7Zm9yKGNvbnN0IHMgb2YgaS5zdWJNZXNoZXMpaWYocy5nZXRNYXRlcmlhbCghMSk9PT10aGlzKWZvcihjb25zdCByIG9mIHMuX2RyYXdXcmFwcGVycykhcnx8IXIuZGVmaW5lc3x8IXIuZGVmaW5lcy5tYXJrQWxsQXNEaXJ0eXx8dGhpcy5fbWF0ZXJpYWxDb250ZXh0PT09ci5tYXRlcmlhbENvbnRleHQmJmUoci5kZWZpbmVzKX19X21hcmtTY2VuZVByZVBhc3NEaXJ0eSgpe2lmKHRoaXMuZ2V0U2NlbmUoKS5ibG9ja01hdGVyaWFsRGlydHlNZWNoYW5pc218fHRoaXMuX2Jsb2NrRGlydHlNZWNoYW5pc20pcmV0dXJuO2NvbnN0IGU9dGhpcy5nZXRTY2VuZSgpLmVuYWJsZVByZVBhc3NSZW5kZXJlcigpO2UmJmUubWFya0FzRGlydHkoKX1fbWFya0FsbFN1Yk1lc2hlc0FzQWxsRGlydHkoKXt0aGlzLl9tYXJrQWxsU3ViTWVzaGVzQXNEaXJ0eShQLl9BbGxEaXJ0eUNhbGxCYWNrKX1fbWFya0FsbFN1Yk1lc2hlc0FzSW1hZ2VQcm9jZXNzaW5nRGlydHkoKXt0aGlzLl9tYXJrQWxsU3ViTWVzaGVzQXNEaXJ0eShQLl9JbWFnZVByb2Nlc3NpbmdEaXJ0eUNhbGxCYWNrKX1fbWFya0FsbFN1Yk1lc2hlc0FzVGV4dHVyZXNEaXJ0eSgpe3RoaXMuX21hcmtBbGxTdWJNZXNoZXNBc0RpcnR5KFAuX1RleHR1cmVEaXJ0eUNhbGxCYWNrKX1fbWFya0FsbFN1Yk1lc2hlc0FzRnJlc25lbERpcnR5KCl7dGhpcy5fbWFya0FsbFN1Yk1lc2hlc0FzRGlydHkoUC5fRnJlc25lbERpcnR5Q2FsbEJhY2spfV9tYXJrQWxsU3ViTWVzaGVzQXNGcmVzbmVsQW5kTWlzY0RpcnR5KCl7dGhpcy5fbWFya0FsbFN1Yk1lc2hlc0FzRGlydHkoUC5fRnJlc25lbEFuZE1pc2NEaXJ0eUNhbGxCYWNrKX1fbWFya0FsbFN1Yk1lc2hlc0FzTGlnaHRzRGlydHkoKXt0aGlzLl9tYXJrQWxsU3ViTWVzaGVzQXNEaXJ0eShQLl9MaWdodHNEaXJ0eUNhbGxCYWNrKX1fbWFya0FsbFN1Yk1lc2hlc0FzQXR0cmlidXRlc0RpcnR5KCl7dGhpcy5fbWFya0FsbFN1Yk1lc2hlc0FzRGlydHkoUC5fQXR0cmlidXRlRGlydHlDYWxsQmFjayl9X21hcmtBbGxTdWJNZXNoZXNBc01pc2NEaXJ0eSgpe3RoaXMuX21hcmtBbGxTdWJNZXNoZXNBc0RpcnR5KFAuX01pc2NEaXJ0eUNhbGxCYWNrKX1fbWFya0FsbFN1Yk1lc2hlc0FzUHJlUGFzc0RpcnR5KCl7dGhpcy5fbWFya0FsbFN1Yk1lc2hlc0FzRGlydHkoUC5fTWlzY0RpcnR5Q2FsbEJhY2spfV9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0FuZE1pc2NEaXJ0eSgpe3RoaXMuX21hcmtBbGxTdWJNZXNoZXNBc0RpcnR5KFAuX1RleHR1cmVBbmRNaXNjRGlydHlDYWxsQmFjayl9c2V0UHJlUGFzc1JlbmRlcmVyKGUpe3JldHVybiExfWRpc3Bvc2UoZSx0LGkpe2NvbnN0IHM9dGhpcy5nZXRTY2VuZSgpO2lmKHMuc3RvcEFuaW1hdGlvbih0aGlzKSxzLmZyZWVQcm9jZXNzZWRNYXRlcmlhbHMoKSxzLnJlbW92ZU1hdGVyaWFsKHRoaXMpLHRoaXMuX2V2ZW50SW5mby5mb3JjZURpc3Bvc2VUZXh0dXJlcz10LHRoaXMuX2NhbGxiYWNrUGx1Z2luRXZlbnRHZW5lcmljKFFlLkRpc3Bvc2VkLHRoaXMuX2V2ZW50SW5mbyksdGhpcy5fcGFyZW50Q29udGFpbmVyKXtjb25zdCByPXRoaXMuX3BhcmVudENvbnRhaW5lci5tYXRlcmlhbHMuaW5kZXhPZih0aGlzKTtyPi0xJiZ0aGlzLl9wYXJlbnRDb250YWluZXIubWF0ZXJpYWxzLnNwbGljZShyLDEpLHRoaXMuX3BhcmVudENvbnRhaW5lcj1udWxsfWlmKGkhPT0hMClpZih0aGlzLm1lc2hNYXApZm9yKGNvbnN0IHIgaW4gdGhpcy5tZXNoTWFwKXtjb25zdCBuPXRoaXMubWVzaE1hcFtyXTtuJiYobi5tYXRlcmlhbD1udWxsLHRoaXMucmVsZWFzZVZlcnRleEFycmF5T2JqZWN0KG4sZSkpfWVsc2V7Y29uc3Qgcj1zLm1lc2hlcztmb3IoY29uc3QgbiBvZiByKW4ubWF0ZXJpYWw9PT10aGlzJiYhbi5zb3VyY2VNZXNoJiYobi5tYXRlcmlhbD1udWxsLHRoaXMucmVsZWFzZVZlcnRleEFycmF5T2JqZWN0KG4sZSkpfXRoaXMuX3VuaWZvcm1CdWZmZXIuZGlzcG9zZSgpLGUmJnRoaXMuX2RyYXdXcmFwcGVyLmVmZmVjdCYmKHRoaXMuX3N0b3JlRWZmZWN0T25TdWJNZXNoZXN8fHRoaXMuX2RyYXdXcmFwcGVyLmVmZmVjdC5kaXNwb3NlKCksdGhpcy5fZHJhd1dyYXBwZXIuZWZmZWN0PW51bGwpLHRoaXMubWV0YWRhdGE9bnVsbCx0aGlzLm9uRGlzcG9zZU9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLHRoaXMub25EaXNwb3NlT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMuX29uQmluZE9ic2VydmFibGUmJnRoaXMuX29uQmluZE9ic2VydmFibGUuY2xlYXIoKSx0aGlzLl9vblVuQmluZE9ic2VydmFibGUmJnRoaXMuX29uVW5CaW5kT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMuX29uRWZmZWN0Q3JlYXRlZE9ic2VydmFibGUmJnRoaXMuX29uRWZmZWN0Q3JlYXRlZE9ic2VydmFibGUuY2xlYXIoKSx0aGlzLl9ldmVudEluZm8mJih0aGlzLl9ldmVudEluZm89e30pfXJlbGVhc2VWZXJ0ZXhBcnJheU9iamVjdChlLHQpe2lmKGUuZ2VvbWV0cnkpe2NvbnN0IGk9ZS5nZW9tZXRyeTtpZih0aGlzLl9zdG9yZUVmZmVjdE9uU3ViTWVzaGVzKWZvcihjb25zdCBzIG9mIGUuc3ViTWVzaGVzKWkuX3JlbGVhc2VWZXJ0ZXhBcnJheU9iamVjdChzLmVmZmVjdCksdCYmcy5lZmZlY3QmJnMuZWZmZWN0LmRpc3Bvc2UoKTtlbHNlIGkuX3JlbGVhc2VWZXJ0ZXhBcnJheU9iamVjdCh0aGlzLl9kcmF3V3JhcHBlci5lZmZlY3QpfX1zZXJpYWxpemUoKXtjb25zdCBlPWFlLlNlcmlhbGl6ZSh0aGlzKTtyZXR1cm4gZS5zdGVuY2lsPXRoaXMuc3RlbmNpbC5zZXJpYWxpemUoKSxlLnVuaXF1ZUlkPXRoaXMudW5pcXVlSWQsZX1zdGF0aWMgUGFyc2UoZSx0LGkpe2lmKCFlLmN1c3RvbVR5cGUpZS5jdXN0b21UeXBlPSJCQUJZTE9OLlN0YW5kYXJkTWF0ZXJpYWwiO2Vsc2UgaWYoZS5jdXN0b21UeXBlPT09IkJBQllMT04uUEJSTWF0ZXJpYWwiJiZlLm92ZXJsb2FkZWRBbGJlZG8mJihlLmN1c3RvbVR5cGU9IkJBQllMT04uTGVnYWN5UEJSTWF0ZXJpYWwiLCFCQUJZTE9OLkxlZ2FjeVBCUk1hdGVyaWFsKSlyZXR1cm4gTy5FcnJvcigiWW91ciBzY2VuZSBpcyB0cnlpbmcgdG8gbG9hZCBhIGxlZ2FjeSB2ZXJzaW9uIG9mIHRoZSBQQlJNYXRlcmlhbCwgcGxlYXNlLCBpbmNsdWRlIGl0IGZyb20gdGhlIG1hdGVyaWFscyBsaWJyYXJ5LiIpLG51bGw7Y29uc3Qgcj1ILkluc3RhbnRpYXRlKGUuY3VzdG9tVHlwZSkuUGFyc2UoZSx0LGkpO3JldHVybiByLl9sb2FkZWRVbmlxdWVJZD1lLnVuaXF1ZUlkLHJ9fVAuVHJpYW5nbGVGaWxsTW9kZT0wLFAuV2lyZUZyYW1lRmlsbE1vZGU9MSxQLlBvaW50RmlsbE1vZGU9MixQLlBvaW50TGlzdERyYXdNb2RlPTMsUC5MaW5lTGlzdERyYXdNb2RlPTQsUC5MaW5lTG9vcERyYXdNb2RlPTUsUC5MaW5lU3RyaXBEcmF3TW9kZT02LFAuVHJpYW5nbGVTdHJpcERyYXdNb2RlPTcsUC5UcmlhbmdsZUZhbkRyYXdNb2RlPTgsUC5DbG9ja1dpc2VTaWRlT3JpZW50YXRpb249MCxQLkNvdW50ZXJDbG9ja1dpc2VTaWRlT3JpZW50YXRpb249MSxQLlRleHR1cmVEaXJ0eUZsYWc9MSxQLkxpZ2h0RGlydHlGbGFnPTIsUC5GcmVzbmVsRGlydHlGbGFnPTQsUC5BdHRyaWJ1dGVzRGlydHlGbGFnPTgsUC5NaXNjRGlydHlGbGFnPTE2LFAuUHJlUGFzc0RpcnR5RmxhZz0zMixQLkFsbERpcnR5RmxhZz02MyxQLk1BVEVSSUFMX09QQVFVRT0wLFAuTUFURVJJQUxfQUxQSEFURVNUPTEsUC5NQVRFUklBTF9BTFBIQUJMRU5EPTIsUC5NQVRFUklBTF9BTFBIQVRFU1RBTkRCTEVORD0zLFAuTUFURVJJQUxfTk9STUFMQkxFTkRNRVRIT0RfV0hJVEVPVVQ9MCxQLk1BVEVSSUFMX05PUk1BTEJMRU5ETUVUSE9EX1JOTT0xLFAuT25FdmVudE9ic2VydmFibGU9bmV3IEYsUC5fQWxsRGlydHlDYWxsQmFjaz1jPT5jLm1hcmtBbGxBc0RpcnR5KCksUC5fSW1hZ2VQcm9jZXNzaW5nRGlydHlDYWxsQmFjaz1jPT5jLm1hcmtBc0ltYWdlUHJvY2Vzc2luZ0RpcnR5KCksUC5fVGV4dHVyZURpcnR5Q2FsbEJhY2s9Yz0+Yy5tYXJrQXNUZXh0dXJlc0RpcnR5KCksUC5fRnJlc25lbERpcnR5Q2FsbEJhY2s9Yz0+Yy5tYXJrQXNGcmVzbmVsRGlydHkoKSxQLl9NaXNjRGlydHlDYWxsQmFjaz1jPT5jLm1hcmtBc01pc2NEaXJ0eSgpLFAuX1ByZVBhc3NEaXJ0eUNhbGxCYWNrPWM9PmMubWFya0FzUHJlUGFzc0RpcnR5KCksUC5fTGlnaHRzRGlydHlDYWxsQmFjaz1jPT5jLm1hcmtBc0xpZ2h0RGlydHkoKSxQLl9BdHRyaWJ1dGVEaXJ0eUNhbGxCYWNrPWM9PmMubWFya0FzQXR0cmlidXRlc0RpcnR5KCksUC5fRnJlc25lbEFuZE1pc2NEaXJ0eUNhbGxCYWNrPWM9PntQLl9GcmVzbmVsRGlydHlDYWxsQmFjayhjKSxQLl9NaXNjRGlydHlDYWxsQmFjayhjKX0sUC5fVGV4dHVyZUFuZE1pc2NEaXJ0eUNhbGxCYWNrPWM9PntQLl9UZXh0dXJlRGlydHlDYWxsQmFjayhjKSxQLl9NaXNjRGlydHlDYWxsQmFjayhjKX0sUC5fRGlydHlDYWxsYmFja0FycmF5PVtdLFAuX1J1bkRpcnR5Q2FsbEJhY2tzPWM9Pntmb3IoY29uc3QgZSBvZiBQLl9EaXJ0eUNhbGxiYWNrQXJyYXkpZShjKX0sVChbUigpXSxQLnByb3RvdHlwZSwiaWQiLHZvaWQgMCksVChbUigpXSxQLnByb3RvdHlwZSwidW5pcXVlSWQiLHZvaWQgMCksVChbUigpXSxQLnByb3RvdHlwZSwibmFtZSIsdm9pZCAwKSxUKFtSKCldLFAucHJvdG90eXBlLCJtZXRhZGF0YSIsdm9pZCAwKSxUKFtSKCldLFAucHJvdG90eXBlLCJjaGVja1JlYWR5T25FdmVyeUNhbGwiLHZvaWQgMCksVChbUigpXSxQLnByb3RvdHlwZSwiY2hlY2tSZWFkeU9ubHlPbmNlIix2b2lkIDApLFQoW1IoKV0sUC5wcm90b3R5cGUsInN0YXRlIix2b2lkIDApLFQoW1IoImFscGhhIildLFAucHJvdG90eXBlLCJfYWxwaGEiLHZvaWQgMCksVChbUigiYmFja0ZhY2VDdWxsaW5nIildLFAucHJvdG90eXBlLCJfYmFja0ZhY2VDdWxsaW5nIix2b2lkIDApLFQoW1IoImN1bGxCYWNrRmFjZXMiKV0sUC5wcm90b3R5cGUsIl9jdWxsQmFja0ZhY2VzIix2b2lkIDApLFQoW1IoKV0sUC5wcm90b3R5cGUsInNpZGVPcmllbnRhdGlvbiIsdm9pZCAwKSxUKFtSKCJhbHBoYU1vZGUiKV0sUC5wcm90b3R5cGUsIl9hbHBoYU1vZGUiLHZvaWQgMCksVChbUigpXSxQLnByb3RvdHlwZSwiX25lZWREZXB0aFByZVBhc3MiLHZvaWQgMCksVChbUigpXSxQLnByb3RvdHlwZSwiZGlzYWJsZURlcHRoV3JpdGUiLHZvaWQgMCksVChbUigpXSxQLnByb3RvdHlwZSwiZGlzYWJsZUNvbG9yV3JpdGUiLHZvaWQgMCksVChbUigpXSxQLnByb3RvdHlwZSwiZm9yY2VEZXB0aFdyaXRlIix2b2lkIDApLFQoW1IoKV0sUC5wcm90b3R5cGUsImRlcHRoRnVuY3Rpb24iLHZvaWQgMCksVChbUigpXSxQLnByb3RvdHlwZSwic2VwYXJhdGVDdWxsaW5nUGFzcyIsdm9pZCAwKSxUKFtSKCJmb2dFbmFibGVkIildLFAucHJvdG90eXBlLCJfZm9nRW5hYmxlZCIsdm9pZCAwKSxUKFtSKCldLFAucHJvdG90eXBlLCJwb2ludFNpemUiLHZvaWQgMCksVChbUigpXSxQLnByb3RvdHlwZSwiek9mZnNldCIsdm9pZCAwKSxUKFtSKCldLFAucHJvdG90eXBlLCJ6T2Zmc2V0VW5pdHMiLHZvaWQgMCksVChbUigpXSxQLnByb3RvdHlwZSwicG9pbnRzQ2xvdWQiLG51bGwpLFQoW1IoKV0sUC5wcm90b3R5cGUsImZpbGxNb2RlIixudWxsKSxUKFtSKCldLFAucHJvdG90eXBlLCJ0cmFuc3BhcmVuY3lNb2RlIixudWxsKTtjbGFzcyBTaSBleHRlbmRzIFB7Y29uc3RydWN0b3IoZSx0KXtzdXBlcihlLHQsITApLHRoaXMuX3dhaXRpbmdTdWJNYXRlcmlhbHNVbmlxdWVJZHM9W10sdGhpcy5nZXRTY2VuZSgpLm11bHRpTWF0ZXJpYWxzLnB1c2godGhpcyksdGhpcy5zdWJNYXRlcmlhbHM9bmV3IEFycmF5LHRoaXMuX3N0b3JlRWZmZWN0T25TdWJNZXNoZXM9ITB9Z2V0IHN1Yk1hdGVyaWFscygpe3JldHVybiB0aGlzLl9zdWJNYXRlcmlhbHN9c2V0IHN1Yk1hdGVyaWFscyhlKXt0aGlzLl9zdWJNYXRlcmlhbHM9ZSx0aGlzLl9ob29rQXJyYXkoZSl9Z2V0Q2hpbGRyZW4oKXtyZXR1cm4gdGhpcy5zdWJNYXRlcmlhbHN9X2hvb2tBcnJheShlKXtjb25zdCB0PWUucHVzaDtlLnB1c2g9KC4uLnMpPT57Y29uc3Qgcj10LmFwcGx5KGUscyk7cmV0dXJuIHRoaXMuX21hcmtBbGxTdWJNZXNoZXNBc1RleHR1cmVzRGlydHkoKSxyfTtjb25zdCBpPWUuc3BsaWNlO2Uuc3BsaWNlPShzLHIpPT57Y29uc3Qgbj1pLmFwcGx5KGUsW3Mscl0pO3JldHVybiB0aGlzLl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0RpcnR5KCksbn19Z2V0U3ViTWF0ZXJpYWwoZSl7cmV0dXJuIGU8MHx8ZT49dGhpcy5zdWJNYXRlcmlhbHMubGVuZ3RoP3RoaXMuZ2V0U2NlbmUoKS5kZWZhdWx0TWF0ZXJpYWw6dGhpcy5zdWJNYXRlcmlhbHNbZV19Z2V0QWN0aXZlVGV4dHVyZXMoKXtyZXR1cm4gc3VwZXIuZ2V0QWN0aXZlVGV4dHVyZXMoKS5jb25jYXQoLi4udGhpcy5zdWJNYXRlcmlhbHMubWFwKGU9PmU/ZS5nZXRBY3RpdmVUZXh0dXJlcygpOltdKSl9aGFzVGV4dHVyZShlKXt2YXIgdDtpZihzdXBlci5oYXNUZXh0dXJlKGUpKXJldHVybiEwO2ZvcihsZXQgaT0wO2k8dGhpcy5zdWJNYXRlcmlhbHMubGVuZ3RoO2krKylpZighKCh0PXRoaXMuc3ViTWF0ZXJpYWxzW2ldKT09PW51bGx8fHQ9PT12b2lkIDApJiZ0Lmhhc1RleHR1cmUoZSkpcmV0dXJuITA7cmV0dXJuITF9Z2V0Q2xhc3NOYW1lKCl7cmV0dXJuIk11bHRpTWF0ZXJpYWwifWlzUmVhZHlGb3JTdWJNZXNoKGUsdCxpKXtmb3IobGV0IHM9MDtzPHRoaXMuc3ViTWF0ZXJpYWxzLmxlbmd0aDtzKyspe2NvbnN0IHI9dGhpcy5zdWJNYXRlcmlhbHNbc107aWYocil7aWYoci5fc3RvcmVFZmZlY3RPblN1Yk1lc2hlcyl7aWYoIXIuaXNSZWFkeUZvclN1Yk1lc2goZSx0LGkpKXJldHVybiExO2NvbnRpbnVlfWlmKCFyLmlzUmVhZHkoZSkpcmV0dXJuITF9fXJldHVybiEwfWNsb25lKGUsdCl7Y29uc3QgaT1uZXcgU2koZSx0aGlzLmdldFNjZW5lKCkpO2ZvcihsZXQgcz0wO3M8dGhpcy5zdWJNYXRlcmlhbHMubGVuZ3RoO3MrKyl7bGV0IHI9bnVsbDtjb25zdCBuPXRoaXMuc3ViTWF0ZXJpYWxzW3NdO3QmJm4/cj1uLmNsb25lKGUrIi0iK24ubmFtZSk6cj10aGlzLnN1Yk1hdGVyaWFsc1tzXSxpLnN1Yk1hdGVyaWFscy5wdXNoKHIpfXJldHVybiBpfXNlcmlhbGl6ZSgpe2NvbnN0IGU9e307ZS5uYW1lPXRoaXMubmFtZSxlLmlkPXRoaXMuaWQsZS51bmlxdWVJZD10aGlzLnVuaXF1ZUlkLGdlJiYoZS50YWdzPWdlLkdldFRhZ3ModGhpcykpLGUubWF0ZXJpYWxzVW5pcXVlSWRzPVtdLGUubWF0ZXJpYWxzPVtdO2ZvcihsZXQgdD0wO3Q8dGhpcy5zdWJNYXRlcmlhbHMubGVuZ3RoO3QrKyl7Y29uc3QgaT10aGlzLnN1Yk1hdGVyaWFsc1t0XTtpPyhlLm1hdGVyaWFsc1VuaXF1ZUlkcy5wdXNoKGkudW5pcXVlSWQpLGUubWF0ZXJpYWxzLnB1c2goaS5pZCkpOihlLm1hdGVyaWFsc1VuaXF1ZUlkcy5wdXNoKG51bGwpLGUubWF0ZXJpYWxzLnB1c2gobnVsbCkpfXJldHVybiBlfWRpc3Bvc2UoZSx0LGkpe2NvbnN0IHM9dGhpcy5nZXRTY2VuZSgpO2lmKCFzKXJldHVybjtpZihpKWZvcihsZXQgbj0wO248dGhpcy5zdWJNYXRlcmlhbHMubGVuZ3RoO24rKyl7Y29uc3QgYT10aGlzLnN1Yk1hdGVyaWFsc1tuXTthJiZhLmRpc3Bvc2UoZSx0KX1jb25zdCByPXMubXVsdGlNYXRlcmlhbHMuaW5kZXhPZih0aGlzKTtyPj0wJiZzLm11bHRpTWF0ZXJpYWxzLnNwbGljZShyLDEpLHN1cGVyLmRpc3Bvc2UoZSx0KX1zdGF0aWMgUGFyc2VNdWx0aU1hdGVyaWFsKGUsdCl7Y29uc3QgaT1uZXcgU2koZS5uYW1lLHQpO3JldHVybiBpLmlkPWUuaWQsaS5fbG9hZGVkVW5pcXVlSWQ9ZS51bmlxdWVJZCxnZSYmZ2UuQWRkVGFnc1RvKGksZS50YWdzKSxlLm1hdGVyaWFsc1VuaXF1ZUlkcz9pLl93YWl0aW5nU3ViTWF0ZXJpYWxzVW5pcXVlSWRzPWUubWF0ZXJpYWxzVW5pcXVlSWRzOmUubWF0ZXJpYWxzLmZvckVhY2gocz0+aS5zdWJNYXRlcmlhbHMucHVzaCh0LmdldExhc3RNYXRlcmlhbEJ5SWQocykpKSxpfX1pdCgiQkFCWUxPTi5NdWx0aU1hdGVyaWFsIixTaSk7Y2xhc3MgV257Y29uc3RydWN0b3IoZSx0KXt0aGlzLmRpc3RhbmNlT3JTY3JlZW5Db3ZlcmFnZT1lLHRoaXMubWVzaD10fX1jbGFzcyB6bntjb25zdHJ1Y3Rvcigpe3RoaXMudmlzaWJsZUluc3RhbmNlcz17fSx0aGlzLmJhdGNoQ2FjaGU9bmV3IElyLHRoaXMuYmF0Y2hDYWNoZVJlcGxhY2VtZW50TW9kZUluRnJvemVuTW9kZT1uZXcgSXIsdGhpcy5pbnN0YW5jZXNCdWZmZXJTaXplPTMyKjE2KjR9fWNsYXNzIElye2NvbnN0cnVjdG9yKCl7dGhpcy5tdXN0UmV0dXJuPSExLHRoaXMudmlzaWJsZUluc3RhbmNlcz1uZXcgQXJyYXksdGhpcy5yZW5kZXJTZWxmPW5ldyBBcnJheSx0aGlzLmhhcmR3YXJlSW5zdGFuY2VkUmVuZGVyaW5nPW5ldyBBcnJheX19Y2xhc3MgR257Y29uc3RydWN0b3IoKXt0aGlzLmluc3RhbmNlc0NvdW50PTAsdGhpcy5tYXRyaXhCdWZmZXI9bnVsbCx0aGlzLnByZXZpb3VzTWF0cml4QnVmZmVyPW51bGwsdGhpcy5tYXRyaXhCdWZmZXJTaXplPTMyKjE2LHRoaXMubWF0cml4RGF0YT1udWxsLHRoaXMuYm91bmRpbmdWZWN0b3JzPVtdLHRoaXMud29ybGRNYXRyaWNlcz1udWxsfX1jbGFzcyBYbntjb25zdHJ1Y3Rvcigpe3RoaXMuX2FyZU5vcm1hbHNGcm96ZW49ITEsdGhpcy5fc291cmNlPW51bGwsdGhpcy5tZXNoTWFwPW51bGwsdGhpcy5fcHJlQWN0aXZhdGVJZD0tMSx0aGlzLl9MT0RMZXZlbHM9bmV3IEFycmF5LHRoaXMuX3VzZUxPRFNjcmVlbkNvdmVyYWdlPSExLHRoaXMuX2VmZmVjdGl2ZU1hdGVyaWFsPW51bGwsdGhpcy5fZm9yY2VkSW5zdGFuY2VDb3VudD0wfX1jbGFzcyBXIGV4dGVuZHMgb3R7Y29uc3RydWN0b3IoZSx0PW51bGwsaT1udWxsLHM9bnVsbCxyLG49ITApe2lmKHN1cGVyKGUsdCksdGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm89bmV3IFhuLHRoaXMuZGVsYXlMb2FkU3RhdGU9MCx0aGlzLmluc3RhbmNlcz1uZXcgQXJyYXksdGhpcy5fY3JlYXRpb25EYXRhU3RvcmFnZT1udWxsLHRoaXMuX2dlb21ldHJ5PW51bGwsdGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZT1uZXcgem4sdGhpcy5fdGhpbkluc3RhbmNlRGF0YVN0b3JhZ2U9bmV3IEduLHRoaXMuX3Nob3VsZEdlbmVyYXRlRmxhdFNoYWRpbmc9ITEsdGhpcy5fb3JpZ2luYWxCdWlsZGVyU2lkZU9yaWVudGF0aW9uPVcuREVGQVVMVFNJREUsdGhpcy5vdmVycmlkZU1hdGVyaWFsU2lkZU9yaWVudGF0aW9uPW51bGwsdGhpcy5pZ25vcmVDYW1lcmFNYXhaPSExLHQ9dGhpcy5nZXRTY2VuZSgpLHRoaXMuX29uQmVmb3JlRHJhdz0oYSxvLGgpPT57YSYmaCYmKHRoaXMuX3VuaWZvcm1CdWZmZXI/dGhpcy50cmFuc2ZlclRvRWZmZWN0KG8pOmguYmluZE9ubHlXb3JsZE1hdHJpeChvKSl9LHMpe2lmKHMuX2dlb21ldHJ5JiZzLl9nZW9tZXRyeS5hcHBseVRvTWVzaCh0aGlzKSx2cy5EZWVwQ29weShzLHRoaXMsWyJuYW1lIiwibWF0ZXJpYWwiLCJza2VsZXRvbiIsImluc3RhbmNlcyIsInBhcmVudCIsInVuaXF1ZUlkIiwic291cmNlIiwibWV0YWRhdGEiLCJtb3JwaFRhcmdldE1hbmFnZXIiLCJoYXNJbnN0YW5jZXMiLCJ3b3JsZE1hdHJpeEluc3RhbmNlZEJ1ZmZlciIsInByZXZpb3VzV29ybGRNYXRyaXhJbnN0YW5jZWRCdWZmZXIiLCJoYXNMT0RMZXZlbHMiLCJnZW9tZXRyeSIsImlzQmxvY2tlZCIsImFyZU5vcm1hbHNGcm96ZW4iLCJmYWNldE5iIiwiaXNGYWNldERhdGFFbmFibGVkIiwibGlnaHRTb3VyY2VzIiwidXNlQm9uZXMiLCJpc0FuSW5zdGFuY2UiLCJjb2xsaWRlciIsImVkZ2VzUmVuZGVyZXIiLCJmb3J3YXJkIiwidXAiLCJyaWdodCIsImFic29sdXRlUG9zaXRpb24iLCJhYnNvbHV0ZVNjYWxpbmciLCJhYnNvbHV0ZVJvdGF0aW9uUXVhdGVybmlvbiIsImlzV29ybGRNYXRyaXhGcm96ZW4iLCJub25Vbmlmb3JtU2NhbGluZyIsImJlaGF2aW9ycyIsIndvcmxkTWF0cml4RnJvbUNhY2hlIiwiaGFzVGhpbkluc3RhbmNlcyIsImNsb25lTWVzaE1hcCIsImhhc0JvdW5kaW5nSW5mbyJdLFsiX3Bvc2VNYXRyaXgiXSksdGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX3NvdXJjZT1zLHQudXNlQ2xvbmVkTWVzaE1hcCYmKHMuX2ludGVybmFsTWVzaERhdGFJbmZvLm1lc2hNYXB8fChzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5tZXNoTWFwPXt9KSxzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5tZXNoTWFwW3RoaXMudW5pcXVlSWRdPXRoaXMpLHRoaXMuX29yaWdpbmFsQnVpbGRlclNpZGVPcmllbnRhdGlvbj1zLl9vcmlnaW5hbEJ1aWxkZXJTaWRlT3JpZW50YXRpb24sdGhpcy5fY3JlYXRpb25EYXRhU3RvcmFnZT1zLl9jcmVhdGlvbkRhdGFTdG9yYWdlLHMuX3Jhbmdlcyl7Y29uc3QgYT1zLl9yYW5nZXM7Zm9yKGNvbnN0IG8gaW4gYSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxvKSYmYVtvXSYmdGhpcy5jcmVhdGVBbmltYXRpb25SYW5nZShvLGFbb10uZnJvbSxhW29dLnRvKX1pZihzLm1ldGFkYXRhJiZzLm1ldGFkYXRhLmNsb25lP3RoaXMubWV0YWRhdGE9cy5tZXRhZGF0YS5jbG9uZSgpOnRoaXMubWV0YWRhdGE9cy5tZXRhZGF0YSxnZSYmZ2UuSGFzVGFncyhzKSYmZ2UuQWRkVGFnc1RvKHRoaXMsZ2UuR2V0VGFncyhzLCEwKSksdGhpcy5zZXRFbmFibGVkKHMuaXNFbmFibGVkKCExKSksdGhpcy5wYXJlbnQ9cy5wYXJlbnQsdGhpcy5zZXRQaXZvdE1hdHJpeChzLmdldFBpdm90TWF0cml4KCkpLHRoaXMuaWQ9ZSsiLiIrcy5pZCx0aGlzLm1hdGVyaWFsPXMubWF0ZXJpYWwsIXIpe2NvbnN0IGE9cy5nZXREZXNjZW5kYW50cyghMCk7Zm9yKGxldCBvPTA7bzxhLmxlbmd0aDtvKyspe2NvbnN0IGg9YVtvXTtoLmNsb25lJiZoLmNsb25lKGUrIi4iK2gubmFtZSx0aGlzKX19aWYocy5tb3JwaFRhcmdldE1hbmFnZXImJih0aGlzLm1vcnBoVGFyZ2V0TWFuYWdlcj1zLm1vcnBoVGFyZ2V0TWFuYWdlciksdC5nZXRQaHlzaWNzRW5naW5lKXtjb25zdCBhPXQuZ2V0UGh5c2ljc0VuZ2luZSgpO2lmKG4mJmEmJmEuZ2V0UGx1Z2luVmVyc2lvbigpPT09MSl7Y29uc3Qgbz1hLmdldEltcG9zdG9yRm9yUGh5c2ljc09iamVjdChzKTtvJiYodGhpcy5waHlzaWNzSW1wb3N0b3I9by5jbG9uZSh0aGlzKSl9fWZvcihsZXQgYT0wO2E8dC5wYXJ0aWNsZVN5c3RlbXMubGVuZ3RoO2ErKyl7Y29uc3Qgbz10LnBhcnRpY2xlU3lzdGVtc1thXTtvLmVtaXR0ZXI9PT1zJiZvLmNsb25lKG8ubmFtZSx0aGlzKX10aGlzLnNrZWxldG9uPXMuc2tlbGV0b24sdGhpcy5yZWZyZXNoQm91bmRpbmdJbmZvKCEwLCEwKSx0aGlzLmNvbXB1dGVXb3JsZE1hdHJpeCghMCl9aSE9PW51bGwmJih0aGlzLnBhcmVudD1pKSx0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLmhhcmR3YXJlSW5zdGFuY2VkUmVuZGVyaW5nPXRoaXMuZ2V0RW5naW5lKCkuZ2V0Q2FwcygpLmluc3RhbmNlZEFycmF5cyx0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fb25NZXNoUmVhZHlPYnNlcnZlckFkZGVkPWE9PnthLnVucmVnaXN0ZXJPbk5leHRDYWxsPSEwLHRoaXMuaXNSZWFkeSghMCk/dGhpcy5vbk1lc2hSZWFkeU9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpOnRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9jaGVja1JlYWRpbmVzc09ic2VydmVyfHwodGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX2NoZWNrUmVhZGluZXNzT2JzZXJ2ZXI9dGhpcy5fc2NlbmUub25CZWZvcmVSZW5kZXJPYnNlcnZhYmxlLmFkZCgoKT0+e3RoaXMuaXNSZWFkeSghMCkmJih0aGlzLl9zY2VuZS5vbkJlZm9yZVJlbmRlck9ic2VydmFibGUucmVtb3ZlKHRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9jaGVja1JlYWRpbmVzc09ic2VydmVyKSx0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fY2hlY2tSZWFkaW5lc3NPYnNlcnZlcj1udWxsLHRoaXMub25NZXNoUmVhZHlPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKSl9KSl9LHRoaXMub25NZXNoUmVhZHlPYnNlcnZhYmxlPW5ldyBGKHRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9vbk1lc2hSZWFkeU9ic2VydmVyQWRkZWQpLHMmJnMub25DbG9uZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKX1zdGF0aWMgX0dldERlZmF1bHRTaWRlT3JpZW50YXRpb24oZSl7cmV0dXJuIGV8fFcuRlJPTlRTSURFfWdldCB1c2VMT0RTY3JlZW5Db3ZlcmFnZSgpe3JldHVybiB0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fdXNlTE9EU2NyZWVuQ292ZXJhZ2V9c2V0IHVzZUxPRFNjcmVlbkNvdmVyYWdlKGUpe3RoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl91c2VMT0RTY3JlZW5Db3ZlcmFnZT1lLHRoaXMuX3NvcnRMT0RMZXZlbHMoKX1nZXQgY29tcHV0ZUJvbmVzVXNpbmdTaGFkZXJzKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2NvbXB1dGVCb25lc1VzaW5nU2hhZGVyc31zZXQgY29tcHV0ZUJvbmVzVXNpbmdTaGFkZXJzKGUpe3RoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2NvbXB1dGVCb25lc1VzaW5nU2hhZGVycyE9PWUmJihlJiZ0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fc291cmNlUG9zaXRpb25zJiYodGhpcy5zZXRWZXJ0aWNlc0RhdGEoZy5Qb3NpdGlvbktpbmQsdGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX3NvdXJjZVBvc2l0aW9ucywhMCksdGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX3NvdXJjZU5vcm1hbHMmJnRoaXMuc2V0VmVydGljZXNEYXRhKGcuTm9ybWFsS2luZCx0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fc291cmNlTm9ybWFscywhMCksdGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX3NvdXJjZVBvc2l0aW9ucz1udWxsLHRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9zb3VyY2VOb3JtYWxzPW51bGwpLHRoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2NvbXB1dGVCb25lc1VzaW5nU2hhZGVycz1lLHRoaXMuX21hcmtTdWJNZXNoZXNBc0F0dHJpYnV0ZXNEaXJ0eSgpKX1nZXQgb25CZWZvcmVSZW5kZXJPYnNlcnZhYmxlKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9vbkJlZm9yZVJlbmRlck9ic2VydmFibGV8fCh0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fb25CZWZvcmVSZW5kZXJPYnNlcnZhYmxlPW5ldyBGKSx0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fb25CZWZvcmVSZW5kZXJPYnNlcnZhYmxlfWdldCBvbkJlZm9yZUJpbmRPYnNlcnZhYmxlKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9vbkJlZm9yZUJpbmRPYnNlcnZhYmxlfHwodGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX29uQmVmb3JlQmluZE9ic2VydmFibGU9bmV3IEYpLHRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9vbkJlZm9yZUJpbmRPYnNlcnZhYmxlfWdldCBvbkFmdGVyUmVuZGVyT2JzZXJ2YWJsZSgpe3JldHVybiB0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fb25BZnRlclJlbmRlck9ic2VydmFibGV8fCh0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fb25BZnRlclJlbmRlck9ic2VydmFibGU9bmV3IEYpLHRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9vbkFmdGVyUmVuZGVyT2JzZXJ2YWJsZX1nZXQgb25CZXR3ZWVuUGFzc09ic2VydmFibGUoKXtyZXR1cm4gdGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX29uQmV0d2VlblBhc3NPYnNlcnZhYmxlfHwodGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX29uQmV0d2VlblBhc3NPYnNlcnZhYmxlPW5ldyBGKSx0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fb25CZXR3ZWVuUGFzc09ic2VydmFibGV9Z2V0IG9uQmVmb3JlRHJhd09ic2VydmFibGUoKXtyZXR1cm4gdGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX29uQmVmb3JlRHJhd09ic2VydmFibGV8fCh0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fb25CZWZvcmVEcmF3T2JzZXJ2YWJsZT1uZXcgRiksdGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX29uQmVmb3JlRHJhd09ic2VydmFibGV9c2V0IG9uQmVmb3JlRHJhdyhlKXt0aGlzLl9vbkJlZm9yZURyYXdPYnNlcnZlciYmdGhpcy5vbkJlZm9yZURyYXdPYnNlcnZhYmxlLnJlbW92ZSh0aGlzLl9vbkJlZm9yZURyYXdPYnNlcnZlciksdGhpcy5fb25CZWZvcmVEcmF3T2JzZXJ2ZXI9dGhpcy5vbkJlZm9yZURyYXdPYnNlcnZhYmxlLmFkZChlKX1nZXQgaGFzSW5zdGFuY2VzKCl7cmV0dXJuIHRoaXMuaW5zdGFuY2VzLmxlbmd0aD4wfWdldCBoYXNUaGluSW5zdGFuY2VzKCl7dmFyIGU7cmV0dXJuKChlPXRoaXMuX3RoaW5JbnN0YW5jZURhdGFTdG9yYWdlLmluc3RhbmNlc0NvdW50KSE9PW51bGwmJmUhPT12b2lkIDA/ZTowKT4wfWdldCBmb3JjZWRJbnN0YW5jZUNvdW50KCl7cmV0dXJuIHRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9mb3JjZWRJbnN0YW5jZUNvdW50fXNldCBmb3JjZWRJbnN0YW5jZUNvdW50KGUpe3RoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9mb3JjZWRJbnN0YW5jZUNvdW50PWV9Z2V0IHNvdXJjZSgpe3JldHVybiB0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fc291cmNlfWdldCBjbG9uZU1lc2hNYXAoKXtyZXR1cm4gdGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8ubWVzaE1hcH1nZXQgaXNVbkluZGV4ZWQoKXtyZXR1cm4gdGhpcy5fdW5JbmRleGVkfXNldCBpc1VuSW5kZXhlZChlKXt0aGlzLl91bkluZGV4ZWQhPT1lJiYodGhpcy5fdW5JbmRleGVkPWUsdGhpcy5fbWFya1N1Yk1lc2hlc0FzQXR0cmlidXRlc0RpcnR5KCkpfWdldCB3b3JsZE1hdHJpeEluc3RhbmNlZEJ1ZmZlcigpe3JldHVybiB0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLmluc3RhbmNlc0RhdGF9Z2V0IHByZXZpb3VzV29ybGRNYXRyaXhJbnN0YW5jZWRCdWZmZXIoKXtyZXR1cm4gdGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5pbnN0YW5jZXNQcmV2aW91c0RhdGF9Z2V0IG1hbnVhbFVwZGF0ZU9mV29ybGRNYXRyaXhJbnN0YW5jZWRCdWZmZXIoKXtyZXR1cm4gdGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5tYW51YWxVcGRhdGV9c2V0IG1hbnVhbFVwZGF0ZU9mV29ybGRNYXRyaXhJbnN0YW5jZWRCdWZmZXIoZSl7dGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5tYW51YWxVcGRhdGU9ZX1nZXQgbWFudWFsVXBkYXRlT2ZQcmV2aW91c1dvcmxkTWF0cml4SW5zdGFuY2VkQnVmZmVyKCl7cmV0dXJuIHRoaXMuX2luc3RhbmNlRGF0YVN0b3JhZ2UucHJldmlvdXNNYW51YWxVcGRhdGV9c2V0IG1hbnVhbFVwZGF0ZU9mUHJldmlvdXNXb3JsZE1hdHJpeEluc3RhbmNlZEJ1ZmZlcihlKXt0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLnByZXZpb3VzTWFudWFsVXBkYXRlPWV9Z2V0IGZvcmNlV29ybGRNYXRyaXhJbnN0YW5jZWRCdWZmZXJVcGRhdGUoKXtyZXR1cm4gdGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5mb3JjZU1hdHJpeFVwZGF0ZXN9c2V0IGZvcmNlV29ybGRNYXRyaXhJbnN0YW5jZWRCdWZmZXJVcGRhdGUoZSl7dGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5mb3JjZU1hdHJpeFVwZGF0ZXM9ZX1pbnN0YW50aWF0ZUhpZXJhcmNoeShlPW51bGwsdCxpKXtjb25zdCBzPXRoaXMuZ2V0VG90YWxWZXJ0aWNlcygpPT09MHx8dCYmdC5kb05vdEluc3RhbnRpYXRlJiYodC5kb05vdEluc3RhbnRpYXRlPT09ITB8fHQuZG9Ob3RJbnN0YW50aWF0ZSh0aGlzKSk/dGhpcy5jbG9uZSgiQ2xvbmUgb2YgIisodGhpcy5uYW1lfHx0aGlzLmlkKSxlfHx0aGlzLnBhcmVudCwhMCk6dGhpcy5jcmVhdGVJbnN0YW5jZSgiaW5zdGFuY2Ugb2YgIisodGhpcy5uYW1lfHx0aGlzLmlkKSk7cy5wYXJlbnQ9ZXx8dGhpcy5wYXJlbnQscy5wb3NpdGlvbj10aGlzLnBvc2l0aW9uLmNsb25lKCkscy5zY2FsaW5nPXRoaXMuc2NhbGluZy5jbG9uZSgpLHRoaXMucm90YXRpb25RdWF0ZXJuaW9uP3Mucm90YXRpb25RdWF0ZXJuaW9uPXRoaXMucm90YXRpb25RdWF0ZXJuaW9uLmNsb25lKCk6cy5yb3RhdGlvbj10aGlzLnJvdGF0aW9uLmNsb25lKCksaSYmaSh0aGlzLHMpO2Zvcihjb25zdCByIG9mIHRoaXMuZ2V0Q2hpbGRUcmFuc2Zvcm1Ob2RlcyghMCkpci5nZXRDbGFzc05hbWUoKT09PSJJbnN0YW5jZWRNZXNoIiYmcy5nZXRDbGFzc05hbWUoKT09PSJNZXNoIj9yLmluc3RhbnRpYXRlSGllcmFyY2h5KHMse2RvTm90SW5zdGFudGlhdGU6dCYmdC5kb05vdEluc3RhbnRpYXRlfHwhMSxuZXdTb3VyY2VkTWVzaDpzfSxpKTpyLmluc3RhbnRpYXRlSGllcmFyY2h5KHMsdCxpKTtyZXR1cm4gc31nZXRDbGFzc05hbWUoKXtyZXR1cm4iTWVzaCJ9Z2V0IF9pc01lc2goKXtyZXR1cm4hMH10b1N0cmluZyhlKXtsZXQgdD1zdXBlci50b1N0cmluZyhlKTtpZih0Kz0iLCBuIHZlcnRpY2VzOiAiK3RoaXMuZ2V0VG90YWxWZXJ0aWNlcygpLHQrPSIsIHBhcmVudDogIisodGhpcy5fd2FpdGluZ1BhcmVudElkP3RoaXMuX3dhaXRpbmdQYXJlbnRJZDp0aGlzLnBhcmVudD90aGlzLnBhcmVudC5uYW1lOiJOT05FIiksdGhpcy5hbmltYXRpb25zKWZvcihsZXQgaT0wO2k8dGhpcy5hbmltYXRpb25zLmxlbmd0aDtpKyspdCs9IiwgYW5pbWF0aW9uWzBdOiAiK3RoaXMuYW5pbWF0aW9uc1tpXS50b1N0cmluZyhlKTtpZihlKWlmKHRoaXMuX2dlb21ldHJ5KXtjb25zdCBpPXRoaXMuZ2V0SW5kaWNlcygpLHM9dGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5Qb3NpdGlvbktpbmQpO3MmJmkmJih0Kz0iLCBmbGF0IHNoYWRpbmc6ICIrKHMubGVuZ3RoLzM9PT1pLmxlbmd0aD8iWUVTIjoiTk8iKSl9ZWxzZSB0Kz0iLCBmbGF0IHNoYWRpbmc6IFVOS05PV04iO3JldHVybiB0fV91bkJpbmRFZmZlY3QoKXtzdXBlci5fdW5CaW5kRWZmZWN0KCk7Zm9yKGNvbnN0IGUgb2YgdGhpcy5pbnN0YW5jZXMpZS5fdW5CaW5kRWZmZWN0KCl9Z2V0IGhhc0xPRExldmVscygpe3JldHVybiB0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fTE9ETGV2ZWxzLmxlbmd0aD4wfWdldExPRExldmVscygpe3JldHVybiB0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fTE9ETGV2ZWxzfV9zb3J0TE9ETGV2ZWxzKCl7Y29uc3QgZT10aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fdXNlTE9EU2NyZWVuQ292ZXJhZ2U/LTE6MTt0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fTE9ETGV2ZWxzLnNvcnQoKHQsaSk9PnQuZGlzdGFuY2VPclNjcmVlbkNvdmVyYWdlPGkuZGlzdGFuY2VPclNjcmVlbkNvdmVyYWdlP2U6dC5kaXN0YW5jZU9yU2NyZWVuQ292ZXJhZ2U+aS5kaXN0YW5jZU9yU2NyZWVuQ292ZXJhZ2U/LWU6MCl9YWRkTE9ETGV2ZWwoZSx0KXtpZih0JiZ0Ll9tYXN0ZXJNZXNoKXJldHVybiBPLldhcm4oIllvdSBjYW5ub3QgdXNlIGEgbWVzaCBhcyBMT0QgbGV2ZWwgdHdpY2UiKSx0aGlzO2NvbnN0IGk9bmV3IFduKGUsdCk7cmV0dXJuIHRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9MT0RMZXZlbHMucHVzaChpKSx0JiYodC5fbWFzdGVyTWVzaD10aGlzKSx0aGlzLl9zb3J0TE9ETGV2ZWxzKCksdGhpc31nZXRMT0RMZXZlbEF0RGlzdGFuY2UoZSl7Y29uc3QgdD10aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mbztmb3IobGV0IGk9MDtpPHQuX0xPRExldmVscy5sZW5ndGg7aSsrKXtjb25zdCBzPXQuX0xPRExldmVsc1tpXTtpZihzLmRpc3RhbmNlT3JTY3JlZW5Db3ZlcmFnZT09PWUpcmV0dXJuIHMubWVzaH1yZXR1cm4gbnVsbH1yZW1vdmVMT0RMZXZlbChlKXtjb25zdCB0PXRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvO2ZvcihsZXQgaT0wO2k8dC5fTE9ETGV2ZWxzLmxlbmd0aDtpKyspdC5fTE9ETGV2ZWxzW2ldLm1lc2g9PT1lJiYodC5fTE9ETGV2ZWxzLnNwbGljZShpLDEpLGUmJihlLl9tYXN0ZXJNZXNoPW51bGwpKTtyZXR1cm4gdGhpcy5fc29ydExPRExldmVscygpLHRoaXN9Z2V0TE9EKGUsdCl7Y29uc3QgaT10aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mbztpZighaS5fTE9ETGV2ZWxzfHxpLl9MT0RMZXZlbHMubGVuZ3RoPT09MClyZXR1cm4gdGhpcztjb25zdCBzPXR8fHRoaXMuZ2V0Qm91bmRpbmdJbmZvKCkuYm91bmRpbmdTcGhlcmUscj1lLm1vZGU9PT1qLk9SVEhPR1JBUEhJQ19DQU1FUkE/ZS5taW5aOnMuY2VudGVyV29ybGQuc3VidHJhY3QoZS5nbG9iYWxQb3NpdGlvbikubGVuZ3RoKCk7bGV0IG49cixhPTE7aWYoaS5fdXNlTE9EU2NyZWVuQ292ZXJhZ2Upe2NvbnN0IG89ZS5zY3JlZW5BcmVhO2xldCBoPXMucmFkaXVzV29ybGQqZS5taW5aL3I7aD1oKmgqTWF0aC5QSSxuPWgvbyxhPS0xfWlmKGEqaS5fTE9ETGV2ZWxzW2kuX0xPRExldmVscy5sZW5ndGgtMV0uZGlzdGFuY2VPclNjcmVlbkNvdmVyYWdlPmEqbilyZXR1cm4gdGhpcy5vbkxPRExldmVsU2VsZWN0aW9uJiZ0aGlzLm9uTE9ETGV2ZWxTZWxlY3Rpb24obix0aGlzLHRoaXMpLHRoaXM7Zm9yKGxldCBvPTA7bzxpLl9MT0RMZXZlbHMubGVuZ3RoO28rKyl7Y29uc3QgaD1pLl9MT0RMZXZlbHNbb107aWYoYSpoLmRpc3RhbmNlT3JTY3JlZW5Db3ZlcmFnZTxhKm4pe2lmKGgubWVzaCl7aWYoaC5tZXNoLmRlbGF5TG9hZFN0YXRlPT09NClyZXR1cm4gaC5tZXNoLl9jaGVja0RlbGF5U3RhdGUoKSx0aGlzO2lmKGgubWVzaC5kZWxheUxvYWRTdGF0ZT09PTIpcmV0dXJuIHRoaXM7aC5tZXNoLl9wcmVBY3RpdmF0ZSgpLGgubWVzaC5fdXBkYXRlU3ViTWVzaGVzQm91bmRpbmdJbmZvKHRoaXMud29ybGRNYXRyaXhGcm9tQ2FjaGUpfXJldHVybiB0aGlzLm9uTE9ETGV2ZWxTZWxlY3Rpb24mJnRoaXMub25MT0RMZXZlbFNlbGVjdGlvbihuLHRoaXMsaC5tZXNoKSxoLm1lc2h9fXJldHVybiB0aGlzLm9uTE9ETGV2ZWxTZWxlY3Rpb24mJnRoaXMub25MT0RMZXZlbFNlbGVjdGlvbihuLHRoaXMsdGhpcyksdGhpc31nZXQgZ2VvbWV0cnkoKXtyZXR1cm4gdGhpcy5fZ2VvbWV0cnl9Z2V0VG90YWxWZXJ0aWNlcygpe3JldHVybiB0aGlzLl9nZW9tZXRyeT09PW51bGx8fHRoaXMuX2dlb21ldHJ5PT09dm9pZCAwPzA6dGhpcy5fZ2VvbWV0cnkuZ2V0VG90YWxWZXJ0aWNlcygpfWdldFZlcnRpY2VzRGF0YShlLHQsaSl7dmFyIHMscjtpZighdGhpcy5fZ2VvbWV0cnkpcmV0dXJuIG51bGw7bGV0IG49KHI9KHM9dGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlKT09PW51bGx8fHM9PT12b2lkIDA/dm9pZCAwOnMudmVydGV4QnVmZmVyc1tlXSk9PT1udWxsfHxyPT09dm9pZCAwP3ZvaWQgMDpyLmdldEZsb2F0RGF0YSh0aGlzLl9nZW9tZXRyeS5nZXRUb3RhbFZlcnRpY2VzKCksaXx8dCYmdGhpcy5fZ2VvbWV0cnkubWVzaGVzLmxlbmd0aCE9PTEpO3JldHVybiBufHwobj10aGlzLl9nZW9tZXRyeS5nZXRWZXJ0aWNlc0RhdGEoZSx0LGkpKSxufWdldFZlcnRleEJ1ZmZlcihlKXt2YXIgdCxpO3JldHVybiB0aGlzLl9nZW9tZXRyeT8oaT0odD10aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UpPT09bnVsbHx8dD09PXZvaWQgMD92b2lkIDA6dC52ZXJ0ZXhCdWZmZXJzW2VdKSE9PW51bGwmJmkhPT12b2lkIDA/aTp0aGlzLl9nZW9tZXRyeS5nZXRWZXJ0ZXhCdWZmZXIoZSk6bnVsbH1pc1ZlcnRpY2VzRGF0YVByZXNlbnQoZSl7dmFyIHQ7cmV0dXJuIHRoaXMuX2dlb21ldHJ5PygodD10aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UpPT09bnVsbHx8dD09PXZvaWQgMD92b2lkIDA6dC52ZXJ0ZXhCdWZmZXJzW2VdKSE9PXZvaWQgMHx8dGhpcy5fZ2VvbWV0cnkuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGUpOnRoaXMuX2RlbGF5SW5mbz90aGlzLl9kZWxheUluZm8uaW5kZXhPZihlKSE9PS0xOiExfWlzVmVydGV4QnVmZmVyVXBkYXRhYmxlKGUpe3ZhciB0LGk7cmV0dXJuIHRoaXMuX2dlb21ldHJ5PygoaT0odD10aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UpPT09bnVsbHx8dD09PXZvaWQgMD92b2lkIDA6dC52ZXJ0ZXhCdWZmZXJzW2VdKT09PW51bGx8fGk9PT12b2lkIDA/dm9pZCAwOmkuaXNVcGRhdGFibGUoKSl8fHRoaXMuX2dlb21ldHJ5LmlzVmVydGV4QnVmZmVyVXBkYXRhYmxlKGUpOnRoaXMuX2RlbGF5SW5mbz90aGlzLl9kZWxheUluZm8uaW5kZXhPZihlKSE9PS0xOiExfWdldFZlcnRpY2VzRGF0YUtpbmRzKCl7aWYoIXRoaXMuX2dlb21ldHJ5KXtjb25zdCB0PW5ldyBBcnJheTtyZXR1cm4gdGhpcy5fZGVsYXlJbmZvJiZ0aGlzLl9kZWxheUluZm8uZm9yRWFjaChmdW5jdGlvbihpKXt0LnB1c2goaSl9KSx0fWNvbnN0IGU9dGhpcy5fZ2VvbWV0cnkuZ2V0VmVydGljZXNEYXRhS2luZHMoKTtpZih0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UpZm9yKGNvbnN0IHQgaW4gdGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlLnZlcnRleEJ1ZmZlcnMpZS5wdXNoKHQpO3JldHVybiBlfWdldFRvdGFsSW5kaWNlcygpe3JldHVybiB0aGlzLl9nZW9tZXRyeT90aGlzLl9nZW9tZXRyeS5nZXRUb3RhbEluZGljZXMoKTowfWdldEluZGljZXMoZSx0KXtyZXR1cm4gdGhpcy5fZ2VvbWV0cnk/dGhpcy5fZ2VvbWV0cnkuZ2V0SW5kaWNlcyhlLHQpOltdfWdldCBpc0Jsb2NrZWQoKXtyZXR1cm4gdGhpcy5fbWFzdGVyTWVzaCE9PW51bGwmJnRoaXMuX21hc3Rlck1lc2ghPT12b2lkIDB9aXNSZWFkeShlPSExLHQ9ITEpe3ZhciBpLHMscixuLGEsbztpZih0aGlzLmRlbGF5TG9hZFN0YXRlPT09Mnx8IXN1cGVyLmlzUmVhZHkoZSkpcmV0dXJuITE7aWYoIXRoaXMuc3ViTWVzaGVzfHx0aGlzLnN1Yk1lc2hlcy5sZW5ndGg9PT0wfHwhZSlyZXR1cm4hMDtjb25zdCBoPXRoaXMuZ2V0RW5naW5lKCksbD10aGlzLmdldFNjZW5lKCksdT10fHxoLmdldENhcHMoKS5pbnN0YW5jZWRBcnJheXMmJih0aGlzLmluc3RhbmNlcy5sZW5ndGg+MHx8dGhpcy5oYXNUaGluSW5zdGFuY2VzKTt0aGlzLmNvbXB1dGVXb3JsZE1hdHJpeCgpO2NvbnN0IGQ9dGhpcy5tYXRlcmlhbHx8bC5kZWZhdWx0TWF0ZXJpYWw7aWYoZCl7aWYoZC5fc3RvcmVFZmZlY3RPblN1Yk1lc2hlcylmb3IoY29uc3QgXyBvZiB0aGlzLnN1Yk1lc2hlcyl7Y29uc3QgRT1fLmdldE1hdGVyaWFsKCk7aWYoRSl7aWYoRS5fc3RvcmVFZmZlY3RPblN1Yk1lc2hlcyl7aWYoIUUuaXNSZWFkeUZvclN1Yk1lc2godGhpcyxfLHUpKXJldHVybiExfWVsc2UgaWYoIUUuaXNSZWFkeSh0aGlzLHUpKXJldHVybiExfX1lbHNlIGlmKCFkLmlzUmVhZHkodGhpcyx1KSlyZXR1cm4hMX1jb25zdCBmPWguY3VycmVudFJlbmRlclBhc3NJZDtmb3IoY29uc3QgXyBvZiB0aGlzLmxpZ2h0U291cmNlcyl7Y29uc3QgRT1fLmdldFNoYWRvd0dlbmVyYXRvcnMoKTtpZighRSljb250aW51ZTtjb25zdCBtPUUudmFsdWVzKCk7Zm9yKGxldCB2PW0ubmV4dCgpO3YuZG9uZSE9PSEwO3Y9bS5uZXh0KCkpe2NvbnN0IFM9di52YWx1ZTtpZihTJiYoISghKChpPVMuZ2V0U2hhZG93TWFwKCkpPT09bnVsbHx8aT09PXZvaWQgMCkmJmkucmVuZGVyTGlzdCl8fCEoKHM9Uy5nZXRTaGFkb3dNYXAoKSk9PT1udWxsfHxzPT09dm9pZCAwKSYmcy5yZW5kZXJMaXN0JiYoKG49KHI9Uy5nZXRTaGFkb3dNYXAoKSk9PT1udWxsfHxyPT09dm9pZCAwP3ZvaWQgMDpyLnJlbmRlckxpc3QpPT09bnVsbHx8bj09PXZvaWQgMD92b2lkIDA6bi5pbmRleE9mKHRoaXMpKSE9PS0xKSl7Uy5nZXRTaGFkb3dNYXAoKSYmKGguY3VycmVudFJlbmRlclBhc3NJZD1TLmdldFNoYWRvd01hcCgpLnJlbmRlclBhc3NJZCk7Zm9yKGNvbnN0IHkgb2YgdGhpcy5zdWJNZXNoZXMpaWYoIVMuaXNSZWFkeSh5LHUsKG89KGE9eS5nZXRNYXRlcmlhbCgpKT09PW51bGx8fGE9PT12b2lkIDA/dm9pZCAwOmEubmVlZEFscGhhQmxlbmRpbmdGb3JNZXNoKHRoaXMpKSE9PW51bGwmJm8hPT12b2lkIDA/bzohMSkpcmV0dXJuIGguY3VycmVudFJlbmRlclBhc3NJZD1mLCExO2guY3VycmVudFJlbmRlclBhc3NJZD1mfX19Zm9yKGNvbnN0IF8gb2YgdGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX0xPRExldmVscylpZihfLm1lc2gmJiFfLm1lc2guaXNSZWFkeSh1KSlyZXR1cm4hMTtyZXR1cm4hMH1nZXQgYXJlTm9ybWFsc0Zyb3plbigpe3JldHVybiB0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fYXJlTm9ybWFsc0Zyb3plbn1mcmVlemVOb3JtYWxzKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9hcmVOb3JtYWxzRnJvemVuPSEwLHRoaXN9dW5mcmVlemVOb3JtYWxzKCl7cmV0dXJuIHRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9hcmVOb3JtYWxzRnJvemVuPSExLHRoaXN9c2V0IG92ZXJyaWRlbkluc3RhbmNlQ291bnQoZSl7dGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5vdmVycmlkZW5JbnN0YW5jZUNvdW50PWV9X3ByZUFjdGl2YXRlKCl7Y29uc3QgZT10aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mbyx0PXRoaXMuZ2V0U2NlbmUoKS5nZXRSZW5kZXJJZCgpO3JldHVybiBlLl9wcmVBY3RpdmF0ZUlkPT09dD90aGlzOihlLl9wcmVBY3RpdmF0ZUlkPXQsdGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS52aXNpYmxlSW5zdGFuY2VzPW51bGwsdGhpcyl9X3ByZUFjdGl2YXRlRm9ySW50ZXJtZWRpYXRlUmVuZGVyaW5nKGUpe3JldHVybiB0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLnZpc2libGVJbnN0YW5jZXMmJih0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLnZpc2libGVJbnN0YW5jZXMuaW50ZXJtZWRpYXRlRGVmYXVsdFJlbmRlcklkPWUpLHRoaXN9X3JlZ2lzdGVySW5zdGFuY2VGb3JSZW5kZXJJZChlLHQpe3JldHVybiB0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLnZpc2libGVJbnN0YW5jZXN8fCh0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLnZpc2libGVJbnN0YW5jZXM9e2RlZmF1bHRSZW5kZXJJZDp0LHNlbGZEZWZhdWx0UmVuZGVySWQ6dGhpcy5fcmVuZGVySWR9KSx0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLnZpc2libGVJbnN0YW5jZXNbdF18fCh0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLnByZXZpb3VzUmVuZGVySWQhPT12b2lkIDAmJnRoaXMuX2luc3RhbmNlRGF0YVN0b3JhZ2UuaXNGcm96ZW4mJih0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLnZpc2libGVJbnN0YW5jZXNbdGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5wcmV2aW91c1JlbmRlcklkXT1udWxsKSx0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLnByZXZpb3VzUmVuZGVySWQ9dCx0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLnZpc2libGVJbnN0YW5jZXNbdF09bmV3IEFycmF5KSx0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLnZpc2libGVJbnN0YW5jZXNbdF0ucHVzaChlKSx0aGlzfV9hZnRlckNvbXB1dGVXb3JsZE1hdHJpeCgpe3N1cGVyLl9hZnRlckNvbXB1dGVXb3JsZE1hdHJpeCgpLHRoaXMuaGFzVGhpbkluc3RhbmNlcyYmKHRoaXMuZG9Ob3RTeW5jQm91bmRpbmdJbmZvfHx0aGlzLnRoaW5JbnN0YW5jZVJlZnJlc2hCb3VuZGluZ0luZm8oITEpKX1fcG9zdEFjdGl2YXRlKCl7dGhpcy5lZGdlc1NoYXJlV2l0aEluc3RhbmNlcyYmdGhpcy5lZGdlc1JlbmRlcmVyJiZ0aGlzLmVkZ2VzUmVuZGVyZXIuaXNFbmFibGVkJiZ0aGlzLl9yZW5kZXJpbmdHcm91cCYmKHRoaXMuX3JlbmRlcmluZ0dyb3VwLl9lZGdlc1JlbmRlcmVycy5wdXNoTm9EdXBsaWNhdGUodGhpcy5lZGdlc1JlbmRlcmVyKSx0aGlzLmVkZ2VzUmVuZGVyZXIuY3VzdG9tSW5zdGFuY2VzLnB1c2godGhpcy5nZXRXb3JsZE1hdHJpeCgpKSl9cmVmcmVzaEJvdW5kaW5nSW5mbyhlPSExLHQ9ITEpe2lmKHRoaXMuaGFzQm91bmRpbmdJbmZvJiZ0aGlzLmdldEJvdW5kaW5nSW5mbygpLmlzTG9ja2VkKXJldHVybiB0aGlzO2NvbnN0IGk9dGhpcy5nZW9tZXRyeT90aGlzLmdlb21ldHJ5LmJvdW5kaW5nQmlhczpudWxsO3JldHVybiB0aGlzLl9yZWZyZXNoQm91bmRpbmdJbmZvKHRoaXMuX2dldFBvc2l0aW9uRGF0YShlLHQpLGkpLHRoaXN9X2NyZWF0ZUdsb2JhbFN1Yk1lc2goZSl7Y29uc3QgdD10aGlzLmdldFRvdGFsVmVydGljZXMoKTtpZighdHx8IXRoaXMuZ2V0SW5kaWNlcygpKXJldHVybiBudWxsO2lmKHRoaXMuc3ViTWVzaGVzJiZ0aGlzLnN1Yk1lc2hlcy5sZW5ndGg+MCl7Y29uc3QgaT10aGlzLmdldEluZGljZXMoKTtpZighaSlyZXR1cm4gbnVsbDtjb25zdCBzPWkubGVuZ3RoO2xldCByPSExO2lmKGUpcj0hMDtlbHNlIGZvcihjb25zdCBuIG9mIHRoaXMuc3ViTWVzaGVzKXtpZihuLmluZGV4U3RhcnQrbi5pbmRleENvdW50PnMpe3I9ITA7YnJlYWt9aWYobi52ZXJ0aWNlc1N0YXJ0K24udmVydGljZXNDb3VudD50KXtyPSEwO2JyZWFrfX1pZighcilyZXR1cm4gdGhpcy5zdWJNZXNoZXNbMF19cmV0dXJuIHRoaXMucmVsZWFzZVN1Yk1lc2hlcygpLG5ldyB2dCgwLDAsdCwwLHRoaXMuZ2V0VG90YWxJbmRpY2VzKCksdGhpcyl9c3ViZGl2aWRlKGUpe2lmKGU8MSlyZXR1cm47Y29uc3QgdD10aGlzLmdldFRvdGFsSW5kaWNlcygpO2xldCBpPXQvZXwwLHM9MDtmb3IoO2klMyE9PTA7KWkrKzt0aGlzLnJlbGVhc2VTdWJNZXNoZXMoKTtmb3IobGV0IHI9MDtyPGUmJiEocz49dCk7cisrKXZ0LkNyZWF0ZUZyb21JbmRpY2VzKDAscyxyPT09ZS0xP3QtczppLHRoaXMpLHMrPWk7dGhpcy5zeW5jaHJvbml6ZUluc3RhbmNlcygpfXNldFZlcnRpY2VzRGF0YShlLHQsaT0hMSxzKXtpZih0aGlzLl9nZW9tZXRyeSl0aGlzLl9nZW9tZXRyeS5zZXRWZXJ0aWNlc0RhdGEoZSx0LGkscyk7ZWxzZXtjb25zdCByPW5ldyBlZTtyLnNldCh0LGUpO2NvbnN0IG49dGhpcy5nZXRTY2VuZSgpO25ldyBhdChhdC5SYW5kb21JZCgpLG4scixpLHRoaXMpfXJldHVybiB0aGlzfXJlbW92ZVZlcnRpY2VzRGF0YShlKXt0aGlzLl9nZW9tZXRyeSYmdGhpcy5fZ2VvbWV0cnkucmVtb3ZlVmVydGljZXNEYXRhKGUpfW1hcmtWZXJ0aWNlc0RhdGFBc1VwZGF0YWJsZShlLHQ9ITApe2NvbnN0IGk9dGhpcy5nZXRWZXJ0ZXhCdWZmZXIoZSk7IWl8fGkuaXNVcGRhdGFibGUoKT09PXR8fHRoaXMuc2V0VmVydGljZXNEYXRhKGUsdGhpcy5nZXRWZXJ0aWNlc0RhdGEoZSksdCl9c2V0VmVydGljZXNCdWZmZXIoZSx0PSEwKXtyZXR1cm4gdGhpcy5fZ2VvbWV0cnl8fCh0aGlzLl9nZW9tZXRyeT1hdC5DcmVhdGVHZW9tZXRyeUZvck1lc2godGhpcykpLHRoaXMuX2dlb21ldHJ5LnNldFZlcnRpY2VzQnVmZmVyKGUsbnVsbCx0KSx0aGlzfXVwZGF0ZVZlcnRpY2VzRGF0YShlLHQsaSxzKXtyZXR1cm4gdGhpcy5fZ2VvbWV0cnk/KHM/KHRoaXMubWFrZUdlb21ldHJ5VW5pcXVlKCksdGhpcy51cGRhdGVWZXJ0aWNlc0RhdGEoZSx0LGksITEpKTp0aGlzLl9nZW9tZXRyeS51cGRhdGVWZXJ0aWNlc0RhdGEoZSx0LGkpLHRoaXMpOnRoaXN9dXBkYXRlTWVzaFBvc2l0aW9ucyhlLHQ9ITApe2NvbnN0IGk9dGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5Qb3NpdGlvbktpbmQpO2lmKCFpKXJldHVybiB0aGlzO2lmKGUoaSksdGhpcy51cGRhdGVWZXJ0aWNlc0RhdGEoZy5Qb3NpdGlvbktpbmQsaSwhMSwhMSksdCl7Y29uc3Qgcz10aGlzLmdldEluZGljZXMoKSxyPXRoaXMuZ2V0VmVydGljZXNEYXRhKGcuTm9ybWFsS2luZCk7aWYoIXIpcmV0dXJuIHRoaXM7ZWUuQ29tcHV0ZU5vcm1hbHMoaSxzLHIpLHRoaXMudXBkYXRlVmVydGljZXNEYXRhKGcuTm9ybWFsS2luZCxyLCExLCExKX1yZXR1cm4gdGhpc31tYWtlR2VvbWV0cnlVbmlxdWUoKXtpZighdGhpcy5fZ2VvbWV0cnkpcmV0dXJuIHRoaXM7aWYodGhpcy5fZ2VvbWV0cnkubWVzaGVzLmxlbmd0aD09PTEpcmV0dXJuIHRoaXM7Y29uc3QgZT10aGlzLl9nZW9tZXRyeSx0PXRoaXMuX2dlb21ldHJ5LmNvcHkoYXQuUmFuZG9tSWQoKSk7cmV0dXJuIGUucmVsZWFzZUZvck1lc2godGhpcywhMCksdC5hcHBseVRvTWVzaCh0aGlzKSx0aGlzfXNldEluZGljZXMoZSx0PW51bGwsaT0hMSl7aWYodGhpcy5fZ2VvbWV0cnkpdGhpcy5fZ2VvbWV0cnkuc2V0SW5kaWNlcyhlLHQsaSk7ZWxzZXtjb25zdCBzPW5ldyBlZTtzLmluZGljZXM9ZTtjb25zdCByPXRoaXMuZ2V0U2NlbmUoKTtuZXcgYXQoYXQuUmFuZG9tSWQoKSxyLHMsaSx0aGlzKX1yZXR1cm4gdGhpc311cGRhdGVJbmRpY2VzKGUsdCxpPSExKXtyZXR1cm4gdGhpcy5fZ2VvbWV0cnk/KHRoaXMuX2dlb21ldHJ5LnVwZGF0ZUluZGljZXMoZSx0LGkpLHRoaXMpOnRoaXN9dG9MZWZ0SGFuZGVkKCl7cmV0dXJuIHRoaXMuX2dlb21ldHJ5Pyh0aGlzLl9nZW9tZXRyeS50b0xlZnRIYW5kZWQoKSx0aGlzKTp0aGlzfV9iaW5kKGUsdCxpKXtpZighdGhpcy5fZ2VvbWV0cnkpcmV0dXJuIHRoaXM7Y29uc3Qgcz10aGlzLmdldFNjZW5lKCkuZ2V0RW5naW5lKCk7dGhpcy5tb3JwaFRhcmdldE1hbmFnZXImJnRoaXMubW9ycGhUYXJnZXRNYW5hZ2VyLmlzVXNpbmdUZXh0dXJlRm9yVGFyZ2V0cyYmdGhpcy5tb3JwaFRhcmdldE1hbmFnZXIuX2JpbmQodCk7bGV0IHI7aWYodGhpcy5fdW5JbmRleGVkKXI9bnVsbDtlbHNlIHN3aXRjaChpKXtjYXNlIFAuUG9pbnRGaWxsTW9kZTpyPW51bGw7YnJlYWs7Y2FzZSBQLldpcmVGcmFtZUZpbGxNb2RlOnI9ZS5fZ2V0TGluZXNJbmRleEJ1ZmZlcih0aGlzLmdldEluZGljZXMoKSxzKTticmVhaztkZWZhdWx0OmNhc2UgUC5UcmlhbmdsZUZpbGxNb2RlOnI9dGhpcy5fZ2VvbWV0cnkuZ2V0SW5kZXhCdWZmZXIoKTticmVha31yZXR1cm4hdGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlfHx0aGlzLmhhc1RoaW5JbnN0YW5jZXM/dGhpcy5fZ2VvbWV0cnkuX2JpbmQodCxyKTp0aGlzLl9nZW9tZXRyeS5fYmluZCh0LHIsdGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlLnZlcnRleEJ1ZmZlcnMsdGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlLnZlcnRleEFycmF5T2JqZWN0cyksdGhpc31fZHJhdyhlLHQsaSl7aWYoIXRoaXMuX2dlb21ldHJ5fHwhdGhpcy5fZ2VvbWV0cnkuZ2V0VmVydGV4QnVmZmVycygpfHwhdGhpcy5fdW5JbmRleGVkJiYhdGhpcy5fZ2VvbWV0cnkuZ2V0SW5kZXhCdWZmZXIoKSlyZXR1cm4gdGhpczt0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fb25CZWZvcmVEcmF3T2JzZXJ2YWJsZSYmdGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX29uQmVmb3JlRHJhd09ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpO2NvbnN0IHI9dGhpcy5nZXRTY2VuZSgpLmdldEVuZ2luZSgpO3JldHVybiB0aGlzLl91bkluZGV4ZWR8fHQ9PVAuUG9pbnRGaWxsTW9kZT9yLmRyYXdBcnJheXNUeXBlKHQsZS52ZXJ0aWNlc1N0YXJ0LGUudmVydGljZXNDb3VudCx0aGlzLmZvcmNlZEluc3RhbmNlQ291bnR8fGkpOnQ9PVAuV2lyZUZyYW1lRmlsbE1vZGU/ci5kcmF3RWxlbWVudHNUeXBlKHQsMCxlLl9saW5lc0luZGV4Q291bnQsdGhpcy5mb3JjZWRJbnN0YW5jZUNvdW50fHxpKTpyLmRyYXdFbGVtZW50c1R5cGUodCxlLmluZGV4U3RhcnQsZS5pbmRleENvdW50LHRoaXMuZm9yY2VkSW5zdGFuY2VDb3VudHx8aSksdGhpc31yZWdpc3RlckJlZm9yZVJlbmRlcihlKXtyZXR1cm4gdGhpcy5vbkJlZm9yZVJlbmRlck9ic2VydmFibGUuYWRkKGUpLHRoaXN9dW5yZWdpc3RlckJlZm9yZVJlbmRlcihlKXtyZXR1cm4gdGhpcy5vbkJlZm9yZVJlbmRlck9ic2VydmFibGUucmVtb3ZlQ2FsbGJhY2soZSksdGhpc31yZWdpc3RlckFmdGVyUmVuZGVyKGUpe3JldHVybiB0aGlzLm9uQWZ0ZXJSZW5kZXJPYnNlcnZhYmxlLmFkZChlKSx0aGlzfXVucmVnaXN0ZXJBZnRlclJlbmRlcihlKXtyZXR1cm4gdGhpcy5vbkFmdGVyUmVuZGVyT2JzZXJ2YWJsZS5yZW1vdmVDYWxsYmFjayhlKSx0aGlzfV9nZXRJbnN0YW5jZXNSZW5kZXJMaXN0KGUsdD0hMSl7aWYodGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5pc0Zyb3plbil7aWYodClyZXR1cm4gdGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5iYXRjaENhY2hlUmVwbGFjZW1lbnRNb2RlSW5Gcm96ZW5Nb2RlLmhhcmR3YXJlSW5zdGFuY2VkUmVuZGVyaW5nW2VdPSExLHRoaXMuX2luc3RhbmNlRGF0YVN0b3JhZ2UuYmF0Y2hDYWNoZVJlcGxhY2VtZW50TW9kZUluRnJvemVuTW9kZS5yZW5kZXJTZWxmW2VdPSEwLHRoaXMuX2luc3RhbmNlRGF0YVN0b3JhZ2UuYmF0Y2hDYWNoZVJlcGxhY2VtZW50TW9kZUluRnJvemVuTW9kZTtpZih0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLnByZXZpb3VzQmF0Y2gpcmV0dXJuIHRoaXMuX2luc3RhbmNlRGF0YVN0b3JhZ2UucHJldmlvdXNCYXRjaH1jb25zdCBpPXRoaXMuZ2V0U2NlbmUoKSxzPWkuX2lzSW5JbnRlcm1lZGlhdGVSZW5kZXJpbmcoKSxyPXM/dGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fb25seUZvckluc3RhbmNlc0ludGVybWVkaWF0ZTp0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9vbmx5Rm9ySW5zdGFuY2VzLG49dGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5iYXRjaENhY2hlO2lmKG4ubXVzdFJldHVybj0hMSxuLnJlbmRlclNlbGZbZV09dHx8IXImJnRoaXMuaXNFbmFibGVkKCkmJnRoaXMuaXNWaXNpYmxlLG4udmlzaWJsZUluc3RhbmNlc1tlXT1udWxsLHRoaXMuX2luc3RhbmNlRGF0YVN0b3JhZ2UudmlzaWJsZUluc3RhbmNlcyYmIXQpe2NvbnN0IGE9dGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS52aXNpYmxlSW5zdGFuY2VzLG89aS5nZXRSZW5kZXJJZCgpLGg9cz9hLmludGVybWVkaWF0ZURlZmF1bHRSZW5kZXJJZDphLmRlZmF1bHRSZW5kZXJJZDtuLnZpc2libGVJbnN0YW5jZXNbZV09YVtvXSwhbi52aXNpYmxlSW5zdGFuY2VzW2VdJiZoJiYobi52aXNpYmxlSW5zdGFuY2VzW2VdPWFbaF0pfXJldHVybiBuLmhhcmR3YXJlSW5zdGFuY2VkUmVuZGVyaW5nW2VdPSF0JiZ0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLmhhcmR3YXJlSW5zdGFuY2VkUmVuZGVyaW5nJiZuLnZpc2libGVJbnN0YW5jZXNbZV0hPT1udWxsJiZuLnZpc2libGVJbnN0YW5jZXNbZV0hPT12b2lkIDAsdGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5wcmV2aW91c0JhdGNoPW4sbn1fcmVuZGVyV2l0aEluc3RhbmNlcyhlLHQsaSxzLHIpe3ZhciBuO2NvbnN0IGE9aS52aXNpYmxlSW5zdGFuY2VzW2UuX2lkXSxvPWE/YS5sZW5ndGg6MCxoPXRoaXMuX2luc3RhbmNlRGF0YVN0b3JhZ2UsbD1oLmluc3RhbmNlc0J1ZmZlclNpemU7bGV0IHU9aC5pbnN0YW5jZXNCdWZmZXIsZD1oLmluc3RhbmNlc1ByZXZpb3VzQnVmZmVyO2NvbnN0IF89KG8rMSkqMTYqNDtmb3IoO2guaW5zdGFuY2VzQnVmZmVyU2l6ZTxfOyloLmluc3RhbmNlc0J1ZmZlclNpemUqPTI7KCFoLmluc3RhbmNlc0RhdGF8fGwhPWguaW5zdGFuY2VzQnVmZmVyU2l6ZSkmJihoLmluc3RhbmNlc0RhdGE9bmV3IEZsb2F0MzJBcnJheShoLmluc3RhbmNlc0J1ZmZlclNpemUvNCkpLCh0aGlzLl9zY2VuZS5uZWVkc1ByZXZpb3VzV29ybGRNYXRyaWNlcyYmIWguaW5zdGFuY2VzUHJldmlvdXNEYXRhfHxsIT1oLmluc3RhbmNlc0J1ZmZlclNpemUpJiYoaC5pbnN0YW5jZXNQcmV2aW91c0RhdGE9bmV3IEZsb2F0MzJBcnJheShoLmluc3RhbmNlc0J1ZmZlclNpemUvNCkpO2xldCBFPTAsbT0wO2NvbnN0IHY9aS5yZW5kZXJTZWxmW2UuX2lkXSxTPSF1fHxsIT09aC5pbnN0YW5jZXNCdWZmZXJTaXplfHx0aGlzLl9zY2VuZS5uZWVkc1ByZXZpb3VzV29ybGRNYXRyaWNlcyYmIWguaW5zdGFuY2VzUHJldmlvdXNCdWZmZXI7aWYoIXRoaXMuX2luc3RhbmNlRGF0YVN0b3JhZ2UubWFudWFsVXBkYXRlJiYoIWguaXNGcm96ZW58fFMpKXtjb25zdCB5PXRoaXMuZ2V0V29ybGRNYXRyaXgoKTtpZih2JiYodGhpcy5fc2NlbmUubmVlZHNQcmV2aW91c1dvcmxkTWF0cmljZXMmJihoLm1hc3Rlck1lc2hQcmV2aW91c1dvcmxkTWF0cml4PyhoLm1hc3Rlck1lc2hQcmV2aW91c1dvcmxkTWF0cml4LmNvcHlUb0FycmF5KGguaW5zdGFuY2VzUHJldmlvdXNEYXRhLEUpLGgubWFzdGVyTWVzaFByZXZpb3VzV29ybGRNYXRyaXguY29weUZyb20oeSkpOihoLm1hc3Rlck1lc2hQcmV2aW91c1dvcmxkTWF0cml4PXkuY2xvbmUoKSxoLm1hc3Rlck1lc2hQcmV2aW91c1dvcmxkTWF0cml4LmNvcHlUb0FycmF5KGguaW5zdGFuY2VzUHJldmlvdXNEYXRhLEUpKSkseS5jb3B5VG9BcnJheShoLmluc3RhbmNlc0RhdGEsRSksRSs9MTYsbSsrKSxhKXtpZihXLklOU1RBTkNFRE1FU0hfU09SVF9UUkFOU1BBUkVOVCYmdGhpcy5fc2NlbmUuYWN0aXZlQ2FtZXJhJiYoISgobj1lLmdldE1hdGVyaWFsKCkpPT09bnVsbHx8bj09PXZvaWQgMCkmJm4ubmVlZEFscGhhQmxlbmRpbmdGb3JNZXNoKGUuZ2V0UmVuZGVyaW5nTWVzaCgpKSkpe2NvbnN0IEE9dGhpcy5fc2NlbmUuYWN0aXZlQ2FtZXJhLmdsb2JhbFBvc2l0aW9uO2ZvcihsZXQgQz0wO0M8YS5sZW5ndGg7QysrKXtjb25zdCBiPWFbQ107Yi5fZGlzdGFuY2VUb0NhbWVyYT1wLkRpc3RhbmNlKGIuZ2V0Qm91bmRpbmdJbmZvKCkuYm91bmRpbmdTcGhlcmUuY2VudGVyV29ybGQsQSl9YS5zb3J0KChDLGIpPT5DLl9kaXN0YW5jZVRvQ2FtZXJhPmIuX2Rpc3RhbmNlVG9DYW1lcmE/LTE6Qy5fZGlzdGFuY2VUb0NhbWVyYTxiLl9kaXN0YW5jZVRvQ2FtZXJhPzE6MCl9Zm9yKGxldCBBPTA7QTxhLmxlbmd0aDtBKyspe2NvbnN0IEM9YVtBXSxiPUMuZ2V0V29ybGRNYXRyaXgoKTtiLmNvcHlUb0FycmF5KGguaW5zdGFuY2VzRGF0YSxFKSx0aGlzLl9zY2VuZS5uZWVkc1ByZXZpb3VzV29ybGRNYXRyaWNlcyYmKEMuX3ByZXZpb3VzV29ybGRNYXRyaXg/KEMuX3ByZXZpb3VzV29ybGRNYXRyaXguY29weVRvQXJyYXkoaC5pbnN0YW5jZXNQcmV2aW91c0RhdGEsRSksQy5fcHJldmlvdXNXb3JsZE1hdHJpeC5jb3B5RnJvbShiKSk6KEMuX3ByZXZpb3VzV29ybGRNYXRyaXg9Yi5jbG9uZSgpLEMuX3ByZXZpb3VzV29ybGRNYXRyaXguY29weVRvQXJyYXkoaC5pbnN0YW5jZXNQcmV2aW91c0RhdGEsRSkpKSxFKz0xNixtKyt9fX1lbHNlIG09KHY/MTowKStvO3JldHVybiBTPyh1JiZ1LmRpc3Bvc2UoKSxkJiZkLmRpc3Bvc2UoKSx1PW5ldyAkaShyLGguaW5zdGFuY2VzRGF0YSwhMCwxNiwhMSwhMCksaC5pbnN0YW5jZXNCdWZmZXI9dSx0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2V8fCh0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2U9e2RhdGE6e30sdmVydGV4QnVmZmVyczp7fSxzdHJpZGVzOnt9LHNpemVzOnt9LHZlcnRleEFycmF5T2JqZWN0czp0aGlzLmdldEVuZ2luZSgpLmdldENhcHMoKS52ZXJ0ZXhBcnJheU9iamVjdD97fTp2b2lkIDB9KSx0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UudmVydGV4QnVmZmVycy53b3JsZDA9dS5jcmVhdGVWZXJ0ZXhCdWZmZXIoIndvcmxkMCIsMCw0KSx0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UudmVydGV4QnVmZmVycy53b3JsZDE9dS5jcmVhdGVWZXJ0ZXhCdWZmZXIoIndvcmxkMSIsNCw0KSx0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UudmVydGV4QnVmZmVycy53b3JsZDI9dS5jcmVhdGVWZXJ0ZXhCdWZmZXIoIndvcmxkMiIsOCw0KSx0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UudmVydGV4QnVmZmVycy53b3JsZDM9dS5jcmVhdGVWZXJ0ZXhCdWZmZXIoIndvcmxkMyIsMTIsNCksdGhpcy5fc2NlbmUubmVlZHNQcmV2aW91c1dvcmxkTWF0cmljZXMmJihkPW5ldyAkaShyLGguaW5zdGFuY2VzUHJldmlvdXNEYXRhLCEwLDE2LCExLCEwKSxoLmluc3RhbmNlc1ByZXZpb3VzQnVmZmVyPWQsdGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlLnZlcnRleEJ1ZmZlcnMucHJldmlvdXNXb3JsZDA9ZC5jcmVhdGVWZXJ0ZXhCdWZmZXIoInByZXZpb3VzV29ybGQwIiwwLDQpLHRoaXMuX3VzZXJJbnN0YW5jZWRCdWZmZXJzU3RvcmFnZS52ZXJ0ZXhCdWZmZXJzLnByZXZpb3VzV29ybGQxPWQuY3JlYXRlVmVydGV4QnVmZmVyKCJwcmV2aW91c1dvcmxkMSIsNCw0KSx0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UudmVydGV4QnVmZmVycy5wcmV2aW91c1dvcmxkMj1kLmNyZWF0ZVZlcnRleEJ1ZmZlcigicHJldmlvdXNXb3JsZDIiLDgsNCksdGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlLnZlcnRleEJ1ZmZlcnMucHJldmlvdXNXb3JsZDM9ZC5jcmVhdGVWZXJ0ZXhCdWZmZXIoInByZXZpb3VzV29ybGQzIiwxMiw0KSksdGhpcy5faW52YWxpZGF0ZUluc3RhbmNlVmVydGV4QXJyYXlPYmplY3QoKSk6KCF0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLmlzRnJvemVufHx0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLmZvcmNlTWF0cml4VXBkYXRlcykmJih1LnVwZGF0ZURpcmVjdGx5KGguaW5zdGFuY2VzRGF0YSwwLG0pLHRoaXMuX3NjZW5lLm5lZWRzUHJldmlvdXNXb3JsZE1hdHJpY2VzJiYoIXRoaXMuX2luc3RhbmNlRGF0YVN0b3JhZ2UubWFudWFsVXBkYXRlfHx0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLnByZXZpb3VzTWFudWFsVXBkYXRlKSYmZC51cGRhdGVEaXJlY3RseShoLmluc3RhbmNlc1ByZXZpb3VzRGF0YSwwLG0pKSx0aGlzLl9wcm9jZXNzSW5zdGFuY2VkQnVmZmVycyhhLHYpLHRoaXMuZ2V0U2NlbmUoKS5fYWN0aXZlSW5kaWNlcy5hZGRDb3VudChlLmluZGV4Q291bnQqbSwhMSksci5fY3VycmVudERyYXdDb250ZXh0JiYoci5fY3VycmVudERyYXdDb250ZXh0LnVzZUluc3RhbmNpbmc9ITApLHRoaXMuX2JpbmQoZSxzLHQpLHRoaXMuX2RyYXcoZSx0LG0pLHRoaXMuX3NjZW5lLm5lZWRzUHJldmlvdXNXb3JsZE1hdHJpY2VzJiYhUyYmdGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5tYW51YWxVcGRhdGUmJighdGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5pc0Zyb3plbnx8dGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5mb3JjZU1hdHJpeFVwZGF0ZXMpJiYhdGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5wcmV2aW91c01hbnVhbFVwZGF0ZSYmZC51cGRhdGVEaXJlY3RseShoLmluc3RhbmNlc0RhdGEsMCxtKSxyLnVuYmluZEluc3RhbmNlQXR0cmlidXRlcygpLHRoaXN9X3JlbmRlcldpdGhUaGluSW5zdGFuY2VzKGUsdCxpLHMpe3ZhciByLG47Y29uc3QgYT0obj0ocj10aGlzLl90aGluSW5zdGFuY2VEYXRhU3RvcmFnZSk9PT1udWxsfHxyPT09dm9pZCAwP3ZvaWQgMDpyLmluc3RhbmNlc0NvdW50KSE9PW51bGwmJm4hPT12b2lkIDA/bjowO3RoaXMuZ2V0U2NlbmUoKS5fYWN0aXZlSW5kaWNlcy5hZGRDb3VudChlLmluZGV4Q291bnQqYSwhMSkscy5fY3VycmVudERyYXdDb250ZXh0JiYocy5fY3VycmVudERyYXdDb250ZXh0LnVzZUluc3RhbmNpbmc9ITApLHRoaXMuX2JpbmQoZSxpLHQpLHRoaXMuX2RyYXcoZSx0LGEpLHRoaXMuX3NjZW5lLm5lZWRzUHJldmlvdXNXb3JsZE1hdHJpY2VzJiYhdGhpcy5fdGhpbkluc3RhbmNlRGF0YVN0b3JhZ2UucHJldmlvdXNNYXRyaXhEYXRhJiZ0aGlzLl90aGluSW5zdGFuY2VEYXRhU3RvcmFnZS5tYXRyaXhEYXRhJiYodGhpcy5fdGhpbkluc3RhbmNlRGF0YVN0b3JhZ2UucHJldmlvdXNNYXRyaXhCdWZmZXI/dGhpcy5fdGhpbkluc3RhbmNlRGF0YVN0b3JhZ2UucHJldmlvdXNNYXRyaXhCdWZmZXIudXBkYXRlRGlyZWN0bHkodGhpcy5fdGhpbkluc3RhbmNlRGF0YVN0b3JhZ2UubWF0cml4RGF0YSwwLGEpOnRoaXMuX3RoaW5JbnN0YW5jZURhdGFTdG9yYWdlLnByZXZpb3VzTWF0cml4QnVmZmVyPXRoaXMuX3RoaW5JbnN0YW5jZUNyZWF0ZU1hdHJpeEJ1ZmZlcigicHJldmlvdXNXb3JsZCIsdGhpcy5fdGhpbkluc3RhbmNlRGF0YVN0b3JhZ2UubWF0cml4RGF0YSwhMSkpLHMudW5iaW5kSW5zdGFuY2VBdHRyaWJ1dGVzKCl9X3Byb2Nlc3NJbnN0YW5jZWRCdWZmZXJzKGUsdCl7fV9wcm9jZXNzUmVuZGVyaW5nKGUsdCxpLHMscixuLGEsbyl7Y29uc3QgaD10aGlzLmdldFNjZW5lKCksbD1oLmdldEVuZ2luZSgpO2lmKG4mJnQuZ2V0UmVuZGVyaW5nTWVzaCgpLmhhc1RoaW5JbnN0YW5jZXMpcmV0dXJuIHRoaXMuX3JlbmRlcldpdGhUaGluSW5zdGFuY2VzKHQscyxpLGwpLHRoaXM7aWYobil0aGlzLl9yZW5kZXJXaXRoSW5zdGFuY2VzKHQscyxyLGksbCk7ZWxzZXtsLl9jdXJyZW50RHJhd0NvbnRleHQmJihsLl9jdXJyZW50RHJhd0NvbnRleHQudXNlSW5zdGFuY2luZz0hMSk7bGV0IHU9MDtyLnJlbmRlclNlbGZbdC5faWRdJiYoYSYmYSghMSxlLmdldFdvcmxkTWF0cml4KCksbyksdSsrLHRoaXMuX2RyYXcodCxzLHRoaXMuX2luc3RhbmNlRGF0YVN0b3JhZ2Uub3ZlcnJpZGVuSW5zdGFuY2VDb3VudCkpO2NvbnN0IGQ9ci52aXNpYmxlSW5zdGFuY2VzW3QuX2lkXTtpZihkKXtjb25zdCBmPWQubGVuZ3RoO3UrPWY7Zm9yKGxldCBfPTA7XzxmO18rKyl7Y29uc3QgbT1kW19dLmdldFdvcmxkTWF0cml4KCk7YSYmYSghMCxtLG8pLHRoaXMuX2RyYXcodCxzKX19aC5fYWN0aXZlSW5kaWNlcy5hZGRDb3VudCh0LmluZGV4Q291bnQqdSwhMSl9cmV0dXJuIHRoaXN9X3JlYnVpbGQoZT0hMSl7aWYodGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5pbnN0YW5jZXNCdWZmZXImJihlJiZ0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLmluc3RhbmNlc0J1ZmZlci5kaXNwb3NlKCksdGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5pbnN0YW5jZXNCdWZmZXI9bnVsbCksdGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlKXtmb3IoY29uc3QgdCBpbiB0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UudmVydGV4QnVmZmVycyl7Y29uc3QgaT10aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UudmVydGV4QnVmZmVyc1t0XTtpJiYoZSYmaS5kaXNwb3NlKCksdGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlLnZlcnRleEJ1ZmZlcnNbdF09bnVsbCl9dGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlLnZlcnRleEFycmF5T2JqZWN0cyYmKHRoaXMuX3VzZXJJbnN0YW5jZWRCdWZmZXJzU3RvcmFnZS52ZXJ0ZXhBcnJheU9iamVjdHM9e30pfXRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9lZmZlY3RpdmVNYXRlcmlhbD1udWxsLHN1cGVyLl9yZWJ1aWxkKGUpfV9mcmVlemUoKXtpZih0aGlzLnN1Yk1lc2hlcyl7Zm9yKGxldCBlPTA7ZTx0aGlzLnN1Yk1lc2hlcy5sZW5ndGg7ZSsrKXRoaXMuX2dldEluc3RhbmNlc1JlbmRlckxpc3QoZSk7dGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX2VmZmVjdGl2ZU1hdGVyaWFsPW51bGwsdGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5pc0Zyb3plbj0hMH19X3VuRnJlZXplKCl7dGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZS5pc0Zyb3plbj0hMSx0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLnByZXZpb3VzQmF0Y2g9bnVsbH1yZW5kZXIoZSx0LGkpe3ZhciBzLHIsbjtjb25zdCBhPXRoaXMuZ2V0U2NlbmUoKTtpZih0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9pc0FjdGl2ZUludGVybWVkaWF0ZT90aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9pc0FjdGl2ZUludGVybWVkaWF0ZT0hMTp0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9pc0FjdGl2ZT0hMSx0aGlzLl9jaGVja09jY2x1c2lvblF1ZXJ5KCkmJiF0aGlzLl9vY2NsdXNpb25EYXRhU3RvcmFnZS5mb3JjZVJlbmRlcmluZ1doZW5PY2NsdWRlZClyZXR1cm4gdGhpcztjb25zdCBvPXRoaXMuX2dldEluc3RhbmNlc1JlbmRlckxpc3QoZS5faWQsISFpKTtpZihvLm11c3RSZXR1cm4pcmV0dXJuIHRoaXM7aWYoIXRoaXMuX2dlb21ldHJ5fHwhdGhpcy5fZ2VvbWV0cnkuZ2V0VmVydGV4QnVmZmVycygpfHwhdGhpcy5fdW5JbmRleGVkJiYhdGhpcy5fZ2VvbWV0cnkuZ2V0SW5kZXhCdWZmZXIoKSlyZXR1cm4gdGhpcztjb25zdCBoPWEuZ2V0RW5naW5lKCk7bGV0IGw9MCx1PW51bGw7dGhpcy5pZ25vcmVDYW1lcmFNYXhaJiZhLmFjdGl2ZUNhbWVyYSYmIWEuX2lzSW5JbnRlcm1lZGlhdGVSZW5kZXJpbmcoKSYmKGw9YS5hY3RpdmVDYW1lcmEubWF4Wix1PWEuYWN0aXZlQ2FtZXJhLGEuYWN0aXZlQ2FtZXJhLm1heFo9MCxhLnVwZGF0ZVRyYW5zZm9ybU1hdHJpeCghMCkpLHRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9vbkJlZm9yZVJlbmRlck9ic2VydmFibGUmJnRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9vbkJlZm9yZVJlbmRlck9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpO2NvbnN0IGQ9ZS5nZXRSZW5kZXJpbmdNZXNoKCksZj1vLmhhcmR3YXJlSW5zdGFuY2VkUmVuZGVyaW5nW2UuX2lkXXx8ZC5oYXNUaGluSW5zdGFuY2VzfHwhIXRoaXMuX3VzZXJJbnN0YW5jZWRCdWZmZXJzU3RvcmFnZSYmIWUuZ2V0TWVzaCgpLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9hY3RBc1JlZ3VsYXJNZXNoLF89dGhpcy5faW5zdGFuY2VEYXRhU3RvcmFnZSxFPWUuZ2V0TWF0ZXJpYWwoKTtpZighRSlyZXR1cm4gdSYmKHUubWF4Wj1sLGEudXBkYXRlVHJhbnNmb3JtTWF0cml4KCEwKSksdGhpcztpZighXy5pc0Zyb3plbnx8IXRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9lZmZlY3RpdmVNYXRlcmlhbHx8dGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX2VmZmVjdGl2ZU1hdGVyaWFsIT09RSl7aWYoRS5fc3RvcmVFZmZlY3RPblN1Yk1lc2hlcyl7aWYoIUUuaXNSZWFkeUZvclN1Yk1lc2godGhpcyxlLGYpKXJldHVybiB1JiYodS5tYXhaPWwsYS51cGRhdGVUcmFuc2Zvcm1NYXRyaXgoITApKSx0aGlzfWVsc2UgaWYoIUUuaXNSZWFkeSh0aGlzLGYpKXJldHVybiB1JiYodS5tYXhaPWwsYS51cGRhdGVUcmFuc2Zvcm1NYXRyaXgoITApKSx0aGlzO3RoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9lZmZlY3RpdmVNYXRlcmlhbD1FfWVsc2UgaWYoRS5fc3RvcmVFZmZlY3RPblN1Yk1lc2hlcyYmISghKChzPWUuZWZmZWN0KT09PW51bGx8fHM9PT12b2lkIDApJiZzLl93YXNQcmV2aW91c2x5UmVhZHkpfHwhRS5fc3RvcmVFZmZlY3RPblN1Yk1lc2hlcyYmISghKChyPUUuZ2V0RWZmZWN0KCkpPT09bnVsbHx8cj09PXZvaWQgMCkmJnIuX3dhc1ByZXZpb3VzbHlSZWFkeSkpcmV0dXJuIHUmJih1Lm1heFo9bCxhLnVwZGF0ZVRyYW5zZm9ybU1hdHJpeCghMCkpLHRoaXM7dCYmaC5zZXRBbHBoYU1vZGUodGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX2VmZmVjdGl2ZU1hdGVyaWFsLmFscGhhTW9kZSk7bGV0IG07dGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX2VmZmVjdGl2ZU1hdGVyaWFsLl9zdG9yZUVmZmVjdE9uU3ViTWVzaGVzP209ZS5fZHJhd1dyYXBwZXI6bT10aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fZWZmZWN0aXZlTWF0ZXJpYWwuX2dldERyYXdXcmFwcGVyKCk7Y29uc3Qgdj0obj1tPT1udWxsP3ZvaWQgMDptLmVmZmVjdCkhPT1udWxsJiZuIT09dm9pZCAwP246bnVsbDtmb3IoY29uc3QgTCBvZiBhLl9iZWZvcmVSZW5kZXJpbmdNZXNoU3RhZ2UpTC5hY3Rpb24odGhpcyxlLG8sdik7aWYoIW18fCF2KXJldHVybiB1JiYodS5tYXhaPWwsYS51cGRhdGVUcmFuc2Zvcm1NYXRyaXgoITApKSx0aGlzO2NvbnN0IFM9aXx8dGhpcztsZXQgeTtpZighXy5pc0Zyb3plbiYmKHRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9lZmZlY3RpdmVNYXRlcmlhbC5iYWNrRmFjZUN1bGxpbmd8fHRoaXMub3ZlcnJpZGVNYXRlcmlhbFNpZGVPcmllbnRhdGlvbiE9PW51bGwpKXtjb25zdCBMPVMuX2dldFdvcmxkTWF0cml4RGV0ZXJtaW5hbnQoKTt5PXRoaXMub3ZlcnJpZGVNYXRlcmlhbFNpZGVPcmllbnRhdGlvbix5PT1udWxsJiYoeT10aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fZWZmZWN0aXZlTWF0ZXJpYWwuc2lkZU9yaWVudGF0aW9uKSxMPDAmJih5PXk9PT1QLkNsb2NrV2lzZVNpZGVPcmllbnRhdGlvbj9QLkNvdW50ZXJDbG9ja1dpc2VTaWRlT3JpZW50YXRpb246UC5DbG9ja1dpc2VTaWRlT3JpZW50YXRpb24pLF8uc2lkZU9yaWVudGF0aW9uPXl9ZWxzZSB5PV8uc2lkZU9yaWVudGF0aW9uO2NvbnN0IEE9dGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX2VmZmVjdGl2ZU1hdGVyaWFsLl9wcmVCaW5kKG0seSk7dGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX2VmZmVjdGl2ZU1hdGVyaWFsLmZvcmNlRGVwdGhXcml0ZSYmaC5zZXREZXB0aFdyaXRlKCEwKTtjb25zdCBDPWEuZm9yY2VQb2ludHNDbG91ZD9QLlBvaW50RmlsbE1vZGU6YS5mb3JjZVdpcmVmcmFtZT9QLldpcmVGcmFtZUZpbGxNb2RlOnRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9lZmZlY3RpdmVNYXRlcmlhbC5maWxsTW9kZTt0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fb25CZWZvcmVCaW5kT2JzZXJ2YWJsZSYmdGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX29uQmVmb3JlQmluZE9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLGZ8fHRoaXMuX2JpbmQoZSx2LEMpO2NvbnN0IGI9dGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX2VmZmVjdGl2ZU1hdGVyaWFsLE09Uy5nZXRXb3JsZE1hdHJpeCgpO2IuX3N0b3JlRWZmZWN0T25TdWJNZXNoZXM/Yi5iaW5kRm9yU3ViTWVzaChNLHRoaXMsZSk6Yi5iaW5kKE0sdGhpcyksIWIuYmFja0ZhY2VDdWxsaW5nJiZiLnNlcGFyYXRlQ3VsbGluZ1Bhc3MmJihoLnNldFN0YXRlKCEwLGIuek9mZnNldCwhMSwhQSxiLmN1bGxCYWNrRmFjZXMsYi5zdGVuY2lsLGIuek9mZnNldFVuaXRzKSx0aGlzLl9wcm9jZXNzUmVuZGVyaW5nKHRoaXMsZSx2LEMsbyxmLHRoaXMuX29uQmVmb3JlRHJhdyx0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fZWZmZWN0aXZlTWF0ZXJpYWwpLGguc2V0U3RhdGUoITAsYi56T2Zmc2V0LCExLEEsYi5jdWxsQmFja0ZhY2VzLGIuc3RlbmNpbCxiLnpPZmZzZXRVbml0cyksdGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX29uQmV0d2VlblBhc3NPYnNlcnZhYmxlJiZ0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fb25CZXR3ZWVuUGFzc09ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKGUpKSx0aGlzLl9wcm9jZXNzUmVuZGVyaW5nKHRoaXMsZSx2LEMsbyxmLHRoaXMuX29uQmVmb3JlRHJhdyx0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fZWZmZWN0aXZlTWF0ZXJpYWwpLHRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvLl9lZmZlY3RpdmVNYXRlcmlhbC51bmJpbmQoKTtmb3IoY29uc3QgTCBvZiBhLl9hZnRlclJlbmRlcmluZ01lc2hTdGFnZSlMLmFjdGlvbih0aGlzLGUsbyx2KTtyZXR1cm4gdGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX29uQWZ0ZXJSZW5kZXJPYnNlcnZhYmxlJiZ0aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fb25BZnRlclJlbmRlck9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLHUmJih1Lm1heFo9bCxhLnVwZGF0ZVRyYW5zZm9ybU1hdHJpeCghMCkpLGEucGVyZm9ybWFuY2VQcmlvcml0eT09PUN0LkFnZ3Jlc3NpdmUmJiFfLmlzRnJvemVuJiZ0aGlzLl9mcmVlemUoKSx0aGlzfWNsZWFuTWF0cml4V2VpZ2h0cygpe3RoaXMuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuTWF0cmljZXNXZWlnaHRzS2luZCkmJih0aGlzLmlzVmVydGljZXNEYXRhUHJlc2VudChnLk1hdHJpY2VzV2VpZ2h0c0V4dHJhS2luZCk/dGhpcy5fbm9ybWFsaXplU2tpbldlaWdodHNBbmRFeHRyYSgpOnRoaXMuX25vcm1hbGl6ZVNraW5Gb3VyV2VpZ2h0cygpKX1fbm9ybWFsaXplU2tpbkZvdXJXZWlnaHRzKCl7Y29uc3QgZT10aGlzLmdldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzV2VpZ2h0c0tpbmQpLHQ9ZS5sZW5ndGg7Zm9yKGxldCBpPTA7aTx0O2krPTQpe2NvbnN0IHM9ZVtpXStlW2krMV0rZVtpKzJdK2VbaSszXTtpZihzPT09MCllW2ldPTE7ZWxzZXtjb25zdCByPTEvcztlW2ldKj1yLGVbaSsxXSo9cixlW2krMl0qPXIsZVtpKzNdKj1yfX10aGlzLnNldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzV2VpZ2h0c0tpbmQsZSl9X25vcm1hbGl6ZVNraW5XZWlnaHRzQW5kRXh0cmEoKXtjb25zdCBlPXRoaXMuZ2V0VmVydGljZXNEYXRhKGcuTWF0cmljZXNXZWlnaHRzRXh0cmFLaW5kKSx0PXRoaXMuZ2V0VmVydGljZXNEYXRhKGcuTWF0cmljZXNXZWlnaHRzS2luZCksaT10Lmxlbmd0aDtmb3IobGV0IHM9MDtzPGk7cys9NCl7bGV0IHI9dFtzXSt0W3MrMV0rdFtzKzJdK3RbcyszXTtpZihyKz1lW3NdK2VbcysxXStlW3MrMl0rZVtzKzNdLHI9PT0wKXRbc109MTtlbHNle2NvbnN0IG49MS9yO3Rbc10qPW4sdFtzKzFdKj1uLHRbcysyXSo9bix0W3MrM10qPW4sZVtzXSo9bixlW3MrMV0qPW4sZVtzKzJdKj1uLGVbcyszXSo9bn19dGhpcy5zZXRWZXJ0aWNlc0RhdGEoZy5NYXRyaWNlc1dlaWdodHNLaW5kLHQpLHRoaXMuc2V0VmVydGljZXNEYXRhKGcuTWF0cmljZXNXZWlnaHRzS2luZCxlKX12YWxpZGF0ZVNraW5uaW5nKCl7Y29uc3QgZT10aGlzLmdldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzV2VpZ2h0c0V4dHJhS2luZCksdD10aGlzLmdldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzV2VpZ2h0c0tpbmQpO2lmKHQ9PT1udWxsfHx0aGlzLnNrZWxldG9uPT1udWxsKXJldHVybntza2lubmVkOiExLHZhbGlkOiEwLHJlcG9ydDoibm90IHNraW5uZWQifTtjb25zdCBpPXQubGVuZ3RoO2xldCBzPTAscj0wLG49MCxhPTA7Y29uc3Qgbz1lPT09bnVsbD80OjgsaD1uZXcgQXJyYXk7Zm9yKGxldCBtPTA7bTw9bzttKyspaFttXT0wO2NvbnN0IGw9LjAwMTtmb3IobGV0IG09MDttPGk7bSs9NCl7bGV0IHY9dFttXSxTPXYseT1TPT09MD8wOjE7Zm9yKGxldCBBPTE7QTxvO0ErKyl7Y29uc3QgQz1BPDQ/dFttK0FdOmVbbStBLTRdO0M+diYmcysrLEMhPT0wJiZ5KyssUys9Qyx2PUN9aWYoaFt5XSsrLHk+biYmKG49eSksUz09PTApcisrO2Vsc2V7Y29uc3QgQT0xL1M7bGV0IEM9MDtmb3IobGV0IGI9MDtiPG87YisrKWI8ND9DKz1NYXRoLmFicyh0W20rYl0tdFttK2JdKkEpOkMrPU1hdGguYWJzKGVbbStiLTRdLWVbbStiLTRdKkEpO0M+bCYmYSsrfX1jb25zdCB1PXRoaXMuc2tlbGV0b24uYm9uZXMubGVuZ3RoLGQ9dGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5NYXRyaWNlc0luZGljZXNLaW5kKSxmPXRoaXMuZ2V0VmVydGljZXNEYXRhKGcuTWF0cmljZXNJbmRpY2VzRXh0cmFLaW5kKTtsZXQgXz0wO2ZvcihsZXQgbT0wO208aTttKz00KWZvcihsZXQgdj0wO3Y8bzt2Kyspe2NvbnN0IFM9djw0P2RbbSt2XTpmW20rdi00XTsoUz49dXx8UzwwKSYmXysrfWNvbnN0IEU9Ik51bWJlciBvZiBXZWlnaHRzID0gIitpLzQrYApNYXhpbXVtIGluZmx1ZW5jZXMgPSBgK24rYApNaXNzaW5nIFdlaWdodHMgPSBgK3IrYApOb3QgU29ydGVkID0gYCtzK2AKTm90IE5vcm1hbGl6ZWQgPSBgK2ErYApXZWlnaHRDb3VudHMgPSBbYCtoK2BdCk51bWJlciBvZiBib25lcyA9IGArdStgCkJhZCBCb25lIEluZGljZXMgPSBgK187cmV0dXJue3NraW5uZWQ6ITAsdmFsaWQ6cj09PTAmJmE9PT0wJiZfPT09MCxyZXBvcnQ6RX19X2NoZWNrRGVsYXlTdGF0ZSgpe2NvbnN0IGU9dGhpcy5nZXRTY2VuZSgpO3JldHVybiB0aGlzLl9nZW9tZXRyeT90aGlzLl9nZW9tZXRyeS5sb2FkKGUpOnRoaXMuZGVsYXlMb2FkU3RhdGU9PT00JiYodGhpcy5kZWxheUxvYWRTdGF0ZT0yLHRoaXMuX3F1ZXVlTG9hZChlKSksdGhpc31fcXVldWVMb2FkKGUpe2UuYWRkUGVuZGluZ0RhdGEodGhpcyk7Y29uc3QgdD10aGlzLmRlbGF5TG9hZGluZ0ZpbGUuaW5kZXhPZigiLmJhYnlsb25iaW5hcnltZXNoZGF0YSIpIT09LTE7cmV0dXJuIEguTG9hZEZpbGUodGhpcy5kZWxheUxvYWRpbmdGaWxlLGk9PntpIGluc3RhbmNlb2YgQXJyYXlCdWZmZXI/dGhpcy5fZGVsYXlMb2FkaW5nRnVuY3Rpb24oaSx0aGlzKTp0aGlzLl9kZWxheUxvYWRpbmdGdW5jdGlvbihKU09OLnBhcnNlKGkpLHRoaXMpLHRoaXMuaW5zdGFuY2VzLmZvckVhY2gocz0+e3MucmVmcmVzaEJvdW5kaW5nSW5mbygpLHMuX3N5bmNTdWJNZXNoZXMoKX0pLHRoaXMuZGVsYXlMb2FkU3RhdGU9MSxlLnJlbW92ZVBlbmRpbmdEYXRhKHRoaXMpfSwoKT0+e30sZS5vZmZsaW5lUHJvdmlkZXIsdCksdGhpc31pc0luRnJ1c3R1bShlKXtyZXR1cm4gdGhpcy5kZWxheUxvYWRTdGF0ZT09PTJ8fCFzdXBlci5pc0luRnJ1c3R1bShlKT8hMToodGhpcy5fY2hlY2tEZWxheVN0YXRlKCksITApfXNldE1hdGVyaWFsQnlJZChlKXtjb25zdCB0PXRoaXMuZ2V0U2NlbmUoKS5tYXRlcmlhbHM7bGV0IGk7Zm9yKGk9dC5sZW5ndGgtMTtpPi0xO2ktLSlpZih0W2ldLmlkPT09ZSlyZXR1cm4gdGhpcy5tYXRlcmlhbD10W2ldLHRoaXM7Y29uc3Qgcz10aGlzLmdldFNjZW5lKCkubXVsdGlNYXRlcmlhbHM7Zm9yKGk9cy5sZW5ndGgtMTtpPi0xO2ktLSlpZihzW2ldLmlkPT09ZSlyZXR1cm4gdGhpcy5tYXRlcmlhbD1zW2ldLHRoaXM7cmV0dXJuIHRoaXN9Z2V0QW5pbWF0YWJsZXMoKXtjb25zdCBlPW5ldyBBcnJheTtyZXR1cm4gdGhpcy5tYXRlcmlhbCYmZS5wdXNoKHRoaXMubWF0ZXJpYWwpLHRoaXMuc2tlbGV0b24mJmUucHVzaCh0aGlzLnNrZWxldG9uKSxlfWJha2VUcmFuc2Zvcm1JbnRvVmVydGljZXMoZSl7aWYoIXRoaXMuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuUG9zaXRpb25LaW5kKSlyZXR1cm4gdGhpcztjb25zdCB0PXRoaXMuc3ViTWVzaGVzLnNwbGljZSgwKTt0aGlzLl9yZXNldFBvaW50c0FycmF5Q2FjaGUoKTtsZXQgaT10aGlzLmdldFZlcnRpY2VzRGF0YShnLlBvc2l0aW9uS2luZCk7Y29uc3Qgcz1wLlplcm8oKTtsZXQgcjtmb3Iocj0wO3I8aS5sZW5ndGg7cis9MylwLlRyYW5zZm9ybUNvb3JkaW5hdGVzRnJvbUZsb2F0c1RvUmVmKGlbcl0saVtyKzFdLGlbcisyXSxlLHMpLnRvQXJyYXkoaSxyKTtpZih0aGlzLnNldFZlcnRpY2VzRGF0YShnLlBvc2l0aW9uS2luZCxpLHRoaXMuZ2V0VmVydGV4QnVmZmVyKGcuUG9zaXRpb25LaW5kKS5pc1VwZGF0YWJsZSgpKSx0aGlzLmlzVmVydGljZXNEYXRhUHJlc2VudChnLk5vcm1hbEtpbmQpKXtmb3IoaT10aGlzLmdldFZlcnRpY2VzRGF0YShnLk5vcm1hbEtpbmQpLHI9MDtyPGkubGVuZ3RoO3IrPTMpcC5UcmFuc2Zvcm1Ob3JtYWxGcm9tRmxvYXRzVG9SZWYoaVtyXSxpW3IrMV0saVtyKzJdLGUscykubm9ybWFsaXplKCkudG9BcnJheShpLHIpO3RoaXMuc2V0VmVydGljZXNEYXRhKGcuTm9ybWFsS2luZCxpLHRoaXMuZ2V0VmVydGV4QnVmZmVyKGcuTm9ybWFsS2luZCkuaXNVcGRhdGFibGUoKSl9cmV0dXJuIGUuZGV0ZXJtaW5hbnQoKTwwJiZ0aGlzLmZsaXBGYWNlcygpLHRoaXMucmVsZWFzZVN1Yk1lc2hlcygpLHRoaXMuc3ViTWVzaGVzPXQsdGhpc31iYWtlQ3VycmVudFRyYW5zZm9ybUludG9WZXJ0aWNlcyhlPSEwKXtyZXR1cm4gdGhpcy5iYWtlVHJhbnNmb3JtSW50b1ZlcnRpY2VzKHRoaXMuY29tcHV0ZVdvcmxkTWF0cml4KCEwKSksdGhpcy5yZXNldExvY2FsTWF0cml4KGUpLHRoaXN9Z2V0IF9wb3NpdGlvbnMoKXtyZXR1cm4gdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fcG9zaXRpb25zP3RoaXMuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX3Bvc2l0aW9uczp0aGlzLl9nZW9tZXRyeT90aGlzLl9nZW9tZXRyeS5fcG9zaXRpb25zOm51bGx9X3Jlc2V0UG9pbnRzQXJyYXlDYWNoZSgpe3JldHVybiB0aGlzLl9nZW9tZXRyeSYmdGhpcy5fZ2VvbWV0cnkuX3Jlc2V0UG9pbnRzQXJyYXlDYWNoZSgpLHRoaXN9X2dlbmVyYXRlUG9pbnRzQXJyYXkoKXtyZXR1cm4gdGhpcy5fZ2VvbWV0cnk/dGhpcy5fZ2VvbWV0cnkuX2dlbmVyYXRlUG9pbnRzQXJyYXkoKTohMX1jbG9uZShlPSIiLHQ9bnVsbCxpLHM9ITApe3JldHVybiBuZXcgVyhlLHRoaXMuZ2V0U2NlbmUoKSx0LHRoaXMsaSxzKX1kaXNwb3NlKGUsdD0hMSl7dGhpcy5tb3JwaFRhcmdldE1hbmFnZXI9bnVsbCx0aGlzLl9nZW9tZXRyeSYmdGhpcy5fZ2VvbWV0cnkucmVsZWFzZUZvck1lc2godGhpcywhMCk7Y29uc3QgaT10aGlzLl9pbnRlcm5hbE1lc2hEYXRhSW5mbztpZihpLl9vbkJlZm9yZURyYXdPYnNlcnZhYmxlJiZpLl9vbkJlZm9yZURyYXdPYnNlcnZhYmxlLmNsZWFyKCksaS5fb25CZWZvcmVCaW5kT2JzZXJ2YWJsZSYmaS5fb25CZWZvcmVCaW5kT2JzZXJ2YWJsZS5jbGVhcigpLGkuX29uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZSYmaS5fb25CZWZvcmVSZW5kZXJPYnNlcnZhYmxlLmNsZWFyKCksaS5fb25BZnRlclJlbmRlck9ic2VydmFibGUmJmkuX29uQWZ0ZXJSZW5kZXJPYnNlcnZhYmxlLmNsZWFyKCksaS5fb25CZXR3ZWVuUGFzc09ic2VydmFibGUmJmkuX29uQmV0d2VlblBhc3NPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5fc2NlbmUudXNlQ2xvbmVkTWVzaE1hcCl7aWYoaS5tZXNoTWFwKWZvcihjb25zdCBzIGluIGkubWVzaE1hcCl7Y29uc3Qgcj1pLm1lc2hNYXBbc107ciYmKHIuX2ludGVybmFsTWVzaERhdGFJbmZvLl9zb3VyY2U9bnVsbCxpLm1lc2hNYXBbc109dm9pZCAwKX1pLl9zb3VyY2UmJmkuX3NvdXJjZS5faW50ZXJuYWxNZXNoRGF0YUluZm8ubWVzaE1hcCYmKGkuX3NvdXJjZS5faW50ZXJuYWxNZXNoRGF0YUluZm8ubWVzaE1hcFt0aGlzLnVuaXF1ZUlkXT12b2lkIDApfWVsc2V7Y29uc3Qgcz10aGlzLmdldFNjZW5lKCkubWVzaGVzO2Zvcihjb25zdCByIG9mIHMpe2NvbnN0IG49cjtuLl9pbnRlcm5hbE1lc2hEYXRhSW5mbyYmbi5faW50ZXJuYWxNZXNoRGF0YUluZm8uX3NvdXJjZSYmbi5faW50ZXJuYWxNZXNoRGF0YUluZm8uX3NvdXJjZT09PXRoaXMmJihuLl9pbnRlcm5hbE1lc2hEYXRhSW5mby5fc291cmNlPW51bGwpfX1pLl9zb3VyY2U9bnVsbCx0aGlzLl9kaXNwb3NlSW5zdGFuY2VTcGVjaWZpY0RhdGEoKSx0aGlzLl9kaXNwb3NlVGhpbkluc3RhbmNlU3BlY2lmaWNEYXRhKCksdGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX2NoZWNrUmVhZGluZXNzT2JzZXJ2ZXImJnRoaXMuX3NjZW5lLm9uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZS5yZW1vdmUodGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm8uX2NoZWNrUmVhZGluZXNzT2JzZXJ2ZXIpLHN1cGVyLmRpc3Bvc2UoZSx0KX1fZGlzcG9zZUluc3RhbmNlU3BlY2lmaWNEYXRhKCl7fV9kaXNwb3NlVGhpbkluc3RhbmNlU3BlY2lmaWNEYXRhKCl7fV9pbnZhbGlkYXRlSW5zdGFuY2VWZXJ0ZXhBcnJheU9iamVjdCgpe31hcHBseURpc3BsYWNlbWVudE1hcChlLHQsaSxzLHIsbixhPSExKXtjb25zdCBvPXRoaXMuZ2V0U2NlbmUoKSxoPWw9Pntjb25zdCB1PWwud2lkdGgsZD1sLmhlaWdodCxfPXRoaXMuZ2V0RW5naW5lKCkuY3JlYXRlQ2FudmFzKHUsZCkuZ2V0Q29udGV4dCgiMmQiKTtfLmRyYXdJbWFnZShsLDAsMCk7Y29uc3QgRT1fLmdldEltYWdlRGF0YSgwLDAsdSxkKS5kYXRhO3RoaXMuYXBwbHlEaXNwbGFjZW1lbnRNYXBGcm9tQnVmZmVyKEUsdSxkLHQsaSxyLG4sYSkscyYmcyh0aGlzKX07cmV0dXJuIEguTG9hZEltYWdlKGUsaCwoKT0+e30sby5vZmZsaW5lUHJvdmlkZXIpLHRoaXN9YXBwbHlEaXNwbGFjZW1lbnRNYXBGcm9tQnVmZmVyKGUsdCxpLHMscixuLGEsbz0hMSl7aWYoIXRoaXMuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuUG9zaXRpb25LaW5kKXx8IXRoaXMuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuTm9ybWFsS2luZCl8fCF0aGlzLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlVWS2luZCkpcmV0dXJuIE8uV2FybigiQ2Fubm90IGNhbGwgYXBwbHlEaXNwbGFjZW1lbnRNYXA6IEdpdmVuIG1lc2ggaXMgbm90IGNvbXBsZXRlLiBQb3NpdGlvbiwgTm9ybWFsIG9yIFVWIGFyZSBtaXNzaW5nIiksdGhpcztjb25zdCBoPXRoaXMuZ2V0VmVydGljZXNEYXRhKGcuUG9zaXRpb25LaW5kLCEwLCEwKSxsPXRoaXMuZ2V0VmVydGljZXNEYXRhKGcuTm9ybWFsS2luZCksdT10aGlzLmdldFZlcnRpY2VzRGF0YShnLlVWS2luZCk7bGV0IGQ9cC5aZXJvKCk7Y29uc3QgZj1wLlplcm8oKSxfPXZlLlplcm8oKTtuPW58fHZlLlplcm8oKSxhPWF8fG5ldyB2ZSgxLDEpO2ZvcihsZXQgRT0wO0U8aC5sZW5ndGg7RSs9Myl7cC5Gcm9tQXJyYXlUb1JlZihoLEUsZCkscC5Gcm9tQXJyYXlUb1JlZihsLEUsZiksdmUuRnJvbUFycmF5VG9SZWYodSxFLzMqMixfKTtjb25zdCBtPU1hdGguYWJzKF8ueCphLngrbi54JTEpKih0LTEpJXR8MCx2PU1hdGguYWJzKF8ueSphLnkrbi55JTEpKihpLTEpJWl8MCxTPShtK3YqdCkqNCx5PWVbU10vMjU1LEE9ZVtTKzFdLzI1NSxDPWVbUysyXS8yNTUsYj15Ki4zK0EqLjU5K0MqLjExO2Yubm9ybWFsaXplKCksZi5zY2FsZUluUGxhY2Uocysoci1zKSpiKSxkPWQuYWRkKGYpLGQudG9BcnJheShoLEUpfXJldHVybiBlZS5Db21wdXRlTm9ybWFscyhoLHRoaXMuZ2V0SW5kaWNlcygpLGwpLG8/KHRoaXMuc2V0VmVydGljZXNEYXRhKGcuUG9zaXRpb25LaW5kLGgpLHRoaXMuc2V0VmVydGljZXNEYXRhKGcuTm9ybWFsS2luZCxsKSx0aGlzLnNldFZlcnRpY2VzRGF0YShnLlVWS2luZCx1KSk6KHRoaXMudXBkYXRlVmVydGljZXNEYXRhKGcuUG9zaXRpb25LaW5kLGgpLHRoaXMudXBkYXRlVmVydGljZXNEYXRhKGcuTm9ybWFsS2luZCxsKSksdGhpc31jb252ZXJ0VG9GbGF0U2hhZGVkTWVzaCgpe2NvbnN0IGU9dGhpcy5nZXRWZXJ0aWNlc0RhdGFLaW5kcygpLHQ9e30saT17fSxzPXt9O2xldCByPSExLG4sYTtmb3Iobj0wO248ZS5sZW5ndGg7bisrKXthPWVbbl07Y29uc3QgbT10aGlzLmdldFZlcnRleEJ1ZmZlcihhKSx2PW0uZ2V0RGF0YSgpO2lmKCEoKHYgaW5zdGFuY2VvZiBBcnJheXx8diBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheSkmJnYubGVuZ3RoPT09MCkpe2lmKGE9PT1nLk5vcm1hbEtpbmQpe3I9bS5pc1VwZGF0YWJsZSgpLGUuc3BsaWNlKG4sMSksbi0tO2NvbnRpbnVlfXRbYV09bSxpW2FdPXRoaXMuZ2V0VmVydGljZXNEYXRhKGEpLHNbYV09W119fWNvbnN0IG89dGhpcy5zdWJNZXNoZXMuc2xpY2UoMCksaD10aGlzLmdldEluZGljZXMoKSxsPXRoaXMuZ2V0VG90YWxJbmRpY2VzKCk7bGV0IHU7Zm9yKHU9MDt1PGw7dSsrKXtjb25zdCBtPWhbdV07Zm9yKG49MDtuPGUubGVuZ3RoO24rKyl7aWYoYT1lW25dLCF0W2FdKWNvbnRpbnVlO2NvbnN0IHY9dFthXS5nZXRTdHJpZGVTaXplKCk7Zm9yKGxldCBTPTA7Uzx2O1MrKylzW2FdLnB1c2goaVthXVttKnYrU10pfX1jb25zdCBkPVtdLGY9c1tnLlBvc2l0aW9uS2luZF0sXz10aGlzLmdldFNjZW5lKCkudXNlUmlnaHRIYW5kZWRTeXN0ZW07bGV0IEU7Zm9yKF8/RT10aGlzLm92ZXJyaWRlTWF0ZXJpYWxTaWRlT3JpZW50YXRpb249PT0xOkU9dGhpcy5vdmVycmlkZU1hdGVyaWFsU2lkZU9yaWVudGF0aW9uPT09MCx1PTA7dTxsO3UrPTMpe2hbdV09dSxoW3UrMV09dSsxLGhbdSsyXT11KzI7Y29uc3QgbT1wLkZyb21BcnJheShmLHUqMyksdj1wLkZyb21BcnJheShmLCh1KzEpKjMpLFM9cC5Gcm9tQXJyYXkoZiwodSsyKSozKSx5PW0uc3VidHJhY3QodiksQT1TLnN1YnRyYWN0KHYpLEM9cC5Ob3JtYWxpemUocC5Dcm9zcyh5LEEpKTtFJiZDLnNjYWxlSW5QbGFjZSgtMSk7Zm9yKGxldCBiPTA7YjwzO2IrKylkLnB1c2goQy54KSxkLnB1c2goQy55KSxkLnB1c2goQy56KX1mb3IodGhpcy5zZXRJbmRpY2VzKGgpLHRoaXMuc2V0VmVydGljZXNEYXRhKGcuTm9ybWFsS2luZCxkLHIpLG49MDtuPGUubGVuZ3RoO24rKylhPWVbbl0sc1thXSYmdGhpcy5zZXRWZXJ0aWNlc0RhdGEoYSxzW2FdLHRbYV0uaXNVcGRhdGFibGUoKSk7dGhpcy5yZWxlYXNlU3ViTWVzaGVzKCk7Zm9yKGxldCBtPTA7bTxvLmxlbmd0aDttKyspe2NvbnN0IHY9b1ttXTt2dC5BZGRUb01lc2godi5tYXRlcmlhbEluZGV4LHYuaW5kZXhTdGFydCx2LmluZGV4Q291bnQsdi5pbmRleFN0YXJ0LHYuaW5kZXhDb3VudCx0aGlzKX1yZXR1cm4gdGhpcy5zeW5jaHJvbml6ZUluc3RhbmNlcygpLHRoaXN9Y29udmVydFRvVW5JbmRleGVkTWVzaCgpe2NvbnN0IGU9dGhpcy5nZXRWZXJ0aWNlc0RhdGFLaW5kcygpLHQ9e30saT17fSxzPXt9O2xldCByLG47Zm9yKHI9MDtyPGUubGVuZ3RoO3IrKyl7bj1lW3JdO2NvbnN0IHU9dGhpcy5nZXRWZXJ0ZXhCdWZmZXIobik7dFtuXT11LGlbbl09dFtuXS5nZXREYXRhKCksc1tuXT1bXX1jb25zdCBhPXRoaXMuc3ViTWVzaGVzLnNsaWNlKDApLG89dGhpcy5nZXRJbmRpY2VzKCksaD10aGlzLmdldFRvdGFsSW5kaWNlcygpO2xldCBsO2ZvcihsPTA7bDxoO2wrKyl7Y29uc3QgdT1vW2xdO2ZvcihyPTA7cjxlLmxlbmd0aDtyKyspe249ZVtyXTtjb25zdCBkPXRbbl0uZ2V0U3RyaWRlU2l6ZSgpO2ZvcihsZXQgZj0wO2Y8ZDtmKyspc1tuXS5wdXNoKGlbbl1bdSpkK2ZdKX19Zm9yKGw9MDtsPGg7bCs9MylvW2xdPWwsb1tsKzFdPWwrMSxvW2wrMl09bCsyO2Zvcih0aGlzLnNldEluZGljZXMobykscj0wO3I8ZS5sZW5ndGg7cisrKW49ZVtyXSx0aGlzLnNldFZlcnRpY2VzRGF0YShuLHNbbl0sdFtuXS5pc1VwZGF0YWJsZSgpLHRbbl0uZ2V0U3RyaWRlU2l6ZSgpKTt0aGlzLnJlbGVhc2VTdWJNZXNoZXMoKTtmb3IobGV0IHU9MDt1PGEubGVuZ3RoO3UrKyl7Y29uc3QgZD1hW3VdO3Z0LkFkZFRvTWVzaChkLm1hdGVyaWFsSW5kZXgsZC5pbmRleFN0YXJ0LGQuaW5kZXhDb3VudCxkLmluZGV4U3RhcnQsZC5pbmRleENvdW50LHRoaXMpfXJldHVybiB0aGlzLl91bkluZGV4ZWQ9ITAsdGhpcy5zeW5jaHJvbml6ZUluc3RhbmNlcygpLHRoaXN9ZmxpcEZhY2VzKGU9ITEpe2NvbnN0IHQ9ZWUuRXh0cmFjdEZyb21NZXNoKHRoaXMpO2xldCBpO2lmKGUmJnRoaXMuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuTm9ybWFsS2luZCkmJnQubm9ybWFscylmb3IoaT0wO2k8dC5ub3JtYWxzLmxlbmd0aDtpKyspdC5ub3JtYWxzW2ldKj0tMTtpZih0LmluZGljZXMpe2xldCBzO2ZvcihpPTA7aTx0LmluZGljZXMubGVuZ3RoO2krPTMpcz10LmluZGljZXNbaSsxXSx0LmluZGljZXNbaSsxXT10LmluZGljZXNbaSsyXSx0LmluZGljZXNbaSsyXT1zfXJldHVybiB0LmFwcGx5VG9NZXNoKHRoaXMsdGhpcy5pc1ZlcnRleEJ1ZmZlclVwZGF0YWJsZShnLlBvc2l0aW9uS2luZCkpLHRoaXN9aW5jcmVhc2VWZXJ0aWNlcyhlPTEpe2NvbnN0IHQ9ZWUuRXh0cmFjdEZyb21NZXNoKHRoaXMpLGk9dC5pbmRpY2VzJiYhQXJyYXkuaXNBcnJheSh0LmluZGljZXMpJiZBcnJheS5mcm9tP0FycmF5LmZyb20odC5pbmRpY2VzKTp0LmluZGljZXMscz10LnBvc2l0aW9ucyYmIUFycmF5LmlzQXJyYXkodC5wb3NpdGlvbnMpJiZBcnJheS5mcm9tP0FycmF5LmZyb20odC5wb3NpdGlvbnMpOnQucG9zaXRpb25zLHI9dC51dnMmJiFBcnJheS5pc0FycmF5KHQudXZzKSYmQXJyYXkuZnJvbT9BcnJheS5mcm9tKHQudXZzKTp0LnV2cyxuPXQubm9ybWFscyYmIUFycmF5LmlzQXJyYXkodC5ub3JtYWxzKSYmQXJyYXkuZnJvbT9BcnJheS5mcm9tKHQubm9ybWFscyk6dC5ub3JtYWxzO2lmKCFpfHwhcylPLldhcm4oIkNvdWxkbid0IGluY3JlYXNlIG51bWJlciBvZiB2ZXJ0aWNlcyA6IFZlcnRleERhdGEgbXVzdCBjb250YWluIGF0IGxlYXN0IGluZGljZXMgYW5kIHBvc2l0aW9ucyIpO2Vsc2V7dC5pbmRpY2VzPWksdC5wb3NpdGlvbnM9cyxyJiYodC51dnM9ciksbiYmKHQubm9ybWFscz1uKTtjb25zdCBhPWUrMSxvPW5ldyBBcnJheTtmb3IobGV0IEM9MDtDPGErMTtDKyspb1tDXT1uZXcgQXJyYXk7bGV0IGgsbDtjb25zdCB1PW5ldyBwKDAsMCwwKSxkPW5ldyBwKDAsMCwwKSxmPW5ldyB2ZSgwLDApLF89bmV3IEFycmF5LEU9bmV3IEFycmF5LG09bmV3IEFycmF5O2xldCB2LFM9cy5sZW5ndGgseTtyJiYoeT1yLmxlbmd0aCk7bGV0IEE7biYmKEE9bi5sZW5ndGgpO2ZvcihsZXQgQz0wO0M8aS5sZW5ndGg7Qys9Myl7RVswXT1pW0NdLEVbMV09aVtDKzFdLEVbMl09aVtDKzJdO2ZvcihsZXQgYj0wO2I8MztiKyspaWYoaD1FW2JdLGw9RVsoYisxKSUzXSxtW2hdPT09dm9pZCAwJiZtW2xdPT09dm9pZCAwPyhtW2hdPW5ldyBBcnJheSxtW2xdPW5ldyBBcnJheSk6KG1baF09PT12b2lkIDAmJihtW2hdPW5ldyBBcnJheSksbVtsXT09PXZvaWQgMCYmKG1bbF09bmV3IEFycmF5KSksbVtoXVtsXT09PXZvaWQgMCYmbVtsXVtoXT09PXZvaWQgMCl7bVtoXVtsXT1bXSx1Lng9KHNbMypsXS1zWzMqaF0pL2EsdS55PShzWzMqbCsxXS1zWzMqaCsxXSkvYSx1Lno9KHNbMypsKzJdLXNbMypoKzJdKS9hLG4mJihkLng9KG5bMypsXS1uWzMqaF0pL2EsZC55PShuWzMqbCsxXS1uWzMqaCsxXSkvYSxkLno9KG5bMypsKzJdLW5bMypoKzJdKS9hKSxyJiYoZi54PShyWzIqbF0tclsyKmhdKS9hLGYueT0oclsyKmwrMV0tclsyKmgrMV0pL2EpLG1baF1bbF0ucHVzaChoKTtmb3IobGV0IE09MTtNPGE7TSsrKW1baF1bbF0ucHVzaChzLmxlbmd0aC8zKSxzW1MrK109c1szKmhdK00qdS54LHNbUysrXT1zWzMqaCsxXStNKnUueSxzW1MrK109c1szKmgrMl0rTSp1LnosbiYmKG5bQSsrXT1uWzMqaF0rTSpkLngsbltBKytdPW5bMypoKzFdK00qZC55LG5bQSsrXT1uWzMqaCsyXStNKmQueiksciYmKHJbeSsrXT1yWzIqaF0rTSpmLngsclt5KytdPXJbMipoKzFdK00qZi55KTttW2hdW2xdLnB1c2gobCksbVtsXVtoXT1uZXcgQXJyYXksdj1tW2hdW2xdLmxlbmd0aDtmb3IobGV0IE09MDtNPHY7TSsrKW1bbF1baF1bTV09bVtoXVtsXVt2LTEtTV19b1swXVswXT1pW0NdLG9bMV1bMF09bVtpW0NdXVtpW0MrMV1dWzFdLG9bMV1bMV09bVtpW0NdXVtpW0MrMl1dWzFdO2ZvcihsZXQgYj0yO2I8YTtiKyspe29bYl1bMF09bVtpW0NdXVtpW0MrMV1dW2JdLG9bYl1bYl09bVtpW0NdXVtpW0MrMl1dW2JdLHUueD0oc1szKm9bYl1bYl1dLXNbMypvW2JdWzBdXSkvYix1Lnk9KHNbMypvW2JdW2JdKzFdLXNbMypvW2JdWzBdKzFdKS9iLHUuej0oc1szKm9bYl1bYl0rMl0tc1szKm9bYl1bMF0rMl0pL2IsbiYmKGQueD0oblszKm9bYl1bYl1dLW5bMypvW2JdWzBdXSkvYixkLnk9KG5bMypvW2JdW2JdKzFdLW5bMypvW2JdWzBdKzFdKS9iLGQuej0oblszKm9bYl1bYl0rMl0tblszKm9bYl1bMF0rMl0pL2IpLHImJihmLng9KHJbMipvW2JdW2JdXS1yWzIqb1tiXVswXV0pL2IsZi55PShyWzIqb1tiXVtiXSsxXS1yWzIqb1tiXVswXSsxXSkvYik7Zm9yKGxldCBNPTE7TTxiO00rKylvW2JdW01dPXMubGVuZ3RoLzMsc1tTKytdPXNbMypvW2JdWzBdXStNKnUueCxzW1MrK109c1szKm9bYl1bMF0rMV0rTSp1Lnksc1tTKytdPXNbMypvW2JdWzBdKzJdK00qdS56LG4mJihuW0ErK109blszKm9bYl1bMF1dK00qZC54LG5bQSsrXT1uWzMqb1tiXVswXSsxXStNKmQueSxuW0ErK109blszKm9bYl1bMF0rMl0rTSpkLnopLHImJihyW3krK109clsyKm9bYl1bMF1dK00qZi54LHJbeSsrXT1yWzIqb1tiXVswXSsxXStNKmYueSl9b1thXT1tW2lbQysxXV1baVtDKzJdXSxfLnB1c2gob1swXVswXSxvWzFdWzBdLG9bMV1bMV0pO2ZvcihsZXQgYj0xO2I8YTtiKyspe2xldCBNO2ZvcihNPTA7TTxiO00rKylfLnB1c2gob1tiXVtNXSxvW2IrMV1bTV0sb1tiKzFdW00rMV0pLF8ucHVzaChvW2JdW01dLG9bYisxXVtNKzFdLG9bYl1bTSsxXSk7Xy5wdXNoKG9bYl1bTV0sb1tiKzFdW01dLG9bYisxXVtNKzFdKX19dC5pbmRpY2VzPV8sdC5hcHBseVRvTWVzaCh0aGlzLHRoaXMuaXNWZXJ0ZXhCdWZmZXJVcGRhdGFibGUoZy5Qb3NpdGlvbktpbmQpKX19Zm9yY2VTaGFyZWRWZXJ0aWNlcygpe2NvbnN0IGU9ZWUuRXh0cmFjdEZyb21NZXNoKHRoaXMpLHQ9ZS51dnMsaT1lLmluZGljZXMscz1lLnBvc2l0aW9ucyxyPWUuY29sb3JzLG49ZS5tYXRyaWNlc0luZGljZXMsYT1lLm1hdHJpY2VzV2VpZ2h0cyxvPWUubWF0cmljZXNJbmRpY2VzRXh0cmEsaD1lLm1hdHJpY2VzV2VpZ2h0c0V4dHJhO2lmKGk9PT12b2lkIDB8fHM9PT12b2lkIDB8fGk9PT1udWxsfHxzPT09bnVsbClPLldhcm4oIlZlcnRleERhdGEgY29udGFpbnMgZW1wdHkgZW50cmllcyIpO2Vsc2V7Y29uc3QgbD1uZXcgQXJyYXksdT1uZXcgQXJyYXksZD1uZXcgQXJyYXksZj1uZXcgQXJyYXksXz1uZXcgQXJyYXksRT1uZXcgQXJyYXksbT1uZXcgQXJyYXksdj1uZXcgQXJyYXk7bGV0IFM9bmV3IEFycmF5LHk9MDtjb25zdCBBPXt9O2xldCBDLGI7Zm9yKGxldCBMPTA7TDxpLmxlbmd0aDtMKz0zKXtiPVtpW0xdLGlbTCsxXSxpW0wrMl1dLFM9bmV3IEFycmF5O2ZvcihsZXQgaz0wO2s8MztrKyspe1Nba109IiI7Zm9yKGxldCB3PTA7dzwzO3crKylNYXRoLmFicyhzWzMqYltrXSt3XSk8MWUtOCYmKHNbMypiW2tdK3ddPTApLFNba10rPXNbMypiW2tdK3ddKyJ8In1pZighKFNbMF09PVNbMV18fFNbMF09PVNbMl18fFNbMV09PVNbMl0pKWZvcihsZXQgaz0wO2s8MztrKyspe2lmKEM9QVtTW2tdXSxDPT09dm9pZCAwKXtBW1Nba11dPXksQz15Kys7Zm9yKGxldCB3PTA7dzwzO3crKylsLnB1c2goc1szKmJba10rd10pO2lmKHIhPW51bGwpZm9yKGxldCB3PTA7dzw0O3crKylmLnB1c2gocls0KmJba10rd10pO2lmKHQhPW51bGwpZm9yKGxldCB3PTA7dzwyO3crKylkLnB1c2godFsyKmJba10rd10pO2lmKG4hPW51bGwpZm9yKGxldCB3PTA7dzw0O3crKylfLnB1c2gobls0KmJba10rd10pO2lmKGEhPW51bGwpZm9yKGxldCB3PTA7dzw0O3crKylFLnB1c2goYVs0KmJba10rd10pO2lmKG8hPW51bGwpZm9yKGxldCB3PTA7dzw0O3crKyltLnB1c2gob1s0KmJba10rd10pO2lmKGghPW51bGwpZm9yKGxldCB3PTA7dzw0O3crKyl2LnB1c2goaFs0KmJba10rd10pfXUucHVzaChDKX19Y29uc3QgTT1uZXcgQXJyYXk7ZWUuQ29tcHV0ZU5vcm1hbHMobCx1LE0pLGUucG9zaXRpb25zPWwsZS5pbmRpY2VzPXUsZS5ub3JtYWxzPU0sdCE9bnVsbCYmKGUudXZzPWQpLHIhPW51bGwmJihlLmNvbG9ycz1mKSxuIT1udWxsJiYoZS5tYXRyaWNlc0luZGljZXM9XyksYSE9bnVsbCYmKGUubWF0cmljZXNXZWlnaHRzPUUpLG8hPW51bGwmJihlLm1hdHJpY2VzSW5kaWNlc0V4dHJhPW0pLGEhPW51bGwmJihlLm1hdHJpY2VzV2VpZ2h0c0V4dHJhPXYpLGUuYXBwbHlUb01lc2godGhpcyx0aGlzLmlzVmVydGV4QnVmZmVyVXBkYXRhYmxlKGcuUG9zaXRpb25LaW5kKSl9fXN0YXRpYyBfaW5zdGFuY2VkTWVzaEZhY3RvcnkoZSx0KXt0aHJvdyAkKCJJbnN0YW5jZWRNZXNoIil9c3RhdGljIF9QaHlzaWNzSW1wb3N0b3JQYXJzZXIoZSx0LGkpe3Rocm93ICQoIlBoeXNpY3NJbXBvc3RvciIpfWNyZWF0ZUluc3RhbmNlKGUpe3JldHVybiBXLl9pbnN0YW5jZWRNZXNoRmFjdG9yeShlLHRoaXMpfXN5bmNocm9uaXplSW5zdGFuY2VzKCl7Zm9yKGxldCBlPTA7ZTx0aGlzLmluc3RhbmNlcy5sZW5ndGg7ZSsrKXRoaXMuaW5zdGFuY2VzW2VdLl9zeW5jU3ViTWVzaGVzKCk7cmV0dXJuIHRoaXN9b3B0aW1pemVJbmRpY2VzKGUpe2NvbnN0IHQ9dGhpcy5nZXRJbmRpY2VzKCksaT10aGlzLmdldFZlcnRpY2VzRGF0YShnLlBvc2l0aW9uS2luZCk7aWYoIWl8fCF0KXJldHVybiB0aGlzO2NvbnN0IHM9bmV3IEFycmF5O2ZvcihsZXQgbj0wO248aS5sZW5ndGg7bj1uKzMpcy5wdXNoKHAuRnJvbUFycmF5KGksbikpO2NvbnN0IHI9bmV3IEFycmF5O3JldHVybiBZaS5TeW5jQXN5bmNGb3JMb29wKHMubGVuZ3RoLDQwLG49Pntjb25zdCBhPXMubGVuZ3RoLTEtbixvPXNbYV07Zm9yKGxldCBoPTA7aDxhOysraCl7Y29uc3QgbD1zW2hdO2lmKG8uZXF1YWxzKGwpKXtyW2FdPWg7YnJlYWt9fX0sKCk9Pntmb3IobGV0IGE9MDthPHQubGVuZ3RoOysrYSl0W2FdPXJbdFthXV18fHRbYV07Y29uc3Qgbj10aGlzLnN1Yk1lc2hlcy5zbGljZSgwKTt0aGlzLnNldEluZGljZXModCksdGhpcy5zdWJNZXNoZXM9bixlJiZlKHRoaXMpfSksdGhpc31zZXJpYWxpemUoZT17fSl7ZS5uYW1lPXRoaXMubmFtZSxlLmlkPXRoaXMuaWQsZS51bmlxdWVJZD10aGlzLnVuaXF1ZUlkLGUudHlwZT10aGlzLmdldENsYXNzTmFtZSgpLGdlJiZnZS5IYXNUYWdzKHRoaXMpJiYoZS50YWdzPWdlLkdldFRhZ3ModGhpcykpLGUucG9zaXRpb249dGhpcy5wb3NpdGlvbi5hc0FycmF5KCksdGhpcy5yb3RhdGlvblF1YXRlcm5pb24/ZS5yb3RhdGlvblF1YXRlcm5pb249dGhpcy5yb3RhdGlvblF1YXRlcm5pb24uYXNBcnJheSgpOnRoaXMucm90YXRpb24mJihlLnJvdGF0aW9uPXRoaXMucm90YXRpb24uYXNBcnJheSgpKSxlLnNjYWxpbmc9dGhpcy5zY2FsaW5nLmFzQXJyYXkoKSx0aGlzLl9wb3N0TXVsdGlwbHlQaXZvdE1hdHJpeD9lLnBpdm90TWF0cml4PXRoaXMuZ2V0UGl2b3RNYXRyaXgoKS5hc0FycmF5KCk6ZS5sb2NhbE1hdHJpeD10aGlzLmdldFBpdm90TWF0cml4KCkuYXNBcnJheSgpLGUuaXNFbmFibGVkPXRoaXMuaXNFbmFibGVkKCExKSxlLmlzVmlzaWJsZT10aGlzLmlzVmlzaWJsZSxlLmluZmluaXRlRGlzdGFuY2U9dGhpcy5pbmZpbml0ZURpc3RhbmNlLGUucGlja2FibGU9dGhpcy5pc1BpY2thYmxlLGUucmVjZWl2ZVNoYWRvd3M9dGhpcy5yZWNlaXZlU2hhZG93cyxlLmJpbGxib2FyZE1vZGU9dGhpcy5iaWxsYm9hcmRNb2RlLGUudmlzaWJpbGl0eT10aGlzLnZpc2liaWxpdHksZS5jaGVja0NvbGxpc2lvbnM9dGhpcy5jaGVja0NvbGxpc2lvbnMsZS5pc0Jsb2NrZXI9dGhpcy5pc0Jsb2NrZXIsZS5vdmVycmlkZU1hdGVyaWFsU2lkZU9yaWVudGF0aW9uPXRoaXMub3ZlcnJpZGVNYXRlcmlhbFNpZGVPcmllbnRhdGlvbix0aGlzLnBhcmVudCYmdGhpcy5wYXJlbnQuX3NlcmlhbGl6ZUFzUGFyZW50KGUpLGUuaXNVbkluZGV4ZWQ9dGhpcy5pc1VuSW5kZXhlZDtjb25zdCB0PXRoaXMuX2dlb21ldHJ5O2lmKHQmJnRoaXMuc3ViTWVzaGVzKXtlLmdlb21ldHJ5VW5pcXVlSWQ9dC51bmlxdWVJZCxlLmdlb21ldHJ5SWQ9dC5pZCxlLnN1Yk1lc2hlcz1bXTtmb3IobGV0IGk9MDtpPHRoaXMuc3ViTWVzaGVzLmxlbmd0aDtpKyspe2NvbnN0IHM9dGhpcy5zdWJNZXNoZXNbaV07ZS5zdWJNZXNoZXMucHVzaCh7bWF0ZXJpYWxJbmRleDpzLm1hdGVyaWFsSW5kZXgsdmVydGljZXNTdGFydDpzLnZlcnRpY2VzU3RhcnQsdmVydGljZXNDb3VudDpzLnZlcnRpY2VzQ291bnQsaW5kZXhTdGFydDpzLmluZGV4U3RhcnQsaW5kZXhDb3VudDpzLmluZGV4Q291bnR9KX19aWYodGhpcy5tYXRlcmlhbD90aGlzLm1hdGVyaWFsLmRvTm90U2VyaWFsaXplfHwoZS5tYXRlcmlhbFVuaXF1ZUlkPXRoaXMubWF0ZXJpYWwudW5pcXVlSWQsZS5tYXRlcmlhbElkPXRoaXMubWF0ZXJpYWwuaWQpOih0aGlzLm1hdGVyaWFsPW51bGwsZS5tYXRlcmlhbFVuaXF1ZUlkPXRoaXMuX3NjZW5lLmRlZmF1bHRNYXRlcmlhbC51bmlxdWVJZCxlLm1hdGVyaWFsSWQ9dGhpcy5fc2NlbmUuZGVmYXVsdE1hdGVyaWFsLmlkKSx0aGlzLm1vcnBoVGFyZ2V0TWFuYWdlciYmKGUubW9ycGhUYXJnZXRNYW5hZ2VySWQ9dGhpcy5tb3JwaFRhcmdldE1hbmFnZXIudW5pcXVlSWQpLHRoaXMuc2tlbGV0b24mJihlLnNrZWxldG9uSWQ9dGhpcy5za2VsZXRvbi5pZCxlLm51bUJvbmVJbmZsdWVuY2Vycz10aGlzLm51bUJvbmVJbmZsdWVuY2VycyksdGhpcy5nZXRTY2VuZSgpLl9nZXRDb21wb25lbnQocS5OQU1FX1BIWVNJQ1NFTkdJTkUpKXtjb25zdCBpPXRoaXMuZ2V0UGh5c2ljc0ltcG9zdG9yKCk7aSYmKGUucGh5c2ljc01hc3M9aS5nZXRQYXJhbSgibWFzcyIpLGUucGh5c2ljc0ZyaWN0aW9uPWkuZ2V0UGFyYW0oImZyaWN0aW9uIiksZS5waHlzaWNzUmVzdGl0dXRpb249aS5nZXRQYXJhbSgibWFzcyIpLGUucGh5c2ljc0ltcG9zdG9yPWkudHlwZSl9dGhpcy5tZXRhZGF0YSYmKGUubWV0YWRhdGE9dGhpcy5tZXRhZGF0YSksZS5pbnN0YW5jZXM9W107Zm9yKGxldCBpPTA7aTx0aGlzLmluc3RhbmNlcy5sZW5ndGg7aSsrKXtjb25zdCBzPXRoaXMuaW5zdGFuY2VzW2ldO2lmKHMuZG9Ob3RTZXJpYWxpemUpY29udGludWU7Y29uc3Qgcj17bmFtZTpzLm5hbWUsaWQ6cy5pZCxpc0VuYWJsZWQ6cy5pc0VuYWJsZWQoITEpLGlzVmlzaWJsZTpzLmlzVmlzaWJsZSxpc1BpY2thYmxlOnMuaXNQaWNrYWJsZSxjaGVja0NvbGxpc2lvbnM6cy5jaGVja0NvbGxpc2lvbnMscG9zaXRpb246cy5wb3NpdGlvbi5hc0FycmF5KCksc2NhbGluZzpzLnNjYWxpbmcuYXNBcnJheSgpfTtpZihzLnBhcmVudCYmcy5wYXJlbnQuX3NlcmlhbGl6ZUFzUGFyZW50KHIpLHMucm90YXRpb25RdWF0ZXJuaW9uP3Iucm90YXRpb25RdWF0ZXJuaW9uPXMucm90YXRpb25RdWF0ZXJuaW9uLmFzQXJyYXkoKTpzLnJvdGF0aW9uJiYoci5yb3RhdGlvbj1zLnJvdGF0aW9uLmFzQXJyYXkoKSksdGhpcy5nZXRTY2VuZSgpLl9nZXRDb21wb25lbnQocS5OQU1FX1BIWVNJQ1NFTkdJTkUpKXtjb25zdCBuPXMuZ2V0UGh5c2ljc0ltcG9zdG9yKCk7biYmKHIucGh5c2ljc01hc3M9bi5nZXRQYXJhbSgibWFzcyIpLHIucGh5c2ljc0ZyaWN0aW9uPW4uZ2V0UGFyYW0oImZyaWN0aW9uIiksci5waHlzaWNzUmVzdGl0dXRpb249bi5nZXRQYXJhbSgibWFzcyIpLHIucGh5c2ljc0ltcG9zdG9yPW4udHlwZSl9cy5tZXRhZGF0YSYmKHIubWV0YWRhdGE9cy5tZXRhZGF0YSksZS5pbnN0YW5jZXMucHVzaChyKSxhZS5BcHBlbmRTZXJpYWxpemVkQW5pbWF0aW9ucyhzLHIpLHIucmFuZ2VzPXMuc2VyaWFsaXplQW5pbWF0aW9uUmFuZ2VzKCl9aWYodGhpcy5fdGhpbkluc3RhbmNlRGF0YVN0b3JhZ2UuaW5zdGFuY2VzQ291bnQmJnRoaXMuX3RoaW5JbnN0YW5jZURhdGFTdG9yYWdlLm1hdHJpeERhdGEmJihlLnRoaW5JbnN0YW5jZXM9e2luc3RhbmNlc0NvdW50OnRoaXMuX3RoaW5JbnN0YW5jZURhdGFTdG9yYWdlLmluc3RhbmNlc0NvdW50LG1hdHJpeERhdGE6QXJyYXkuZnJvbSh0aGlzLl90aGluSW5zdGFuY2VEYXRhU3RvcmFnZS5tYXRyaXhEYXRhKSxtYXRyaXhCdWZmZXJTaXplOnRoaXMuX3RoaW5JbnN0YW5jZURhdGFTdG9yYWdlLm1hdHJpeEJ1ZmZlclNpemUsZW5hYmxlUGlja2luZzp0aGlzLnRoaW5JbnN0YW5jZUVuYWJsZVBpY2tpbmd9LHRoaXMuX3VzZXJUaGluSW5zdGFuY2VCdWZmZXJzU3RvcmFnZSkpe2NvbnN0IGk9e2RhdGE6e30sc2l6ZXM6e30sc3RyaWRlczp7fX07Zm9yKGNvbnN0IHMgaW4gdGhpcy5fdXNlclRoaW5JbnN0YW5jZUJ1ZmZlcnNTdG9yYWdlLmRhdGEpaS5kYXRhW3NdPUFycmF5LmZyb20odGhpcy5fdXNlclRoaW5JbnN0YW5jZUJ1ZmZlcnNTdG9yYWdlLmRhdGFbc10pLGkuc2l6ZXNbc109dGhpcy5fdXNlclRoaW5JbnN0YW5jZUJ1ZmZlcnNTdG9yYWdlLnNpemVzW3NdLGkuc3RyaWRlc1tzXT10aGlzLl91c2VyVGhpbkluc3RhbmNlQnVmZmVyc1N0b3JhZ2Uuc3RyaWRlc1tzXTtlLnRoaW5JbnN0YW5jZXMudXNlclRoaW5JbnN0YW5jZT1pfXJldHVybiBhZS5BcHBlbmRTZXJpYWxpemVkQW5pbWF0aW9ucyh0aGlzLGUpLGUucmFuZ2VzPXRoaXMuc2VyaWFsaXplQW5pbWF0aW9uUmFuZ2VzKCksZS5sYXllck1hc2s9dGhpcy5sYXllck1hc2ssZS5hbHBoYUluZGV4PXRoaXMuYWxwaGFJbmRleCxlLmhhc1ZlcnRleEFscGhhPXRoaXMuaGFzVmVydGV4QWxwaGEsZS5vdmVybGF5QWxwaGE9dGhpcy5vdmVybGF5QWxwaGEsZS5vdmVybGF5Q29sb3I9dGhpcy5vdmVybGF5Q29sb3IuYXNBcnJheSgpLGUucmVuZGVyT3ZlcmxheT10aGlzLnJlbmRlck92ZXJsYXksZS5hcHBseUZvZz10aGlzLmFwcGx5Rm9nLHRoaXMuYWN0aW9uTWFuYWdlciYmKGUuYWN0aW9ucz10aGlzLmFjdGlvbk1hbmFnZXIuc2VyaWFsaXplKHRoaXMubmFtZSkpLGV9X3N5bmNHZW9tZXRyeVdpdGhNb3JwaFRhcmdldE1hbmFnZXIoKXtpZighdGhpcy5nZW9tZXRyeSlyZXR1cm47dGhpcy5fbWFya1N1Yk1lc2hlc0FzQXR0cmlidXRlc0RpcnR5KCk7Y29uc3QgZT10aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9tb3JwaFRhcmdldE1hbmFnZXI7aWYoZSYmZS52ZXJ0ZXhDb3VudCl7aWYoZS52ZXJ0ZXhDb3VudCE9PXRoaXMuZ2V0VG90YWxWZXJ0aWNlcygpKXtPLkVycm9yKCJNZXNoIGlzIGluY29tcGF0aWJsZSB3aXRoIG1vcnBoIHRhcmdldHMuIFRhcmdldHMgYW5kIG1lc2ggbXVzdCBhbGwgaGF2ZSB0aGUgc2FtZSB2ZXJ0aWNlcyBjb3VudC4iKSx0aGlzLm1vcnBoVGFyZ2V0TWFuYWdlcj1udWxsO3JldHVybn1pZihlLmlzVXNpbmdUZXh0dXJlRm9yVGFyZ2V0cylyZXR1cm47Zm9yKGxldCB0PTA7dDxlLm51bUluZmx1ZW5jZXJzO3QrKyl7Y29uc3QgaT1lLmdldEFjdGl2ZVRhcmdldCh0KSxzPWkuZ2V0UG9zaXRpb25zKCk7aWYoIXMpe08uRXJyb3IoIkludmFsaWQgbW9ycGggdGFyZ2V0LiBUYXJnZXQgbXVzdCBoYXZlIHBvc2l0aW9ucy4iKTtyZXR1cm59dGhpcy5nZW9tZXRyeS5zZXRWZXJ0aWNlc0RhdGEoZy5Qb3NpdGlvbktpbmQrdCxzLCExLDMpO2NvbnN0IHI9aS5nZXROb3JtYWxzKCk7ciYmdGhpcy5nZW9tZXRyeS5zZXRWZXJ0aWNlc0RhdGEoZy5Ob3JtYWxLaW5kK3QsciwhMSwzKTtjb25zdCBuPWkuZ2V0VGFuZ2VudHMoKTtuJiZ0aGlzLmdlb21ldHJ5LnNldFZlcnRpY2VzRGF0YShnLlRhbmdlbnRLaW5kK3QsbiwhMSwzKTtjb25zdCBhPWkuZ2V0VVZzKCk7YSYmdGhpcy5nZW9tZXRyeS5zZXRWZXJ0aWNlc0RhdGEoZy5VVktpbmQrIl8iK3QsYSwhMSwyKX19ZWxzZXtsZXQgdD0wO2Zvcig7dGhpcy5nZW9tZXRyeS5pc1ZlcnRpY2VzRGF0YVByZXNlbnQoZy5Qb3NpdGlvbktpbmQrdCk7KXRoaXMuZ2VvbWV0cnkucmVtb3ZlVmVydGljZXNEYXRhKGcuUG9zaXRpb25LaW5kK3QpLHRoaXMuZ2VvbWV0cnkuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuTm9ybWFsS2luZCt0KSYmdGhpcy5nZW9tZXRyeS5yZW1vdmVWZXJ0aWNlc0RhdGEoZy5Ob3JtYWxLaW5kK3QpLHRoaXMuZ2VvbWV0cnkuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuVGFuZ2VudEtpbmQrdCkmJnRoaXMuZ2VvbWV0cnkucmVtb3ZlVmVydGljZXNEYXRhKGcuVGFuZ2VudEtpbmQrdCksdGhpcy5nZW9tZXRyeS5pc1ZlcnRpY2VzRGF0YVByZXNlbnQoZy5VVktpbmQrdCkmJnRoaXMuZ2VvbWV0cnkucmVtb3ZlVmVydGljZXNEYXRhKGcuVVZLaW5kKyJfIit0KSx0Kyt9fXN0YXRpYyBQYXJzZShlLHQsaSl7bGV0IHM7aWYoZS50eXBlJiZlLnR5cGU9PT0iTGluZXNNZXNoIj9zPVcuX0xpbmVzTWVzaFBhcnNlcihlLHQpOmUudHlwZSYmZS50eXBlPT09Ikdyb3VuZE1lc2giP3M9Vy5fR3JvdW5kTWVzaFBhcnNlcihlLHQpOmUudHlwZSYmZS50eXBlPT09IkdvbGRiZXJnTWVzaCI/cz1XLl9Hb2xkYmVyZ01lc2hQYXJzZXIoZSx0KTpzPW5ldyBXKGUubmFtZSx0KSxzLmlkPWUuaWQscy5fd2FpdGluZ1BhcnNlZFVuaXF1ZUlkPWUudW5pcXVlSWQsZ2UmJmdlLkFkZFRhZ3NUbyhzLGUudGFncykscy5wb3NpdGlvbj1wLkZyb21BcnJheShlLnBvc2l0aW9uKSxlLm1ldGFkYXRhIT09dm9pZCAwJiYocy5tZXRhZGF0YT1lLm1ldGFkYXRhKSxlLnJvdGF0aW9uUXVhdGVybmlvbj9zLnJvdGF0aW9uUXVhdGVybmlvbj1aLkZyb21BcnJheShlLnJvdGF0aW9uUXVhdGVybmlvbik6ZS5yb3RhdGlvbiYmKHMucm90YXRpb249cC5Gcm9tQXJyYXkoZS5yb3RhdGlvbikpLHMuc2NhbGluZz1wLkZyb21BcnJheShlLnNjYWxpbmcpLGUubG9jYWxNYXRyaXg/cy5zZXRQcmVUcmFuc2Zvcm1NYXRyaXgoeC5Gcm9tQXJyYXkoZS5sb2NhbE1hdHJpeCkpOmUucGl2b3RNYXRyaXgmJnMuc2V0UGl2b3RNYXRyaXgoeC5Gcm9tQXJyYXkoZS5waXZvdE1hdHJpeCkpLHMuc2V0RW5hYmxlZChlLmlzRW5hYmxlZCkscy5pc1Zpc2libGU9ZS5pc1Zpc2libGUscy5pbmZpbml0ZURpc3RhbmNlPWUuaW5maW5pdGVEaXN0YW5jZSxzLnNob3dCb3VuZGluZ0JveD1lLnNob3dCb3VuZGluZ0JveCxzLnNob3dTdWJNZXNoZXNCb3VuZGluZ0JveD1lLnNob3dTdWJNZXNoZXNCb3VuZGluZ0JveCxlLmFwcGx5Rm9nIT09dm9pZCAwJiYocy5hcHBseUZvZz1lLmFwcGx5Rm9nKSxlLnBpY2thYmxlIT09dm9pZCAwJiYocy5pc1BpY2thYmxlPWUucGlja2FibGUpLGUuYWxwaGFJbmRleCE9PXZvaWQgMCYmKHMuYWxwaGFJbmRleD1lLmFscGhhSW5kZXgpLHMucmVjZWl2ZVNoYWRvd3M9ZS5yZWNlaXZlU2hhZG93cyxlLmJpbGxib2FyZE1vZGUhPT12b2lkIDAmJihzLmJpbGxib2FyZE1vZGU9ZS5iaWxsYm9hcmRNb2RlKSxlLnZpc2liaWxpdHkhPT12b2lkIDAmJihzLnZpc2liaWxpdHk9ZS52aXNpYmlsaXR5KSxzLmNoZWNrQ29sbGlzaW9ucz1lLmNoZWNrQ29sbGlzaW9ucyxzLm92ZXJyaWRlTWF0ZXJpYWxTaWRlT3JpZW50YXRpb249ZS5vdmVycmlkZU1hdGVyaWFsU2lkZU9yaWVudGF0aW9uLGUuaXNCbG9ja2VyIT09dm9pZCAwJiYocy5pc0Jsb2NrZXI9ZS5pc0Jsb2NrZXIpLHMuX3Nob3VsZEdlbmVyYXRlRmxhdFNoYWRpbmc9ZS51c2VGbGF0U2hhZGluZyxlLmZyZWV6ZVdvcmxkTWF0cml4JiYocy5fd2FpdGluZ0RhdGEuZnJlZXplV29ybGRNYXRyaXg9ZS5mcmVlemVXb3JsZE1hdHJpeCksZS5wYXJlbnRJZCE9PXZvaWQgMCYmKHMuX3dhaXRpbmdQYXJlbnRJZD1lLnBhcmVudElkKSxlLnBhcmVudEluc3RhbmNlSW5kZXghPT12b2lkIDAmJihzLl93YWl0aW5nUGFyZW50SW5zdGFuY2VJbmRleD1lLnBhcmVudEluc3RhbmNlSW5kZXgpLGUuYWN0aW9ucyE9PXZvaWQgMCYmKHMuX3dhaXRpbmdEYXRhLmFjdGlvbnM9ZS5hY3Rpb25zKSxlLm92ZXJsYXlBbHBoYSE9PXZvaWQgMCYmKHMub3ZlcmxheUFscGhhPWUub3ZlcmxheUFscGhhKSxlLm92ZXJsYXlDb2xvciE9PXZvaWQgMCYmKHMub3ZlcmxheUNvbG9yPXJlLkZyb21BcnJheShlLm92ZXJsYXlDb2xvcikpLGUucmVuZGVyT3ZlcmxheSE9PXZvaWQgMCYmKHMucmVuZGVyT3ZlcmxheT1lLnJlbmRlck92ZXJsYXkpLHMuaXNVbkluZGV4ZWQ9ISFlLmlzVW5JbmRleGVkLHMuaGFzVmVydGV4QWxwaGE9ZS5oYXNWZXJ0ZXhBbHBoYSxlLmRlbGF5TG9hZGluZ0ZpbGU/KHMuZGVsYXlMb2FkU3RhdGU9NCxzLmRlbGF5TG9hZGluZ0ZpbGU9aStlLmRlbGF5TG9hZGluZ0ZpbGUscy5idWlsZEJvdW5kaW5nSW5mbyhwLkZyb21BcnJheShlLmJvdW5kaW5nQm94TWluaW11bSkscC5Gcm9tQXJyYXkoZS5ib3VuZGluZ0JveE1heGltdW0pKSxlLl9iaW5hcnlJbmZvJiYocy5fYmluYXJ5SW5mbz1lLl9iaW5hcnlJbmZvKSxzLl9kZWxheUluZm89W10sZS5oYXNVVnMmJnMuX2RlbGF5SW5mby5wdXNoKGcuVVZLaW5kKSxlLmhhc1VWczImJnMuX2RlbGF5SW5mby5wdXNoKGcuVVYyS2luZCksZS5oYXNVVnMzJiZzLl9kZWxheUluZm8ucHVzaChnLlVWM0tpbmQpLGUuaGFzVVZzNCYmcy5fZGVsYXlJbmZvLnB1c2goZy5VVjRLaW5kKSxlLmhhc1VWczUmJnMuX2RlbGF5SW5mby5wdXNoKGcuVVY1S2luZCksZS5oYXNVVnM2JiZzLl9kZWxheUluZm8ucHVzaChnLlVWNktpbmQpLGUuaGFzQ29sb3JzJiZzLl9kZWxheUluZm8ucHVzaChnLkNvbG9yS2luZCksZS5oYXNNYXRyaWNlc0luZGljZXMmJnMuX2RlbGF5SW5mby5wdXNoKGcuTWF0cmljZXNJbmRpY2VzS2luZCksZS5oYXNNYXRyaWNlc1dlaWdodHMmJnMuX2RlbGF5SW5mby5wdXNoKGcuTWF0cmljZXNXZWlnaHRzS2luZCkscy5fZGVsYXlMb2FkaW5nRnVuY3Rpb249YXQuX0ltcG9ydEdlb21ldHJ5LE9lLkZvcmNlRnVsbFNjZW5lTG9hZGluZ0ZvckluY3JlbWVudGFsJiZzLl9jaGVja0RlbGF5U3RhdGUoKSk6YXQuX0ltcG9ydEdlb21ldHJ5KGUscyksZS5tYXRlcmlhbFVuaXF1ZUlkP3MuX3dhaXRpbmdNYXRlcmlhbElkPWUubWF0ZXJpYWxVbmlxdWVJZDplLm1hdGVyaWFsSWQmJihzLl93YWl0aW5nTWF0ZXJpYWxJZD1lLm1hdGVyaWFsSWQpLGUubW9ycGhUYXJnZXRNYW5hZ2VySWQ+LTEmJihzLm1vcnBoVGFyZ2V0TWFuYWdlcj10LmdldE1vcnBoVGFyZ2V0TWFuYWdlckJ5SWQoZS5tb3JwaFRhcmdldE1hbmFnZXJJZCkpLGUuc2tlbGV0b25JZCE9PXZvaWQgMCYmZS5za2VsZXRvbklkIT09bnVsbCYmKHMuc2tlbGV0b249dC5nZXRMYXN0U2tlbGV0b25CeUlkKGUuc2tlbGV0b25JZCksZS5udW1Cb25lSW5mbHVlbmNlcnMmJihzLm51bUJvbmVJbmZsdWVuY2Vycz1lLm51bUJvbmVJbmZsdWVuY2VycykpLGUuYW5pbWF0aW9ucyl7Zm9yKGxldCByPTA7cjxlLmFuaW1hdGlvbnMubGVuZ3RoO3IrKyl7Y29uc3Qgbj1lLmFuaW1hdGlvbnNbcl0sYT1yaSgiQkFCWUxPTi5BbmltYXRpb24iKTthJiZzLmFuaW1hdGlvbnMucHVzaChhLlBhcnNlKG4pKX16ZS5QYXJzZUFuaW1hdGlvblJhbmdlcyhzLGUsdCl9aWYoZS5hdXRvQW5pbWF0ZSYmdC5iZWdpbkFuaW1hdGlvbihzLGUuYXV0b0FuaW1hdGVGcm9tLGUuYXV0b0FuaW1hdGVUbyxlLmF1dG9BbmltYXRlTG9vcCxlLmF1dG9BbmltYXRlU3BlZWR8fDEpLGUubGF5ZXJNYXNrJiYhaXNOYU4oZS5sYXllck1hc2spP3MubGF5ZXJNYXNrPU1hdGguYWJzKHBhcnNlSW50KGUubGF5ZXJNYXNrKSk6cy5sYXllck1hc2s9MjY4NDM1NDU1LGUucGh5c2ljc0ltcG9zdG9yJiZXLl9QaHlzaWNzSW1wb3N0b3JQYXJzZXIodCxzLGUpLGUubG9kTWVzaElkcyYmKHMuX3dhaXRpbmdEYXRhLmxvZHM9e2lkczplLmxvZE1lc2hJZHMsZGlzdGFuY2VzOmUubG9kRGlzdGFuY2VzP2UubG9kRGlzdGFuY2VzOm51bGwsY292ZXJhZ2VzOmUubG9kQ292ZXJhZ2VzP2UubG9kQ292ZXJhZ2VzOm51bGx9KSxlLmluc3RhbmNlcylmb3IobGV0IHI9MDtyPGUuaW5zdGFuY2VzLmxlbmd0aDtyKyspe2NvbnN0IG49ZS5pbnN0YW5jZXNbcl0sYT1zLmNyZWF0ZUluc3RhbmNlKG4ubmFtZSk7aWYobi5pZCYmKGEuaWQ9bi5pZCksZ2UmJihuLnRhZ3M/Z2UuQWRkVGFnc1RvKGEsbi50YWdzKTpnZS5BZGRUYWdzVG8oYSxlLnRhZ3MpKSxhLnBvc2l0aW9uPXAuRnJvbUFycmF5KG4ucG9zaXRpb24pLG4ubWV0YWRhdGEhPT12b2lkIDAmJihhLm1ldGFkYXRhPW4ubWV0YWRhdGEpLG4ucGFyZW50SWQhPT12b2lkIDAmJihhLl93YWl0aW5nUGFyZW50SWQ9bi5wYXJlbnRJZCksbi5wYXJlbnRJbnN0YW5jZUluZGV4IT09dm9pZCAwJiYoYS5fd2FpdGluZ1BhcmVudEluc3RhbmNlSW5kZXg9bi5wYXJlbnRJbnN0YW5jZUluZGV4KSxuLmlzRW5hYmxlZCE9PXZvaWQgMCYmbi5pc0VuYWJsZWQhPT1udWxsJiZhLnNldEVuYWJsZWQobi5pc0VuYWJsZWQpLG4uaXNWaXNpYmxlIT09dm9pZCAwJiZuLmlzVmlzaWJsZSE9PW51bGwmJihhLmlzVmlzaWJsZT1uLmlzVmlzaWJsZSksbi5pc1BpY2thYmxlIT09dm9pZCAwJiZuLmlzUGlja2FibGUhPT1udWxsJiYoYS5pc1BpY2thYmxlPW4uaXNQaWNrYWJsZSksbi5yb3RhdGlvblF1YXRlcm5pb24/YS5yb3RhdGlvblF1YXRlcm5pb249Wi5Gcm9tQXJyYXkobi5yb3RhdGlvblF1YXRlcm5pb24pOm4ucm90YXRpb24mJihhLnJvdGF0aW9uPXAuRnJvbUFycmF5KG4ucm90YXRpb24pKSxhLnNjYWxpbmc9cC5Gcm9tQXJyYXkobi5zY2FsaW5nKSxuLmNoZWNrQ29sbGlzaW9ucyE9bnVsbCYmbi5jaGVja0NvbGxpc2lvbnMhPW51bGwmJihhLmNoZWNrQ29sbGlzaW9ucz1uLmNoZWNrQ29sbGlzaW9ucyksbi5waWNrYWJsZSE9bnVsbCYmbi5waWNrYWJsZSE9bnVsbCYmKGEuaXNQaWNrYWJsZT1uLnBpY2thYmxlKSxuLnNob3dCb3VuZGluZ0JveCE9bnVsbCYmbi5zaG93Qm91bmRpbmdCb3ghPW51bGwmJihhLnNob3dCb3VuZGluZ0JveD1uLnNob3dCb3VuZGluZ0JveCksbi5zaG93U3ViTWVzaGVzQm91bmRpbmdCb3ghPW51bGwmJm4uc2hvd1N1Yk1lc2hlc0JvdW5kaW5nQm94IT1udWxsJiYoYS5zaG93U3ViTWVzaGVzQm91bmRpbmdCb3g9bi5zaG93U3ViTWVzaGVzQm91bmRpbmdCb3gpLG4uYWxwaGFJbmRleCE9bnVsbCYmbi5zaG93U3ViTWVzaGVzQm91bmRpbmdCb3ghPW51bGwmJihhLmFscGhhSW5kZXg9bi5hbHBoYUluZGV4KSxuLnBoeXNpY3NJbXBvc3RvciYmVy5fUGh5c2ljc0ltcG9zdG9yUGFyc2VyKHQsYSxuKSxuLmFuaW1hdGlvbnMpe2ZvcihsZXQgbz0wO288bi5hbmltYXRpb25zLmxlbmd0aDtvKyspe2NvbnN0IGg9bi5hbmltYXRpb25zW29dLGw9cmkoIkJBQllMT04uQW5pbWF0aW9uIik7bCYmYS5hbmltYXRpb25zLnB1c2gobC5QYXJzZShoKSl9emUuUGFyc2VBbmltYXRpb25SYW5nZXMoYSxuLHQpLG4uYXV0b0FuaW1hdGUmJnQuYmVnaW5BbmltYXRpb24oYSxuLmF1dG9BbmltYXRlRnJvbSxuLmF1dG9BbmltYXRlVG8sbi5hdXRvQW5pbWF0ZUxvb3Asbi5hdXRvQW5pbWF0ZVNwZWVkfHwxKX19aWYoZS50aGluSW5zdGFuY2VzKXtjb25zdCByPWUudGhpbkluc3RhbmNlcztpZihzLnRoaW5JbnN0YW5jZUVuYWJsZVBpY2tpbmc9ISFyLmVuYWJsZVBpY2tpbmcsci5tYXRyaXhEYXRhPyhzLnRoaW5JbnN0YW5jZVNldEJ1ZmZlcigibWF0cml4IixuZXcgRmxvYXQzMkFycmF5KHIubWF0cml4RGF0YSksMTYsITEpLHMuX3RoaW5JbnN0YW5jZURhdGFTdG9yYWdlLm1hdHJpeEJ1ZmZlclNpemU9ci5tYXRyaXhCdWZmZXJTaXplLHMuX3RoaW5JbnN0YW5jZURhdGFTdG9yYWdlLmluc3RhbmNlc0NvdW50PXIuaW5zdGFuY2VzQ291bnQpOnMuX3RoaW5JbnN0YW5jZURhdGFTdG9yYWdlLm1hdHJpeEJ1ZmZlclNpemU9ci5tYXRyaXhCdWZmZXJTaXplLGUudGhpbkluc3RhbmNlcy51c2VyVGhpbkluc3RhbmNlKXtjb25zdCBuPWUudGhpbkluc3RhbmNlcy51c2VyVGhpbkluc3RhbmNlO2Zvcihjb25zdCBhIGluIG4uZGF0YSlzLnRoaW5JbnN0YW5jZVNldEJ1ZmZlcihhLG5ldyBGbG9hdDMyQXJyYXkobi5kYXRhW2FdKSxuLnN0cmlkZXNbYV0sITEpLHMuX3VzZXJUaGluSW5zdGFuY2VCdWZmZXJzU3RvcmFnZS5zaXplc1thXT1uLnNpemVzW2FdfX1yZXR1cm4gc31zZXRQb3NpdGlvbnNGb3JDUFVTa2lubmluZygpe2NvbnN0IGU9dGhpcy5faW50ZXJuYWxNZXNoRGF0YUluZm87aWYoIWUuX3NvdXJjZVBvc2l0aW9ucyl7Y29uc3QgdD10aGlzLmdldFZlcnRpY2VzRGF0YShnLlBvc2l0aW9uS2luZCk7aWYoIXQpcmV0dXJuIGUuX3NvdXJjZVBvc2l0aW9ucztlLl9zb3VyY2VQb3NpdGlvbnM9bmV3IEZsb2F0MzJBcnJheSh0KSx0aGlzLmlzVmVydGV4QnVmZmVyVXBkYXRhYmxlKGcuUG9zaXRpb25LaW5kKXx8dGhpcy5zZXRWZXJ0aWNlc0RhdGEoZy5Qb3NpdGlvbktpbmQsdCwhMCl9cmV0dXJuIGUuX3NvdXJjZVBvc2l0aW9uc31zZXROb3JtYWxzRm9yQ1BVU2tpbm5pbmcoKXtjb25zdCBlPXRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvO2lmKCFlLl9zb3VyY2VOb3JtYWxzKXtjb25zdCB0PXRoaXMuZ2V0VmVydGljZXNEYXRhKGcuTm9ybWFsS2luZCk7aWYoIXQpcmV0dXJuIGUuX3NvdXJjZU5vcm1hbHM7ZS5fc291cmNlTm9ybWFscz1uZXcgRmxvYXQzMkFycmF5KHQpLHRoaXMuaXNWZXJ0ZXhCdWZmZXJVcGRhdGFibGUoZy5Ob3JtYWxLaW5kKXx8dGhpcy5zZXRWZXJ0aWNlc0RhdGEoZy5Ob3JtYWxLaW5kLHQsITApfXJldHVybiBlLl9zb3VyY2VOb3JtYWxzfWFwcGx5U2tlbGV0b24oZSl7aWYoIXRoaXMuZ2VvbWV0cnkpcmV0dXJuIHRoaXM7aWYodGhpcy5nZW9tZXRyeS5fc29mdHdhcmVTa2lubmluZ0ZyYW1lSWQ9PXRoaXMuZ2V0U2NlbmUoKS5nZXRGcmFtZUlkKCkpcmV0dXJuIHRoaXM7aWYodGhpcy5nZW9tZXRyeS5fc29mdHdhcmVTa2lubmluZ0ZyYW1lSWQ9dGhpcy5nZXRTY2VuZSgpLmdldEZyYW1lSWQoKSwhdGhpcy5pc1ZlcnRpY2VzRGF0YVByZXNlbnQoZy5Qb3NpdGlvbktpbmQpKXJldHVybiB0aGlzO2lmKCF0aGlzLmlzVmVydGljZXNEYXRhUHJlc2VudChnLk1hdHJpY2VzSW5kaWNlc0tpbmQpKXJldHVybiB0aGlzO2lmKCF0aGlzLmlzVmVydGljZXNEYXRhUHJlc2VudChnLk1hdHJpY2VzV2VpZ2h0c0tpbmQpKXJldHVybiB0aGlzO2NvbnN0IHQ9dGhpcy5pc1ZlcnRpY2VzRGF0YVByZXNlbnQoZy5Ob3JtYWxLaW5kKSxpPXRoaXMuX2ludGVybmFsTWVzaERhdGFJbmZvO2lmKCFpLl9zb3VyY2VQb3NpdGlvbnMpe2NvbnN0IHY9dGhpcy5zdWJNZXNoZXMuc2xpY2UoKTt0aGlzLnNldFBvc2l0aW9uc0ZvckNQVVNraW5uaW5nKCksdGhpcy5zdWJNZXNoZXM9dn10JiYhaS5fc291cmNlTm9ybWFscyYmdGhpcy5zZXROb3JtYWxzRm9yQ1BVU2tpbm5pbmcoKTtsZXQgcz10aGlzLmdldFZlcnRpY2VzRGF0YShnLlBvc2l0aW9uS2luZCk7aWYoIXMpcmV0dXJuIHRoaXM7cyBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheXx8KHM9bmV3IEZsb2F0MzJBcnJheShzKSk7bGV0IHI9dGhpcy5nZXRWZXJ0aWNlc0RhdGEoZy5Ob3JtYWxLaW5kKTtpZih0KXtpZighcilyZXR1cm4gdGhpcztyIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5fHwocj1uZXcgRmxvYXQzMkFycmF5KHIpKX1jb25zdCBuPXRoaXMuZ2V0VmVydGljZXNEYXRhKGcuTWF0cmljZXNJbmRpY2VzS2luZCksYT10aGlzLmdldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzV2VpZ2h0c0tpbmQpO2lmKCFhfHwhbilyZXR1cm4gdGhpcztjb25zdCBvPXRoaXMubnVtQm9uZUluZmx1ZW5jZXJzPjQsaD1vP3RoaXMuZ2V0VmVydGljZXNEYXRhKGcuTWF0cmljZXNJbmRpY2VzRXh0cmFLaW5kKTpudWxsLGw9bz90aGlzLmdldFZlcnRpY2VzRGF0YShnLk1hdHJpY2VzV2VpZ2h0c0V4dHJhS2luZCk6bnVsbCx1PWUuZ2V0VHJhbnNmb3JtTWF0cmljZXModGhpcyksZD1wLlplcm8oKSxmPW5ldyB4LF89bmV3IHg7bGV0IEU9MCxtO2ZvcihsZXQgdj0wO3Y8cy5sZW5ndGg7dis9MyxFKz00KXtsZXQgUztmb3IobT0wO208NDttKyspUz1hW0UrbV0sUz4wJiYoeC5Gcm9tRmxvYXQzMkFycmF5VG9SZWZTY2FsZWQodSxNYXRoLmZsb29yKG5bRSttXSoxNiksUyxfKSxmLmFkZFRvU2VsZihfKSk7aWYobylmb3IobT0wO208NDttKyspUz1sW0UrbV0sUz4wJiYoeC5Gcm9tRmxvYXQzMkFycmF5VG9SZWZTY2FsZWQodSxNYXRoLmZsb29yKGhbRSttXSoxNiksUyxfKSxmLmFkZFRvU2VsZihfKSk7cC5UcmFuc2Zvcm1Db29yZGluYXRlc0Zyb21GbG9hdHNUb1JlZihpLl9zb3VyY2VQb3NpdGlvbnNbdl0saS5fc291cmNlUG9zaXRpb25zW3YrMV0saS5fc291cmNlUG9zaXRpb25zW3YrMl0sZixkKSxkLnRvQXJyYXkocyx2KSx0JiYocC5UcmFuc2Zvcm1Ob3JtYWxGcm9tRmxvYXRzVG9SZWYoaS5fc291cmNlTm9ybWFsc1t2XSxpLl9zb3VyY2VOb3JtYWxzW3YrMV0saS5fc291cmNlTm9ybWFsc1t2KzJdLGYsZCksZC50b0FycmF5KHIsdikpLGYucmVzZXQoKX1yZXR1cm4gdGhpcy51cGRhdGVWZXJ0aWNlc0RhdGEoZy5Qb3NpdGlvbktpbmQscyksdCYmdGhpcy51cGRhdGVWZXJ0aWNlc0RhdGEoZy5Ob3JtYWxLaW5kLHIpLHRoaXN9c3RhdGljIE1pbk1heChlKXtsZXQgdD1udWxsLGk9bnVsbDtyZXR1cm4gZS5mb3JFYWNoKGZ1bmN0aW9uKHMpe2NvbnN0IG49cy5nZXRCb3VuZGluZ0luZm8oKS5ib3VuZGluZ0JveDshdHx8IWk/KHQ9bi5taW5pbXVtV29ybGQsaT1uLm1heGltdW1Xb3JsZCk6KHQubWluaW1pemVJblBsYWNlKG4ubWluaW11bVdvcmxkKSxpLm1heGltaXplSW5QbGFjZShuLm1heGltdW1Xb3JsZCkpfSksIXR8fCFpP3ttaW46cC5aZXJvKCksbWF4OnAuWmVybygpfTp7bWluOnQsbWF4Oml9fXN0YXRpYyBDZW50ZXIoZSl7Y29uc3QgdD1lIGluc3RhbmNlb2YgQXJyYXk/Vy5NaW5NYXgoZSk6ZTtyZXR1cm4gcC5DZW50ZXIodC5taW4sdC5tYXgpfXN0YXRpYyBNZXJnZU1lc2hlcyhlLHQ9ITAsaSxzLHIsbil7cmV0dXJuIFBzKFcuX01lcmdlTWVzaGVzQ29yb3V0aW5lKGUsdCxpLHMscixuLCExKSl9c3RhdGljIE1lcmdlTWVzaGVzQXN5bmMoZSx0PSEwLGkscyxyLG4pe3JldHVybiBPbihXLl9NZXJnZU1lc2hlc0Nvcm91dGluZShlLHQsaSxzLHIsbiwhMCksd24oKSl9c3RhdGljKl9NZXJnZU1lc2hlc0Nvcm91dGluZShlLHQ9ITAsaSxzLHIsbixhKXtpZihlPWUuZmlsdGVyKEJvb2xlYW4pLGUubGVuZ3RoPT09MClyZXR1cm4gbnVsbDtsZXQgbztpZighaSl7bGV0IE09MDtmb3Iobz0wO288ZS5sZW5ndGg7bysrKWlmKE0rPWVbb10uZ2V0VG90YWxWZXJ0aWNlcygpLE0+PTY1NTM2KXJldHVybiBPLldhcm4oIkNhbm5vdCBtZXJnZSBtZXNoZXMgYmVjYXVzZSByZXN1bHRpbmcgbWVzaCB3aWxsIGhhdmUgbW9yZSB0aGFuIDY1NTM2IHZlcnRpY2VzLiBQbGVhc2UgdXNlIGFsbG93MzJCaXRzSW5kaWNlcyA9IHRydWUgdG8gdXNlIDMyIGJpdHMgaW5kaWNlcyIpLG51bGx9biYmKHI9ITEpO2NvbnN0IGg9bmV3IEFycmF5LGw9bmV3IEFycmF5LHU9bmV3IEFycmF5LGQ9ZVswXS5vdmVycmlkZU1hdGVyaWFsU2lkZU9yaWVudGF0aW9uO2ZvcihvPTA7bzxlLmxlbmd0aDtvKyspe2NvbnN0IE09ZVtvXTtpZihNLmlzQW5JbnN0YW5jZSlyZXR1cm4gTy5XYXJuKCJDYW5ub3QgbWVyZ2UgaW5zdGFuY2UgbWVzaGVzLiIpLG51bGw7aWYoZCE9PU0ub3ZlcnJpZGVNYXRlcmlhbFNpZGVPcmllbnRhdGlvbilyZXR1cm4gTy5XYXJuKCJDYW5ub3QgbWVyZ2UgbWVzaGVzIHdpdGggZGlmZmVyZW50IG92ZXJyaWRlTWF0ZXJpYWxTaWRlT3JpZW50YXRpb24gdmFsdWVzLiIpLG51bGw7aWYociYmdS5wdXNoKE0uZ2V0VG90YWxJbmRpY2VzKCkpLG4paWYoTS5tYXRlcmlhbCl7Y29uc3QgTD1NLm1hdGVyaWFsO2lmKEwgaW5zdGFuY2VvZiBTaSl7Zm9yKGxldCBrPTA7azxMLnN1Yk1hdGVyaWFscy5sZW5ndGg7aysrKWguaW5kZXhPZihMLnN1Yk1hdGVyaWFsc1trXSk8MCYmaC5wdXNoKEwuc3ViTWF0ZXJpYWxzW2tdKTtmb3IobGV0IGs9MDtrPE0uc3ViTWVzaGVzLmxlbmd0aDtrKyspbC5wdXNoKGguaW5kZXhPZihMLnN1Yk1hdGVyaWFsc1tNLnN1Yk1lc2hlc1trXS5tYXRlcmlhbEluZGV4XSkpLHUucHVzaChNLnN1Yk1lc2hlc1trXS5pbmRleENvdW50KX1lbHNle2guaW5kZXhPZihMKTwwJiZoLnB1c2goTCk7Zm9yKGxldCBrPTA7azxNLnN1Yk1lc2hlcy5sZW5ndGg7aysrKWwucHVzaChoLmluZGV4T2YoTCkpLHUucHVzaChNLnN1Yk1lc2hlc1trXS5pbmRleENvdW50KX19ZWxzZSBmb3IobGV0IEw9MDtMPE0uc3ViTWVzaGVzLmxlbmd0aDtMKyspbC5wdXNoKDApLHUucHVzaChNLnN1Yk1lc2hlc1tMXS5pbmRleENvdW50KX1jb25zdCBmPWVbMF0sXz1NPT57Y29uc3QgTD1NLmNvbXB1dGVXb3JsZE1hdHJpeCghMCk7cmV0dXJuW2VlLkV4dHJhY3RGcm9tTWVzaChNLCExLCExKSxMXX0sW0UsbV09XyhmKTthJiYoeWllbGQpO2NvbnN0IHY9bmV3IEFycmF5KGUubGVuZ3RoLTEpO2ZvcihsZXQgTT0xO008ZS5sZW5ndGg7TSsrKXZbTS0xXT1fKGVbTV0pLGEmJih5aWVsZCk7Y29uc3QgUz1FLl9tZXJnZUNvcm91dGluZShtLHYsaSxhLCF0KTtsZXQgeT1TLm5leHQoKTtmb3IoOyF5LmRvbmU7KWEmJih5aWVsZCkseT1TLm5leHQoKTtjb25zdCBBPXkudmFsdWU7c3x8KHM9bmV3IFcoZi5uYW1lKyJfbWVyZ2VkIixmLmdldFNjZW5lKCkpKTtjb25zdCBDPUEuX2FwcGx5VG9Db3JvdXRpbmUocyx2b2lkIDAsYSk7bGV0IGI9Qy5uZXh0KCk7Zm9yKDshYi5kb25lOylhJiYoeWllbGQpLGI9Qy5uZXh0KCk7aWYocy5jaGVja0NvbGxpc2lvbnM9Zi5jaGVja0NvbGxpc2lvbnMscy5vdmVycmlkZU1hdGVyaWFsU2lkZU9yaWVudGF0aW9uPWYub3ZlcnJpZGVNYXRlcmlhbFNpZGVPcmllbnRhdGlvbix0KWZvcihvPTA7bzxlLmxlbmd0aDtvKyspZVtvXS5kaXNwb3NlKCk7aWYocnx8bil7cy5yZWxlYXNlU3ViTWVzaGVzKCksbz0wO2xldCBNPTA7Zm9yKDtvPHUubGVuZ3RoOyl2dC5DcmVhdGVGcm9tSW5kaWNlcygwLE0sdVtvXSxzLHZvaWQgMCwhMSksTSs9dVtvXSxvKys7Zm9yKGNvbnN0IEwgb2Ygcy5zdWJNZXNoZXMpTC5yZWZyZXNoQm91bmRpbmdJbmZvKCk7cy5jb21wdXRlV29ybGRNYXRyaXgoITApfWlmKG4pe2NvbnN0IE09bmV3IFNpKGYubmFtZSsiX21lcmdlZCIsZi5nZXRTY2VuZSgpKTtNLnN1Yk1hdGVyaWFscz1oO2ZvcihsZXQgTD0wO0w8cy5zdWJNZXNoZXMubGVuZ3RoO0wrKylzLnN1Yk1lc2hlc1tMXS5tYXRlcmlhbEluZGV4PWxbTF07cy5tYXRlcmlhbD1NfWVsc2Ugcy5tYXRlcmlhbD1mLm1hdGVyaWFsO3JldHVybiBzfWFkZEluc3RhbmNlKGUpe2UuX2luZGV4SW5Tb3VyY2VNZXNoSW5zdGFuY2VBcnJheT10aGlzLmluc3RhbmNlcy5sZW5ndGgsdGhpcy5pbnN0YW5jZXMucHVzaChlKX1yZW1vdmVJbnN0YW5jZShlKXtjb25zdCB0PWUuX2luZGV4SW5Tb3VyY2VNZXNoSW5zdGFuY2VBcnJheTtpZih0IT0tMSl7aWYodCE9PXRoaXMuaW5zdGFuY2VzLmxlbmd0aC0xKXtjb25zdCBpPXRoaXMuaW5zdGFuY2VzW3RoaXMuaW5zdGFuY2VzLmxlbmd0aC0xXTt0aGlzLmluc3RhbmNlc1t0XT1pLGkuX2luZGV4SW5Tb3VyY2VNZXNoSW5zdGFuY2VBcnJheT10fWUuX2luZGV4SW5Tb3VyY2VNZXNoSW5zdGFuY2VBcnJheT0tMSx0aGlzLmluc3RhbmNlcy5wb3AoKX19X3Nob3VsZENvbnZlcnRSSFMoKXtyZXR1cm4gdGhpcy5vdmVycmlkZU1hdGVyaWFsU2lkZU9yaWVudGF0aW9uPT09UC5Db3VudGVyQ2xvY2tXaXNlU2lkZU9yaWVudGF0aW9ufX1XLkZST05UU0lERT1lZS5GUk9OVFNJREUsVy5CQUNLU0lERT1lZS5CQUNLU0lERSxXLkRPVUJMRVNJREU9ZWUuRE9VQkxFU0lERSxXLkRFRkFVTFRTSURFPWVlLkRFRkFVTFRTSURFLFcuTk9fQ0FQPTAsVy5DQVBfU1RBUlQ9MSxXLkNBUF9FTkQ9MixXLkNBUF9BTEw9MyxXLk5PX0ZMSVA9MCxXLkZMSVBfVElMRT0xLFcuUk9UQVRFX1RJTEU9MixXLkZMSVBfUk9XPTMsVy5ST1RBVEVfUk9XPTQsVy5GTElQX05fUk9UQVRFX1RJTEU9NSxXLkZMSVBfTl9ST1RBVEVfUk9XPTYsVy5DRU5URVI9MCxXLkxFRlQ9MSxXLlJJR0hUPTIsVy5UT1A9MyxXLkJPVFRPTT00LFcuSU5TVEFOQ0VETUVTSF9TT1JUX1RSQU5TUEFSRU5UPSExLFcuX0dyb3VuZE1lc2hQYXJzZXI9KGMsZSk9Pnt0aHJvdyAkKCJHcm91bmRNZXNoIil9LFcuX0dvbGRiZXJnTWVzaFBhcnNlcj0oYyxlKT0+e3Rocm93ICQoIkdvbGRiZXJnTWVzaCIpfSxXLl9MaW5lc01lc2hQYXJzZXI9KGMsZSk9Pnt0aHJvdyAkKCJMaW5lc01lc2giKX0saXQoIkJBQllMT04uTWVzaCIsVyksVy5wcm90b3R5cGUuc2V0TWF0ZXJpYWxCeUlEPWZ1bmN0aW9uKGMpe3JldHVybiB0aGlzLnNldE1hdGVyaWFsQnlJZChjKX0sVy5DcmVhdGVEaXNjPVcuQ3JlYXRlRGlzY3x8KCgpPT57dGhyb3cgbmV3IEVycm9yKCJJbXBvcnQgTWVzaEJ1aWxkZXIgdG8gcG9wdWxhdGUgdGhpcyBmdW5jdGlvbiIpfSksVy5DcmVhdGVCb3g9Vy5DcmVhdGVCb3h8fCgoKT0+e3Rocm93IG5ldyBFcnJvcigiSW1wb3J0IE1lc2hCdWlsZGVyIHRvIHBvcHVsYXRlIHRoaXMgZnVuY3Rpb24iKX0pLFcuQ3JlYXRlU3BoZXJlPVcuQ3JlYXRlU3BoZXJlfHwoKCk9Pnt0aHJvdyBuZXcgRXJyb3IoIkltcG9ydCBNZXNoQnVpbGRlciB0byBwb3B1bGF0ZSB0aGlzIGZ1bmN0aW9uIil9KSxXLkNyZWF0ZUN5bGluZGVyPVcuQ3JlYXRlQ3lsaW5kZXJ8fCgoKT0+e3Rocm93IG5ldyBFcnJvcigiSW1wb3J0IE1lc2hCdWlsZGVyIHRvIHBvcHVsYXRlIHRoaXMgZnVuY3Rpb24iKX0pLFcuQ3JlYXRlVG9ydXNLbm90PVcuQ3JlYXRlVG9ydXNLbm90fHwoKCk9Pnt0aHJvdyBuZXcgRXJyb3IoIkltcG9ydCBNZXNoQnVpbGRlciB0byBwb3B1bGF0ZSB0aGlzIGZ1bmN0aW9uIil9KSxXLkNyZWF0ZVRvcnVzPVcuQ3JlYXRlVG9ydXN8fCgoKT0+e3Rocm93IG5ldyBFcnJvcigiSW1wb3J0IE1lc2hCdWlsZGVyIHRvIHBvcHVsYXRlIHRoaXMgZnVuY3Rpb24iKX0pLFcuQ3JlYXRlUGxhbmU9Vy5DcmVhdGVQbGFuZXx8KCgpPT57dGhyb3cgbmV3IEVycm9yKCJJbXBvcnQgTWVzaEJ1aWxkZXIgdG8gcG9wdWxhdGUgdGhpcyBmdW5jdGlvbiIpfSksVy5DcmVhdGVHcm91bmQ9Vy5DcmVhdGVHcm91bmR8fCgoKT0+e3Rocm93IG5ldyBFcnJvcigiSW1wb3J0IE1lc2hCdWlsZGVyIHRvIHBvcHVsYXRlIHRoaXMgZnVuY3Rpb24iKX0pLFcuQ3JlYXRlVGlsZWRHcm91bmQ9Vy5DcmVhdGVUaWxlZEdyb3VuZHx8KCgpPT57dGhyb3cgbmV3IEVycm9yKCJJbXBvcnQgTWVzaEJ1aWxkZXIgdG8gcG9wdWxhdGUgdGhpcyBmdW5jdGlvbiIpfSksVy5DcmVhdGVHcm91bmRGcm9tSGVpZ2h0TWFwPVcuQ3JlYXRlR3JvdW5kRnJvbUhlaWdodE1hcHx8KCgpPT57dGhyb3cgbmV3IEVycm9yKCJJbXBvcnQgTWVzaEJ1aWxkZXIgdG8gcG9wdWxhdGUgdGhpcyBmdW5jdGlvbiIpfSksVy5DcmVhdGVUdWJlPVcuQ3JlYXRlVHViZXx8KCgpPT57dGhyb3cgbmV3IEVycm9yKCJJbXBvcnQgTWVzaEJ1aWxkZXIgdG8gcG9wdWxhdGUgdGhpcyBmdW5jdGlvbiIpfSksVy5DcmVhdGVQb2x5aGVkcm9uPVcuQ3JlYXRlUG9seWhlZHJvbnx8KCgpPT57dGhyb3cgbmV3IEVycm9yKCJJbXBvcnQgTWVzaEJ1aWxkZXIgdG8gcG9wdWxhdGUgdGhpcyBmdW5jdGlvbiIpfSksVy5DcmVhdGVJY29TcGhlcmU9Vy5DcmVhdGVJY29TcGhlcmV8fCgoKT0+e3Rocm93IG5ldyBFcnJvcigiSW1wb3J0IE1lc2hCdWlsZGVyIHRvIHBvcHVsYXRlIHRoaXMgZnVuY3Rpb24iKX0pLFcuQ3JlYXRlRGVjYWw9Vy5DcmVhdGVEZWNhbHx8KCgpPT57dGhyb3cgbmV3IEVycm9yKCJJbXBvcnQgTWVzaEJ1aWxkZXIgdG8gcG9wdWxhdGUgdGhpcyBmdW5jdGlvbiIpfSksVy5DcmVhdGVDYXBzdWxlPVcuQ3JlYXRlQ2Fwc3VsZXx8KCgpPT57dGhyb3cgbmV3IEVycm9yKCJJbXBvcnQgTWVzaEJ1aWxkZXIgdG8gcG9wdWxhdGUgdGhpcyBmdW5jdGlvbiIpfSksVy5FeHRlbmRUb0dvbGRiZXJnPVcuRXh0ZW5kVG9Hb2xkYmVyZ3x8KCgpPT57dGhyb3cgbmV3IEVycm9yKCJJbXBvcnQgTWVzaEJ1aWxkZXIgdG8gcG9wdWxhdGUgdGhpcyBmdW5jdGlvbiIpfSk7Y2xhc3MgenR7Y29uc3RydWN0b3IoZT0wKXt0aGlzLnByaW9yaXR5PWV9Z2V0RGVzY3JpcHRpb24oKXtyZXR1cm4iIn1hcHBseShlLHQpe3JldHVybiEwfX1jbGFzcyBMcyBleHRlbmRzIHp0e2NvbnN0cnVjdG9yKGU9MCx0PTEwMjQsaT0uNSl7c3VwZXIoZSksdGhpcy5wcmlvcml0eT1lLHRoaXMubWF4aW11bVNpemU9dCx0aGlzLnN0ZXA9aX1nZXREZXNjcmlwdGlvbigpe3JldHVybiJSZWR1Y2luZyByZW5kZXIgdGFyZ2V0IHRleHR1cmUgc2l6ZSB0byAiK3RoaXMubWF4aW11bVNpemV9YXBwbHkoZSx0KXtsZXQgaT0hMDtmb3IobGV0IHM9MDtzPGUudGV4dHVyZXMubGVuZ3RoO3MrKyl7Y29uc3Qgcj1lLnRleHR1cmVzW3NdO2lmKCFyLmNhblJlc2NhbGV8fHIuZ2V0Q29udGV4dCljb250aW51ZTtjb25zdCBuPXIuZ2V0U2l6ZSgpO01hdGgubWF4KG4ud2lkdGgsbi5oZWlnaHQpPnRoaXMubWF4aW11bVNpemUmJihyLnNjYWxlKHRoaXMuc3RlcCksaT0hMSl9cmV0dXJuIGl9fWNsYXNzIFByIGV4dGVuZHMgenR7Y29uc3RydWN0b3IoZT0wLHQ9MixpPS4yNSl7c3VwZXIoZSksdGhpcy5wcmlvcml0eT1lLHRoaXMubWF4aW11bVNjYWxlPXQsdGhpcy5zdGVwPWksdGhpcy5fY3VycmVudFNjYWxlPS0xLHRoaXMuX2RpcmVjdGlvbk9mZnNldD0xfWdldERlc2NyaXB0aW9uKCl7cmV0dXJuIlNldHRpbmcgaGFyZHdhcmUgc2NhbGluZyBsZXZlbCB0byAiK3RoaXMuX2N1cnJlbnRTY2FsZX1hcHBseShlLHQpe3JldHVybiB0aGlzLl9jdXJyZW50U2NhbGU9PT0tMSYmKHRoaXMuX2N1cnJlbnRTY2FsZT1lLmdldEVuZ2luZSgpLmdldEhhcmR3YXJlU2NhbGluZ0xldmVsKCksdGhpcy5fY3VycmVudFNjYWxlPnRoaXMubWF4aW11bVNjYWxlJiYodGhpcy5fZGlyZWN0aW9uT2Zmc2V0PS0xKSksdGhpcy5fY3VycmVudFNjYWxlKz10aGlzLl9kaXJlY3Rpb25PZmZzZXQqdGhpcy5zdGVwLGUuZ2V0RW5naW5lKCkuc2V0SGFyZHdhcmVTY2FsaW5nTGV2ZWwodGhpcy5fY3VycmVudFNjYWxlKSx0aGlzLl9kaXJlY3Rpb25PZmZzZXQ9PT0xP3RoaXMuX2N1cnJlbnRTY2FsZT49dGhpcy5tYXhpbXVtU2NhbGU6dGhpcy5fY3VycmVudFNjYWxlPD10aGlzLm1heGltdW1TY2FsZX19Y2xhc3MgTnMgZXh0ZW5kcyB6dHtnZXREZXNjcmlwdGlvbigpe3JldHVybiJUdXJuaW5nIHNoYWRvd3Mgb24vb2ZmIn1hcHBseShlLHQpe3JldHVybiBlLnNoYWRvd3NFbmFibGVkPXQuaXNJbkltcHJvdmVtZW50TW9kZSwhMH19Y2xhc3MgQnMgZXh0ZW5kcyB6dHtnZXREZXNjcmlwdGlvbigpe3JldHVybiJUdXJuaW5nIHBvc3QtcHJvY2Vzc2VzIG9uL29mZiJ9YXBwbHkoZSx0KXtyZXR1cm4gZS5wb3N0UHJvY2Vzc2VzRW5hYmxlZD10LmlzSW5JbXByb3ZlbWVudE1vZGUsITB9fWNsYXNzIFVzIGV4dGVuZHMgenR7Z2V0RGVzY3JpcHRpb24oKXtyZXR1cm4iVHVybmluZyBsZW5zIGZsYXJlcyBvbi9vZmYifWFwcGx5KGUsdCl7cmV0dXJuIGUubGVuc0ZsYXJlc0VuYWJsZWQ9dC5pc0luSW1wcm92ZW1lbnRNb2RlLCEwfX1jbGFzcyBIbiBleHRlbmRzIHp0e2dldERlc2NyaXB0aW9uKCl7cmV0dXJuIHRoaXMub25HZXREZXNjcmlwdGlvbj90aGlzLm9uR2V0RGVzY3JpcHRpb24oKToiUnVubmluZyB1c2VyIGRlZmluZWQgY2FsbGJhY2sifWFwcGx5KGUsdCl7cmV0dXJuIHRoaXMub25BcHBseT90aGlzLm9uQXBwbHkoZSx0KTohMH19Y2xhc3Mga3MgZXh0ZW5kcyB6dHtnZXREZXNjcmlwdGlvbigpe3JldHVybiJUdXJuaW5nIHBhcnRpY2xlcyBvbi9vZmYifWFwcGx5KGUsdCl7cmV0dXJuIGUucGFydGljbGVzRW5hYmxlZD10LmlzSW5JbXByb3ZlbWVudE1vZGUsITB9fWNsYXNzIERyIGV4dGVuZHMgenR7Z2V0RGVzY3JpcHRpb24oKXtyZXR1cm4iVHVybmluZyByZW5kZXIgdGFyZ2V0cyBvZmYifWFwcGx5KGUsdCl7cmV0dXJuIGUucmVuZGVyVGFyZ2V0c0VuYWJsZWQ9dC5pc0luSW1wcm92ZW1lbnRNb2RlLCEwfX1jbGFzcyBRdCBleHRlbmRzIHp0e2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLl9jYW5CZU1lcmdlZD1lPT57aWYoIShlIGluc3RhbmNlb2YgVykpcmV0dXJuITE7Y29uc3QgdD1lO3JldHVybiEodC5pc0Rpc3Bvc2VkKCl8fCF0LmlzVmlzaWJsZXx8IXQuaXNFbmFibGVkKCl8fHQuaW5zdGFuY2VzLmxlbmd0aD4wfHx0LnNrZWxldG9ufHx0Lmhhc0xPRExldmVscyl9fXN0YXRpYyBnZXQgVXBkYXRlU2VsZWN0aW9uVHJlZSgpe3JldHVybiBRdC5fVXBkYXRlU2VsZWN0aW9uVHJlZX1zdGF0aWMgc2V0IFVwZGF0ZVNlbGVjdGlvblRyZWUoZSl7UXQuX1VwZGF0ZVNlbGVjdGlvblRyZWU9ZX1nZXREZXNjcmlwdGlvbigpe3JldHVybiJNZXJnaW5nIHNpbWlsYXIgbWVzaGVzIHRvZ2V0aGVyIn1hcHBseShlLHQsaSl7Y29uc3Qgcz1lLm1lc2hlcy5zbGljZSgwKTtsZXQgcj1zLmxlbmd0aDtmb3IobGV0IGE9MDthPHI7YSsrKXtjb25zdCBvPW5ldyBBcnJheSxoPXNbYV07aWYodGhpcy5fY2FuQmVNZXJnZWQoaCkpe28ucHVzaChoKTtmb3IobGV0IGw9YSsxO2w8cjtsKyspe2NvbnN0IHU9c1tsXTt0aGlzLl9jYW5CZU1lcmdlZCh1KSYmdS5tYXRlcmlhbD09PWgubWF0ZXJpYWwmJnUuY2hlY2tDb2xsaXNpb25zPT09aC5jaGVja0NvbGxpc2lvbnMmJihvLnB1c2godSksci0tLHMuc3BsaWNlKGwsMSksbC0tKX1vLmxlbmd0aDwyfHxXLk1lcmdlTWVzaGVzKG8sdm9pZCAwLCEwKX19Y29uc3Qgbj1lO3JldHVybiBuLmNyZWF0ZU9yVXBkYXRlU2VsZWN0aW9uT2N0cmVlJiYoaSE9bnVsbD9pJiZuLmNyZWF0ZU9yVXBkYXRlU2VsZWN0aW9uT2N0cmVlKCk6UXQuVXBkYXRlU2VsZWN0aW9uVHJlZSYmbi5jcmVhdGVPclVwZGF0ZVNlbGVjdGlvbk9jdHJlZSgpKSwhMH19UXQuX1VwZGF0ZVNlbGVjdGlvblRyZWU9ITE7Y2xhc3MgZ2l7Y29uc3RydWN0b3IoZT02MCx0PTJlMyl7dGhpcy50YXJnZXRGcmFtZVJhdGU9ZSx0aGlzLnRyYWNrZXJEdXJhdGlvbj10LHRoaXMub3B0aW1pemF0aW9ucz1uZXcgQXJyYXl9YWRkT3B0aW1pemF0aW9uKGUpe3JldHVybiB0aGlzLm9wdGltaXphdGlvbnMucHVzaChlKSx0aGlzfWFkZEN1c3RvbU9wdGltaXphdGlvbihlLHQsaT0wKXtjb25zdCBzPW5ldyBIbihpKTtyZXR1cm4gcy5vbkFwcGx5PWUscy5vbkdldERlc2NyaXB0aW9uPXQsdGhpcy5vcHRpbWl6YXRpb25zLnB1c2gocyksdGhpc31zdGF0aWMgTG93RGVncmFkYXRpb25BbGxvd2VkKGUpe2NvbnN0IHQ9bmV3IGdpKGUpO2xldCBpPTA7cmV0dXJuIHQuYWRkT3B0aW1pemF0aW9uKG5ldyBRdChpKSksdC5hZGRPcHRpbWl6YXRpb24obmV3IE5zKGkpKSx0LmFkZE9wdGltaXphdGlvbihuZXcgVXMoaSkpLGkrKyx0LmFkZE9wdGltaXphdGlvbihuZXcgQnMoaSkpLHQuYWRkT3B0aW1pemF0aW9uKG5ldyBrcyhpKSksaSsrLHQuYWRkT3B0aW1pemF0aW9uKG5ldyBMcyhpLDEwMjQpKSx0fXN0YXRpYyBNb2RlcmF0ZURlZ3JhZGF0aW9uQWxsb3dlZChlKXtjb25zdCB0PW5ldyBnaShlKTtsZXQgaT0wO3JldHVybiB0LmFkZE9wdGltaXphdGlvbihuZXcgUXQoaSkpLHQuYWRkT3B0aW1pemF0aW9uKG5ldyBOcyhpKSksdC5hZGRPcHRpbWl6YXRpb24obmV3IFVzKGkpKSxpKyssdC5hZGRPcHRpbWl6YXRpb24obmV3IEJzKGkpKSx0LmFkZE9wdGltaXphdGlvbihuZXcga3MoaSkpLGkrKyx0LmFkZE9wdGltaXphdGlvbihuZXcgTHMoaSw1MTIpKSxpKyssdC5hZGRPcHRpbWl6YXRpb24obmV3IERyKGkpKSxpKyssdC5hZGRPcHRpbWl6YXRpb24obmV3IFByKGksMikpLHR9c3RhdGljIEhpZ2hEZWdyYWRhdGlvbkFsbG93ZWQoZSl7Y29uc3QgdD1uZXcgZ2koZSk7bGV0IGk9MDtyZXR1cm4gdC5hZGRPcHRpbWl6YXRpb24obmV3IFF0KGkpKSx0LmFkZE9wdGltaXphdGlvbihuZXcgTnMoaSkpLHQuYWRkT3B0aW1pemF0aW9uKG5ldyBVcyhpKSksaSsrLHQuYWRkT3B0aW1pemF0aW9uKG5ldyBCcyhpKSksdC5hZGRPcHRpbWl6YXRpb24obmV3IGtzKGkpKSxpKyssdC5hZGRPcHRpbWl6YXRpb24obmV3IExzKGksMjU2KSksaSsrLHQuYWRkT3B0aW1pemF0aW9uKG5ldyBEcihpKSksaSsrLHQuYWRkT3B0aW1pemF0aW9uKG5ldyBQcihpLDQpKSx0fX1jbGFzcyBWc3tjb25zdHJ1Y3RvcihlLHQsaT0hMCxzPSExKXtpZih0aGlzLl9pc1J1bm5pbmc9ITEsdGhpcy5fY3VycmVudFByaW9yaXR5TGV2ZWw9MCx0aGlzLl90YXJnZXRGcmFtZVJhdGU9NjAsdGhpcy5fdHJhY2tlckR1cmF0aW9uPTJlMyx0aGlzLl9jdXJyZW50RnJhbWVSYXRlPTAsdGhpcy5faW1wcm92ZW1lbnRNb2RlPSExLHRoaXMub25TdWNjZXNzT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uTmV3T3B0aW1pemF0aW9uQXBwbGllZE9ic2VydmFibGU9bmV3IEYsdGhpcy5vbkZhaWx1cmVPYnNlcnZhYmxlPW5ldyBGLHQ/dGhpcy5fb3B0aW9ucz10OnRoaXMuX29wdGlvbnM9bmV3IGdpLHRoaXMuX29wdGlvbnMudGFyZ2V0RnJhbWVSYXRlJiYodGhpcy5fdGFyZ2V0RnJhbWVSYXRlPXRoaXMuX29wdGlvbnMudGFyZ2V0RnJhbWVSYXRlKSx0aGlzLl9vcHRpb25zLnRyYWNrZXJEdXJhdGlvbiYmKHRoaXMuX3RyYWNrZXJEdXJhdGlvbj10aGlzLl9vcHRpb25zLnRyYWNrZXJEdXJhdGlvbiksaSl7bGV0IHI9MDtmb3IoY29uc3QgbiBvZiB0aGlzLl9vcHRpb25zLm9wdGltaXphdGlvbnMpbi5wcmlvcml0eT1yKyt9dGhpcy5faW1wcm92ZW1lbnRNb2RlPXMsdGhpcy5fc2NlbmU9ZXx8ZmUuTGFzdENyZWF0ZWRTY2VuZSx0aGlzLl9zY2VuZURpc3Bvc2VPYnNlcnZlcj10aGlzLl9zY2VuZS5vbkRpc3Bvc2VPYnNlcnZhYmxlLmFkZCgoKT0+e3RoaXMuX3NjZW5lRGlzcG9zZU9ic2VydmVyPW51bGwsdGhpcy5kaXNwb3NlKCl9KX1nZXQgaXNJbkltcHJvdmVtZW50TW9kZSgpe3JldHVybiB0aGlzLl9pbXByb3ZlbWVudE1vZGV9c2V0IGlzSW5JbXByb3ZlbWVudE1vZGUoZSl7dGhpcy5faW1wcm92ZW1lbnRNb2RlPWV9Z2V0IGN1cnJlbnRQcmlvcml0eUxldmVsKCl7cmV0dXJuIHRoaXMuX2N1cnJlbnRQcmlvcml0eUxldmVsfWdldCBjdXJyZW50RnJhbWVSYXRlKCl7cmV0dXJuIHRoaXMuX2N1cnJlbnRGcmFtZVJhdGV9Z2V0IHRhcmdldEZyYW1lUmF0ZSgpe3JldHVybiB0aGlzLl90YXJnZXRGcmFtZVJhdGV9c2V0IHRhcmdldEZyYW1lUmF0ZShlKXt0aGlzLl90YXJnZXRGcmFtZVJhdGU9ZX1nZXQgdHJhY2tlckR1cmF0aW9uKCl7cmV0dXJuIHRoaXMuX3RyYWNrZXJEdXJhdGlvbn1zZXQgdHJhY2tlckR1cmF0aW9uKGUpe3RoaXMuX3RyYWNrZXJEdXJhdGlvbj1lfWdldCBvcHRpbWl6YXRpb25zKCl7cmV0dXJuIHRoaXMuX29wdGlvbnMub3B0aW1pemF0aW9uc31zdG9wKCl7dGhpcy5faXNSdW5uaW5nPSExfXJlc2V0KCl7dGhpcy5fY3VycmVudFByaW9yaXR5TGV2ZWw9MH1zdGFydCgpe3RoaXMuX2lzUnVubmluZ3x8KHRoaXMuX2lzUnVubmluZz0hMCx0aGlzLl9zY2VuZS5leGVjdXRlV2hlblJlYWR5KCgpPT57c2V0VGltZW91dCgoKT0+e3RoaXMuX2NoZWNrQ3VycmVudFN0YXRlKCl9LHRoaXMuX3RyYWNrZXJEdXJhdGlvbil9KSl9X2NoZWNrQ3VycmVudFN0YXRlKCl7aWYoIXRoaXMuX2lzUnVubmluZylyZXR1cm47Y29uc3QgZT10aGlzLl9zY2VuZSx0PXRoaXMuX29wdGlvbnM7aWYodGhpcy5fY3VycmVudEZyYW1lUmF0ZT1NYXRoLnJvdW5kKGUuZ2V0RW5naW5lKCkuZ2V0RnBzKCkpLHRoaXMuX2ltcHJvdmVtZW50TW9kZSYmdGhpcy5fY3VycmVudEZyYW1lUmF0ZTw9dGhpcy5fdGFyZ2V0RnJhbWVSYXRlfHwhdGhpcy5faW1wcm92ZW1lbnRNb2RlJiZ0aGlzLl9jdXJyZW50RnJhbWVSYXRlPj10aGlzLl90YXJnZXRGcmFtZVJhdGUpe3RoaXMuX2lzUnVubmluZz0hMSx0aGlzLm9uU3VjY2Vzc09ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpO3JldHVybn1sZXQgaT0hMCxzPSEwO2ZvcihsZXQgcj0wO3I8dC5vcHRpbWl6YXRpb25zLmxlbmd0aDtyKyspe2NvbnN0IG49dC5vcHRpbWl6YXRpb25zW3JdO24ucHJpb3JpdHk9PT10aGlzLl9jdXJyZW50UHJpb3JpdHlMZXZlbCYmKHM9ITEsaT1pJiZuLmFwcGx5KGUsdGhpcyksdGhpcy5vbk5ld09wdGltaXphdGlvbkFwcGxpZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhuKSl9aWYocyl7dGhpcy5faXNSdW5uaW5nPSExLHRoaXMub25GYWlsdXJlT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyk7cmV0dXJufWkmJnRoaXMuX2N1cnJlbnRQcmlvcml0eUxldmVsKyssZS5leGVjdXRlV2hlblJlYWR5KCgpPT57c2V0VGltZW91dCgoKT0+e3RoaXMuX2NoZWNrQ3VycmVudFN0YXRlKCl9LHRoaXMuX3RyYWNrZXJEdXJhdGlvbil9KX1kaXNwb3NlKCl7dGhpcy5zdG9wKCksdGhpcy5vblN1Y2Nlc3NPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkZhaWx1cmVPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbk5ld09wdGltaXphdGlvbkFwcGxpZWRPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5fc2NlbmVEaXNwb3NlT2JzZXJ2ZXImJnRoaXMuX3NjZW5lLm9uRGlzcG9zZU9ic2VydmFibGUucmVtb3ZlKHRoaXMuX3NjZW5lRGlzcG9zZU9ic2VydmVyKX1zdGF0aWMgT3B0aW1pemVBc3luYyhlLHQsaSxzKXtjb25zdCByPW5ldyBWcyhlLHR8fGdpLk1vZGVyYXRlRGVncmFkYXRpb25BbGxvd2VkKCksITEpO3JldHVybiBpJiZyLm9uU3VjY2Vzc09ic2VydmFibGUuYWRkKCgpPT57aSgpfSkscyYmci5vbkZhaWx1cmVPYnNlcnZhYmxlLmFkZCgoKT0+e3MoKX0pLHIuc3RhcnQoKSxyfX1mdW5jdGlvbiBLbihjKXtjb25zdHtlbmdpbmU6ZX09Yyx0PW5ldyBuZShlKTt0LmNsZWFyQ29sb3I9bmV3IG1lKDAsMCwwLDApLHQucG9pbnRlck1vdmVQcmVkaWNhdGU9KCk9PiExLHQucG9pbnRlckRvd25QcmVkaWNhdGU9KCk9PiExLHQucG9pbnRlclVwUHJlZGljYXRlPSgpPT4hMSx0LmNsZWFyQ2FjaGVkVmVydGV4RGF0YSgpLHQudGhlbWVEYXRhPXt9O2NvbnN0IGk9Z2kuTG93RGVncmFkYXRpb25BbGxvd2VkKCk7cmV0dXJuIGkub3B0aW1pemF0aW9ucz1pLm9wdGltaXphdGlvbnMuc3BsaWNlKDEpLGkudGFyZ2V0RnJhbWVSYXRlPTYwLFZzLk9wdGltaXplQXN5bmModCxpKSx0fWNsYXNzIEdlIGV4dGVuZHMgantjb25zdHJ1Y3RvcihlLHQsaSxzPSEwKXtzdXBlcihlLHQsaSxzKSx0aGlzLl90bXBVcFZlY3Rvcj1wLlplcm8oKSx0aGlzLl90bXBUYXJnZXRWZWN0b3I9cC5aZXJvKCksdGhpcy5jYW1lcmFEaXJlY3Rpb249bmV3IHAoMCwwLDApLHRoaXMuY2FtZXJhUm90YXRpb249bmV3IHZlKDAsMCksdGhpcy5pZ25vcmVQYXJlbnRTY2FsaW5nPSExLHRoaXMudXBkYXRlVXBWZWN0b3JGcm9tUm90YXRpb249ITEsdGhpcy5fdG1wUXVhdGVybmlvbj1uZXcgWix0aGlzLnJvdGF0aW9uPW5ldyBwKDAsMCwwKSx0aGlzLnNwZWVkPTIsdGhpcy5ub1JvdGF0aW9uQ29uc3RyYWludD0hMSx0aGlzLmludmVydFJvdGF0aW9uPSExLHRoaXMuaW52ZXJzZVJvdGF0aW9uU3BlZWQ9LjIsdGhpcy5sb2NrZWRUYXJnZXQ9bnVsbCx0aGlzLl9jdXJyZW50VGFyZ2V0PXAuWmVybygpLHRoaXMuX2luaXRpYWxGb2NhbERpc3RhbmNlPTEsdGhpcy5fdmlld01hdHJpeD14Llplcm8oKSx0aGlzLl9jYW1NYXRyaXg9eC5aZXJvKCksdGhpcy5fY2FtZXJhVHJhbnNmb3JtTWF0cml4PXguWmVybygpLHRoaXMuX2NhbWVyYVJvdGF0aW9uTWF0cml4PXguWmVybygpLHRoaXMuX3JlZmVyZW5jZVBvaW50PW5ldyBwKDAsMCwxKSx0aGlzLl90cmFuc2Zvcm1lZFJlZmVyZW5jZVBvaW50PXAuWmVybygpLHRoaXMuX2RlZmF1bHRVcD1wLlVwKCksdGhpcy5fY2FjaGVkUm90YXRpb25aPTAsdGhpcy5fY2FjaGVkUXVhdGVybmlvblJvdGF0aW9uWj0wfWdldEZyb250UG9zaXRpb24oZSl7dGhpcy5nZXRXb3JsZE1hdHJpeCgpO2NvbnN0IHQ9dGhpcy5nZXRUYXJnZXQoKS5zdWJ0cmFjdCh0aGlzLnBvc2l0aW9uKTtyZXR1cm4gdC5ub3JtYWxpemUoKSx0LnNjYWxlSW5QbGFjZShlKSx0aGlzLmdsb2JhbFBvc2l0aW9uLmFkZCh0KX1fZ2V0TG9ja2VkVGFyZ2V0UG9zaXRpb24oKXtyZXR1cm4gdGhpcy5sb2NrZWRUYXJnZXQ/KHRoaXMubG9ja2VkVGFyZ2V0LmFic29sdXRlUG9zaXRpb24mJnRoaXMubG9ja2VkVGFyZ2V0LmNvbXB1dGVXb3JsZE1hdHJpeCgpLHRoaXMubG9ja2VkVGFyZ2V0LmFic29sdXRlUG9zaXRpb258fHRoaXMubG9ja2VkVGFyZ2V0KTpudWxsfXN0b3JlU3RhdGUoKXtyZXR1cm4gdGhpcy5fc3RvcmVkUG9zaXRpb249dGhpcy5wb3NpdGlvbi5jbG9uZSgpLHRoaXMuX3N0b3JlZFJvdGF0aW9uPXRoaXMucm90YXRpb24uY2xvbmUoKSx0aGlzLnJvdGF0aW9uUXVhdGVybmlvbiYmKHRoaXMuX3N0b3JlZFJvdGF0aW9uUXVhdGVybmlvbj10aGlzLnJvdGF0aW9uUXVhdGVybmlvbi5jbG9uZSgpKSxzdXBlci5zdG9yZVN0YXRlKCl9X3Jlc3RvcmVTdGF0ZVZhbHVlcygpe3JldHVybiBzdXBlci5fcmVzdG9yZVN0YXRlVmFsdWVzKCk/KHRoaXMucG9zaXRpb249dGhpcy5fc3RvcmVkUG9zaXRpb24uY2xvbmUoKSx0aGlzLnJvdGF0aW9uPXRoaXMuX3N0b3JlZFJvdGF0aW9uLmNsb25lKCksdGhpcy5yb3RhdGlvblF1YXRlcm5pb24mJih0aGlzLnJvdGF0aW9uUXVhdGVybmlvbj10aGlzLl9zdG9yZWRSb3RhdGlvblF1YXRlcm5pb24uY2xvbmUoKSksdGhpcy5jYW1lcmFEaXJlY3Rpb24uY29weUZyb21GbG9hdHMoMCwwLDApLHRoaXMuY2FtZXJhUm90YXRpb24uY29weUZyb21GbG9hdHMoMCwwKSwhMCk6ITF9X2luaXRDYWNoZSgpe3N1cGVyLl9pbml0Q2FjaGUoKSx0aGlzLl9jYWNoZS5sb2NrZWRUYXJnZXQ9bmV3IHAoTnVtYmVyLk1BWF9WQUxVRSxOdW1iZXIuTUFYX1ZBTFVFLE51bWJlci5NQVhfVkFMVUUpLHRoaXMuX2NhY2hlLnJvdGF0aW9uPW5ldyBwKE51bWJlci5NQVhfVkFMVUUsTnVtYmVyLk1BWF9WQUxVRSxOdW1iZXIuTUFYX1ZBTFVFKSx0aGlzLl9jYWNoZS5yb3RhdGlvblF1YXRlcm5pb249bmV3IFooTnVtYmVyLk1BWF9WQUxVRSxOdW1iZXIuTUFYX1ZBTFVFLE51bWJlci5NQVhfVkFMVUUsTnVtYmVyLk1BWF9WQUxVRSl9X3VwZGF0ZUNhY2hlKGUpe2V8fHN1cGVyLl91cGRhdGVDYWNoZSgpO2NvbnN0IHQ9dGhpcy5fZ2V0TG9ja2VkVGFyZ2V0UG9zaXRpb24oKTt0P3RoaXMuX2NhY2hlLmxvY2tlZFRhcmdldD90aGlzLl9jYWNoZS5sb2NrZWRUYXJnZXQuY29weUZyb20odCk6dGhpcy5fY2FjaGUubG9ja2VkVGFyZ2V0PXQuY2xvbmUoKTp0aGlzLl9jYWNoZS5sb2NrZWRUYXJnZXQ9bnVsbCx0aGlzLl9jYWNoZS5yb3RhdGlvbi5jb3B5RnJvbSh0aGlzLnJvdGF0aW9uKSx0aGlzLnJvdGF0aW9uUXVhdGVybmlvbiYmdGhpcy5fY2FjaGUucm90YXRpb25RdWF0ZXJuaW9uLmNvcHlGcm9tKHRoaXMucm90YXRpb25RdWF0ZXJuaW9uKX1faXNTeW5jaHJvbml6ZWRWaWV3TWF0cml4KCl7aWYoIXN1cGVyLl9pc1N5bmNocm9uaXplZFZpZXdNYXRyaXgoKSlyZXR1cm4hMTtjb25zdCBlPXRoaXMuX2dldExvY2tlZFRhcmdldFBvc2l0aW9uKCk7cmV0dXJuKHRoaXMuX2NhY2hlLmxvY2tlZFRhcmdldD90aGlzLl9jYWNoZS5sb2NrZWRUYXJnZXQuZXF1YWxzKGUpOiFlKSYmKHRoaXMucm90YXRpb25RdWF0ZXJuaW9uP3RoaXMucm90YXRpb25RdWF0ZXJuaW9uLmVxdWFscyh0aGlzLl9jYWNoZS5yb3RhdGlvblF1YXRlcm5pb24pOnRoaXMuX2NhY2hlLnJvdGF0aW9uLmVxdWFscyh0aGlzLnJvdGF0aW9uKSl9X2NvbXB1dGVMb2NhbENhbWVyYVNwZWVkKCl7Y29uc3QgZT10aGlzLmdldEVuZ2luZSgpO3JldHVybiB0aGlzLnNwZWVkKk1hdGguc3FydChlLmdldERlbHRhVGltZSgpLyhlLmdldEZwcygpKjEwMCkpfXNldFRhcmdldChlKXt0aGlzLnVwVmVjdG9yLm5vcm1hbGl6ZSgpLHRoaXMuX2luaXRpYWxGb2NhbERpc3RhbmNlPWUuc3VidHJhY3QodGhpcy5wb3NpdGlvbikubGVuZ3RoKCksdGhpcy5wb3NpdGlvbi56PT09ZS56JiYodGhpcy5wb3NpdGlvbi56Kz14ZSksdGhpcy5fcmVmZXJlbmNlUG9pbnQubm9ybWFsaXplKCkuc2NhbGVJblBsYWNlKHRoaXMuX2luaXRpYWxGb2NhbERpc3RhbmNlKSx4Lkxvb2tBdExIVG9SZWYodGhpcy5wb3NpdGlvbixlLHRoaXMuX2RlZmF1bHRVcCx0aGlzLl9jYW1NYXRyaXgpLHRoaXMuX2NhbU1hdHJpeC5pbnZlcnQoKSx0aGlzLnJvdGF0aW9uLng9TWF0aC5hdGFuKHRoaXMuX2NhbU1hdHJpeC5tWzZdL3RoaXMuX2NhbU1hdHJpeC5tWzEwXSk7Y29uc3QgdD1lLnN1YnRyYWN0KHRoaXMucG9zaXRpb24pO3QueD49MD90aGlzLnJvdGF0aW9uLnk9LU1hdGguYXRhbih0LnovdC54KStNYXRoLlBJLzI6dGhpcy5yb3RhdGlvbi55PS1NYXRoLmF0YW4odC56L3QueCktTWF0aC5QSS8yLHRoaXMucm90YXRpb24uej0wLGlzTmFOKHRoaXMucm90YXRpb24ueCkmJih0aGlzLnJvdGF0aW9uLng9MCksaXNOYU4odGhpcy5yb3RhdGlvbi55KSYmKHRoaXMucm90YXRpb24ueT0wKSxpc05hTih0aGlzLnJvdGF0aW9uLnopJiYodGhpcy5yb3RhdGlvbi56PTApLHRoaXMucm90YXRpb25RdWF0ZXJuaW9uJiZaLlJvdGF0aW9uWWF3UGl0Y2hSb2xsVG9SZWYodGhpcy5yb3RhdGlvbi55LHRoaXMucm90YXRpb24ueCx0aGlzLnJvdGF0aW9uLnosdGhpcy5yb3RhdGlvblF1YXRlcm5pb24pfWdldCB0YXJnZXQoKXtyZXR1cm4gdGhpcy5nZXRUYXJnZXQoKX1zZXQgdGFyZ2V0KGUpe3RoaXMuc2V0VGFyZ2V0KGUpfWdldFRhcmdldCgpe3JldHVybiB0aGlzLl9jdXJyZW50VGFyZ2V0fV9kZWNpZGVJZk5lZWRzVG9Nb3ZlKCl7cmV0dXJuIE1hdGguYWJzKHRoaXMuY2FtZXJhRGlyZWN0aW9uLngpPjB8fE1hdGguYWJzKHRoaXMuY2FtZXJhRGlyZWN0aW9uLnkpPjB8fE1hdGguYWJzKHRoaXMuY2FtZXJhRGlyZWN0aW9uLnopPjB9X3VwZGF0ZVBvc2l0aW9uKCl7aWYodGhpcy5wYXJlbnQpe3RoaXMucGFyZW50LmdldFdvcmxkTWF0cml4KCkuaW52ZXJ0VG9SZWYoRC5NYXRyaXhbMF0pLHAuVHJhbnNmb3JtTm9ybWFsVG9SZWYodGhpcy5jYW1lcmFEaXJlY3Rpb24sRC5NYXRyaXhbMF0sRC5WZWN0b3IzWzBdKSx0aGlzLnBvc2l0aW9uLmFkZEluUGxhY2UoRC5WZWN0b3IzWzBdKTtyZXR1cm59dGhpcy5wb3NpdGlvbi5hZGRJblBsYWNlKHRoaXMuY2FtZXJhRGlyZWN0aW9uKX1fY2hlY2tJbnB1dHMoKXtjb25zdCBlPXRoaXMuaW52ZXJ0Um90YXRpb24/LXRoaXMuaW52ZXJzZVJvdGF0aW9uU3BlZWQ6MSx0PXRoaXMuX2RlY2lkZUlmTmVlZHNUb01vdmUoKSxpPU1hdGguYWJzKHRoaXMuY2FtZXJhUm90YXRpb24ueCk+MHx8TWF0aC5hYnModGhpcy5jYW1lcmFSb3RhdGlvbi55KT4wO3QmJnRoaXMuX3VwZGF0ZVBvc2l0aW9uKCksaSYmKHRoaXMucm90YXRpb25RdWF0ZXJuaW9uJiZ0aGlzLnJvdGF0aW9uUXVhdGVybmlvbi50b0V1bGVyQW5nbGVzVG9SZWYodGhpcy5yb3RhdGlvbiksdGhpcy5yb3RhdGlvbi54Kz10aGlzLmNhbWVyYVJvdGF0aW9uLngqZSx0aGlzLnJvdGF0aW9uLnkrPXRoaXMuY2FtZXJhUm90YXRpb24ueSplLHRoaXMubm9Sb3RhdGlvbkNvbnN0cmFpbnR8fCh0aGlzLnJvdGF0aW9uLng+MS41NzA3OTYmJih0aGlzLnJvdGF0aW9uLng9MS41NzA3OTYpLHRoaXMucm90YXRpb24ueDwtMS41NzA3OTYmJih0aGlzLnJvdGF0aW9uLng9LTEuNTcwNzk2KSksdGhpcy5yb3RhdGlvblF1YXRlcm5pb24mJnRoaXMucm90YXRpb24ubGVuZ3RoU3F1YXJlZCgpJiZaLlJvdGF0aW9uWWF3UGl0Y2hSb2xsVG9SZWYodGhpcy5yb3RhdGlvbi55LHRoaXMucm90YXRpb24ueCx0aGlzLnJvdGF0aW9uLnosdGhpcy5yb3RhdGlvblF1YXRlcm5pb24pKSx0JiYoTWF0aC5hYnModGhpcy5jYW1lcmFEaXJlY3Rpb24ueCk8dGhpcy5zcGVlZCp4ZSYmKHRoaXMuY2FtZXJhRGlyZWN0aW9uLng9MCksTWF0aC5hYnModGhpcy5jYW1lcmFEaXJlY3Rpb24ueSk8dGhpcy5zcGVlZCp4ZSYmKHRoaXMuY2FtZXJhRGlyZWN0aW9uLnk9MCksTWF0aC5hYnModGhpcy5jYW1lcmFEaXJlY3Rpb24ueik8dGhpcy5zcGVlZCp4ZSYmKHRoaXMuY2FtZXJhRGlyZWN0aW9uLno9MCksdGhpcy5jYW1lcmFEaXJlY3Rpb24uc2NhbGVJblBsYWNlKHRoaXMuaW5lcnRpYSkpLGkmJihNYXRoLmFicyh0aGlzLmNhbWVyYVJvdGF0aW9uLngpPHRoaXMuc3BlZWQqeGUmJih0aGlzLmNhbWVyYVJvdGF0aW9uLng9MCksTWF0aC5hYnModGhpcy5jYW1lcmFSb3RhdGlvbi55KTx0aGlzLnNwZWVkKnhlJiYodGhpcy5jYW1lcmFSb3RhdGlvbi55PTApLHRoaXMuY2FtZXJhUm90YXRpb24uc2NhbGVJblBsYWNlKHRoaXMuaW5lcnRpYSkpLHN1cGVyLl9jaGVja0lucHV0cygpfV91cGRhdGVDYW1lcmFSb3RhdGlvbk1hdHJpeCgpe3RoaXMucm90YXRpb25RdWF0ZXJuaW9uP3RoaXMucm90YXRpb25RdWF0ZXJuaW9uLnRvUm90YXRpb25NYXRyaXgodGhpcy5fY2FtZXJhUm90YXRpb25NYXRyaXgpOnguUm90YXRpb25ZYXdQaXRjaFJvbGxUb1JlZih0aGlzLnJvdGF0aW9uLnksdGhpcy5yb3RhdGlvbi54LHRoaXMucm90YXRpb24ueix0aGlzLl9jYW1lcmFSb3RhdGlvbk1hdHJpeCl9X3JvdGF0ZVVwVmVjdG9yV2l0aENhbWVyYVJvdGF0aW9uTWF0cml4KCl7cmV0dXJuIHAuVHJhbnNmb3JtTm9ybWFsVG9SZWYodGhpcy5fZGVmYXVsdFVwLHRoaXMuX2NhbWVyYVJvdGF0aW9uTWF0cml4LHRoaXMudXBWZWN0b3IpLHRoaXN9X2dldFZpZXdNYXRyaXgoKXtyZXR1cm4gdGhpcy5sb2NrZWRUYXJnZXQmJnRoaXMuc2V0VGFyZ2V0KHRoaXMuX2dldExvY2tlZFRhcmdldFBvc2l0aW9uKCkpLHRoaXMuX3VwZGF0ZUNhbWVyYVJvdGF0aW9uTWF0cml4KCksdGhpcy5yb3RhdGlvblF1YXRlcm5pb24mJnRoaXMuX2NhY2hlZFF1YXRlcm5pb25Sb3RhdGlvblohPXRoaXMucm90YXRpb25RdWF0ZXJuaW9uLno/KHRoaXMuX3JvdGF0ZVVwVmVjdG9yV2l0aENhbWVyYVJvdGF0aW9uTWF0cml4KCksdGhpcy5fY2FjaGVkUXVhdGVybmlvblJvdGF0aW9uWj10aGlzLnJvdGF0aW9uUXVhdGVybmlvbi56KTp0aGlzLl9jYWNoZWRSb3RhdGlvblohPT10aGlzLnJvdGF0aW9uLnomJih0aGlzLl9yb3RhdGVVcFZlY3RvcldpdGhDYW1lcmFSb3RhdGlvbk1hdHJpeCgpLHRoaXMuX2NhY2hlZFJvdGF0aW9uWj10aGlzLnJvdGF0aW9uLnopLHAuVHJhbnNmb3JtQ29vcmRpbmF0ZXNUb1JlZih0aGlzLl9yZWZlcmVuY2VQb2ludCx0aGlzLl9jYW1lcmFSb3RhdGlvbk1hdHJpeCx0aGlzLl90cmFuc2Zvcm1lZFJlZmVyZW5jZVBvaW50KSx0aGlzLnBvc2l0aW9uLmFkZFRvUmVmKHRoaXMuX3RyYW5zZm9ybWVkUmVmZXJlbmNlUG9pbnQsdGhpcy5fY3VycmVudFRhcmdldCksdGhpcy51cGRhdGVVcFZlY3RvckZyb21Sb3RhdGlvbiYmKHRoaXMucm90YXRpb25RdWF0ZXJuaW9uP19pLlkucm90YXRlQnlRdWF0ZXJuaW9uVG9SZWYodGhpcy5yb3RhdGlvblF1YXRlcm5pb24sdGhpcy51cFZlY3Rvcik6KFouRnJvbUV1bGVyVmVjdG9yVG9SZWYodGhpcy5yb3RhdGlvbix0aGlzLl90bXBRdWF0ZXJuaW9uKSxfaS5ZLnJvdGF0ZUJ5UXVhdGVybmlvblRvUmVmKHRoaXMuX3RtcFF1YXRlcm5pb24sdGhpcy51cFZlY3RvcikpKSx0aGlzLl9jb21wdXRlVmlld01hdHJpeCh0aGlzLnBvc2l0aW9uLHRoaXMuX2N1cnJlbnRUYXJnZXQsdGhpcy51cFZlY3RvciksdGhpcy5fdmlld01hdHJpeH1fY29tcHV0ZVZpZXdNYXRyaXgoZSx0LGkpe2lmKHRoaXMuaWdub3JlUGFyZW50U2NhbGluZyl7aWYodGhpcy5wYXJlbnQpe2NvbnN0IHM9dGhpcy5wYXJlbnQuZ2V0V29ybGRNYXRyaXgoKTtwLlRyYW5zZm9ybUNvb3JkaW5hdGVzVG9SZWYoZSxzLHRoaXMuX2dsb2JhbFBvc2l0aW9uKSxwLlRyYW5zZm9ybUNvb3JkaW5hdGVzVG9SZWYodCxzLHRoaXMuX3RtcFRhcmdldFZlY3RvcikscC5UcmFuc2Zvcm1Ob3JtYWxUb1JlZihpLHMsdGhpcy5fdG1wVXBWZWN0b3IpLHRoaXMuX21hcmtTeW5jZWRXaXRoUGFyZW50KCl9ZWxzZSB0aGlzLl9nbG9iYWxQb3NpdGlvbi5jb3B5RnJvbShlKSx0aGlzLl90bXBUYXJnZXRWZWN0b3IuY29weUZyb20odCksdGhpcy5fdG1wVXBWZWN0b3IuY29weUZyb20oaSk7dGhpcy5nZXRTY2VuZSgpLnVzZVJpZ2h0SGFuZGVkU3lzdGVtP3guTG9va0F0UkhUb1JlZih0aGlzLl9nbG9iYWxQb3NpdGlvbix0aGlzLl90bXBUYXJnZXRWZWN0b3IsdGhpcy5fdG1wVXBWZWN0b3IsdGhpcy5fdmlld01hdHJpeCk6eC5Mb29rQXRMSFRvUmVmKHRoaXMuX2dsb2JhbFBvc2l0aW9uLHRoaXMuX3RtcFRhcmdldFZlY3Rvcix0aGlzLl90bXBVcFZlY3Rvcix0aGlzLl92aWV3TWF0cml4KTtyZXR1cm59aWYodGhpcy5nZXRTY2VuZSgpLnVzZVJpZ2h0SGFuZGVkU3lzdGVtP3guTG9va0F0UkhUb1JlZihlLHQsaSx0aGlzLl92aWV3TWF0cml4KTp4Lkxvb2tBdExIVG9SZWYoZSx0LGksdGhpcy5fdmlld01hdHJpeCksdGhpcy5wYXJlbnQpe2NvbnN0IHM9dGhpcy5wYXJlbnQuZ2V0V29ybGRNYXRyaXgoKTt0aGlzLl92aWV3TWF0cml4LmludmVydCgpLHRoaXMuX3ZpZXdNYXRyaXgubXVsdGlwbHlUb1JlZihzLHRoaXMuX3ZpZXdNYXRyaXgpLHRoaXMuX3ZpZXdNYXRyaXguZ2V0VHJhbnNsYXRpb25Ub1JlZih0aGlzLl9nbG9iYWxQb3NpdGlvbiksdGhpcy5fdmlld01hdHJpeC5pbnZlcnQoKSx0aGlzLl9tYXJrU3luY2VkV2l0aFBhcmVudCgpfWVsc2UgdGhpcy5fZ2xvYmFsUG9zaXRpb24uY29weUZyb20oZSl9Y3JlYXRlUmlnQ2FtZXJhKGUsdCl7aWYodGhpcy5jYW1lcmFSaWdNb2RlIT09ai5SSUdfTU9ERV9OT05FKXtjb25zdCBpPW5ldyBHZShlLHRoaXMucG9zaXRpb24uY2xvbmUoKSx0aGlzLmdldFNjZW5lKCkpO3JldHVybiBpLmlzUmlnQ2FtZXJhPSEwLGkucmlnUGFyZW50PXRoaXMsKHRoaXMuY2FtZXJhUmlnTW9kZT09PWouUklHX01PREVfVlJ8fHRoaXMuY2FtZXJhUmlnTW9kZT09PWouUklHX01PREVfV0VCVlIpJiYodGhpcy5yb3RhdGlvblF1YXRlcm5pb258fCh0aGlzLnJvdGF0aW9uUXVhdGVybmlvbj1uZXcgWiksaS5fY2FtZXJhUmlnUGFyYW1zPXt9LGkucm90YXRpb25RdWF0ZXJuaW9uPW5ldyBaKSxpLm1vZGU9dGhpcy5tb2RlLGkub3J0aG9MZWZ0PXRoaXMub3J0aG9MZWZ0LGkub3J0aG9SaWdodD10aGlzLm9ydGhvUmlnaHQsaS5vcnRob1RvcD10aGlzLm9ydGhvVG9wLGkub3J0aG9Cb3R0b209dGhpcy5vcnRob0JvdHRvbSxpfXJldHVybiBudWxsfV91cGRhdGVSaWdDYW1lcmFzKCl7Y29uc3QgZT10aGlzLl9yaWdDYW1lcmFzWzBdLHQ9dGhpcy5fcmlnQ2FtZXJhc1sxXTtzd2l0Y2godGhpcy5jb21wdXRlV29ybGRNYXRyaXgoKSx0aGlzLmNhbWVyYVJpZ01vZGUpe2Nhc2Ugai5SSUdfTU9ERV9TVEVSRU9TQ09QSUNfQU5BR0xZUEg6Y2FzZSBqLlJJR19NT0RFX1NURVJFT1NDT1BJQ19TSURFQllTSURFX1BBUkFMTEVMOmNhc2Ugai5SSUdfTU9ERV9TVEVSRU9TQ09QSUNfU0lERUJZU0lERV9DUk9TU0VZRUQ6Y2FzZSBqLlJJR19NT0RFX1NURVJFT1NDT1BJQ19PVkVSVU5ERVI6Y2FzZSBqLlJJR19NT0RFX1NURVJFT1NDT1BJQ19JTlRFUkxBQ0VEOntjb25zdCBpPXRoaXMuY2FtZXJhUmlnTW9kZT09PWouUklHX01PREVfU1RFUkVPU0NPUElDX1NJREVCWVNJREVfQ1JPU1NFWUVEPzE6LTEscz10aGlzLmNhbWVyYVJpZ01vZGU9PT1qLlJJR19NT0RFX1NURVJFT1NDT1BJQ19TSURFQllTSURFX0NST1NTRVlFRD8tMToxO3RoaXMuX2dldFJpZ0NhbVBvc2l0aW9uQW5kVGFyZ2V0KHRoaXMuX2NhbWVyYVJpZ1BhcmFtcy5zdGVyZW9IYWxmQW5nbGUqaSxlKSx0aGlzLl9nZXRSaWdDYW1Qb3NpdGlvbkFuZFRhcmdldCh0aGlzLl9jYW1lcmFSaWdQYXJhbXMuc3RlcmVvSGFsZkFuZ2xlKnMsdCk7YnJlYWt9Y2FzZSBqLlJJR19NT0RFX1ZSOmUucm90YXRpb25RdWF0ZXJuaW9uPyhlLnJvdGF0aW9uUXVhdGVybmlvbi5jb3B5RnJvbSh0aGlzLnJvdGF0aW9uUXVhdGVybmlvbiksdC5yb3RhdGlvblF1YXRlcm5pb24uY29weUZyb20odGhpcy5yb3RhdGlvblF1YXRlcm5pb24pKTooZS5yb3RhdGlvbi5jb3B5RnJvbSh0aGlzLnJvdGF0aW9uKSx0LnJvdGF0aW9uLmNvcHlGcm9tKHRoaXMucm90YXRpb24pKSxlLnBvc2l0aW9uLmNvcHlGcm9tKHRoaXMucG9zaXRpb24pLHQucG9zaXRpb24uY29weUZyb20odGhpcy5wb3NpdGlvbik7YnJlYWt9c3VwZXIuX3VwZGF0ZVJpZ0NhbWVyYXMoKX1fZ2V0UmlnQ2FtUG9zaXRpb25BbmRUYXJnZXQoZSx0KXt0aGlzLmdldFRhcmdldCgpLnN1YnRyYWN0VG9SZWYodGhpcy5wb3NpdGlvbixHZS5fVGFyZ2V0Rm9jYWxQb2ludCksR2UuX1RhcmdldEZvY2FsUG9pbnQubm9ybWFsaXplKCkuc2NhbGVJblBsYWNlKHRoaXMuX2luaXRpYWxGb2NhbERpc3RhbmNlKTtjb25zdCBzPUdlLl9UYXJnZXRGb2NhbFBvaW50LmFkZEluUGxhY2UodGhpcy5wb3NpdGlvbik7eC5UcmFuc2xhdGlvblRvUmVmKC1zLngsLXMueSwtcy56LEdlLl9UYXJnZXRUcmFuc2Zvcm1NYXRyaXgpLEdlLl9UYXJnZXRUcmFuc2Zvcm1NYXRyaXgubXVsdGlwbHlUb1JlZih4LlJvdGF0aW9uQXhpcyh0LnVwVmVjdG9yLGUpLEdlLl9SaWdDYW1UcmFuc2Zvcm1NYXRyaXgpLHguVHJhbnNsYXRpb25Ub1JlZihzLngscy55LHMueixHZS5fVGFyZ2V0VHJhbnNmb3JtTWF0cml4KSxHZS5fUmlnQ2FtVHJhbnNmb3JtTWF0cml4Lm11bHRpcGx5VG9SZWYoR2UuX1RhcmdldFRyYW5zZm9ybU1hdHJpeCxHZS5fUmlnQ2FtVHJhbnNmb3JtTWF0cml4KSxwLlRyYW5zZm9ybUNvb3JkaW5hdGVzVG9SZWYodGhpcy5wb3NpdGlvbixHZS5fUmlnQ2FtVHJhbnNmb3JtTWF0cml4LHQucG9zaXRpb24pLHQuc2V0VGFyZ2V0KHMpfWdldENsYXNzTmFtZSgpe3JldHVybiJUYXJnZXRDYW1lcmEifX1HZS5fUmlnQ2FtVHJhbnNmb3JtTWF0cml4PW5ldyB4LEdlLl9UYXJnZXRUcmFuc2Zvcm1NYXRyaXg9bmV3IHgsR2UuX1RhcmdldEZvY2FsUG9pbnQ9bmV3IHAsVChbQnQoKV0sR2UucHJvdG90eXBlLCJyb3RhdGlvbiIsdm9pZCAwKSxUKFtSKCldLEdlLnByb3RvdHlwZSwic3BlZWQiLHZvaWQgMCksVChbTW4oImxvY2tlZFRhcmdldElkIildLEdlLnByb3RvdHlwZSwibG9ja2VkVGFyZ2V0Iix2b2lkIDApO2Z1bmN0aW9uIFluKGMpe2NvbnN0e3NjZW5lOmV9PWM7bGV0IHQ7Y29uc3QgaT0zNi41O3JldHVybiB0PW5ldyBHZSgiVGFyZ2V0Q2FtZXJhMSIsbmV3IHAoMCxpLDApLGUpLHQuZm92PS4yNSx0Lm1pblo9NSx0Lm1heFo9aSsxLHQuc2V0VGFyZ2V0KHAuWmVybygpKSx0fWNsYXNzIGhlIGV4dGVuZHMgemV7Y29uc3RydWN0b3IoZSx0KXtzdXBlcihlLHQpLHRoaXMuZGlmZnVzZT1uZXcgcmUoMSwxLDEpLHRoaXMuc3BlY3VsYXI9bmV3IHJlKDEsMSwxKSx0aGlzLmZhbGxvZmZUeXBlPWhlLkZBTExPRkZfREVGQVVMVCx0aGlzLmludGVuc2l0eT0xLHRoaXMuX3JhbmdlPU51bWJlci5NQVhfVkFMVUUsdGhpcy5faW52ZXJzZVNxdWFyZWRSYW5nZT0wLHRoaXMuX3Bob3RvbWV0cmljU2NhbGU9MSx0aGlzLl9pbnRlbnNpdHlNb2RlPWhlLklOVEVOU0lUWU1PREVfQVVUT01BVElDLHRoaXMuX3JhZGl1cz0xZS01LHRoaXMucmVuZGVyUHJpb3JpdHk9MCx0aGlzLl9zaGFkb3dFbmFibGVkPSEwLHRoaXMuX2V4Y2x1ZGVXaXRoTGF5ZXJNYXNrPTAsdGhpcy5faW5jbHVkZU9ubHlXaXRoTGF5ZXJNYXNrPTAsdGhpcy5fbGlnaHRtYXBNb2RlPTAsdGhpcy5fc2hhZG93R2VuZXJhdG9ycz1udWxsLHRoaXMuX2V4Y2x1ZGVkTWVzaGVzSWRzPW5ldyBBcnJheSx0aGlzLl9pbmNsdWRlZE9ubHlNZXNoZXNJZHM9bmV3IEFycmF5LHRoaXMuX2lzTGlnaHQ9ITAsdGhpcy5nZXRTY2VuZSgpLmFkZExpZ2h0KHRoaXMpLHRoaXMuX3VuaWZvcm1CdWZmZXI9bmV3IFYodGhpcy5nZXRTY2VuZSgpLmdldEVuZ2luZSgpLHZvaWQgMCx2b2lkIDAsZSksdGhpcy5fYnVpbGRVbmlmb3JtTGF5b3V0KCksdGhpcy5pbmNsdWRlZE9ubHlNZXNoZXM9bmV3IEFycmF5LHRoaXMuZXhjbHVkZWRNZXNoZXM9bmV3IEFycmF5LHRoaXMuX3Jlc3luY01lc2hlcygpfWdldCByYW5nZSgpe3JldHVybiB0aGlzLl9yYW5nZX1zZXQgcmFuZ2UoZSl7dGhpcy5fcmFuZ2U9ZSx0aGlzLl9pbnZlcnNlU3F1YXJlZFJhbmdlPTEvKHRoaXMucmFuZ2UqdGhpcy5yYW5nZSl9Z2V0IGludGVuc2l0eU1vZGUoKXtyZXR1cm4gdGhpcy5faW50ZW5zaXR5TW9kZX1zZXQgaW50ZW5zaXR5TW9kZShlKXt0aGlzLl9pbnRlbnNpdHlNb2RlPWUsdGhpcy5fY29tcHV0ZVBob3RvbWV0cmljU2NhbGUoKX1nZXQgcmFkaXVzKCl7cmV0dXJuIHRoaXMuX3JhZGl1c31zZXQgcmFkaXVzKGUpe3RoaXMuX3JhZGl1cz1lLHRoaXMuX2NvbXB1dGVQaG90b21ldHJpY1NjYWxlKCl9Z2V0IHNoYWRvd0VuYWJsZWQoKXtyZXR1cm4gdGhpcy5fc2hhZG93RW5hYmxlZH1zZXQgc2hhZG93RW5hYmxlZChlKXt0aGlzLl9zaGFkb3dFbmFibGVkIT09ZSYmKHRoaXMuX3NoYWRvd0VuYWJsZWQ9ZSx0aGlzLl9tYXJrTWVzaGVzQXNMaWdodERpcnR5KCkpfWdldCBpbmNsdWRlZE9ubHlNZXNoZXMoKXtyZXR1cm4gdGhpcy5faW5jbHVkZWRPbmx5TWVzaGVzfXNldCBpbmNsdWRlZE9ubHlNZXNoZXMoZSl7dGhpcy5faW5jbHVkZWRPbmx5TWVzaGVzPWUsdGhpcy5faG9va0FycmF5Rm9ySW5jbHVkZWRPbmx5KGUpfWdldCBleGNsdWRlZE1lc2hlcygpe3JldHVybiB0aGlzLl9leGNsdWRlZE1lc2hlc31zZXQgZXhjbHVkZWRNZXNoZXMoZSl7dGhpcy5fZXhjbHVkZWRNZXNoZXM9ZSx0aGlzLl9ob29rQXJyYXlGb3JFeGNsdWRlZChlKX1nZXQgZXhjbHVkZVdpdGhMYXllck1hc2soKXtyZXR1cm4gdGhpcy5fZXhjbHVkZVdpdGhMYXllck1hc2t9c2V0IGV4Y2x1ZGVXaXRoTGF5ZXJNYXNrKGUpe3RoaXMuX2V4Y2x1ZGVXaXRoTGF5ZXJNYXNrPWUsdGhpcy5fcmVzeW5jTWVzaGVzKCl9Z2V0IGluY2x1ZGVPbmx5V2l0aExheWVyTWFzaygpe3JldHVybiB0aGlzLl9pbmNsdWRlT25seVdpdGhMYXllck1hc2t9c2V0IGluY2x1ZGVPbmx5V2l0aExheWVyTWFzayhlKXt0aGlzLl9pbmNsdWRlT25seVdpdGhMYXllck1hc2s9ZSx0aGlzLl9yZXN5bmNNZXNoZXMoKX1nZXQgbGlnaHRtYXBNb2RlKCl7cmV0dXJuIHRoaXMuX2xpZ2h0bWFwTW9kZX1zZXQgbGlnaHRtYXBNb2RlKGUpe3RoaXMuX2xpZ2h0bWFwTW9kZSE9PWUmJih0aGlzLl9saWdodG1hcE1vZGU9ZSx0aGlzLl9tYXJrTWVzaGVzQXNMaWdodERpcnR5KCkpfXRyYW5zZmVyVGV4dHVyZXNUb0VmZmVjdChlLHQpe3JldHVybiB0aGlzfV9iaW5kTGlnaHQoZSx0LGkscyxyPSEwKXt2YXIgbjtjb25zdCBhPWUudG9TdHJpbmcoKTtsZXQgbz0hMTtpZih0aGlzLl91bmlmb3JtQnVmZmVyLmJpbmRUb0VmZmVjdChpLCJMaWdodCIrYSksdGhpcy5fcmVuZGVySWQhPT10LmdldFJlbmRlcklkKCl8fHRoaXMuX2xhc3RVc2VTcGVjdWxhciE9PXN8fCF0aGlzLl91bmlmb3JtQnVmZmVyLnVzZVVibyl7dGhpcy5fcmVuZGVySWQ9dC5nZXRSZW5kZXJJZCgpLHRoaXMuX2xhc3RVc2VTcGVjdWxhcj1zO2NvbnN0IGg9dGhpcy5nZXRTY2FsZWRJbnRlbnNpdHkoKTt0aGlzLnRyYW5zZmVyVG9FZmZlY3QoaSxhKSx0aGlzLmRpZmZ1c2Uuc2NhbGVUb1JlZihoLEVpLkNvbG9yM1swXSksdGhpcy5fdW5pZm9ybUJ1ZmZlci51cGRhdGVDb2xvcjQoInZMaWdodERpZmZ1c2UiLEVpLkNvbG9yM1swXSx0aGlzLnJhbmdlLGEpLHMmJih0aGlzLnNwZWN1bGFyLnNjYWxlVG9SZWYoaCxFaS5Db2xvcjNbMV0pLHRoaXMuX3VuaWZvcm1CdWZmZXIudXBkYXRlQ29sb3I0KCJ2TGlnaHRTcGVjdWxhciIsRWkuQ29sb3IzWzFdLHRoaXMucmFkaXVzLGEpKSxvPSEwfWlmKHRoaXMudHJhbnNmZXJUZXh0dXJlc1RvRWZmZWN0KGksYSksdC5zaGFkb3dzRW5hYmxlZCYmdGhpcy5zaGFkb3dFbmFibGVkJiZyKXtjb25zdCBoPShuPXRoaXMuZ2V0U2hhZG93R2VuZXJhdG9yKHQuYWN0aXZlQ2FtZXJhKSkhPT1udWxsJiZuIT09dm9pZCAwP246dGhpcy5nZXRTaGFkb3dHZW5lcmF0b3IoKTtoJiYoaC5iaW5kU2hhZG93TGlnaHQoYSxpKSxvPSEwKX1vP3RoaXMuX3VuaWZvcm1CdWZmZXIudXBkYXRlKCk6dGhpcy5fdW5pZm9ybUJ1ZmZlci5iaW5kVW5pZm9ybUJ1ZmZlcigpfWdldENsYXNzTmFtZSgpe3JldHVybiJMaWdodCJ9dG9TdHJpbmcoZSl7bGV0IHQ9Ik5hbWU6ICIrdGhpcy5uYW1lO2lmKHQrPSIsIHR5cGU6ICIrWyJQb2ludCIsIkRpcmVjdGlvbmFsIiwiU3BvdCIsIkhlbWlzcGhlcmljIl1bdGhpcy5nZXRUeXBlSUQoKV0sdGhpcy5hbmltYXRpb25zKWZvcihsZXQgaT0wO2k8dGhpcy5hbmltYXRpb25zLmxlbmd0aDtpKyspdCs9IiwgYW5pbWF0aW9uWzBdOiAiK3RoaXMuYW5pbWF0aW9uc1tpXS50b1N0cmluZyhlKTtyZXR1cm4gdH1fc3luY1BhcmVudEVuYWJsZWRTdGF0ZSgpe3N1cGVyLl9zeW5jUGFyZW50RW5hYmxlZFN0YXRlKCksdGhpcy5pc0Rpc3Bvc2VkKCl8fHRoaXMuX3Jlc3luY01lc2hlcygpfXNldEVuYWJsZWQoZSl7c3VwZXIuc2V0RW5hYmxlZChlKSx0aGlzLl9yZXN5bmNNZXNoZXMoKX1nZXRTaGFkb3dHZW5lcmF0b3IoZT1udWxsKXt2YXIgdDtyZXR1cm4gdGhpcy5fc2hhZG93R2VuZXJhdG9ycz09PW51bGw/bnVsbDoodD10aGlzLl9zaGFkb3dHZW5lcmF0b3JzLmdldChlKSkhPT1udWxsJiZ0IT09dm9pZCAwP3Q6bnVsbH1nZXRTaGFkb3dHZW5lcmF0b3JzKCl7cmV0dXJuIHRoaXMuX3NoYWRvd0dlbmVyYXRvcnN9Z2V0QWJzb2x1dGVQb3NpdGlvbigpe3JldHVybiBwLlplcm8oKX1jYW5BZmZlY3RNZXNoKGUpe3JldHVybiBlPyEodGhpcy5pbmNsdWRlZE9ubHlNZXNoZXMmJnRoaXMuaW5jbHVkZWRPbmx5TWVzaGVzLmxlbmd0aD4wJiZ0aGlzLmluY2x1ZGVkT25seU1lc2hlcy5pbmRleE9mKGUpPT09LTF8fHRoaXMuZXhjbHVkZWRNZXNoZXMmJnRoaXMuZXhjbHVkZWRNZXNoZXMubGVuZ3RoPjAmJnRoaXMuZXhjbHVkZWRNZXNoZXMuaW5kZXhPZihlKSE9PS0xfHx0aGlzLmluY2x1ZGVPbmx5V2l0aExheWVyTWFzayE9PTAmJiEodGhpcy5pbmNsdWRlT25seVdpdGhMYXllck1hc2smZS5sYXllck1hc2spfHx0aGlzLmV4Y2x1ZGVXaXRoTGF5ZXJNYXNrIT09MCYmdGhpcy5leGNsdWRlV2l0aExheWVyTWFzayZlLmxheWVyTWFzayk6ITB9ZGlzcG9zZShlLHQ9ITEpe2lmKHRoaXMuX3NoYWRvd0dlbmVyYXRvcnMpe2NvbnN0IGk9dGhpcy5fc2hhZG93R2VuZXJhdG9ycy52YWx1ZXMoKTtmb3IobGV0IHM9aS5uZXh0KCk7cy5kb25lIT09ITA7cz1pLm5leHQoKSlzLnZhbHVlLmRpc3Bvc2UoKTt0aGlzLl9zaGFkb3dHZW5lcmF0b3JzPW51bGx9aWYodGhpcy5nZXRTY2VuZSgpLnN0b3BBbmltYXRpb24odGhpcyksdGhpcy5fcGFyZW50Q29udGFpbmVyKXtjb25zdCBpPXRoaXMuX3BhcmVudENvbnRhaW5lci5saWdodHMuaW5kZXhPZih0aGlzKTtpPi0xJiZ0aGlzLl9wYXJlbnRDb250YWluZXIubGlnaHRzLnNwbGljZShpLDEpLHRoaXMuX3BhcmVudENvbnRhaW5lcj1udWxsfWZvcihjb25zdCBpIG9mIHRoaXMuZ2V0U2NlbmUoKS5tZXNoZXMpaS5fcmVtb3ZlTGlnaHRTb3VyY2UodGhpcywhMCk7dGhpcy5fdW5pZm9ybUJ1ZmZlci5kaXNwb3NlKCksdGhpcy5nZXRTY2VuZSgpLnJlbW92ZUxpZ2h0KHRoaXMpLHN1cGVyLmRpc3Bvc2UoZSx0KX1nZXRUeXBlSUQoKXtyZXR1cm4gMH1nZXRTY2FsZWRJbnRlbnNpdHkoKXtyZXR1cm4gdGhpcy5fcGhvdG9tZXRyaWNTY2FsZSp0aGlzLmludGVuc2l0eX1jbG9uZShlLHQ9bnVsbCl7Y29uc3QgaT1oZS5HZXRDb25zdHJ1Y3RvckZyb21OYW1lKHRoaXMuZ2V0VHlwZUlEKCksZSx0aGlzLmdldFNjZW5lKCkpO2lmKCFpKXJldHVybiBudWxsO2NvbnN0IHM9YWUuQ2xvbmUoaSx0aGlzKTtyZXR1cm4gZSYmKHMubmFtZT1lKSx0JiYocy5wYXJlbnQ9dCkscy5zZXRFbmFibGVkKHRoaXMuaXNFbmFibGVkKCkpLHRoaXMub25DbG9uZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhzKSxzfXNlcmlhbGl6ZSgpe2NvbnN0IGU9YWUuU2VyaWFsaXplKHRoaXMpO3JldHVybiBlLnVuaXF1ZUlkPXRoaXMudW5pcXVlSWQsZS50eXBlPXRoaXMuZ2V0VHlwZUlEKCksdGhpcy5wYXJlbnQmJnRoaXMucGFyZW50Ll9zZXJpYWxpemVBc1BhcmVudChlKSx0aGlzLmV4Y2x1ZGVkTWVzaGVzLmxlbmd0aD4wJiYoZS5leGNsdWRlZE1lc2hlc0lkcz1bXSx0aGlzLmV4Y2x1ZGVkTWVzaGVzLmZvckVhY2godD0+e2UuZXhjbHVkZWRNZXNoZXNJZHMucHVzaCh0LmlkKX0pKSx0aGlzLmluY2x1ZGVkT25seU1lc2hlcy5sZW5ndGg+MCYmKGUuaW5jbHVkZWRPbmx5TWVzaGVzSWRzPVtdLHRoaXMuaW5jbHVkZWRPbmx5TWVzaGVzLmZvckVhY2godD0+e2UuaW5jbHVkZWRPbmx5TWVzaGVzSWRzLnB1c2godC5pZCl9KSksYWUuQXBwZW5kU2VyaWFsaXplZEFuaW1hdGlvbnModGhpcyxlKSxlLnJhbmdlcz10aGlzLnNlcmlhbGl6ZUFuaW1hdGlvblJhbmdlcygpLGUuaXNFbmFibGVkPXRoaXMuaXNFbmFibGVkKCksZX1zdGF0aWMgR2V0Q29uc3RydWN0b3JGcm9tTmFtZShlLHQsaSl7Y29uc3Qgcz16ZS5Db25zdHJ1Y3QoIkxpZ2h0X1R5cGVfIitlLHQsaSk7cmV0dXJuIHN8fG51bGx9c3RhdGljIFBhcnNlKGUsdCl7Y29uc3QgaT1oZS5HZXRDb25zdHJ1Y3RvckZyb21OYW1lKGUudHlwZSxlLm5hbWUsdCk7aWYoIWkpcmV0dXJuIG51bGw7Y29uc3Qgcz1hZS5QYXJzZShpLGUsdCk7aWYoZS5leGNsdWRlZE1lc2hlc0lkcyYmKHMuX2V4Y2x1ZGVkTWVzaGVzSWRzPWUuZXhjbHVkZWRNZXNoZXNJZHMpLGUuaW5jbHVkZWRPbmx5TWVzaGVzSWRzJiYocy5faW5jbHVkZWRPbmx5TWVzaGVzSWRzPWUuaW5jbHVkZWRPbmx5TWVzaGVzSWRzKSxlLnBhcmVudElkIT09dm9pZCAwJiYocy5fd2FpdGluZ1BhcmVudElkPWUucGFyZW50SWQpLGUucGFyZW50SW5zdGFuY2VJbmRleCE9PXZvaWQgMCYmKHMuX3dhaXRpbmdQYXJlbnRJbnN0YW5jZUluZGV4PWUucGFyZW50SW5zdGFuY2VJbmRleCksZS5mYWxsb2ZmVHlwZSE9PXZvaWQgMCYmKHMuZmFsbG9mZlR5cGU9ZS5mYWxsb2ZmVHlwZSksZS5saWdodG1hcE1vZGUhPT12b2lkIDAmJihzLmxpZ2h0bWFwTW9kZT1lLmxpZ2h0bWFwTW9kZSksZS5hbmltYXRpb25zKXtmb3IobGV0IHI9MDtyPGUuYW5pbWF0aW9ucy5sZW5ndGg7cisrKXtjb25zdCBuPWUuYW5pbWF0aW9uc1tyXSxhPXJpKCJCQUJZTE9OLkFuaW1hdGlvbiIpO2EmJnMuYW5pbWF0aW9ucy5wdXNoKGEuUGFyc2UobikpfXplLlBhcnNlQW5pbWF0aW9uUmFuZ2VzKHMsZSx0KX1yZXR1cm4gZS5hdXRvQW5pbWF0ZSYmdC5iZWdpbkFuaW1hdGlvbihzLGUuYXV0b0FuaW1hdGVGcm9tLGUuYXV0b0FuaW1hdGVUbyxlLmF1dG9BbmltYXRlTG9vcCxlLmF1dG9BbmltYXRlU3BlZWR8fDEpLGUuaXNFbmFibGVkIT09dm9pZCAwJiZzLnNldEVuYWJsZWQoZS5pc0VuYWJsZWQpLHN9X2hvb2tBcnJheUZvckV4Y2x1ZGVkKGUpe2NvbnN0IHQ9ZS5wdXNoO2UucHVzaD0oLi4ucyk9Pntjb25zdCByPXQuYXBwbHkoZSxzKTtmb3IoY29uc3QgbiBvZiBzKW4uX3Jlc3luY0xpZ2h0U291cmNlKHRoaXMpO3JldHVybiByfTtjb25zdCBpPWUuc3BsaWNlO2Uuc3BsaWNlPShzLHIpPT57Y29uc3Qgbj1pLmFwcGx5KGUsW3Mscl0pO2Zvcihjb25zdCBhIG9mIG4pYS5fcmVzeW5jTGlnaHRTb3VyY2UodGhpcyk7cmV0dXJuIG59O2Zvcihjb25zdCBzIG9mIGUpcy5fcmVzeW5jTGlnaHRTb3VyY2UodGhpcyl9X2hvb2tBcnJheUZvckluY2x1ZGVkT25seShlKXtjb25zdCB0PWUucHVzaDtlLnB1c2g9KC4uLnMpPT57Y29uc3Qgcj10LmFwcGx5KGUscyk7cmV0dXJuIHRoaXMuX3Jlc3luY01lc2hlcygpLHJ9O2NvbnN0IGk9ZS5zcGxpY2U7ZS5zcGxpY2U9KHMscik9Pntjb25zdCBuPWkuYXBwbHkoZSxbcyxyXSk7cmV0dXJuIHRoaXMuX3Jlc3luY01lc2hlcygpLG59LHRoaXMuX3Jlc3luY01lc2hlcygpfV9yZXN5bmNNZXNoZXMoKXtmb3IoY29uc3QgZSBvZiB0aGlzLmdldFNjZW5lKCkubWVzaGVzKWUuX3Jlc3luY0xpZ2h0U291cmNlKHRoaXMpfV9tYXJrTWVzaGVzQXNMaWdodERpcnR5KCl7Zm9yKGNvbnN0IGUgb2YgdGhpcy5nZXRTY2VuZSgpLm1lc2hlcyllLmxpZ2h0U291cmNlcy5pbmRleE9mKHRoaXMpIT09LTEmJmUuX21hcmtTdWJNZXNoZXNBc0xpZ2h0RGlydHkoKX1fY29tcHV0ZVBob3RvbWV0cmljU2NhbGUoKXt0aGlzLl9waG90b21ldHJpY1NjYWxlPXRoaXMuX2dldFBob3RvbWV0cmljU2NhbGUoKSx0aGlzLmdldFNjZW5lKCkucmVzZXRDYWNoZWRNYXRlcmlhbCgpfV9nZXRQaG90b21ldHJpY1NjYWxlKCl7bGV0IGU9MDtjb25zdCB0PXRoaXMuZ2V0VHlwZUlEKCk7bGV0IGk9dGhpcy5pbnRlbnNpdHlNb2RlO3N3aXRjaChpPT09aGUuSU5URU5TSVRZTU9ERV9BVVRPTUFUSUMmJih0PT09aGUuTElHSFRUWVBFSURfRElSRUNUSU9OQUxMSUdIVD9pPWhlLklOVEVOU0lUWU1PREVfSUxMVU1JTkFOQ0U6aT1oZS5JTlRFTlNJVFlNT0RFX0xVTUlOT1VTSU5URU5TSVRZKSx0KXtjYXNlIGhlLkxJR0hUVFlQRUlEX1BPSU5UTElHSFQ6Y2FzZSBoZS5MSUdIVFRZUEVJRF9TUE9UTElHSFQ6c3dpdGNoKGkpe2Nhc2UgaGUuSU5URU5TSVRZTU9ERV9MVU1JTk9VU1BPV0VSOmU9MS8oNCpNYXRoLlBJKTticmVhaztjYXNlIGhlLklOVEVOU0lUWU1PREVfTFVNSU5PVVNJTlRFTlNJVFk6ZT0xO2JyZWFrO2Nhc2UgaGUuSU5URU5TSVRZTU9ERV9MVU1JTkFOQ0U6ZT10aGlzLnJhZGl1cyp0aGlzLnJhZGl1czticmVha31icmVhaztjYXNlIGhlLkxJR0hUVFlQRUlEX0RJUkVDVElPTkFMTElHSFQ6c3dpdGNoKGkpe2Nhc2UgaGUuSU5URU5TSVRZTU9ERV9JTExVTUlOQU5DRTplPTE7YnJlYWs7Y2FzZSBoZS5JTlRFTlNJVFlNT0RFX0xVTUlOQU5DRTp7bGV0IHM9dGhpcy5yYWRpdXM7cz1NYXRoLm1heChzLC4wMDEpLGU9MipNYXRoLlBJKigxLU1hdGguY29zKHMpKTticmVha319YnJlYWs7Y2FzZSBoZS5MSUdIVFRZUEVJRF9IRU1JU1BIRVJJQ0xJR0hUOmU9MTticmVha31yZXR1cm4gZX1fcmVvcmRlckxpZ2h0c0luU2NlbmUoKXtjb25zdCBlPXRoaXMuZ2V0U2NlbmUoKTt0aGlzLl9yZW5kZXJQcmlvcml0eSE9MCYmKGUucmVxdWlyZUxpZ2h0U29ydGluZz0hMCksdGhpcy5nZXRTY2VuZSgpLnNvcnRMaWdodHNCeVByaW9yaXR5KCl9fWhlLkZBTExPRkZfREVGQVVMVD1FZS5GQUxMT0ZGX0RFRkFVTFQsaGUuRkFMTE9GRl9QSFlTSUNBTD1FZS5GQUxMT0ZGX1BIWVNJQ0FMLGhlLkZBTExPRkZfR0xURj1FZS5GQUxMT0ZGX0dMVEYsaGUuRkFMTE9GRl9TVEFOREFSRD1FZS5GQUxMT0ZGX1NUQU5EQVJELGhlLkxJR0hUTUFQX0RFRkFVTFQ9RWUuTElHSFRNQVBfREVGQVVMVCxoZS5MSUdIVE1BUF9TUEVDVUxBUj1FZS5MSUdIVE1BUF9TUEVDVUxBUixoZS5MSUdIVE1BUF9TSEFET1dTT05MWT1FZS5MSUdIVE1BUF9TSEFET1dTT05MWSxoZS5JTlRFTlNJVFlNT0RFX0FVVE9NQVRJQz1FZS5JTlRFTlNJVFlNT0RFX0FVVE9NQVRJQyxoZS5JTlRFTlNJVFlNT0RFX0xVTUlOT1VTUE9XRVI9RWUuSU5URU5TSVRZTU9ERV9MVU1JTk9VU1BPV0VSLGhlLklOVEVOU0lUWU1PREVfTFVNSU5PVVNJTlRFTlNJVFk9RWUuSU5URU5TSVRZTU9ERV9MVU1JTk9VU0lOVEVOU0lUWSxoZS5JTlRFTlNJVFlNT0RFX0lMTFVNSU5BTkNFPUVlLklOVEVOU0lUWU1PREVfSUxMVU1JTkFOQ0UsaGUuSU5URU5TSVRZTU9ERV9MVU1JTkFOQ0U9RWUuSU5URU5TSVRZTU9ERV9MVU1JTkFOQ0UsaGUuTElHSFRUWVBFSURfUE9JTlRMSUdIVD1FZS5MSUdIVFRZUEVJRF9QT0lOVExJR0hULGhlLkxJR0hUVFlQRUlEX0RJUkVDVElPTkFMTElHSFQ9RWUuTElHSFRUWVBFSURfRElSRUNUSU9OQUxMSUdIVCxoZS5MSUdIVFRZUEVJRF9TUE9UTElHSFQ9RWUuTElHSFRUWVBFSURfU1BPVExJR0hULGhlLkxJR0hUVFlQRUlEX0hFTUlTUEhFUklDTElHSFQ9RWUuTElHSFRUWVBFSURfSEVNSVNQSEVSSUNMSUdIVCxUKFtjaSgpXSxoZS5wcm90b3R5cGUsImRpZmZ1c2UiLHZvaWQgMCksVChbY2koKV0saGUucHJvdG90eXBlLCJzcGVjdWxhciIsdm9pZCAwKSxUKFtSKCldLGhlLnByb3RvdHlwZSwiZmFsbG9mZlR5cGUiLHZvaWQgMCksVChbUigpXSxoZS5wcm90b3R5cGUsImludGVuc2l0eSIsdm9pZCAwKSxUKFtSKCldLGhlLnByb3RvdHlwZSwicmFuZ2UiLG51bGwpLFQoW1IoKV0saGUucHJvdG90eXBlLCJpbnRlbnNpdHlNb2RlIixudWxsKSxUKFtSKCldLGhlLnByb3RvdHlwZSwicmFkaXVzIixudWxsKSxUKFtSKCldLGhlLnByb3RvdHlwZSwiX3JlbmRlclByaW9yaXR5Iix2b2lkIDApLFQoW2JlKCJfcmVvcmRlckxpZ2h0c0luU2NlbmUiKV0saGUucHJvdG90eXBlLCJyZW5kZXJQcmlvcml0eSIsdm9pZCAwKSxUKFtSKCJzaGFkb3dFbmFibGVkIildLGhlLnByb3RvdHlwZSwiX3NoYWRvd0VuYWJsZWQiLHZvaWQgMCksVChbUigiZXhjbHVkZVdpdGhMYXllck1hc2siKV0saGUucHJvdG90eXBlLCJfZXhjbHVkZVdpdGhMYXllck1hc2siLHZvaWQgMCksVChbUigiaW5jbHVkZU9ubHlXaXRoTGF5ZXJNYXNrIildLGhlLnByb3RvdHlwZSwiX2luY2x1ZGVPbmx5V2l0aExheWVyTWFzayIsdm9pZCAwKSxUKFtSKCJsaWdodG1hcE1vZGUiKV0saGUucHJvdG90eXBlLCJfbGlnaHRtYXBNb2RlIix2b2lkIDApO2NsYXNzIFVpIGV4dGVuZHMgaGV7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMuX25lZWRQcm9qZWN0aW9uTWF0cml4Q29tcHV0ZT0hMH1fc2V0UG9zaXRpb24oZSl7dGhpcy5fcG9zaXRpb249ZX1nZXQgcG9zaXRpb24oKXtyZXR1cm4gdGhpcy5fcG9zaXRpb259c2V0IHBvc2l0aW9uKGUpe3RoaXMuX3NldFBvc2l0aW9uKGUpfV9zZXREaXJlY3Rpb24oZSl7dGhpcy5fZGlyZWN0aW9uPWV9Z2V0IGRpcmVjdGlvbigpe3JldHVybiB0aGlzLl9kaXJlY3Rpb259c2V0IGRpcmVjdGlvbihlKXt0aGlzLl9zZXREaXJlY3Rpb24oZSl9Z2V0IHNoYWRvd01pblooKXtyZXR1cm4gdGhpcy5fc2hhZG93TWluWn1zZXQgc2hhZG93TWluWihlKXt0aGlzLl9zaGFkb3dNaW5aPWUsdGhpcy5mb3JjZVByb2plY3Rpb25NYXRyaXhDb21wdXRlKCl9Z2V0IHNoYWRvd01heFooKXtyZXR1cm4gdGhpcy5fc2hhZG93TWF4Wn1zZXQgc2hhZG93TWF4WihlKXt0aGlzLl9zaGFkb3dNYXhaPWUsdGhpcy5mb3JjZVByb2plY3Rpb25NYXRyaXhDb21wdXRlKCl9Y29tcHV0ZVRyYW5zZm9ybWVkSW5mb3JtYXRpb24oKXtyZXR1cm4gdGhpcy5wYXJlbnQmJnRoaXMucGFyZW50LmdldFdvcmxkTWF0cml4Pyh0aGlzLnRyYW5zZm9ybWVkUG9zaXRpb258fCh0aGlzLnRyYW5zZm9ybWVkUG9zaXRpb249cC5aZXJvKCkpLHAuVHJhbnNmb3JtQ29vcmRpbmF0ZXNUb1JlZih0aGlzLnBvc2l0aW9uLHRoaXMucGFyZW50LmdldFdvcmxkTWF0cml4KCksdGhpcy50cmFuc2Zvcm1lZFBvc2l0aW9uKSx0aGlzLmRpcmVjdGlvbiYmKHRoaXMudHJhbnNmb3JtZWREaXJlY3Rpb258fCh0aGlzLnRyYW5zZm9ybWVkRGlyZWN0aW9uPXAuWmVybygpKSxwLlRyYW5zZm9ybU5vcm1hbFRvUmVmKHRoaXMuZGlyZWN0aW9uLHRoaXMucGFyZW50LmdldFdvcmxkTWF0cml4KCksdGhpcy50cmFuc2Zvcm1lZERpcmVjdGlvbikpLCEwKTohMX1nZXREZXB0aFNjYWxlKCl7cmV0dXJuIDUwfWdldFNoYWRvd0RpcmVjdGlvbihlKXtyZXR1cm4gdGhpcy50cmFuc2Zvcm1lZERpcmVjdGlvbj90aGlzLnRyYW5zZm9ybWVkRGlyZWN0aW9uOnRoaXMuZGlyZWN0aW9ufWdldEFic29sdXRlUG9zaXRpb24oKXtyZXR1cm4gdGhpcy50cmFuc2Zvcm1lZFBvc2l0aW9uP3RoaXMudHJhbnNmb3JtZWRQb3NpdGlvbjp0aGlzLnBvc2l0aW9ufXNldERpcmVjdGlvblRvVGFyZ2V0KGUpe3JldHVybiB0aGlzLmRpcmVjdGlvbj1wLk5vcm1hbGl6ZShlLnN1YnRyYWN0KHRoaXMucG9zaXRpb24pKSx0aGlzLmRpcmVjdGlvbn1nZXRSb3RhdGlvbigpe3RoaXMuZGlyZWN0aW9uLm5vcm1hbGl6ZSgpO2NvbnN0IGU9cC5Dcm9zcyh0aGlzLmRpcmVjdGlvbixfaS5ZKSx0PXAuQ3Jvc3MoZSx0aGlzLmRpcmVjdGlvbik7cmV0dXJuIHAuUm90YXRpb25Gcm9tQXhpcyhlLHQsdGhpcy5kaXJlY3Rpb24pfW5lZWRDdWJlKCl7cmV0dXJuITF9bmVlZFByb2plY3Rpb25NYXRyaXhDb21wdXRlKCl7cmV0dXJuIHRoaXMuX25lZWRQcm9qZWN0aW9uTWF0cml4Q29tcHV0ZX1mb3JjZVByb2plY3Rpb25NYXRyaXhDb21wdXRlKCl7dGhpcy5fbmVlZFByb2plY3Rpb25NYXRyaXhDb21wdXRlPSEwfV9pbml0Q2FjaGUoKXtzdXBlci5faW5pdENhY2hlKCksdGhpcy5fY2FjaGUucG9zaXRpb249cC5aZXJvKCl9X2lzU3luY2hyb25pemVkKCl7cmV0dXJuISF0aGlzLl9jYWNoZS5wb3NpdGlvbi5lcXVhbHModGhpcy5wb3NpdGlvbil9Y29tcHV0ZVdvcmxkTWF0cml4KGUpe3JldHVybiFlJiZ0aGlzLmlzU3luY2hyb25pemVkKCk/KHRoaXMuX2N1cnJlbnRSZW5kZXJJZD10aGlzLmdldFNjZW5lKCkuZ2V0UmVuZGVySWQoKSx0aGlzLl93b3JsZE1hdHJpeCk6KHRoaXMuX3VwZGF0ZUNhY2hlKCksdGhpcy5fY2FjaGUucG9zaXRpb24uY29weUZyb20odGhpcy5wb3NpdGlvbiksdGhpcy5fd29ybGRNYXRyaXh8fCh0aGlzLl93b3JsZE1hdHJpeD14LklkZW50aXR5KCkpLHguVHJhbnNsYXRpb25Ub1JlZih0aGlzLnBvc2l0aW9uLngsdGhpcy5wb3NpdGlvbi55LHRoaXMucG9zaXRpb24ueix0aGlzLl93b3JsZE1hdHJpeCksdGhpcy5wYXJlbnQmJnRoaXMucGFyZW50LmdldFdvcmxkTWF0cml4JiYodGhpcy5fd29ybGRNYXRyaXgubXVsdGlwbHlUb1JlZih0aGlzLnBhcmVudC5nZXRXb3JsZE1hdHJpeCgpLHRoaXMuX3dvcmxkTWF0cml4KSx0aGlzLl9tYXJrU3luY2VkV2l0aFBhcmVudCgpKSx0aGlzLl93b3JsZE1hdHJpeERldGVybWluYW50SXNEaXJ0eT0hMCx0aGlzLl93b3JsZE1hdHJpeCl9Z2V0RGVwdGhNaW5aKGUpe3JldHVybiB0aGlzLnNoYWRvd01pblohPT12b2lkIDA/dGhpcy5zaGFkb3dNaW5aOmUubWluWn1nZXREZXB0aE1heFooZSl7cmV0dXJuIHRoaXMuc2hhZG93TWF4WiE9PXZvaWQgMD90aGlzLnNoYWRvd01heFo6ZS5tYXhafXNldFNoYWRvd1Byb2plY3Rpb25NYXRyaXgoZSx0LGkpe3JldHVybiB0aGlzLmN1c3RvbVByb2plY3Rpb25NYXRyaXhCdWlsZGVyP3RoaXMuY3VzdG9tUHJvamVjdGlvbk1hdHJpeEJ1aWxkZXIodCxpLGUpOnRoaXMuX3NldERlZmF1bHRTaGFkb3dQcm9qZWN0aW9uTWF0cml4KGUsdCxpKSx0aGlzfV9zeW5jUGFyZW50RW5hYmxlZFN0YXRlKCl7c3VwZXIuX3N5bmNQYXJlbnRFbmFibGVkU3RhdGUoKSwoIXRoaXMucGFyZW50fHwhdGhpcy5wYXJlbnQuZ2V0V29ybGRNYXRyaXgpJiYodGhpcy50cmFuc2Zvcm1lZFBvc2l0aW9uPW51bGwsdGhpcy50cmFuc2Zvcm1lZERpcmVjdGlvbj1udWxsKX19VChbQnQoKV0sVWkucHJvdG90eXBlLCJwb3NpdGlvbiIsbnVsbCksVChbQnQoKV0sVWkucHJvdG90eXBlLCJkaXJlY3Rpb24iLG51bGwpLFQoW1IoKV0sVWkucHJvdG90eXBlLCJzaGFkb3dNaW5aIixudWxsKSxUKFtSKCldLFVpLnByb3RvdHlwZSwic2hhZG93TWF4WiIsbnVsbCksemUuQWRkTm9kZUNvbnN0cnVjdG9yKCJMaWdodF9UeXBlXzEiLChjLGUpPT4oKT0+bmV3IEl0KGMscC5aZXJvKCksZSkpO2NsYXNzIEl0IGV4dGVuZHMgVWl7Y29uc3RydWN0b3IoZSx0LGkpe3N1cGVyKGUsaSksdGhpcy5fc2hhZG93RnJ1c3R1bVNpemU9MCx0aGlzLl9zaGFkb3dPcnRob1NjYWxlPS4xLHRoaXMuYXV0b1VwZGF0ZUV4dGVuZHM9ITAsdGhpcy5hdXRvQ2FsY1NoYWRvd1pCb3VuZHM9ITEsdGhpcy5fb3J0aG9MZWZ0PU51bWJlci5NQVhfVkFMVUUsdGhpcy5fb3J0aG9SaWdodD1OdW1iZXIuTUlOX1ZBTFVFLHRoaXMuX29ydGhvVG9wPU51bWJlci5NSU5fVkFMVUUsdGhpcy5fb3J0aG9Cb3R0b209TnVtYmVyLk1BWF9WQUxVRSx0aGlzLnBvc2l0aW9uPXQuc2NhbGUoLTEpLHRoaXMuZGlyZWN0aW9uPXR9Z2V0IHNoYWRvd0ZydXN0dW1TaXplKCl7cmV0dXJuIHRoaXMuX3NoYWRvd0ZydXN0dW1TaXplfXNldCBzaGFkb3dGcnVzdHVtU2l6ZShlKXt0aGlzLl9zaGFkb3dGcnVzdHVtU2l6ZT1lLHRoaXMuZm9yY2VQcm9qZWN0aW9uTWF0cml4Q29tcHV0ZSgpfWdldCBzaGFkb3dPcnRob1NjYWxlKCl7cmV0dXJuIHRoaXMuX3NoYWRvd09ydGhvU2NhbGV9c2V0IHNoYWRvd09ydGhvU2NhbGUoZSl7dGhpcy5fc2hhZG93T3J0aG9TY2FsZT1lLHRoaXMuZm9yY2VQcm9qZWN0aW9uTWF0cml4Q29tcHV0ZSgpfWdldCBvcnRob0xlZnQoKXtyZXR1cm4gdGhpcy5fb3J0aG9MZWZ0fXNldCBvcnRob0xlZnQoZSl7dGhpcy5fb3J0aG9MZWZ0PWV9Z2V0IG9ydGhvUmlnaHQoKXtyZXR1cm4gdGhpcy5fb3J0aG9SaWdodH1zZXQgb3J0aG9SaWdodChlKXt0aGlzLl9vcnRob1JpZ2h0PWV9Z2V0IG9ydGhvVG9wKCl7cmV0dXJuIHRoaXMuX29ydGhvVG9wfXNldCBvcnRob1RvcChlKXt0aGlzLl9vcnRob1RvcD1lfWdldCBvcnRob0JvdHRvbSgpe3JldHVybiB0aGlzLl9vcnRob0JvdHRvbX1zZXQgb3J0aG9Cb3R0b20oZSl7dGhpcy5fb3J0aG9Cb3R0b209ZX1nZXRDbGFzc05hbWUoKXtyZXR1cm4iRGlyZWN0aW9uYWxMaWdodCJ9Z2V0VHlwZUlEKCl7cmV0dXJuIGhlLkxJR0hUVFlQRUlEX0RJUkVDVElPTkFMTElHSFR9X3NldERlZmF1bHRTaGFkb3dQcm9qZWN0aW9uTWF0cml4KGUsdCxpKXt0aGlzLnNoYWRvd0ZydXN0dW1TaXplPjA/dGhpcy5fc2V0RGVmYXVsdEZpeGVkRnJ1c3R1bVNoYWRvd1Byb2plY3Rpb25NYXRyaXgoZSk6dGhpcy5fc2V0RGVmYXVsdEF1dG9FeHRlbmRTaGFkb3dQcm9qZWN0aW9uTWF0cml4KGUsdCxpKX1fc2V0RGVmYXVsdEZpeGVkRnJ1c3R1bVNoYWRvd1Byb2plY3Rpb25NYXRyaXgoZSl7Y29uc3QgdD10aGlzLmdldFNjZW5lKCkuYWN0aXZlQ2FtZXJhO3QmJnguT3J0aG9MSFRvUmVmKHRoaXMuc2hhZG93RnJ1c3R1bVNpemUsdGhpcy5zaGFkb3dGcnVzdHVtU2l6ZSx0aGlzLnNoYWRvd01pblohPT12b2lkIDA/dGhpcy5zaGFkb3dNaW5aOnQubWluWix0aGlzLnNoYWRvd01heFohPT12b2lkIDA/dGhpcy5zaGFkb3dNYXhaOnQubWF4WixlLHRoaXMuZ2V0U2NlbmUoKS5nZXRFbmdpbmUoKS5pc05EQ0hhbGZaUmFuZ2UpfV9zZXREZWZhdWx0QXV0b0V4dGVuZFNoYWRvd1Byb2plY3Rpb25NYXRyaXgoZSx0LGkpe2NvbnN0IHM9dGhpcy5nZXRTY2VuZSgpLmFjdGl2ZUNhbWVyYTtpZighcylyZXR1cm47aWYodGhpcy5hdXRvVXBkYXRlRXh0ZW5kc3x8dGhpcy5fb3J0aG9MZWZ0PT09TnVtYmVyLk1BWF9WQUxVRSl7Y29uc3QgbD1wLlplcm8oKTt0aGlzLl9vcnRob0xlZnQ9TnVtYmVyLk1BWF9WQUxVRSx0aGlzLl9vcnRob1JpZ2h0PU51bWJlci5NSU5fVkFMVUUsdGhpcy5fb3J0aG9Ub3A9TnVtYmVyLk1JTl9WQUxVRSx0aGlzLl9vcnRob0JvdHRvbT1OdW1iZXIuTUFYX1ZBTFVFO2xldCB1PU51bWJlci5NQVhfVkFMVUUsZD1OdW1iZXIuTUlOX1ZBTFVFO2ZvcihsZXQgZj0wO2Y8aS5sZW5ndGg7ZisrKXtjb25zdCBfPWlbZl07aWYoIV8pY29udGludWU7Y29uc3QgbT1fLmdldEJvdW5kaW5nSW5mbygpLmJvdW5kaW5nQm94O2ZvcihsZXQgdj0wO3Y8bS52ZWN0b3JzV29ybGQubGVuZ3RoO3YrKylwLlRyYW5zZm9ybUNvb3JkaW5hdGVzVG9SZWYobS52ZWN0b3JzV29ybGRbdl0sdCxsKSxsLng8dGhpcy5fb3J0aG9MZWZ0JiYodGhpcy5fb3J0aG9MZWZ0PWwueCksbC55PHRoaXMuX29ydGhvQm90dG9tJiYodGhpcy5fb3J0aG9Cb3R0b209bC55KSxsLng+dGhpcy5fb3J0aG9SaWdodCYmKHRoaXMuX29ydGhvUmlnaHQ9bC54KSxsLnk+dGhpcy5fb3J0aG9Ub3AmJih0aGlzLl9vcnRob1RvcD1sLnkpLHRoaXMuYXV0b0NhbGNTaGFkb3daQm91bmRzJiYobC56PHUmJih1PWwueiksbC56PmQmJihkPWwueikpfXRoaXMuYXV0b0NhbGNTaGFkb3daQm91bmRzJiYodGhpcy5fc2hhZG93TWluWj11LHRoaXMuX3NoYWRvd01heFo9ZCl9Y29uc3Qgcj10aGlzLl9vcnRob1JpZ2h0LXRoaXMuX29ydGhvTGVmdCxuPXRoaXMuX29ydGhvVG9wLXRoaXMuX29ydGhvQm90dG9tLGE9dGhpcy5zaGFkb3dNaW5aIT09dm9pZCAwP3RoaXMuc2hhZG93TWluWjpzLm1pblosbz10aGlzLnNoYWRvd01heFohPT12b2lkIDA/dGhpcy5zaGFkb3dNYXhaOnMubWF4WixoPXRoaXMuZ2V0U2NlbmUoKS5nZXRFbmdpbmUoKS51c2VSZXZlcnNlRGVwdGhCdWZmZXI7eC5PcnRob09mZkNlbnRlckxIVG9SZWYodGhpcy5fb3J0aG9MZWZ0LXIqdGhpcy5zaGFkb3dPcnRob1NjYWxlLHRoaXMuX29ydGhvUmlnaHQrcip0aGlzLnNoYWRvd09ydGhvU2NhbGUsdGhpcy5fb3J0aG9Cb3R0b20tbip0aGlzLnNoYWRvd09ydGhvU2NhbGUsdGhpcy5fb3J0aG9Ub3Arbip0aGlzLnNoYWRvd09ydGhvU2NhbGUsaD9vOmEsaD9hOm8sZSx0aGlzLmdldFNjZW5lKCkuZ2V0RW5naW5lKCkuaXNORENIYWxmWlJhbmdlKX1fYnVpbGRVbmlmb3JtTGF5b3V0KCl7dGhpcy5fdW5pZm9ybUJ1ZmZlci5hZGRVbmlmb3JtKCJ2TGlnaHREYXRhIiw0KSx0aGlzLl91bmlmb3JtQnVmZmVyLmFkZFVuaWZvcm0oInZMaWdodERpZmZ1c2UiLDQpLHRoaXMuX3VuaWZvcm1CdWZmZXIuYWRkVW5pZm9ybSgidkxpZ2h0U3BlY3VsYXIiLDQpLHRoaXMuX3VuaWZvcm1CdWZmZXIuYWRkVW5pZm9ybSgic2hhZG93c0luZm8iLDMpLHRoaXMuX3VuaWZvcm1CdWZmZXIuYWRkVW5pZm9ybSgiZGVwdGhWYWx1ZXMiLDIpLHRoaXMuX3VuaWZvcm1CdWZmZXIuY3JlYXRlKCl9dHJhbnNmZXJUb0VmZmVjdChlLHQpe3JldHVybiB0aGlzLmNvbXB1dGVUcmFuc2Zvcm1lZEluZm9ybWF0aW9uKCk/KHRoaXMuX3VuaWZvcm1CdWZmZXIudXBkYXRlRmxvYXQ0KCJ2TGlnaHREYXRhIix0aGlzLnRyYW5zZm9ybWVkRGlyZWN0aW9uLngsdGhpcy50cmFuc2Zvcm1lZERpcmVjdGlvbi55LHRoaXMudHJhbnNmb3JtZWREaXJlY3Rpb24ueiwxLHQpLHRoaXMpOih0aGlzLl91bmlmb3JtQnVmZmVyLnVwZGF0ZUZsb2F0NCgidkxpZ2h0RGF0YSIsdGhpcy5kaXJlY3Rpb24ueCx0aGlzLmRpcmVjdGlvbi55LHRoaXMuZGlyZWN0aW9uLnosMSx0KSx0aGlzKX10cmFuc2ZlclRvTm9kZU1hdGVyaWFsRWZmZWN0KGUsdCl7cmV0dXJuIHRoaXMuY29tcHV0ZVRyYW5zZm9ybWVkSW5mb3JtYXRpb24oKT8oZS5zZXRGbG9hdDModCx0aGlzLnRyYW5zZm9ybWVkRGlyZWN0aW9uLngsdGhpcy50cmFuc2Zvcm1lZERpcmVjdGlvbi55LHRoaXMudHJhbnNmb3JtZWREaXJlY3Rpb24ueiksdGhpcyk6KGUuc2V0RmxvYXQzKHQsdGhpcy5kaXJlY3Rpb24ueCx0aGlzLmRpcmVjdGlvbi55LHRoaXMuZGlyZWN0aW9uLnopLHRoaXMpfWdldERlcHRoTWluWihlKXtjb25zdCB0PXRoaXMuX3NjZW5lLmdldEVuZ2luZSgpO3JldHVybiF0LnVzZVJldmVyc2VEZXB0aEJ1ZmZlciYmdC5pc05EQ0hhbGZaUmFuZ2U/MDoxfWdldERlcHRoTWF4WihlKXtjb25zdCB0PXRoaXMuX3NjZW5lLmdldEVuZ2luZSgpO3JldHVybiB0LnVzZVJldmVyc2VEZXB0aEJ1ZmZlciYmdC5pc05EQ0hhbGZaUmFuZ2U/MDoxfXByZXBhcmVMaWdodFNwZWNpZmljRGVmaW5lcyhlLHQpe2VbIkRJUkxJR0hUIit0XT0hMH19VChbUigpXSxJdC5wcm90b3R5cGUsInNoYWRvd0ZydXN0dW1TaXplIixudWxsKSxUKFtSKCldLEl0LnByb3RvdHlwZSwic2hhZG93T3J0aG9TY2FsZSIsbnVsbCksVChbUigpXSxJdC5wcm90b3R5cGUsImF1dG9VcGRhdGVFeHRlbmRzIix2b2lkIDApLFQoW1IoKV0sSXQucHJvdG90eXBlLCJhdXRvQ2FsY1NoYWRvd1pCb3VuZHMiLHZvaWQgMCksVChbUigib3J0aG9MZWZ0IildLEl0LnByb3RvdHlwZSwiX29ydGhvTGVmdCIsdm9pZCAwKSxUKFtSKCJvcnRob1JpZ2h0IildLEl0LnByb3RvdHlwZSwiX29ydGhvUmlnaHQiLHZvaWQgMCksVChbUigib3J0aG9Ub3AiKV0sSXQucHJvdG90eXBlLCJfb3J0aG9Ub3AiLHZvaWQgMCksVChbUigib3J0aG9Cb3R0b20iKV0sSXQucHJvdG90eXBlLCJfb3J0aG9Cb3R0b20iLHZvaWQgMCksemUuQWRkTm9kZUNvbnN0cnVjdG9yKCJMaWdodF9UeXBlXzMiLChjLGUpPT4oKT0+bmV3IG5zKGMscC5aZXJvKCksZSkpO2NsYXNzIG5zIGV4dGVuZHMgaGV7Y29uc3RydWN0b3IoZSx0LGkpe3N1cGVyKGUsaSksdGhpcy5ncm91bmRDb2xvcj1uZXcgcmUoMCwwLDApLHRoaXMuZGlyZWN0aW9uPXR8fHAuVXAoKX1fYnVpbGRVbmlmb3JtTGF5b3V0KCl7dGhpcy5fdW5pZm9ybUJ1ZmZlci5hZGRVbmlmb3JtKCJ2TGlnaHREYXRhIiw0KSx0aGlzLl91bmlmb3JtQnVmZmVyLmFkZFVuaWZvcm0oInZMaWdodERpZmZ1c2UiLDQpLHRoaXMuX3VuaWZvcm1CdWZmZXIuYWRkVW5pZm9ybSgidkxpZ2h0U3BlY3VsYXIiLDQpLHRoaXMuX3VuaWZvcm1CdWZmZXIuYWRkVW5pZm9ybSgidkxpZ2h0R3JvdW5kIiwzKSx0aGlzLl91bmlmb3JtQnVmZmVyLmFkZFVuaWZvcm0oInNoYWRvd3NJbmZvIiwzKSx0aGlzLl91bmlmb3JtQnVmZmVyLmFkZFVuaWZvcm0oImRlcHRoVmFsdWVzIiwyKSx0aGlzLl91bmlmb3JtQnVmZmVyLmNyZWF0ZSgpfWdldENsYXNzTmFtZSgpe3JldHVybiJIZW1pc3BoZXJpY0xpZ2h0In1zZXREaXJlY3Rpb25Ub1RhcmdldChlKXtyZXR1cm4gdGhpcy5kaXJlY3Rpb249cC5Ob3JtYWxpemUoZS5zdWJ0cmFjdChwLlplcm8oKSkpLHRoaXMuZGlyZWN0aW9ufWdldFNoYWRvd0dlbmVyYXRvcigpe3JldHVybiBudWxsfXRyYW5zZmVyVG9FZmZlY3QoZSx0KXtjb25zdCBpPXAuTm9ybWFsaXplKHRoaXMuZGlyZWN0aW9uKTtyZXR1cm4gdGhpcy5fdW5pZm9ybUJ1ZmZlci51cGRhdGVGbG9hdDQoInZMaWdodERhdGEiLGkueCxpLnksaS56LDAsdCksdGhpcy5fdW5pZm9ybUJ1ZmZlci51cGRhdGVDb2xvcjMoInZMaWdodEdyb3VuZCIsdGhpcy5ncm91bmRDb2xvci5zY2FsZSh0aGlzLmludGVuc2l0eSksdCksdGhpc310cmFuc2ZlclRvTm9kZU1hdGVyaWFsRWZmZWN0KGUsdCl7Y29uc3QgaT1wLk5vcm1hbGl6ZSh0aGlzLmRpcmVjdGlvbik7cmV0dXJuIGUuc2V0RmxvYXQzKHQsaS54LGkueSxpLnopLHRoaXN9Y29tcHV0ZVdvcmxkTWF0cml4KCl7cmV0dXJuIHRoaXMuX3dvcmxkTWF0cml4fHwodGhpcy5fd29ybGRNYXRyaXg9eC5JZGVudGl0eSgpKSx0aGlzLl93b3JsZE1hdHJpeH1nZXRUeXBlSUQoKXtyZXR1cm4gaGUuTElHSFRUWVBFSURfSEVNSVNQSEVSSUNMSUdIVH1wcmVwYXJlTGlnaHRTcGVjaWZpY0RlZmluZXMoZSx0KXtlWyJIRU1JTElHSFQiK3RdPSEwfX1UKFtjaSgpXSxucy5wcm90b3R5cGUsImdyb3VuZENvbG9yIix2b2lkIDApLFQoW0J0KCldLG5zLnByb3RvdHlwZSwiZGlyZWN0aW9uIix2b2lkIDApO2NsYXNzIEd0e2NvbnN0cnVjdG9yKGUsdCl7dGhpcy53aWR0aD1lLHRoaXMuaGVpZ2h0PXR9dG9TdHJpbmcoKXtyZXR1cm5ge1c6ICR7dGhpcy53aWR0aH0sIEg6ICR7dGhpcy5oZWlnaHR9fWB9Z2V0Q2xhc3NOYW1lKCl7cmV0dXJuIlNpemUifWdldEhhc2hDb2RlKCl7bGV0IGU9dGhpcy53aWR0aHwwO3JldHVybiBlPWUqMzk3Xih0aGlzLmhlaWdodHwwKSxlfWNvcHlGcm9tKGUpe3RoaXMud2lkdGg9ZS53aWR0aCx0aGlzLmhlaWdodD1lLmhlaWdodH1jb3B5RnJvbUZsb2F0cyhlLHQpe3JldHVybiB0aGlzLndpZHRoPWUsdGhpcy5oZWlnaHQ9dCx0aGlzfXNldChlLHQpe3JldHVybiB0aGlzLmNvcHlGcm9tRmxvYXRzKGUsdCl9bXVsdGlwbHlCeUZsb2F0cyhlLHQpe3JldHVybiBuZXcgR3QodGhpcy53aWR0aCplLHRoaXMuaGVpZ2h0KnQpfWNsb25lKCl7cmV0dXJuIG5ldyBHdCh0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KX1lcXVhbHMoZSl7cmV0dXJuIGU/dGhpcy53aWR0aD09PWUud2lkdGgmJnRoaXMuaGVpZ2h0PT09ZS5oZWlnaHQ6ITF9Z2V0IHN1cmZhY2UoKXtyZXR1cm4gdGhpcy53aWR0aCp0aGlzLmhlaWdodH1zdGF0aWMgWmVybygpe3JldHVybiBuZXcgR3QoMCwwKX1hZGQoZSl7cmV0dXJuIG5ldyBHdCh0aGlzLndpZHRoK2Uud2lkdGgsdGhpcy5oZWlnaHQrZS5oZWlnaHQpfXN1YnRyYWN0KGUpe3JldHVybiBuZXcgR3QodGhpcy53aWR0aC1lLndpZHRoLHRoaXMuaGVpZ2h0LWUuaGVpZ2h0KX1zdGF0aWMgTGVycChlLHQsaSl7Y29uc3Qgcz1lLndpZHRoKyh0LndpZHRoLWUud2lkdGgpKmkscj1lLmhlaWdodCsodC5oZWlnaHQtZS5oZWlnaHQpKmk7cmV0dXJuIG5ldyBHdChzLHIpfX1jbGFzcyBabntjb25zdHJ1Y3RvcihlKXt0aGlzLl93cmFwVT0xLHRoaXMuX3dyYXBWPTEsdGhpcy53cmFwUj0xLHRoaXMuYW5pc290cm9waWNGaWx0ZXJpbmdMZXZlbD00LHRoaXMuZGVsYXlMb2FkU3RhdGU9MCx0aGlzLl90ZXh0dXJlPW51bGwsdGhpcy5fZW5naW5lPW51bGwsdGhpcy5fY2FjaGVkU2l6ZT1HdC5aZXJvKCksdGhpcy5fY2FjaGVkQmFzZVNpemU9R3QuWmVybygpLHRoaXMuX2luaXRpYWxTYW1wbGluZ01vZGU9Mix0aGlzLl90ZXh0dXJlPWUsdGhpcy5fdGV4dHVyZSYmKHRoaXMuX2VuZ2luZT10aGlzLl90ZXh0dXJlLmdldEVuZ2luZSgpKX1nZXQgd3JhcFUoKXtyZXR1cm4gdGhpcy5fd3JhcFV9c2V0IHdyYXBVKGUpe3RoaXMuX3dyYXBVPWV9Z2V0IHdyYXBWKCl7cmV0dXJuIHRoaXMuX3dyYXBWfXNldCB3cmFwVihlKXt0aGlzLl93cmFwVj1lfWdldCBjb29yZGluYXRlc01vZGUoKXtyZXR1cm4gMH1nZXQgaXNDdWJlKCl7cmV0dXJuIHRoaXMuX3RleHR1cmU/dGhpcy5fdGV4dHVyZS5pc0N1YmU6ITF9c2V0IGlzQ3ViZShlKXt0aGlzLl90ZXh0dXJlJiYodGhpcy5fdGV4dHVyZS5pc0N1YmU9ZSl9Z2V0IGlzM0QoKXtyZXR1cm4gdGhpcy5fdGV4dHVyZT90aGlzLl90ZXh0dXJlLmlzM0Q6ITF9c2V0IGlzM0QoZSl7dGhpcy5fdGV4dHVyZSYmKHRoaXMuX3RleHR1cmUuaXMzRD1lKX1nZXQgaXMyREFycmF5KCl7cmV0dXJuIHRoaXMuX3RleHR1cmU/dGhpcy5fdGV4dHVyZS5pczJEQXJyYXk6ITF9c2V0IGlzMkRBcnJheShlKXt0aGlzLl90ZXh0dXJlJiYodGhpcy5fdGV4dHVyZS5pczJEQXJyYXk9ZSl9Z2V0Q2xhc3NOYW1lKCl7cmV0dXJuIlRoaW5UZXh0dXJlIn1pc1JlYWR5KCl7cmV0dXJuIHRoaXMuZGVsYXlMb2FkU3RhdGU9PT00Pyh0aGlzLmRlbGF5TG9hZCgpLCExKTp0aGlzLl90ZXh0dXJlP3RoaXMuX3RleHR1cmUuaXNSZWFkeTohMX1kZWxheUxvYWQoKXt9Z2V0SW50ZXJuYWxUZXh0dXJlKCl7cmV0dXJuIHRoaXMuX3RleHR1cmV9Z2V0U2l6ZSgpe2lmKHRoaXMuX3RleHR1cmUpe2lmKHRoaXMuX3RleHR1cmUud2lkdGgpcmV0dXJuIHRoaXMuX2NhY2hlZFNpemUud2lkdGg9dGhpcy5fdGV4dHVyZS53aWR0aCx0aGlzLl9jYWNoZWRTaXplLmhlaWdodD10aGlzLl90ZXh0dXJlLmhlaWdodCx0aGlzLl9jYWNoZWRTaXplO2lmKHRoaXMuX3RleHR1cmUuX3NpemUpcmV0dXJuIHRoaXMuX2NhY2hlZFNpemUud2lkdGg9dGhpcy5fdGV4dHVyZS5fc2l6ZSx0aGlzLl9jYWNoZWRTaXplLmhlaWdodD10aGlzLl90ZXh0dXJlLl9zaXplLHRoaXMuX2NhY2hlZFNpemV9cmV0dXJuIHRoaXMuX2NhY2hlZFNpemV9Z2V0QmFzZVNpemUoKXtyZXR1cm4hdGhpcy5pc1JlYWR5KCl8fCF0aGlzLl90ZXh0dXJlPyh0aGlzLl9jYWNoZWRCYXNlU2l6ZS53aWR0aD0wLHRoaXMuX2NhY2hlZEJhc2VTaXplLmhlaWdodD0wLHRoaXMuX2NhY2hlZEJhc2VTaXplKTp0aGlzLl90ZXh0dXJlLl9zaXplPyh0aGlzLl9jYWNoZWRCYXNlU2l6ZS53aWR0aD10aGlzLl90ZXh0dXJlLl9zaXplLHRoaXMuX2NhY2hlZEJhc2VTaXplLmhlaWdodD10aGlzLl90ZXh0dXJlLl9zaXplLHRoaXMuX2NhY2hlZEJhc2VTaXplKToodGhpcy5fY2FjaGVkQmFzZVNpemUud2lkdGg9dGhpcy5fdGV4dHVyZS5iYXNlV2lkdGgsdGhpcy5fY2FjaGVkQmFzZVNpemUuaGVpZ2h0PXRoaXMuX3RleHR1cmUuYmFzZUhlaWdodCx0aGlzLl9jYWNoZWRCYXNlU2l6ZSl9Z2V0IHNhbXBsaW5nTW9kZSgpe3JldHVybiB0aGlzLl90ZXh0dXJlP3RoaXMuX3RleHR1cmUuc2FtcGxpbmdNb2RlOnRoaXMuX2luaXRpYWxTYW1wbGluZ01vZGV9dXBkYXRlU2FtcGxpbmdNb2RlKGUpe3RoaXMuX3RleHR1cmUmJnRoaXMuX2VuZ2luZSYmdGhpcy5fZW5naW5lLnVwZGF0ZVRleHR1cmVTYW1wbGluZ01vZGUoZSx0aGlzLl90ZXh0dXJlKX1yZWxlYXNlSW50ZXJuYWxUZXh0dXJlKCl7dGhpcy5fdGV4dHVyZSYmKHRoaXMuX3RleHR1cmUuZGlzcG9zZSgpLHRoaXMuX3RleHR1cmU9bnVsbCl9ZGlzcG9zZSgpe3RoaXMuX3RleHR1cmUmJih0aGlzLnJlbGVhc2VJbnRlcm5hbFRleHR1cmUoKSx0aGlzLl9lbmdpbmU9bnVsbCl9fWNsYXNzIFJlIGV4dGVuZHMgWm57Y29uc3RydWN0b3IoZSx0PW51bGwpe3N1cGVyKG51bGwpLHRoaXMubWV0YWRhdGE9bnVsbCx0aGlzLnJlc2VydmVkRGF0YVN0b3JlPW51bGwsdGhpcy5faGFzQWxwaGE9ITEsdGhpcy5fZ2V0QWxwaGFGcm9tUkdCPSExLHRoaXMubGV2ZWw9MSx0aGlzLl9jb29yZGluYXRlc0luZGV4PTAsdGhpcy5vcHRpbWl6ZVVWQWxsb2NhdGlvbj0hMCx0aGlzLl9jb29yZGluYXRlc01vZGU9MCx0aGlzLndyYXBSPTEsdGhpcy5hbmlzb3Ryb3BpY0ZpbHRlcmluZ0xldmVsPVJlLkRFRkFVTFRfQU5JU09UUk9QSUNfRklMVEVSSU5HX0xFVkVMLHRoaXMuX2lzQ3ViZT0hMSx0aGlzLl9nYW1tYVNwYWNlPSEwLHRoaXMuaW52ZXJ0Wj0hMSx0aGlzLmxvZExldmVsSW5BbHBoYT0hMSx0aGlzLmlzUmVuZGVyVGFyZ2V0PSExLHRoaXMuX3ByZWZpbHRlcmVkPSExLHRoaXMuX2ZvcmNlU2VyaWFsaXplPSExLHRoaXMuYW5pbWF0aW9ucz1uZXcgQXJyYXksdGhpcy5vbkRpc3Bvc2VPYnNlcnZhYmxlPW5ldyBGLHRoaXMuX29uRGlzcG9zZU9ic2VydmVyPW51bGwsdGhpcy5fc2NlbmU9bnVsbCx0aGlzLl91aWQ9bnVsbCx0aGlzLl9wYXJlbnRDb250YWluZXI9bnVsbCx0aGlzLl9sb2FkaW5nRXJyb3I9ITEsZT9SZS5fSXNTY2VuZShlKT90aGlzLl9zY2VuZT1lOnRoaXMuX2VuZ2luZT1lOnRoaXMuX3NjZW5lPWZlLkxhc3RDcmVhdGVkU2NlbmUsdGhpcy5fc2NlbmUmJih0aGlzLnVuaXF1ZUlkPXRoaXMuX3NjZW5lLmdldFVuaXF1ZUlkKCksdGhpcy5fc2NlbmUuYWRkVGV4dHVyZSh0aGlzKSx0aGlzLl9lbmdpbmU9dGhpcy5fc2NlbmUuZ2V0RW5naW5lKCkpLHRoaXMuX3RleHR1cmU9dCx0aGlzLl91aWQ9bnVsbH1zZXQgaGFzQWxwaGEoZSl7dGhpcy5faGFzQWxwaGEhPT1lJiYodGhpcy5faGFzQWxwaGE9ZSx0aGlzLl9zY2VuZSYmdGhpcy5fc2NlbmUubWFya0FsbE1hdGVyaWFsc0FzRGlydHkoMSx0PT50Lmhhc1RleHR1cmUodGhpcykpKX1nZXQgaGFzQWxwaGEoKXtyZXR1cm4gdGhpcy5faGFzQWxwaGF9c2V0IGdldEFscGhhRnJvbVJHQihlKXt0aGlzLl9nZXRBbHBoYUZyb21SR0IhPT1lJiYodGhpcy5fZ2V0QWxwaGFGcm9tUkdCPWUsdGhpcy5fc2NlbmUmJnRoaXMuX3NjZW5lLm1hcmtBbGxNYXRlcmlhbHNBc0RpcnR5KDEsdD0+dC5oYXNUZXh0dXJlKHRoaXMpKSl9Z2V0IGdldEFscGhhRnJvbVJHQigpe3JldHVybiB0aGlzLl9nZXRBbHBoYUZyb21SR0J9c2V0IGNvb3JkaW5hdGVzSW5kZXgoZSl7dGhpcy5fY29vcmRpbmF0ZXNJbmRleCE9PWUmJih0aGlzLl9jb29yZGluYXRlc0luZGV4PWUsdGhpcy5fc2NlbmUmJnRoaXMuX3NjZW5lLm1hcmtBbGxNYXRlcmlhbHNBc0RpcnR5KDEsdD0+dC5oYXNUZXh0dXJlKHRoaXMpKSl9Z2V0IGNvb3JkaW5hdGVzSW5kZXgoKXtyZXR1cm4gdGhpcy5fY29vcmRpbmF0ZXNJbmRleH1zZXQgY29vcmRpbmF0ZXNNb2RlKGUpe3RoaXMuX2Nvb3JkaW5hdGVzTW9kZSE9PWUmJih0aGlzLl9jb29yZGluYXRlc01vZGU9ZSx0aGlzLl9zY2VuZSYmdGhpcy5fc2NlbmUubWFya0FsbE1hdGVyaWFsc0FzRGlydHkoMSx0PT50Lmhhc1RleHR1cmUodGhpcykpKX1nZXQgY29vcmRpbmF0ZXNNb2RlKCl7cmV0dXJuIHRoaXMuX2Nvb3JkaW5hdGVzTW9kZX1nZXQgd3JhcFUoKXtyZXR1cm4gdGhpcy5fd3JhcFV9c2V0IHdyYXBVKGUpe3RoaXMuX3dyYXBVPWV9Z2V0IHdyYXBWKCl7cmV0dXJuIHRoaXMuX3dyYXBWfXNldCB3cmFwVihlKXt0aGlzLl93cmFwVj1lfWdldCBpc0N1YmUoKXtyZXR1cm4gdGhpcy5fdGV4dHVyZT90aGlzLl90ZXh0dXJlLmlzQ3ViZTp0aGlzLl9pc0N1YmV9c2V0IGlzQ3ViZShlKXt0aGlzLl90ZXh0dXJlP3RoaXMuX3RleHR1cmUuaXNDdWJlPWU6dGhpcy5faXNDdWJlPWV9Z2V0IGlzM0QoKXtyZXR1cm4gdGhpcy5fdGV4dHVyZT90aGlzLl90ZXh0dXJlLmlzM0Q6ITF9c2V0IGlzM0QoZSl7dGhpcy5fdGV4dHVyZSYmKHRoaXMuX3RleHR1cmUuaXMzRD1lKX1nZXQgaXMyREFycmF5KCl7cmV0dXJuIHRoaXMuX3RleHR1cmU/dGhpcy5fdGV4dHVyZS5pczJEQXJyYXk6ITF9c2V0IGlzMkRBcnJheShlKXt0aGlzLl90ZXh0dXJlJiYodGhpcy5fdGV4dHVyZS5pczJEQXJyYXk9ZSl9Z2V0IGdhbW1hU3BhY2UoKXtpZih0aGlzLl90ZXh0dXJlKXRoaXMuX3RleHR1cmUuX2dhbW1hU3BhY2U9PT1udWxsJiYodGhpcy5fdGV4dHVyZS5fZ2FtbWFTcGFjZT10aGlzLl9nYW1tYVNwYWNlKTtlbHNlIHJldHVybiB0aGlzLl9nYW1tYVNwYWNlO3JldHVybiB0aGlzLl90ZXh0dXJlLl9nYW1tYVNwYWNlJiYhdGhpcy5fdGV4dHVyZS5fdXNlU1JHQkJ1ZmZlcn1zZXQgZ2FtbWFTcGFjZShlKXtpZih0aGlzLl90ZXh0dXJlKXtpZih0aGlzLl90ZXh0dXJlLl9nYW1tYVNwYWNlPT09ZSlyZXR1cm47dGhpcy5fdGV4dHVyZS5fZ2FtbWFTcGFjZT1lfWVsc2V7aWYodGhpcy5fZ2FtbWFTcGFjZT09PWUpcmV0dXJuO3RoaXMuX2dhbW1hU3BhY2U9ZX10aGlzLl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0RpcnR5KCl9Z2V0IGlzUkdCRCgpe3JldHVybiB0aGlzLl90ZXh0dXJlIT1udWxsJiZ0aGlzLl90ZXh0dXJlLl9pc1JHQkR9c2V0IGlzUkdCRChlKXt0aGlzLl90ZXh0dXJlJiYodGhpcy5fdGV4dHVyZS5faXNSR0JEPWUpfWdldCBub01pcG1hcCgpe3JldHVybiExfWdldCBsb2RHZW5lcmF0aW9uT2Zmc2V0KCl7cmV0dXJuIHRoaXMuX3RleHR1cmU/dGhpcy5fdGV4dHVyZS5fbG9kR2VuZXJhdGlvbk9mZnNldDowfXNldCBsb2RHZW5lcmF0aW9uT2Zmc2V0KGUpe3RoaXMuX3RleHR1cmUmJih0aGlzLl90ZXh0dXJlLl9sb2RHZW5lcmF0aW9uT2Zmc2V0PWUpfWdldCBsb2RHZW5lcmF0aW9uU2NhbGUoKXtyZXR1cm4gdGhpcy5fdGV4dHVyZT90aGlzLl90ZXh0dXJlLl9sb2RHZW5lcmF0aW9uU2NhbGU6MH1zZXQgbG9kR2VuZXJhdGlvblNjYWxlKGUpe3RoaXMuX3RleHR1cmUmJih0aGlzLl90ZXh0dXJlLl9sb2RHZW5lcmF0aW9uU2NhbGU9ZSl9Z2V0IGxpbmVhclNwZWN1bGFyTE9EKCl7cmV0dXJuIHRoaXMuX3RleHR1cmU/dGhpcy5fdGV4dHVyZS5fbGluZWFyU3BlY3VsYXJMT0Q6ITF9c2V0IGxpbmVhclNwZWN1bGFyTE9EKGUpe3RoaXMuX3RleHR1cmUmJih0aGlzLl90ZXh0dXJlLl9saW5lYXJTcGVjdWxhckxPRD1lKX1nZXQgaXJyYWRpYW5jZVRleHR1cmUoKXtyZXR1cm4gdGhpcy5fdGV4dHVyZT90aGlzLl90ZXh0dXJlLl9pcnJhZGlhbmNlVGV4dHVyZTpudWxsfXNldCBpcnJhZGlhbmNlVGV4dHVyZShlKXt0aGlzLl90ZXh0dXJlJiYodGhpcy5fdGV4dHVyZS5faXJyYWRpYW5jZVRleHR1cmU9ZSl9Z2V0IHVpZCgpe3JldHVybiB0aGlzLl91aWR8fCh0aGlzLl91aWQ9bHIoKSksdGhpcy5fdWlkfXRvU3RyaW5nKCl7cmV0dXJuIHRoaXMubmFtZX1nZXRDbGFzc05hbWUoKXtyZXR1cm4iQmFzZVRleHR1cmUifXNldCBvbkRpc3Bvc2UoZSl7dGhpcy5fb25EaXNwb3NlT2JzZXJ2ZXImJnRoaXMub25EaXNwb3NlT2JzZXJ2YWJsZS5yZW1vdmUodGhpcy5fb25EaXNwb3NlT2JzZXJ2ZXIpLHRoaXMuX29uRGlzcG9zZU9ic2VydmVyPXRoaXMub25EaXNwb3NlT2JzZXJ2YWJsZS5hZGQoZSl9Z2V0IGlzQmxvY2tpbmcoKXtyZXR1cm4hMH1nZXQgbG9hZGluZ0Vycm9yKCl7cmV0dXJuIHRoaXMuX2xvYWRpbmdFcnJvcn1nZXQgZXJyb3JPYmplY3QoKXtyZXR1cm4gdGhpcy5fZXJyb3JPYmplY3R9Z2V0U2NlbmUoKXtyZXR1cm4gdGhpcy5fc2NlbmV9X2dldEVuZ2luZSgpe3JldHVybiB0aGlzLl9lbmdpbmV9Y2hlY2tUcmFuc2Zvcm1zQXJlSWRlbnRpY2FsKGUpe3JldHVybiBlIT09bnVsbH1nZXRUZXh0dXJlTWF0cml4KCl7cmV0dXJuIHguSWRlbnRpdHlSZWFkT25seX1nZXRSZWZsZWN0aW9uVGV4dHVyZU1hdHJpeCgpe3JldHVybiB4LklkZW50aXR5UmVhZE9ubHl9aXNSZWFkeU9yTm90QmxvY2tpbmcoKXtyZXR1cm4hdGhpcy5pc0Jsb2NraW5nfHx0aGlzLmlzUmVhZHkoKXx8dGhpcy5sb2FkaW5nRXJyb3J9c2NhbGUoZSl7fWdldCBjYW5SZXNjYWxlKCl7cmV0dXJuITF9X2dldEZyb21DYWNoZShlLHQsaSxzLHIsbil7Y29uc3QgYT10aGlzLl9nZXRFbmdpbmUoKTtpZighYSlyZXR1cm4gbnVsbDtjb25zdCBvPWEuX2dldFVzZVNSR0JCdWZmZXIoISFyLHQpLGg9YS5nZXRMb2FkZWRUZXh0dXJlc0NhY2hlKCk7Zm9yKGxldCBsPTA7bDxoLmxlbmd0aDtsKyspe2NvbnN0IHU9aFtsXTtpZigocj09PXZvaWQgMHx8bz09PXUuX3VzZVNSR0JCdWZmZXIpJiYocz09PXZvaWQgMHx8cz09PXUuaW52ZXJ0WSkmJnUudXJsPT09ZSYmdS5nZW5lcmF0ZU1pcE1hcHM9PT0hdCYmKCFpfHxpPT09dS5zYW1wbGluZ01vZGUpJiYobj09PXZvaWQgMHx8bj09PXUuaXNDdWJlKSlyZXR1cm4gdS5pbmNyZW1lbnRSZWZlcmVuY2VzKCksdX1yZXR1cm4gbnVsbH1fcmVidWlsZCgpe31jbG9uZSgpe3JldHVybiBudWxsfWdldCB0ZXh0dXJlVHlwZSgpe3JldHVybiB0aGlzLl90ZXh0dXJlJiZ0aGlzLl90ZXh0dXJlLnR5cGUhPT12b2lkIDA/dGhpcy5fdGV4dHVyZS50eXBlOjB9Z2V0IHRleHR1cmVGb3JtYXQoKXtyZXR1cm4gdGhpcy5fdGV4dHVyZSYmdGhpcy5fdGV4dHVyZS5mb3JtYXQhPT12b2lkIDA/dGhpcy5fdGV4dHVyZS5mb3JtYXQ6NX1fbWFya0FsbFN1Yk1lc2hlc0FzVGV4dHVyZXNEaXJ0eSgpe2NvbnN0IGU9dGhpcy5nZXRTY2VuZSgpO2UmJmUubWFya0FsbE1hdGVyaWFsc0FzRGlydHkoMSl9cmVhZFBpeGVscyhlPTAsdD0wLGk9bnVsbCxzPSEwLHI9ITEsbj0wLGE9MCxvPU51bWJlci5NQVhfVkFMVUUsaD1OdW1iZXIuTUFYX1ZBTFVFKXtpZighdGhpcy5fdGV4dHVyZSlyZXR1cm4gbnVsbDtjb25zdCBsPXRoaXMuX2dldEVuZ2luZSgpO2lmKCFsKXJldHVybiBudWxsO2NvbnN0IHU9dGhpcy5nZXRTaXplKCk7bGV0IGQ9dS53aWR0aCxmPXUuaGVpZ2h0O3QhPT0wJiYoZD1kL01hdGgucG93KDIsdCksZj1mL01hdGgucG93KDIsdCksZD1NYXRoLnJvdW5kKGQpLGY9TWF0aC5yb3VuZChmKSksbz1NYXRoLm1pbihkLG8pLGg9TWF0aC5taW4oZixoKTt0cnl7cmV0dXJuIHRoaXMuX3RleHR1cmUuaXNDdWJlP2wuX3JlYWRUZXh0dXJlUGl4ZWxzKHRoaXMuX3RleHR1cmUsbyxoLGUsdCxpLHMscixuLGEpOmwuX3JlYWRUZXh0dXJlUGl4ZWxzKHRoaXMuX3RleHR1cmUsbyxoLC0xLHQsaSxzLHIsbixhKX1jYXRjaHtyZXR1cm4gbnVsbH19X3JlYWRQaXhlbHNTeW5jKGU9MCx0PTAsaT1udWxsLHM9ITAscj0hMSl7aWYoIXRoaXMuX3RleHR1cmUpcmV0dXJuIG51bGw7Y29uc3Qgbj10aGlzLmdldFNpemUoKTtsZXQgYT1uLndpZHRoLG89bi5oZWlnaHQ7Y29uc3QgaD10aGlzLl9nZXRFbmdpbmUoKTtpZighaClyZXR1cm4gbnVsbDt0IT0wJiYoYT1hL01hdGgucG93KDIsdCksbz1vL01hdGgucG93KDIsdCksYT1NYXRoLnJvdW5kKGEpLG89TWF0aC5yb3VuZChvKSk7dHJ5e3JldHVybiB0aGlzLl90ZXh0dXJlLmlzQ3ViZT9oLl9yZWFkVGV4dHVyZVBpeGVsc1N5bmModGhpcy5fdGV4dHVyZSxhLG8sZSx0LGkscyxyKTpoLl9yZWFkVGV4dHVyZVBpeGVsc1N5bmModGhpcy5fdGV4dHVyZSxhLG8sLTEsdCxpLHMscil9Y2F0Y2h7cmV0dXJuIG51bGx9fWdldCBfbG9kVGV4dHVyZUhpZ2goKXtyZXR1cm4gdGhpcy5fdGV4dHVyZT90aGlzLl90ZXh0dXJlLl9sb2RUZXh0dXJlSGlnaDpudWxsfWdldCBfbG9kVGV4dHVyZU1pZCgpe3JldHVybiB0aGlzLl90ZXh0dXJlP3RoaXMuX3RleHR1cmUuX2xvZFRleHR1cmVNaWQ6bnVsbH1nZXQgX2xvZFRleHR1cmVMb3coKXtyZXR1cm4gdGhpcy5fdGV4dHVyZT90aGlzLl90ZXh0dXJlLl9sb2RUZXh0dXJlTG93Om51bGx9ZGlzcG9zZSgpe2lmKHRoaXMuX3NjZW5lKXt0aGlzLl9zY2VuZS5zdG9wQW5pbWF0aW9uJiZ0aGlzLl9zY2VuZS5zdG9wQW5pbWF0aW9uKHRoaXMpLHRoaXMuX3NjZW5lLnJlbW92ZVBlbmRpbmdEYXRhKHRoaXMpO2NvbnN0IGU9dGhpcy5fc2NlbmUudGV4dHVyZXMuaW5kZXhPZih0aGlzKTtpZihlPj0wJiZ0aGlzLl9zY2VuZS50ZXh0dXJlcy5zcGxpY2UoZSwxKSx0aGlzLl9zY2VuZS5vblRleHR1cmVSZW1vdmVkT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyksdGhpcy5fc2NlbmU9bnVsbCx0aGlzLl9wYXJlbnRDb250YWluZXIpe2NvbnN0IHQ9dGhpcy5fcGFyZW50Q29udGFpbmVyLnRleHR1cmVzLmluZGV4T2YodGhpcyk7dD4tMSYmdGhpcy5fcGFyZW50Q29udGFpbmVyLnRleHR1cmVzLnNwbGljZSh0LDEpLHRoaXMuX3BhcmVudENvbnRhaW5lcj1udWxsfX10aGlzLm9uRGlzcG9zZU9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHRoaXMpLHRoaXMub25EaXNwb3NlT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMubWV0YWRhdGE9bnVsbCxzdXBlci5kaXNwb3NlKCl9c2VyaWFsaXplKGU9ITEpe2lmKCF0aGlzLm5hbWUmJiFlKXJldHVybiBudWxsO2NvbnN0IHQ9YWUuU2VyaWFsaXplKHRoaXMpO3JldHVybiBhZS5BcHBlbmRTZXJpYWxpemVkQW5pbWF0aW9ucyh0aGlzLHQpLHR9c3RhdGljIFdoZW5BbGxSZWFkeShlLHQpe2xldCBpPWUubGVuZ3RoO2lmKGk9PT0wKXt0KCk7cmV0dXJufWZvcihsZXQgcz0wO3M8ZS5sZW5ndGg7cysrKXtjb25zdCByPWVbc107aWYoci5pc1JlYWR5KCkpLS1pPT09MCYmdCgpO2Vsc2V7Y29uc3Qgbj1yLm9uTG9hZE9ic2VydmFibGU7bj9uLmFkZE9uY2UoKCk9PnstLWk9PT0wJiZ0KCl9KTotLWk9PT0wJiZ0KCl9fX1zdGF0aWMgX0lzU2NlbmUoZSl7cmV0dXJuIGUuZ2V0Q2xhc3NOYW1lKCk9PT0iU2NlbmUifX1SZS5ERUZBVUxUX0FOSVNPVFJPUElDX0ZJTFRFUklOR19MRVZFTD00LFQoW1IoKV0sUmUucHJvdG90eXBlLCJ1bmlxdWVJZCIsdm9pZCAwKSxUKFtSKCldLFJlLnByb3RvdHlwZSwibmFtZSIsdm9pZCAwKSxUKFtSKCldLFJlLnByb3RvdHlwZSwibWV0YWRhdGEiLHZvaWQgMCksVChbUigiaGFzQWxwaGEiKV0sUmUucHJvdG90eXBlLCJfaGFzQWxwaGEiLHZvaWQgMCksVChbUigiZ2V0QWxwaGFGcm9tUkdCIildLFJlLnByb3RvdHlwZSwiX2dldEFscGhhRnJvbVJHQiIsdm9pZCAwKSxUKFtSKCldLFJlLnByb3RvdHlwZSwibGV2ZWwiLHZvaWQgMCksVChbUigiY29vcmRpbmF0ZXNJbmRleCIpXSxSZS5wcm90b3R5cGUsIl9jb29yZGluYXRlc0luZGV4Iix2b2lkIDApLFQoW1IoKV0sUmUucHJvdG90eXBlLCJvcHRpbWl6ZVVWQWxsb2NhdGlvbiIsdm9pZCAwKSxUKFtSKCJjb29yZGluYXRlc01vZGUiKV0sUmUucHJvdG90eXBlLCJfY29vcmRpbmF0ZXNNb2RlIix2b2lkIDApLFQoW1IoKV0sUmUucHJvdG90eXBlLCJ3cmFwVSIsbnVsbCksVChbUigpXSxSZS5wcm90b3R5cGUsIndyYXBWIixudWxsKSxUKFtSKCldLFJlLnByb3RvdHlwZSwid3JhcFIiLHZvaWQgMCksVChbUigpXSxSZS5wcm90b3R5cGUsImFuaXNvdHJvcGljRmlsdGVyaW5nTGV2ZWwiLHZvaWQgMCksVChbUigpXSxSZS5wcm90b3R5cGUsImlzQ3ViZSIsbnVsbCksVChbUigpXSxSZS5wcm90b3R5cGUsImlzM0QiLG51bGwpLFQoW1IoKV0sUmUucHJvdG90eXBlLCJpczJEQXJyYXkiLG51bGwpLFQoW1IoKV0sUmUucHJvdG90eXBlLCJnYW1tYVNwYWNlIixudWxsKSxUKFtSKCldLFJlLnByb3RvdHlwZSwiaW52ZXJ0WiIsdm9pZCAwKSxUKFtSKCldLFJlLnByb3RvdHlwZSwibG9kTGV2ZWxJbkFscGhhIix2b2lkIDApLFQoW1IoKV0sUmUucHJvdG90eXBlLCJsb2RHZW5lcmF0aW9uT2Zmc2V0IixudWxsKSxUKFtSKCldLFJlLnByb3RvdHlwZSwibG9kR2VuZXJhdGlvblNjYWxlIixudWxsKSxUKFtSKCldLFJlLnByb3RvdHlwZSwibGluZWFyU3BlY3VsYXJMT0QiLG51bGwpLFQoW210KCldLFJlLnByb3RvdHlwZSwiaXJyYWRpYW5jZVRleHR1cmUiLG51bGwpLFQoW1IoKV0sUmUucHJvdG90eXBlLCJpc1JlbmRlclRhcmdldCIsdm9pZCAwKTtmdW5jdGlvbiBGcihjLGUsdD0hMSl7Y29uc3QgaT1lLndpZHRoLHM9ZS5oZWlnaHQ7aWYoYyBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheSl7bGV0IGg9Yy5ieXRlTGVuZ3RoL2MuQllURVNfUEVSX0VMRU1FTlQ7Y29uc3QgbD1uZXcgVWludDhBcnJheShoKTtmb3IoOy0taD49MDspe2xldCB1PWNbaF07dTwwP3U9MDp1PjEmJih1PTEpLGxbaF09dSoyNTV9Yz1sfWNvbnN0IHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7ci53aWR0aD1pLHIuaGVpZ2h0PXM7Y29uc3Qgbj1yLmdldENvbnRleHQoIjJkIik7aWYoIW4pcmV0dXJuIG51bGw7Y29uc3QgYT1uLmNyZWF0ZUltYWdlRGF0YShpLHMpO2lmKGEuZGF0YS5zZXQoYyksbi5wdXRJbWFnZURhdGEoYSwwLDApLHQpe2NvbnN0IGg9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7aC53aWR0aD1pLGguaGVpZ2h0PXM7Y29uc3QgbD1oLmdldENvbnRleHQoIjJkIik7cmV0dXJuIGw/KGwudHJhbnNsYXRlKDAscyksbC5zY2FsZSgxLC0xKSxsLmRyYXdJbWFnZShyLDAsMCksaC50b0RhdGFVUkwoImltYWdlL3BuZyIpKTpudWxsfXJldHVybiByLnRvRGF0YVVSTCgiaW1hZ2UvcG5nIil9ZnVuY3Rpb24gcW4oYyxlPTAsdD0wKXtjb25zdCBpPWMuZ2V0SW50ZXJuYWxUZXh0dXJlKCk7aWYoIWkpcmV0dXJuIG51bGw7Y29uc3Qgcz1jLl9yZWFkUGl4ZWxzU3luYyhlLHQpO3JldHVybiBzP0ZyKHMsYy5nZXRTaXplKCksaS5pbnZlcnRZKTpudWxsfWFzeW5jIGZ1bmN0aW9uIGpuKGMsZT0wLHQ9MCl7Y29uc3QgaT1jLmdldEludGVybmFsVGV4dHVyZSgpO2lmKCFpKXJldHVybiBudWxsO2NvbnN0IHM9YXdhaXQgYy5yZWFkUGl4ZWxzKGUsdCk7cmV0dXJuIHM/RnIocyxjLmdldFNpemUoKSxpLmludmVydFkpOm51bGx9Y2xhc3MgTiBleHRlbmRzIFJle2NvbnN0cnVjdG9yKGUsdCxpLHMscj1OLlRSSUxJTkVBUl9TQU1QTElOR01PREUsbj1udWxsLGE9bnVsbCxvPW51bGwsaD0hMSxsLHUsZCxmLF8pe3ZhciBFLG0sdixTLHksQSxDLGIsTTtzdXBlcih0KSx0aGlzLnVybD1udWxsLHRoaXMudU9mZnNldD0wLHRoaXMudk9mZnNldD0wLHRoaXMudVNjYWxlPTEsdGhpcy52U2NhbGU9MSx0aGlzLnVBbmc9MCx0aGlzLnZBbmc9MCx0aGlzLndBbmc9MCx0aGlzLnVSb3RhdGlvbkNlbnRlcj0uNSx0aGlzLnZSb3RhdGlvbkNlbnRlcj0uNSx0aGlzLndSb3RhdGlvbkNlbnRlcj0uNSx0aGlzLmhvbW9nZW5lb3VzUm90YXRpb25JblVWVHJhbnNmb3JtPSExLHRoaXMuaW5zcGVjdGFibGVDdXN0b21Qcm9wZXJ0aWVzPW51bGwsdGhpcy5fbm9NaXBtYXA9ITEsdGhpcy5faW52ZXJ0WT0hMSx0aGlzLl9yb3dHZW5lcmF0aW9uTWF0cml4PW51bGwsdGhpcy5fY2FjaGVkVGV4dHVyZU1hdHJpeD1udWxsLHRoaXMuX3Byb2plY3Rpb25Nb2RlTWF0cml4PW51bGwsdGhpcy5fdDA9bnVsbCx0aGlzLl90MT1udWxsLHRoaXMuX3QyPW51bGwsdGhpcy5fY2FjaGVkVU9mZnNldD0tMSx0aGlzLl9jYWNoZWRWT2Zmc2V0PS0xLHRoaXMuX2NhY2hlZFVTY2FsZT0wLHRoaXMuX2NhY2hlZFZTY2FsZT0wLHRoaXMuX2NhY2hlZFVBbmc9LTEsdGhpcy5fY2FjaGVkVkFuZz0tMSx0aGlzLl9jYWNoZWRXQW5nPS0xLHRoaXMuX2NhY2hlZFJlZmxlY3Rpb25Qcm9qZWN0aW9uTWF0cml4SWQ9LTEsdGhpcy5fY2FjaGVkVVJvdGF0aW9uQ2VudGVyPS0xLHRoaXMuX2NhY2hlZFZSb3RhdGlvbkNlbnRlcj0tMSx0aGlzLl9jYWNoZWRXUm90YXRpb25DZW50ZXI9LTEsdGhpcy5fY2FjaGVkSG9tb2dlbmVvdXNSb3RhdGlvbkluVVZUcmFuc2Zvcm09ITEsdGhpcy5fY2FjaGVkUmVmbGVjdGlvblRleHR1cmVNYXRyaXg9bnVsbCx0aGlzLl9jYWNoZWRSZWZsZWN0aW9uVU9mZnNldD0tMSx0aGlzLl9jYWNoZWRSZWZsZWN0aW9uVk9mZnNldD0tMSx0aGlzLl9jYWNoZWRSZWZsZWN0aW9uVVNjYWxlPTAsdGhpcy5fY2FjaGVkUmVmbGVjdGlvblZTY2FsZT0wLHRoaXMuX2NhY2hlZFJlZmxlY3Rpb25Db29yZGluYXRlc01vZGU9LTEsdGhpcy5fYnVmZmVyPW51bGwsdGhpcy5fZGVsZXRlQnVmZmVyPSExLHRoaXMuX2Zvcm1hdD1udWxsLHRoaXMuX2RlbGF5ZWRPbkxvYWQ9bnVsbCx0aGlzLl9kZWxheWVkT25FcnJvcj1udWxsLHRoaXMub25Mb2FkT2JzZXJ2YWJsZT1uZXcgRix0aGlzLl9pc0Jsb2NraW5nPSEwLHRoaXMubmFtZT1lfHwiIix0aGlzLnVybD1lO2xldCBMLGs9ITEsdz1udWxsO3R5cGVvZiBpPT0ib2JqZWN0IiYmaSE9PW51bGw/KEw9KEU9aS5ub01pcG1hcCkhPT1udWxsJiZFIT09dm9pZCAwP0U6ITEscz0obT1pLmludmVydFkpIT09bnVsbCYmbSE9PXZvaWQgMD9tOiFmdC5Vc2VPcGVuR0xPcmllbnRhdGlvbkZvclVWLHI9KHY9aS5zYW1wbGluZ01vZGUpIT09bnVsbCYmdiE9PXZvaWQgMD92Ok4uVFJJTElORUFSX1NBTVBMSU5HTU9ERSxuPShTPWkub25Mb2FkKSE9PW51bGwmJlMhPT12b2lkIDA/UzpudWxsLGE9KHk9aS5vbkVycm9yKSE9PW51bGwmJnkhPT12b2lkIDA/eTpudWxsLG89KEE9aS5idWZmZXIpIT09bnVsbCYmQSE9PXZvaWQgMD9BOm51bGwsaD0oQz1pLmRlbGV0ZUJ1ZmZlcikhPT1udWxsJiZDIT09dm9pZCAwP0M6ITEsbD1pLmZvcm1hdCx1PWkubWltZVR5cGUsZD1pLmxvYWRlck9wdGlvbnMsZj1pLmNyZWF0aW9uRmxhZ3Msaz0oYj1pLnVzZVNSR0JCdWZmZXIpIT09bnVsbCYmYiE9PXZvaWQgMD9iOiExLHc9KE09aS5pbnRlcm5hbFRleHR1cmUpIT09bnVsbCYmTSE9PXZvaWQgMD9NOm51bGwpOkw9ISFpLHRoaXMuX25vTWlwbWFwPUwsdGhpcy5faW52ZXJ0WT1zPT09dm9pZCAwPyFmdC5Vc2VPcGVuR0xPcmllbnRhdGlvbkZvclVWOnMsdGhpcy5faW5pdGlhbFNhbXBsaW5nTW9kZT1yLHRoaXMuX2J1ZmZlcj1vLHRoaXMuX2RlbGV0ZUJ1ZmZlcj1oLHRoaXMuX21pbWVUeXBlPXUsdGhpcy5fbG9hZGVyT3B0aW9ucz1kLHRoaXMuX2NyZWF0aW9uRmxhZ3M9Zix0aGlzLl91c2VTUkdCQnVmZmVyPWssdGhpcy5fZm9yY2VkRXh0ZW5zaW9uPV8sbCYmKHRoaXMuX2Zvcm1hdD1sKTtjb25zdCBkZT10aGlzLmdldFNjZW5lKCksY2U9dGhpcy5fZ2V0RW5naW5lKCk7aWYoIWNlKXJldHVybjtjZS5vbkJlZm9yZVRleHR1cmVJbml0T2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyk7Y29uc3Qgc2U9KCk9Pnt0aGlzLl90ZXh0dXJlJiYodGhpcy5fdGV4dHVyZS5faW52ZXJ0VlNjYWxlJiYodGhpcy52U2NhbGUqPS0xLHRoaXMudk9mZnNldCs9MSksdGhpcy5fdGV4dHVyZS5fY2FjaGVkV3JhcFUhPT1udWxsJiYodGhpcy53cmFwVT10aGlzLl90ZXh0dXJlLl9jYWNoZWRXcmFwVSx0aGlzLl90ZXh0dXJlLl9jYWNoZWRXcmFwVT1udWxsKSx0aGlzLl90ZXh0dXJlLl9jYWNoZWRXcmFwViE9PW51bGwmJih0aGlzLndyYXBWPXRoaXMuX3RleHR1cmUuX2NhY2hlZFdyYXBWLHRoaXMuX3RleHR1cmUuX2NhY2hlZFdyYXBWPW51bGwpLHRoaXMuX3RleHR1cmUuX2NhY2hlZFdyYXBSIT09bnVsbCYmKHRoaXMud3JhcFI9dGhpcy5fdGV4dHVyZS5fY2FjaGVkV3JhcFIsdGhpcy5fdGV4dHVyZS5fY2FjaGVkV3JhcFI9bnVsbCkpLHRoaXMub25Mb2FkT2JzZXJ2YWJsZS5oYXNPYnNlcnZlcnMoKSYmdGhpcy5vbkxvYWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKSxuJiZuKCksIXRoaXMuaXNCbG9ja2luZyYmZGUmJmRlLnJlc2V0Q2FjaGVkTWF0ZXJpYWwoKX0sdGU9KEZlLHdlKT0+e3RoaXMuX2xvYWRpbmdFcnJvcj0hMCx0aGlzLl9lcnJvck9iamVjdD17bWVzc2FnZTpGZSxleGNlcHRpb246d2V9LGEmJmEoRmUsd2UpLE4uT25UZXh0dXJlTG9hZEVycm9yT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyl9O2lmKCF0aGlzLnVybCYmIXcpe3RoaXMuX2RlbGF5ZWRPbkxvYWQ9c2UsdGhpcy5fZGVsYXllZE9uRXJyb3I9dGU7cmV0dXJufWlmKHRoaXMuX3RleHR1cmU9dz8/dGhpcy5fZ2V0RnJvbUNhY2hlKHRoaXMudXJsLEwscix0aGlzLl9pbnZlcnRZLGspLHRoaXMuX3RleHR1cmUpaWYodGhpcy5fdGV4dHVyZS5pc1JlYWR5KVhpLlNldEltbWVkaWF0ZSgoKT0+c2UoKSk7ZWxzZXtjb25zdCBGZT10aGlzLl90ZXh0dXJlLm9uTG9hZGVkT2JzZXJ2YWJsZS5hZGQoc2UpO3RoaXMuX3RleHR1cmUub25FcnJvck9ic2VydmFibGUuYWRkKHdlPT57dmFyIEhlO3RlKHdlLm1lc3NhZ2Usd2UuZXhjZXB0aW9uKSwoSGU9dGhpcy5fdGV4dHVyZSk9PT1udWxsfHxIZT09PXZvaWQgMHx8SGUub25Mb2FkZWRPYnNlcnZhYmxlLnJlbW92ZShGZSl9KX1lbHNlIGlmKCFkZXx8IWRlLnVzZURlbGF5ZWRUZXh0dXJlTG9hZGluZyl7dHJ5e3RoaXMuX3RleHR1cmU9Y2UuY3JlYXRlVGV4dHVyZSh0aGlzLnVybCxMLHRoaXMuX2ludmVydFksZGUscixzZSx0ZSx0aGlzLl9idWZmZXIsdm9pZCAwLHRoaXMuX2Zvcm1hdCx0aGlzLl9mb3JjZWRFeHRlbnNpb24sdSxkLGYsayl9Y2F0Y2goRmUpe3Rocm93IHRlKCJlcnJvciBsb2FkaW5nIixGZSksRmV9aCYmKHRoaXMuX2J1ZmZlcj1udWxsKX1lbHNlIHRoaXMuZGVsYXlMb2FkU3RhdGU9NCx0aGlzLl9kZWxheWVkT25Mb2FkPXNlLHRoaXMuX2RlbGF5ZWRPbkVycm9yPXRlfWdldCBub01pcG1hcCgpe3JldHVybiB0aGlzLl9ub01pcG1hcH1nZXQgbWltZVR5cGUoKXtyZXR1cm4gdGhpcy5fbWltZVR5cGV9c2V0IGlzQmxvY2tpbmcoZSl7dGhpcy5faXNCbG9ja2luZz1lfWdldCBpc0Jsb2NraW5nKCl7cmV0dXJuIHRoaXMuX2lzQmxvY2tpbmd9Z2V0IGludmVydFkoKXtyZXR1cm4gdGhpcy5faW52ZXJ0WX11cGRhdGVVUkwoZSx0PW51bGwsaSxzKXt0aGlzLnVybCYmKHRoaXMucmVsZWFzZUludGVybmFsVGV4dHVyZSgpLHRoaXMuZ2V0U2NlbmUoKS5tYXJrQWxsTWF0ZXJpYWxzQXNEaXJ0eSgxKSksKCF0aGlzLm5hbWV8fHRoaXMubmFtZS5zdGFydHNXaXRoKCJkYXRhOiIpKSYmKHRoaXMubmFtZT1lKSx0aGlzLnVybD1lLHRoaXMuX2J1ZmZlcj10LHRoaXMuX2ZvcmNlZEV4dGVuc2lvbj1zLHRoaXMuZGVsYXlMb2FkU3RhdGU9NCxpJiYodGhpcy5fZGVsYXllZE9uTG9hZD1pKSx0aGlzLmRlbGF5TG9hZCgpfWRlbGF5TG9hZCgpe2lmKHRoaXMuZGVsYXlMb2FkU3RhdGUhPT00KXJldHVybjtjb25zdCBlPXRoaXMuZ2V0U2NlbmUoKTtlJiYodGhpcy5kZWxheUxvYWRTdGF0ZT0xLHRoaXMuX3RleHR1cmU9dGhpcy5fZ2V0RnJvbUNhY2hlKHRoaXMudXJsLHRoaXMuX25vTWlwbWFwLHRoaXMuc2FtcGxpbmdNb2RlLHRoaXMuX2ludmVydFksdGhpcy5fdXNlU1JHQkJ1ZmZlciksdGhpcy5fdGV4dHVyZT90aGlzLl9kZWxheWVkT25Mb2FkJiYodGhpcy5fdGV4dHVyZS5pc1JlYWR5P1hpLlNldEltbWVkaWF0ZSh0aGlzLl9kZWxheWVkT25Mb2FkKTp0aGlzLl90ZXh0dXJlLm9uTG9hZGVkT2JzZXJ2YWJsZS5hZGQodGhpcy5fZGVsYXllZE9uTG9hZCkpOih0aGlzLl90ZXh0dXJlPWUuZ2V0RW5naW5lKCkuY3JlYXRlVGV4dHVyZSh0aGlzLnVybCx0aGlzLl9ub01pcG1hcCx0aGlzLl9pbnZlcnRZLGUsdGhpcy5zYW1wbGluZ01vZGUsdGhpcy5fZGVsYXllZE9uTG9hZCx0aGlzLl9kZWxheWVkT25FcnJvcix0aGlzLl9idWZmZXIsbnVsbCx0aGlzLl9mb3JtYXQsdGhpcy5fZm9yY2VkRXh0ZW5zaW9uLHRoaXMuX21pbWVUeXBlLHRoaXMuX2xvYWRlck9wdGlvbnMsdGhpcy5fY3JlYXRpb25GbGFncyx0aGlzLl91c2VTUkdCQnVmZmVyKSx0aGlzLl9kZWxldGVCdWZmZXImJih0aGlzLl9idWZmZXI9bnVsbCkpLHRoaXMuX2RlbGF5ZWRPbkxvYWQ9bnVsbCx0aGlzLl9kZWxheWVkT25FcnJvcj1udWxsKX1fcHJlcGFyZVJvd0ZvclRleHR1cmVHZW5lcmF0aW9uKGUsdCxpLHMpe2UqPXRoaXMuX2NhY2hlZFVTY2FsZSx0Kj10aGlzLl9jYWNoZWRWU2NhbGUsZS09dGhpcy51Um90YXRpb25DZW50ZXIqdGhpcy5fY2FjaGVkVVNjYWxlLHQtPXRoaXMudlJvdGF0aW9uQ2VudGVyKnRoaXMuX2NhY2hlZFZTY2FsZSxpLT10aGlzLndSb3RhdGlvbkNlbnRlcixwLlRyYW5zZm9ybUNvb3JkaW5hdGVzRnJvbUZsb2F0c1RvUmVmKGUsdCxpLHRoaXMuX3Jvd0dlbmVyYXRpb25NYXRyaXgscykscy54Kz10aGlzLnVSb3RhdGlvbkNlbnRlcip0aGlzLl9jYWNoZWRVU2NhbGUrdGhpcy5fY2FjaGVkVU9mZnNldCxzLnkrPXRoaXMudlJvdGF0aW9uQ2VudGVyKnRoaXMuX2NhY2hlZFZTY2FsZSt0aGlzLl9jYWNoZWRWT2Zmc2V0LHMueis9dGhpcy53Um90YXRpb25DZW50ZXJ9Y2hlY2tUcmFuc2Zvcm1zQXJlSWRlbnRpY2FsKGUpe3JldHVybiBlIT09bnVsbCYmdGhpcy51T2Zmc2V0PT09ZS51T2Zmc2V0JiZ0aGlzLnZPZmZzZXQ9PT1lLnZPZmZzZXQmJnRoaXMudVNjYWxlPT09ZS51U2NhbGUmJnRoaXMudlNjYWxlPT09ZS52U2NhbGUmJnRoaXMudUFuZz09PWUudUFuZyYmdGhpcy52QW5nPT09ZS52QW5nJiZ0aGlzLndBbmc9PT1lLndBbmd9Z2V0VGV4dHVyZU1hdHJpeChlPTEpe2lmKHRoaXMudU9mZnNldD09PXRoaXMuX2NhY2hlZFVPZmZzZXQmJnRoaXMudk9mZnNldD09PXRoaXMuX2NhY2hlZFZPZmZzZXQmJnRoaXMudVNjYWxlKmU9PT10aGlzLl9jYWNoZWRVU2NhbGUmJnRoaXMudlNjYWxlPT09dGhpcy5fY2FjaGVkVlNjYWxlJiZ0aGlzLnVBbmc9PT10aGlzLl9jYWNoZWRVQW5nJiZ0aGlzLnZBbmc9PT10aGlzLl9jYWNoZWRWQW5nJiZ0aGlzLndBbmc9PT10aGlzLl9jYWNoZWRXQW5nJiZ0aGlzLnVSb3RhdGlvbkNlbnRlcj09PXRoaXMuX2NhY2hlZFVSb3RhdGlvbkNlbnRlciYmdGhpcy52Um90YXRpb25DZW50ZXI9PT10aGlzLl9jYWNoZWRWUm90YXRpb25DZW50ZXImJnRoaXMud1JvdGF0aW9uQ2VudGVyPT09dGhpcy5fY2FjaGVkV1JvdGF0aW9uQ2VudGVyJiZ0aGlzLmhvbW9nZW5lb3VzUm90YXRpb25JblVWVHJhbnNmb3JtPT09dGhpcy5fY2FjaGVkSG9tb2dlbmVvdXNSb3RhdGlvbkluVVZUcmFuc2Zvcm0pcmV0dXJuIHRoaXMuX2NhY2hlZFRleHR1cmVNYXRyaXg7dGhpcy5fY2FjaGVkVU9mZnNldD10aGlzLnVPZmZzZXQsdGhpcy5fY2FjaGVkVk9mZnNldD10aGlzLnZPZmZzZXQsdGhpcy5fY2FjaGVkVVNjYWxlPXRoaXMudVNjYWxlKmUsdGhpcy5fY2FjaGVkVlNjYWxlPXRoaXMudlNjYWxlLHRoaXMuX2NhY2hlZFVBbmc9dGhpcy51QW5nLHRoaXMuX2NhY2hlZFZBbmc9dGhpcy52QW5nLHRoaXMuX2NhY2hlZFdBbmc9dGhpcy53QW5nLHRoaXMuX2NhY2hlZFVSb3RhdGlvbkNlbnRlcj10aGlzLnVSb3RhdGlvbkNlbnRlcix0aGlzLl9jYWNoZWRWUm90YXRpb25DZW50ZXI9dGhpcy52Um90YXRpb25DZW50ZXIsdGhpcy5fY2FjaGVkV1JvdGF0aW9uQ2VudGVyPXRoaXMud1JvdGF0aW9uQ2VudGVyLHRoaXMuX2NhY2hlZEhvbW9nZW5lb3VzUm90YXRpb25JblVWVHJhbnNmb3JtPXRoaXMuaG9tb2dlbmVvdXNSb3RhdGlvbkluVVZUcmFuc2Zvcm0sKCF0aGlzLl9jYWNoZWRUZXh0dXJlTWF0cml4fHwhdGhpcy5fcm93R2VuZXJhdGlvbk1hdHJpeCkmJih0aGlzLl9jYWNoZWRUZXh0dXJlTWF0cml4PXguWmVybygpLHRoaXMuX3Jvd0dlbmVyYXRpb25NYXRyaXg9bmV3IHgsdGhpcy5fdDA9cC5aZXJvKCksdGhpcy5fdDE9cC5aZXJvKCksdGhpcy5fdDI9cC5aZXJvKCkpLHguUm90YXRpb25ZYXdQaXRjaFJvbGxUb1JlZih0aGlzLnZBbmcsdGhpcy51QW5nLHRoaXMud0FuZyx0aGlzLl9yb3dHZW5lcmF0aW9uTWF0cml4KSx0aGlzLmhvbW9nZW5lb3VzUm90YXRpb25JblVWVHJhbnNmb3JtPyh4LlRyYW5zbGF0aW9uVG9SZWYoLXRoaXMuX2NhY2hlZFVSb3RhdGlvbkNlbnRlciwtdGhpcy5fY2FjaGVkVlJvdGF0aW9uQ2VudGVyLC10aGlzLl9jYWNoZWRXUm90YXRpb25DZW50ZXIsRC5NYXRyaXhbMF0pLHguVHJhbnNsYXRpb25Ub1JlZih0aGlzLl9jYWNoZWRVUm90YXRpb25DZW50ZXIsdGhpcy5fY2FjaGVkVlJvdGF0aW9uQ2VudGVyLHRoaXMuX2NhY2hlZFdSb3RhdGlvbkNlbnRlcixELk1hdHJpeFsxXSkseC5TY2FsaW5nVG9SZWYodGhpcy5fY2FjaGVkVVNjYWxlLHRoaXMuX2NhY2hlZFZTY2FsZSwwLEQuTWF0cml4WzJdKSx4LlRyYW5zbGF0aW9uVG9SZWYodGhpcy5fY2FjaGVkVU9mZnNldCx0aGlzLl9jYWNoZWRWT2Zmc2V0LDAsRC5NYXRyaXhbM10pLEQuTWF0cml4WzBdLm11bHRpcGx5VG9SZWYodGhpcy5fcm93R2VuZXJhdGlvbk1hdHJpeCx0aGlzLl9jYWNoZWRUZXh0dXJlTWF0cml4KSx0aGlzLl9jYWNoZWRUZXh0dXJlTWF0cml4Lm11bHRpcGx5VG9SZWYoRC5NYXRyaXhbMV0sdGhpcy5fY2FjaGVkVGV4dHVyZU1hdHJpeCksdGhpcy5fY2FjaGVkVGV4dHVyZU1hdHJpeC5tdWx0aXBseVRvUmVmKEQuTWF0cml4WzJdLHRoaXMuX2NhY2hlZFRleHR1cmVNYXRyaXgpLHRoaXMuX2NhY2hlZFRleHR1cmVNYXRyaXgubXVsdGlwbHlUb1JlZihELk1hdHJpeFszXSx0aGlzLl9jYWNoZWRUZXh0dXJlTWF0cml4KSx0aGlzLl9jYWNoZWRUZXh0dXJlTWF0cml4LnNldFJvd0Zyb21GbG9hdHMoMix0aGlzLl9jYWNoZWRUZXh0dXJlTWF0cml4Lm1bMTJdLHRoaXMuX2NhY2hlZFRleHR1cmVNYXRyaXgubVsxM10sdGhpcy5fY2FjaGVkVGV4dHVyZU1hdHJpeC5tWzE0XSwxKSk6KHRoaXMuX3ByZXBhcmVSb3dGb3JUZXh0dXJlR2VuZXJhdGlvbigwLDAsMCx0aGlzLl90MCksdGhpcy5fcHJlcGFyZVJvd0ZvclRleHR1cmVHZW5lcmF0aW9uKDEsMCwwLHRoaXMuX3QxKSx0aGlzLl9wcmVwYXJlUm93Rm9yVGV4dHVyZUdlbmVyYXRpb24oMCwxLDAsdGhpcy5fdDIpLHRoaXMuX3QxLnN1YnRyYWN0SW5QbGFjZSh0aGlzLl90MCksdGhpcy5fdDIuc3VidHJhY3RJblBsYWNlKHRoaXMuX3QwKSx4LkZyb21WYWx1ZXNUb1JlZih0aGlzLl90MS54LHRoaXMuX3QxLnksdGhpcy5fdDEueiwwLHRoaXMuX3QyLngsdGhpcy5fdDIueSx0aGlzLl90Mi56LDAsdGhpcy5fdDAueCx0aGlzLl90MC55LHRoaXMuX3QwLnosMCwwLDAsMCwxLHRoaXMuX2NhY2hlZFRleHR1cmVNYXRyaXgpKTtjb25zdCB0PXRoaXMuZ2V0U2NlbmUoKTtyZXR1cm4gdD8odGhpcy5vcHRpbWl6ZVVWQWxsb2NhdGlvbiYmdC5tYXJrQWxsTWF0ZXJpYWxzQXNEaXJ0eSgxLGk9PmkuaGFzVGV4dHVyZSh0aGlzKSksdGhpcy5fY2FjaGVkVGV4dHVyZU1hdHJpeCk6dGhpcy5fY2FjaGVkVGV4dHVyZU1hdHJpeH1nZXRSZWZsZWN0aW9uVGV4dHVyZU1hdHJpeCgpe2NvbnN0IGU9dGhpcy5nZXRTY2VuZSgpO2lmKCFlKXJldHVybiB0aGlzLl9jYWNoZWRSZWZsZWN0aW9uVGV4dHVyZU1hdHJpeDtpZih0aGlzLnVPZmZzZXQ9PT10aGlzLl9jYWNoZWRSZWZsZWN0aW9uVU9mZnNldCYmdGhpcy52T2Zmc2V0PT09dGhpcy5fY2FjaGVkUmVmbGVjdGlvblZPZmZzZXQmJnRoaXMudVNjYWxlPT09dGhpcy5fY2FjaGVkUmVmbGVjdGlvblVTY2FsZSYmdGhpcy52U2NhbGU9PT10aGlzLl9jYWNoZWRSZWZsZWN0aW9uVlNjYWxlJiZ0aGlzLmNvb3JkaW5hdGVzTW9kZT09PXRoaXMuX2NhY2hlZFJlZmxlY3Rpb25Db29yZGluYXRlc01vZGUpaWYodGhpcy5jb29yZGluYXRlc01vZGU9PT1OLlBST0pFQ1RJT05fTU9ERSl7aWYodGhpcy5fY2FjaGVkUmVmbGVjdGlvblByb2plY3Rpb25NYXRyaXhJZD09PWUuZ2V0UHJvamVjdGlvbk1hdHJpeCgpLnVwZGF0ZUZsYWcpcmV0dXJuIHRoaXMuX2NhY2hlZFJlZmxlY3Rpb25UZXh0dXJlTWF0cml4fWVsc2UgcmV0dXJuIHRoaXMuX2NhY2hlZFJlZmxlY3Rpb25UZXh0dXJlTWF0cml4O3RoaXMuX2NhY2hlZFJlZmxlY3Rpb25UZXh0dXJlTWF0cml4fHwodGhpcy5fY2FjaGVkUmVmbGVjdGlvblRleHR1cmVNYXRyaXg9eC5aZXJvKCkpLHRoaXMuX3Byb2plY3Rpb25Nb2RlTWF0cml4fHwodGhpcy5fcHJvamVjdGlvbk1vZGVNYXRyaXg9eC5aZXJvKCkpO2NvbnN0IHQ9dGhpcy5fY2FjaGVkUmVmbGVjdGlvbkNvb3JkaW5hdGVzTW9kZSE9PXRoaXMuY29vcmRpbmF0ZXNNb2RlO3N3aXRjaCh0aGlzLl9jYWNoZWRSZWZsZWN0aW9uVU9mZnNldD10aGlzLnVPZmZzZXQsdGhpcy5fY2FjaGVkUmVmbGVjdGlvblZPZmZzZXQ9dGhpcy52T2Zmc2V0LHRoaXMuX2NhY2hlZFJlZmxlY3Rpb25VU2NhbGU9dGhpcy51U2NhbGUsdGhpcy5fY2FjaGVkUmVmbGVjdGlvblZTY2FsZT10aGlzLnZTY2FsZSx0aGlzLl9jYWNoZWRSZWZsZWN0aW9uQ29vcmRpbmF0ZXNNb2RlPXRoaXMuY29vcmRpbmF0ZXNNb2RlLHRoaXMuY29vcmRpbmF0ZXNNb2RlKXtjYXNlIE4uUExBTkFSX01PREU6e3guSWRlbnRpdHlUb1JlZih0aGlzLl9jYWNoZWRSZWZsZWN0aW9uVGV4dHVyZU1hdHJpeCksdGhpcy5fY2FjaGVkUmVmbGVjdGlvblRleHR1cmVNYXRyaXhbMF09dGhpcy51U2NhbGUsdGhpcy5fY2FjaGVkUmVmbGVjdGlvblRleHR1cmVNYXRyaXhbNV09dGhpcy52U2NhbGUsdGhpcy5fY2FjaGVkUmVmbGVjdGlvblRleHR1cmVNYXRyaXhbMTJdPXRoaXMudU9mZnNldCx0aGlzLl9jYWNoZWRSZWZsZWN0aW9uVGV4dHVyZU1hdHJpeFsxM109dGhpcy52T2Zmc2V0O2JyZWFrfWNhc2UgTi5QUk9KRUNUSU9OX01PREU6e3guRnJvbVZhbHVlc1RvUmVmKC41LDAsMCwwLDAsLS41LDAsMCwwLDAsMCwwLC41LC41LDEsMSx0aGlzLl9wcm9qZWN0aW9uTW9kZU1hdHJpeCk7Y29uc3QgaT1lLmdldFByb2plY3Rpb25NYXRyaXgoKTt0aGlzLl9jYWNoZWRSZWZsZWN0aW9uUHJvamVjdGlvbk1hdHJpeElkPWkudXBkYXRlRmxhZyxpLm11bHRpcGx5VG9SZWYodGhpcy5fcHJvamVjdGlvbk1vZGVNYXRyaXgsdGhpcy5fY2FjaGVkUmVmbGVjdGlvblRleHR1cmVNYXRyaXgpO2JyZWFrfWRlZmF1bHQ6eC5JZGVudGl0eVRvUmVmKHRoaXMuX2NhY2hlZFJlZmxlY3Rpb25UZXh0dXJlTWF0cml4KTticmVha31yZXR1cm4gdCYmZS5tYXJrQWxsTWF0ZXJpYWxzQXNEaXJ0eSgxLGk9PmkuZ2V0QWN0aXZlVGV4dHVyZXMoKS5pbmRleE9mKHRoaXMpIT09LTEpLHRoaXMuX2NhY2hlZFJlZmxlY3Rpb25UZXh0dXJlTWF0cml4fWNsb25lKCl7Y29uc3QgZT17bm9NaXBtYXA6dGhpcy5fbm9NaXBtYXAsaW52ZXJ0WTp0aGlzLl9pbnZlcnRZLHNhbXBsaW5nTW9kZTp0aGlzLnNhbXBsaW5nTW9kZSxvbkxvYWQ6dm9pZCAwLG9uRXJyb3I6dm9pZCAwLGJ1ZmZlcjp0aGlzLl90ZXh0dXJlP3RoaXMuX3RleHR1cmUuX2J1ZmZlcjp2b2lkIDAsZGVsZXRlQnVmZmVyOnRoaXMuX2RlbGV0ZUJ1ZmZlcixmb3JtYXQ6dGhpcy50ZXh0dXJlRm9ybWF0LG1pbWVUeXBlOnRoaXMubWltZVR5cGUsbG9hZGVyT3B0aW9uczp0aGlzLl9sb2FkZXJPcHRpb25zLGNyZWF0aW9uRmxhZ3M6dGhpcy5fY3JlYXRpb25GbGFncyx1c2VTUkdCQnVmZmVyOnRoaXMuX3VzZVNSR0JCdWZmZXJ9O3JldHVybiBhZS5DbG9uZSgoKT0+bmV3IE4odGhpcy5fdGV4dHVyZT90aGlzLl90ZXh0dXJlLnVybDpudWxsLHRoaXMuZ2V0U2NlbmUoKSxlKSx0aGlzKX1zZXJpYWxpemUoKXt2YXIgZSx0O2NvbnN0IGk9dGhpcy5uYW1lO04uU2VyaWFsaXplQnVmZmVyc3x8dGhpcy5uYW1lLnN0YXJ0c1dpdGgoImRhdGE6IikmJih0aGlzLm5hbWU9IiIpLHRoaXMubmFtZS5zdGFydHNXaXRoKCJkYXRhOiIpJiZ0aGlzLnVybD09PXRoaXMubmFtZSYmKHRoaXMudXJsPSIiKTtjb25zdCBzPXN1cGVyLnNlcmlhbGl6ZShOLl9TZXJpYWxpemVJbnRlcm5hbFRleHR1cmVVbmlxdWVJZCk7cmV0dXJuIHM/KChOLlNlcmlhbGl6ZUJ1ZmZlcnN8fE4uRm9yY2VTZXJpYWxpemVCdWZmZXJzKSYmKHR5cGVvZiB0aGlzLl9idWZmZXI9PSJzdHJpbmciJiZ0aGlzLl9idWZmZXIuc3Vic3RyKDAsNSk9PT0iZGF0YToiPyhzLmJhc2U2NFN0cmluZz10aGlzLl9idWZmZXIscy5uYW1lPXMubmFtZS5yZXBsYWNlKCJkYXRhOiIsIiIpKTp0aGlzLnVybCYmdGhpcy51cmwuc3RhcnRzV2l0aCgiZGF0YToiKSYmdGhpcy5fYnVmZmVyIGluc3RhbmNlb2YgVWludDhBcnJheT9zLmJhc2U2NFN0cmluZz0iZGF0YTppbWFnZS9wbmc7YmFzZTY0LCIrc3IodGhpcy5fYnVmZmVyKTooTi5Gb3JjZVNlcmlhbGl6ZUJ1ZmZlcnN8fHRoaXMudXJsJiZ0aGlzLnVybC5zdGFydHNXaXRoKCJibG9iOiIpfHx0aGlzLl9mb3JjZVNlcmlhbGl6ZSkmJihzLmJhc2U2NFN0cmluZz0hdGhpcy5fZW5naW5lfHx0aGlzLl9lbmdpbmUuX2ZlYXR1cmVzLnN1cHBvcnRTeW5jVGV4dHVyZVJlYWQ/cW4odGhpcyk6am4odGhpcykpKSxzLmludmVydFk9dGhpcy5faW52ZXJ0WSxzLnNhbXBsaW5nTW9kZT10aGlzLnNhbXBsaW5nTW9kZSxzLl9jcmVhdGlvbkZsYWdzPXRoaXMuX2NyZWF0aW9uRmxhZ3Mscy5fdXNlU1JHQkJ1ZmZlcj10aGlzLl91c2VTUkdCQnVmZmVyLE4uX1NlcmlhbGl6ZUludGVybmFsVGV4dHVyZVVuaXF1ZUlkJiYocy5pbnRlcm5hbFRleHR1cmVVbmlxdWVJZD0odD0oZT10aGlzLl90ZXh0dXJlKT09PW51bGx8fGU9PT12b2lkIDA/dm9pZCAwOmUudW5pcXVlSWQpIT09bnVsbCYmdCE9PXZvaWQgMD90OnZvaWQgMCksdGhpcy5uYW1lPWkscyk6bnVsbH1nZXRDbGFzc05hbWUoKXtyZXR1cm4iVGV4dHVyZSJ9ZGlzcG9zZSgpe3N1cGVyLmRpc3Bvc2UoKSx0aGlzLm9uTG9hZE9ic2VydmFibGUuY2xlYXIoKSx0aGlzLl9kZWxheWVkT25Mb2FkPW51bGwsdGhpcy5fZGVsYXllZE9uRXJyb3I9bnVsbCx0aGlzLl9idWZmZXI9bnVsbH1zdGF0aWMgUGFyc2UoZSx0LGkpe2lmKGUuY3VzdG9tVHlwZSl7Y29uc3QgaD1MaS5JbnN0YW50aWF0ZShlLmN1c3RvbVR5cGUpLlBhcnNlKGUsdCxpKTtyZXR1cm4gZS5zYW1wbGluZ01vZGUmJmgudXBkYXRlU2FtcGxpbmdNb2RlJiZoLl9zYW1wbGluZ01vZGUmJmguX3NhbXBsaW5nTW9kZSE9PWUuc2FtcGxpbmdNb2RlJiZoLnVwZGF0ZVNhbXBsaW5nTW9kZShlLnNhbXBsaW5nTW9kZSksaH1pZihlLmlzQ3ViZSYmIWUuaXNSZW5kZXJUYXJnZXQpcmV0dXJuIE4uX0N1YmVUZXh0dXJlUGFyc2VyKGUsdCxpKTtjb25zdCBzPWUuaW50ZXJuYWxUZXh0dXJlVW5pcXVlSWQhPT12b2lkIDA7aWYoIWUubmFtZSYmIWUuaXNSZW5kZXJUYXJnZXQmJiFzKXJldHVybiBudWxsO2xldCByO2lmKHMpe2NvbnN0IG89dC5nZXRFbmdpbmUoKS5nZXRMb2FkZWRUZXh0dXJlc0NhY2hlKCk7Zm9yKGNvbnN0IGggb2YgbylpZihoLnVuaXF1ZUlkPT09ZS5pbnRlcm5hbFRleHR1cmVVbmlxdWVJZCl7cj1oO2JyZWFrfX1jb25zdCBuPW89Pnt2YXIgaDtpZihvJiZvLl90ZXh0dXJlJiYoby5fdGV4dHVyZS5fY2FjaGVkV3JhcFU9bnVsbCxvLl90ZXh0dXJlLl9jYWNoZWRXcmFwVj1udWxsLG8uX3RleHR1cmUuX2NhY2hlZFdyYXBSPW51bGwpLGUuc2FtcGxpbmdNb2RlKXtjb25zdCBsPWUuc2FtcGxpbmdNb2RlO28mJm8uc2FtcGxpbmdNb2RlIT09bCYmby51cGRhdGVTYW1wbGluZ01vZGUobCl9aWYobyYmZS5hbmltYXRpb25zKWZvcihsZXQgbD0wO2w8ZS5hbmltYXRpb25zLmxlbmd0aDtsKyspe2NvbnN0IHU9ZS5hbmltYXRpb25zW2xdLGQ9cmkoIkJBQllMT04uQW5pbWF0aW9uIik7ZCYmby5hbmltYXRpb25zLnB1c2goZC5QYXJzZSh1KSl9cyYmIXImJigoaD1vPT1udWxsP3ZvaWQgMDpvLl90ZXh0dXJlKT09PW51bGx8fGg9PT12b2lkIDB8fGguX3NldFVuaXF1ZUlkKGUuaW50ZXJuYWxUZXh0dXJlVW5pcXVlSWQpKX07cmV0dXJuIGFlLlBhcnNlKCgpPT57dmFyIG8saCxsO2xldCB1PSEwO2lmKGUubm9NaXBtYXAmJih1PSExKSxlLm1pcnJvclBsYW5lKXtjb25zdCBkPU4uX0NyZWF0ZU1pcnJvcihlLm5hbWUsZS5yZW5kZXJUYXJnZXRTaXplLHQsdSk7cmV0dXJuIGQuX3dhaXRpbmdSZW5kZXJMaXN0PWUucmVuZGVyTGlzdCxkLm1pcnJvclBsYW5lPXh0LkZyb21BcnJheShlLm1pcnJvclBsYW5lKSxuKGQpLGR9ZWxzZSBpZihlLmlzUmVuZGVyVGFyZ2V0KXtsZXQgZD1udWxsO2lmKGUuaXNDdWJlKXtpZih0LnJlZmxlY3Rpb25Qcm9iZXMpZm9yKGxldCBmPTA7Zjx0LnJlZmxlY3Rpb25Qcm9iZXMubGVuZ3RoO2YrKyl7Y29uc3QgXz10LnJlZmxlY3Rpb25Qcm9iZXNbZl07aWYoXy5uYW1lPT09ZS5uYW1lKXJldHVybiBfLmN1YmVUZXh0dXJlfX1lbHNlIGQ9Ti5fQ3JlYXRlUmVuZGVyVGFyZ2V0VGV4dHVyZShlLm5hbWUsZS5yZW5kZXJUYXJnZXRTaXplLHQsdSwobz1lLl9jcmVhdGlvbkZsYWdzKSE9PW51bGwmJm8hPT12b2lkIDA/bzowKSxkLl93YWl0aW5nUmVuZGVyTGlzdD1lLnJlbmRlckxpc3Q7cmV0dXJuIG4oZCksZH1lbHNle2xldCBkO2lmKGUuYmFzZTY0U3RyaW5nJiYhcilkPU4uQ3JlYXRlRnJvbUJhc2U2NFN0cmluZyhlLmJhc2U2NFN0cmluZyxlLmJhc2U2NFN0cmluZyx0LCF1LGUuaW52ZXJ0WSxlLnNhbXBsaW5nTW9kZSwoKT0+e24oZCl9LChoPWUuX2NyZWF0aW9uRmxhZ3MpIT09bnVsbCYmaCE9PXZvaWQgMD9oOjAsKGw9ZS5fdXNlU1JHQkJ1ZmZlcikhPT1udWxsJiZsIT09dm9pZCAwP2w6ITEpLGQubmFtZT1lLm5hbWU7ZWxzZXtsZXQgZjtlLm5hbWUmJmUubmFtZS5pbmRleE9mKCI6Ly8iKT4wP2Y9ZS5uYW1lOmY9aStlLm5hbWUsZS51cmwmJihlLnVybC5zdGFydHNXaXRoKCJkYXRhOiIpfHxOLlVzZVNlcmlhbGl6ZWRVcmxJZkFueSkmJihmPWUudXJsKTtjb25zdCBfPXtub01pcG1hcDohdSxpbnZlcnRZOmUuaW52ZXJ0WSxzYW1wbGluZ01vZGU6ZS5zYW1wbGluZ01vZGUsb25Mb2FkOigpPT57bihkKX0saW50ZXJuYWxUZXh0dXJlOnJ9O2Q9bmV3IE4oZix0LF8pfXJldHVybiBkfX0sZSx0KX1zdGF0aWMgQ3JlYXRlRnJvbUJhc2U2NFN0cmluZyhlLHQsaSxzLHIsbj1OLlRSSUxJTkVBUl9TQU1QTElOR01PREUsYT1udWxsLG89bnVsbCxoPTUsbCl7cmV0dXJuIG5ldyBOKCJkYXRhOiIrdCxpLHMscixuLGEsbyxlLCExLGgsdm9pZCAwLHZvaWQgMCxsKX1zdGF0aWMgTG9hZEZyb21EYXRhU3RyaW5nKGUsdCxpLHM9ITEscixuPSEwLGE9Ti5UUklMSU5FQVJfU0FNUExJTkdNT0RFLG89bnVsbCxoPW51bGwsbD01LHUpe3JldHVybiBlLnN1YnN0cigwLDUpIT09ImRhdGE6IiYmKGU9ImRhdGE6IitlKSxuZXcgTihlLGkscixuLGEsbyxoLHQscyxsLHZvaWQgMCx2b2lkIDAsdSl9fU4uU2VyaWFsaXplQnVmZmVycz0hMCxOLkZvcmNlU2VyaWFsaXplQnVmZmVycz0hMSxOLk9uVGV4dHVyZUxvYWRFcnJvck9ic2VydmFibGU9bmV3IEYsTi5fU2VyaWFsaXplSW50ZXJuYWxUZXh0dXJlVW5pcXVlSWQ9ITEsTi5fQ3ViZVRleHR1cmVQYXJzZXI9KGMsZSx0KT0+e3Rocm93ICQoIkN1YmVUZXh0dXJlIil9LE4uX0NyZWF0ZU1pcnJvcj0oYyxlLHQsaSk9Pnt0aHJvdyAkKCJNaXJyb3JUZXh0dXJlIil9LE4uX0NyZWF0ZVJlbmRlclRhcmdldFRleHR1cmU9KGMsZSx0LGkscyk9Pnt0aHJvdyAkKCJSZW5kZXJUYXJnZXRUZXh0dXJlIil9LE4uTkVBUkVTVF9TQU1QTElOR01PREU9MSxOLk5FQVJFU1RfTkVBUkVTVF9NSVBMSU5FQVI9OCxOLkJJTElORUFSX1NBTVBMSU5HTU9ERT0yLE4uTElORUFSX0xJTkVBUl9NSVBORUFSRVNUPTExLE4uVFJJTElORUFSX1NBTVBMSU5HTU9ERT0zLE4uTElORUFSX0xJTkVBUl9NSVBMSU5FQVI9MyxOLk5FQVJFU1RfTkVBUkVTVF9NSVBORUFSRVNUPTQsTi5ORUFSRVNUX0xJTkVBUl9NSVBORUFSRVNUPTUsTi5ORUFSRVNUX0xJTkVBUl9NSVBMSU5FQVI9NixOLk5FQVJFU1RfTElORUFSPTcsTi5ORUFSRVNUX05FQVJFU1Q9MSxOLkxJTkVBUl9ORUFSRVNUX01JUE5FQVJFU1Q9OSxOLkxJTkVBUl9ORUFSRVNUX01JUExJTkVBUj0xMCxOLkxJTkVBUl9MSU5FQVI9MixOLkxJTkVBUl9ORUFSRVNUPTEyLE4uRVhQTElDSVRfTU9ERT0wLE4uU1BIRVJJQ0FMX01PREU9MSxOLlBMQU5BUl9NT0RFPTIsTi5DVUJJQ19NT0RFPTMsTi5QUk9KRUNUSU9OX01PREU9NCxOLlNLWUJPWF9NT0RFPTUsTi5JTlZDVUJJQ19NT0RFPTYsTi5FUVVJUkVDVEFOR1VMQVJfTU9ERT03LE4uRklYRURfRVFVSVJFQ1RBTkdVTEFSX01PREU9OCxOLkZJWEVEX0VRVUlSRUNUQU5HVUxBUl9NSVJST1JFRF9NT0RFPTksTi5DTEFNUF9BRERSRVNTTU9ERT0wLE4uV1JBUF9BRERSRVNTTU9ERT0xLE4uTUlSUk9SX0FERFJFU1NNT0RFPTIsTi5Vc2VTZXJpYWxpemVkVXJsSWZBbnk9ITEsVChbUigpXSxOLnByb3RvdHlwZSwidXJsIix2b2lkIDApLFQoW1IoKV0sTi5wcm90b3R5cGUsInVPZmZzZXQiLHZvaWQgMCksVChbUigpXSxOLnByb3RvdHlwZSwidk9mZnNldCIsdm9pZCAwKSxUKFtSKCldLE4ucHJvdG90eXBlLCJ1U2NhbGUiLHZvaWQgMCksVChbUigpXSxOLnByb3RvdHlwZSwidlNjYWxlIix2b2lkIDApLFQoW1IoKV0sTi5wcm90b3R5cGUsInVBbmciLHZvaWQgMCksVChbUigpXSxOLnByb3RvdHlwZSwidkFuZyIsdm9pZCAwKSxUKFtSKCldLE4ucHJvdG90eXBlLCJ3QW5nIix2b2lkIDApLFQoW1IoKV0sTi5wcm90b3R5cGUsInVSb3RhdGlvbkNlbnRlciIsdm9pZCAwKSxUKFtSKCldLE4ucHJvdG90eXBlLCJ2Um90YXRpb25DZW50ZXIiLHZvaWQgMCksVChbUigpXSxOLnByb3RvdHlwZSwid1JvdGF0aW9uQ2VudGVyIix2b2lkIDApLFQoW1IoKV0sTi5wcm90b3R5cGUsImhvbW9nZW5lb3VzUm90YXRpb25JblVWVHJhbnNmb3JtIix2b2lkIDApLFQoW1IoKV0sTi5wcm90b3R5cGUsImlzQmxvY2tpbmciLG51bGwpLGl0KCJCQUJZTE9OLlRleHR1cmUiLE4pLGFlLl9UZXh0dXJlUGFyc2VyPU4uUGFyc2U7Y2xhc3MgJG57Y29uc3RydWN0b3IoZSx0LGkscyl7dGhpcy5fdGV4dHVyZXM9bnVsbCx0aGlzLl9zYW1wbGVzPTEsdGhpcy5fYXR0YWNobWVudHM9bnVsbCx0aGlzLl9nZW5lcmF0ZVN0ZW5jaWxCdWZmZXI9ITEsdGhpcy5fZ2VuZXJhdGVEZXB0aEJ1ZmZlcj0hMSx0aGlzLl9kZXB0aFN0ZW5jaWxUZXh0dXJlV2l0aFN0ZW5jaWw9ITEsdGhpcy5faXNNdWx0aT1lLHRoaXMuX2lzQ3ViZT10LHRoaXMuX3NpemU9aSx0aGlzLl9lbmdpbmU9cyx0aGlzLl9kZXB0aFN0ZW5jaWxUZXh0dXJlPW51bGx9Z2V0IGRlcHRoU3RlbmNpbFRleHR1cmUoKXtyZXR1cm4gdGhpcy5fZGVwdGhTdGVuY2lsVGV4dHVyZX1nZXQgZGVwdGhTdGVuY2lsVGV4dHVyZVdpdGhTdGVuY2lsKCl7cmV0dXJuIHRoaXMuX2RlcHRoU3RlbmNpbFRleHR1cmVXaXRoU3RlbmNpbH1nZXQgaXNDdWJlKCl7cmV0dXJuIHRoaXMuX2lzQ3ViZX1nZXQgaXNNdWx0aSgpe3JldHVybiB0aGlzLl9pc011bHRpfWdldCBpczJEQXJyYXkoKXtyZXR1cm4gdGhpcy5sYXllcnM+MH1nZXQgc2l6ZSgpe3JldHVybiB0aGlzLndpZHRofWdldCB3aWR0aCgpe3JldHVybiB0aGlzLl9zaXplLndpZHRofHx0aGlzLl9zaXplfWdldCBoZWlnaHQoKXtyZXR1cm4gdGhpcy5fc2l6ZS5oZWlnaHR8fHRoaXMuX3NpemV9Z2V0IGxheWVycygpe3JldHVybiB0aGlzLl9zaXplLmxheWVyc3x8MH1nZXQgdGV4dHVyZSgpe3ZhciBlLHQ7cmV0dXJuKHQ9KGU9dGhpcy5fdGV4dHVyZXMpPT09bnVsbHx8ZT09PXZvaWQgMD92b2lkIDA6ZVswXSkhPT1udWxsJiZ0IT09dm9pZCAwP3Q6bnVsbH1nZXQgdGV4dHVyZXMoKXtyZXR1cm4gdGhpcy5fdGV4dHVyZXN9Z2V0IHNhbXBsZXMoKXtyZXR1cm4gdGhpcy5fc2FtcGxlc31zZXRTYW1wbGVzKGUsdD0hMCxpPSExKXtpZih0aGlzLnNhbXBsZXM9PT1lJiYhaSlyZXR1cm4gZTtjb25zdCBzPXRoaXMuX2lzTXVsdGk/dGhpcy5fZW5naW5lLnVwZGF0ZU11bHRpcGxlUmVuZGVyVGFyZ2V0VGV4dHVyZVNhbXBsZUNvdW50KHRoaXMsZSx0KTp0aGlzLl9lbmdpbmUudXBkYXRlUmVuZGVyVGFyZ2V0VGV4dHVyZVNhbXBsZUNvdW50KHRoaXMsZSk7cmV0dXJuIHRoaXMuX3NhbXBsZXM9ZSxzfXNldFRleHR1cmVzKGUpe0FycmF5LmlzQXJyYXkoZSk/dGhpcy5fdGV4dHVyZXM9ZTplP3RoaXMuX3RleHR1cmVzPVtlXTp0aGlzLl90ZXh0dXJlcz1udWxsfXNldFRleHR1cmUoZSx0PTAsaT0hMCl7dGhpcy5fdGV4dHVyZXN8fCh0aGlzLl90ZXh0dXJlcz1bXSksdGhpcy5fdGV4dHVyZXNbdF0mJmkmJnRoaXMuX3RleHR1cmVzW3RdLmRpc3Bvc2UoKSx0aGlzLl90ZXh0dXJlc1t0XT1lfWNyZWF0ZURlcHRoU3RlbmNpbFRleHR1cmUoZT0wLHQ9ITAsaT0hMSxzPTEscj0xNCl7dmFyIG47cmV0dXJuKG49dGhpcy5fZGVwdGhTdGVuY2lsVGV4dHVyZSk9PT1udWxsfHxuPT09dm9pZCAwfHxuLmRpc3Bvc2UoKSx0aGlzLl9kZXB0aFN0ZW5jaWxUZXh0dXJlV2l0aFN0ZW5jaWw9aSx0aGlzLl9kZXB0aFN0ZW5jaWxUZXh0dXJlPXRoaXMuX2VuZ2luZS5jcmVhdGVEZXB0aFN0ZW5jaWxUZXh0dXJlKHRoaXMuX3NpemUse2JpbGluZWFyRmlsdGVyaW5nOnQsY29tcGFyaXNvbkZ1bmN0aW9uOmUsZ2VuZXJhdGVTdGVuY2lsOmksaXNDdWJlOnRoaXMuX2lzQ3ViZSxzYW1wbGVzOnMsZGVwdGhUZXh0dXJlRm9ybWF0OnJ9LHRoaXMpLHRoaXMuX2RlcHRoU3RlbmNpbFRleHR1cmV9X3NoYXJlRGVwdGgoZSl7dGhpcy5fZGVwdGhTdGVuY2lsVGV4dHVyZSYmKGUuX2RlcHRoU3RlbmNpbFRleHR1cmUmJmUuX2RlcHRoU3RlbmNpbFRleHR1cmUuZGlzcG9zZSgpLGUuX2RlcHRoU3RlbmNpbFRleHR1cmU9dGhpcy5fZGVwdGhTdGVuY2lsVGV4dHVyZSx0aGlzLl9kZXB0aFN0ZW5jaWxUZXh0dXJlLmluY3JlbWVudFJlZmVyZW5jZXMoKSl9X3N3YXBBbmREaWUoZSl7dGhpcy50ZXh0dXJlJiZ0aGlzLnRleHR1cmUuX3N3YXBBbmREaWUoZSksdGhpcy5fdGV4dHVyZXM9bnVsbCx0aGlzLmRpc3Bvc2UoITApfV9jbG9uZVJlbmRlclRhcmdldFdyYXBwZXIoKXt2YXIgZSx0LGkscyxyLG47bGV0IGE9bnVsbDtpZih0aGlzLl9pc011bHRpKXtjb25zdCBvPXRoaXMudGV4dHVyZXM7aWYobyYmby5sZW5ndGg+MCl7bGV0IGg9ITEsbD1vLmxlbmd0aDtjb25zdCB1PW9bby5sZW5ndGgtMV0uX3NvdXJjZTsodT09PU5lLkRlcHRofHx1PT09TmUuRGVwdGhTdGVuY2lsKSYmKGg9ITAsbC0tKTtjb25zdCBkPVtdLGY9W107Zm9yKGxldCBtPTA7bTxsOysrbSl7Y29uc3Qgdj1vW21dO2QucHVzaCh2LnNhbXBsaW5nTW9kZSksZi5wdXNoKHYudHlwZSl9Y29uc3QgXz17c2FtcGxpbmdNb2RlczpkLGdlbmVyYXRlTWlwTWFwczpvWzBdLmdlbmVyYXRlTWlwTWFwcyxnZW5lcmF0ZURlcHRoQnVmZmVyOnRoaXMuX2dlbmVyYXRlRGVwdGhCdWZmZXIsZ2VuZXJhdGVTdGVuY2lsQnVmZmVyOnRoaXMuX2dlbmVyYXRlU3RlbmNpbEJ1ZmZlcixnZW5lcmF0ZURlcHRoVGV4dHVyZTpoLHR5cGVzOmYsdGV4dHVyZUNvdW50Omx9LEU9e3dpZHRoOnRoaXMud2lkdGgsaGVpZ2h0OnRoaXMuaGVpZ2h0fTthPXRoaXMuX2VuZ2luZS5jcmVhdGVNdWx0aXBsZVJlbmRlclRhcmdldChFLF8pfX1lbHNle2NvbnN0IG89e307aWYoby5nZW5lcmF0ZURlcHRoQnVmZmVyPXRoaXMuX2dlbmVyYXRlRGVwdGhCdWZmZXIsby5nZW5lcmF0ZU1pcE1hcHM9KHQ9KGU9dGhpcy50ZXh0dXJlKT09PW51bGx8fGU9PT12b2lkIDA/dm9pZCAwOmUuZ2VuZXJhdGVNaXBNYXBzKSE9PW51bGwmJnQhPT12b2lkIDA/dDohMSxvLmdlbmVyYXRlU3RlbmNpbEJ1ZmZlcj10aGlzLl9nZW5lcmF0ZVN0ZW5jaWxCdWZmZXIsby5zYW1wbGluZ01vZGU9KGk9dGhpcy50ZXh0dXJlKT09PW51bGx8fGk9PT12b2lkIDA/dm9pZCAwOmkuc2FtcGxpbmdNb2RlLG8udHlwZT0ocz10aGlzLnRleHR1cmUpPT09bnVsbHx8cz09PXZvaWQgMD92b2lkIDA6cy50eXBlLG8uZm9ybWF0PShyPXRoaXMudGV4dHVyZSk9PT1udWxsfHxyPT09dm9pZCAwP3ZvaWQgMDpyLmZvcm1hdCx0aGlzLmlzQ3ViZSlhPXRoaXMuX2VuZ2luZS5jcmVhdGVSZW5kZXJUYXJnZXRDdWJlVGV4dHVyZSh0aGlzLndpZHRoLG8pO2Vsc2V7Y29uc3QgaD17d2lkdGg6dGhpcy53aWR0aCxoZWlnaHQ6dGhpcy5oZWlnaHQsbGF5ZXJzOnRoaXMuaXMyREFycmF5PyhuPXRoaXMudGV4dHVyZSk9PT1udWxsfHxuPT09dm9pZCAwP3ZvaWQgMDpuLmRlcHRoOnZvaWQgMH07YT10aGlzLl9lbmdpbmUuY3JlYXRlUmVuZGVyVGFyZ2V0VGV4dHVyZShoLG8pfWEudGV4dHVyZS5pc1JlYWR5PSEwfXJldHVybiBhfV9zd2FwUmVuZGVyVGFyZ2V0V3JhcHBlcihlKXtpZih0aGlzLl90ZXh0dXJlcyYmZS5fdGV4dHVyZXMpZm9yKGxldCB0PTA7dDx0aGlzLl90ZXh0dXJlcy5sZW5ndGg7Kyt0KXRoaXMuX3RleHR1cmVzW3RdLl9zd2FwQW5kRGllKGUuX3RleHR1cmVzW3RdLCExKSxlLl90ZXh0dXJlc1t0XS5pc1JlYWR5PSEwO3RoaXMuX2RlcHRoU3RlbmNpbFRleHR1cmUmJmUuX2RlcHRoU3RlbmNpbFRleHR1cmUmJih0aGlzLl9kZXB0aFN0ZW5jaWxUZXh0dXJlLl9zd2FwQW5kRGllKGUuX2RlcHRoU3RlbmNpbFRleHR1cmUpLGUuX2RlcHRoU3RlbmNpbFRleHR1cmUuaXNSZWFkeT0hMCksdGhpcy5fdGV4dHVyZXM9bnVsbCx0aGlzLl9kZXB0aFN0ZW5jaWxUZXh0dXJlPW51bGx9X3JlYnVpbGQoKXtjb25zdCBlPXRoaXMuX2Nsb25lUmVuZGVyVGFyZ2V0V3JhcHBlcigpO2lmKGUpe2lmKHRoaXMuX2RlcHRoU3RlbmNpbFRleHR1cmUpe2NvbnN0IHQ9dGhpcy5fZGVwdGhTdGVuY2lsVGV4dHVyZS5zYW1wbGluZ01vZGUsaT10PT09Mnx8dD09PTN8fHQ9PT0xMTtlLmNyZWF0ZURlcHRoU3RlbmNpbFRleHR1cmUodGhpcy5fZGVwdGhTdGVuY2lsVGV4dHVyZS5fY29tcGFyaXNvbkZ1bmN0aW9uLGksdGhpcy5fZGVwdGhTdGVuY2lsVGV4dHVyZVdpdGhTdGVuY2lsLHRoaXMuX2RlcHRoU3RlbmNpbFRleHR1cmUuc2FtcGxlcyl9dGhpcy5zYW1wbGVzPjEmJmUuc2V0U2FtcGxlcyh0aGlzLnNhbXBsZXMpLGUuX3N3YXBSZW5kZXJUYXJnZXRXcmFwcGVyKHRoaXMpLGUuZGlzcG9zZSgpfX1yZWxlYXNlVGV4dHVyZXMoKXt2YXIgZSx0O2lmKHRoaXMuX3RleHR1cmVzKWZvcihsZXQgaT0wOyh0PWk8KChlPXRoaXMuX3RleHR1cmVzKT09PW51bGx8fGU9PT12b2lkIDA/dm9pZCAwOmUubGVuZ3RoKSkhPT1udWxsJiZ0IT09dm9pZCAwJiZ0OysraSl0aGlzLl90ZXh0dXJlc1tpXS5kaXNwb3NlKCk7dGhpcy5fdGV4dHVyZXM9bnVsbH1kaXNwb3NlKGU9ITEpe3ZhciB0O2V8fCgodD10aGlzLl9kZXB0aFN0ZW5jaWxUZXh0dXJlKT09PW51bGx8fHQ9PT12b2lkIDB8fHQuZGlzcG9zZSgpLHRoaXMuX2RlcHRoU3RlbmNpbFRleHR1cmU9bnVsbCx0aGlzLnJlbGVhc2VUZXh0dXJlcygpKSx0aGlzLl9lbmdpbmUuX3JlbGVhc2VSZW5kZXJUYXJnZXRXcmFwcGVyKHRoaXMpfX1jbGFzcyBRbiBleHRlbmRzICRue2NvbnN0cnVjdG9yKGUsdCxpLHMscil7c3VwZXIoZSx0LGkscyksdGhpcy5fZnJhbWVidWZmZXI9bnVsbCx0aGlzLl9kZXB0aFN0ZW5jaWxCdWZmZXI9bnVsbCx0aGlzLl9NU0FBRnJhbWVidWZmZXI9bnVsbCx0aGlzLl9jb2xvclRleHR1cmVBcnJheT1udWxsLHRoaXMuX2RlcHRoU3RlbmNpbFRleHR1cmVBcnJheT1udWxsLHRoaXMuX2NvbnRleHQ9cn1fY2xvbmVSZW5kZXJUYXJnZXRXcmFwcGVyKCl7bGV0IGU9bnVsbDtyZXR1cm4gdGhpcy5fY29sb3JUZXh0dXJlQXJyYXkmJnRoaXMuX2RlcHRoU3RlbmNpbFRleHR1cmVBcnJheT8oZT10aGlzLl9lbmdpbmUuY3JlYXRlTXVsdGl2aWV3UmVuZGVyVGFyZ2V0VGV4dHVyZSh0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KSxlLnRleHR1cmUuaXNSZWFkeT0hMCk6ZT1zdXBlci5fY2xvbmVSZW5kZXJUYXJnZXRXcmFwcGVyKCksZX1fc3dhcFJlbmRlclRhcmdldFdyYXBwZXIoZSl7c3VwZXIuX3N3YXBSZW5kZXJUYXJnZXRXcmFwcGVyKGUpLGUuX2ZyYW1lYnVmZmVyPXRoaXMuX2ZyYW1lYnVmZmVyLGUuX2RlcHRoU3RlbmNpbEJ1ZmZlcj10aGlzLl9kZXB0aFN0ZW5jaWxCdWZmZXIsZS5fTVNBQUZyYW1lYnVmZmVyPXRoaXMuX01TQUFGcmFtZWJ1ZmZlcixlLl9jb2xvclRleHR1cmVBcnJheT10aGlzLl9jb2xvclRleHR1cmVBcnJheSxlLl9kZXB0aFN0ZW5jaWxUZXh0dXJlQXJyYXk9dGhpcy5fZGVwdGhTdGVuY2lsVGV4dHVyZUFycmF5LHRoaXMuX2ZyYW1lYnVmZmVyPXRoaXMuX2RlcHRoU3RlbmNpbEJ1ZmZlcj10aGlzLl9NU0FBRnJhbWVidWZmZXI9dGhpcy5fY29sb3JUZXh0dXJlQXJyYXk9dGhpcy5fZGVwdGhTdGVuY2lsVGV4dHVyZUFycmF5PW51bGx9X3NoYXJlRGVwdGgoZSl7c3VwZXIuX3NoYXJlRGVwdGgoZSk7Y29uc3QgdD10aGlzLl9jb250ZXh0LGk9dGhpcy5fZGVwdGhTdGVuY2lsQnVmZmVyLHM9ZS5fTVNBQUZyYW1lYnVmZmVyfHxlLl9mcmFtZWJ1ZmZlcjtlLl9kZXB0aFN0ZW5jaWxCdWZmZXImJnQuZGVsZXRlUmVuZGVyYnVmZmVyKGUuX2RlcHRoU3RlbmNpbEJ1ZmZlciksZS5fZGVwdGhTdGVuY2lsQnVmZmVyPXRoaXMuX2RlcHRoU3RlbmNpbEJ1ZmZlcix0aGlzLl9lbmdpbmUuX2JpbmRVbmJvdW5kRnJhbWVidWZmZXIocyksdC5mcmFtZWJ1ZmZlclJlbmRlcmJ1ZmZlcih0LkZSQU1FQlVGRkVSLHQuREVQVEhfQVRUQUNITUVOVCx0LlJFTkRFUkJVRkZFUixpKSx0aGlzLl9lbmdpbmUuX2JpbmRVbmJvdW5kRnJhbWVidWZmZXIobnVsbCl9X2JpbmRUZXh0dXJlUmVuZGVyVGFyZ2V0KGUsdD0wLGk9LTEscz0wKXtpZighZS5faGFyZHdhcmVUZXh0dXJlKXJldHVybjtjb25zdCByPXRoaXMuX2NvbnRleHQsbj10aGlzLl9mcmFtZWJ1ZmZlcixhPXRoaXMuX2VuZ2luZS5fY3VycmVudEZyYW1lYnVmZmVyO3RoaXMuX2VuZ2luZS5fYmluZFVuYm91bmRGcmFtZWJ1ZmZlcihuKTtjb25zdCBvPXJbdGhpcy5fZW5naW5lLndlYkdMVmVyc2lvbj4xPyJDT0xPUl9BVFRBQ0hNRU5UIit0OiJDT0xPUl9BVFRBQ0hNRU5UIit0KyJfV0VCR0wiXSxoPWkhPT0tMT9yLlRFWFRVUkVfQ1VCRV9NQVBfUE9TSVRJVkVfWCtpOnIuVEVYVFVSRV8yRDtyLmZyYW1lYnVmZmVyVGV4dHVyZTJEKHIuRlJBTUVCVUZGRVIsbyxoLGUuX2hhcmR3YXJlVGV4dHVyZS51bmRlcmx5aW5nUmVzb3VyY2UscyksdGhpcy5fZW5naW5lLl9iaW5kVW5ib3VuZEZyYW1lYnVmZmVyKGEpfXNldFRleHR1cmUoZSx0PTAsaT0hMCl7c3VwZXIuc2V0VGV4dHVyZShlLHQsaSksdGhpcy5fYmluZFRleHR1cmVSZW5kZXJUYXJnZXQoZSx0KX1kaXNwb3NlKGU9ITEpe2NvbnN0IHQ9dGhpcy5fY29udGV4dDtlfHwodGhpcy5fY29sb3JUZXh0dXJlQXJyYXkmJih0aGlzLl9jb250ZXh0LmRlbGV0ZVRleHR1cmUodGhpcy5fY29sb3JUZXh0dXJlQXJyYXkpLHRoaXMuX2NvbG9yVGV4dHVyZUFycmF5PW51bGwpLHRoaXMuX2RlcHRoU3RlbmNpbFRleHR1cmVBcnJheSYmKHRoaXMuX2NvbnRleHQuZGVsZXRlVGV4dHVyZSh0aGlzLl9kZXB0aFN0ZW5jaWxUZXh0dXJlQXJyYXkpLHRoaXMuX2RlcHRoU3RlbmNpbFRleHR1cmVBcnJheT1udWxsKSksdGhpcy5fZnJhbWVidWZmZXImJih0LmRlbGV0ZUZyYW1lYnVmZmVyKHRoaXMuX2ZyYW1lYnVmZmVyKSx0aGlzLl9mcmFtZWJ1ZmZlcj1udWxsKSx0aGlzLl9kZXB0aFN0ZW5jaWxCdWZmZXImJih0LmRlbGV0ZVJlbmRlcmJ1ZmZlcih0aGlzLl9kZXB0aFN0ZW5jaWxCdWZmZXIpLHRoaXMuX2RlcHRoU3RlbmNpbEJ1ZmZlcj1udWxsKSx0aGlzLl9NU0FBRnJhbWVidWZmZXImJih0LmRlbGV0ZUZyYW1lYnVmZmVyKHRoaXMuX01TQUFGcmFtZWJ1ZmZlciksdGhpcy5fTVNBQUZyYW1lYnVmZmVyPW51bGwpLHN1cGVyLmRpc3Bvc2UoZSl9fW9lLnByb3RvdHlwZS5fY3JlYXRlSGFyZHdhcmVSZW5kZXJUYXJnZXRXcmFwcGVyPWZ1bmN0aW9uKGMsZSx0KXtjb25zdCBpPW5ldyBRbihjLGUsdCx0aGlzLHRoaXMuX2dsKTtyZXR1cm4gdGhpcy5fcmVuZGVyVGFyZ2V0V3JhcHBlckNhY2hlLnB1c2goaSksaX0sb2UucHJvdG90eXBlLmNyZWF0ZVJlbmRlclRhcmdldFRleHR1cmU9ZnVuY3Rpb24oYyxlKXt2YXIgdCxpO2NvbnN0IHM9dGhpcy5fY3JlYXRlSGFyZHdhcmVSZW5kZXJUYXJnZXRXcmFwcGVyKCExLCExLGMpO2xldCByPSEwLG49ITEsYT0hMSxvLGg9MTtlIT09dm9pZCAwJiZ0eXBlb2YgZT09Im9iamVjdCImJihyPSh0PWUuZ2VuZXJhdGVEZXB0aEJ1ZmZlcikhPT1udWxsJiZ0IT09dm9pZCAwP3Q6ITAsbj0hIWUuZ2VuZXJhdGVTdGVuY2lsQnVmZmVyLGE9ISFlLm5vQ29sb3JBdHRhY2htZW50LG89ZS5jb2xvckF0dGFjaG1lbnQsaD0oaT1lLnNhbXBsZXMpIT09bnVsbCYmaSE9PXZvaWQgMD9pOjEpO2NvbnN0IGw9b3x8KGE/bnVsbDp0aGlzLl9jcmVhdGVJbnRlcm5hbFRleHR1cmUoYyxlLCEwLE5lLlJlbmRlclRhcmdldCkpLHU9Yy53aWR0aHx8YyxkPWMuaGVpZ2h0fHxjLGY9dGhpcy5fY3VycmVudEZyYW1lYnVmZmVyLF89dGhpcy5fZ2wsRT1fLmNyZWF0ZUZyYW1lYnVmZmVyKCk7cmV0dXJuIHRoaXMuX2JpbmRVbmJvdW5kRnJhbWVidWZmZXIoRSkscy5fZGVwdGhTdGVuY2lsQnVmZmVyPXRoaXMuX3NldHVwRnJhbWVidWZmZXJEZXB0aEF0dGFjaG1lbnRzKG4scix1LGQpLGwmJiFsLmlzMkRBcnJheSYmXy5mcmFtZWJ1ZmZlclRleHR1cmUyRChfLkZSQU1FQlVGRkVSLF8uQ09MT1JfQVRUQUNITUVOVDAsXy5URVhUVVJFXzJELGwuX2hhcmR3YXJlVGV4dHVyZS51bmRlcmx5aW5nUmVzb3VyY2UsMCksdGhpcy5fYmluZFVuYm91bmRGcmFtZWJ1ZmZlcihmKSxzLl9mcmFtZWJ1ZmZlcj1FLHMuX2dlbmVyYXRlRGVwdGhCdWZmZXI9cixzLl9nZW5lcmF0ZVN0ZW5jaWxCdWZmZXI9bixzLnNldFRleHR1cmVzKGwpLHRoaXMudXBkYXRlUmVuZGVyVGFyZ2V0VGV4dHVyZVNhbXBsZUNvdW50KHMsaCksc30sb2UucHJvdG90eXBlLmNyZWF0ZURlcHRoU3RlbmNpbFRleHR1cmU9ZnVuY3Rpb24oYyxlLHQpe2lmKGUuaXNDdWJlKXtjb25zdCBpPWMud2lkdGh8fGM7cmV0dXJuIHRoaXMuX2NyZWF0ZURlcHRoU3RlbmNpbEN1YmVUZXh0dXJlKGksZSx0KX1lbHNlIHJldHVybiB0aGlzLl9jcmVhdGVEZXB0aFN0ZW5jaWxUZXh0dXJlKGMsZSx0KX0sb2UucHJvdG90eXBlLl9jcmVhdGVEZXB0aFN0ZW5jaWxUZXh0dXJlPWZ1bmN0aW9uKGMsZSx0KXtjb25zdCBpPXRoaXMuX2dsLHM9Yy5sYXllcnN8fDAscj1zIT09MD9pLlRFWFRVUkVfMkRfQVJSQVk6aS5URVhUVVJFXzJELG49bmV3IE90KHRoaXMsTmUuRGVwdGhTdGVuY2lsKTtpZighdGhpcy5fY2Fwcy5kZXB0aFRleHR1cmVFeHRlbnNpb24pcmV0dXJuIE8uRXJyb3IoIkRlcHRoIHRleHR1cmUgaXMgbm90IHN1cHBvcnRlZCBieSB5b3VyIGJyb3dzZXIgb3IgaGFyZHdhcmUuIiksbjtjb25zdCBhPXtiaWxpbmVhckZpbHRlcmluZzohMSxjb21wYXJpc29uRnVuY3Rpb246MCxnZW5lcmF0ZVN0ZW5jaWw6ITEsLi4uZX07aWYodGhpcy5fYmluZFRleHR1cmVEaXJlY3RseShyLG4sITApLHRoaXMuX3NldHVwRGVwdGhTdGVuY2lsVGV4dHVyZShuLGMsYS5nZW5lcmF0ZVN0ZW5jaWwsYS5jb21wYXJpc29uRnVuY3Rpb249PT0wPyExOmEuYmlsaW5lYXJGaWx0ZXJpbmcsYS5jb21wYXJpc29uRnVuY3Rpb24sYS5zYW1wbGVzKSxhLmRlcHRoVGV4dHVyZUZvcm1hdCE9PXZvaWQgMCl7aWYoYS5kZXB0aFRleHR1cmVGb3JtYXQhPT0xNSYmYS5kZXB0aFRleHR1cmVGb3JtYXQhPT0xNiYmYS5kZXB0aFRleHR1cmVGb3JtYXQhPT0xNyYmYS5kZXB0aFRleHR1cmVGb3JtYXQhPT0xMyYmYS5kZXB0aFRleHR1cmVGb3JtYXQhPT0xNCYmYS5kZXB0aFRleHR1cmVGb3JtYXQhPT0xOClyZXR1cm4gTy5FcnJvcigiRGVwdGggdGV4dHVyZSBmb3JtYXQgaXMgbm90IHN1cHBvcnRlZC4iKSxuO24uZm9ybWF0PWEuZGVwdGhUZXh0dXJlRm9ybWF0fWVsc2Ugbi5mb3JtYXQ9YS5nZW5lcmF0ZVN0ZW5jaWw/MTM6MTY7Y29uc3Qgbz1uLmZvcm1hdD09PTE3fHxuLmZvcm1hdD09PTEzfHxuLmZvcm1hdD09PTE4O3QuX2RlcHRoU3RlbmNpbFRleHR1cmU9bix0Ll9kZXB0aFN0ZW5jaWxUZXh0dXJlV2l0aFN0ZW5jaWw9bztsZXQgaD1pLlVOU0lHTkVEX0lOVDtuLmZvcm1hdD09PTE1P2g9aS5VTlNJR05FRF9TSE9SVDpuLmZvcm1hdD09PTE3fHxuLmZvcm1hdD09PTEzP2g9aS5VTlNJR05FRF9JTlRfMjRfODpuLmZvcm1hdD09PTE0P2g9aS5GTE9BVDpuLmZvcm1hdD09PTE4JiYoaD1pLkZMT0FUXzMyX1VOU0lHTkVEX0lOVF8yNF84X1JFVik7Y29uc3QgbD1vP2kuREVQVEhfU1RFTkNJTDppLkRFUFRIX0NPTVBPTkVOVDtsZXQgdT1sO3RoaXMud2ViR0xWZXJzaW9uPjEmJihuLmZvcm1hdD09PTE1P3U9aS5ERVBUSF9DT01QT05FTlQxNjpuLmZvcm1hdD09PTE2P3U9aS5ERVBUSF9DT01QT05FTlQyNDpuLmZvcm1hdD09PTE3fHxuLmZvcm1hdD09PTEzP3U9aS5ERVBUSDI0X1NURU5DSUw4Om4uZm9ybWF0PT09MTQ/dT1pLkRFUFRIX0NPTVBPTkVOVDMyRjpuLmZvcm1hdD09PTE4JiYodT1pLkRFUFRIMzJGX1NURU5DSUw4KSksbi5pczJEQXJyYXk/aS50ZXhJbWFnZTNEKHIsMCx1LG4ud2lkdGgsbi5oZWlnaHQscywwLGwsaCxudWxsKTppLnRleEltYWdlMkQociwwLHUsbi53aWR0aCxuLmhlaWdodCwwLGwsaCxudWxsKSx0aGlzLl9iaW5kVGV4dHVyZURpcmVjdGx5KHIsbnVsbCksdGhpcy5faW50ZXJuYWxUZXh0dXJlc0NhY2hlLnB1c2gobik7Y29uc3QgZD10O2lmKGQuX2RlcHRoU3RlbmNpbEJ1ZmZlcil7Y29uc3QgZj10aGlzLl9jdXJyZW50RnJhbWVidWZmZXI7dGhpcy5fYmluZFVuYm91bmRGcmFtZWJ1ZmZlcihkLl9mcmFtZWJ1ZmZlciksaS5mcmFtZWJ1ZmZlclJlbmRlcmJ1ZmZlcihpLkZSQU1FQlVGRkVSLGkuREVQVEhfU1RFTkNJTF9BVFRBQ0hNRU5ULGkuUkVOREVSQlVGRkVSLG51bGwpLGkuZnJhbWVidWZmZXJSZW5kZXJidWZmZXIoaS5GUkFNRUJVRkZFUixpLkRFUFRIX0FUVEFDSE1FTlQsaS5SRU5ERVJCVUZGRVIsbnVsbCksaS5mcmFtZWJ1ZmZlclJlbmRlcmJ1ZmZlcihpLkZSQU1FQlVGRkVSLGkuU1RFTkNJTF9BVFRBQ0hNRU5ULGkuUkVOREVSQlVGRkVSLG51bGwpLHRoaXMuX2JpbmRVbmJvdW5kRnJhbWVidWZmZXIoZiksaS5kZWxldGVSZW5kZXJidWZmZXIoZC5fZGVwdGhTdGVuY2lsQnVmZmVyKSxkLl9kZXB0aFN0ZW5jaWxCdWZmZXI9bnVsbH1yZXR1cm4gbn0sb2UucHJvdG90eXBlLnVwZGF0ZVJlbmRlclRhcmdldFRleHR1cmVTYW1wbGVDb3VudD1mdW5jdGlvbihjLGUpe2lmKHRoaXMud2ViR0xWZXJzaW9uPDJ8fCFjfHwhYy50ZXh0dXJlKXJldHVybiAxO2lmKGMuc2FtcGxlcz09PWUpcmV0dXJuIGU7Y29uc3QgdD10aGlzLl9nbDtlPU1hdGgubWluKGUsdGhpcy5nZXRDYXBzKCkubWF4TVNBQVNhbXBsZXMpLGMuX2RlcHRoU3RlbmNpbEJ1ZmZlciYmKHQuZGVsZXRlUmVuZGVyYnVmZmVyKGMuX2RlcHRoU3RlbmNpbEJ1ZmZlciksYy5fZGVwdGhTdGVuY2lsQnVmZmVyPW51bGwpLGMuX01TQUFGcmFtZWJ1ZmZlciYmKHQuZGVsZXRlRnJhbWVidWZmZXIoYy5fTVNBQUZyYW1lYnVmZmVyKSxjLl9NU0FBRnJhbWVidWZmZXI9bnVsbCk7Y29uc3QgaT1jLnRleHR1cmUuX2hhcmR3YXJlVGV4dHVyZTtpZihpLl9NU0FBUmVuZGVyQnVmZmVyJiYodC5kZWxldGVSZW5kZXJidWZmZXIoaS5fTVNBQVJlbmRlckJ1ZmZlciksaS5fTVNBQVJlbmRlckJ1ZmZlcj1udWxsKSxlPjEmJnQucmVuZGVyYnVmZmVyU3RvcmFnZU11bHRpc2FtcGxlKXtjb25zdCBzPXQuY3JlYXRlRnJhbWVidWZmZXIoKTtpZighcyl0aHJvdyBuZXcgRXJyb3IoIlVuYWJsZSB0byBjcmVhdGUgbXVsdGkgc2FtcGxlZCBmcmFtZWJ1ZmZlciIpO2MuX01TQUFGcmFtZWJ1ZmZlcj1zLHRoaXMuX2JpbmRVbmJvdW5kRnJhbWVidWZmZXIoYy5fTVNBQUZyYW1lYnVmZmVyKTtjb25zdCByPXRoaXMuX2NyZWF0ZVJlbmRlckJ1ZmZlcihjLnRleHR1cmUud2lkdGgsYy50ZXh0dXJlLmhlaWdodCxlLC0xLHRoaXMuX2dldFJHQkFNdWx0aVNhbXBsZUJ1ZmZlckZvcm1hdChjLnRleHR1cmUudHlwZSksdC5DT0xPUl9BVFRBQ0hNRU5UMCwhMSk7aWYoIXIpdGhyb3cgbmV3IEVycm9yKCJVbmFibGUgdG8gY3JlYXRlIG11bHRpIHNhbXBsZWQgZnJhbWVidWZmZXIiKTtpLl9NU0FBUmVuZGVyQnVmZmVyPXJ9ZWxzZSB0aGlzLl9iaW5kVW5ib3VuZEZyYW1lYnVmZmVyKGMuX2ZyYW1lYnVmZmVyKTtyZXR1cm4gYy50ZXh0dXJlLnNhbXBsZXM9ZSxjLl9zYW1wbGVzPWUsYy5fZGVwdGhTdGVuY2lsQnVmZmVyPXRoaXMuX3NldHVwRnJhbWVidWZmZXJEZXB0aEF0dGFjaG1lbnRzKGMuX2dlbmVyYXRlU3RlbmNpbEJ1ZmZlcixjLl9nZW5lcmF0ZURlcHRoQnVmZmVyLGMudGV4dHVyZS53aWR0aCxjLnRleHR1cmUuaGVpZ2h0LGUpLHRoaXMuX2JpbmRVbmJvdW5kRnJhbWVidWZmZXIobnVsbCksZX0sb2UucHJvdG90eXBlLmNyZWF0ZVJlbmRlclRhcmdldEN1YmVUZXh0dXJlPWZ1bmN0aW9uKGMsZSl7Y29uc3QgdD10aGlzLl9jcmVhdGVIYXJkd2FyZVJlbmRlclRhcmdldFdyYXBwZXIoITEsITAsYyksaT17Z2VuZXJhdGVNaXBNYXBzOiEwLGdlbmVyYXRlRGVwdGhCdWZmZXI6ITAsZ2VuZXJhdGVTdGVuY2lsQnVmZmVyOiExLHR5cGU6MCxzYW1wbGluZ01vZGU6Myxmb3JtYXQ6NSwuLi5lfTtpLmdlbmVyYXRlU3RlbmNpbEJ1ZmZlcj1pLmdlbmVyYXRlRGVwdGhCdWZmZXImJmkuZ2VuZXJhdGVTdGVuY2lsQnVmZmVyLChpLnR5cGU9PT0xJiYhdGhpcy5fY2Fwcy50ZXh0dXJlRmxvYXRMaW5lYXJGaWx0ZXJpbmd8fGkudHlwZT09PTImJiF0aGlzLl9jYXBzLnRleHR1cmVIYWxmRmxvYXRMaW5lYXJGaWx0ZXJpbmcpJiYoaS5zYW1wbGluZ01vZGU9MSk7Y29uc3Qgcz10aGlzLl9nbCxyPW5ldyBPdCh0aGlzLE5lLlJlbmRlclRhcmdldCk7dGhpcy5fYmluZFRleHR1cmVEaXJlY3RseShzLlRFWFRVUkVfQ1VCRV9NQVAsciwhMCk7Y29uc3Qgbj10aGlzLl9nZXRTYW1wbGluZ1BhcmFtZXRlcnMoaS5zYW1wbGluZ01vZGUsaS5nZW5lcmF0ZU1pcE1hcHMpO2kudHlwZT09PTEmJiF0aGlzLl9jYXBzLnRleHR1cmVGbG9hdCYmKGkudHlwZT0wLE8uV2FybigiRmxvYXQgdGV4dHVyZXMgYXJlIG5vdCBzdXBwb3J0ZWQuIEN1YmUgcmVuZGVyIHRhcmdldCBmb3JjZWQgdG8gVEVYVFVSRVRZUEVfVU5FU0lHTkVEX0JZVEUgdHlwZSIpKSxzLnRleFBhcmFtZXRlcmkocy5URVhUVVJFX0NVQkVfTUFQLHMuVEVYVFVSRV9NQUdfRklMVEVSLG4ubWFnKSxzLnRleFBhcmFtZXRlcmkocy5URVhUVVJFX0NVQkVfTUFQLHMuVEVYVFVSRV9NSU5fRklMVEVSLG4ubWluKSxzLnRleFBhcmFtZXRlcmkocy5URVhUVVJFX0NVQkVfTUFQLHMuVEVYVFVSRV9XUkFQX1Mscy5DTEFNUF9UT19FREdFKSxzLnRleFBhcmFtZXRlcmkocy5URVhUVVJFX0NVQkVfTUFQLHMuVEVYVFVSRV9XUkFQX1Qscy5DTEFNUF9UT19FREdFKTtmb3IobGV0IG89MDtvPDY7bysrKXMudGV4SW1hZ2UyRChzLlRFWFRVUkVfQ1VCRV9NQVBfUE9TSVRJVkVfWCtvLDAsdGhpcy5fZ2V0UkdCQUJ1ZmZlckludGVybmFsU2l6ZWRGb3JtYXQoaS50eXBlLGkuZm9ybWF0KSxjLGMsMCx0aGlzLl9nZXRJbnRlcm5hbEZvcm1hdChpLmZvcm1hdCksdGhpcy5fZ2V0V2ViR0xUZXh0dXJlVHlwZShpLnR5cGUpLG51bGwpO2NvbnN0IGE9cy5jcmVhdGVGcmFtZWJ1ZmZlcigpO3JldHVybiB0aGlzLl9iaW5kVW5ib3VuZEZyYW1lYnVmZmVyKGEpLHQuX2RlcHRoU3RlbmNpbEJ1ZmZlcj10aGlzLl9zZXR1cEZyYW1lYnVmZmVyRGVwdGhBdHRhY2htZW50cyhpLmdlbmVyYXRlU3RlbmNpbEJ1ZmZlcixpLmdlbmVyYXRlRGVwdGhCdWZmZXIsYyxjKSxpLmdlbmVyYXRlTWlwTWFwcyYmcy5nZW5lcmF0ZU1pcG1hcChzLlRFWFRVUkVfQ1VCRV9NQVApLHRoaXMuX2JpbmRUZXh0dXJlRGlyZWN0bHkocy5URVhUVVJFX0NVQkVfTUFQLG51bGwpLHRoaXMuX2JpbmRVbmJvdW5kRnJhbWVidWZmZXIobnVsbCksdC5fZnJhbWVidWZmZXI9YSx0Ll9nZW5lcmF0ZURlcHRoQnVmZmVyPWkuZ2VuZXJhdGVEZXB0aEJ1ZmZlcix0Ll9nZW5lcmF0ZVN0ZW5jaWxCdWZmZXI9aS5nZW5lcmF0ZVN0ZW5jaWxCdWZmZXIsci53aWR0aD1jLHIuaGVpZ2h0PWMsci5pc1JlYWR5PSEwLHIuaXNDdWJlPSEwLHIuc2FtcGxlcz0xLHIuZ2VuZXJhdGVNaXBNYXBzPWkuZ2VuZXJhdGVNaXBNYXBzLHIuc2FtcGxpbmdNb2RlPWkuc2FtcGxpbmdNb2RlLHIudHlwZT1pLnR5cGUsci5mb3JtYXQ9aS5mb3JtYXQsdGhpcy5faW50ZXJuYWxUZXh0dXJlc0NhY2hlLnB1c2gociksdC5zZXRUZXh0dXJlcyhyKSx0fTtjb25zdCBKbj0icG9zdHByb2Nlc3NWZXJ0ZXhTaGFkZXIiLGVhPWBhdHRyaWJ1dGUgdmVjMiBwb3NpdGlvbjsKdW5pZm9ybSB2ZWMyIHNjYWxlOwp2YXJ5aW5nIHZlYzIgdlVWOwpjb25zdCB2ZWMyIG1hZGQ9dmVjMigwLjUsMC41KTsKI2RlZmluZSBDVVNUT01fVkVSVEVYX0RFRklOSVRJT05TCnZvaWQgbWFpbih2b2lkKSB7CiNkZWZpbmUgQ1VTVE9NX1ZFUlRFWF9NQUlOX0JFR0lOCnZVVj0ocG9zaXRpb24qbWFkZCttYWRkKSpzY2FsZTsKZ2xfUG9zaXRpb249dmVjNChwb3NpdGlvbiwwLjAsMS4wKTsKI2RlZmluZSBDVVNUT01fVkVSVEVYX01BSU5fRU5ECn1gO1UuU2hhZGVyc1N0b3JlW0puXT1lYTtjb25zdCBXcz17cG9zaXRpb25zOlsxLDEsLTEsMSwtMSwtMSwxLC0xXSxpbmRpY2VzOlswLDEsMiwwLDIsM119O2NsYXNzIHRhe2NvbnN0cnVjdG9yKGUsdD1Xcyl7dmFyIGksczt0aGlzLl9mdWxsc2NyZWVuVmlld3BvcnQ9bmV3IEJpKDAsMCwxLDEpO2NvbnN0IHI9KGk9dC5wb3NpdGlvbnMpIT09bnVsbCYmaSE9PXZvaWQgMD9pOldzLnBvc2l0aW9ucyxuPShzPXQuaW5kaWNlcykhPT1udWxsJiZzIT09dm9pZCAwP3M6V3MuaW5kaWNlczt0aGlzLmVuZ2luZT1lLHRoaXMuX3ZlcnRleEJ1ZmZlcnM9e1tnLlBvc2l0aW9uS2luZF06bmV3IGcoZSxyLGcuUG9zaXRpb25LaW5kLCExLCExLDIpfSx0aGlzLl9pbmRleEJ1ZmZlcj1lLmNyZWF0ZUluZGV4QnVmZmVyKG4pLHRoaXMuX29uQ29udGV4dFJlc3RvcmVkT2JzZXJ2ZXI9ZS5vbkNvbnRleHRSZXN0b3JlZE9ic2VydmFibGUuYWRkKCgpPT57dGhpcy5faW5kZXhCdWZmZXI9ZS5jcmVhdGVJbmRleEJ1ZmZlcihuKTtmb3IoY29uc3QgYSBpbiB0aGlzLl92ZXJ0ZXhCdWZmZXJzKXRoaXMuX3ZlcnRleEJ1ZmZlcnNbYV0uX3JlYnVpbGQoKX0pfXNldFZpZXdwb3J0KGU9dGhpcy5fZnVsbHNjcmVlblZpZXdwb3J0KXt0aGlzLmVuZ2luZS5zZXRWaWV3cG9ydChlKX1iaW5kQnVmZmVycyhlKXt0aGlzLmVuZ2luZS5iaW5kQnVmZmVycyh0aGlzLl92ZXJ0ZXhCdWZmZXJzLHRoaXMuX2luZGV4QnVmZmVyLGUpfWFwcGx5RWZmZWN0V3JhcHBlcihlKXt0aGlzLmVuZ2luZS5zZXRTdGF0ZSghMCksdGhpcy5lbmdpbmUuZGVwdGhDdWxsaW5nU3RhdGUuZGVwdGhUZXN0PSExLHRoaXMuZW5naW5lLnN0ZW5jaWxTdGF0ZS5zdGVuY2lsVGVzdD0hMSx0aGlzLmVuZ2luZS5lbmFibGVFZmZlY3QoZS5fZHJhd1dyYXBwZXIpLHRoaXMuYmluZEJ1ZmZlcnMoZS5lZmZlY3QpLGUub25BcHBseU9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHt9KX1yZXN0b3JlU3RhdGVzKCl7dGhpcy5lbmdpbmUuZGVwdGhDdWxsaW5nU3RhdGUuZGVwdGhUZXN0PSEwLHRoaXMuZW5naW5lLnN0ZW5jaWxTdGF0ZS5zdGVuY2lsVGVzdD0hMH1kcmF3KCl7dGhpcy5lbmdpbmUuZHJhd0VsZW1lbnRzVHlwZSgwLDAsNil9X2lzUmVuZGVyVGFyZ2V0VGV4dHVyZShlKXtyZXR1cm4gZS5yZW5kZXJUYXJnZXQhPT12b2lkIDB9cmVuZGVyKGUsdD1udWxsKXtpZighZS5lZmZlY3QuaXNSZWFkeSgpKXJldHVybjt0aGlzLnNldFZpZXdwb3J0KCk7Y29uc3QgaT10PT09bnVsbD9udWxsOnRoaXMuX2lzUmVuZGVyVGFyZ2V0VGV4dHVyZSh0KT90LnJlbmRlclRhcmdldDp0O2kmJnRoaXMuZW5naW5lLmJpbmRGcmFtZWJ1ZmZlcihpKSx0aGlzLmFwcGx5RWZmZWN0V3JhcHBlcihlKSx0aGlzLmRyYXcoKSxpJiZ0aGlzLmVuZ2luZS51bkJpbmRGcmFtZWJ1ZmZlcihpKSx0aGlzLnJlc3RvcmVTdGF0ZXMoKX1kaXNwb3NlKCl7Y29uc3QgZT10aGlzLl92ZXJ0ZXhCdWZmZXJzW2cuUG9zaXRpb25LaW5kXTtlJiYoZS5kaXNwb3NlKCksZGVsZXRlIHRoaXMuX3ZlcnRleEJ1ZmZlcnNbZy5Qb3NpdGlvbktpbmRdKSx0aGlzLl9pbmRleEJ1ZmZlciYmdGhpcy5lbmdpbmUuX3JlbGVhc2VCdWZmZXIodGhpcy5faW5kZXhCdWZmZXIpLHRoaXMuX29uQ29udGV4dFJlc3RvcmVkT2JzZXJ2ZXImJih0aGlzLmVuZ2luZS5vbkNvbnRleHRSZXN0b3JlZE9ic2VydmFibGUucmVtb3ZlKHRoaXMuX29uQ29udGV4dFJlc3RvcmVkT2JzZXJ2ZXIpLHRoaXMuX29uQ29udGV4dFJlc3RvcmVkT2JzZXJ2ZXI9bnVsbCl9fWNsYXNzIGlhe2NvbnN0cnVjdG9yKGUpe3RoaXMub25BcHBseU9ic2VydmFibGU9bmV3IEY7bGV0IHQ7Y29uc3QgaT1lLnVuaWZvcm1OYW1lc3x8W107ZS52ZXJ0ZXhTaGFkZXI/dD17ZnJhZ21lbnRTb3VyY2U6ZS5mcmFnbWVudFNoYWRlcix2ZXJ0ZXhTb3VyY2U6ZS52ZXJ0ZXhTaGFkZXIsc3BlY3Rvck5hbWU6ZS5uYW1lfHwiZWZmZWN0V3JhcHBlciJ9OihpLnB1c2goInNjYWxlIiksdD17ZnJhZ21lbnRTb3VyY2U6ZS5mcmFnbWVudFNoYWRlcix2ZXJ0ZXg6InBvc3Rwcm9jZXNzIixzcGVjdG9yTmFtZTplLm5hbWV8fCJlZmZlY3RXcmFwcGVyIn0sdGhpcy5vbkFwcGx5T2JzZXJ2YWJsZS5hZGQoKCk9Pnt0aGlzLmVmZmVjdC5zZXRGbG9hdDIoInNjYWxlIiwxLDEpfSkpO2NvbnN0IHM9ZS5kZWZpbmVzP2UuZGVmaW5lcy5qb2luKGAKYCk6IiI7dGhpcy5fZHJhd1dyYXBwZXI9bmV3IG1pKGUuZW5naW5lKSxlLnVzZVNoYWRlclN0b3JlPyh0LmZyYWdtZW50PXQuZnJhZ21lbnRTb3VyY2UsdC52ZXJ0ZXh8fCh0LnZlcnRleD10LnZlcnRleFNvdXJjZSksZGVsZXRlIHQuZnJhZ21lbnRTb3VyY2UsZGVsZXRlIHQudmVydGV4U291cmNlLHRoaXMuZWZmZWN0PWUuZW5naW5lLmNyZWF0ZUVmZmVjdCh0LGUuYXR0cmlidXRlTmFtZXN8fFsicG9zaXRpb24iXSxpLGUuc2FtcGxlck5hbWVzLHMsdm9pZCAwLGUub25Db21waWxlZCx2b2lkIDAsdm9pZCAwLGUuc2hhZGVyTGFuZ3VhZ2UpKToodGhpcy5lZmZlY3Q9bmV3IFBlKHQsZS5hdHRyaWJ1dGVOYW1lc3x8WyJwb3NpdGlvbiJdLGksZS5zYW1wbGVyTmFtZXMsZS5lbmdpbmUscyx2b2lkIDAsZS5vbkNvbXBpbGVkLHZvaWQgMCx2b2lkIDAsdm9pZCAwLGUuc2hhZGVyTGFuZ3VhZ2UpLHRoaXMuX29uQ29udGV4dFJlc3RvcmVkT2JzZXJ2ZXI9ZS5lbmdpbmUub25Db250ZXh0UmVzdG9yZWRPYnNlcnZhYmxlLmFkZCgoKT0+e3RoaXMuZWZmZWN0Ll9waXBlbGluZUNvbnRleHQ9bnVsbCx0aGlzLmVmZmVjdC5fd2FzUHJldmlvdXNseVJlYWR5PSExLHRoaXMuZWZmZWN0Ll9wcmVwYXJlRWZmZWN0KCl9KSl9Z2V0IGVmZmVjdCgpe3JldHVybiB0aGlzLl9kcmF3V3JhcHBlci5lZmZlY3R9c2V0IGVmZmVjdChlKXt0aGlzLl9kcmF3V3JhcHBlci5lZmZlY3Q9ZX1kaXNwb3NlKCl7dGhpcy5fb25Db250ZXh0UmVzdG9yZWRPYnNlcnZlciYmKHRoaXMuZWZmZWN0LmdldEVuZ2luZSgpLm9uQ29udGV4dFJlc3RvcmVkT2JzZXJ2YWJsZS5yZW1vdmUodGhpcy5fb25Db250ZXh0UmVzdG9yZWRPYnNlcnZlciksdGhpcy5fb25Db250ZXh0UmVzdG9yZWRPYnNlcnZlcj1udWxsKSx0aGlzLmVmZmVjdC5kaXNwb3NlKCl9fWNvbnN0IHdyPSJwYXNzUGl4ZWxTaGFkZXIiLE9yPWB2YXJ5aW5nIHZlYzIgdlVWOwp1bmlmb3JtIHNhbXBsZXIyRCB0ZXh0dXJlU2FtcGxlcjsKI2RlZmluZSBDVVNUT01fRlJBR01FTlRfREVGSU5JVElPTlMKdm9pZCBtYWluKHZvaWQpIAp7CmdsX0ZyYWdDb2xvcj10ZXh0dXJlMkQodGV4dHVyZVNhbXBsZXIsdlVWKTsKfWA7VS5TaGFkZXJzU3RvcmVbd3JdPU9yO2NvbnN0IExyPXtuYW1lOndyLHNoYWRlcjpPcn07Y2xhc3MgdHR7c3RhdGljIF9DcmVhdGVEdW1wUmVuZGVyZXIoKXtpZighdHQuX0R1bXBUb29sc0VuZ2luZSl7Y29uc3QgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJjYW52YXMiKSx0PW5ldyBvZShlLCExLHtwcmVzZXJ2ZURyYXdpbmdCdWZmZXI6ITAsZGVwdGg6ITEsc3RlbmNpbDohMSxhbHBoYTohMCxwcmVtdWx0aXBsaWVkQWxwaGE6ITEsYW50aWFsaWFzOiExLGZhaWxJZk1ham9yUGVyZm9ybWFuY2VDYXZlYXQ6ITF9KTt0LmdldENhcHMoKS5wYXJhbGxlbFNoYWRlckNvbXBpbGU9dm9pZCAwO2NvbnN0IGk9bmV3IHRhKHQpLHM9bmV3IGlhKHtlbmdpbmU6dCxuYW1lOkxyLm5hbWUsZnJhZ21lbnRTaGFkZXI6THIuc2hhZGVyLHNhbXBsZXJOYW1lczpbInRleHR1cmVTYW1wbGVyIl19KTt0dC5fRHVtcFRvb2xzRW5naW5lPXtjYW52YXM6ZSxlbmdpbmU6dCxyZW5kZXJlcjppLHdyYXBwZXI6c319cmV0dXJuIHR0Ll9EdW1wVG9vbHNFbmdpbmV9c3RhdGljIGFzeW5jIER1bXBGcmFtZWJ1ZmZlcihlLHQsaSxzLHI9ImltYWdlL3BuZyIsbil7Y29uc3QgYT1hd2FpdCBpLnJlYWRQaXhlbHMoMCwwLGUsdCksbz1uZXcgVWludDhBcnJheShhLmJ1ZmZlcik7dHQuRHVtcERhdGEoZSx0LG8scyxyLG4sITApfXN0YXRpYyBEdW1wRGF0YUFzeW5jKGUsdCxpLHM9ImltYWdlL3BuZyIscixuPSExLGE9ITEsbyl7cmV0dXJuIG5ldyBQcm9taXNlKGg9Pnt0dC5EdW1wRGF0YShlLHQsaSxsPT5oKGwpLHMscixuLGEsbyl9KX1zdGF0aWMgRHVtcERhdGEoZSx0LGkscyxyPSJpbWFnZS9wbmciLG4sYT0hMSxvPSExLGgpe2NvbnN0IGw9dHQuX0NyZWF0ZUR1bXBSZW5kZXJlcigpO2lmKGwuZW5naW5lLnNldFNpemUoZSx0LCEwKSxpIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5KXtjb25zdCBkPW5ldyBVaW50OEFycmF5KGkubGVuZ3RoKTtsZXQgZj1pLmxlbmd0aDtmb3IoO2YtLTspe2NvbnN0IF89aVtmXTtkW2ZdPV88MD8wOl8+MT8xOk1hdGgucm91bmQoXyoyNTUpfWk9ZH1jb25zdCB1PWwuZW5naW5lLmNyZWF0ZVJhd1RleHR1cmUoaSxlLHQsNSwhMSwhYSwxKTtsLnJlbmRlcmVyLnNldFZpZXdwb3J0KCksbC5yZW5kZXJlci5hcHBseUVmZmVjdFdyYXBwZXIobC53cmFwcGVyKSxsLndyYXBwZXIuZWZmZWN0Ll9iaW5kVGV4dHVyZSgidGV4dHVyZVNhbXBsZXIiLHUpLGwucmVuZGVyZXIuZHJhdygpLG8/SC5Ub0Jsb2IobC5jYW52YXMsZD0+e2NvbnN0IGY9bmV3IEZpbGVSZWFkZXI7Zi5vbmxvYWQ9Xz0+e2NvbnN0IEU9Xy50YXJnZXQucmVzdWx0O3MmJnMoRSl9LGYucmVhZEFzQXJyYXlCdWZmZXIoZCl9LHIsaCk6SC5FbmNvZGVTY3JlZW5zaG90Q2FudmFzRGF0YShsLmNhbnZhcyxzLHIsbixoKSx1LmRpc3Bvc2UoKX1zdGF0aWMgRGlzcG9zZSgpe3R0Ll9EdW1wVG9vbHNFbmdpbmUmJih0dC5fRHVtcFRvb2xzRW5naW5lLndyYXBwZXIuZGlzcG9zZSgpLHR0Ll9EdW1wVG9vbHNFbmdpbmUucmVuZGVyZXIuZGlzcG9zZSgpLHR0Ll9EdW1wVG9vbHNFbmdpbmUuZW5naW5lLmRpc3Bvc2UoKSksdHQuX0R1bXBUb29sc0VuZ2luZT1udWxsfX0oKCk9PntILkR1bXBEYXRhPXR0LkR1bXBEYXRhLEguRHVtcERhdGFBc3luYz10dC5EdW1wRGF0YUFzeW5jLEguRHVtcEZyYW1lYnVmZmVyPXR0LkR1bXBGcmFtZWJ1ZmZlcn0pKCk7Y2xhc3MgX3QgZXh0ZW5kcyBOe2NvbnN0cnVjdG9yKGUsdCxpLHM9ITEscj0hMCxuPTAsYT0hMSxvPU4uVFJJTElORUFSX1NBTVBMSU5HTU9ERSxoPSEwLGw9ITEsdT0hMSxkPTUsZj0hMSxfLEUsbT0hMSx2PSExKXt2YXIgUyx5LEEsQyxiLE07bGV0IEw7aWYodHlwZW9mIHM9PSJvYmplY3QiKXtjb25zdCB3PXM7cz0hIXcuZ2VuZXJhdGVNaXBNYXBzLHI9KFM9dy5kb05vdENoYW5nZUFzcGVjdFJhdGlvKSE9PW51bGwmJlMhPT12b2lkIDA/UzohMCxuPSh5PXcudHlwZSkhPT1udWxsJiZ5IT09dm9pZCAwP3k6MCxhPSEhdy5pc0N1YmUsbz0oQT13LnNhbXBsaW5nTW9kZSkhPT1udWxsJiZBIT09dm9pZCAwP0E6Ti5UUklMSU5FQVJfU0FNUExJTkdNT0RFLGg9KEM9dy5nZW5lcmF0ZURlcHRoQnVmZmVyKSE9PW51bGwmJkMhPT12b2lkIDA/QzohMCxsPSEhdy5nZW5lcmF0ZVN0ZW5jaWxCdWZmZXIsdT0hIXcuaXNNdWx0aSxkPShiPXcuZm9ybWF0KSE9PW51bGwmJmIhPT12b2lkIDA/Yjo1LGY9ISF3LmRlbGF5QWxsb2NhdGlvbixfPXcuc2FtcGxlcyxFPXcuY3JlYXRpb25GbGFncyxtPSEhdy5ub0NvbG9yQXR0YWNobWVudCx2PSEhdy51c2VTUkdCQnVmZmVyLEw9dy5jb2xvckF0dGFjaG1lbnR9aWYoc3VwZXIobnVsbCxpLCFzLHZvaWQgMCxvLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCxkKSx0aGlzLl91bk9ic2VydmVSZW5kZXJMaXN0PW51bGwsdGhpcy5fcmVuZGVyTGlzdEhhc0NoYW5nZWQ9KHcsZGUpPT57dmFyIGNlO2NvbnN0IHNlPXRoaXMuX3JlbmRlckxpc3Q/dGhpcy5fcmVuZGVyTGlzdC5sZW5ndGg6MDsoZGU9PT0wJiZzZT4wfHxzZT09PTApJiYoKGNlPXRoaXMuZ2V0U2NlbmUoKSk9PT1udWxsfHxjZT09PXZvaWQgMHx8Y2UubWVzaGVzLmZvckVhY2godGU9Pnt0ZS5fbWFya1N1Yk1lc2hlc0FzTGlnaHREaXJ0eSgpfSkpfSx0aGlzLnJlbmRlclBhcnRpY2xlcz0hMCx0aGlzLnJlbmRlclNwcml0ZXM9ITEsdGhpcy5mb3JjZUxheWVyTWFza0NoZWNrPSExLHRoaXMuaWdub3JlQ2FtZXJhVmlld3BvcnQ9ITEsdGhpcy5vbkJlZm9yZUJpbmRPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25BZnRlclVuYmluZE9ic2VydmFibGU9bmV3IEYsdGhpcy5vbkJlZm9yZVJlbmRlck9ic2VydmFibGU9bmV3IEYsdGhpcy5vbkFmdGVyUmVuZGVyT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uQ2xlYXJPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25SZXNpemVPYnNlcnZhYmxlPW5ldyBGLHRoaXMuX2NsZWFyZWQ9ITEsdGhpcy5za2lwSW5pdGlhbENsZWFyPSExLHRoaXMuX2N1cnJlbnRSZWZyZXNoSWQ9LTEsdGhpcy5fcmVmcmVzaFJhdGU9MSx0aGlzLl9zYW1wbGVzPTEsdGhpcy5fY2FuUmVzY2FsZT0hMCx0aGlzLl9yZW5kZXJUYXJnZXQ9bnVsbCx0aGlzLmJvdW5kaW5nQm94UG9zaXRpb249cC5aZXJvKCksaT10aGlzLmdldFNjZW5lKCksIWkpcmV0dXJuO2NvbnN0IGs9dGhpcy5nZXRTY2VuZSgpLmdldEVuZ2luZSgpO3RoaXMuX2Nvb3JkaW5hdGVzTW9kZT1OLlBST0pFQ1RJT05fTU9ERSx0aGlzLnJlbmRlckxpc3Q9bmV3IEFycmF5LHRoaXMubmFtZT1lLHRoaXMuaXNSZW5kZXJUYXJnZXQ9ITAsdGhpcy5faW5pdGlhbFNpemVQYXJhbWV0ZXI9dCx0aGlzLl9yZW5kZXJQYXNzSWRzPVtdLHRoaXMuX2lzQ3ViZURhdGE9YSx0aGlzLl9wcm9jZXNzU2l6ZVBhcmFtZXRlcih0KSx0aGlzLnJlbmRlclBhc3NJZD10aGlzLl9yZW5kZXJQYXNzSWRzWzBdLHRoaXMuX3Jlc2l6ZU9ic2VydmVyPWsub25SZXNpemVPYnNlcnZhYmxlLmFkZCgoKT0+e30pLHRoaXMuX2dlbmVyYXRlTWlwTWFwcz0hIXMsdGhpcy5fZG9Ob3RDaGFuZ2VBc3BlY3RSYXRpbz1yLHRoaXMuX3JlbmRlcmluZ01hbmFnZXI9bmV3IFdlKGkpLHRoaXMuX3JlbmRlcmluZ01hbmFnZXIuX3VzZVNjZW5lQXV0b0NsZWFyU2V0dXA9ITAsIXUmJih0aGlzLl9yZW5kZXJUYXJnZXRPcHRpb25zPXtnZW5lcmF0ZU1pcE1hcHM6cyx0eXBlOm4sZm9ybWF0OihNPXRoaXMuX2Zvcm1hdCkhPT1udWxsJiZNIT09dm9pZCAwP006dm9pZCAwLHNhbXBsaW5nTW9kZTp0aGlzLnNhbXBsaW5nTW9kZSxnZW5lcmF0ZURlcHRoQnVmZmVyOmgsZ2VuZXJhdGVTdGVuY2lsQnVmZmVyOmwsc2FtcGxlczpfLGNyZWF0aW9uRmxhZ3M6RSxub0NvbG9yQXR0YWNobWVudDptLHVzZVNSR0JCdWZmZXI6dixjb2xvckF0dGFjaG1lbnQ6TH0sdGhpcy5zYW1wbGluZ01vZGU9PT1OLk5FQVJFU1RfU0FNUExJTkdNT0RFJiYodGhpcy53cmFwVT1OLkNMQU1QX0FERFJFU1NNT0RFLHRoaXMud3JhcFY9Ti5DTEFNUF9BRERSRVNTTU9ERSksZnx8KGE/KHRoaXMuX3JlbmRlclRhcmdldD1pLmdldEVuZ2luZSgpLmNyZWF0ZVJlbmRlclRhcmdldEN1YmVUZXh0dXJlKHRoaXMuZ2V0UmVuZGVyU2l6ZSgpLHRoaXMuX3JlbmRlclRhcmdldE9wdGlvbnMpLHRoaXMuY29vcmRpbmF0ZXNNb2RlPU4uSU5WQ1VCSUNfTU9ERSx0aGlzLl90ZXh0dXJlTWF0cml4PXguSWRlbnRpdHkoKSk6dGhpcy5fcmVuZGVyVGFyZ2V0PWkuZ2V0RW5naW5lKCkuY3JlYXRlUmVuZGVyVGFyZ2V0VGV4dHVyZSh0aGlzLl9zaXplLHRoaXMuX3JlbmRlclRhcmdldE9wdGlvbnMpLHRoaXMuX3RleHR1cmU9dGhpcy5fcmVuZGVyVGFyZ2V0LnRleHR1cmUsXyE9PXZvaWQgMCYmKHRoaXMuc2FtcGxlcz1fKSkpfWdldCByZW5kZXJMaXN0KCl7cmV0dXJuIHRoaXMuX3JlbmRlckxpc3R9c2V0IHJlbmRlckxpc3QoZSl7dGhpcy5fdW5PYnNlcnZlUmVuZGVyTGlzdCYmKHRoaXMuX3VuT2JzZXJ2ZVJlbmRlckxpc3QoKSx0aGlzLl91bk9ic2VydmVSZW5kZXJMaXN0PW51bGwpLGUmJih0aGlzLl91bk9ic2VydmVSZW5kZXJMaXN0PSRzKGUsdGhpcy5fcmVuZGVyTGlzdEhhc0NoYW5nZWQpKSx0aGlzLl9yZW5kZXJMaXN0PWV9Z2V0IHBvc3RQcm9jZXNzZXMoKXtyZXR1cm4gdGhpcy5fcG9zdFByb2Nlc3Nlc31nZXQgX3ByZVBhc3NFbmFibGVkKCl7cmV0dXJuISF0aGlzLl9wcmVQYXNzUmVuZGVyVGFyZ2V0JiZ0aGlzLl9wcmVQYXNzUmVuZGVyVGFyZ2V0LmVuYWJsZWR9c2V0IG9uQWZ0ZXJVbmJpbmQoZSl7dGhpcy5fb25BZnRlclVuYmluZE9ic2VydmVyJiZ0aGlzLm9uQWZ0ZXJVbmJpbmRPYnNlcnZhYmxlLnJlbW92ZSh0aGlzLl9vbkFmdGVyVW5iaW5kT2JzZXJ2ZXIpLHRoaXMuX29uQWZ0ZXJVbmJpbmRPYnNlcnZlcj10aGlzLm9uQWZ0ZXJVbmJpbmRPYnNlcnZhYmxlLmFkZChlKX1zZXQgb25CZWZvcmVSZW5kZXIoZSl7dGhpcy5fb25CZWZvcmVSZW5kZXJPYnNlcnZlciYmdGhpcy5vbkJlZm9yZVJlbmRlck9ic2VydmFibGUucmVtb3ZlKHRoaXMuX29uQmVmb3JlUmVuZGVyT2JzZXJ2ZXIpLHRoaXMuX29uQmVmb3JlUmVuZGVyT2JzZXJ2ZXI9dGhpcy5vbkJlZm9yZVJlbmRlck9ic2VydmFibGUuYWRkKGUpfXNldCBvbkFmdGVyUmVuZGVyKGUpe3RoaXMuX29uQWZ0ZXJSZW5kZXJPYnNlcnZlciYmdGhpcy5vbkFmdGVyUmVuZGVyT2JzZXJ2YWJsZS5yZW1vdmUodGhpcy5fb25BZnRlclJlbmRlck9ic2VydmVyKSx0aGlzLl9vbkFmdGVyUmVuZGVyT2JzZXJ2ZXI9dGhpcy5vbkFmdGVyUmVuZGVyT2JzZXJ2YWJsZS5hZGQoZSl9c2V0IG9uQ2xlYXIoZSl7dGhpcy5fb25DbGVhck9ic2VydmVyJiZ0aGlzLm9uQ2xlYXJPYnNlcnZhYmxlLnJlbW92ZSh0aGlzLl9vbkNsZWFyT2JzZXJ2ZXIpLHRoaXMuX29uQ2xlYXJPYnNlcnZlcj10aGlzLm9uQ2xlYXJPYnNlcnZhYmxlLmFkZChlKX1nZXQgcmVuZGVyUGFzc0lkcygpe3JldHVybiB0aGlzLl9yZW5kZXJQYXNzSWRzfWdldCBjdXJyZW50UmVmcmVzaElkKCl7cmV0dXJuIHRoaXMuX2N1cnJlbnRSZWZyZXNoSWR9c2V0TWF0ZXJpYWxGb3JSZW5kZXJpbmcoZSx0KXtsZXQgaTtBcnJheS5pc0FycmF5KGUpP2k9ZTppPVtlXTtmb3IobGV0IHM9MDtzPGkubGVuZ3RoOysrcylmb3IobGV0IHI9MDtyPHRoaXMuX3JlbmRlclBhc3NJZHMubGVuZ3RoOysrcilpW3NdLnNldE1hdGVyaWFsRm9yUmVuZGVyUGFzcyh0aGlzLl9yZW5kZXJQYXNzSWRzW3JdLHQhPT12b2lkIDA/QXJyYXkuaXNBcnJheSh0KT90W3JdOnQ6dm9pZCAwKX1nZXQgcmVuZGVyVGFyZ2V0T3B0aW9ucygpe3JldHVybiB0aGlzLl9yZW5kZXJUYXJnZXRPcHRpb25zfWdldCByZW5kZXJUYXJnZXQoKXtyZXR1cm4gdGhpcy5fcmVuZGVyVGFyZ2V0fV9vblJhdGlvUmVzY2FsZSgpe3RoaXMuX3NpemVSYXRpbyYmdGhpcy5yZXNpemUodGhpcy5faW5pdGlhbFNpemVQYXJhbWV0ZXIpfXNldCBib3VuZGluZ0JveFNpemUoZSl7aWYodGhpcy5fYm91bmRpbmdCb3hTaXplJiZ0aGlzLl9ib3VuZGluZ0JveFNpemUuZXF1YWxzKGUpKXJldHVybjt0aGlzLl9ib3VuZGluZ0JveFNpemU9ZTtjb25zdCB0PXRoaXMuZ2V0U2NlbmUoKTt0JiZ0Lm1hcmtBbGxNYXRlcmlhbHNBc0RpcnR5KDEpfWdldCBib3VuZGluZ0JveFNpemUoKXtyZXR1cm4gdGhpcy5fYm91bmRpbmdCb3hTaXplfWdldCBkZXB0aFN0ZW5jaWxUZXh0dXJlKCl7dmFyIGUsdDtyZXR1cm4odD0oZT10aGlzLl9yZW5kZXJUYXJnZXQpPT09bnVsbHx8ZT09PXZvaWQgMD92b2lkIDA6ZS5fZGVwdGhTdGVuY2lsVGV4dHVyZSkhPT1udWxsJiZ0IT09dm9pZCAwP3Q6bnVsbH1jcmVhdGVEZXB0aFN0ZW5jaWxUZXh0dXJlKGU9MCx0PSEwLGk9ITEscz0xLHI9MTQpe3ZhciBuOyhuPXRoaXMuX3JlbmRlclRhcmdldCk9PT1udWxsfHxuPT09dm9pZCAwfHxuLmNyZWF0ZURlcHRoU3RlbmNpbFRleHR1cmUoZSx0LGkscyxyKX1fcmVsZWFzZVJlbmRlclBhc3NJZCgpe2lmKHRoaXMuX3NjZW5lKXtjb25zdCBlPXRoaXMuX3NjZW5lLmdldEVuZ2luZSgpO2ZvcihsZXQgdD0wO3Q8dGhpcy5fcmVuZGVyUGFzc0lkcy5sZW5ndGg7Kyt0KWUucmVsZWFzZVJlbmRlclBhc3NJZCh0aGlzLl9yZW5kZXJQYXNzSWRzW3RdKX10aGlzLl9yZW5kZXJQYXNzSWRzPVtdfV9jcmVhdGVSZW5kZXJQYXNzSWQoKXt0aGlzLl9yZWxlYXNlUmVuZGVyUGFzc0lkKCk7Y29uc3QgZT10aGlzLl9zY2VuZS5nZXRFbmdpbmUoKSx0PXRoaXMuX2lzQ3ViZURhdGE/Njp0aGlzLmdldFJlbmRlckxheWVycygpfHwxO2ZvcihsZXQgaT0wO2k8dDsrK2kpdGhpcy5fcmVuZGVyUGFzc0lkc1tpXT1lLmNyZWF0ZVJlbmRlclBhc3NJZChgUmVuZGVyVGFyZ2V0VGV4dHVyZSAtICR7dGhpcy5uYW1lfSMke2l9YCl9X3Byb2Nlc3NTaXplUGFyYW1ldGVyKGUpe2lmKGUucmF0aW8pe3RoaXMuX3NpemVSYXRpbz1lLnJhdGlvO2NvbnN0IHQ9dGhpcy5fZ2V0RW5naW5lKCk7dGhpcy5fc2l6ZT17d2lkdGg6dGhpcy5fYmVzdFJlZmxlY3Rpb25SZW5kZXJUYXJnZXREaW1lbnNpb24odC5nZXRSZW5kZXJXaWR0aCgpLHRoaXMuX3NpemVSYXRpbyksaGVpZ2h0OnRoaXMuX2Jlc3RSZWZsZWN0aW9uUmVuZGVyVGFyZ2V0RGltZW5zaW9uKHQuZ2V0UmVuZGVySGVpZ2h0KCksdGhpcy5fc2l6ZVJhdGlvKX19ZWxzZSB0aGlzLl9zaXplPWU7dGhpcy5fY3JlYXRlUmVuZGVyUGFzc0lkKCl9Z2V0IHNhbXBsZXMoKXt2YXIgZSx0O3JldHVybih0PShlPXRoaXMuX3JlbmRlclRhcmdldCk9PT1udWxsfHxlPT09dm9pZCAwP3ZvaWQgMDplLnNhbXBsZXMpIT09bnVsbCYmdCE9PXZvaWQgMD90OnRoaXMuX3NhbXBsZXN9c2V0IHNhbXBsZXMoZSl7dGhpcy5fcmVuZGVyVGFyZ2V0JiYodGhpcy5fc2FtcGxlcz10aGlzLl9yZW5kZXJUYXJnZXQuc2V0U2FtcGxlcyhlKSl9cmVzZXRSZWZyZXNoQ291bnRlcigpe3RoaXMuX2N1cnJlbnRSZWZyZXNoSWQ9LTF9Z2V0IHJlZnJlc2hSYXRlKCl7cmV0dXJuIHRoaXMuX3JlZnJlc2hSYXRlfXNldCByZWZyZXNoUmF0ZShlKXt0aGlzLl9yZWZyZXNoUmF0ZT1lLHRoaXMucmVzZXRSZWZyZXNoQ291bnRlcigpfWFkZFBvc3RQcm9jZXNzKGUpe2lmKCF0aGlzLl9wb3N0UHJvY2Vzc01hbmFnZXIpe2NvbnN0IHQ9dGhpcy5nZXRTY2VuZSgpO2lmKCF0KXJldHVybjt0aGlzLl9wb3N0UHJvY2Vzc01hbmFnZXI9bmV3IFFpKHQpLHRoaXMuX3Bvc3RQcm9jZXNzZXM9bmV3IEFycmF5fXRoaXMuX3Bvc3RQcm9jZXNzZXMucHVzaChlKSx0aGlzLl9wb3N0UHJvY2Vzc2VzWzBdLmF1dG9DbGVhcj0hMX1jbGVhclBvc3RQcm9jZXNzZXMoZT0hMSl7aWYodGhpcy5fcG9zdFByb2Nlc3Nlcyl7aWYoZSlmb3IoY29uc3QgdCBvZiB0aGlzLl9wb3N0UHJvY2Vzc2VzKXQuZGlzcG9zZSgpO3RoaXMuX3Bvc3RQcm9jZXNzZXM9W119fXJlbW92ZVBvc3RQcm9jZXNzKGUpe2lmKCF0aGlzLl9wb3N0UHJvY2Vzc2VzKXJldHVybjtjb25zdCB0PXRoaXMuX3Bvc3RQcm9jZXNzZXMuaW5kZXhPZihlKTt0IT09LTEmJih0aGlzLl9wb3N0UHJvY2Vzc2VzLnNwbGljZSh0LDEpLHRoaXMuX3Bvc3RQcm9jZXNzZXMubGVuZ3RoPjAmJih0aGlzLl9wb3N0UHJvY2Vzc2VzWzBdLmF1dG9DbGVhcj0hMSkpfV9zaG91bGRSZW5kZXIoKXtyZXR1cm4gdGhpcy5fY3VycmVudFJlZnJlc2hJZD09PS0xPyh0aGlzLl9jdXJyZW50UmVmcmVzaElkPTEsITApOnRoaXMucmVmcmVzaFJhdGU9PT10aGlzLl9jdXJyZW50UmVmcmVzaElkPyh0aGlzLl9jdXJyZW50UmVmcmVzaElkPTEsITApOih0aGlzLl9jdXJyZW50UmVmcmVzaElkKyssITEpfWdldFJlbmRlclNpemUoKXtyZXR1cm4gdGhpcy5nZXRSZW5kZXJXaWR0aCgpfWdldFJlbmRlcldpZHRoKCl7cmV0dXJuIHRoaXMuX3NpemUud2lkdGg/dGhpcy5fc2l6ZS53aWR0aDp0aGlzLl9zaXplfWdldFJlbmRlckhlaWdodCgpe3JldHVybiB0aGlzLl9zaXplLndpZHRoP3RoaXMuX3NpemUuaGVpZ2h0OnRoaXMuX3NpemV9Z2V0UmVuZGVyTGF5ZXJzKCl7Y29uc3QgZT10aGlzLl9zaXplLmxheWVycztyZXR1cm4gZXx8MH1kaXNhYmxlUmVzY2FsaW5nKCl7dGhpcy5fY2FuUmVzY2FsZT0hMX1nZXQgY2FuUmVzY2FsZSgpe3JldHVybiB0aGlzLl9jYW5SZXNjYWxlfXNjYWxlKGUpe2NvbnN0IHQ9TWF0aC5tYXgoMSx0aGlzLmdldFJlbmRlclNpemUoKSplKTt0aGlzLnJlc2l6ZSh0KX1nZXRSZWZsZWN0aW9uVGV4dHVyZU1hdHJpeCgpe3JldHVybiB0aGlzLmlzQ3ViZT90aGlzLl90ZXh0dXJlTWF0cml4OnN1cGVyLmdldFJlZmxlY3Rpb25UZXh0dXJlTWF0cml4KCl9cmVzaXplKGUpe3ZhciB0O2NvbnN0IGk9dGhpcy5pc0N1YmU7KHQ9dGhpcy5fcmVuZGVyVGFyZ2V0KT09PW51bGx8fHQ9PT12b2lkIDB8fHQuZGlzcG9zZSgpLHRoaXMuX3JlbmRlclRhcmdldD1udWxsO2NvbnN0IHM9dGhpcy5nZXRTY2VuZSgpO3MmJih0aGlzLl9wcm9jZXNzU2l6ZVBhcmFtZXRlcihlKSxpP3RoaXMuX3JlbmRlclRhcmdldD1zLmdldEVuZ2luZSgpLmNyZWF0ZVJlbmRlclRhcmdldEN1YmVUZXh0dXJlKHRoaXMuZ2V0UmVuZGVyU2l6ZSgpLHRoaXMuX3JlbmRlclRhcmdldE9wdGlvbnMpOnRoaXMuX3JlbmRlclRhcmdldD1zLmdldEVuZ2luZSgpLmNyZWF0ZVJlbmRlclRhcmdldFRleHR1cmUodGhpcy5fc2l6ZSx0aGlzLl9yZW5kZXJUYXJnZXRPcHRpb25zKSx0aGlzLl90ZXh0dXJlPXRoaXMuX3JlbmRlclRhcmdldC50ZXh0dXJlLHRoaXMuX3JlbmRlclRhcmdldE9wdGlvbnMuc2FtcGxlcyE9PXZvaWQgMCYmKHRoaXMuc2FtcGxlcz10aGlzLl9yZW5kZXJUYXJnZXRPcHRpb25zLnNhbXBsZXMpLHRoaXMub25SZXNpemVPYnNlcnZhYmxlLmhhc09ic2VydmVycygpJiZ0aGlzLm9uUmVzaXplT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcykpfXJlbmRlcihlPSExLHQ9ITEpe3RoaXMuX3JlbmRlcihlLHQpfWlzUmVhZHlGb3JSZW5kZXJpbmcoKXtyZXR1cm4gdGhpcy5fcmVuZGVyKCExLCExLCEwKX1fcmVuZGVyKGU9ITEsdD0hMSxpPSExKXt2YXIgcztjb25zdCByPXRoaXMuZ2V0U2NlbmUoKTtpZighcilyZXR1cm4gaTtjb25zdCBuPXIuZ2V0RW5naW5lKCk7aWYodGhpcy51c2VDYW1lcmFQb3N0UHJvY2Vzc2VzIT09dm9pZCAwJiYoZT10aGlzLnVzZUNhbWVyYVBvc3RQcm9jZXNzZXMpLHRoaXMuX3dhaXRpbmdSZW5kZXJMaXN0KXt0aGlzLnJlbmRlckxpc3Q9W107Zm9yKGxldCB1PTA7dTx0aGlzLl93YWl0aW5nUmVuZGVyTGlzdC5sZW5ndGg7dSsrKXtjb25zdCBkPXRoaXMuX3dhaXRpbmdSZW5kZXJMaXN0W3VdLGY9ci5nZXRNZXNoQnlJZChkKTtmJiZ0aGlzLnJlbmRlckxpc3QucHVzaChmKX10aGlzLl93YWl0aW5nUmVuZGVyTGlzdD12b2lkIDB9aWYodGhpcy5yZW5kZXJMaXN0UHJlZGljYXRlKXt0aGlzLnJlbmRlckxpc3Q/dGhpcy5yZW5kZXJMaXN0Lmxlbmd0aD0wOnRoaXMucmVuZGVyTGlzdD1bXTtjb25zdCB1PXRoaXMuZ2V0U2NlbmUoKTtpZighdSlyZXR1cm4gaTtjb25zdCBkPXUubWVzaGVzO2ZvcihsZXQgZj0wO2Y8ZC5sZW5ndGg7ZisrKXtjb25zdCBfPWRbZl07dGhpcy5yZW5kZXJMaXN0UHJlZGljYXRlKF8pJiZ0aGlzLnJlbmRlckxpc3QucHVzaChfKX19Y29uc3QgYT1uLmN1cnJlbnRSZW5kZXJQYXNzSWQ7dGhpcy5vbkJlZm9yZUJpbmRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKTtjb25zdCBvPShzPXRoaXMuYWN0aXZlQ2FtZXJhKSE9PW51bGwmJnMhPT12b2lkIDA/czpyLmFjdGl2ZUNhbWVyYSxoPXIuYWN0aXZlQ2FtZXJhO28mJihvIT09ci5hY3RpdmVDYW1lcmEmJihyLnNldFRyYW5zZm9ybU1hdHJpeChvLmdldFZpZXdNYXRyaXgoKSxvLmdldFByb2plY3Rpb25NYXRyaXgoITApKSxyLmFjdGl2ZUNhbWVyYT1vKSxuLnNldFZpZXdwb3J0KG8udmlld3BvcnQsdGhpcy5nZXRSZW5kZXJXaWR0aCgpLHRoaXMuZ2V0UmVuZGVySGVpZ2h0KCkpKSx0aGlzLl9kZWZhdWx0UmVuZGVyTGlzdFByZXBhcmVkPSExO2xldCBsPWk7aWYoaSl7ci5nZXRWaWV3TWF0cml4KCl8fHIudXBkYXRlVHJhbnNmb3JtTWF0cml4KCk7Y29uc3QgdT10aGlzLmlzMkRBcnJheT90aGlzLmdldFJlbmRlckxheWVycygpOnRoaXMuaXNDdWJlPzY6MTtmb3IobGV0IGQ9MDtkPHUmJmw7ZCsrKXtsZXQgZj1udWxsO2NvbnN0IF89dGhpcy5yZW5kZXJMaXN0P3RoaXMucmVuZGVyTGlzdDpyLmdldEFjdGl2ZU1lc2hlcygpLmRhdGEsRT10aGlzLnJlbmRlckxpc3Q/dGhpcy5yZW5kZXJMaXN0Lmxlbmd0aDpyLmdldEFjdGl2ZU1lc2hlcygpLmxlbmd0aDtuLmN1cnJlbnRSZW5kZXJQYXNzSWQ9dGhpcy5fcmVuZGVyUGFzc0lkc1tkXSx0aGlzLm9uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoZCksdGhpcy5nZXRDdXN0b21SZW5kZXJMaXN0JiYoZj10aGlzLmdldEN1c3RvbVJlbmRlckxpc3QoZCxfLEUpKSxmfHwoZj1fKSx0aGlzLl9kb05vdENoYW5nZUFzcGVjdFJhdGlvfHxyLnVwZGF0ZVRyYW5zZm9ybU1hdHJpeCghMCk7Zm9yKGxldCBtPTA7bTxmLmxlbmd0aCYmbDsrK20pe2NvbnN0IHY9ZlttXTtpZighKCF2LmlzRW5hYmxlZCgpfHx2LmlzQmxvY2tlZHx8IXYuaXNWaXNpYmxlfHwhdi5zdWJNZXNoZXMpKXtpZih0aGlzLmN1c3RvbUlzUmVhZHlGdW5jdGlvbil7aWYoIXRoaXMuY3VzdG9tSXNSZWFkeUZ1bmN0aW9uKHYsdGhpcy5yZWZyZXNoUmF0ZSxpKSl7bD0hMTtjb250aW51ZX19ZWxzZSBpZighdi5pc1JlYWR5KCEwKSl7bD0hMTtjb250aW51ZX19fXRoaXMub25BZnRlclJlbmRlck9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKGQpLCh0aGlzLmlzMkRBcnJheXx8dGhpcy5pc0N1YmUpJiYoci5pbmNyZW1lbnRSZW5kZXJJZCgpLHIucmVzZXRDYWNoZWRNYXRlcmlhbCgpKX19ZWxzZSBpZih0aGlzLmlzMkRBcnJheSlmb3IobGV0IHU9MDt1PHRoaXMuZ2V0UmVuZGVyTGF5ZXJzKCk7dSsrKXRoaXMuX3JlbmRlclRvVGFyZ2V0KDAsZSx0LHUsbyksci5pbmNyZW1lbnRSZW5kZXJJZCgpLHIucmVzZXRDYWNoZWRNYXRlcmlhbCgpO2Vsc2UgaWYodGhpcy5pc0N1YmUpZm9yKGxldCB1PTA7dTw2O3UrKyl0aGlzLl9yZW5kZXJUb1RhcmdldCh1LGUsdCx2b2lkIDAsbyksci5pbmNyZW1lbnRSZW5kZXJJZCgpLHIucmVzZXRDYWNoZWRNYXRlcmlhbCgpO2Vsc2UgdGhpcy5fcmVuZGVyVG9UYXJnZXQoMCxlLHQsdm9pZCAwLG8pO3JldHVybiB0aGlzLm9uQWZ0ZXJVbmJpbmRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzKSxuLmN1cnJlbnRSZW5kZXJQYXNzSWQ9YSxoJiYoci5hY3RpdmVDYW1lcmE9aCwoci5nZXRFbmdpbmUoKS5zY2VuZXMubGVuZ3RoPjF8fHRoaXMuYWN0aXZlQ2FtZXJhJiZ0aGlzLmFjdGl2ZUNhbWVyYSE9PXIuYWN0aXZlQ2FtZXJhKSYmci5zZXRUcmFuc2Zvcm1NYXRyaXgoci5hY3RpdmVDYW1lcmEuZ2V0Vmlld01hdHJpeCgpLHIuYWN0aXZlQ2FtZXJhLmdldFByb2plY3Rpb25NYXRyaXgoITApKSxuLnNldFZpZXdwb3J0KHIuYWN0aXZlQ2FtZXJhLnZpZXdwb3J0KSksci5yZXNldENhY2hlZE1hdGVyaWFsKCksbH1fYmVzdFJlZmxlY3Rpb25SZW5kZXJUYXJnZXREaW1lbnNpb24oZSx0KXtjb25zdCBzPWUqdCxyPUkuTmVhcmVzdFBPVChzKzEyOCoxMjgvKDEyOCtzKSk7cmV0dXJuIE1hdGgubWluKEkuRmxvb3JQT1QoZSkscil9X3ByZXBhcmVSZW5kZXJpbmdNYW5hZ2VyKGUsdCxpLHMpe2NvbnN0IHI9dGhpcy5nZXRTY2VuZSgpO2lmKCFyKXJldHVybjt0aGlzLl9yZW5kZXJpbmdNYW5hZ2VyLnJlc2V0KCk7Y29uc3Qgbj1yLmdldFJlbmRlcklkKCk7Zm9yKGxldCBhPTA7YTx0O2ErKyl7Y29uc3Qgbz1lW2FdO2lmKG8mJiFvLmlzQmxvY2tlZCl7aWYodGhpcy5jdXN0b21Jc1JlYWR5RnVuY3Rpb24pe2lmKCF0aGlzLmN1c3RvbUlzUmVhZHlGdW5jdGlvbihvLHRoaXMucmVmcmVzaFJhdGUsITEpKXt0aGlzLnJlc2V0UmVmcmVzaENvdW50ZXIoKTtjb250aW51ZX19ZWxzZSBpZighby5pc1JlYWR5KHRoaXMucmVmcmVzaFJhdGU9PT0wKSl7dGhpcy5yZXNldFJlZnJlc2hDb3VudGVyKCk7Y29udGludWV9aWYoIW8uX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2N1cnJlbnRMT0RJc1VwVG9EYXRlJiZyLmFjdGl2ZUNhbWVyYSYmKG8uX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2N1cnJlbnRMT0Q9ci5jdXN0b21MT0RTZWxlY3Rvcj9yLmN1c3RvbUxPRFNlbGVjdG9yKG8sdGhpcy5hY3RpdmVDYW1lcmF8fHIuYWN0aXZlQ2FtZXJhKTpvLmdldExPRCh0aGlzLmFjdGl2ZUNhbWVyYXx8ci5hY3RpdmVDYW1lcmEpLG8uX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2N1cnJlbnRMT0RJc1VwVG9EYXRlPSEwKSwhby5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fY3VycmVudExPRCljb250aW51ZTtsZXQgaD1vLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9jdXJyZW50TE9EO2guX3ByZUFjdGl2YXRlRm9ySW50ZXJtZWRpYXRlUmVuZGVyaW5nKG4pO2xldCBsO2lmKHMmJmk/bD0oby5sYXllck1hc2smaS5sYXllck1hc2spPT09MDpsPSExLG8uaXNFbmFibGVkKCkmJm8uaXNWaXNpYmxlJiZvLnN1Yk1lc2hlcyYmIWwmJihoIT09byYmaC5fYWN0aXZhdGUobiwhMCksby5fYWN0aXZhdGUobiwhMCkmJm8uc3ViTWVzaGVzLmxlbmd0aCkpe28uaXNBbkluc3RhbmNlP28uX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2FjdEFzUmVndWxhck1lc2gmJihoPW8pOmguX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX29ubHlGb3JJbnN0YW5jZXNJbnRlcm1lZGlhdGU9ITEsaC5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5faXNBY3RpdmVJbnRlcm1lZGlhdGU9ITA7Zm9yKGxldCB1PTA7dTxoLnN1Yk1lc2hlcy5sZW5ndGg7dSsrKXtjb25zdCBkPWguc3ViTWVzaGVzW3VdO3RoaXMuX3JlbmRlcmluZ01hbmFnZXIuZGlzcGF0Y2goZCxoKX19fX1mb3IobGV0IGE9MDthPHIucGFydGljbGVTeXN0ZW1zLmxlbmd0aDthKyspe2NvbnN0IG89ci5wYXJ0aWNsZVN5c3RlbXNbYV0saD1vLmVtaXR0ZXI7IW8uaXNTdGFydGVkKCl8fCFofHwhaC5wb3NpdGlvbnx8IWguaXNFbmFibGVkKCl8fGUuaW5kZXhPZihoKT49MCYmdGhpcy5fcmVuZGVyaW5nTWFuYWdlci5kaXNwYXRjaFBhcnRpY2xlcyhvKX19X2JpbmRGcmFtZUJ1ZmZlcihlPTAsdD0wKXtjb25zdCBpPXRoaXMuZ2V0U2NlbmUoKTtpZighaSlyZXR1cm47Y29uc3Qgcz1pLmdldEVuZ2luZSgpO3RoaXMuX3JlbmRlclRhcmdldCYmcy5iaW5kRnJhbWVidWZmZXIodGhpcy5fcmVuZGVyVGFyZ2V0LHRoaXMuaXNDdWJlP2U6dm9pZCAwLHZvaWQgMCx2b2lkIDAsdGhpcy5pZ25vcmVDYW1lcmFWaWV3cG9ydCwwLHQpfV91bmJpbmRGcmFtZUJ1ZmZlcihlLHQpe3RoaXMuX3JlbmRlclRhcmdldCYmZS51bkJpbmRGcmFtZWJ1ZmZlcih0aGlzLl9yZW5kZXJUYXJnZXQsdGhpcy5pc0N1YmUsKCk9Pnt0aGlzLm9uQWZ0ZXJSZW5kZXJPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0KX0pfV9wcmVwYXJlRnJhbWUoZSx0LGkscyl7dGhpcy5fcG9zdFByb2Nlc3NNYW5hZ2VyP3RoaXMuX3ByZVBhc3NFbmFibGVkfHx0aGlzLl9wb3N0UHJvY2Vzc01hbmFnZXIuX3ByZXBhcmVGcmFtZSh0aGlzLl90ZXh0dXJlLHRoaXMuX3Bvc3RQcm9jZXNzZXMpOighc3x8IWUucG9zdFByb2Nlc3NNYW5hZ2VyLl9wcmVwYXJlRnJhbWUodGhpcy5fdGV4dHVyZSkpJiZ0aGlzLl9iaW5kRnJhbWVCdWZmZXIodCxpKX1fcmVuZGVyVG9UYXJnZXQoZSx0LGkscz0wLHI9bnVsbCl7dmFyIG4sYSxvLGgsbCx1O2NvbnN0IGQ9dGhpcy5nZXRTY2VuZSgpO2lmKCFkKXJldHVybjtjb25zdCBmPWQuZ2V0RW5naW5lKCk7aWYoKG49Zi5fZGVidWdQdXNoR3JvdXApPT09bnVsbHx8bj09PXZvaWQgMHx8bi5jYWxsKGYsYHJlbmRlciB0byBmYWNlICMke2V9IGxheWVyICMke3N9YCwxKSx0aGlzLl9wcmVwYXJlRnJhbWUoZCxlLHMsdCksdGhpcy5pczJEQXJyYXk/KGYuY3VycmVudFJlbmRlclBhc3NJZD10aGlzLl9yZW5kZXJQYXNzSWRzW3NdLHRoaXMub25CZWZvcmVSZW5kZXJPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhzKSk6KGYuY3VycmVudFJlbmRlclBhc3NJZD10aGlzLl9yZW5kZXJQYXNzSWRzW2VdLHRoaXMub25CZWZvcmVSZW5kZXJPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhlKSksZi5zbmFwc2hvdFJlbmRlcmluZyYmZi5zbmFwc2hvdFJlbmRlcmluZ01vZGU9PT0xKXRoaXMub25DbGVhck9ic2VydmFibGUuaGFzT2JzZXJ2ZXJzKCk/dGhpcy5vbkNsZWFyT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoZik6dGhpcy5za2lwSW5pdGlhbENsZWFyfHxmLmNsZWFyKHRoaXMuY2xlYXJDb2xvcnx8ZC5jbGVhckNvbG9yLCEwLCEwLCEwKTtlbHNle2xldCBFPW51bGw7Y29uc3QgbT10aGlzLnJlbmRlckxpc3Q/dGhpcy5yZW5kZXJMaXN0OmQuZ2V0QWN0aXZlTWVzaGVzKCkuZGF0YSx2PXRoaXMucmVuZGVyTGlzdD90aGlzLnJlbmRlckxpc3QubGVuZ3RoOmQuZ2V0QWN0aXZlTWVzaGVzKCkubGVuZ3RoO3RoaXMuZ2V0Q3VzdG9tUmVuZGVyTGlzdCYmKEU9dGhpcy5nZXRDdXN0b21SZW5kZXJMaXN0KHRoaXMuaXMyREFycmF5P3M6ZSxtLHYpKSxFP3RoaXMuX3ByZXBhcmVSZW5kZXJpbmdNYW5hZ2VyKEUsRS5sZW5ndGgscix0aGlzLmZvcmNlTGF5ZXJNYXNrQ2hlY2spOih0aGlzLl9kZWZhdWx0UmVuZGVyTGlzdFByZXBhcmVkfHwodGhpcy5fcHJlcGFyZVJlbmRlcmluZ01hbmFnZXIobSx2LHIsIXRoaXMucmVuZGVyTGlzdHx8dGhpcy5mb3JjZUxheWVyTWFza0NoZWNrKSx0aGlzLl9kZWZhdWx0UmVuZGVyTGlzdFByZXBhcmVkPSEwKSxFPW0pO2Zvcihjb25zdCB5IG9mIGQuX2JlZm9yZVJlbmRlclRhcmdldENsZWFyU3RhZ2UpeS5hY3Rpb24odGhpcyxlLHMpO3RoaXMub25DbGVhck9ic2VydmFibGUuaGFzT2JzZXJ2ZXJzKCk/dGhpcy5vbkNsZWFyT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMoZik6dGhpcy5za2lwSW5pdGlhbENsZWFyfHxmLmNsZWFyKHRoaXMuY2xlYXJDb2xvcnx8ZC5jbGVhckNvbG9yLCEwLCEwLCEwKSx0aGlzLl9kb05vdENoYW5nZUFzcGVjdFJhdGlvfHxkLnVwZGF0ZVRyYW5zZm9ybU1hdHJpeCghMCk7Zm9yKGNvbnN0IHkgb2YgZC5fYmVmb3JlUmVuZGVyVGFyZ2V0RHJhd1N0YWdlKXkuYWN0aW9uKHRoaXMsZSxzKTt0aGlzLl9yZW5kZXJpbmdNYW5hZ2VyLnJlbmRlcih0aGlzLmN1c3RvbVJlbmRlckZ1bmN0aW9uLEUsdGhpcy5yZW5kZXJQYXJ0aWNsZXMsdGhpcy5yZW5kZXJTcHJpdGVzKTtmb3IoY29uc3QgeSBvZiBkLl9hZnRlclJlbmRlclRhcmdldERyYXdTdGFnZSl5LmFjdGlvbih0aGlzLGUscyk7Y29uc3QgUz0obz0oYT10aGlzLl90ZXh0dXJlKT09PW51bGx8fGE9PT12b2lkIDA/dm9pZCAwOmEuZ2VuZXJhdGVNaXBNYXBzKSE9PW51bGwmJm8hPT12b2lkIDA/bzohMTt0aGlzLl90ZXh0dXJlJiYodGhpcy5fdGV4dHVyZS5nZW5lcmF0ZU1pcE1hcHM9ITEpLHRoaXMuX3Bvc3RQcm9jZXNzTWFuYWdlcj90aGlzLl9wb3N0UHJvY2Vzc01hbmFnZXIuX2ZpbmFsaXplRnJhbWUoITEsKGg9dGhpcy5fcmVuZGVyVGFyZ2V0KSE9PW51bGwmJmghPT12b2lkIDA/aDp2b2lkIDAsZSx0aGlzLl9wb3N0UHJvY2Vzc2VzLHRoaXMuaWdub3JlQ2FtZXJhVmlld3BvcnQpOnQmJmQucG9zdFByb2Nlc3NNYW5hZ2VyLl9maW5hbGl6ZUZyYW1lKCExLChsPXRoaXMuX3JlbmRlclRhcmdldCkhPT1udWxsJiZsIT09dm9pZCAwP2w6dm9pZCAwLGUpO2Zvcihjb25zdCB5IG9mIGQuX2FmdGVyUmVuZGVyVGFyZ2V0UG9zdFByb2Nlc3NTdGFnZSl5LmFjdGlvbih0aGlzLGUscyk7dGhpcy5fdGV4dHVyZSYmKHRoaXMuX3RleHR1cmUuZ2VuZXJhdGVNaXBNYXBzPVMpLHRoaXMuX2RvTm90Q2hhbmdlQXNwZWN0UmF0aW98fGQudXBkYXRlVHJhbnNmb3JtTWF0cml4KCEwKSxpJiZ0dC5EdW1wRnJhbWVidWZmZXIodGhpcy5nZXRSZW5kZXJXaWR0aCgpLHRoaXMuZ2V0UmVuZGVySGVpZ2h0KCksZil9dGhpcy5fdW5iaW5kRnJhbWVCdWZmZXIoZixlKSx0aGlzLl90ZXh0dXJlJiZ0aGlzLmlzQ3ViZSYmZT09PTUmJmYuZ2VuZXJhdGVNaXBNYXBzRm9yQ3ViZW1hcCh0aGlzLl90ZXh0dXJlKSwodT1mLl9kZWJ1Z1BvcEdyb3VwKT09PW51bGx8fHU9PT12b2lkIDB8fHUuY2FsbChmLDEpfXNldFJlbmRlcmluZ09yZGVyKGUsdD1udWxsLGk9bnVsbCxzPW51bGwpe3RoaXMuX3JlbmRlcmluZ01hbmFnZXIuc2V0UmVuZGVyaW5nT3JkZXIoZSx0LGkscyl9c2V0UmVuZGVyaW5nQXV0b0NsZWFyRGVwdGhTdGVuY2lsKGUsdCl7dGhpcy5fcmVuZGVyaW5nTWFuYWdlci5zZXRSZW5kZXJpbmdBdXRvQ2xlYXJEZXB0aFN0ZW5jaWwoZSx0KSx0aGlzLl9yZW5kZXJpbmdNYW5hZ2VyLl91c2VTY2VuZUF1dG9DbGVhclNldHVwPSExfWNsb25lKCl7Y29uc3QgZT10aGlzLmdldFNpemUoKSx0PW5ldyBfdCh0aGlzLm5hbWUsZSx0aGlzLmdldFNjZW5lKCksdGhpcy5fcmVuZGVyVGFyZ2V0T3B0aW9ucy5nZW5lcmF0ZU1pcE1hcHMsdGhpcy5fZG9Ob3RDaGFuZ2VBc3BlY3RSYXRpbyx0aGlzLl9yZW5kZXJUYXJnZXRPcHRpb25zLnR5cGUsdGhpcy5pc0N1YmUsdGhpcy5fcmVuZGVyVGFyZ2V0T3B0aW9ucy5zYW1wbGluZ01vZGUsdGhpcy5fcmVuZGVyVGFyZ2V0T3B0aW9ucy5nZW5lcmF0ZURlcHRoQnVmZmVyLHRoaXMuX3JlbmRlclRhcmdldE9wdGlvbnMuZ2VuZXJhdGVTdGVuY2lsQnVmZmVyLHZvaWQgMCx0aGlzLl9yZW5kZXJUYXJnZXRPcHRpb25zLmZvcm1hdCx2b2lkIDAsdGhpcy5fcmVuZGVyVGFyZ2V0T3B0aW9ucy5zYW1wbGVzKTtyZXR1cm4gdC5oYXNBbHBoYT10aGlzLmhhc0FscGhhLHQubGV2ZWw9dGhpcy5sZXZlbCx0LmNvb3JkaW5hdGVzTW9kZT10aGlzLmNvb3JkaW5hdGVzTW9kZSx0aGlzLnJlbmRlckxpc3QmJih0LnJlbmRlckxpc3Q9dGhpcy5yZW5kZXJMaXN0LnNsaWNlKDApKSx0fXNlcmlhbGl6ZSgpe2lmKCF0aGlzLm5hbWUpcmV0dXJuIG51bGw7Y29uc3QgZT1zdXBlci5zZXJpYWxpemUoKTtpZihlLnJlbmRlclRhcmdldFNpemU9dGhpcy5nZXRSZW5kZXJTaXplKCksZS5yZW5kZXJMaXN0PVtdLHRoaXMucmVuZGVyTGlzdClmb3IobGV0IHQ9MDt0PHRoaXMucmVuZGVyTGlzdC5sZW5ndGg7dCsrKWUucmVuZGVyTGlzdC5wdXNoKHRoaXMucmVuZGVyTGlzdFt0XS5pZCk7cmV0dXJuIGV9ZGlzcG9zZUZyYW1lYnVmZmVyT2JqZWN0cygpe3ZhciBlOyhlPXRoaXMuX3JlbmRlclRhcmdldCk9PT1udWxsfHxlPT09dm9pZCAwfHxlLmRpc3Bvc2UoITApfXJlbGVhc2VJbnRlcm5hbFRleHR1cmUoKXt2YXIgZTsoZT10aGlzLl9yZW5kZXJUYXJnZXQpPT09bnVsbHx8ZT09PXZvaWQgMHx8ZS5yZWxlYXNlVGV4dHVyZXMoKSx0aGlzLl90ZXh0dXJlPW51bGx9ZGlzcG9zZSgpe3ZhciBlO3RoaXMub25SZXNpemVPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkNsZWFyT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25BZnRlclJlbmRlck9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uQWZ0ZXJVbmJpbmRPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkJlZm9yZUJpbmRPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkJlZm9yZVJlbmRlck9ic2VydmFibGUuY2xlYXIoKSx0aGlzLl9wb3N0UHJvY2Vzc01hbmFnZXImJih0aGlzLl9wb3N0UHJvY2Vzc01hbmFnZXIuZGlzcG9zZSgpLHRoaXMuX3Bvc3RQcm9jZXNzTWFuYWdlcj1udWxsKSx0aGlzLl9wcmVQYXNzUmVuZGVyVGFyZ2V0JiZ0aGlzLl9wcmVQYXNzUmVuZGVyVGFyZ2V0LmRpc3Bvc2UoKSx0aGlzLl9yZWxlYXNlUmVuZGVyUGFzc0lkKCksdGhpcy5jbGVhclBvc3RQcm9jZXNzZXMoITApLHRoaXMuX3Jlc2l6ZU9ic2VydmVyJiYodGhpcy5nZXRTY2VuZSgpLmdldEVuZ2luZSgpLm9uUmVzaXplT2JzZXJ2YWJsZS5yZW1vdmUodGhpcy5fcmVzaXplT2JzZXJ2ZXIpLHRoaXMuX3Jlc2l6ZU9ic2VydmVyPW51bGwpLHRoaXMucmVuZGVyTGlzdD1udWxsO2NvbnN0IHQ9dGhpcy5nZXRTY2VuZSgpO2lmKCF0KXJldHVybjtsZXQgaT10LmN1c3RvbVJlbmRlclRhcmdldHMuaW5kZXhPZih0aGlzKTtpPj0wJiZ0LmN1c3RvbVJlbmRlclRhcmdldHMuc3BsaWNlKGksMSk7Zm9yKGNvbnN0IHMgb2YgdC5jYW1lcmFzKWk9cy5jdXN0b21SZW5kZXJUYXJnZXRzLmluZGV4T2YodGhpcyksaT49MCYmcy5jdXN0b21SZW5kZXJUYXJnZXRzLnNwbGljZShpLDEpOyhlPXRoaXMuX3JlbmRlclRhcmdldCk9PT1udWxsfHxlPT09dm9pZCAwfHxlLmRpc3Bvc2UoKSx0aGlzLl9yZW5kZXJUYXJnZXQ9bnVsbCx0aGlzLl90ZXh0dXJlPW51bGwsc3VwZXIuZGlzcG9zZSgpfV9yZWJ1aWxkKCl7dGhpcy5yZWZyZXNoUmF0ZT09PV90LlJFRlJFU0hSQVRFX1JFTkRFUl9PTkNFJiYodGhpcy5yZWZyZXNoUmF0ZT1fdC5SRUZSRVNIUkFURV9SRU5ERVJfT05DRSksdGhpcy5fcG9zdFByb2Nlc3NNYW5hZ2VyJiZ0aGlzLl9wb3N0UHJvY2Vzc01hbmFnZXIuX3JlYnVpbGQoKX1mcmVlUmVuZGVyaW5nR3JvdXBzKCl7dGhpcy5fcmVuZGVyaW5nTWFuYWdlciYmdGhpcy5fcmVuZGVyaW5nTWFuYWdlci5mcmVlUmVuZGVyaW5nR3JvdXBzKCl9Z2V0Vmlld0NvdW50KCl7cmV0dXJuIDF9fV90LlJFRlJFU0hSQVRFX1JFTkRFUl9PTkNFPTAsX3QuUkVGUkVTSFJBVEVfUkVOREVSX09ORVZFUllGUkFNRT0xLF90LlJFRlJFU0hSQVRFX1JFTkRFUl9PTkVWRVJZVFdPRlJBTUVTPTIsTi5fQ3JlYXRlUmVuZGVyVGFyZ2V0VGV4dHVyZT0oYyxlLHQsaSxzKT0+bmV3IF90KGMsZSx0LGkpO2NsYXNzIE1le2NvbnN0cnVjdG9yKGUsdCxpLHMscixuLGE9MSxvLGgsbD1udWxsLHU9MCxkPSJwb3N0cHJvY2VzcyIsZixfPSExLEU9NSxtPVplLkdMU0wpe3RoaXMuX3BhcmVudENvbnRhaW5lcj1udWxsLHRoaXMud2lkdGg9LTEsdGhpcy5oZWlnaHQ9LTEsdGhpcy5ub2RlTWF0ZXJpYWxTb3VyY2U9bnVsbCx0aGlzLl9vdXRwdXRUZXh0dXJlPW51bGwsdGhpcy5hdXRvQ2xlYXI9ITAsdGhpcy5hbHBoYU1vZGU9MCx0aGlzLmFuaW1hdGlvbnM9bmV3IEFycmF5LHRoaXMuZW5hYmxlUGl4ZWxQZXJmZWN0TW9kZT0hMSx0aGlzLmZvcmNlRnVsbHNjcmVlblZpZXdwb3J0PSEwLHRoaXMuc2NhbGVNb2RlPTEsdGhpcy5hbHdheXNGb3JjZVBPVD0hMSx0aGlzLl9zYW1wbGVzPTEsdGhpcy5hZGFwdFNjYWxlVG9DdXJyZW50Vmlld3BvcnQ9ITEsdGhpcy5fcmV1c2FibGU9ITEsdGhpcy5fcmVuZGVySWQ9MCx0aGlzLmV4dGVybmFsVGV4dHVyZVNhbXBsZXJCaW5kaW5nPSExLHRoaXMuX3RleHR1cmVzPW5ldyAkZSgyKSx0aGlzLl90ZXh0dXJlQ2FjaGU9W10sdGhpcy5fY3VycmVudFJlbmRlclRleHR1cmVJbmQ9MCx0aGlzLl9zY2FsZVJhdGlvPW5ldyB2ZSgxLDEpLHRoaXMuX3RleGVsU2l6ZT12ZS5aZXJvKCksdGhpcy5vbkFjdGl2YXRlT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uU2l6ZUNoYW5nZWRPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25BcHBseU9ic2VydmFibGU9bmV3IEYsdGhpcy5vbkJlZm9yZVJlbmRlck9ic2VydmFibGU9bmV3IEYsdGhpcy5vbkFmdGVyUmVuZGVyT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm5hbWU9ZSxuIT1udWxsPyh0aGlzLl9jYW1lcmE9bix0aGlzLl9zY2VuZT1uLmdldFNjZW5lKCksbi5hdHRhY2hQb3N0UHJvY2Vzcyh0aGlzKSx0aGlzLl9lbmdpbmU9dGhpcy5fc2NlbmUuZ2V0RW5naW5lKCksdGhpcy5fc2NlbmUucG9zdFByb2Nlc3Nlcy5wdXNoKHRoaXMpLHRoaXMudW5pcXVlSWQ9dGhpcy5fc2NlbmUuZ2V0VW5pcXVlSWQoKSk6byYmKHRoaXMuX2VuZ2luZT1vLHRoaXMuX2VuZ2luZS5wb3N0UHJvY2Vzc2VzLnB1c2godGhpcykpLHRoaXMuX29wdGlvbnM9cix0aGlzLnJlbmRlclRhcmdldFNhbXBsaW5nTW9kZT1hfHwxLHRoaXMuX3JldXNhYmxlPWh8fCExLHRoaXMuX3RleHR1cmVUeXBlPXUsdGhpcy5fdGV4dHVyZUZvcm1hdD1FLHRoaXMuX3NoYWRlckxhbmd1YWdlPW0sdGhpcy5fc2FtcGxlcnM9c3x8W10sdGhpcy5fc2FtcGxlcnMucHVzaCgidGV4dHVyZVNhbXBsZXIiKSx0aGlzLl9mcmFnbWVudFVybD10LHRoaXMuX3ZlcnRleFVybD1kLHRoaXMuX3BhcmFtZXRlcnM9aXx8W10sdGhpcy5fcGFyYW1ldGVycy5wdXNoKCJzY2FsZSIpLHRoaXMuX2luZGV4UGFyYW1ldGVycz1mLHRoaXMuX2RyYXdXcmFwcGVyPW5ldyBtaSh0aGlzLl9lbmdpbmUpLF98fHRoaXMudXBkYXRlRWZmZWN0KGwpfXN0YXRpYyBSZWdpc3RlclNoYWRlckNvZGVQcm9jZXNzaW5nKGUsdCl7aWYoIXQpe2RlbGV0ZSBNZS5fQ3VzdG9tU2hhZGVyQ29kZVByb2Nlc3NpbmdbZT8/IiJdO3JldHVybn1NZS5fQ3VzdG9tU2hhZGVyQ29kZVByb2Nlc3NpbmdbZT8/IiJdPXR9c3RhdGljIF9HZXRTaGFkZXJDb2RlUHJvY2Vzc2luZyhlKXt2YXIgdDtyZXR1cm4odD1NZS5fQ3VzdG9tU2hhZGVyQ29kZVByb2Nlc3NpbmdbZV0pIT09bnVsbCYmdCE9PXZvaWQgMD90Ok1lLl9DdXN0b21TaGFkZXJDb2RlUHJvY2Vzc2luZ1siIl19Z2V0IHNhbXBsZXMoKXtyZXR1cm4gdGhpcy5fc2FtcGxlc31zZXQgc2FtcGxlcyhlKXt0aGlzLl9zYW1wbGVzPU1hdGgubWluKGUsdGhpcy5fZW5naW5lLmdldENhcHMoKS5tYXhNU0FBU2FtcGxlcyksdGhpcy5fdGV4dHVyZXMuZm9yRWFjaCh0PT57dC5zZXRTYW1wbGVzKHRoaXMuX3NhbXBsZXMpfSl9Z2V0RWZmZWN0TmFtZSgpe3JldHVybiB0aGlzLl9mcmFnbWVudFVybH1zZXQgb25BY3RpdmF0ZShlKXt0aGlzLl9vbkFjdGl2YXRlT2JzZXJ2ZXImJnRoaXMub25BY3RpdmF0ZU9ic2VydmFibGUucmVtb3ZlKHRoaXMuX29uQWN0aXZhdGVPYnNlcnZlciksZSYmKHRoaXMuX29uQWN0aXZhdGVPYnNlcnZlcj10aGlzLm9uQWN0aXZhdGVPYnNlcnZhYmxlLmFkZChlKSl9c2V0IG9uU2l6ZUNoYW5nZWQoZSl7dGhpcy5fb25TaXplQ2hhbmdlZE9ic2VydmVyJiZ0aGlzLm9uU2l6ZUNoYW5nZWRPYnNlcnZhYmxlLnJlbW92ZSh0aGlzLl9vblNpemVDaGFuZ2VkT2JzZXJ2ZXIpLHRoaXMuX29uU2l6ZUNoYW5nZWRPYnNlcnZlcj10aGlzLm9uU2l6ZUNoYW5nZWRPYnNlcnZhYmxlLmFkZChlKX1zZXQgb25BcHBseShlKXt0aGlzLl9vbkFwcGx5T2JzZXJ2ZXImJnRoaXMub25BcHBseU9ic2VydmFibGUucmVtb3ZlKHRoaXMuX29uQXBwbHlPYnNlcnZlciksdGhpcy5fb25BcHBseU9ic2VydmVyPXRoaXMub25BcHBseU9ic2VydmFibGUuYWRkKGUpfXNldCBvbkJlZm9yZVJlbmRlcihlKXt0aGlzLl9vbkJlZm9yZVJlbmRlck9ic2VydmVyJiZ0aGlzLm9uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZS5yZW1vdmUodGhpcy5fb25CZWZvcmVSZW5kZXJPYnNlcnZlciksdGhpcy5fb25CZWZvcmVSZW5kZXJPYnNlcnZlcj10aGlzLm9uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZS5hZGQoZSl9c2V0IG9uQWZ0ZXJSZW5kZXIoZSl7dGhpcy5fb25BZnRlclJlbmRlck9ic2VydmVyJiZ0aGlzLm9uQWZ0ZXJSZW5kZXJPYnNlcnZhYmxlLnJlbW92ZSh0aGlzLl9vbkFmdGVyUmVuZGVyT2JzZXJ2ZXIpLHRoaXMuX29uQWZ0ZXJSZW5kZXJPYnNlcnZlcj10aGlzLm9uQWZ0ZXJSZW5kZXJPYnNlcnZhYmxlLmFkZChlKX1nZXQgaW5wdXRUZXh0dXJlKCl7cmV0dXJuIHRoaXMuX3RleHR1cmVzLmRhdGFbdGhpcy5fY3VycmVudFJlbmRlclRleHR1cmVJbmRdfXNldCBpbnB1dFRleHR1cmUoZSl7dGhpcy5fZm9yY2VkT3V0cHV0VGV4dHVyZT1lfXJlc3RvcmVEZWZhdWx0SW5wdXRUZXh0dXJlKCl7dGhpcy5fZm9yY2VkT3V0cHV0VGV4dHVyZSYmKHRoaXMuX2ZvcmNlZE91dHB1dFRleHR1cmU9bnVsbCx0aGlzLm1hcmtUZXh0dXJlRGlydHkoKSl9Z2V0Q2FtZXJhKCl7cmV0dXJuIHRoaXMuX2NhbWVyYX1nZXQgdGV4ZWxTaXplKCl7cmV0dXJuIHRoaXMuX3NoYXJlT3V0cHV0V2l0aFBvc3RQcm9jZXNzP3RoaXMuX3NoYXJlT3V0cHV0V2l0aFBvc3RQcm9jZXNzLnRleGVsU2l6ZToodGhpcy5fZm9yY2VkT3V0cHV0VGV4dHVyZSYmdGhpcy5fdGV4ZWxTaXplLmNvcHlGcm9tRmxvYXRzKDEvdGhpcy5fZm9yY2VkT3V0cHV0VGV4dHVyZS53aWR0aCwxL3RoaXMuX2ZvcmNlZE91dHB1dFRleHR1cmUuaGVpZ2h0KSx0aGlzLl90ZXhlbFNpemUpfWdldENsYXNzTmFtZSgpe3JldHVybiJQb3N0UHJvY2VzcyJ9Z2V0RW5naW5lKCl7cmV0dXJuIHRoaXMuX2VuZ2luZX1nZXRFZmZlY3QoKXtyZXR1cm4gdGhpcy5fZHJhd1dyYXBwZXIuZWZmZWN0fXNoYXJlT3V0cHV0V2l0aChlKXtyZXR1cm4gdGhpcy5fZGlzcG9zZVRleHR1cmVzKCksdGhpcy5fc2hhcmVPdXRwdXRXaXRoUG9zdFByb2Nlc3M9ZSx0aGlzfXVzZU93bk91dHB1dCgpe3RoaXMuX3RleHR1cmVzLmxlbmd0aD09MCYmKHRoaXMuX3RleHR1cmVzPW5ldyAkZSgyKSksdGhpcy5fc2hhcmVPdXRwdXRXaXRoUG9zdFByb2Nlc3M9bnVsbH11cGRhdGVFZmZlY3QoZT1udWxsLHQ9bnVsbCxpPW51bGwscyxyLG4sYSxvKXt2YXIgaCxsO2NvbnN0IHU9TWUuX0dldFNoYWRlckNvZGVQcm9jZXNzaW5nKHRoaXMubmFtZSk7aWYodSE9bnVsbCYmdS5kZWZpbmVDdXN0b21CaW5kaW5ncyl7Y29uc3QgZD0oaD10PT1udWxsP3ZvaWQgMDp0LnNsaWNlKCkpIT09bnVsbCYmaCE9PXZvaWQgMD9oOltdO2QucHVzaCguLi50aGlzLl9wYXJhbWV0ZXJzKTtjb25zdCBmPShsPWk9PW51bGw/dm9pZCAwOmkuc2xpY2UoKSkhPT1udWxsJiZsIT09dm9pZCAwP2w6W107Zi5wdXNoKC4uLnRoaXMuX3NhbXBsZXJzKSxlPXUuZGVmaW5lQ3VzdG9tQmluZGluZ3ModGhpcy5uYW1lLGUsZCxmKSx0PWQsaT1mfXRoaXMuX3Bvc3RQcm9jZXNzRGVmaW5lcz1lLHRoaXMuX2RyYXdXcmFwcGVyLmVmZmVjdD10aGlzLl9lbmdpbmUuY3JlYXRlRWZmZWN0KHt2ZXJ0ZXg6YT8/dGhpcy5fdmVydGV4VXJsLGZyYWdtZW50Om8/P3RoaXMuX2ZyYWdtZW50VXJsfSx7YXR0cmlidXRlczpbInBvc2l0aW9uIl0sdW5pZm9ybXNOYW1lczp0fHx0aGlzLl9wYXJhbWV0ZXJzLHVuaWZvcm1CdWZmZXJzTmFtZXM6W10sc2FtcGxlcnM6aXx8dGhpcy5fc2FtcGxlcnMsZGVmaW5lczplIT09bnVsbD9lOiIiLGZhbGxiYWNrczpudWxsLG9uQ29tcGlsZWQ6cj8/bnVsbCxvbkVycm9yOm4/P251bGwsaW5kZXhQYXJhbWV0ZXJzOnN8fHRoaXMuX2luZGV4UGFyYW1ldGVycyxwcm9jZXNzQ29kZUFmdGVySW5jbHVkZXM6dSE9bnVsbCYmdS5wcm9jZXNzQ29kZUFmdGVySW5jbHVkZXM/KGQsZik9PnUucHJvY2Vzc0NvZGVBZnRlckluY2x1ZGVzKHRoaXMubmFtZSxkLGYpOm51bGwscHJvY2Vzc0ZpbmFsQ29kZTp1IT1udWxsJiZ1LnByb2Nlc3NGaW5hbENvZGU/KGQsZik9PnUucHJvY2Vzc0ZpbmFsQ29kZSh0aGlzLm5hbWUsZCxmKTpudWxsLHNoYWRlckxhbmd1YWdlOnRoaXMuX3NoYWRlckxhbmd1YWdlfSx0aGlzLl9lbmdpbmUpfWlzUmV1c2FibGUoKXtyZXR1cm4gdGhpcy5fcmV1c2FibGV9bWFya1RleHR1cmVEaXJ0eSgpe3RoaXMud2lkdGg9LTF9X2NyZWF0ZVJlbmRlclRhcmdldFRleHR1cmUoZSx0LGk9MCl7Zm9yKGxldCByPTA7cjx0aGlzLl90ZXh0dXJlQ2FjaGUubGVuZ3RoO3IrKylpZih0aGlzLl90ZXh0dXJlQ2FjaGVbcl0udGV4dHVyZS53aWR0aD09PWUud2lkdGgmJnRoaXMuX3RleHR1cmVDYWNoZVtyXS50ZXh0dXJlLmhlaWdodD09PWUuaGVpZ2h0JiZ0aGlzLl90ZXh0dXJlQ2FjaGVbcl0ucG9zdFByb2Nlc3NDaGFubmVsPT09aSYmdGhpcy5fdGV4dHVyZUNhY2hlW3JdLnRleHR1cmUuX2dlbmVyYXRlRGVwdGhCdWZmZXI9PT10LmdlbmVyYXRlRGVwdGhCdWZmZXImJnRoaXMuX3RleHR1cmVDYWNoZVtyXS50ZXh0dXJlLnNhbXBsZXM9PT10LnNhbXBsZXMpcmV0dXJuIHRoaXMuX3RleHR1cmVDYWNoZVtyXS50ZXh0dXJlO2NvbnN0IHM9dGhpcy5fZW5naW5lLmNyZWF0ZVJlbmRlclRhcmdldFRleHR1cmUoZSx0KTtyZXR1cm4gdGhpcy5fdGV4dHVyZUNhY2hlLnB1c2goe3RleHR1cmU6cyxwb3N0UHJvY2Vzc0NoYW5uZWw6aSxsYXN0VXNlZFJlbmRlcklkOi0xfSksc31fZmx1c2hUZXh0dXJlQ2FjaGUoKXtjb25zdCBlPXRoaXMuX3JlbmRlcklkO2ZvcihsZXQgdD10aGlzLl90ZXh0dXJlQ2FjaGUubGVuZ3RoLTE7dD49MDt0LS0paWYoZS10aGlzLl90ZXh0dXJlQ2FjaGVbdF0ubGFzdFVzZWRSZW5kZXJJZD4xMDApe2xldCBpPSExO2ZvcihsZXQgcz0wO3M8dGhpcy5fdGV4dHVyZXMubGVuZ3RoO3MrKylpZih0aGlzLl90ZXh0dXJlcy5kYXRhW3NdPT09dGhpcy5fdGV4dHVyZUNhY2hlW3RdLnRleHR1cmUpe2k9ITA7YnJlYWt9aXx8KHRoaXMuX3RleHR1cmVDYWNoZVt0XS50ZXh0dXJlLmRpc3Bvc2UoKSx0aGlzLl90ZXh0dXJlQ2FjaGUuc3BsaWNlKHQsMSkpfX1fcmVzaXplKGUsdCxpLHMscil7dGhpcy5fdGV4dHVyZXMubGVuZ3RoPjAmJnRoaXMuX3RleHR1cmVzLnJlc2V0KCksdGhpcy53aWR0aD1lLHRoaXMuaGVpZ2h0PXQ7bGV0IG49bnVsbDtmb3IobGV0IGg9MDtoPGkuX3Bvc3RQcm9jZXNzZXMubGVuZ3RoO2grKylpZihpLl9wb3N0UHJvY2Vzc2VzW2hdIT09bnVsbCl7bj1pLl9wb3N0UHJvY2Vzc2VzW2hdO2JyZWFrfWNvbnN0IGE9e3dpZHRoOnRoaXMud2lkdGgsaGVpZ2h0OnRoaXMuaGVpZ2h0fSxvPXtnZW5lcmF0ZU1pcE1hcHM6cyxnZW5lcmF0ZURlcHRoQnVmZmVyOnJ8fG49PT10aGlzLGdlbmVyYXRlU3RlbmNpbEJ1ZmZlcjoocnx8bj09PXRoaXMpJiZ0aGlzLl9lbmdpbmUuaXNTdGVuY2lsRW5hYmxlLHNhbXBsaW5nTW9kZTp0aGlzLnJlbmRlclRhcmdldFNhbXBsaW5nTW9kZSx0eXBlOnRoaXMuX3RleHR1cmVUeXBlLGZvcm1hdDp0aGlzLl90ZXh0dXJlRm9ybWF0LHNhbXBsZXM6dGhpcy5fc2FtcGxlc307dGhpcy5fdGV4dHVyZXMucHVzaCh0aGlzLl9jcmVhdGVSZW5kZXJUYXJnZXRUZXh0dXJlKGEsbywwKSksdGhpcy5fcmV1c2FibGUmJnRoaXMuX3RleHR1cmVzLnB1c2godGhpcy5fY3JlYXRlUmVuZGVyVGFyZ2V0VGV4dHVyZShhLG8sMSkpLHRoaXMuX3RleGVsU2l6ZS5jb3B5RnJvbUZsb2F0cygxL3RoaXMud2lkdGgsMS90aGlzLmhlaWdodCksdGhpcy5vblNpemVDaGFuZ2VkT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnModGhpcyl9YWN0aXZhdGUoZSx0PW51bGwsaSl7dmFyIHMscjtlPWV8fHRoaXMuX2NhbWVyYTtjb25zdCBuPWUuZ2V0U2NlbmUoKSxhPW4uZ2V0RW5naW5lKCksbz1hLmdldENhcHMoKS5tYXhUZXh0dXJlU2l6ZTtsZXQgaD0odD90LndpZHRoOnRoaXMuX2VuZ2luZS5nZXRSZW5kZXJXaWR0aCghMCkpKnRoaXMuX29wdGlvbnN8MDtjb25zdCBsPSh0P3QuaGVpZ2h0OnRoaXMuX2VuZ2luZS5nZXRSZW5kZXJIZWlnaHQoITApKSp0aGlzLl9vcHRpb25zfDAsdT1lLnBhcmVudDt1JiYodS5sZWZ0Q2FtZXJhPT1lfHx1LnJpZ2h0Q2FtZXJhPT1lKSYmKGgvPTIpO2xldCBkPXRoaXMuX29wdGlvbnMud2lkdGh8fGgsZj10aGlzLl9vcHRpb25zLmhlaWdodHx8bDtjb25zdCBfPXRoaXMucmVuZGVyVGFyZ2V0U2FtcGxpbmdNb2RlIT09NyYmdGhpcy5yZW5kZXJUYXJnZXRTYW1wbGluZ01vZGUhPT0xJiZ0aGlzLnJlbmRlclRhcmdldFNhbXBsaW5nTW9kZSE9PTI7aWYoIXRoaXMuX3NoYXJlT3V0cHV0V2l0aFBvc3RQcm9jZXNzJiYhdGhpcy5fZm9yY2VkT3V0cHV0VGV4dHVyZSl7aWYodGhpcy5hZGFwdFNjYWxlVG9DdXJyZW50Vmlld3BvcnQpe2NvbnN0IG09YS5jdXJyZW50Vmlld3BvcnQ7bSYmKGQqPW0ud2lkdGgsZio9bS5oZWlnaHQpfShffHx0aGlzLmFsd2F5c0ZvcmNlUE9UKSYmKHRoaXMuX29wdGlvbnMud2lkdGh8fChkPWEubmVlZFBPVFRleHR1cmVzP0kuR2V0RXhwb25lbnRPZlR3byhkLG8sdGhpcy5zY2FsZU1vZGUpOmQpLHRoaXMuX29wdGlvbnMuaGVpZ2h0fHwoZj1hLm5lZWRQT1RUZXh0dXJlcz9JLkdldEV4cG9uZW50T2ZUd28oZixvLHRoaXMuc2NhbGVNb2RlKTpmKSksKHRoaXMud2lkdGghPT1kfHx0aGlzLmhlaWdodCE9PWYpJiZ0aGlzLl9yZXNpemUoZCxmLGUsXyxpKSx0aGlzLl90ZXh0dXJlcy5mb3JFYWNoKG09PnttLnNhbXBsZXMhPT10aGlzLnNhbXBsZXMmJnRoaXMuX2VuZ2luZS51cGRhdGVSZW5kZXJUYXJnZXRUZXh0dXJlU2FtcGxlQ291bnQobSx0aGlzLnNhbXBsZXMpfSksdGhpcy5fZmx1c2hUZXh0dXJlQ2FjaGUoKSx0aGlzLl9yZW5kZXJJZCsrfWxldCBFO2lmKHRoaXMuX3NoYXJlT3V0cHV0V2l0aFBvc3RQcm9jZXNzKUU9dGhpcy5fc2hhcmVPdXRwdXRXaXRoUG9zdFByb2Nlc3MuaW5wdXRUZXh0dXJlO2Vsc2UgaWYodGhpcy5fZm9yY2VkT3V0cHV0VGV4dHVyZSlFPXRoaXMuX2ZvcmNlZE91dHB1dFRleHR1cmUsdGhpcy53aWR0aD10aGlzLl9mb3JjZWRPdXRwdXRUZXh0dXJlLndpZHRoLHRoaXMuaGVpZ2h0PXRoaXMuX2ZvcmNlZE91dHB1dFRleHR1cmUuaGVpZ2h0O2Vsc2V7RT10aGlzLmlucHV0VGV4dHVyZTtsZXQgbTtmb3IobGV0IHY9MDt2PHRoaXMuX3RleHR1cmVDYWNoZS5sZW5ndGg7disrKWlmKHRoaXMuX3RleHR1cmVDYWNoZVt2XS50ZXh0dXJlPT09RSl7bT10aGlzLl90ZXh0dXJlQ2FjaGVbdl07YnJlYWt9bSYmKG0ubGFzdFVzZWRSZW5kZXJJZD10aGlzLl9yZW5kZXJJZCl9cmV0dXJuIHRoaXMuZW5hYmxlUGl4ZWxQZXJmZWN0TW9kZT8odGhpcy5fc2NhbGVSYXRpby5jb3B5RnJvbUZsb2F0cyhoL2QsbC9mKSx0aGlzLl9lbmdpbmUuYmluZEZyYW1lYnVmZmVyKEUsMCxoLGwsdGhpcy5mb3JjZUZ1bGxzY3JlZW5WaWV3cG9ydCkpOih0aGlzLl9zY2FsZVJhdGlvLmNvcHlGcm9tRmxvYXRzKDEsMSksdGhpcy5fZW5naW5lLmJpbmRGcmFtZWJ1ZmZlcihFLDAsdm9pZCAwLHZvaWQgMCx0aGlzLmZvcmNlRnVsbHNjcmVlblZpZXdwb3J0KSksKHI9KHM9dGhpcy5fZW5naW5lKS5fZGVidWdJbnNlcnRNYXJrZXIpPT09bnVsbHx8cj09PXZvaWQgMHx8ci5jYWxsKHMsYHBvc3QgcHJvY2VzcyAke3RoaXMubmFtZX0gaW5wdXRgKSx0aGlzLm9uQWN0aXZhdGVPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhlKSx0aGlzLmF1dG9DbGVhciYmdGhpcy5hbHBoYU1vZGU9PT0wJiZ0aGlzLl9lbmdpbmUuY2xlYXIodGhpcy5jbGVhckNvbG9yP3RoaXMuY2xlYXJDb2xvcjpuLmNsZWFyQ29sb3Isbi5fYWxsb3dQb3N0UHJvY2Vzc0NsZWFyQ29sb3IsITAsITApLHRoaXMuX3JldXNhYmxlJiYodGhpcy5fY3VycmVudFJlbmRlclRleHR1cmVJbmQ9KHRoaXMuX2N1cnJlbnRSZW5kZXJUZXh0dXJlSW5kKzEpJTIpLEV9Z2V0IGlzU3VwcG9ydGVkKCl7cmV0dXJuIHRoaXMuX2RyYXdXcmFwcGVyLmVmZmVjdC5pc1N1cHBvcnRlZH1nZXQgYXNwZWN0UmF0aW8oKXtyZXR1cm4gdGhpcy5fc2hhcmVPdXRwdXRXaXRoUG9zdFByb2Nlc3M/dGhpcy5fc2hhcmVPdXRwdXRXaXRoUG9zdFByb2Nlc3MuYXNwZWN0UmF0aW86dGhpcy5fZm9yY2VkT3V0cHV0VGV4dHVyZT90aGlzLl9mb3JjZWRPdXRwdXRUZXh0dXJlLndpZHRoL3RoaXMuX2ZvcmNlZE91dHB1dFRleHR1cmUuaGVpZ2h0OnRoaXMud2lkdGgvdGhpcy5oZWlnaHR9aXNSZWFkeSgpe3ZhciBlLHQ7cmV0dXJuKHQ9KGU9dGhpcy5fZHJhd1dyYXBwZXIuZWZmZWN0KT09PW51bGx8fGU9PT12b2lkIDA/dm9pZCAwOmUuaXNSZWFkeSgpKSE9PW51bGwmJnQhPT12b2lkIDA/dDohMX1hcHBseSgpe3ZhciBlLHQsaTtpZighKCEoKGU9dGhpcy5fZHJhd1dyYXBwZXIuZWZmZWN0KT09PW51bGx8fGU9PT12b2lkIDApJiZlLmlzUmVhZHkoKSkpcmV0dXJuIG51bGw7dGhpcy5fZW5naW5lLmVuYWJsZUVmZmVjdCh0aGlzLl9kcmF3V3JhcHBlciksdGhpcy5fZW5naW5lLnNldFN0YXRlKCExKSx0aGlzLl9lbmdpbmUuc2V0RGVwdGhCdWZmZXIoITEpLHRoaXMuX2VuZ2luZS5zZXREZXB0aFdyaXRlKCExKSx0aGlzLl9lbmdpbmUuc2V0QWxwaGFNb2RlKHRoaXMuYWxwaGFNb2RlKSx0aGlzLmFscGhhQ29uc3RhbnRzJiZ0aGlzLmdldEVuZ2luZSgpLnNldEFscGhhQ29uc3RhbnRzKHRoaXMuYWxwaGFDb25zdGFudHMucix0aGlzLmFscGhhQ29uc3RhbnRzLmcsdGhpcy5hbHBoYUNvbnN0YW50cy5iLHRoaXMuYWxwaGFDb25zdGFudHMuYSk7bGV0IHM7cmV0dXJuIHRoaXMuX3NoYXJlT3V0cHV0V2l0aFBvc3RQcm9jZXNzP3M9dGhpcy5fc2hhcmVPdXRwdXRXaXRoUG9zdFByb2Nlc3MuaW5wdXRUZXh0dXJlOnRoaXMuX2ZvcmNlZE91dHB1dFRleHR1cmU/cz10aGlzLl9mb3JjZWRPdXRwdXRUZXh0dXJlOnM9dGhpcy5pbnB1dFRleHR1cmUsdGhpcy5leHRlcm5hbFRleHR1cmVTYW1wbGVyQmluZGluZ3x8dGhpcy5fZHJhd1dyYXBwZXIuZWZmZWN0Ll9iaW5kVGV4dHVyZSgidGV4dHVyZVNhbXBsZXIiLHM9PW51bGw/dm9pZCAwOnMudGV4dHVyZSksdGhpcy5fZHJhd1dyYXBwZXIuZWZmZWN0LnNldFZlY3RvcjIoInNjYWxlIix0aGlzLl9zY2FsZVJhdGlvKSx0aGlzLm9uQXBwbHlPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyh0aGlzLl9kcmF3V3JhcHBlci5lZmZlY3QpLChpPSh0PU1lLl9HZXRTaGFkZXJDb2RlUHJvY2Vzc2luZyh0aGlzLm5hbWUpKT09PW51bGx8fHQ9PT12b2lkIDA/dm9pZCAwOnQuYmluZEN1c3RvbUJpbmRpbmdzKT09PW51bGx8fGk9PT12b2lkIDB8fGkuY2FsbCh0LHRoaXMubmFtZSx0aGlzLl9kcmF3V3JhcHBlci5lZmZlY3QpLHRoaXMuX2RyYXdXcmFwcGVyLmVmZmVjdH1fZGlzcG9zZVRleHR1cmVzKCl7aWYodGhpcy5fc2hhcmVPdXRwdXRXaXRoUG9zdFByb2Nlc3N8fHRoaXMuX2ZvcmNlZE91dHB1dFRleHR1cmUpe3RoaXMuX2Rpc3Bvc2VUZXh0dXJlQ2FjaGUoKTtyZXR1cm59dGhpcy5fZGlzcG9zZVRleHR1cmVDYWNoZSgpLHRoaXMuX3RleHR1cmVzLmRpc3Bvc2UoKX1fZGlzcG9zZVRleHR1cmVDYWNoZSgpe2ZvcihsZXQgZT10aGlzLl90ZXh0dXJlQ2FjaGUubGVuZ3RoLTE7ZT49MDtlLS0pdGhpcy5fdGV4dHVyZUNhY2hlW2VdLnRleHR1cmUuZGlzcG9zZSgpO3RoaXMuX3RleHR1cmVDYWNoZS5sZW5ndGg9MH1zZXRQcmVQYXNzUmVuZGVyZXIoZSl7cmV0dXJuIHRoaXMuX3ByZVBhc3NFZmZlY3RDb25maWd1cmF0aW9uPyh0aGlzLl9wcmVQYXNzRWZmZWN0Q29uZmlndXJhdGlvbj1lLmFkZEVmZmVjdENvbmZpZ3VyYXRpb24odGhpcy5fcHJlUGFzc0VmZmVjdENvbmZpZ3VyYXRpb24pLHRoaXMuX3ByZVBhc3NFZmZlY3RDb25maWd1cmF0aW9uLmVuYWJsZWQ9ITAsITApOiExfWRpc3Bvc2UoZSl7ZT1lfHx0aGlzLl9jYW1lcmEsdGhpcy5fZGlzcG9zZVRleHR1cmVzKCk7bGV0IHQ7aWYodGhpcy5fc2NlbmUmJih0PXRoaXMuX3NjZW5lLnBvc3RQcm9jZXNzZXMuaW5kZXhPZih0aGlzKSx0IT09LTEmJnRoaXMuX3NjZW5lLnBvc3RQcm9jZXNzZXMuc3BsaWNlKHQsMSkpLHRoaXMuX3BhcmVudENvbnRhaW5lcil7Y29uc3QgaT10aGlzLl9wYXJlbnRDb250YWluZXIucG9zdFByb2Nlc3Nlcy5pbmRleE9mKHRoaXMpO2k+LTEmJnRoaXMuX3BhcmVudENvbnRhaW5lci5wb3N0UHJvY2Vzc2VzLnNwbGljZShpLDEpLHRoaXMuX3BhcmVudENvbnRhaW5lcj1udWxsfWlmKHQ9dGhpcy5fZW5naW5lLnBvc3RQcm9jZXNzZXMuaW5kZXhPZih0aGlzKSx0IT09LTEmJnRoaXMuX2VuZ2luZS5wb3N0UHJvY2Vzc2VzLnNwbGljZSh0LDEpLCEhZSl7aWYoZS5kZXRhY2hQb3N0UHJvY2Vzcyh0aGlzKSx0PWUuX3Bvc3RQcm9jZXNzZXMuaW5kZXhPZih0aGlzKSx0PT09MCYmZS5fcG9zdFByb2Nlc3Nlcy5sZW5ndGg+MCl7Y29uc3QgaT10aGlzLl9jYW1lcmEuX2dldEZpcnN0UG9zdFByb2Nlc3MoKTtpJiZpLm1hcmtUZXh0dXJlRGlydHkoKX10aGlzLm9uQWN0aXZhdGVPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkFmdGVyUmVuZGVyT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25BcHBseU9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25TaXplQ2hhbmdlZE9ic2VydmFibGUuY2xlYXIoKX19c2VyaWFsaXplKCl7Y29uc3QgZT1hZS5TZXJpYWxpemUodGhpcyksdD10aGlzLmdldENhbWVyYSgpfHx0aGlzLl9zY2VuZSYmdGhpcy5fc2NlbmUuYWN0aXZlQ2FtZXJhO3JldHVybiBlLmN1c3RvbVR5cGU9IkJBQllMT04uIit0aGlzLmdldENsYXNzTmFtZSgpLGUuY2FtZXJhSWQ9dD90LmlkOm51bGwsZS5yZXVzYWJsZT10aGlzLl9yZXVzYWJsZSxlLnRleHR1cmVUeXBlPXRoaXMuX3RleHR1cmVUeXBlLGUuZnJhZ21lbnRVcmw9dGhpcy5fZnJhZ21lbnRVcmwsZS5wYXJhbWV0ZXJzPXRoaXMuX3BhcmFtZXRlcnMsZS5zYW1wbGVycz10aGlzLl9zYW1wbGVycyxlLm9wdGlvbnM9dGhpcy5fb3B0aW9ucyxlLmRlZmluZXM9dGhpcy5fcG9zdFByb2Nlc3NEZWZpbmVzLGUudGV4dHVyZUZvcm1hdD10aGlzLl90ZXh0dXJlRm9ybWF0LGUudmVydGV4VXJsPXRoaXMuX3ZlcnRleFVybCxlLmluZGV4UGFyYW1ldGVycz10aGlzLl9pbmRleFBhcmFtZXRlcnMsZX1jbG9uZSgpe2NvbnN0IGU9dGhpcy5zZXJpYWxpemUoKTtlLl9lbmdpbmU9dGhpcy5fZW5naW5lLGUuY2FtZXJhSWQ9bnVsbDtjb25zdCB0PU1lLlBhcnNlKGUsdGhpcy5fc2NlbmUsIiIpO3JldHVybiB0Pyh0Lm9uQWN0aXZhdGVPYnNlcnZhYmxlPXRoaXMub25BY3RpdmF0ZU9ic2VydmFibGUuY2xvbmUoKSx0Lm9uU2l6ZUNoYW5nZWRPYnNlcnZhYmxlPXRoaXMub25TaXplQ2hhbmdlZE9ic2VydmFibGUuY2xvbmUoKSx0Lm9uQXBwbHlPYnNlcnZhYmxlPXRoaXMub25BcHBseU9ic2VydmFibGUuY2xvbmUoKSx0Lm9uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZT10aGlzLm9uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZS5jbG9uZSgpLHQub25BZnRlclJlbmRlck9ic2VydmFibGU9dGhpcy5vbkFmdGVyUmVuZGVyT2JzZXJ2YWJsZS5jbG9uZSgpLHQuX3ByZVBhc3NFZmZlY3RDb25maWd1cmF0aW9uPXRoaXMuX3ByZVBhc3NFZmZlY3RDb25maWd1cmF0aW9uLHQpOm51bGx9c3RhdGljIFBhcnNlKGUsdCxpKXtjb25zdCBzPXJpKGUuY3VzdG9tVHlwZSk7aWYoIXN8fCFzLl9QYXJzZSlyZXR1cm4gbnVsbDtjb25zdCByPXQ/dC5nZXRDYW1lcmFCeUlkKGUuY2FtZXJhSWQpOm51bGw7cmV0dXJuIHMuX1BhcnNlKGUscix0LGkpfXN0YXRpYyBfUGFyc2UoZSx0LGkscyl7cmV0dXJuIGFlLlBhcnNlKCgpPT5uZXcgTWUoZS5uYW1lLGUuZnJhZ21lbnRVcmwsZS5wYXJhbWV0ZXJzLGUuc2FtcGxlcnMsZS5vcHRpb25zLHQsZS5yZW5kZXJUYXJnZXRTYW1wbGluZ01vZGUsZS5fZW5naW5lLGUucmV1c2FibGUsZS5kZWZpbmVzLGUudGV4dHVyZVR5cGUsZS52ZXJ0ZXhVcmwsZS5pbmRleFBhcmFtZXRlcnMsITEsZS50ZXh0dXJlRm9ybWF0KSxlLGkscyl9fU1lLl9DdXN0b21TaGFkZXJDb2RlUHJvY2Vzc2luZz17fSxUKFtSKCldLE1lLnByb3RvdHlwZSwidW5pcXVlSWQiLHZvaWQgMCksVChbUigpXSxNZS5wcm90b3R5cGUsIm5hbWUiLHZvaWQgMCksVChbUigpXSxNZS5wcm90b3R5cGUsIndpZHRoIix2b2lkIDApLFQoW1IoKV0sTWUucHJvdG90eXBlLCJoZWlnaHQiLHZvaWQgMCksVChbUigpXSxNZS5wcm90b3R5cGUsInJlbmRlclRhcmdldFNhbXBsaW5nTW9kZSIsdm9pZCAwKSxUKFtkcigpXSxNZS5wcm90b3R5cGUsImNsZWFyQ29sb3IiLHZvaWQgMCksVChbUigpXSxNZS5wcm90b3R5cGUsImF1dG9DbGVhciIsdm9pZCAwKSxUKFtSKCldLE1lLnByb3RvdHlwZSwiYWxwaGFNb2RlIix2b2lkIDApLFQoW1IoKV0sTWUucHJvdG90eXBlLCJhbHBoYUNvbnN0YW50cyIsdm9pZCAwKSxUKFtSKCldLE1lLnByb3RvdHlwZSwiZW5hYmxlUGl4ZWxQZXJmZWN0TW9kZSIsdm9pZCAwKSxUKFtSKCldLE1lLnByb3RvdHlwZSwiZm9yY2VGdWxsc2NyZWVuVmlld3BvcnQiLHZvaWQgMCksVChbUigpXSxNZS5wcm90b3R5cGUsInNjYWxlTW9kZSIsdm9pZCAwKSxUKFtSKCldLE1lLnByb3RvdHlwZSwiYWx3YXlzRm9yY2VQT1QiLHZvaWQgMCksVChbUigic2FtcGxlcyIpXSxNZS5wcm90b3R5cGUsIl9zYW1wbGVzIix2b2lkIDApLFQoW1IoKV0sTWUucHJvdG90eXBlLCJhZGFwdFNjYWxlVG9DdXJyZW50Vmlld3BvcnQiLHZvaWQgMCksaXQoIkJBQllMT04uUG9zdFByb2Nlc3MiLE1lKTtjb25zdCBzYT0ia2VybmVsQmx1clZhcnlpbmdEZWNsYXJhdGlvbiIscmE9InZhcnlpbmcgdmVjMiBzYW1wbGVDb29yZHtYfTsiO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbc2FdPXJhO2NvbnN0IG5hPSJwYWNraW5nRnVuY3Rpb25zIixhYT1gdmVjNCBwYWNrKGZsb2F0IGRlcHRoKQp7CmNvbnN0IHZlYzQgYml0X3NoaWZ0PXZlYzQoMjU1LjAqMjU1LjAqMjU1LjAsMjU1LjAqMjU1LjAsMjU1LjAsMS4wKTsKY29uc3QgdmVjNCBiaXRfbWFzaz12ZWM0KDAuMCwxLjAvMjU1LjAsMS4wLzI1NS4wLDEuMC8yNTUuMCk7CnZlYzQgcmVzPWZyYWN0KGRlcHRoKmJpdF9zaGlmdCk7CnJlcy09cmVzLnh4eXoqYml0X21hc2s7CnJldHVybiByZXM7Cn0KZmxvYXQgdW5wYWNrKHZlYzQgY29sb3IpCnsKY29uc3QgdmVjNCBiaXRfc2hpZnQ9dmVjNCgxLjAvKDI1NS4wKjI1NS4wKjI1NS4wKSwxLjAvKDI1NS4wKjI1NS4wKSwxLjAvMjU1LjAsMS4wKTsKcmV0dXJuIGRvdChjb2xvcixiaXRfc2hpZnQpOwp9YDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW25hXT1hYTtjb25zdCBvYT0ia2VybmVsQmx1ckZyYWdtZW50IixoYT1gI2lmZGVmIERPRgpmYWN0b3I9c2FtcGxlQ29DKHNhbXBsZUNvb3Jke1h9KTsgCmNvbXB1dGVkV2VpZ2h0PUtFUk5FTF9XRUlHSFR7WH0qZmFjdG9yOwpzdW1PZldlaWdodHMrPWNvbXB1dGVkV2VpZ2h0OwojZWxzZQpjb21wdXRlZFdlaWdodD1LRVJORUxfV0VJR0hUe1h9OwojZW5kaWYKI2lmZGVmIFBBQ0tFREZMT0FUCmJsZW5kKz11bnBhY2sodGV4dHVyZTJEKHRleHR1cmVTYW1wbGVyLHNhbXBsZUNvb3Jke1h9KSkqY29tcHV0ZWRXZWlnaHQ7CiNlbHNlCmJsZW5kKz10ZXh0dXJlMkQodGV4dHVyZVNhbXBsZXIsc2FtcGxlQ29vcmR7WH0pKmNvbXB1dGVkV2VpZ2h0OwojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW29hXT1oYTtjb25zdCBsYT0ia2VybmVsQmx1ckZyYWdtZW50MiIsY2E9YCNpZmRlZiBET0YKZmFjdG9yPXNhbXBsZUNvQyhzYW1wbGVDZW50ZXIrZGVsdGEqS0VSTkVMX0RFUF9PRkZTRVR7WH0pOwpjb21wdXRlZFdlaWdodD1LRVJORUxfREVQX1dFSUdIVHtYfSpmYWN0b3I7CnN1bU9mV2VpZ2h0cys9Y29tcHV0ZWRXZWlnaHQ7CiNlbHNlCmNvbXB1dGVkV2VpZ2h0PUtFUk5FTF9ERVBfV0VJR0hUe1h9OwojZW5kaWYKI2lmZGVmIFBBQ0tFREZMT0FUCmJsZW5kKz11bnBhY2sodGV4dHVyZTJEKHRleHR1cmVTYW1wbGVyLHNhbXBsZUNlbnRlcitkZWx0YSpLRVJORUxfREVQX09GRlNFVHtYfSkpKmNvbXB1dGVkV2VpZ2h0OwojZWxzZQpibGVuZCs9dGV4dHVyZTJEKHRleHR1cmVTYW1wbGVyLHNhbXBsZUNlbnRlcitkZWx0YSpLRVJORUxfREVQX09GRlNFVHtYfSkqY29tcHV0ZWRXZWlnaHQ7CiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbbGFdPWNhO2NvbnN0IHVhPSJrZXJuZWxCbHVyUGl4ZWxTaGFkZXIiLGRhPWB1bmlmb3JtIHNhbXBsZXIyRCB0ZXh0dXJlU2FtcGxlcjsKdW5pZm9ybSB2ZWMyIGRlbHRhOwp2YXJ5aW5nIHZlYzIgc2FtcGxlQ2VudGVyOwojaWZkZWYgRE9GCnVuaWZvcm0gc2FtcGxlcjJEIGNpcmNsZU9mQ29uZnVzaW9uU2FtcGxlcjsKZmxvYXQgc2FtcGxlQ29DKGluIHZlYzIgb2Zmc2V0KSB7CmZsb2F0IGNvYz10ZXh0dXJlMkQoY2lyY2xlT2ZDb25mdXNpb25TYW1wbGVyLG9mZnNldCkucjsKcmV0dXJuIGNvYzsgCn0KI2VuZGlmCiNpbmNsdWRlPGtlcm5lbEJsdXJWYXJ5aW5nRGVjbGFyYXRpb24+WzAuLnZhcnlpbmdDb3VudF0KI2lmZGVmIFBBQ0tFREZMT0FUCiNpbmNsdWRlPHBhY2tpbmdGdW5jdGlvbnM+CiNlbmRpZgojZGVmaW5lIENVU1RPTV9GUkFHTUVOVF9ERUZJTklUSU9OUwp2b2lkIG1haW4odm9pZCkKewpmbG9hdCBjb21wdXRlZFdlaWdodD0wLjA7CiNpZmRlZiBQQUNLRURGTE9BVApmbG9hdCBibGVuZD0wLjsKI2Vsc2UKdmVjNCBibGVuZD12ZWM0KDAuKTsKI2VuZGlmCiNpZmRlZiBET0YKZmxvYXQgc3VtT2ZXZWlnaHRzPUNFTlRFUl9XRUlHSFQ7IApmbG9hdCBmYWN0b3I9MC4wOwojaWZkZWYgUEFDS0VERkxPQVQKYmxlbmQrPXVucGFjayh0ZXh0dXJlMkQodGV4dHVyZVNhbXBsZXIsc2FtcGxlQ2VudGVyKSkqQ0VOVEVSX1dFSUdIVDsKI2Vsc2UKYmxlbmQrPXRleHR1cmUyRCh0ZXh0dXJlU2FtcGxlcixzYW1wbGVDZW50ZXIpKkNFTlRFUl9XRUlHSFQ7CiNlbmRpZgojZW5kaWYKI2luY2x1ZGU8a2VybmVsQmx1ckZyYWdtZW50PlswLi52YXJ5aW5nQ291bnRdCiNpbmNsdWRlPGtlcm5lbEJsdXJGcmFnbWVudDI+WzAuLmRlcENvdW50XQojaWZkZWYgUEFDS0VERkxPQVQKZ2xfRnJhZ0NvbG9yPXBhY2soYmxlbmQpOwojZWxzZQpnbF9GcmFnQ29sb3I9YmxlbmQ7CiNlbmRpZgojaWZkZWYgRE9GCmdsX0ZyYWdDb2xvci89c3VtT2ZXZWlnaHRzOwojZW5kaWYKfWA7VS5TaGFkZXJzU3RvcmVbdWFdPWRhO2NvbnN0IGZhPSJrZXJuZWxCbHVyVmVydGV4IixfYT0ic2FtcGxlQ29vcmR7WH09c2FtcGxlQ2VudGVyK2RlbHRhKktFUk5FTF9PRkZTRVR7WH07IjtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW2ZhXT1fYTtjb25zdCBnYT0ia2VybmVsQmx1clZlcnRleFNoYWRlciIscGE9YGF0dHJpYnV0ZSB2ZWMyIHBvc2l0aW9uOwp1bmlmb3JtIHZlYzIgZGVsdGE7CnZhcnlpbmcgdmVjMiBzYW1wbGVDZW50ZXI7CiNpbmNsdWRlPGtlcm5lbEJsdXJWYXJ5aW5nRGVjbGFyYXRpb24+WzAuLnZhcnlpbmdDb3VudF0KY29uc3QgdmVjMiBtYWRkPXZlYzIoMC41LDAuNSk7CiNkZWZpbmUgQ1VTVE9NX1ZFUlRFWF9ERUZJTklUSU9OUwp2b2lkIG1haW4odm9pZCkgewojZGVmaW5lIENVU1RPTV9WRVJURVhfTUFJTl9CRUdJTgpzYW1wbGVDZW50ZXI9KHBvc2l0aW9uKm1hZGQrbWFkZCk7CiNpbmNsdWRlPGtlcm5lbEJsdXJWZXJ0ZXg+WzAuLnZhcnlpbmdDb3VudF0KZ2xfUG9zaXRpb249dmVjNChwb3NpdGlvbiwwLjAsMS4wKTsKI2RlZmluZSBDVVNUT01fVkVSVEVYX01BSU5fRU5ECn1gO1UuU2hhZGVyc1N0b3JlW2dhXT1wYTtjbGFzcyBKdCBleHRlbmRzIE1le2NvbnN0cnVjdG9yKGUsdCxpLHMscixuPU4uQklMSU5FQVJfU0FNUExJTkdNT0RFLGEsbyxoPTAsbD0iIix1PSExLGQ9NSl7c3VwZXIoZSwia2VybmVsQmx1ciIsWyJkZWx0YSIsImRpcmVjdGlvbiJdLFsiY2lyY2xlT2ZDb25mdXNpb25TYW1wbGVyIl0scyxyLG4sYSxvLG51bGwsaCwia2VybmVsQmx1ciIse3ZhcnlpbmdDb3VudDowLGRlcENvdW50OjB9LCEwLGQpLHRoaXMuX2Jsb2NrQ29tcGlsYXRpb249dSx0aGlzLl9wYWNrZWRGbG9hdD0hMSx0aGlzLl9zdGF0aWNEZWZpbmVzPSIiLHRoaXMuX3N0YXRpY0RlZmluZXM9bCx0aGlzLmRpcmVjdGlvbj10LHRoaXMub25BcHBseU9ic2VydmFibGUuYWRkKGY9Pnt0aGlzLl9vdXRwdXRUZXh0dXJlP2Yuc2V0RmxvYXQyKCJkZWx0YSIsMS90aGlzLl9vdXRwdXRUZXh0dXJlLndpZHRoKnRoaXMuZGlyZWN0aW9uLngsMS90aGlzLl9vdXRwdXRUZXh0dXJlLmhlaWdodCp0aGlzLmRpcmVjdGlvbi55KTpmLnNldEZsb2F0MigiZGVsdGEiLDEvdGhpcy53aWR0aCp0aGlzLmRpcmVjdGlvbi54LDEvdGhpcy5oZWlnaHQqdGhpcy5kaXJlY3Rpb24ueSl9KSx0aGlzLmtlcm5lbD1pfXNldCBrZXJuZWwoZSl7dGhpcy5faWRlYWxLZXJuZWwhPT1lJiYoZT1NYXRoLm1heChlLDEpLHRoaXMuX2lkZWFsS2VybmVsPWUsdGhpcy5fa2VybmVsPXRoaXMuX25lYXJlc3RCZXN0S2VybmVsKGUpLHRoaXMuX2Jsb2NrQ29tcGlsYXRpb258fHRoaXMuX3VwZGF0ZVBhcmFtZXRlcnMoKSl9Z2V0IGtlcm5lbCgpe3JldHVybiB0aGlzLl9pZGVhbEtlcm5lbH1zZXQgcGFja2VkRmxvYXQoZSl7dGhpcy5fcGFja2VkRmxvYXQhPT1lJiYodGhpcy5fcGFja2VkRmxvYXQ9ZSx0aGlzLl9ibG9ja0NvbXBpbGF0aW9ufHx0aGlzLl91cGRhdGVQYXJhbWV0ZXJzKCkpfWdldCBwYWNrZWRGbG9hdCgpe3JldHVybiB0aGlzLl9wYWNrZWRGbG9hdH1nZXRDbGFzc05hbWUoKXtyZXR1cm4iQmx1clBvc3RQcm9jZXNzIn11cGRhdGVFZmZlY3QoZT1udWxsLHQ9bnVsbCxpPW51bGwscyxyLG4pe3RoaXMuX3VwZGF0ZVBhcmFtZXRlcnMocixuKX1fdXBkYXRlUGFyYW1ldGVycyhlLHQpe2NvbnN0IGk9dGhpcy5fa2VybmVsLHM9KGktMSkvMjtsZXQgcj1bXSxuPVtdLGE9MDtmb3IobGV0IG09MDttPGk7bSsrKXtjb25zdCB2PW0vKGktMSksUz10aGlzLl9nYXVzc2lhbldlaWdodCh2KjItMSk7clttXT1tLXMsblttXT1TLGErPVN9Zm9yKGxldCBtPTA7bTxuLmxlbmd0aDttKyspblttXS89YTtjb25zdCBvPVtdLGg9W10sbD1bXTtmb3IobGV0IG09MDttPD1zO20rPTIpe2NvbnN0IHY9TWF0aC5taW4obSsxLE1hdGguZmxvb3IocykpO2lmKG09PT12KWwucHVzaCh7bzpyW21dLHc6blttXX0pO2Vsc2V7Y29uc3QgeT12PT09cyxBPW5bbV0rblt2XSooeT8uNToxKSxDPXJbbV0rMS8oMStuW21dL25bdl0pO0M9PT0wPyhsLnB1c2goe286clttXSx3Om5bbV19KSxsLnB1c2goe286clttKzFdLHc6blttKzFdfSkpOihsLnB1c2goe286Qyx3OkF9KSxsLnB1c2goe286LUMsdzpBfSkpfX1mb3IobGV0IG09MDttPGwubGVuZ3RoO20rKyloW21dPWxbbV0ubyxvW21dPWxbbV0udztyPWgsbj1vO2NvbnN0IHU9dGhpcy5nZXRFbmdpbmUoKS5nZXRDYXBzKCkubWF4VmFyeWluZ1ZlY3RvcnMsZD1NYXRoLm1heCh1LDApLTE7bGV0IGY9TWF0aC5taW4oci5sZW5ndGgsZCksXz0iIjtfKz10aGlzLl9zdGF0aWNEZWZpbmVzLHRoaXMuX3N0YXRpY0RlZmluZXMuaW5kZXhPZigiRE9GIikhPS0xJiYoXys9YCNkZWZpbmUgQ0VOVEVSX1dFSUdIVCAke3RoaXMuX2dsc2xGbG9hdChuW2YtMV0pfVxyCmAsZi0tKTtmb3IobGV0IG09MDttPGY7bSsrKV8rPWAjZGVmaW5lIEtFUk5FTF9PRkZTRVQke219ICR7dGhpcy5fZ2xzbEZsb2F0KHJbbV0pfVxyCmAsXys9YCNkZWZpbmUgS0VSTkVMX1dFSUdIVCR7bX0gJHt0aGlzLl9nbHNsRmxvYXQoblttXSl9XHIKYDtsZXQgRT0wO2ZvcihsZXQgbT1kO208ci5sZW5ndGg7bSsrKV8rPWAjZGVmaW5lIEtFUk5FTF9ERVBfT0ZGU0VUJHtFfSAke3RoaXMuX2dsc2xGbG9hdChyW21dKX1ccgpgLF8rPWAjZGVmaW5lIEtFUk5FTF9ERVBfV0VJR0hUJHtFfSAke3RoaXMuX2dsc2xGbG9hdChuW21dKX1ccgpgLEUrKzt0aGlzLnBhY2tlZEZsb2F0JiYoXys9IiNkZWZpbmUgUEFDS0VERkxPQVQgMSIpLHRoaXMuX2Jsb2NrQ29tcGlsYXRpb249ITEsc3VwZXIudXBkYXRlRWZmZWN0KF8sbnVsbCxudWxsLHt2YXJ5aW5nQ291bnQ6ZixkZXBDb3VudDpFfSxlLHQpfV9uZWFyZXN0QmVzdEtlcm5lbChlKXtjb25zdCB0PU1hdGgucm91bmQoZSk7Zm9yKGNvbnN0IGkgb2ZbdCx0LTEsdCsxLHQtMix0KzJdKWlmKGklMiE9PTAmJk1hdGguZmxvb3IoaS8yKSUyPT09MCYmaT4wKXJldHVybiBNYXRoLm1heChpLDMpO3JldHVybiBNYXRoLm1heCh0LDMpfV9nYXVzc2lhbldlaWdodChlKXtjb25zdCB0PS4zMzMzMzMzMzMzMzMzMzMzLGk9TWF0aC5zcXJ0KDIqTWF0aC5QSSkqdCxzPS0oZSplLygyKnQqdCkpO3JldHVybiAxL2kqTWF0aC5leHAocyl9X2dsc2xGbG9hdChlLHQ9OCl7cmV0dXJuIGUudG9GaXhlZCh0KS5yZXBsYWNlKC8wKyQvLCIiKX1zdGF0aWMgX1BhcnNlKGUsdCxpLHMpe3JldHVybiBhZS5QYXJzZSgoKT0+bmV3IEp0KGUubmFtZSxlLmRpcmVjdGlvbixlLmtlcm5lbCxlLm9wdGlvbnMsdCxlLnJlbmRlclRhcmdldFNhbXBsaW5nTW9kZSxpLmdldEVuZ2luZSgpLGUucmV1c2FibGUsZS50ZXh0dXJlVHlwZSx2b2lkIDAsITEpLGUsaSxzKX19VChbUigia2VybmVsIildLEp0LnByb3RvdHlwZSwiX2tlcm5lbCIsdm9pZCAwKSxUKFtSKCJwYWNrZWRGbG9hdCIpXSxKdC5wcm90b3R5cGUsIl9wYWNrZWRGbG9hdCIsdm9pZCAwKSxUKFt4bigpXSxKdC5wcm90b3R5cGUsImRpcmVjdGlvbiIsdm9pZCAwKSxpdCgiQkFCWUxPTi5CbHVyUG9zdFByb2Nlc3MiLEp0KTtjbGFzcyB6c3tjb25zdHJ1Y3Rvcigpe3RoaXMuX2RlZmluZXM9e30sdGhpcy5fY3VycmVudFJhbms9MzIsdGhpcy5fbWF4UmFuaz0tMSx0aGlzLl9tZXNoPW51bGx9dW5CaW5kTWVzaCgpe3RoaXMuX21lc2g9bnVsbH1hZGRGYWxsYmFjayhlLHQpe3RoaXMuX2RlZmluZXNbZV18fChlPHRoaXMuX2N1cnJlbnRSYW5rJiYodGhpcy5fY3VycmVudFJhbms9ZSksZT50aGlzLl9tYXhSYW5rJiYodGhpcy5fbWF4UmFuaz1lKSx0aGlzLl9kZWZpbmVzW2VdPW5ldyBBcnJheSksdGhpcy5fZGVmaW5lc1tlXS5wdXNoKHQpfWFkZENQVVNraW5uaW5nRmFsbGJhY2soZSx0KXt0aGlzLl9tZXNoPXQsZTx0aGlzLl9jdXJyZW50UmFuayYmKHRoaXMuX2N1cnJlbnRSYW5rPWUpLGU+dGhpcy5fbWF4UmFuayYmKHRoaXMuX21heFJhbms9ZSl9Z2V0IGhhc01vcmVGYWxsYmFja3MoKXtyZXR1cm4gdGhpcy5fY3VycmVudFJhbms8PXRoaXMuX21heFJhbmt9cmVkdWNlKGUsdCl7aWYodGhpcy5fbWVzaCYmdGhpcy5fbWVzaC5jb21wdXRlQm9uZXNVc2luZ1NoYWRlcnMmJnRoaXMuX21lc2gubnVtQm9uZUluZmx1ZW5jZXJzPjApe3RoaXMuX21lc2guY29tcHV0ZUJvbmVzVXNpbmdTaGFkZXJzPSExLGU9ZS5yZXBsYWNlKCIjZGVmaW5lIE5VTV9CT05FX0lORkxVRU5DRVJTICIrdGhpcy5fbWVzaC5udW1Cb25lSW5mbHVlbmNlcnMsIiNkZWZpbmUgTlVNX0JPTkVfSU5GTFVFTkNFUlMgMCIpLHQuX2JvbmVzQ29tcHV0YXRpb25Gb3JjZWRUb0NQVT0hMDtjb25zdCBpPXRoaXMuX21lc2guZ2V0U2NlbmUoKTtmb3IobGV0IHM9MDtzPGkubWVzaGVzLmxlbmd0aDtzKyspe2NvbnN0IHI9aS5tZXNoZXNbc107aWYoIXIubWF0ZXJpYWwpeyF0aGlzLl9tZXNoLm1hdGVyaWFsJiZyLmNvbXB1dGVCb25lc1VzaW5nU2hhZGVycyYmci5udW1Cb25lSW5mbHVlbmNlcnM+MCYmKHIuY29tcHV0ZUJvbmVzVXNpbmdTaGFkZXJzPSExKTtjb250aW51ZX1pZighKCFyLmNvbXB1dGVCb25lc1VzaW5nU2hhZGVyc3x8ci5udW1Cb25lSW5mbHVlbmNlcnM9PT0wKSl7aWYoci5tYXRlcmlhbC5nZXRFZmZlY3QoKT09PXQpci5jb21wdXRlQm9uZXNVc2luZ1NoYWRlcnM9ITE7ZWxzZSBpZihyLnN1Yk1lc2hlcyl7Zm9yKGNvbnN0IG4gb2Ygci5zdWJNZXNoZXMpaWYobi5lZmZlY3Q9PT10KXtyLmNvbXB1dGVCb25lc1VzaW5nU2hhZGVycz0hMTticmVha319fX19ZWxzZXtjb25zdCBpPXRoaXMuX2RlZmluZXNbdGhpcy5fY3VycmVudFJhbmtdO2lmKGkpZm9yKGxldCBzPTA7czxpLmxlbmd0aDtzKyspZT1lLnJlcGxhY2UoIiNkZWZpbmUgIitpW3NdLCIiKTt0aGlzLl9jdXJyZW50UmFuaysrfXJldHVybiBlfX1jb25zdCBtYT0iYmF5ZXJEaXRoZXJGdW5jdGlvbnMiLEVhPWBmbG9hdCBiYXllckRpdGhlcjIodmVjMiBfUCkgewpyZXR1cm4gbW9kKDIuMCpfUC55K19QLngrMS4wLDQuMCk7Cn0KZmxvYXQgYmF5ZXJEaXRoZXI0KHZlYzIgX1ApIHsKdmVjMiBQMT1tb2QoX1AsMi4wKTsgCnZlYzIgUDI9Zmxvb3IoMC41Km1vZChfUCw0LjApKTsgCnJldHVybiA0LjAqYmF5ZXJEaXRoZXIyKFAxKStiYXllckRpdGhlcjIoUDIpOwp9CmZsb2F0IGJheWVyRGl0aGVyOCh2ZWMyIF9QKSB7CnZlYzIgUDE9bW9kKF9QLDIuMCk7IAp2ZWMyIFAyPWZsb29yKDAuNSAqbW9kKF9QLDQuMCkpOyAKdmVjMiBQND1mbG9vcigwLjI1Km1vZChfUCw4LjApKTsgCnJldHVybiA0LjAqKDQuMCpiYXllckRpdGhlcjIoUDEpK2JheWVyRGl0aGVyMihQMikpK2JheWVyRGl0aGVyMihQNCk7Cn0KYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW21hXT1FYTtjb25zdCB2YT0ic2hhZG93TWFwRnJhZ21lbnRFeHRyYURlY2xhcmF0aW9uIixUYT1gI2lmIFNNX0ZMT0FUPT0wCiNpbmNsdWRlPHBhY2tpbmdGdW5jdGlvbnM+CiNlbmRpZgojaWYgU01fU09GVFRSQU5TUEFSRU5UU0hBRE9XPT0xCiNpbmNsdWRlPGJheWVyRGl0aGVyRnVuY3Rpb25zPgp1bmlmb3JtIGZsb2F0IHNvZnRUcmFuc3BhcmVudFNoYWRvd1NNOwojZW5kaWYKdmFyeWluZyBmbG9hdCB2RGVwdGhNZXRyaWNTTTsKI2lmIFNNX1VTRURJU1RBTkNFPT0xCnVuaWZvcm0gdmVjMyBsaWdodERhdGFTTTsKdmFyeWluZyB2ZWMzIHZQb3NpdGlvbldTTTsKI2VuZGlmCnVuaWZvcm0gdmVjMyBiaWFzQW5kU2NhbGVTTTsKdW5pZm9ybSB2ZWMyIGRlcHRoVmFsdWVzU007CiNpZiBkZWZpbmVkKFNNX0RFUFRIQ0xBTVApICYmIFNNX0RFUFRIQ0xBTVA9PTEKdmFyeWluZyBmbG9hdCB6U007CiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbdmFdPVRhO2NvbnN0IGJhPSJjbGlwUGxhbmVGcmFnbWVudERlY2xhcmF0aW9uIixTYT1gI2lmZGVmIENMSVBQTEFORQp2YXJ5aW5nIGZsb2F0IGZDbGlwRGlzdGFuY2U7CiNlbmRpZgojaWZkZWYgQ0xJUFBMQU5FMgp2YXJ5aW5nIGZsb2F0IGZDbGlwRGlzdGFuY2UyOwojZW5kaWYKI2lmZGVmIENMSVBQTEFORTMKdmFyeWluZyBmbG9hdCBmQ2xpcERpc3RhbmNlMzsKI2VuZGlmCiNpZmRlZiBDTElQUExBTkU0CnZhcnlpbmcgZmxvYXQgZkNsaXBEaXN0YW5jZTQ7CiNlbmRpZgojaWZkZWYgQ0xJUFBMQU5FNQp2YXJ5aW5nIGZsb2F0IGZDbGlwRGlzdGFuY2U1OwojZW5kaWYKI2lmZGVmIENMSVBQTEFORTYKdmFyeWluZyBmbG9hdCBmQ2xpcERpc3RhbmNlNjsKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtiYV09U2E7Y29uc3QgeGE9ImNsaXBQbGFuZUZyYWdtZW50IixNYT1gI2lmIGRlZmluZWQoQ0xJUFBMQU5FKSB8fCBkZWZpbmVkKENMSVBQTEFORTIpIHx8IGRlZmluZWQoQ0xJUFBMQU5FMykgfHwgZGVmaW5lZChDTElQUExBTkU0KSB8fCBkZWZpbmVkKENMSVBQTEFORTUpIHx8IGRlZmluZWQoQ0xJUFBMQU5FNikKaWYgKGZhbHNlKSB7fQojZW5kaWYKI2lmZGVmIENMSVBQTEFORQplbHNlIGlmIChmQ2xpcERpc3RhbmNlPjAuMCkKewpkaXNjYXJkOwp9CiNlbmRpZgojaWZkZWYgQ0xJUFBMQU5FMgplbHNlIGlmIChmQ2xpcERpc3RhbmNlMj4wLjApCnsKZGlzY2FyZDsKfQojZW5kaWYKI2lmZGVmIENMSVBQTEFORTMKZWxzZSBpZiAoZkNsaXBEaXN0YW5jZTM+MC4wKQp7CmRpc2NhcmQ7Cn0KI2VuZGlmCiNpZmRlZiBDTElQUExBTkU0CmVsc2UgaWYgKGZDbGlwRGlzdGFuY2U0PjAuMCkKewpkaXNjYXJkOwp9CiNlbmRpZgojaWZkZWYgQ0xJUFBMQU5FNQplbHNlIGlmIChmQ2xpcERpc3RhbmNlNT4wLjApCnsKZGlzY2FyZDsKfQojZW5kaWYKI2lmZGVmIENMSVBQTEFORTYKZWxzZSBpZiAoZkNsaXBEaXN0YW5jZTY+MC4wKQp7CmRpc2NhcmQ7Cn0KI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVt4YV09TWE7Y29uc3QgQWE9InNoYWRvd01hcEZyYWdtZW50IixSYT1gZmxvYXQgZGVwdGhTTT12RGVwdGhNZXRyaWNTTTsKI2lmIGRlZmluZWQoU01fREVQVEhDTEFNUCkgJiYgU01fREVQVEhDTEFNUD09MQojaWYgU01fVVNFRElTVEFOQ0U9PTEKZGVwdGhTTT0obGVuZ3RoKHZQb3NpdGlvbldTTS1saWdodERhdGFTTSkrZGVwdGhWYWx1ZXNTTS54KS9kZXB0aFZhbHVlc1NNLnkrYmlhc0FuZFNjYWxlU00ueDsKI2Vsc2UKI2lmZGVmIFVTRV9SRVZFUlNFX0RFUFRIQlVGRkVSCmRlcHRoU009KC16U00rZGVwdGhWYWx1ZXNTTS54KS9kZXB0aFZhbHVlc1NNLnkrYmlhc0FuZFNjYWxlU00ueDsKI2Vsc2UKZGVwdGhTTT0oelNNK2RlcHRoVmFsdWVzU00ueCkvZGVwdGhWYWx1ZXNTTS55K2JpYXNBbmRTY2FsZVNNLng7CiNlbmRpZgojZW5kaWYKI2lmZGVmIFVTRV9SRVZFUlNFX0RFUFRIQlVGRkVSCmdsX0ZyYWdEZXB0aD1jbGFtcCgxLjAtZGVwdGhTTSwwLjAsMS4wKTsKI2Vsc2UKZ2xfRnJhZ0RlcHRoPWNsYW1wKGRlcHRoU00sMC4wLDEuMCk7IAojZW5kaWYKI2VsaWYgU01fVVNFRElTVEFOQ0U9PTEKZGVwdGhTTT0obGVuZ3RoKHZQb3NpdGlvbldTTS1saWdodERhdGFTTSkrZGVwdGhWYWx1ZXNTTS54KS9kZXB0aFZhbHVlc1NNLnkrYmlhc0FuZFNjYWxlU00ueDsKI2VuZGlmCiNpZiBTTV9FU009PTEKZGVwdGhTTT1jbGFtcChleHAoLW1pbig4Ny4sYmlhc0FuZFNjYWxlU00ueipkZXB0aFNNKSksMC4sMS4pOwojZW5kaWYKI2lmIFNNX0ZMT0FUPT0xCmdsX0ZyYWdDb2xvcj12ZWM0KGRlcHRoU00sMS4wLDEuMCwxLjApOwojZWxzZQpnbF9GcmFnQ29sb3I9cGFjayhkZXB0aFNNKTsKI2VuZGlmCnJldHVybjtgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbQWFdPVJhO2NvbnN0IHlhPSJzaGFkb3dNYXBQaXhlbFNoYWRlciIsQ2E9YCNpbmNsdWRlPHNoYWRvd01hcEZyYWdtZW50RXh0cmFEZWNsYXJhdGlvbj4KI2lmZGVmIEFMUEhBVEVYVFVSRQp2YXJ5aW5nIHZlYzIgdlVWOwp1bmlmb3JtIHNhbXBsZXIyRCBkaWZmdXNlU2FtcGxlcjsKI2VuZGlmCiNpbmNsdWRlPGNsaXBQbGFuZUZyYWdtZW50RGVjbGFyYXRpb24+CiNkZWZpbmUgQ1VTVE9NX0ZSQUdNRU5UX0RFRklOSVRJT05TCnZvaWQgbWFpbih2b2lkKQp7CiNpbmNsdWRlPGNsaXBQbGFuZUZyYWdtZW50PgojaWZkZWYgQUxQSEFURVhUVVJFCmZsb2F0IGFscGhhRnJvbUFscGhhVGV4dHVyZT10ZXh0dXJlMkQoZGlmZnVzZVNhbXBsZXIsdlVWKS5hOwojaWZkZWYgQUxQSEFURVNUVkFMVUUKaWYgKGFscGhhRnJvbUFscGhhVGV4dHVyZTxBTFBIQVRFU1RWQUxVRSkKZGlzY2FyZDsKI2VuZGlmCiNlbmRpZgojaWYgU01fU09GVFRSQU5TUEFSRU5UU0hBRE9XPT0xCiNpZmRlZiBBTFBIQVRFWFRVUkUKaWYgKChiYXllckRpdGhlcjgoZmxvb3IobW9kKGdsX0ZyYWdDb29yZC54eSw4LjApKSkpLzY0LjA+PXNvZnRUcmFuc3BhcmVudFNoYWRvd1NNKmFscGhhRnJvbUFscGhhVGV4dHVyZSkgZGlzY2FyZDsKI2Vsc2UKaWYgKChiYXllckRpdGhlcjgoZmxvb3IobW9kKGdsX0ZyYWdDb29yZC54eSw4LjApKSkpLzY0LjA+PXNvZnRUcmFuc3BhcmVudFNoYWRvd1NNKSBkaXNjYXJkOwojZW5kaWYKI2VuZGlmCiNpbmNsdWRlPHNoYWRvd01hcEZyYWdtZW50Pgp9YDtVLlNoYWRlcnNTdG9yZVt5YV09Q2E7Y29uc3QgSWE9ImJvbmVzRGVjbGFyYXRpb24iLFBhPWAjaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+MAphdHRyaWJ1dGUgdmVjNCBtYXRyaWNlc0luZGljZXM7CmF0dHJpYnV0ZSB2ZWM0IG1hdHJpY2VzV2VpZ2h0czsKI2lmIE5VTV9CT05FX0lORkxVRU5DRVJTPjQKYXR0cmlidXRlIHZlYzQgbWF0cmljZXNJbmRpY2VzRXh0cmE7CmF0dHJpYnV0ZSB2ZWM0IG1hdHJpY2VzV2VpZ2h0c0V4dHJhOwojZW5kaWYKI2lmbmRlZiBCQUtFRF9WRVJURVhfQU5JTUFUSU9OX1RFWFRVUkUKI2lmZGVmIEJPTkVURVhUVVJFCnVuaWZvcm0gc2FtcGxlcjJEIGJvbmVTYW1wbGVyOwp1bmlmb3JtIGZsb2F0IGJvbmVUZXh0dXJlV2lkdGg7CiNlbHNlCnVuaWZvcm0gbWF0NCBtQm9uZXNbQm9uZXNQZXJNZXNoXTsKI2lmZGVmIEJPTkVTX1ZFTE9DSVRZX0VOQUJMRUQKdW5pZm9ybSBtYXQ0IG1QcmV2aW91c0JvbmVzW0JvbmVzUGVyTWVzaF07CiNlbmRpZgojZW5kaWYKI2lmZGVmIEJPTkVURVhUVVJFCiNkZWZpbmUgaW5saW5lCm1hdDQgcmVhZE1hdHJpeEZyb21SYXdTYW1wbGVyKHNhbXBsZXIyRCBzbXAsZmxvYXQgaW5kZXgpCnsKZmxvYXQgb2Zmc2V0PWluZGV4ICo0LjA7CmZsb2F0IGR4PTEuMC9ib25lVGV4dHVyZVdpZHRoOwp2ZWM0IG0wPXRleHR1cmUyRChzbXAsdmVjMihkeCoob2Zmc2V0KzAuNSksMC4pKTsKdmVjNCBtMT10ZXh0dXJlMkQoc21wLHZlYzIoZHgqKG9mZnNldCsxLjUpLDAuKSk7CnZlYzQgbTI9dGV4dHVyZTJEKHNtcCx2ZWMyKGR4KihvZmZzZXQrMi41KSwwLikpOwp2ZWM0IG0zPXRleHR1cmUyRChzbXAsdmVjMihkeCoob2Zmc2V0KzMuNSksMC4pKTsKcmV0dXJuIG1hdDQobTAsbTEsbTIsbTMpOwp9CiNlbmRpZgojZW5kaWYKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtJYV09UGE7Y29uc3QgRGE9ImJha2VkVmVydGV4QW5pbWF0aW9uRGVjbGFyYXRpb24iLEZhPWAjaWZkZWYgQkFLRURfVkVSVEVYX0FOSU1BVElPTl9URVhUVVJFCnVuaWZvcm0gZmxvYXQgYmFrZWRWZXJ0ZXhBbmltYXRpb25UaW1lOwp1bmlmb3JtIHZlYzIgYmFrZWRWZXJ0ZXhBbmltYXRpb25UZXh0dXJlU2l6ZUludmVydGVkOwp1bmlmb3JtIHZlYzQgYmFrZWRWZXJ0ZXhBbmltYXRpb25TZXR0aW5nczsKdW5pZm9ybSBzYW1wbGVyMkQgYmFrZWRWZXJ0ZXhBbmltYXRpb25UZXh0dXJlOwojaWZkZWYgSU5TVEFOQ0VTCmF0dHJpYnV0ZSB2ZWM0IGJha2VkVmVydGV4QW5pbWF0aW9uU2V0dGluZ3NJbnN0YW5jZWQ7CiNlbmRpZgojZGVmaW5lIGlubGluZQptYXQ0IHJlYWRNYXRyaXhGcm9tUmF3U2FtcGxlclZBVChzYW1wbGVyMkQgc21wLGZsb2F0IGluZGV4LGZsb2F0IGZyYW1lKQp7CmZsb2F0IG9mZnNldD1pbmRleCo0LjA7CmZsb2F0IGZyYW1lVVY9KGZyYW1lKzAuNSkqYmFrZWRWZXJ0ZXhBbmltYXRpb25UZXh0dXJlU2l6ZUludmVydGVkLnk7CmZsb2F0IGR4PWJha2VkVmVydGV4QW5pbWF0aW9uVGV4dHVyZVNpemVJbnZlcnRlZC54Owp2ZWM0IG0wPXRleHR1cmUyRChzbXAsdmVjMihkeCoob2Zmc2V0KzAuNSksZnJhbWVVVikpOwp2ZWM0IG0xPXRleHR1cmUyRChzbXAsdmVjMihkeCoob2Zmc2V0KzEuNSksZnJhbWVVVikpOwp2ZWM0IG0yPXRleHR1cmUyRChzbXAsdmVjMihkeCoob2Zmc2V0KzIuNSksZnJhbWVVVikpOwp2ZWM0IG0zPXRleHR1cmUyRChzbXAsdmVjMihkeCoob2Zmc2V0KzMuNSksZnJhbWVVVikpOwpyZXR1cm4gbWF0NChtMCxtMSxtMixtMyk7Cn0KI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtEYV09RmE7Y29uc3Qgd2E9Im1vcnBoVGFyZ2V0c1ZlcnRleEdsb2JhbERlY2xhcmF0aW9uIixPYT1gI2lmZGVmIE1PUlBIVEFSR0VUUwp1bmlmb3JtIGZsb2F0IG1vcnBoVGFyZ2V0SW5mbHVlbmNlc1tOVU1fTU9SUEhfSU5GTFVFTkNFUlNdOwojaWZkZWYgTU9SUEhUQVJHRVRTX1RFWFRVUkUgCnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyREFycmF5OyAKdW5pZm9ybSBmbG9hdCBtb3JwaFRhcmdldFRleHR1cmVJbmRpY2VzW05VTV9NT1JQSF9JTkZMVUVOQ0VSU107CnVuaWZvcm0gdmVjMyBtb3JwaFRhcmdldFRleHR1cmVJbmZvOwp1bmlmb3JtIHNhbXBsZXIyREFycmF5IG1vcnBoVGFyZ2V0czsKdmVjMyByZWFkVmVjdG9yM0Zyb21SYXdTYW1wbGVyKGludCB0YXJnZXRJbmRleCxmbG9hdCB2ZXJ0ZXhJbmRleCkKeyAKZmxvYXQgeT1mbG9vcih2ZXJ0ZXhJbmRleC9tb3JwaFRhcmdldFRleHR1cmVJbmZvLnkpOwpmbG9hdCB4PXZlcnRleEluZGV4LXkqbW9ycGhUYXJnZXRUZXh0dXJlSW5mby55Owp2ZWMzIHRleHR1cmVVVj12ZWMzKCh4KzAuNSkvbW9ycGhUYXJnZXRUZXh0dXJlSW5mby55LCh5KzAuNSkvbW9ycGhUYXJnZXRUZXh0dXJlSW5mby56LG1vcnBoVGFyZ2V0VGV4dHVyZUluZGljZXNbdGFyZ2V0SW5kZXhdKTsKcmV0dXJuIHRleHR1cmUobW9ycGhUYXJnZXRzLHRleHR1cmVVVikueHl6Owp9CiNlbmRpZgojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW3dhXT1PYTtjb25zdCBMYT0ibW9ycGhUYXJnZXRzVmVydGV4RGVjbGFyYXRpb24iLE5hPWAjaWZkZWYgTU9SUEhUQVJHRVRTCiNpZm5kZWYgTU9SUEhUQVJHRVRTX1RFWFRVUkUKYXR0cmlidXRlIHZlYzMgcG9zaXRpb257WH07CiNpZmRlZiBNT1JQSFRBUkdFVFNfTk9STUFMCmF0dHJpYnV0ZSB2ZWMzIG5vcm1hbHtYfTsKI2VuZGlmCiNpZmRlZiBNT1JQSFRBUkdFVFNfVEFOR0VOVAphdHRyaWJ1dGUgdmVjMyB0YW5nZW50e1h9OwojZW5kaWYKI2lmZGVmIE1PUlBIVEFSR0VUU19VVgphdHRyaWJ1dGUgdmVjMiB1dl97WH07CiNlbmRpZgojZW5kaWYKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtMYV09TmE7Y29uc3QgQmE9ImhlbHBlckZ1bmN0aW9ucyIsVWE9YGNvbnN0IGZsb2F0IFBJPTMuMTQxNTkyNjUzNTg5NzkzMjM4NDYyNjQzMzgzMjc5NTsKY29uc3QgZmxvYXQgSEFMRl9NSU49NS45NjA0NjQ0OGUtMDg7IApjb25zdCBmbG9hdCBMaW5lYXJFbmNvZGVQb3dlckFwcHJveD0yLjI7CmNvbnN0IGZsb2F0IEdhbW1hRW5jb2RlUG93ZXJBcHByb3g9MS4wL0xpbmVhckVuY29kZVBvd2VyQXBwcm94Owpjb25zdCB2ZWMzIEx1bWluYW5jZUVuY29kZUFwcHJveD12ZWMzKDAuMjEyNiwwLjcxNTIsMC4wNzIyKTsKY29uc3QgZmxvYXQgRXBzaWxvbj0wLjAwMDAwMDE7CiNkZWZpbmUgc2F0dXJhdGUoeCkgY2xhbXAoeCwwLjAsMS4wKQojZGVmaW5lIGFic0Vwcyh4KSBhYnMoeCkrRXBzaWxvbgojZGVmaW5lIG1heEVwcyh4KSBtYXgoeCxFcHNpbG9uKQojZGVmaW5lIHNhdHVyYXRlRXBzKHgpIGNsYW1wKHgsRXBzaWxvbiwxLjApCm1hdDMgdHJhbnNwb3NlTWF0MyhtYXQzIGluTWF0cml4KSB7CnZlYzMgaTA9aW5NYXRyaXhbMF07CnZlYzMgaTE9aW5NYXRyaXhbMV07CnZlYzMgaTI9aW5NYXRyaXhbMl07Cm1hdDMgb3V0TWF0cml4PW1hdDMoCnZlYzMoaTAueCxpMS54LGkyLngpLAp2ZWMzKGkwLnksaTEueSxpMi55KSwKdmVjMyhpMC56LGkxLnosaTIueikKKTsKcmV0dXJuIG91dE1hdHJpeDsKfQptYXQzIGludmVyc2VNYXQzKG1hdDMgaW5NYXRyaXgpIHsKZmxvYXQgYTAwPWluTWF0cml4WzBdWzBdLGEwMT1pbk1hdHJpeFswXVsxXSxhMDI9aW5NYXRyaXhbMF1bMl07CmZsb2F0IGExMD1pbk1hdHJpeFsxXVswXSxhMTE9aW5NYXRyaXhbMV1bMV0sYTEyPWluTWF0cml4WzFdWzJdOwpmbG9hdCBhMjA9aW5NYXRyaXhbMl1bMF0sYTIxPWluTWF0cml4WzJdWzFdLGEyMj1pbk1hdHJpeFsyXVsyXTsKZmxvYXQgYjAxPWEyMiphMTEtYTEyKmEyMTsKZmxvYXQgYjExPS1hMjIqYTEwK2ExMiphMjA7CmZsb2F0IGIyMT1hMjEqYTEwLWExMSphMjA7CmZsb2F0IGRldD1hMDAqYjAxK2EwMSpiMTErYTAyKmIyMTsKcmV0dXJuIG1hdDMoYjAxLCgtYTIyKmEwMSthMDIqYTIxKSwoYTEyKmEwMS1hMDIqYTExKSwKYjExLChhMjIqYTAwLWEwMiphMjApLCgtYTEyKmEwMCthMDIqYTEwKSwKYjIxLCgtYTIxKmEwMCthMDEqYTIwKSwoYTExKmEwMC1hMDEqYTEwKSkvZGV0Owp9CiNpZiBVU0VfRVhBQ1RfU1JHQl9DT05WRVJTSU9OUwp2ZWMzIHRvTGluZWFyU3BhY2VFeGFjdCh2ZWMzIGNvbG9yKQp7CnZlYzMgbmVhclplcm9TZWN0aW9uPTAuMDc3Mzk5MzgwOCpjb2xvcjsKdmVjMyByZW1haW5pbmdTZWN0aW9uPXBvdygwLjk0Nzg2NzI5OSooY29sb3IrdmVjMygwLjA1NSkpLHZlYzMoMi40KSk7CiNpZiBkZWZpbmVkKFdFQkdMMikgfHwgZGVmaW5lZChXRUJHUFUpIHx8IGRlZmluZWQoTkFUSVZFKQpyZXR1cm4gbWl4KHJlbWFpbmluZ1NlY3Rpb24sbmVhclplcm9TZWN0aW9uLGxlc3NUaGFuRXF1YWwoY29sb3IsdmVjMygwLjA0MDQ1KSkpOwojZWxzZQpyZXR1cm4KdmVjMygKY29sb3Iucjw9MC4wNDA0NSA/IG5lYXJaZXJvU2VjdGlvbi5yIDogcmVtYWluaW5nU2VjdGlvbi5yLApjb2xvci5nPD0wLjA0MDQ1ID8gbmVhclplcm9TZWN0aW9uLmcgOiByZW1haW5pbmdTZWN0aW9uLmcsCmNvbG9yLmI8PTAuMDQwNDUgPyBuZWFyWmVyb1NlY3Rpb24uYiA6IHJlbWFpbmluZ1NlY3Rpb24uYik7CiNlbmRpZgp9CnZlYzMgdG9HYW1tYVNwYWNlRXhhY3QodmVjMyBjb2xvcikKewp2ZWMzIG5lYXJaZXJvU2VjdGlvbj0xMi45Mipjb2xvcjsKdmVjMyByZW1haW5pbmdTZWN0aW9uPTEuMDU1KnBvdyhjb2xvcix2ZWMzKDAuNDE2NjYpKS12ZWMzKDAuMDU1KTsKI2lmIGRlZmluZWQoV0VCR0wyKSB8fCBkZWZpbmVkKFdFQkdQVSkgfHwgZGVmaW5lZChOQVRJVkUpCnJldHVybiBtaXgocmVtYWluaW5nU2VjdGlvbixuZWFyWmVyb1NlY3Rpb24sbGVzc1RoYW5FcXVhbChjb2xvcix2ZWMzKDAuMDAzMTMwOCkpKTsKI2Vsc2UKcmV0dXJuCnZlYzMoCmNvbG9yLnI8PTAuMDAzMTMwOCA/IG5lYXJaZXJvU2VjdGlvbi5yIDogcmVtYWluaW5nU2VjdGlvbi5yLApjb2xvci5nPD0wLjAwMzEzMDggPyBuZWFyWmVyb1NlY3Rpb24uZyA6IHJlbWFpbmluZ1NlY3Rpb24uZywKY29sb3IuYjw9MC4wMDMxMzA4ID8gbmVhclplcm9TZWN0aW9uLmIgOiByZW1haW5pbmdTZWN0aW9uLmIpOwojZW5kaWYKfQojZW5kaWYKZmxvYXQgdG9MaW5lYXJTcGFjZShmbG9hdCBjb2xvcikKewojaWYgVVNFX0VYQUNUX1NSR0JfQ09OVkVSU0lPTlMKZmxvYXQgbmVhclplcm9TZWN0aW9uPTAuMDc3Mzk5MzgwOCpjb2xvcjsKZmxvYXQgcmVtYWluaW5nU2VjdGlvbj1wb3coMC45NDc4NjcyOTkqKGNvbG9yKzAuMDU1KSwyLjQpOwpyZXR1cm4gY29sb3I8PTAuMDQwNDUgPyBuZWFyWmVyb1NlY3Rpb24gOiByZW1haW5pbmdTZWN0aW9uOwojZWxzZQpyZXR1cm4gcG93KGNvbG9yLExpbmVhckVuY29kZVBvd2VyQXBwcm94KTsKI2VuZGlmCn0KdmVjMyB0b0xpbmVhclNwYWNlKHZlYzMgY29sb3IpCnsKI2lmIFVTRV9FWEFDVF9TUkdCX0NPTlZFUlNJT05TCnJldHVybiB0b0xpbmVhclNwYWNlRXhhY3QoY29sb3IpOwojZWxzZQpyZXR1cm4gcG93KGNvbG9yLHZlYzMoTGluZWFyRW5jb2RlUG93ZXJBcHByb3gpKTsKI2VuZGlmCn0KdmVjNCB0b0xpbmVhclNwYWNlKHZlYzQgY29sb3IpCnsKI2lmIFVTRV9FWEFDVF9TUkdCX0NPTlZFUlNJT05TCnJldHVybiB2ZWM0KHRvTGluZWFyU3BhY2VFeGFjdChjb2xvci5yZ2IpLGNvbG9yLmEpOwojZWxzZQpyZXR1cm4gdmVjNChwb3coY29sb3IucmdiLHZlYzMoTGluZWFyRW5jb2RlUG93ZXJBcHByb3gpKSxjb2xvci5hKTsKI2VuZGlmCn0KZmxvYXQgdG9HYW1tYVNwYWNlKGZsb2F0IGNvbG9yKQp7CiNpZiBVU0VfRVhBQ1RfU1JHQl9DT05WRVJTSU9OUwpmbG9hdCBuZWFyWmVyb1NlY3Rpb249MTIuOTIqY29sb3I7CmZsb2F0IHJlbWFpbmluZ1NlY3Rpb249MS4wNTUqcG93KGNvbG9yLDAuNDE2NjYpLTAuMDU1OwpyZXR1cm4gY29sb3I8PTAuMDAzMTMwOCA/IG5lYXJaZXJvU2VjdGlvbiA6IHJlbWFpbmluZ1NlY3Rpb247CiNlbHNlCnJldHVybiBwb3coY29sb3IsR2FtbWFFbmNvZGVQb3dlckFwcHJveCk7CiNlbmRpZgp9CnZlYzMgdG9HYW1tYVNwYWNlKHZlYzMgY29sb3IpCnsKI2lmIFVTRV9FWEFDVF9TUkdCX0NPTlZFUlNJT05TCnJldHVybiB0b0dhbW1hU3BhY2VFeGFjdChjb2xvcik7CiNlbHNlCnJldHVybiBwb3coY29sb3IsdmVjMyhHYW1tYUVuY29kZVBvd2VyQXBwcm94KSk7CiNlbmRpZgp9CnZlYzQgdG9HYW1tYVNwYWNlKHZlYzQgY29sb3IpCnsKI2lmIFVTRV9FWEFDVF9TUkdCX0NPTlZFUlNJT05TCnJldHVybiB2ZWM0KHRvR2FtbWFTcGFjZUV4YWN0KGNvbG9yLnJnYiksY29sb3IuYSk7CiNlbHNlCnJldHVybiB2ZWM0KHBvdyhjb2xvci5yZ2IsdmVjMyhHYW1tYUVuY29kZVBvd2VyQXBwcm94KSksY29sb3IuYSk7CiNlbmRpZgp9CmZsb2F0IHNxdWFyZShmbG9hdCB2YWx1ZSkKewpyZXR1cm4gdmFsdWUqdmFsdWU7Cn0KdmVjMyBzcXVhcmUodmVjMyB2YWx1ZSkKewpyZXR1cm4gdmFsdWUqdmFsdWU7Cn0KZmxvYXQgcG93NShmbG9hdCB2YWx1ZSkgewpmbG9hdCBzcT12YWx1ZSp2YWx1ZTsKcmV0dXJuIHNxKnNxKnZhbHVlOwp9CmZsb2F0IGdldEx1bWluYW5jZSh2ZWMzIGNvbG9yKQp7CnJldHVybiBjbGFtcChkb3QoY29sb3IsTHVtaW5hbmNlRW5jb2RlQXBwcm94KSwwLiwxLik7Cn0KZmxvYXQgZ2V0UmFuZCh2ZWMyIHNlZWQpIHsKcmV0dXJuIGZyYWN0KHNpbihkb3Qoc2VlZC54eSAsdmVjMigxMi45ODk4LDc4LjIzMykpKSo0Mzc1OC41NDUzKTsKfQpmbG9hdCBkaXRoZXIodmVjMiBzZWVkLGZsb2F0IHZhcmlhbmNlQW1vdW50KSB7CmZsb2F0IHJhbmQ9Z2V0UmFuZChzZWVkKTsKZmxvYXQgbm9ybVZhcmlhbmNlPXZhcmlhbmNlQW1vdW50LzI1NS4wOwpmbG9hdCBkaXRoZXI9bWl4KC1ub3JtVmFyaWFuY2Usbm9ybVZhcmlhbmNlLHJhbmQpOwpyZXR1cm4gZGl0aGVyOwp9CmNvbnN0IGZsb2F0IHJnYmRNYXhSYW5nZT0yNTUuMDsKdmVjNCB0b1JHQkQodmVjMyBjb2xvcikgewpmbG9hdCBtYXhSR0I9bWF4RXBzKG1heChjb2xvci5yLG1heChjb2xvci5nLGNvbG9yLmIpKSk7CmZsb2F0IEQgPW1heChyZ2JkTWF4UmFuZ2UvbWF4UkdCLDEuKTsKRCA9Y2xhbXAoZmxvb3IoRCkvMjU1LjAsMC4sMS4pOwp2ZWMzIHJnYj1jb2xvci5yZ2IqRDsKcmdiPXRvR2FtbWFTcGFjZShyZ2IpOwpyZXR1cm4gdmVjNChjbGFtcChyZ2IsMC4sMS4pLEQpOyAKfQp2ZWMzIGZyb21SR0JEKHZlYzQgcmdiZCkgewpyZ2JkLnJnYj10b0xpbmVhclNwYWNlKHJnYmQucmdiKTsKcmV0dXJuIHJnYmQucmdiL3JnYmQuYTsKfQp2ZWMzIHBhcmFsbGF4Q29ycmVjdE5vcm1hbCggdmVjMyB2ZXJ0ZXhQb3MsdmVjMyBvcmlnVmVjLHZlYzMgY3ViZVNpemUsdmVjMyBjdWJlUG9zICkgewp2ZWMzIGludk9yaWdWZWM9dmVjMygxLjAsMS4wLDEuMCkvb3JpZ1ZlYzsKdmVjMyBoYWxmU2l6ZT1jdWJlU2l6ZSowLjU7CnZlYzMgaW50ZXJzZWNBdE1heFBsYW5lPShjdWJlUG9zK2hhbGZTaXplLXZlcnRleFBvcykqaW52T3JpZ1ZlYzsKdmVjMyBpbnRlcnNlY0F0TWluUGxhbmU9KGN1YmVQb3MtaGFsZlNpemUtdmVydGV4UG9zKSppbnZPcmlnVmVjOwp2ZWMzIGxhcmdlc3RJbnRlcnNlYz1tYXgoaW50ZXJzZWNBdE1heFBsYW5lLGludGVyc2VjQXRNaW5QbGFuZSk7CmZsb2F0IGRpc3RhbmNlPW1pbihtaW4obGFyZ2VzdEludGVyc2VjLngsbGFyZ2VzdEludGVyc2VjLnkpLGxhcmdlc3RJbnRlcnNlYy56KTsKdmVjMyBpbnRlcnNlY3RQb3NpdGlvbldTPXZlcnRleFBvcytvcmlnVmVjKmRpc3RhbmNlOwpyZXR1cm4gaW50ZXJzZWN0UG9zaXRpb25XUy1jdWJlUG9zOwp9CmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtCYV09VWE7Y29uc3Qga2E9InNjZW5lVmVydGV4RGVjbGFyYXRpb24iLFZhPWB1bmlmb3JtIG1hdDQgdmlld1Byb2plY3Rpb247CiNpZmRlZiBNVUxUSVZJRVcKdW5pZm9ybSBtYXQ0IHZpZXdQcm9qZWN0aW9uUjsKI2VuZGlmCnVuaWZvcm0gbWF0NCB2aWV3Owp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSB2ZWM0IHZFeWVQb3NpdGlvbjsKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW2thXT1WYTtjb25zdCBXYT0ibWVzaFZlcnRleERlY2xhcmF0aW9uIix6YT1gdW5pZm9ybSBtYXQ0IHdvcmxkOwp1bmlmb3JtIGZsb2F0IHZpc2liaWxpdHk7CmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtXYV09emE7Y29uc3QgR2E9InNoYWRvd01hcFZlcnRleERlY2xhcmF0aW9uIixYYT1gI2luY2x1ZGU8c2NlbmVWZXJ0ZXhEZWNsYXJhdGlvbj4KI2luY2x1ZGU8bWVzaFZlcnRleERlY2xhcmF0aW9uPgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbR2FdPVhhO2NvbnN0IEhhPSJzY2VuZVVib0RlY2xhcmF0aW9uIixLYT1gbGF5b3V0KHN0ZDE0MCxjb2x1bW5fbWFqb3IpIHVuaWZvcm07CnVuaWZvcm0gU2NlbmUgewptYXQ0IHZpZXdQcm9qZWN0aW9uOwojaWZkZWYgTVVMVElWSUVXCm1hdDQgdmlld1Byb2plY3Rpb25SOwojZW5kaWYgCm1hdDQgdmlldzsKbWF0NCBwcm9qZWN0aW9uOwp2ZWM0IHZFeWVQb3NpdGlvbjsKfTsKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW0hhXT1LYTtjb25zdCBZYT0ibWVzaFVib0RlY2xhcmF0aW9uIixaYT1gI2lmZGVmIFdFQkdMMgp1bmlmb3JtIG1hdDQgd29ybGQ7CnVuaWZvcm0gZmxvYXQgdmlzaWJpbGl0eTsKI2Vsc2UKbGF5b3V0KHN0ZDE0MCxjb2x1bW5fbWFqb3IpIHVuaWZvcm07CnVuaWZvcm0gTWVzaAp7Cm1hdDQgd29ybGQ7CmZsb2F0IHZpc2liaWxpdHk7Cn07CiNlbmRpZgojZGVmaW5lIFdPUkxEX1VCTwpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbWWFdPVphO2NvbnN0IHFhPSJzaGFkb3dNYXBVYm9EZWNsYXJhdGlvbiIsamE9YGxheW91dChzdGQxNDAsY29sdW1uX21ham9yKSB1bmlmb3JtOwojaW5jbHVkZTxzY2VuZVVib0RlY2xhcmF0aW9uPgojaW5jbHVkZTxtZXNoVWJvRGVjbGFyYXRpb24+CmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtxYV09amE7Y29uc3QgJGE9InNoYWRvd01hcFZlcnRleEV4dHJhRGVjbGFyYXRpb24iLFFhPWAjaWYgU01fTk9STUFMQklBUz09MQp1bmlmb3JtIHZlYzMgbGlnaHREYXRhU007CiNlbmRpZgp1bmlmb3JtIHZlYzMgYmlhc0FuZFNjYWxlU007CnVuaWZvcm0gdmVjMiBkZXB0aFZhbHVlc1NNOwp2YXJ5aW5nIGZsb2F0IHZEZXB0aE1ldHJpY1NNOwojaWYgU01fVVNFRElTVEFOQ0U9PTEKdmFyeWluZyB2ZWMzIHZQb3NpdGlvbldTTTsKI2VuZGlmCiNpZiBkZWZpbmVkKFNNX0RFUFRIQ0xBTVApICYmIFNNX0RFUFRIQ0xBTVA9PTEKdmFyeWluZyBmbG9hdCB6U007CiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbJGFdPVFhO2NvbnN0IEphPSJjbGlwUGxhbmVWZXJ0ZXhEZWNsYXJhdGlvbiIsZW89YCNpZmRlZiBDTElQUExBTkUKdW5pZm9ybSB2ZWM0IHZDbGlwUGxhbmU7CnZhcnlpbmcgZmxvYXQgZkNsaXBEaXN0YW5jZTsKI2VuZGlmCiNpZmRlZiBDTElQUExBTkUyCnVuaWZvcm0gdmVjNCB2Q2xpcFBsYW5lMjsKdmFyeWluZyBmbG9hdCBmQ2xpcERpc3RhbmNlMjsKI2VuZGlmCiNpZmRlZiBDTElQUExBTkUzCnVuaWZvcm0gdmVjNCB2Q2xpcFBsYW5lMzsKdmFyeWluZyBmbG9hdCBmQ2xpcERpc3RhbmNlMzsKI2VuZGlmCiNpZmRlZiBDTElQUExBTkU0CnVuaWZvcm0gdmVjNCB2Q2xpcFBsYW5lNDsKdmFyeWluZyBmbG9hdCBmQ2xpcERpc3RhbmNlNDsKI2VuZGlmCiNpZmRlZiBDTElQUExBTkU1CnVuaWZvcm0gdmVjNCB2Q2xpcFBsYW5lNTsKdmFyeWluZyBmbG9hdCBmQ2xpcERpc3RhbmNlNTsKI2VuZGlmCiNpZmRlZiBDTElQUExBTkU2CnVuaWZvcm0gdmVjNCB2Q2xpcFBsYW5lNjsKdmFyeWluZyBmbG9hdCBmQ2xpcERpc3RhbmNlNjsKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtKYV09ZW87Y29uc3QgdG89Im1vcnBoVGFyZ2V0c1ZlcnRleEdsb2JhbCIsaW89YCNpZmRlZiBNT1JQSFRBUkdFVFMKI2lmZGVmIE1PUlBIVEFSR0VUU19URVhUVVJFCmZsb2F0IHZlcnRleElEOwojZW5kaWYKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVt0b109aW87Y29uc3Qgc289Im1vcnBoVGFyZ2V0c1ZlcnRleCIscm89YCNpZmRlZiBNT1JQSFRBUkdFVFMKI2lmZGVmIE1PUlBIVEFSR0VUU19URVhUVVJFIAp2ZXJ0ZXhJRD1mbG9hdChnbF9WZXJ0ZXhJRCkqbW9ycGhUYXJnZXRUZXh0dXJlSW5mby54Owpwb3NpdGlvblVwZGF0ZWQrPShyZWFkVmVjdG9yM0Zyb21SYXdTYW1wbGVyKHtYfSx2ZXJ0ZXhJRCktcG9zaXRpb24pKm1vcnBoVGFyZ2V0SW5mbHVlbmNlc1t7WH1dOwp2ZXJ0ZXhJRCs9MS4wOwojaWZkZWYgTU9SUEhUQVJHRVRTX05PUk1BTApub3JtYWxVcGRhdGVkKz0ocmVhZFZlY3RvcjNGcm9tUmF3U2FtcGxlcih7WH0sdmVydGV4SUQpIC1ub3JtYWwpKm1vcnBoVGFyZ2V0SW5mbHVlbmNlc1t7WH1dOwp2ZXJ0ZXhJRCs9MS4wOwojZW5kaWYKI2lmZGVmIE1PUlBIVEFSR0VUU19VVgp1dlVwZGF0ZWQrPShyZWFkVmVjdG9yM0Zyb21SYXdTYW1wbGVyKHtYfSx2ZXJ0ZXhJRCkueHktdXYpKm1vcnBoVGFyZ2V0SW5mbHVlbmNlc1t7WH1dOwp2ZXJ0ZXhJRCs9MS4wOwojZW5kaWYKI2lmZGVmIE1PUlBIVEFSR0VUU19UQU5HRU5UCnRhbmdlbnRVcGRhdGVkLnh5eis9KHJlYWRWZWN0b3IzRnJvbVJhd1NhbXBsZXIoe1h9LHZlcnRleElEKSAtdGFuZ2VudC54eXopKm1vcnBoVGFyZ2V0SW5mbHVlbmNlc1t7WH1dOwojZW5kaWYKI2Vsc2UKcG9zaXRpb25VcGRhdGVkKz0ocG9zaXRpb257WH0tcG9zaXRpb24pKm1vcnBoVGFyZ2V0SW5mbHVlbmNlc1t7WH1dOwojaWZkZWYgTU9SUEhUQVJHRVRTX05PUk1BTApub3JtYWxVcGRhdGVkKz0obm9ybWFse1h9LW5vcm1hbCkqbW9ycGhUYXJnZXRJbmZsdWVuY2VzW3tYfV07CiNlbmRpZgojaWZkZWYgTU9SUEhUQVJHRVRTX1RBTkdFTlQKdGFuZ2VudFVwZGF0ZWQueHl6Kz0odGFuZ2VudHtYfS10YW5nZW50Lnh5eikqbW9ycGhUYXJnZXRJbmZsdWVuY2VzW3tYfV07CiNlbmRpZgojaWZkZWYgTU9SUEhUQVJHRVRTX1VWCnV2VXBkYXRlZCs9KHV2X3tYfS11dikqbW9ycGhUYXJnZXRJbmZsdWVuY2VzW3tYfV07CiNlbmRpZgojZW5kaWYKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtzb109cm87Y29uc3Qgbm89Imluc3RhbmNlc1ZlcnRleCIsYW89YCNpZmRlZiBJTlNUQU5DRVMKbWF0NCBmaW5hbFdvcmxkPW1hdDQod29ybGQwLHdvcmxkMSx3b3JsZDIsd29ybGQzKTsKI2lmIGRlZmluZWQoUFJFUEFTU19WRUxPQ0lUWSkgfHwgZGVmaW5lZChWRUxPQ0lUWSkKbWF0NCBmaW5hbFByZXZpb3VzV29ybGQ9bWF0NChwcmV2aW91c1dvcmxkMCxwcmV2aW91c1dvcmxkMSxwcmV2aW91c1dvcmxkMixwcmV2aW91c1dvcmxkMyk7CiNlbmRpZgojaWZkZWYgVEhJTl9JTlNUQU5DRVMKZmluYWxXb3JsZD13b3JsZCpmaW5hbFdvcmxkOwojaWYgZGVmaW5lZChQUkVQQVNTX1ZFTE9DSVRZKSB8fCBkZWZpbmVkKFZFTE9DSVRZKQpmaW5hbFByZXZpb3VzV29ybGQ9cHJldmlvdXNXb3JsZCpmaW5hbFByZXZpb3VzV29ybGQ7CiNlbmRpZgojZW5kaWYKI2Vsc2UKbWF0NCBmaW5hbFdvcmxkPXdvcmxkOwojaWYgZGVmaW5lZChQUkVQQVNTX1ZFTE9DSVRZKSB8fCBkZWZpbmVkKFZFTE9DSVRZKQptYXQ0IGZpbmFsUHJldmlvdXNXb3JsZD1wcmV2aW91c1dvcmxkOwojZW5kaWYKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtub109YW87Y29uc3Qgb289ImJvbmVzVmVydGV4Iixobz1gI2lmbmRlZiBCQUtFRF9WRVJURVhfQU5JTUFUSU9OX1RFWFRVUkUKI2lmIE5VTV9CT05FX0lORkxVRU5DRVJTPjAKbWF0NCBpbmZsdWVuY2U7CiNpZmRlZiBCT05FVEVYVFVSRQppbmZsdWVuY2U9cmVhZE1hdHJpeEZyb21SYXdTYW1wbGVyKGJvbmVTYW1wbGVyLG1hdHJpY2VzSW5kaWNlc1swXSkqbWF0cmljZXNXZWlnaHRzWzBdOwojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+MQppbmZsdWVuY2UrPXJlYWRNYXRyaXhGcm9tUmF3U2FtcGxlcihib25lU2FtcGxlcixtYXRyaWNlc0luZGljZXNbMV0pKm1hdHJpY2VzV2VpZ2h0c1sxXTsKI2VuZGlmCiNpZiBOVU1fQk9ORV9JTkZMVUVOQ0VSUz4yCmluZmx1ZW5jZSs9cmVhZE1hdHJpeEZyb21SYXdTYW1wbGVyKGJvbmVTYW1wbGVyLG1hdHJpY2VzSW5kaWNlc1syXSkqbWF0cmljZXNXZWlnaHRzWzJdOwojZW5kaWYKI2lmIE5VTV9CT05FX0lORkxVRU5DRVJTPjMKaW5mbHVlbmNlKz1yZWFkTWF0cml4RnJvbVJhd1NhbXBsZXIoYm9uZVNhbXBsZXIsbWF0cmljZXNJbmRpY2VzWzNdKSptYXRyaWNlc1dlaWdodHNbM107CiNlbmRpZgojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+NAppbmZsdWVuY2UrPXJlYWRNYXRyaXhGcm9tUmF3U2FtcGxlcihib25lU2FtcGxlcixtYXRyaWNlc0luZGljZXNFeHRyYVswXSkqbWF0cmljZXNXZWlnaHRzRXh0cmFbMF07CiNlbmRpZgojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+NQppbmZsdWVuY2UrPXJlYWRNYXRyaXhGcm9tUmF3U2FtcGxlcihib25lU2FtcGxlcixtYXRyaWNlc0luZGljZXNFeHRyYVsxXSkqbWF0cmljZXNXZWlnaHRzRXh0cmFbMV07CiNlbmRpZgojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+NgppbmZsdWVuY2UrPXJlYWRNYXRyaXhGcm9tUmF3U2FtcGxlcihib25lU2FtcGxlcixtYXRyaWNlc0luZGljZXNFeHRyYVsyXSkqbWF0cmljZXNXZWlnaHRzRXh0cmFbMl07CiNlbmRpZgojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+NwppbmZsdWVuY2UrPXJlYWRNYXRyaXhGcm9tUmF3U2FtcGxlcihib25lU2FtcGxlcixtYXRyaWNlc0luZGljZXNFeHRyYVszXSkqbWF0cmljZXNXZWlnaHRzRXh0cmFbM107CiNlbmRpZgojZWxzZQppbmZsdWVuY2U9bUJvbmVzW2ludChtYXRyaWNlc0luZGljZXNbMF0pXSptYXRyaWNlc1dlaWdodHNbMF07CiNpZiBOVU1fQk9ORV9JTkZMVUVOQ0VSUz4xCmluZmx1ZW5jZSs9bUJvbmVzW2ludChtYXRyaWNlc0luZGljZXNbMV0pXSptYXRyaWNlc1dlaWdodHNbMV07CiNlbmRpZgojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+MgppbmZsdWVuY2UrPW1Cb25lc1tpbnQobWF0cmljZXNJbmRpY2VzWzJdKV0qbWF0cmljZXNXZWlnaHRzWzJdOwojZW5kaWYKI2lmIE5VTV9CT05FX0lORkxVRU5DRVJTPjMKaW5mbHVlbmNlKz1tQm9uZXNbaW50KG1hdHJpY2VzSW5kaWNlc1szXSldKm1hdHJpY2VzV2VpZ2h0c1szXTsKI2VuZGlmCiNpZiBOVU1fQk9ORV9JTkZMVUVOQ0VSUz40CmluZmx1ZW5jZSs9bUJvbmVzW2ludChtYXRyaWNlc0luZGljZXNFeHRyYVswXSldKm1hdHJpY2VzV2VpZ2h0c0V4dHJhWzBdOwojZW5kaWYKI2lmIE5VTV9CT05FX0lORkxVRU5DRVJTPjUKaW5mbHVlbmNlKz1tQm9uZXNbaW50KG1hdHJpY2VzSW5kaWNlc0V4dHJhWzFdKV0qbWF0cmljZXNXZWlnaHRzRXh0cmFbMV07CiNlbmRpZgojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+NgppbmZsdWVuY2UrPW1Cb25lc1tpbnQobWF0cmljZXNJbmRpY2VzRXh0cmFbMl0pXSptYXRyaWNlc1dlaWdodHNFeHRyYVsyXTsKI2VuZGlmCiNpZiBOVU1fQk9ORV9JTkZMVUVOQ0VSUz43CmluZmx1ZW5jZSs9bUJvbmVzW2ludChtYXRyaWNlc0luZGljZXNFeHRyYVszXSldKm1hdHJpY2VzV2VpZ2h0c0V4dHJhWzNdOwojZW5kaWYKI2VuZGlmCmZpbmFsV29ybGQ9ZmluYWxXb3JsZCppbmZsdWVuY2U7CiNlbmRpZgojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW29vXT1obztjb25zdCBsbz0iYmFrZWRWZXJ0ZXhBbmltYXRpb24iLGNvPWAjaWZkZWYgQkFLRURfVkVSVEVYX0FOSU1BVElPTl9URVhUVVJFCnsKI2lmZGVmIElOU1RBTkNFUwojZGVmaW5lIEJWQVNOQU1FIGJha2VkVmVydGV4QW5pbWF0aW9uU2V0dGluZ3NJbnN0YW5jZWQKI2Vsc2UKI2RlZmluZSBCVkFTTkFNRSBiYWtlZFZlcnRleEFuaW1hdGlvblNldHRpbmdzCiNlbmRpZgpmbG9hdCBWQVRTdGFydEZyYW1lPUJWQVNOQU1FLng7CmZsb2F0IFZBVEVuZEZyYW1lPUJWQVNOQU1FLnk7CmZsb2F0IFZBVE9mZnNldEZyYW1lPUJWQVNOQU1FLno7CmZsb2F0IFZBVFNwZWVkPUJWQVNOQU1FLnc7CmZsb2F0IHRvdGFsRnJhbWVzPVZBVEVuZEZyYW1lLVZBVFN0YXJ0RnJhbWUrMS4wOwpmbG9hdCB0aW1lPWJha2VkVmVydGV4QW5pbWF0aW9uVGltZSpWQVRTcGVlZC90b3RhbEZyYW1lczsKZmxvYXQgZnJhbWVDb3JyZWN0aW9uPXRpbWU8MS4wID8gMC4wIDogMS4wOwpmbG9hdCBudW1PZkZyYW1lcz10b3RhbEZyYW1lcy1mcmFtZUNvcnJlY3Rpb247CmZsb2F0IFZBVEZyYW1lTnVtPWZyYWN0KHRpbWUpKm51bU9mRnJhbWVzOwpWQVRGcmFtZU51bT1tb2QoVkFURnJhbWVOdW0rVkFUT2Zmc2V0RnJhbWUsbnVtT2ZGcmFtZXMpOwpWQVRGcmFtZU51bT1mbG9vcihWQVRGcmFtZU51bSk7ClZBVEZyYW1lTnVtKz1WQVRTdGFydEZyYW1lK2ZyYW1lQ29ycmVjdGlvbjsKbWF0NCBWQVRJbmZsdWVuY2U7ClZBVEluZmx1ZW5jZT1yZWFkTWF0cml4RnJvbVJhd1NhbXBsZXJWQVQoYmFrZWRWZXJ0ZXhBbmltYXRpb25UZXh0dXJlLG1hdHJpY2VzSW5kaWNlc1swXSxWQVRGcmFtZU51bSkqbWF0cmljZXNXZWlnaHRzWzBdOwojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+MQpWQVRJbmZsdWVuY2UrPXJlYWRNYXRyaXhGcm9tUmF3U2FtcGxlclZBVChiYWtlZFZlcnRleEFuaW1hdGlvblRleHR1cmUsbWF0cmljZXNJbmRpY2VzWzFdLFZBVEZyYW1lTnVtKSptYXRyaWNlc1dlaWdodHNbMV07CiNlbmRpZgojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+MgpWQVRJbmZsdWVuY2UrPXJlYWRNYXRyaXhGcm9tUmF3U2FtcGxlclZBVChiYWtlZFZlcnRleEFuaW1hdGlvblRleHR1cmUsbWF0cmljZXNJbmRpY2VzWzJdLFZBVEZyYW1lTnVtKSptYXRyaWNlc1dlaWdodHNbMl07CiNlbmRpZgojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+MwpWQVRJbmZsdWVuY2UrPXJlYWRNYXRyaXhGcm9tUmF3U2FtcGxlclZBVChiYWtlZFZlcnRleEFuaW1hdGlvblRleHR1cmUsbWF0cmljZXNJbmRpY2VzWzNdLFZBVEZyYW1lTnVtKSptYXRyaWNlc1dlaWdodHNbM107CiNlbmRpZgojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+NApWQVRJbmZsdWVuY2UrPXJlYWRNYXRyaXhGcm9tUmF3U2FtcGxlclZBVChiYWtlZFZlcnRleEFuaW1hdGlvblRleHR1cmUsbWF0cmljZXNJbmRpY2VzRXh0cmFbMF0sVkFURnJhbWVOdW0pKm1hdHJpY2VzV2VpZ2h0c0V4dHJhWzBdOwojZW5kaWYKI2lmIE5VTV9CT05FX0lORkxVRU5DRVJTPjUKVkFUSW5mbHVlbmNlKz1yZWFkTWF0cml4RnJvbVJhd1NhbXBsZXJWQVQoYmFrZWRWZXJ0ZXhBbmltYXRpb25UZXh0dXJlLG1hdHJpY2VzSW5kaWNlc0V4dHJhWzFdLFZBVEZyYW1lTnVtKSptYXRyaWNlc1dlaWdodHNFeHRyYVsxXTsKI2VuZGlmCiNpZiBOVU1fQk9ORV9JTkZMVUVOQ0VSUz42ClZBVEluZmx1ZW5jZSs9cmVhZE1hdHJpeEZyb21SYXdTYW1wbGVyVkFUKGJha2VkVmVydGV4QW5pbWF0aW9uVGV4dHVyZSxtYXRyaWNlc0luZGljZXNFeHRyYVsyXSxWQVRGcmFtZU51bSkqbWF0cmljZXNXZWlnaHRzRXh0cmFbMl07CiNlbmRpZgojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+NwpWQVRJbmZsdWVuY2UrPXJlYWRNYXRyaXhGcm9tUmF3U2FtcGxlclZBVChiYWtlZFZlcnRleEFuaW1hdGlvblRleHR1cmUsbWF0cmljZXNJbmRpY2VzRXh0cmFbM10sVkFURnJhbWVOdW0pKm1hdHJpY2VzV2VpZ2h0c0V4dHJhWzNdOwojZW5kaWYKZmluYWxXb3JsZD1maW5hbFdvcmxkKlZBVEluZmx1ZW5jZTsKfQojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW2xvXT1jbztjb25zdCB1bz0ic2hhZG93TWFwVmVydGV4Tm9ybWFsQmlhcyIsZm89YCNpZiBTTV9OT1JNQUxCSUFTPT0xCiNpZiBTTV9ESVJFQ1RJT05JTkxJR0hUREFUQT09MQp2ZWMzIHdvcmxkTGlnaHREaXJTTT1ub3JtYWxpemUoLWxpZ2h0RGF0YVNNLnh5eik7CiNlbHNlCnZlYzMgZGlyZWN0aW9uVG9MaWdodFNNPWxpZ2h0RGF0YVNNLnh5ei13b3JsZFBvcy54eXo7CnZlYzMgd29ybGRMaWdodERpclNNPW5vcm1hbGl6ZShkaXJlY3Rpb25Ub0xpZ2h0U00pOwojZW5kaWYKZmxvYXQgbmRsU009ZG90KHZOb3JtYWxXLHdvcmxkTGlnaHREaXJTTSk7CmZsb2F0IHNpbk5MU009c3FydCgxLjAtbmRsU00qbmRsU00pOwpmbG9hdCBub3JtYWxCaWFzU009Ymlhc0FuZFNjYWxlU00ueSpzaW5OTFNNOwp3b3JsZFBvcy54eXotPXZOb3JtYWxXKm5vcm1hbEJpYXNTTTsKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVt1b109Zm87Y29uc3QgX289InNoYWRvd01hcFZlcnRleE1ldHJpYyIsZ289YCNpZiBTTV9VU0VESVNUQU5DRT09MQp2UG9zaXRpb25XU009d29ybGRQb3MueHl6OwojZW5kaWYKI2lmIFNNX0RFUFRIVEVYVFVSRT09MQojaWZkZWYgSVNfTkRDX0hBTEZfWlJBTkdFCiNkZWZpbmUgQklBU0ZBQ1RPUiAwLjUKI2Vsc2UKI2RlZmluZSBCSUFTRkFDVE9SIDEuMAojZW5kaWYKI2lmZGVmIFVTRV9SRVZFUlNFX0RFUFRIQlVGRkVSCmdsX1Bvc2l0aW9uLnotPWJpYXNBbmRTY2FsZVNNLngqZ2xfUG9zaXRpb24udypCSUFTRkFDVE9SOwojZWxzZQpnbF9Qb3NpdGlvbi56Kz1iaWFzQW5kU2NhbGVTTS54KmdsX1Bvc2l0aW9uLncqQklBU0ZBQ1RPUjsKI2VuZGlmCiNlbmRpZgojaWYgZGVmaW5lZChTTV9ERVBUSENMQU1QKSAmJiBTTV9ERVBUSENMQU1QPT0xCnpTTT1nbF9Qb3NpdGlvbi56OwpnbF9Qb3NpdGlvbi56PTAuMDsKI2VsaWYgU01fVVNFRElTVEFOQ0U9PTAKI2lmZGVmIFVTRV9SRVZFUlNFX0RFUFRIQlVGRkVSCnZEZXB0aE1ldHJpY1NNPSgtZ2xfUG9zaXRpb24ueitkZXB0aFZhbHVlc1NNLngpL2RlcHRoVmFsdWVzU00ueStiaWFzQW5kU2NhbGVTTS54OwojZWxzZQp2RGVwdGhNZXRyaWNTTT0oZ2xfUG9zaXRpb24ueitkZXB0aFZhbHVlc1NNLngpL2RlcHRoVmFsdWVzU00ueStiaWFzQW5kU2NhbGVTTS54OwojZW5kaWYKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtfb109Z287Y29uc3QgcG89ImNsaXBQbGFuZVZlcnRleCIsbW89YCNpZmRlZiBDTElQUExBTkUKZkNsaXBEaXN0YW5jZT1kb3Qod29ybGRQb3MsdkNsaXBQbGFuZSk7CiNlbmRpZgojaWZkZWYgQ0xJUFBMQU5FMgpmQ2xpcERpc3RhbmNlMj1kb3Qod29ybGRQb3MsdkNsaXBQbGFuZTIpOwojZW5kaWYKI2lmZGVmIENMSVBQTEFORTMKZkNsaXBEaXN0YW5jZTM9ZG90KHdvcmxkUG9zLHZDbGlwUGxhbmUzKTsKI2VuZGlmCiNpZmRlZiBDTElQUExBTkU0CmZDbGlwRGlzdGFuY2U0PWRvdCh3b3JsZFBvcyx2Q2xpcFBsYW5lNCk7CiNlbmRpZgojaWZkZWYgQ0xJUFBMQU5FNQpmQ2xpcERpc3RhbmNlNT1kb3Qod29ybGRQb3MsdkNsaXBQbGFuZTUpOwojZW5kaWYKI2lmZGVmIENMSVBQTEFORTYKZkNsaXBEaXN0YW5jZTY9ZG90KHdvcmxkUG9zLHZDbGlwUGxhbmU2KTsKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtwb109bW87Y29uc3QgRW89InNoYWRvd01hcFZlcnRleFNoYWRlciIsdm89YGF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uOwojaWZkZWYgTk9STUFMCmF0dHJpYnV0ZSB2ZWMzIG5vcm1hbDsKI2VuZGlmCiNpbmNsdWRlPGJvbmVzRGVjbGFyYXRpb24+CiNpbmNsdWRlPGJha2VkVmVydGV4QW5pbWF0aW9uRGVjbGFyYXRpb24+CiNpbmNsdWRlPG1vcnBoVGFyZ2V0c1ZlcnRleEdsb2JhbERlY2xhcmF0aW9uPgojaW5jbHVkZTxtb3JwaFRhcmdldHNWZXJ0ZXhEZWNsYXJhdGlvbj5bMC4ubWF4U2ltdWx0YW5lb3VzTW9ycGhUYXJnZXRzXQojaWZkZWYgSU5TVEFOQ0VTCmF0dHJpYnV0ZSB2ZWM0IHdvcmxkMDsKYXR0cmlidXRlIHZlYzQgd29ybGQxOwphdHRyaWJ1dGUgdmVjNCB3b3JsZDI7CmF0dHJpYnV0ZSB2ZWM0IHdvcmxkMzsKI2VuZGlmCiNpbmNsdWRlPGhlbHBlckZ1bmN0aW9ucz4KI2luY2x1ZGU8X19kZWNsX19zaGFkb3dNYXBWZXJ0ZXg+CiNpZmRlZiBBTFBIQVRFWFRVUkUKdmFyeWluZyB2ZWMyIHZVVjsKdW5pZm9ybSBtYXQ0IGRpZmZ1c2VNYXRyaXg7CiNpZmRlZiBVVjEKYXR0cmlidXRlIHZlYzIgdXY7CiNlbmRpZgojaWZkZWYgVVYyCmF0dHJpYnV0ZSB2ZWMyIHV2MjsKI2VuZGlmCiNlbmRpZgojaW5jbHVkZTxzaGFkb3dNYXBWZXJ0ZXhFeHRyYURlY2xhcmF0aW9uPgojaW5jbHVkZTxjbGlwUGxhbmVWZXJ0ZXhEZWNsYXJhdGlvbj4KI2RlZmluZSBDVVNUT01fVkVSVEVYX0RFRklOSVRJT05TCnZvaWQgbWFpbih2b2lkKQp7CnZlYzMgcG9zaXRpb25VcGRhdGVkPXBvc2l0aW9uOwojaWZkZWYgVVYxCnZlYzIgdXZVcGRhdGVkPXV2OwojZW5kaWYKI2lmZGVmIE5PUk1BTAp2ZWMzIG5vcm1hbFVwZGF0ZWQ9bm9ybWFsOwojZW5kaWYKI2luY2x1ZGU8bW9ycGhUYXJnZXRzVmVydGV4R2xvYmFsPgojaW5jbHVkZTxtb3JwaFRhcmdldHNWZXJ0ZXg+WzAuLm1heFNpbXVsdGFuZW91c01vcnBoVGFyZ2V0c10KI2luY2x1ZGU8aW5zdGFuY2VzVmVydGV4PgojaW5jbHVkZTxib25lc1ZlcnRleD4KI2luY2x1ZGU8YmFrZWRWZXJ0ZXhBbmltYXRpb24+CnZlYzQgd29ybGRQb3M9ZmluYWxXb3JsZCp2ZWM0KHBvc2l0aW9uVXBkYXRlZCwxLjApOwojaWZkZWYgTk9STUFMCm1hdDMgbm9ybVdvcmxkU009bWF0MyhmaW5hbFdvcmxkKTsKI2lmIGRlZmluZWQoSU5TVEFOQ0VTKSAmJiBkZWZpbmVkKFRISU5fSU5TVEFOQ0VTKQp2ZWMzIHZOb3JtYWxXPW5vcm1hbFVwZGF0ZWQvdmVjMyhkb3Qobm9ybVdvcmxkU01bMF0sbm9ybVdvcmxkU01bMF0pLGRvdChub3JtV29ybGRTTVsxXSxub3JtV29ybGRTTVsxXSksZG90KG5vcm1Xb3JsZFNNWzJdLG5vcm1Xb3JsZFNNWzJdKSk7CnZOb3JtYWxXPW5vcm1hbGl6ZShub3JtV29ybGRTTSp2Tm9ybWFsVyk7CiNlbHNlCiNpZmRlZiBOT05VTklGT1JNU0NBTElORwpub3JtV29ybGRTTT10cmFuc3Bvc2VNYXQzKGludmVyc2VNYXQzKG5vcm1Xb3JsZFNNKSk7CiNlbmRpZgp2ZWMzIHZOb3JtYWxXPW5vcm1hbGl6ZShub3JtV29ybGRTTSpub3JtYWxVcGRhdGVkKTsKI2VuZGlmCiNlbmRpZgojaW5jbHVkZTxzaGFkb3dNYXBWZXJ0ZXhOb3JtYWxCaWFzPgpnbF9Qb3NpdGlvbj12aWV3UHJvamVjdGlvbip3b3JsZFBvczsKI2luY2x1ZGU8c2hhZG93TWFwVmVydGV4TWV0cmljPgojaWZkZWYgQUxQSEFURVhUVVJFCiNpZmRlZiBVVjEKdlVWPXZlYzIoZGlmZnVzZU1hdHJpeCp2ZWM0KHV2VXBkYXRlZCwxLjAsMC4wKSk7CiNlbmRpZgojaWZkZWYgVVYyCnZVVj12ZWMyKGRpZmZ1c2VNYXRyaXgqdmVjNCh1djIsMS4wLDAuMCkpOwojZW5kaWYKI2VuZGlmCiNpbmNsdWRlPGNsaXBQbGFuZVZlcnRleD4KfWA7VS5TaGFkZXJzU3RvcmVbRW9dPXZvO2NvbnN0IFRvPSJkZXB0aEJveEJsdXJQaXhlbFNoYWRlciIsYm89YHZhcnlpbmcgdmVjMiB2VVY7CnVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmVTYW1wbGVyOwp1bmlmb3JtIHZlYzIgc2NyZWVuU2l6ZTsKI2RlZmluZSBDVVNUT01fRlJBR01FTlRfREVGSU5JVElPTlMKdm9pZCBtYWluKHZvaWQpCnsKdmVjNCBjb2xvckRlcHRoPXZlYzQoMC4wKTsKZm9yIChpbnQgeD0tT0ZGU0VUOyB4PD1PRkZTRVQ7IHgrKykKZm9yIChpbnQgeT0tT0ZGU0VUOyB5PD1PRkZTRVQ7IHkrKykKY29sb3JEZXB0aCs9dGV4dHVyZTJEKHRleHR1cmVTYW1wbGVyLHZVVit2ZWMyKHgseSkvc2NyZWVuU2l6ZSk7CmdsX0ZyYWdDb2xvcj0oY29sb3JEZXB0aC9mbG9hdCgoT0ZGU0VUKjIrMSkqKE9GRlNFVCoyKzEpKSk7Cn1gO1UuU2hhZGVyc1N0b3JlW1RvXT1ibztjb25zdCBTbz0ic2hhZG93TWFwRnJhZ21lbnRTb2Z0VHJhbnNwYXJlbnRTaGFkb3ciLHhvPWAjaWYgU01fU09GVFRSQU5TUEFSRU5UU0hBRE9XPT0xCmlmICgoYmF5ZXJEaXRoZXI4KGZsb29yKG1vZChnbF9GcmFnQ29vcmQueHksOC4wKSkpKS82NC4wPj1zb2Z0VHJhbnNwYXJlbnRTaGFkb3dTTSphbHBoYSkgZGlzY2FyZDsKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtTb109eG87Y2xhc3MgR3tjb25zdHJ1Y3RvcihlLHQsaSxzKXt0aGlzLm9uQmVmb3JlU2hhZG93TWFwUmVuZGVyT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uQWZ0ZXJTaGFkb3dNYXBSZW5kZXJPYnNlcnZhYmxlPW5ldyBGLHRoaXMub25CZWZvcmVTaGFkb3dNYXBSZW5kZXJNZXNoT2JzZXJ2YWJsZT1uZXcgRix0aGlzLm9uQWZ0ZXJTaGFkb3dNYXBSZW5kZXJNZXNoT2JzZXJ2YWJsZT1uZXcgRix0aGlzLl9iaWFzPTVlLTUsdGhpcy5fbm9ybWFsQmlhcz0wLHRoaXMuX2JsdXJCb3hPZmZzZXQ9MSx0aGlzLl9ibHVyU2NhbGU9Mix0aGlzLl9ibHVyS2VybmVsPTEsdGhpcy5fdXNlS2VybmVsQmx1cj0hMSx0aGlzLl9maWx0ZXI9Ry5GSUxURVJfTk9ORSx0aGlzLl9maWx0ZXJpbmdRdWFsaXR5PUcuUVVBTElUWV9ISUdILHRoaXMuX2NvbnRhY3RIYXJkZW5pbmdMaWdodFNpemVVVlJhdGlvPS4xLHRoaXMuX2RhcmtuZXNzPTAsdGhpcy5fdHJhbnNwYXJlbmN5U2hhZG93PSExLHRoaXMuZW5hYmxlU29mdFRyYW5zcGFyZW50U2hhZG93PSExLHRoaXMudXNlT3BhY2l0eVRleHR1cmVGb3JUcmFuc3BhcmVudFNoYWRvdz0hMSx0aGlzLmZydXN0dW1FZGdlRmFsbG9mZj0wLHRoaXMuZm9yY2VCYWNrRmFjZXNPbmx5PSExLHRoaXMuX2xpZ2h0RGlyZWN0aW9uPXAuWmVybygpLHRoaXMuX3ZpZXdNYXRyaXg9eC5aZXJvKCksdGhpcy5fcHJvamVjdGlvbk1hdHJpeD14Llplcm8oKSx0aGlzLl90cmFuc2Zvcm1NYXRyaXg9eC5aZXJvKCksdGhpcy5fY2FjaGVkUG9zaXRpb249bmV3IHAoTnVtYmVyLk1BWF9WQUxVRSxOdW1iZXIuTUFYX1ZBTFVFLE51bWJlci5NQVhfVkFMVUUpLHRoaXMuX2NhY2hlZERpcmVjdGlvbj1uZXcgcChOdW1iZXIuTUFYX1ZBTFVFLE51bWJlci5NQVhfVkFMVUUsTnVtYmVyLk1BWF9WQUxVRSksdGhpcy5fY3VycmVudEZhY2VJbmRleD0wLHRoaXMuX2N1cnJlbnRGYWNlSW5kZXhDYWNoZT0wLHRoaXMuX2RlZmF1bHRUZXh0dXJlTWF0cml4PXguSWRlbnRpdHkoKSx0aGlzLl9tYXBTaXplPWUsdGhpcy5fbGlnaHQ9dCx0aGlzLl9zY2VuZT10LmdldFNjZW5lKCksdGhpcy5fY2FtZXJhPXM/P251bGw7bGV0IHI9dC5fc2hhZG93R2VuZXJhdG9ycztyfHwocj10Ll9zaGFkb3dHZW5lcmF0b3JzPW5ldyBNYXApLHIuc2V0KHRoaXMuX2NhbWVyYSx0aGlzKSx0aGlzLmlkPXQuaWQsdGhpcy5fdXNlVUJPPXRoaXMuX3NjZW5lLmdldEVuZ2luZSgpLnN1cHBvcnRzVW5pZm9ybUJ1ZmZlcnMsdGhpcy5fdXNlVUJPJiYodGhpcy5fc2NlbmVVQk9zPVtdLHRoaXMuX3NjZW5lVUJPcy5wdXNoKHRoaXMuX3NjZW5lLmNyZWF0ZVNjZW5lVW5pZm9ybUJ1ZmZlcihgU2NlbmUgZm9yIFNoYWRvdyBHZW5lcmF0b3IgKGxpZ2h0ICIke3RoaXMuX2xpZ2h0Lm5hbWV9IilgKSkpLEcuX1NjZW5lQ29tcG9uZW50SW5pdGlhbGl6YXRpb24odGhpcy5fc2NlbmUpO2NvbnN0IG49dGhpcy5fc2NlbmUuZ2V0RW5naW5lKCkuZ2V0Q2FwcygpO2k/bi50ZXh0dXJlRmxvYXRSZW5kZXImJm4udGV4dHVyZUZsb2F0TGluZWFyRmlsdGVyaW5nP3RoaXMuX3RleHR1cmVUeXBlPTE6bi50ZXh0dXJlSGFsZkZsb2F0UmVuZGVyJiZuLnRleHR1cmVIYWxmRmxvYXRMaW5lYXJGaWx0ZXJpbmc/dGhpcy5fdGV4dHVyZVR5cGU9Mjp0aGlzLl90ZXh0dXJlVHlwZT0wOm4udGV4dHVyZUhhbGZGbG9hdFJlbmRlciYmbi50ZXh0dXJlSGFsZkZsb2F0TGluZWFyRmlsdGVyaW5nP3RoaXMuX3RleHR1cmVUeXBlPTI6bi50ZXh0dXJlRmxvYXRSZW5kZXImJm4udGV4dHVyZUZsb2F0TGluZWFyRmlsdGVyaW5nP3RoaXMuX3RleHR1cmVUeXBlPTE6dGhpcy5fdGV4dHVyZVR5cGU9MCx0aGlzLl9pbml0aWFsaXplR2VuZXJhdG9yKCksdGhpcy5fYXBwbHlGaWx0ZXJWYWx1ZXMoKX1nZXQgYmlhcygpe3JldHVybiB0aGlzLl9iaWFzfXNldCBiaWFzKGUpe3RoaXMuX2JpYXM9ZX1nZXQgbm9ybWFsQmlhcygpe3JldHVybiB0aGlzLl9ub3JtYWxCaWFzfXNldCBub3JtYWxCaWFzKGUpe3RoaXMuX25vcm1hbEJpYXM9ZX1nZXQgYmx1ckJveE9mZnNldCgpe3JldHVybiB0aGlzLl9ibHVyQm94T2Zmc2V0fXNldCBibHVyQm94T2Zmc2V0KGUpe3RoaXMuX2JsdXJCb3hPZmZzZXQhPT1lJiYodGhpcy5fYmx1ckJveE9mZnNldD1lLHRoaXMuX2Rpc3Bvc2VCbHVyUG9zdFByb2Nlc3NlcygpKX1nZXQgYmx1clNjYWxlKCl7cmV0dXJuIHRoaXMuX2JsdXJTY2FsZX1zZXQgYmx1clNjYWxlKGUpe3RoaXMuX2JsdXJTY2FsZSE9PWUmJih0aGlzLl9ibHVyU2NhbGU9ZSx0aGlzLl9kaXNwb3NlQmx1clBvc3RQcm9jZXNzZXMoKSl9Z2V0IGJsdXJLZXJuZWwoKXtyZXR1cm4gdGhpcy5fYmx1cktlcm5lbH1zZXQgYmx1cktlcm5lbChlKXt0aGlzLl9ibHVyS2VybmVsIT09ZSYmKHRoaXMuX2JsdXJLZXJuZWw9ZSx0aGlzLl9kaXNwb3NlQmx1clBvc3RQcm9jZXNzZXMoKSl9Z2V0IHVzZUtlcm5lbEJsdXIoKXtyZXR1cm4gdGhpcy5fdXNlS2VybmVsQmx1cn1zZXQgdXNlS2VybmVsQmx1cihlKXt0aGlzLl91c2VLZXJuZWxCbHVyIT09ZSYmKHRoaXMuX3VzZUtlcm5lbEJsdXI9ZSx0aGlzLl9kaXNwb3NlQmx1clBvc3RQcm9jZXNzZXMoKSl9Z2V0IGRlcHRoU2NhbGUoKXtyZXR1cm4gdGhpcy5fZGVwdGhTY2FsZSE9PXZvaWQgMD90aGlzLl9kZXB0aFNjYWxlOnRoaXMuX2xpZ2h0LmdldERlcHRoU2NhbGUoKX1zZXQgZGVwdGhTY2FsZShlKXt0aGlzLl9kZXB0aFNjYWxlPWV9X3ZhbGlkYXRlRmlsdGVyKGUpe3JldHVybiBlfWdldCBmaWx0ZXIoKXtyZXR1cm4gdGhpcy5fZmlsdGVyfXNldCBmaWx0ZXIoZSl7aWYoZT10aGlzLl92YWxpZGF0ZUZpbHRlcihlKSx0aGlzLl9saWdodC5uZWVkQ3ViZSgpKXtpZihlPT09Ry5GSUxURVJfQkxVUkVYUE9ORU5USUFMU0hBRE9XTUFQKXt0aGlzLnVzZUV4cG9uZW50aWFsU2hhZG93TWFwPSEwO3JldHVybn1lbHNlIGlmKGU9PT1HLkZJTFRFUl9CTFVSQ0xPU0VFWFBPTkVOVElBTFNIQURPV01BUCl7dGhpcy51c2VDbG9zZUV4cG9uZW50aWFsU2hhZG93TWFwPSEwO3JldHVybn1lbHNlIGlmKGU9PT1HLkZJTFRFUl9QQ0Z8fGU9PT1HLkZJTFRFUl9QQ1NTKXt0aGlzLnVzZVBvaXNzb25TYW1wbGluZz0hMDtyZXR1cm59fWlmKChlPT09Ry5GSUxURVJfUENGfHxlPT09Ry5GSUxURVJfUENTUykmJiF0aGlzLl9zY2VuZS5nZXRFbmdpbmUoKS5fZmVhdHVyZXMuc3VwcG9ydFNoYWRvd1NhbXBsZXJzKXt0aGlzLnVzZVBvaXNzb25TYW1wbGluZz0hMDtyZXR1cm59dGhpcy5fZmlsdGVyIT09ZSYmKHRoaXMuX2ZpbHRlcj1lLHRoaXMuX2Rpc3Bvc2VCbHVyUG9zdFByb2Nlc3NlcygpLHRoaXMuX2FwcGx5RmlsdGVyVmFsdWVzKCksdGhpcy5fbGlnaHQuX21hcmtNZXNoZXNBc0xpZ2h0RGlydHkoKSl9Z2V0IHVzZVBvaXNzb25TYW1wbGluZygpe3JldHVybiB0aGlzLmZpbHRlcj09PUcuRklMVEVSX1BPSVNTT05TQU1QTElOR31zZXQgdXNlUG9pc3NvblNhbXBsaW5nKGUpe2NvbnN0IHQ9dGhpcy5fdmFsaWRhdGVGaWx0ZXIoRy5GSUxURVJfUE9JU1NPTlNBTVBMSU5HKTshZSYmdGhpcy5maWx0ZXIhPT1HLkZJTFRFUl9QT0lTU09OU0FNUExJTkd8fCh0aGlzLmZpbHRlcj1lP3Q6Ry5GSUxURVJfTk9ORSl9Z2V0IHVzZUV4cG9uZW50aWFsU2hhZG93TWFwKCl7cmV0dXJuIHRoaXMuZmlsdGVyPT09Ry5GSUxURVJfRVhQT05FTlRJQUxTSEFET1dNQVB9c2V0IHVzZUV4cG9uZW50aWFsU2hhZG93TWFwKGUpe2NvbnN0IHQ9dGhpcy5fdmFsaWRhdGVGaWx0ZXIoRy5GSUxURVJfRVhQT05FTlRJQUxTSEFET1dNQVApOyFlJiZ0aGlzLmZpbHRlciE9PUcuRklMVEVSX0VYUE9ORU5USUFMU0hBRE9XTUFQfHwodGhpcy5maWx0ZXI9ZT90OkcuRklMVEVSX05PTkUpfWdldCB1c2VCbHVyRXhwb25lbnRpYWxTaGFkb3dNYXAoKXtyZXR1cm4gdGhpcy5maWx0ZXI9PT1HLkZJTFRFUl9CTFVSRVhQT05FTlRJQUxTSEFET1dNQVB9c2V0IHVzZUJsdXJFeHBvbmVudGlhbFNoYWRvd01hcChlKXtjb25zdCB0PXRoaXMuX3ZhbGlkYXRlRmlsdGVyKEcuRklMVEVSX0JMVVJFWFBPTkVOVElBTFNIQURPV01BUCk7IWUmJnRoaXMuZmlsdGVyIT09Ry5GSUxURVJfQkxVUkVYUE9ORU5USUFMU0hBRE9XTUFQfHwodGhpcy5maWx0ZXI9ZT90OkcuRklMVEVSX05PTkUpfWdldCB1c2VDbG9zZUV4cG9uZW50aWFsU2hhZG93TWFwKCl7cmV0dXJuIHRoaXMuZmlsdGVyPT09Ry5GSUxURVJfQ0xPU0VFWFBPTkVOVElBTFNIQURPV01BUH1zZXQgdXNlQ2xvc2VFeHBvbmVudGlhbFNoYWRvd01hcChlKXtjb25zdCB0PXRoaXMuX3ZhbGlkYXRlRmlsdGVyKEcuRklMVEVSX0NMT1NFRVhQT05FTlRJQUxTSEFET1dNQVApOyFlJiZ0aGlzLmZpbHRlciE9PUcuRklMVEVSX0NMT1NFRVhQT05FTlRJQUxTSEFET1dNQVB8fCh0aGlzLmZpbHRlcj1lP3Q6Ry5GSUxURVJfTk9ORSl9Z2V0IHVzZUJsdXJDbG9zZUV4cG9uZW50aWFsU2hhZG93TWFwKCl7cmV0dXJuIHRoaXMuZmlsdGVyPT09Ry5GSUxURVJfQkxVUkNMT1NFRVhQT05FTlRJQUxTSEFET1dNQVB9c2V0IHVzZUJsdXJDbG9zZUV4cG9uZW50aWFsU2hhZG93TWFwKGUpe2NvbnN0IHQ9dGhpcy5fdmFsaWRhdGVGaWx0ZXIoRy5GSUxURVJfQkxVUkNMT1NFRVhQT05FTlRJQUxTSEFET1dNQVApOyFlJiZ0aGlzLmZpbHRlciE9PUcuRklMVEVSX0JMVVJDTE9TRUVYUE9ORU5USUFMU0hBRE9XTUFQfHwodGhpcy5maWx0ZXI9ZT90OkcuRklMVEVSX05PTkUpfWdldCB1c2VQZXJjZW50YWdlQ2xvc2VyRmlsdGVyaW5nKCl7cmV0dXJuIHRoaXMuZmlsdGVyPT09Ry5GSUxURVJfUENGfXNldCB1c2VQZXJjZW50YWdlQ2xvc2VyRmlsdGVyaW5nKGUpe2NvbnN0IHQ9dGhpcy5fdmFsaWRhdGVGaWx0ZXIoRy5GSUxURVJfUENGKTshZSYmdGhpcy5maWx0ZXIhPT1HLkZJTFRFUl9QQ0Z8fCh0aGlzLmZpbHRlcj1lP3Q6Ry5GSUxURVJfTk9ORSl9Z2V0IGZpbHRlcmluZ1F1YWxpdHkoKXtyZXR1cm4gdGhpcy5fZmlsdGVyaW5nUXVhbGl0eX1zZXQgZmlsdGVyaW5nUXVhbGl0eShlKXt0aGlzLl9maWx0ZXJpbmdRdWFsaXR5IT09ZSYmKHRoaXMuX2ZpbHRlcmluZ1F1YWxpdHk9ZSx0aGlzLl9kaXNwb3NlQmx1clBvc3RQcm9jZXNzZXMoKSx0aGlzLl9hcHBseUZpbHRlclZhbHVlcygpLHRoaXMuX2xpZ2h0Ll9tYXJrTWVzaGVzQXNMaWdodERpcnR5KCkpfWdldCB1c2VDb250YWN0SGFyZGVuaW5nU2hhZG93KCl7cmV0dXJuIHRoaXMuZmlsdGVyPT09Ry5GSUxURVJfUENTU31zZXQgdXNlQ29udGFjdEhhcmRlbmluZ1NoYWRvdyhlKXtjb25zdCB0PXRoaXMuX3ZhbGlkYXRlRmlsdGVyKEcuRklMVEVSX1BDU1MpOyFlJiZ0aGlzLmZpbHRlciE9PUcuRklMVEVSX1BDU1N8fCh0aGlzLmZpbHRlcj1lP3Q6Ry5GSUxURVJfTk9ORSl9Z2V0IGNvbnRhY3RIYXJkZW5pbmdMaWdodFNpemVVVlJhdGlvKCl7cmV0dXJuIHRoaXMuX2NvbnRhY3RIYXJkZW5pbmdMaWdodFNpemVVVlJhdGlvfXNldCBjb250YWN0SGFyZGVuaW5nTGlnaHRTaXplVVZSYXRpbyhlKXt0aGlzLl9jb250YWN0SGFyZGVuaW5nTGlnaHRTaXplVVZSYXRpbz1lfWdldCBkYXJrbmVzcygpe3JldHVybiB0aGlzLl9kYXJrbmVzc31zZXQgZGFya25lc3MoZSl7dGhpcy5zZXREYXJrbmVzcyhlKX1nZXREYXJrbmVzcygpe3JldHVybiB0aGlzLl9kYXJrbmVzc31zZXREYXJrbmVzcyhlKXtyZXR1cm4gZT49MT90aGlzLl9kYXJrbmVzcz0xOmU8PTA/dGhpcy5fZGFya25lc3M9MDp0aGlzLl9kYXJrbmVzcz1lLHRoaXN9Z2V0IHRyYW5zcGFyZW5jeVNoYWRvdygpe3JldHVybiB0aGlzLl90cmFuc3BhcmVuY3lTaGFkb3d9c2V0IHRyYW5zcGFyZW5jeVNoYWRvdyhlKXt0aGlzLnNldFRyYW5zcGFyZW5jeVNoYWRvdyhlKX1zZXRUcmFuc3BhcmVuY3lTaGFkb3coZSl7cmV0dXJuIHRoaXMuX3RyYW5zcGFyZW5jeVNoYWRvdz1lLHRoaXN9Z2V0U2hhZG93TWFwKCl7cmV0dXJuIHRoaXMuX3NoYWRvd01hcH1nZXRTaGFkb3dNYXBGb3JSZW5kZXJpbmcoKXtyZXR1cm4gdGhpcy5fc2hhZG93TWFwMj90aGlzLl9zaGFkb3dNYXAyOnRoaXMuX3NoYWRvd01hcH1nZXRDbGFzc05hbWUoKXtyZXR1cm4gRy5DTEFTU05BTUV9YWRkU2hhZG93Q2FzdGVyKGUsdD0hMCl7aWYoIXRoaXMuX3NoYWRvd01hcClyZXR1cm4gdGhpcztpZih0aGlzLl9zaGFkb3dNYXAucmVuZGVyTGlzdHx8KHRoaXMuX3NoYWRvd01hcC5yZW5kZXJMaXN0PVtdKSx0aGlzLl9zaGFkb3dNYXAucmVuZGVyTGlzdC5pbmRleE9mKGUpPT09LTEmJnRoaXMuX3NoYWRvd01hcC5yZW5kZXJMaXN0LnB1c2goZSksdClmb3IoY29uc3QgaSBvZiBlLmdldENoaWxkTWVzaGVzKCkpdGhpcy5fc2hhZG93TWFwLnJlbmRlckxpc3QuaW5kZXhPZihpKT09PS0xJiZ0aGlzLl9zaGFkb3dNYXAucmVuZGVyTGlzdC5wdXNoKGkpO3JldHVybiB0aGlzfXJlbW92ZVNoYWRvd0Nhc3RlcihlLHQ9ITApe2lmKCF0aGlzLl9zaGFkb3dNYXB8fCF0aGlzLl9zaGFkb3dNYXAucmVuZGVyTGlzdClyZXR1cm4gdGhpcztjb25zdCBpPXRoaXMuX3NoYWRvd01hcC5yZW5kZXJMaXN0LmluZGV4T2YoZSk7aWYoaSE9PS0xJiZ0aGlzLl9zaGFkb3dNYXAucmVuZGVyTGlzdC5zcGxpY2UoaSwxKSx0KWZvcihjb25zdCBzIG9mIGUuZ2V0Q2hpbGRyZW4oKSl0aGlzLnJlbW92ZVNoYWRvd0Nhc3RlcihzKTtyZXR1cm4gdGhpc31nZXRMaWdodCgpe3JldHVybiB0aGlzLl9saWdodH1fZ2V0Q2FtZXJhKCl7dmFyIGU7cmV0dXJuKGU9dGhpcy5fY2FtZXJhKSE9PW51bGwmJmUhPT12b2lkIDA/ZTp0aGlzLl9zY2VuZS5hY3RpdmVDYW1lcmF9Z2V0IG1hcFNpemUoKXtyZXR1cm4gdGhpcy5fbWFwU2l6ZX1zZXQgbWFwU2l6ZShlKXt0aGlzLl9tYXBTaXplPWUsdGhpcy5fbGlnaHQuX21hcmtNZXNoZXNBc0xpZ2h0RGlydHkoKSx0aGlzLnJlY3JlYXRlU2hhZG93TWFwKCl9X2luaXRpYWxpemVHZW5lcmF0b3IoKXt0aGlzLl9saWdodC5fbWFya01lc2hlc0FzTGlnaHREaXJ0eSgpLHRoaXMuX2luaXRpYWxpemVTaGFkb3dNYXAoKX1fY3JlYXRlVGFyZ2V0UmVuZGVyVGV4dHVyZSgpe2NvbnN0IGU9dGhpcy5fc2NlbmUuZ2V0RW5naW5lKCk7ZS5fZmVhdHVyZXMuc3VwcG9ydERlcHRoU3RlbmNpbFRleHR1cmU/KHRoaXMuX3NoYWRvd01hcD1uZXcgX3QodGhpcy5fbGlnaHQubmFtZSsiX3NoYWRvd01hcCIsdGhpcy5fbWFwU2l6ZSx0aGlzLl9zY2VuZSwhMSwhMCx0aGlzLl90ZXh0dXJlVHlwZSx0aGlzLl9saWdodC5uZWVkQ3ViZSgpLHZvaWQgMCwhMSwhMSksdGhpcy5fc2hhZG93TWFwLmNyZWF0ZURlcHRoU3RlbmNpbFRleHR1cmUoZS51c2VSZXZlcnNlRGVwdGhCdWZmZXI/NTE2OjUxMywhMCkpOnRoaXMuX3NoYWRvd01hcD1uZXcgX3QodGhpcy5fbGlnaHQubmFtZSsiX3NoYWRvd01hcCIsdGhpcy5fbWFwU2l6ZSx0aGlzLl9zY2VuZSwhMSwhMCx0aGlzLl90ZXh0dXJlVHlwZSx0aGlzLl9saWdodC5uZWVkQ3ViZSgpKX1faW5pdGlhbGl6ZVNoYWRvd01hcCgpe2lmKHRoaXMuX2NyZWF0ZVRhcmdldFJlbmRlclRleHR1cmUoKSx0aGlzLl9zaGFkb3dNYXA9PT1udWxsKXJldHVybjt0aGlzLl9zaGFkb3dNYXAud3JhcFU9Ti5DTEFNUF9BRERSRVNTTU9ERSx0aGlzLl9zaGFkb3dNYXAud3JhcFY9Ti5DTEFNUF9BRERSRVNTTU9ERSx0aGlzLl9zaGFkb3dNYXAuYW5pc290cm9waWNGaWx0ZXJpbmdMZXZlbD0xLHRoaXMuX3NoYWRvd01hcC51cGRhdGVTYW1wbGluZ01vZGUoTi5CSUxJTkVBUl9TQU1QTElOR01PREUpLHRoaXMuX3NoYWRvd01hcC5yZW5kZXJQYXJ0aWNsZXM9ITEsdGhpcy5fc2hhZG93TWFwLmlnbm9yZUNhbWVyYVZpZXdwb3J0PSEwLHRoaXMuX3N0b3JlZFVuaXF1ZUlkJiYodGhpcy5fc2hhZG93TWFwLnVuaXF1ZUlkPXRoaXMuX3N0b3JlZFVuaXF1ZUlkKSx0aGlzLl9zaGFkb3dNYXAuY3VzdG9tUmVuZGVyRnVuY3Rpb249dGhpcy5fcmVuZGVyRm9yU2hhZG93TWFwLmJpbmQodGhpcyksdGhpcy5fc2hhZG93TWFwLmN1c3RvbUlzUmVhZHlGdW5jdGlvbj0oKT0+ITA7Y29uc3QgZT10aGlzLl9zY2VuZS5nZXRFbmdpbmUoKTt0aGlzLl9zaGFkb3dNYXAub25CZWZvcmVCaW5kT2JzZXJ2YWJsZS5hZGQoKCk9Pnt2YXIgczt0aGlzLl9jdXJyZW50U2NlbmVVQk89dGhpcy5fc2NlbmUuZ2V0U2NlbmVVbmlmb3JtQnVmZmVyKCksKHM9ZS5fZGVidWdQdXNoR3JvdXApPT09bnVsbHx8cz09PXZvaWQgMHx8cy5jYWxsKGUsYHNoYWRvdyBtYXAgZ2VuZXJhdGlvbiBmb3IgcGFzcyBpZCAke2UuY3VycmVudFJlbmRlclBhc3NJZH1gLDEpfSksdGhpcy5fc2hhZG93TWFwLm9uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZS5hZGQocz0+e3RoaXMuX3NjZW5lVUJPcyYmdGhpcy5fc2NlbmUuc2V0U2NlbmVVbmlmb3JtQnVmZmVyKHRoaXMuX3NjZW5lVUJPc1swXSksdGhpcy5fY3VycmVudEZhY2VJbmRleD1zLHRoaXMuX2ZpbHRlcj09PUcuRklMVEVSX1BDRiYmZS5zZXRDb2xvcldyaXRlKCExKSx0aGlzLmdldFRyYW5zZm9ybU1hdHJpeCgpLHRoaXMuX3NjZW5lLnNldFRyYW5zZm9ybU1hdHJpeCh0aGlzLl92aWV3TWF0cml4LHRoaXMuX3Byb2plY3Rpb25NYXRyaXgpLHRoaXMuX3VzZVVCTyYmKHRoaXMuX3NjZW5lLmdldFNjZW5lVW5pZm9ybUJ1ZmZlcigpLnVuYmluZEVmZmVjdCgpLHRoaXMuX3NjZW5lLmZpbmFsaXplU2NlbmVVYm8oKSl9KSx0aGlzLl9zaGFkb3dNYXAub25BZnRlclVuYmluZE9ic2VydmFibGUuYWRkKCgpPT57dmFyIHMscjtpZih0aGlzLl9zY2VuZVVCT3MmJnRoaXMuX3NjZW5lLnNldFNjZW5lVW5pZm9ybUJ1ZmZlcih0aGlzLl9jdXJyZW50U2NlbmVVQk8pLHRoaXMuX3NjZW5lLnVwZGF0ZVRyYW5zZm9ybU1hdHJpeCgpLHRoaXMuX2ZpbHRlcj09PUcuRklMVEVSX1BDRiYmZS5zZXRDb2xvcldyaXRlKCEwKSwhdGhpcy51c2VCbHVyRXhwb25lbnRpYWxTaGFkb3dNYXAmJiF0aGlzLnVzZUJsdXJDbG9zZUV4cG9uZW50aWFsU2hhZG93TWFwKXsocz1lLl9kZWJ1Z1BvcEdyb3VwKT09PW51bGx8fHM9PT12b2lkIDB8fHMuY2FsbChlLDEpO3JldHVybn1jb25zdCBuPXRoaXMuZ2V0U2hhZG93TWFwRm9yUmVuZGVyaW5nKCk7biYmKHRoaXMuX3NjZW5lLnBvc3RQcm9jZXNzTWFuYWdlci5kaXJlY3RSZW5kZXIodGhpcy5fYmx1clBvc3RQcm9jZXNzZXMsbi5yZW5kZXJUYXJnZXQsITApLGUudW5CaW5kRnJhbWVidWZmZXIobi5yZW5kZXJUYXJnZXQsITApLChyPWUuX2RlYnVnUG9wR3JvdXApPT09bnVsbHx8cj09PXZvaWQgMHx8ci5jYWxsKGUsMSkpfSk7Y29uc3QgdD1uZXcgbWUoMCwwLDAsMCksaT1uZXcgbWUoMSwxLDEsMSk7dGhpcy5fc2hhZG93TWFwLm9uQ2xlYXJPYnNlcnZhYmxlLmFkZChzPT57dGhpcy5fZmlsdGVyPT09Ry5GSUxURVJfUENGP3MuY2xlYXIoaSwhMSwhMCwhMSk6dGhpcy51c2VFeHBvbmVudGlhbFNoYWRvd01hcHx8dGhpcy51c2VCbHVyRXhwb25lbnRpYWxTaGFkb3dNYXA/cy5jbGVhcih0LCEwLCEwLCExKTpzLmNsZWFyKGksITAsITAsITEpfSksdGhpcy5fc2hhZG93TWFwLm9uUmVzaXplT2JzZXJ2YWJsZS5hZGQocz0+e3RoaXMuX3N0b3JlZFVuaXF1ZUlkPXRoaXMuX3NoYWRvd01hcC51bmlxdWVJZCx0aGlzLl9tYXBTaXplPXMuZ2V0UmVuZGVyU2l6ZSgpLHRoaXMuX2xpZ2h0Ll9tYXJrTWVzaGVzQXNMaWdodERpcnR5KCksdGhpcy5yZWNyZWF0ZVNoYWRvd01hcCgpfSk7Zm9yKGxldCBzPVdlLk1JTl9SRU5ERVJJTkdHUk9VUFM7czxXZS5NQVhfUkVOREVSSU5HR1JPVVBTO3MrKyl0aGlzLl9zaGFkb3dNYXAuc2V0UmVuZGVyaW5nQXV0b0NsZWFyRGVwdGhTdGVuY2lsKHMsITEpfV9pbml0aWFsaXplQmx1clJUVEFuZFBvc3RQcm9jZXNzZXMoKXtjb25zdCBlPXRoaXMuX3NjZW5lLmdldEVuZ2luZSgpLHQ9dGhpcy5fbWFwU2l6ZS90aGlzLmJsdXJTY2FsZTsoIXRoaXMudXNlS2VybmVsQmx1cnx8dGhpcy5ibHVyU2NhbGUhPT0xKSYmKHRoaXMuX3NoYWRvd01hcDI9bmV3IF90KHRoaXMuX2xpZ2h0Lm5hbWUrIl9zaGFkb3dNYXAyIix0LHRoaXMuX3NjZW5lLCExLCEwLHRoaXMuX3RleHR1cmVUeXBlLHZvaWQgMCx2b2lkIDAsITEpLHRoaXMuX3NoYWRvd01hcDIud3JhcFU9Ti5DTEFNUF9BRERSRVNTTU9ERSx0aGlzLl9zaGFkb3dNYXAyLndyYXBWPU4uQ0xBTVBfQUREUkVTU01PREUsdGhpcy5fc2hhZG93TWFwMi51cGRhdGVTYW1wbGluZ01vZGUoTi5CSUxJTkVBUl9TQU1QTElOR01PREUpKSx0aGlzLnVzZUtlcm5lbEJsdXI/KHRoaXMuX2tlcm5lbEJsdXJYUG9zdHByb2Nlc3M9bmV3IEp0KHRoaXMuX2xpZ2h0Lm5hbWUrIktlcm5lbEJsdXJYIixuZXcgdmUoMSwwKSx0aGlzLmJsdXJLZXJuZWwsMSxudWxsLE4uQklMSU5FQVJfU0FNUExJTkdNT0RFLGUsITEsdGhpcy5fdGV4dHVyZVR5cGUpLHRoaXMuX2tlcm5lbEJsdXJYUG9zdHByb2Nlc3Mud2lkdGg9dCx0aGlzLl9rZXJuZWxCbHVyWFBvc3Rwcm9jZXNzLmhlaWdodD10LHRoaXMuX2tlcm5lbEJsdXJYUG9zdHByb2Nlc3MuZXh0ZXJuYWxUZXh0dXJlU2FtcGxlckJpbmRpbmc9ITAsdGhpcy5fa2VybmVsQmx1clhQb3N0cHJvY2Vzcy5vbkFwcGx5T2JzZXJ2YWJsZS5hZGQoaT0+e2kuc2V0VGV4dHVyZSgidGV4dHVyZVNhbXBsZXIiLHRoaXMuX3NoYWRvd01hcCl9KSx0aGlzLl9rZXJuZWxCbHVyWVBvc3Rwcm9jZXNzPW5ldyBKdCh0aGlzLl9saWdodC5uYW1lKyJLZXJuZWxCbHVyWSIsbmV3IHZlKDAsMSksdGhpcy5ibHVyS2VybmVsLDEsbnVsbCxOLkJJTElORUFSX1NBTVBMSU5HTU9ERSxlLCExLHRoaXMuX3RleHR1cmVUeXBlKSx0aGlzLl9rZXJuZWxCbHVyWFBvc3Rwcm9jZXNzLmF1dG9DbGVhcj0hMSx0aGlzLl9rZXJuZWxCbHVyWVBvc3Rwcm9jZXNzLmF1dG9DbGVhcj0hMSx0aGlzLl90ZXh0dXJlVHlwZT09PTAmJih0aGlzLl9rZXJuZWxCbHVyWFBvc3Rwcm9jZXNzLnBhY2tlZEZsb2F0PSEwLHRoaXMuX2tlcm5lbEJsdXJZUG9zdHByb2Nlc3MucGFja2VkRmxvYXQ9ITApLHRoaXMuX2JsdXJQb3N0UHJvY2Vzc2VzPVt0aGlzLl9rZXJuZWxCbHVyWFBvc3Rwcm9jZXNzLHRoaXMuX2tlcm5lbEJsdXJZUG9zdHByb2Nlc3NdKToodGhpcy5fYm94Qmx1clBvc3Rwcm9jZXNzPW5ldyBNZSh0aGlzLl9saWdodC5uYW1lKyJEZXB0aEJveEJsdXIiLCJkZXB0aEJveEJsdXIiLFsic2NyZWVuU2l6ZSIsImJveE9mZnNldCJdLFtdLDEsbnVsbCxOLkJJTElORUFSX1NBTVBMSU5HTU9ERSxlLCExLCIjZGVmaW5lIE9GRlNFVCAiK3RoaXMuX2JsdXJCb3hPZmZzZXQsdGhpcy5fdGV4dHVyZVR5cGUpLHRoaXMuX2JveEJsdXJQb3N0cHJvY2Vzcy5leHRlcm5hbFRleHR1cmVTYW1wbGVyQmluZGluZz0hMCx0aGlzLl9ib3hCbHVyUG9zdHByb2Nlc3Mub25BcHBseU9ic2VydmFibGUuYWRkKGk9PntpLnNldEZsb2F0Migic2NyZWVuU2l6ZSIsdCx0KSxpLnNldFRleHR1cmUoInRleHR1cmVTYW1wbGVyIix0aGlzLl9zaGFkb3dNYXApfSksdGhpcy5fYm94Qmx1clBvc3Rwcm9jZXNzLmF1dG9DbGVhcj0hMSx0aGlzLl9ibHVyUG9zdFByb2Nlc3Nlcz1bdGhpcy5fYm94Qmx1clBvc3Rwcm9jZXNzXSl9X3JlbmRlckZvclNoYWRvd01hcChlLHQsaSxzKXtsZXQgcjtpZihzLmxlbmd0aClmb3Iocj0wO3I8cy5sZW5ndGg7cisrKXRoaXMuX3JlbmRlclN1Yk1lc2hGb3JTaGFkb3dNYXAocy5kYXRhW3JdKTtmb3Iocj0wO3I8ZS5sZW5ndGg7cisrKXRoaXMuX3JlbmRlclN1Yk1lc2hGb3JTaGFkb3dNYXAoZS5kYXRhW3JdKTtmb3Iocj0wO3I8dC5sZW5ndGg7cisrKXRoaXMuX3JlbmRlclN1Yk1lc2hGb3JTaGFkb3dNYXAodC5kYXRhW3JdKTtpZih0aGlzLl90cmFuc3BhcmVuY3lTaGFkb3cpZm9yKHI9MDtyPGkubGVuZ3RoO3IrKyl0aGlzLl9yZW5kZXJTdWJNZXNoRm9yU2hhZG93TWFwKGkuZGF0YVtyXSwhMCk7ZWxzZSBmb3Iocj0wO3I8aS5sZW5ndGg7cisrKWkuZGF0YVtyXS5nZXRFZmZlY3RpdmVNZXNoKCkuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2lzQWN0aXZlSW50ZXJtZWRpYXRlPSExfV9iaW5kQ3VzdG9tRWZmZWN0Rm9yUmVuZGVyU3ViTWVzaEZvclNoYWRvd01hcChlLHQsaSl7dC5zZXRNYXRyaXgoInZpZXdQcm9qZWN0aW9uIix0aGlzLmdldFRyYW5zZm9ybU1hdHJpeCgpKX1fcmVuZGVyU3ViTWVzaEZvclNoYWRvd01hcChlLHQ9ITEpe3ZhciBpLHM7Y29uc3Qgcj1lLmdldFJlbmRlcmluZ01lc2goKSxuPWUuZ2V0RWZmZWN0aXZlTWVzaCgpLGE9dGhpcy5fc2NlbmUsbz1hLmdldEVuZ2luZSgpLGg9ZS5nZXRNYXRlcmlhbCgpO2lmKG4uX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2lzQWN0aXZlSW50ZXJtZWRpYXRlPSExLCFofHxlLnZlcnRpY2VzQ291bnQ9PT0wfHxlLl9yZW5kZXJJZD09PWEuZ2V0UmVuZGVySWQoKSlyZXR1cm47Y29uc3QgbD1uLl9nZXRXb3JsZE1hdHJpeERldGVybWluYW50KCk8MDtsZXQgdT0oaT1yLm92ZXJyaWRlTWF0ZXJpYWxTaWRlT3JpZW50YXRpb24pIT09bnVsbCYmaSE9PXZvaWQgMD9pOmguc2lkZU9yaWVudGF0aW9uO2wmJih1PXU9PT0wPzE6MCk7Y29uc3QgZD11PT09MDtvLnNldFN0YXRlKGguYmFja0ZhY2VDdWxsaW5nLHZvaWQgMCx2b2lkIDAsZCxoLmN1bGxCYWNrRmFjZXMpO2NvbnN0IGY9ci5fZ2V0SW5zdGFuY2VzUmVuZGVyTGlzdChlLl9pZCwhIWUuZ2V0UmVwbGFjZW1lbnRNZXNoKCkpO2lmKGYubXVzdFJldHVybilyZXR1cm47Y29uc3QgXz1vLmdldENhcHMoKS5pbnN0YW5jZWRBcnJheXMmJihmLnZpc2libGVJbnN0YW5jZXNbZS5faWRdIT09bnVsbCYmZi52aXNpYmxlSW5zdGFuY2VzW2UuX2lkXSE9PXZvaWQgMHx8ci5oYXNUaGluSW5zdGFuY2VzKTtpZighKHRoaXMuY3VzdG9tQWxsb3dSZW5kZXJpbmcmJiF0aGlzLmN1c3RvbUFsbG93UmVuZGVyaW5nKGUpKSlpZih0aGlzLmlzUmVhZHkoZSxfLHQpKXtlLl9yZW5kZXJJZD1hLmdldFJlbmRlcklkKCk7Y29uc3QgRT1oLnNoYWRvd0RlcHRoV3JhcHBlcixtPShzPUU9PW51bGw/dm9pZCAwOkUuZ2V0RWZmZWN0KGUsdGhpcyxvLmN1cnJlbnRSZW5kZXJQYXNzSWQpKSE9PW51bGwmJnMhPT12b2lkIDA/czplLl9nZXREcmF3V3JhcHBlcigpLHY9bWkuR2V0RWZmZWN0KG0pO28uZW5hYmxlRWZmZWN0KG0pLF98fHIuX2JpbmQoZSx2LGguZmlsbE1vZGUpLHRoaXMuZ2V0VHJhbnNmb3JtTWF0cml4KCksdi5zZXRGbG9hdDMoImJpYXNBbmRTY2FsZVNNIix0aGlzLmJpYXMsdGhpcy5ub3JtYWxCaWFzLHRoaXMuZGVwdGhTY2FsZSksdGhpcy5nZXRMaWdodCgpLmdldFR5cGVJRCgpPT09aGUuTElHSFRUWVBFSURfRElSRUNUSU9OQUxMSUdIVD92LnNldFZlY3RvcjMoImxpZ2h0RGF0YVNNIix0aGlzLl9jYWNoZWREaXJlY3Rpb24pOnYuc2V0VmVjdG9yMygibGlnaHREYXRhU00iLHRoaXMuX2NhY2hlZFBvc2l0aW9uKTtjb25zdCBTPXRoaXMuX2dldENhbWVyYSgpO2lmKFMmJnYuc2V0RmxvYXQyKCJkZXB0aFZhbHVlc1NNIix0aGlzLmdldExpZ2h0KCkuZ2V0RGVwdGhNaW5aKFMpLHRoaXMuZ2V0TGlnaHQoKS5nZXREZXB0aE1pblooUykrdGhpcy5nZXRMaWdodCgpLmdldERlcHRoTWF4WihTKSksdCYmdGhpcy5lbmFibGVTb2Z0VHJhbnNwYXJlbnRTaGFkb3cmJnYuc2V0RmxvYXQoInNvZnRUcmFuc3BhcmVudFNoYWRvd1NNIixuLnZpc2liaWxpdHkqaC5hbHBoYSksRSllLl9zZXRNYWluRHJhd1dyYXBwZXJPdmVycmlkZShtKSxFLnN0YW5kYWxvbmU/RS5iYXNlTWF0ZXJpYWwuYmluZEZvclN1Yk1lc2gobi5nZXRXb3JsZE1hdHJpeCgpLHIsZSk6aC5iaW5kRm9yU3ViTWVzaChuLmdldFdvcmxkTWF0cml4KCkscixlKSxlLl9zZXRNYWluRHJhd1dyYXBwZXJPdmVycmlkZShudWxsKTtlbHNle2lmKHRoaXMudXNlT3BhY2l0eVRleHR1cmVGb3JUcmFuc3BhcmVudFNoYWRvdyl7Y29uc3QgQT1oLm9wYWNpdHlUZXh0dXJlO0EmJih2LnNldFRleHR1cmUoImRpZmZ1c2VTYW1wbGVyIixBKSx2LnNldE1hdHJpeCgiZGlmZnVzZU1hdHJpeCIsQS5nZXRUZXh0dXJlTWF0cml4KCl8fHRoaXMuX2RlZmF1bHRUZXh0dXJlTWF0cml4KSl9ZWxzZSBpZihoLm5lZWRBbHBoYVRlc3RpbmcoKXx8aC5uZWVkQWxwaGFCbGVuZGluZygpKXtjb25zdCBBPWguZ2V0QWxwaGFUZXN0VGV4dHVyZSgpO0EmJih2LnNldFRleHR1cmUoImRpZmZ1c2VTYW1wbGVyIixBKSx2LnNldE1hdHJpeCgiZGlmZnVzZU1hdHJpeCIsQS5nZXRUZXh0dXJlTWF0cml4KCl8fHRoaXMuX2RlZmF1bHRUZXh0dXJlTWF0cml4KSl9aWYoci51c2VCb25lcyYmci5jb21wdXRlQm9uZXNVc2luZ1NoYWRlcnMmJnIuc2tlbGV0b24pe2NvbnN0IEE9ci5za2VsZXRvbjtpZihBLmlzVXNpbmdUZXh0dXJlRm9yTWF0cmljZXMpe2NvbnN0IEM9QS5nZXRUcmFuc2Zvcm1NYXRyaXhUZXh0dXJlKHIpO2lmKCFDKXJldHVybjt2LnNldFRleHR1cmUoImJvbmVTYW1wbGVyIixDKSx2LnNldEZsb2F0KCJib25lVGV4dHVyZVdpZHRoIiw0KihBLmJvbmVzLmxlbmd0aCsxKSl9ZWxzZSB2LnNldE1hdHJpY2VzKCJtQm9uZXMiLEEuZ2V0VHJhbnNmb3JtTWF0cmljZXMocikpfWllLkJpbmRNb3JwaFRhcmdldFBhcmFtZXRlcnMocix2KSxyLm1vcnBoVGFyZ2V0TWFuYWdlciYmci5tb3JwaFRhcmdldE1hbmFnZXIuaXNVc2luZ1RleHR1cmVGb3JUYXJnZXRzJiZyLm1vcnBoVGFyZ2V0TWFuYWdlci5fYmluZCh2KSxycyh2LGgsYSl9IXRoaXMuX3VzZVVCTyYmIUUmJnRoaXMuX2JpbmRDdXN0b21FZmZlY3RGb3JSZW5kZXJTdWJNZXNoRm9yU2hhZG93TWFwKGUsdixuKSxpZS5CaW5kU2NlbmVVbmlmb3JtQnVmZmVyKHYsdGhpcy5fc2NlbmUuZ2V0U2NlbmVVbmlmb3JtQnVmZmVyKCkpLHRoaXMuX3NjZW5lLmdldFNjZW5lVW5pZm9ybUJ1ZmZlcigpLmJpbmRVbmlmb3JtQnVmZmVyKCk7Y29uc3QgeT1uLmdldFdvcmxkTWF0cml4KCk7XyYmKG4uZ2V0TWVzaFVuaWZvcm1CdWZmZXIoKS5iaW5kVG9FZmZlY3QodiwiTWVzaCIpLG4udHJhbnNmZXJUb0VmZmVjdCh5KSksdGhpcy5mb3JjZUJhY2tGYWNlc09ubHkmJm8uc2V0U3RhdGUoITAsMCwhMSwhMCxoLmN1bGxCYWNrRmFjZXMpLHRoaXMub25CZWZvcmVTaGFkb3dNYXBSZW5kZXJNZXNoT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMociksdGhpcy5vbkJlZm9yZVNoYWRvd01hcFJlbmRlck9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHYpLHIuX3Byb2Nlc3NSZW5kZXJpbmcobixlLHYsaC5maWxsTW9kZSxmLF8sKEEsQyk9PntuIT09ciYmIUE/KHIuZ2V0TWVzaFVuaWZvcm1CdWZmZXIoKS5iaW5kVG9FZmZlY3QodiwiTWVzaCIpLHIudHJhbnNmZXJUb0VmZmVjdChDKSk6KG4uZ2V0TWVzaFVuaWZvcm1CdWZmZXIoKS5iaW5kVG9FZmZlY3QodiwiTWVzaCIpLG4udHJhbnNmZXJUb0VmZmVjdChBP0M6eSkpfSksdGhpcy5mb3JjZUJhY2tGYWNlc09ubHkmJm8uc2V0U3RhdGUoITAsMCwhMSwhMSxoLmN1bGxCYWNrRmFjZXMpLHRoaXMub25BZnRlclNoYWRvd01hcFJlbmRlck9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKHYpLHRoaXMub25BZnRlclNoYWRvd01hcFJlbmRlck1lc2hPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhyKX1lbHNlIHRoaXMuX3NoYWRvd01hcCYmdGhpcy5fc2hhZG93TWFwLnJlc2V0UmVmcmVzaENvdW50ZXIoKX1fYXBwbHlGaWx0ZXJWYWx1ZXMoKXt0aGlzLl9zaGFkb3dNYXAmJih0aGlzLmZpbHRlcj09PUcuRklMVEVSX05PTkV8fHRoaXMuZmlsdGVyPT09Ry5GSUxURVJfUENTUz90aGlzLl9zaGFkb3dNYXAudXBkYXRlU2FtcGxpbmdNb2RlKE4uTkVBUkVTVF9TQU1QTElOR01PREUpOnRoaXMuX3NoYWRvd01hcC51cGRhdGVTYW1wbGluZ01vZGUoTi5CSUxJTkVBUl9TQU1QTElOR01PREUpKX1mb3JjZUNvbXBpbGF0aW9uKGUsdCl7Y29uc3QgaT17dXNlSW5zdGFuY2VzOiExLC4uLnR9LHM9dGhpcy5nZXRTaGFkb3dNYXAoKTtpZighcyl7ZSYmZSh0aGlzKTtyZXR1cm59Y29uc3Qgcj1zLnJlbmRlckxpc3Q7aWYoIXIpe2UmJmUodGhpcyk7cmV0dXJufWNvbnN0IG49bmV3IEFycmF5O2Zvcihjb25zdCBoIG9mIHIpbi5wdXNoKC4uLmguc3ViTWVzaGVzKTtpZihuLmxlbmd0aD09PTApe2UmJmUodGhpcyk7cmV0dXJufWxldCBhPTA7Y29uc3Qgbz0oKT0+e3ZhciBoLGw7aWYoISghdGhpcy5fc2NlbmV8fCF0aGlzLl9zY2VuZS5nZXRFbmdpbmUoKSkpe2Zvcig7dGhpcy5pc1JlYWR5KG5bYV0saS51c2VJbnN0YW5jZXMsKGw9KGg9blthXS5nZXRNYXRlcmlhbCgpKT09PW51bGx8fGg9PT12b2lkIDA/dm9pZCAwOmgubmVlZEFscGhhQmxlbmRpbmdGb3JNZXNoKG5bYV0uZ2V0TWVzaCgpKSkhPT1udWxsJiZsIT09dm9pZCAwP2w6ITEpOylpZihhKyssYT49bi5sZW5ndGgpe2UmJmUodGhpcyk7cmV0dXJufXNldFRpbWVvdXQobywxNil9fTtvKCl9Zm9yY2VDb21waWxhdGlvbkFzeW5jKGUpe3JldHVybiBuZXcgUHJvbWlzZSh0PT57dGhpcy5mb3JjZUNvbXBpbGF0aW9uKCgpPT57dCgpfSxlKX0pfV9pc1JlYWR5Q3VzdG9tRGVmaW5lcyhlLHQsaSl7fV9wcmVwYXJlU2hhZG93RGVmaW5lcyhlLHQsaSxzKXtpLnB1c2goIiNkZWZpbmUgU01fTElHSFRUWVBFXyIrdGhpcy5fbGlnaHQuZ2V0Q2xhc3NOYW1lKCkudG9VcHBlckNhc2UoKSksaS5wdXNoKCIjZGVmaW5lIFNNX0ZMT0FUICIrKHRoaXMuX3RleHR1cmVUeXBlIT09MD8iMSI6IjAiKSksaS5wdXNoKCIjZGVmaW5lIFNNX0VTTSAiKyh0aGlzLnVzZUV4cG9uZW50aWFsU2hhZG93TWFwfHx0aGlzLnVzZUJsdXJFeHBvbmVudGlhbFNoYWRvd01hcD8iMSI6IjAiKSksaS5wdXNoKCIjZGVmaW5lIFNNX0RFUFRIVEVYVFVSRSAiKyh0aGlzLnVzZVBlcmNlbnRhZ2VDbG9zZXJGaWx0ZXJpbmd8fHRoaXMudXNlQ29udGFjdEhhcmRlbmluZ1NoYWRvdz8iMSI6IjAiKSk7Y29uc3Qgcj1lLmdldE1lc2goKTtyZXR1cm4gaS5wdXNoKCIjZGVmaW5lIFNNX05PUk1BTEJJQVMgIisodGhpcy5ub3JtYWxCaWFzJiZyLmlzVmVydGljZXNEYXRhUHJlc2VudChnLk5vcm1hbEtpbmQpPyIxIjoiMCIpKSxpLnB1c2goIiNkZWZpbmUgU01fRElSRUNUSU9OSU5MSUdIVERBVEEgIisodGhpcy5nZXRMaWdodCgpLmdldFR5cGVJRCgpPT09aGUuTElHSFRUWVBFSURfRElSRUNUSU9OQUxMSUdIVD8iMSI6IjAiKSksaS5wdXNoKCIjZGVmaW5lIFNNX1VTRURJU1RBTkNFICIrKHRoaXMuX2xpZ2h0Lm5lZWRDdWJlKCk/IjEiOiIwIikpLGkucHVzaCgiI2RlZmluZSBTTV9TT0ZUVFJBTlNQQVJFTlRTSEFET1cgIisodGhpcy5lbmFibGVTb2Z0VHJhbnNwYXJlbnRTaGFkb3cmJnM/IjEiOiIwIikpLHRoaXMuX2lzUmVhZHlDdXN0b21EZWZpbmVzKGksZSx0KSxpfWlzUmVhZHkoZSx0LGkpe3ZhciBzO2NvbnN0IHI9ZS5nZXRNYXRlcmlhbCgpLG49cj09bnVsbD92b2lkIDA6ci5zaGFkb3dEZXB0aFdyYXBwZXI7aWYoIXIpcmV0dXJuITE7Y29uc3QgYT1bXTtpZih0aGlzLl9wcmVwYXJlU2hhZG93RGVmaW5lcyhlLHQsYSxpKSxuKXtpZighbi5pc1JlYWR5Rm9yU3ViTWVzaChlLGEsdGhpcyx0LHRoaXMuX3NjZW5lLmdldEVuZ2luZSgpLmN1cnJlbnRSZW5kZXJQYXNzSWQpKXJldHVybiExfWVsc2V7Y29uc3Qgbz1lLl9nZXREcmF3V3JhcHBlcih2b2lkIDAsITApO2xldCBoPW8uZWZmZWN0LGw9by5kZWZpbmVzO2NvbnN0IHU9W2cuUG9zaXRpb25LaW5kXSxkPWUuZ2V0TWVzaCgpO3RoaXMubm9ybWFsQmlhcyYmZC5pc1ZlcnRpY2VzRGF0YVByZXNlbnQoZy5Ob3JtYWxLaW5kKSYmKHUucHVzaChnLk5vcm1hbEtpbmQpLGEucHVzaCgiI2RlZmluZSBOT1JNQUwiKSxkLm5vblVuaWZvcm1TY2FsaW5nJiZhLnB1c2goIiNkZWZpbmUgTk9OVU5JRk9STVNDQUxJTkciKSk7Y29uc3QgZj1yPT1udWxsP3ZvaWQgMDpyLm5lZWRBbHBoYVRlc3RpbmcoKSxfPXI9PW51bGw/dm9pZCAwOnIubmVlZEFscGhhQmxlbmRpbmcoKTtpZihyJiYoZnx8Xykpe2xldCB5PW51bGw7aWYodGhpcy51c2VPcGFjaXR5VGV4dHVyZUZvclRyYW5zcGFyZW50U2hhZG93P3k9ci5vcGFjaXR5VGV4dHVyZTp5PXIuZ2V0QWxwaGFUZXN0VGV4dHVyZSgpLHkpe2lmKCF5LmlzUmVhZHkoKSlyZXR1cm4hMTtjb25zdCBBPShzPXIuYWxwaGFDdXRPZmYpIT09bnVsbCYmcyE9PXZvaWQgMD9zOkcuREVGQVVMVF9BTFBIQV9DVVRPRkY7YS5wdXNoKCIjZGVmaW5lIEFMUEhBVEVYVFVSRSIpLGYmJmEucHVzaChgI2RlZmluZSBBTFBIQVRFU1RWQUxVRSAke0F9JHtBJTE9PT0wPyIuIjoiIn1gKSxkLmlzVmVydGljZXNEYXRhUHJlc2VudChnLlVWS2luZCkmJih1LnB1c2goZy5VVktpbmQpLGEucHVzaCgiI2RlZmluZSBVVjEiKSksZC5pc1ZlcnRpY2VzRGF0YVByZXNlbnQoZy5VVjJLaW5kKSYmeS5jb29yZGluYXRlc0luZGV4PT09MSYmKHUucHVzaChnLlVWMktpbmQpLGEucHVzaCgiI2RlZmluZSBVVjIiKSl9fWNvbnN0IEU9bmV3IHpzO2lmKGQudXNlQm9uZXMmJmQuY29tcHV0ZUJvbmVzVXNpbmdTaGFkZXJzJiZkLnNrZWxldG9uKXt1LnB1c2goZy5NYXRyaWNlc0luZGljZXNLaW5kKSx1LnB1c2goZy5NYXRyaWNlc1dlaWdodHNLaW5kKSxkLm51bUJvbmVJbmZsdWVuY2Vycz40JiYodS5wdXNoKGcuTWF0cmljZXNJbmRpY2VzRXh0cmFLaW5kKSx1LnB1c2goZy5NYXRyaWNlc1dlaWdodHNFeHRyYUtpbmQpKTtjb25zdCB5PWQuc2tlbGV0b247YS5wdXNoKCIjZGVmaW5lIE5VTV9CT05FX0lORkxVRU5DRVJTICIrZC5udW1Cb25lSW5mbHVlbmNlcnMpLGQubnVtQm9uZUluZmx1ZW5jZXJzPjAmJkUuYWRkQ1BVU2tpbm5pbmdGYWxsYmFjaygwLGQpLHkuaXNVc2luZ1RleHR1cmVGb3JNYXRyaWNlcz9hLnB1c2goIiNkZWZpbmUgQk9ORVRFWFRVUkUiKTphLnB1c2goIiNkZWZpbmUgQm9uZXNQZXJNZXNoICIrKHkuYm9uZXMubGVuZ3RoKzEpKX1lbHNlIGEucHVzaCgiI2RlZmluZSBOVU1fQk9ORV9JTkZMVUVOQ0VSUyAwIik7Y29uc3QgbT1kLm1vcnBoVGFyZ2V0TWFuYWdlcjtsZXQgdj0wO2lmKG0mJm0ubnVtSW5mbHVlbmNlcnM+MCYmKGEucHVzaCgiI2RlZmluZSBNT1JQSFRBUkdFVFMiKSx2PW0ubnVtSW5mbHVlbmNlcnMsYS5wdXNoKCIjZGVmaW5lIE5VTV9NT1JQSF9JTkZMVUVOQ0VSUyAiK3YpLG0uaXNVc2luZ1RleHR1cmVGb3JUYXJnZXRzJiZhLnB1c2goIiNkZWZpbmUgTU9SUEhUQVJHRVRTX1RFWFRVUkUiKSxpZS5QcmVwYXJlQXR0cmlidXRlc0Zvck1vcnBoVGFyZ2V0c0luZmx1ZW5jZXJzKHUsZCx2KSksT3Mocix0aGlzLl9zY2VuZSxhKSx0JiYoYS5wdXNoKCIjZGVmaW5lIElOU1RBTkNFUyIpLGllLlB1c2hBdHRyaWJ1dGVzRm9ySW5zdGFuY2VzKHUpLGUuZ2V0UmVuZGVyaW5nTWVzaCgpLmhhc1RoaW5JbnN0YW5jZXMmJmEucHVzaCgiI2RlZmluZSBUSElOX0lOU1RBTkNFUyIpKSx0aGlzLmN1c3RvbVNoYWRlck9wdGlvbnMmJnRoaXMuY3VzdG9tU2hhZGVyT3B0aW9ucy5kZWZpbmVzKWZvcihjb25zdCB5IG9mIHRoaXMuY3VzdG9tU2hhZGVyT3B0aW9ucy5kZWZpbmVzKWEuaW5kZXhPZih5KT09PS0xJiZhLnB1c2goeSk7Y29uc3QgUz1hLmpvaW4oYApgKTtpZihsIT09Uyl7bD1TO2xldCB5PSJzaGFkb3dNYXAiO2NvbnN0IEE9WyJ3b3JsZCIsIm1Cb25lcyIsInZpZXdQcm9qZWN0aW9uIiwiZGlmZnVzZU1hdHJpeCIsImxpZ2h0RGF0YVNNIiwiZGVwdGhWYWx1ZXNTTSIsImJpYXNBbmRTY2FsZVNNIiwibW9ycGhUYXJnZXRJbmZsdWVuY2VzIiwiYm9uZVRleHR1cmVXaWR0aCIsInNvZnRUcmFuc3BhcmVudFNoYWRvd1NNIiwibW9ycGhUYXJnZXRUZXh0dXJlSW5mbyIsIm1vcnBoVGFyZ2V0VGV4dHVyZUluZGljZXMiXSxDPVsiZGlmZnVzZVNhbXBsZXIiLCJib25lU2FtcGxlciIsIm1vcnBoVGFyZ2V0cyJdLGI9WyJTY2VuZSIsIk1lc2giXTtpZihzcyhBKSx0aGlzLmN1c3RvbVNoYWRlck9wdGlvbnMpe2lmKHk9dGhpcy5jdXN0b21TaGFkZXJPcHRpb25zLnNoYWRlck5hbWUsdGhpcy5jdXN0b21TaGFkZXJPcHRpb25zLmF0dHJpYnV0ZXMpZm9yKGNvbnN0IEwgb2YgdGhpcy5jdXN0b21TaGFkZXJPcHRpb25zLmF0dHJpYnV0ZXMpdS5pbmRleE9mKEwpPT09LTEmJnUucHVzaChMKTtpZih0aGlzLmN1c3RvbVNoYWRlck9wdGlvbnMudW5pZm9ybXMpZm9yKGNvbnN0IEwgb2YgdGhpcy5jdXN0b21TaGFkZXJPcHRpb25zLnVuaWZvcm1zKUEuaW5kZXhPZihMKT09PS0xJiZBLnB1c2goTCk7aWYodGhpcy5jdXN0b21TaGFkZXJPcHRpb25zLnNhbXBsZXJzKWZvcihjb25zdCBMIG9mIHRoaXMuY3VzdG9tU2hhZGVyT3B0aW9ucy5zYW1wbGVycylDLmluZGV4T2YoTCk9PT0tMSYmQy5wdXNoKEwpfWNvbnN0IE09dGhpcy5fc2NlbmUuZ2V0RW5naW5lKCk7aD1NLmNyZWF0ZUVmZmVjdCh5LHthdHRyaWJ1dGVzOnUsdW5pZm9ybXNOYW1lczpBLHVuaWZvcm1CdWZmZXJzTmFtZXM6YixzYW1wbGVyczpDLGRlZmluZXM6UyxmYWxsYmFja3M6RSxvbkNvbXBpbGVkOm51bGwsb25FcnJvcjpudWxsLGluZGV4UGFyYW1ldGVyczp7bWF4U2ltdWx0YW5lb3VzTW9ycGhUYXJnZXRzOnZ9fSxNKSxvLnNldEVmZmVjdChoLGwpfWlmKCFoLmlzUmVhZHkoKSlyZXR1cm4hMX1yZXR1cm4odGhpcy51c2VCbHVyRXhwb25lbnRpYWxTaGFkb3dNYXB8fHRoaXMudXNlQmx1ckNsb3NlRXhwb25lbnRpYWxTaGFkb3dNYXApJiYoIXRoaXMuX2JsdXJQb3N0UHJvY2Vzc2VzfHwhdGhpcy5fYmx1clBvc3RQcm9jZXNzZXMubGVuZ3RoKSYmdGhpcy5faW5pdGlhbGl6ZUJsdXJSVFRBbmRQb3N0UHJvY2Vzc2VzKCksISh0aGlzLl9rZXJuZWxCbHVyWFBvc3Rwcm9jZXNzJiYhdGhpcy5fa2VybmVsQmx1clhQb3N0cHJvY2Vzcy5pc1JlYWR5KCl8fHRoaXMuX2tlcm5lbEJsdXJZUG9zdHByb2Nlc3MmJiF0aGlzLl9rZXJuZWxCbHVyWVBvc3Rwcm9jZXNzLmlzUmVhZHkoKXx8dGhpcy5fYm94Qmx1clBvc3Rwcm9jZXNzJiYhdGhpcy5fYm94Qmx1clBvc3Rwcm9jZXNzLmlzUmVhZHkoKSl9cHJlcGFyZURlZmluZXMoZSx0KXtjb25zdCBpPXRoaXMuX3NjZW5lLHM9dGhpcy5fbGlnaHQ7IWkuc2hhZG93c0VuYWJsZWR8fCFzLnNoYWRvd0VuYWJsZWR8fChlWyJTSEFET1ciK3RdPSEwLHRoaXMudXNlQ29udGFjdEhhcmRlbmluZ1NoYWRvdz8oZVsiU0hBRE9XUENTUyIrdF09ITAsdGhpcy5fZmlsdGVyaW5nUXVhbGl0eT09PUcuUVVBTElUWV9MT1c/ZVsiU0hBRE9XTE9XUVVBTElUWSIrdF09ITA6dGhpcy5fZmlsdGVyaW5nUXVhbGl0eT09PUcuUVVBTElUWV9NRURJVU0mJihlWyJTSEFET1dNRURJVU1RVUFMSVRZIit0XT0hMCkpOnRoaXMudXNlUGVyY2VudGFnZUNsb3NlckZpbHRlcmluZz8oZVsiU0hBRE9XUENGIit0XT0hMCx0aGlzLl9maWx0ZXJpbmdRdWFsaXR5PT09Ry5RVUFMSVRZX0xPVz9lWyJTSEFET1dMT1dRVUFMSVRZIit0XT0hMDp0aGlzLl9maWx0ZXJpbmdRdWFsaXR5PT09Ry5RVUFMSVRZX01FRElVTSYmKGVbIlNIQURPV01FRElVTVFVQUxJVFkiK3RdPSEwKSk6dGhpcy51c2VQb2lzc29uU2FtcGxpbmc/ZVsiU0hBRE9XUE9JU1NPTiIrdF09ITA6dGhpcy51c2VFeHBvbmVudGlhbFNoYWRvd01hcHx8dGhpcy51c2VCbHVyRXhwb25lbnRpYWxTaGFkb3dNYXA/ZVsiU0hBRE9XRVNNIit0XT0hMDoodGhpcy51c2VDbG9zZUV4cG9uZW50aWFsU2hhZG93TWFwfHx0aGlzLnVzZUJsdXJDbG9zZUV4cG9uZW50aWFsU2hhZG93TWFwKSYmKGVbIlNIQURPV0NMT1NFRVNNIit0XT0hMCkscy5uZWVkQ3ViZSgpJiYoZVsiU0hBRE9XQ1VCRSIrdF09ITApKX1iaW5kU2hhZG93TGlnaHQoZSx0KXtjb25zdCBpPXRoaXMuX2xpZ2h0O2lmKCF0aGlzLl9zY2VuZS5zaGFkb3dzRW5hYmxlZHx8IWkuc2hhZG93RW5hYmxlZClyZXR1cm47Y29uc3Qgcj10aGlzLl9nZXRDYW1lcmEoKTtpZighcilyZXR1cm47Y29uc3Qgbj10aGlzLmdldFNoYWRvd01hcCgpO24mJihpLm5lZWRDdWJlKCl8fHQuc2V0TWF0cml4KCJsaWdodE1hdHJpeCIrZSx0aGlzLmdldFRyYW5zZm9ybU1hdHJpeCgpKSx0aGlzLl9maWx0ZXI9PT1HLkZJTFRFUl9QQ0Y/KHQuc2V0RGVwdGhTdGVuY2lsVGV4dHVyZSgic2hhZG93U2FtcGxlciIrZSx0aGlzLmdldFNoYWRvd01hcEZvclJlbmRlcmluZygpKSxpLl91bmlmb3JtQnVmZmVyLnVwZGF0ZUZsb2F0NCgic2hhZG93c0luZm8iLHRoaXMuZ2V0RGFya25lc3MoKSxuLmdldFNpemUoKS53aWR0aCwxL24uZ2V0U2l6ZSgpLndpZHRoLHRoaXMuZnJ1c3R1bUVkZ2VGYWxsb2ZmLGUpKTp0aGlzLl9maWx0ZXI9PT1HLkZJTFRFUl9QQ1NTPyh0LnNldERlcHRoU3RlbmNpbFRleHR1cmUoInNoYWRvd1NhbXBsZXIiK2UsdGhpcy5nZXRTaGFkb3dNYXBGb3JSZW5kZXJpbmcoKSksdC5zZXRUZXh0dXJlKCJkZXB0aFNhbXBsZXIiK2UsdGhpcy5nZXRTaGFkb3dNYXBGb3JSZW5kZXJpbmcoKSksaS5fdW5pZm9ybUJ1ZmZlci51cGRhdGVGbG9hdDQoInNoYWRvd3NJbmZvIix0aGlzLmdldERhcmtuZXNzKCksMS9uLmdldFNpemUoKS53aWR0aCx0aGlzLl9jb250YWN0SGFyZGVuaW5nTGlnaHRTaXplVVZSYXRpbypuLmdldFNpemUoKS53aWR0aCx0aGlzLmZydXN0dW1FZGdlRmFsbG9mZixlKSk6KHQuc2V0VGV4dHVyZSgic2hhZG93U2FtcGxlciIrZSx0aGlzLmdldFNoYWRvd01hcEZvclJlbmRlcmluZygpKSxpLl91bmlmb3JtQnVmZmVyLnVwZGF0ZUZsb2F0NCgic2hhZG93c0luZm8iLHRoaXMuZ2V0RGFya25lc3MoKSx0aGlzLmJsdXJTY2FsZS9uLmdldFNpemUoKS53aWR0aCx0aGlzLmRlcHRoU2NhbGUsdGhpcy5mcnVzdHVtRWRnZUZhbGxvZmYsZSkpLGkuX3VuaWZvcm1CdWZmZXIudXBkYXRlRmxvYXQyKCJkZXB0aFZhbHVlcyIsdGhpcy5nZXRMaWdodCgpLmdldERlcHRoTWluWihyKSx0aGlzLmdldExpZ2h0KCkuZ2V0RGVwdGhNaW5aKHIpK3RoaXMuZ2V0TGlnaHQoKS5nZXREZXB0aE1heFoociksZSkpfWdldFRyYW5zZm9ybU1hdHJpeCgpe2NvbnN0IGU9dGhpcy5fc2NlbmU7aWYodGhpcy5fY3VycmVudFJlbmRlcklkPT09ZS5nZXRSZW5kZXJJZCgpJiZ0aGlzLl9jdXJyZW50RmFjZUluZGV4Q2FjaGU9PT10aGlzLl9jdXJyZW50RmFjZUluZGV4KXJldHVybiB0aGlzLl90cmFuc2Zvcm1NYXRyaXg7dGhpcy5fY3VycmVudFJlbmRlcklkPWUuZ2V0UmVuZGVySWQoKSx0aGlzLl9jdXJyZW50RmFjZUluZGV4Q2FjaGU9dGhpcy5fY3VycmVudEZhY2VJbmRleDtsZXQgdD10aGlzLl9saWdodC5wb3NpdGlvbjtpZih0aGlzLl9saWdodC5jb21wdXRlVHJhbnNmb3JtZWRJbmZvcm1hdGlvbigpJiYodD10aGlzLl9saWdodC50cmFuc2Zvcm1lZFBvc2l0aW9uKSxwLk5vcm1hbGl6ZVRvUmVmKHRoaXMuX2xpZ2h0LmdldFNoYWRvd0RpcmVjdGlvbih0aGlzLl9jdXJyZW50RmFjZUluZGV4KSx0aGlzLl9saWdodERpcmVjdGlvbiksTWF0aC5hYnMocC5Eb3QodGhpcy5fbGlnaHREaXJlY3Rpb24scC5VcCgpKSk9PT0xJiYodGhpcy5fbGlnaHREaXJlY3Rpb24uej0xZS0xMyksdGhpcy5fbGlnaHQubmVlZFByb2plY3Rpb25NYXRyaXhDb21wdXRlKCl8fCF0aGlzLl9jYWNoZWRQb3NpdGlvbnx8IXRoaXMuX2NhY2hlZERpcmVjdGlvbnx8IXQuZXF1YWxzKHRoaXMuX2NhY2hlZFBvc2l0aW9uKXx8IXRoaXMuX2xpZ2h0RGlyZWN0aW9uLmVxdWFscyh0aGlzLl9jYWNoZWREaXJlY3Rpb24pKXt0aGlzLl9jYWNoZWRQb3NpdGlvbi5jb3B5RnJvbSh0KSx0aGlzLl9jYWNoZWREaXJlY3Rpb24uY29weUZyb20odGhpcy5fbGlnaHREaXJlY3Rpb24pLHguTG9va0F0TEhUb1JlZih0LHQuYWRkKHRoaXMuX2xpZ2h0RGlyZWN0aW9uKSxwLlVwKCksdGhpcy5fdmlld01hdHJpeCk7Y29uc3QgaT10aGlzLmdldFNoYWRvd01hcCgpO2lmKGkpe2NvbnN0IHM9aS5yZW5kZXJMaXN0O3MmJnRoaXMuX2xpZ2h0LnNldFNoYWRvd1Byb2plY3Rpb25NYXRyaXgodGhpcy5fcHJvamVjdGlvbk1hdHJpeCx0aGlzLl92aWV3TWF0cml4LHMpfXRoaXMuX3ZpZXdNYXRyaXgubXVsdGlwbHlUb1JlZih0aGlzLl9wcm9qZWN0aW9uTWF0cml4LHRoaXMuX3RyYW5zZm9ybU1hdHJpeCl9cmV0dXJuIHRoaXMuX3RyYW5zZm9ybU1hdHJpeH1yZWNyZWF0ZVNoYWRvd01hcCgpe2NvbnN0IGU9dGhpcy5fc2hhZG93TWFwO2lmKCFlKXJldHVybjtjb25zdCB0PWUucmVuZGVyTGlzdDtpZih0aGlzLl9kaXNwb3NlUlRUYW5kUG9zdFByb2Nlc3NlcygpLHRoaXMuX2luaXRpYWxpemVHZW5lcmF0b3IoKSx0aGlzLmZpbHRlcj10aGlzLl9maWx0ZXIsdGhpcy5fYXBwbHlGaWx0ZXJWYWx1ZXMoKSx0KXt0aGlzLl9zaGFkb3dNYXAucmVuZGVyTGlzdHx8KHRoaXMuX3NoYWRvd01hcC5yZW5kZXJMaXN0PVtdKTtmb3IoY29uc3QgaSBvZiB0KXRoaXMuX3NoYWRvd01hcC5yZW5kZXJMaXN0LnB1c2goaSl9ZWxzZSB0aGlzLl9zaGFkb3dNYXAucmVuZGVyTGlzdD1udWxsfV9kaXNwb3NlQmx1clBvc3RQcm9jZXNzZXMoKXt0aGlzLl9zaGFkb3dNYXAyJiYodGhpcy5fc2hhZG93TWFwMi5kaXNwb3NlKCksdGhpcy5fc2hhZG93TWFwMj1udWxsKSx0aGlzLl9ib3hCbHVyUG9zdHByb2Nlc3MmJih0aGlzLl9ib3hCbHVyUG9zdHByb2Nlc3MuZGlzcG9zZSgpLHRoaXMuX2JveEJsdXJQb3N0cHJvY2Vzcz1udWxsKSx0aGlzLl9rZXJuZWxCbHVyWFBvc3Rwcm9jZXNzJiYodGhpcy5fa2VybmVsQmx1clhQb3N0cHJvY2Vzcy5kaXNwb3NlKCksdGhpcy5fa2VybmVsQmx1clhQb3N0cHJvY2Vzcz1udWxsKSx0aGlzLl9rZXJuZWxCbHVyWVBvc3Rwcm9jZXNzJiYodGhpcy5fa2VybmVsQmx1cllQb3N0cHJvY2Vzcy5kaXNwb3NlKCksdGhpcy5fa2VybmVsQmx1cllQb3N0cHJvY2Vzcz1udWxsKSx0aGlzLl9ibHVyUG9zdFByb2Nlc3Nlcz1bXX1fZGlzcG9zZVJUVGFuZFBvc3RQcm9jZXNzZXMoKXt0aGlzLl9zaGFkb3dNYXAmJih0aGlzLl9zaGFkb3dNYXAuZGlzcG9zZSgpLHRoaXMuX3NoYWRvd01hcD1udWxsKSx0aGlzLl9kaXNwb3NlQmx1clBvc3RQcm9jZXNzZXMoKX1fZGlzcG9zZVNjZW5lVUJPcygpe2lmKHRoaXMuX3NjZW5lVUJPcyl7Zm9yKGNvbnN0IGUgb2YgdGhpcy5fc2NlbmVVQk9zKWUuZGlzcG9zZSgpO3RoaXMuX3NjZW5lVUJPcz1bXX19ZGlzcG9zZSgpe2lmKHRoaXMuX2Rpc3Bvc2VSVFRhbmRQb3N0UHJvY2Vzc2VzKCksdGhpcy5fZGlzcG9zZVNjZW5lVUJPcygpLHRoaXMuX2xpZ2h0KXtpZih0aGlzLl9saWdodC5fc2hhZG93R2VuZXJhdG9ycyl7Y29uc3QgZT10aGlzLl9saWdodC5fc2hhZG93R2VuZXJhdG9ycy5lbnRyaWVzKCk7Zm9yKGxldCB0PWUubmV4dCgpO3QuZG9uZSE9PSEwO3Q9ZS5uZXh0KCkpe2NvbnN0W2ksc109dC52YWx1ZTtzPT09dGhpcyYmdGhpcy5fbGlnaHQuX3NoYWRvd0dlbmVyYXRvcnMuZGVsZXRlKGkpfXRoaXMuX2xpZ2h0Ll9zaGFkb3dHZW5lcmF0b3JzLnNpemU9PT0wJiYodGhpcy5fbGlnaHQuX3NoYWRvd0dlbmVyYXRvcnM9bnVsbCl9dGhpcy5fbGlnaHQuX21hcmtNZXNoZXNBc0xpZ2h0RGlydHkoKX10aGlzLm9uQmVmb3JlU2hhZG93TWFwUmVuZGVyTWVzaE9ic2VydmFibGUuY2xlYXIoKSx0aGlzLm9uQmVmb3JlU2hhZG93TWFwUmVuZGVyT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMub25BZnRlclNoYWRvd01hcFJlbmRlck1lc2hPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5vbkFmdGVyU2hhZG93TWFwUmVuZGVyT2JzZXJ2YWJsZS5jbGVhcigpfXNlcmlhbGl6ZSgpe3ZhciBlO2NvbnN0IHQ9e30saT10aGlzLmdldFNoYWRvd01hcCgpO2lmKCFpKXJldHVybiB0O2lmKHQuY2xhc3NOYW1lPXRoaXMuZ2V0Q2xhc3NOYW1lKCksdC5saWdodElkPXRoaXMuX2xpZ2h0LmlkLHQuY2FtZXJhSWQ9KGU9dGhpcy5fY2FtZXJhKT09PW51bGx8fGU9PT12b2lkIDA/dm9pZCAwOmUuaWQsdC5pZD10aGlzLmlkLHQubWFwU2l6ZT1pLmdldFJlbmRlclNpemUoKSx0LmZvcmNlQmFja0ZhY2VzT25seT10aGlzLmZvcmNlQmFja0ZhY2VzT25seSx0LmRhcmtuZXNzPXRoaXMuZ2V0RGFya25lc3MoKSx0LnRyYW5zcGFyZW5jeVNoYWRvdz10aGlzLl90cmFuc3BhcmVuY3lTaGFkb3csdC5mcnVzdHVtRWRnZUZhbGxvZmY9dGhpcy5mcnVzdHVtRWRnZUZhbGxvZmYsdC5iaWFzPXRoaXMuYmlhcyx0Lm5vcm1hbEJpYXM9dGhpcy5ub3JtYWxCaWFzLHQudXNlUGVyY2VudGFnZUNsb3NlckZpbHRlcmluZz10aGlzLnVzZVBlcmNlbnRhZ2VDbG9zZXJGaWx0ZXJpbmcsdC51c2VDb250YWN0SGFyZGVuaW5nU2hhZG93PXRoaXMudXNlQ29udGFjdEhhcmRlbmluZ1NoYWRvdyx0LmNvbnRhY3RIYXJkZW5pbmdMaWdodFNpemVVVlJhdGlvPXRoaXMuY29udGFjdEhhcmRlbmluZ0xpZ2h0U2l6ZVVWUmF0aW8sdC5maWx0ZXJpbmdRdWFsaXR5PXRoaXMuZmlsdGVyaW5nUXVhbGl0eSx0LnVzZUV4cG9uZW50aWFsU2hhZG93TWFwPXRoaXMudXNlRXhwb25lbnRpYWxTaGFkb3dNYXAsdC51c2VCbHVyRXhwb25lbnRpYWxTaGFkb3dNYXA9dGhpcy51c2VCbHVyRXhwb25lbnRpYWxTaGFkb3dNYXAsdC51c2VDbG9zZUV4cG9uZW50aWFsU2hhZG93TWFwPXRoaXMudXNlQmx1ckV4cG9uZW50aWFsU2hhZG93TWFwLHQudXNlQmx1ckNsb3NlRXhwb25lbnRpYWxTaGFkb3dNYXA9dGhpcy51c2VCbHVyRXhwb25lbnRpYWxTaGFkb3dNYXAsdC51c2VQb2lzc29uU2FtcGxpbmc9dGhpcy51c2VQb2lzc29uU2FtcGxpbmcsdC5kZXB0aFNjYWxlPXRoaXMuZGVwdGhTY2FsZSx0LmJsdXJCb3hPZmZzZXQ9dGhpcy5ibHVyQm94T2Zmc2V0LHQuYmx1cktlcm5lbD10aGlzLmJsdXJLZXJuZWwsdC5ibHVyU2NhbGU9dGhpcy5ibHVyU2NhbGUsdC51c2VLZXJuZWxCbHVyPXRoaXMudXNlS2VybmVsQmx1cix0LnJlbmRlckxpc3Q9W10saS5yZW5kZXJMaXN0KWZvcihsZXQgcz0wO3M8aS5yZW5kZXJMaXN0Lmxlbmd0aDtzKyspe2NvbnN0IHI9aS5yZW5kZXJMaXN0W3NdO3QucmVuZGVyTGlzdC5wdXNoKHIuaWQpfXJldHVybiB0fXN0YXRpYyBQYXJzZShlLHQsaSl7Y29uc3Qgcz10LmdldExpZ2h0QnlJZChlLmxpZ2h0SWQpLHI9ZS5jYW1lcmFJZCE9PXZvaWQgMD90LmdldENhbWVyYUJ5SWQoZS5jYW1lcmFJZCk6bnVsbCxuPWk/aShlLm1hcFNpemUscyxyKTpuZXcgRyhlLm1hcFNpemUscyx2b2lkIDAsciksYT1uLmdldFNoYWRvd01hcCgpO2ZvcihsZXQgbz0wO288ZS5yZW5kZXJMaXN0Lmxlbmd0aDtvKyspdC5nZXRNZXNoZXNCeUlkKGUucmVuZGVyTGlzdFtvXSkuZm9yRWFjaChmdW5jdGlvbihsKXthJiYoYS5yZW5kZXJMaXN0fHwoYS5yZW5kZXJMaXN0PVtdKSxhLnJlbmRlckxpc3QucHVzaChsKSl9KTtyZXR1cm4gZS5pZCE9PXZvaWQgMCYmKG4uaWQ9ZS5pZCksbi5mb3JjZUJhY2tGYWNlc09ubHk9ISFlLmZvcmNlQmFja0ZhY2VzT25seSxlLmRhcmtuZXNzIT09dm9pZCAwJiZuLnNldERhcmtuZXNzKGUuZGFya25lc3MpLGUudHJhbnNwYXJlbmN5U2hhZG93JiZuLnNldFRyYW5zcGFyZW5jeVNoYWRvdyghMCksZS5mcnVzdHVtRWRnZUZhbGxvZmYhPT12b2lkIDAmJihuLmZydXN0dW1FZGdlRmFsbG9mZj1lLmZydXN0dW1FZGdlRmFsbG9mZiksZS5iaWFzIT09dm9pZCAwJiYobi5iaWFzPWUuYmlhcyksZS5ub3JtYWxCaWFzIT09dm9pZCAwJiYobi5ub3JtYWxCaWFzPWUubm9ybWFsQmlhcyksZS51c2VQZXJjZW50YWdlQ2xvc2VyRmlsdGVyaW5nP24udXNlUGVyY2VudGFnZUNsb3NlckZpbHRlcmluZz0hMDplLnVzZUNvbnRhY3RIYXJkZW5pbmdTaGFkb3c/bi51c2VDb250YWN0SGFyZGVuaW5nU2hhZG93PSEwOmUudXNlUG9pc3NvblNhbXBsaW5nP24udXNlUG9pc3NvblNhbXBsaW5nPSEwOmUudXNlRXhwb25lbnRpYWxTaGFkb3dNYXA/bi51c2VFeHBvbmVudGlhbFNoYWRvd01hcD0hMDplLnVzZUJsdXJFeHBvbmVudGlhbFNoYWRvd01hcD9uLnVzZUJsdXJFeHBvbmVudGlhbFNoYWRvd01hcD0hMDplLnVzZUNsb3NlRXhwb25lbnRpYWxTaGFkb3dNYXA/bi51c2VDbG9zZUV4cG9uZW50aWFsU2hhZG93TWFwPSEwOmUudXNlQmx1ckNsb3NlRXhwb25lbnRpYWxTaGFkb3dNYXA/bi51c2VCbHVyQ2xvc2VFeHBvbmVudGlhbFNoYWRvd01hcD0hMDplLnVzZVZhcmlhbmNlU2hhZG93TWFwP24udXNlRXhwb25lbnRpYWxTaGFkb3dNYXA9ITA6ZS51c2VCbHVyVmFyaWFuY2VTaGFkb3dNYXAmJihuLnVzZUJsdXJFeHBvbmVudGlhbFNoYWRvd01hcD0hMCksZS5jb250YWN0SGFyZGVuaW5nTGlnaHRTaXplVVZSYXRpbyE9PXZvaWQgMCYmKG4uY29udGFjdEhhcmRlbmluZ0xpZ2h0U2l6ZVVWUmF0aW89ZS5jb250YWN0SGFyZGVuaW5nTGlnaHRTaXplVVZSYXRpbyksZS5maWx0ZXJpbmdRdWFsaXR5IT09dm9pZCAwJiYobi5maWx0ZXJpbmdRdWFsaXR5PWUuZmlsdGVyaW5nUXVhbGl0eSksZS5kZXB0aFNjYWxlJiYobi5kZXB0aFNjYWxlPWUuZGVwdGhTY2FsZSksZS5ibHVyU2NhbGUmJihuLmJsdXJTY2FsZT1lLmJsdXJTY2FsZSksZS5ibHVyQm94T2Zmc2V0JiYobi5ibHVyQm94T2Zmc2V0PWUuYmx1ckJveE9mZnNldCksZS51c2VLZXJuZWxCbHVyJiYobi51c2VLZXJuZWxCbHVyPWUudXNlS2VybmVsQmx1ciksZS5ibHVyS2VybmVsJiYobi5ibHVyS2VybmVsPWUuYmx1cktlcm5lbCksbn19Ry5DTEFTU05BTUU9IlNoYWRvd0dlbmVyYXRvciIsRy5GSUxURVJfTk9ORT0wLEcuRklMVEVSX0VYUE9ORU5USUFMU0hBRE9XTUFQPTEsRy5GSUxURVJfUE9JU1NPTlNBTVBMSU5HPTIsRy5GSUxURVJfQkxVUkVYUE9ORU5USUFMU0hBRE9XTUFQPTMsRy5GSUxURVJfQ0xPU0VFWFBPTkVOVElBTFNIQURPV01BUD00LEcuRklMVEVSX0JMVVJDTE9TRUVYUE9ORU5USUFMU0hBRE9XTUFQPTUsRy5GSUxURVJfUENGPTYsRy5GSUxURVJfUENTUz03LEcuUVVBTElUWV9ISUdIPTAsRy5RVUFMSVRZX01FRElVTT0xLEcuUVVBTElUWV9MT1c9MixHLkRFRkFVTFRfQUxQSEFfQ1VUT0ZGPS41LEcuX1NjZW5lQ29tcG9uZW50SW5pdGlhbGl6YXRpb249Yz0+e3Rocm93ICQoIlNoYWRvd0dlbmVyYXRvclNjZW5lQ29tcG9uZW50Iil9O2NvbnN0IE1vPSJkZXB0aFBpeGVsU2hhZGVyIixBbz1gI2lmZGVmIEFMUEhBVEVTVAp2YXJ5aW5nIHZlYzIgdlVWOwp1bmlmb3JtIHNhbXBsZXIyRCBkaWZmdXNlU2FtcGxlcjsKI2VuZGlmCiNpbmNsdWRlPGNsaXBQbGFuZUZyYWdtZW50RGVjbGFyYXRpb24+CnZhcnlpbmcgZmxvYXQgdkRlcHRoTWV0cmljOwojaWZkZWYgUEFDS0VECiNpbmNsdWRlPHBhY2tpbmdGdW5jdGlvbnM+CiNlbmRpZgojZGVmaW5lIENVU1RPTV9GUkFHTUVOVF9ERUZJTklUSU9OUwp2b2lkIG1haW4odm9pZCkKewojaW5jbHVkZTxjbGlwUGxhbmVGcmFnbWVudD4KI2lmZGVmIEFMUEhBVEVTVAppZiAodGV4dHVyZTJEKGRpZmZ1c2VTYW1wbGVyLHZVVikuYTwwLjQpCmRpc2NhcmQ7CiNlbmRpZgojaWZkZWYgTk9OTElORUFSREVQVEgKI2lmZGVmIFBBQ0tFRApnbF9GcmFnQ29sb3I9cGFjayhnbF9GcmFnQ29vcmQueik7CiNlbHNlCmdsX0ZyYWdDb2xvcj12ZWM0KGdsX0ZyYWdDb29yZC56LDAuMCwwLjAsMC4wKTsKI2VuZGlmCiNlbHNlCiNpZmRlZiBQQUNLRUQKZ2xfRnJhZ0NvbG9yPXBhY2sodkRlcHRoTWV0cmljKTsKI2Vsc2UKZ2xfRnJhZ0NvbG9yPXZlYzQodkRlcHRoTWV0cmljLDAuMCwwLjAsMS4wKTsKI2VuZGlmCiNlbmRpZgp9YDtVLlNoYWRlcnNTdG9yZVtNb109QW87Y29uc3QgUm89Imluc3RhbmNlc0RlY2xhcmF0aW9uIix5bz1gI2lmZGVmIElOU1RBTkNFUwphdHRyaWJ1dGUgdmVjNCB3b3JsZDA7CmF0dHJpYnV0ZSB2ZWM0IHdvcmxkMTsKYXR0cmlidXRlIHZlYzQgd29ybGQyOwphdHRyaWJ1dGUgdmVjNCB3b3JsZDM7CiNpZmRlZiBJTlNUQU5DRVNDT0xPUgphdHRyaWJ1dGUgdmVjNCBpbnN0YW5jZUNvbG9yOwojZW5kaWYKI2lmIGRlZmluZWQoVEhJTl9JTlNUQU5DRVMpICYmICFkZWZpbmVkKFdPUkxEX1VCTykKdW5pZm9ybSBtYXQ0IHdvcmxkOwojZW5kaWYKI2lmIGRlZmluZWQoVkVMT0NJVFkpIHx8IGRlZmluZWQoUFJFUEFTU19WRUxPQ0lUWSkKYXR0cmlidXRlIHZlYzQgcHJldmlvdXNXb3JsZDA7CmF0dHJpYnV0ZSB2ZWM0IHByZXZpb3VzV29ybGQxOwphdHRyaWJ1dGUgdmVjNCBwcmV2aW91c1dvcmxkMjsKYXR0cmlidXRlIHZlYzQgcHJldmlvdXNXb3JsZDM7CiNpZmRlZiBUSElOX0lOU1RBTkNFUwp1bmlmb3JtIG1hdDQgcHJldmlvdXNXb3JsZDsKI2VuZGlmCiNlbmRpZgojZWxzZQojaWYgIWRlZmluZWQoV09STERfVUJPKQp1bmlmb3JtIG1hdDQgd29ybGQ7CiNlbmRpZgojaWYgZGVmaW5lZChWRUxPQ0lUWSkgfHwgZGVmaW5lZChQUkVQQVNTX1ZFTE9DSVRZKQp1bmlmb3JtIG1hdDQgcHJldmlvdXNXb3JsZDsKI2VuZGlmCiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbUm9dPXlvO2NvbnN0IENvPSJkZXB0aFZlcnRleFNoYWRlciIsSW89YGF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uOwojaW5jbHVkZTxib25lc0RlY2xhcmF0aW9uPgojaW5jbHVkZTxiYWtlZFZlcnRleEFuaW1hdGlvbkRlY2xhcmF0aW9uPgojaW5jbHVkZTxtb3JwaFRhcmdldHNWZXJ0ZXhHbG9iYWxEZWNsYXJhdGlvbj4KI2luY2x1ZGU8bW9ycGhUYXJnZXRzVmVydGV4RGVjbGFyYXRpb24+WzAuLm1heFNpbXVsdGFuZW91c01vcnBoVGFyZ2V0c10KI2luY2x1ZGU8Y2xpcFBsYW5lVmVydGV4RGVjbGFyYXRpb24+CiNpbmNsdWRlPGluc3RhbmNlc0RlY2xhcmF0aW9uPgp1bmlmb3JtIG1hdDQgdmlld1Byb2plY3Rpb247CnVuaWZvcm0gdmVjMiBkZXB0aFZhbHVlczsKI2lmIGRlZmluZWQoQUxQSEFURVNUKSB8fCBkZWZpbmVkKE5FRURfVVYpCnZhcnlpbmcgdmVjMiB2VVY7CnVuaWZvcm0gbWF0NCBkaWZmdXNlTWF0cml4OwojaWZkZWYgVVYxCmF0dHJpYnV0ZSB2ZWMyIHV2OwojZW5kaWYKI2lmZGVmIFVWMgphdHRyaWJ1dGUgdmVjMiB1djI7CiNlbmRpZgojZW5kaWYKdmFyeWluZyBmbG9hdCB2RGVwdGhNZXRyaWM7CiNkZWZpbmUgQ1VTVE9NX1ZFUlRFWF9ERUZJTklUSU9OUwp2b2lkIG1haW4odm9pZCkKewp2ZWMzIHBvc2l0aW9uVXBkYXRlZD1wb3NpdGlvbjsKI2lmZGVmIFVWMQp2ZWMyIHV2VXBkYXRlZD11djsKI2VuZGlmCiNpbmNsdWRlPG1vcnBoVGFyZ2V0c1ZlcnRleEdsb2JhbD4KI2luY2x1ZGU8bW9ycGhUYXJnZXRzVmVydGV4PlswLi5tYXhTaW11bHRhbmVvdXNNb3JwaFRhcmdldHNdCiNpbmNsdWRlPGluc3RhbmNlc1ZlcnRleD4KI2luY2x1ZGU8Ym9uZXNWZXJ0ZXg+CiNpbmNsdWRlPGJha2VkVmVydGV4QW5pbWF0aW9uPgp2ZWM0IHdvcmxkUG9zPWZpbmFsV29ybGQqdmVjNChwb3NpdGlvblVwZGF0ZWQsMS4wKTsKI2luY2x1ZGU8Y2xpcFBsYW5lVmVydGV4PgpnbF9Qb3NpdGlvbj12aWV3UHJvamVjdGlvbip3b3JsZFBvczsKI2lmZGVmIFVTRV9SRVZFUlNFX0RFUFRIQlVGRkVSCnZEZXB0aE1ldHJpYz0oKC1nbF9Qb3NpdGlvbi56K2RlcHRoVmFsdWVzLngpLyhkZXB0aFZhbHVlcy55KSk7CiNlbHNlCnZEZXB0aE1ldHJpYz0oKGdsX1Bvc2l0aW9uLnorZGVwdGhWYWx1ZXMueCkvKGRlcHRoVmFsdWVzLnkpKTsKI2VuZGlmCiNpZiBkZWZpbmVkKEFMUEhBVEVTVCkgfHwgZGVmaW5lZChCQVNJQ19SRU5ERVIpCiNpZmRlZiBVVjEKdlVWPXZlYzIoZGlmZnVzZU1hdHJpeCp2ZWM0KHV2VXBkYXRlZCwxLjAsMC4wKSk7CiNlbmRpZgojaWZkZWYgVVYyCnZVVj12ZWMyKGRpZmZ1c2VNYXRyaXgqdmVjNCh1djIsMS4wLDAuMCkpOwojZW5kaWYKI2VuZGlmCn0KYDtVLlNoYWRlcnNTdG9yZVtDb109SW87Y2xhc3MgYXN7Y29uc3RydWN0b3IoZSx0PTEsaT1udWxsLHM9ITEscj1OLlRSSUxJTkVBUl9TQU1QTElOR01PREUpe3RoaXMuZW5hYmxlZD0hMCx0aGlzLmZvcmNlRGVwdGhXcml0ZVRyYW5zcGFyZW50TWVzaGVzPSExLHRoaXMudXNlT25seUluQWN0aXZlQ2FtZXJhPSExLHRoaXMuX3NjZW5lPWUsdGhpcy5fc3RvcmVOb25MaW5lYXJEZXB0aD1zLHRoaXMuaXNQYWNrZWQ9dD09PTAsdGhpcy5pc1BhY2tlZD90aGlzLl9jbGVhckNvbG9yPW5ldyBtZSgxLDEsMSwxKTp0aGlzLl9jbGVhckNvbG9yPW5ldyBtZSgxLDAsMCwxKSxhcy5fU2NlbmVDb21wb25lbnRJbml0aWFsaXphdGlvbih0aGlzLl9zY2VuZSk7Y29uc3Qgbj1lLmdldEVuZ2luZSgpO3RoaXMuX2NhbWVyYT1pLHIhPT1OLk5FQVJFU1RfU0FNUExJTkdNT0RFJiYodD09PTEmJiFuLl9jYXBzLnRleHR1cmVGbG9hdExpbmVhckZpbHRlcmluZyYmKHI9Ti5ORUFSRVNUX1NBTVBMSU5HTU9ERSksdD09PTImJiFuLl9jYXBzLnRleHR1cmVIYWxmRmxvYXRMaW5lYXJGaWx0ZXJpbmcmJihyPU4uTkVBUkVTVF9TQU1QTElOR01PREUpKTtjb25zdCBhPXRoaXMuaXNQYWNrZWR8fCFuLl9mZWF0dXJlcy5zdXBwb3J0RXh0ZW5kZWRUZXh0dXJlRm9ybWF0cz81OjY7dGhpcy5fZGVwdGhNYXA9bmV3IF90KCJEZXB0aFJlbmRlcmVyIix7d2lkdGg6bi5nZXRSZW5kZXJXaWR0aCgpLGhlaWdodDpuLmdldFJlbmRlckhlaWdodCgpfSx0aGlzLl9zY2VuZSwhMSwhMCx0LCExLHIsdm9pZCAwLHZvaWQgMCx2b2lkIDAsYSksdGhpcy5fZGVwdGhNYXAud3JhcFU9Ti5DTEFNUF9BRERSRVNTTU9ERSx0aGlzLl9kZXB0aE1hcC53cmFwVj1OLkNMQU1QX0FERFJFU1NNT0RFLHRoaXMuX2RlcHRoTWFwLnJlZnJlc2hSYXRlPTEsdGhpcy5fZGVwdGhNYXAucmVuZGVyUGFydGljbGVzPSExLHRoaXMuX2RlcHRoTWFwLnJlbmRlckxpc3Q9bnVsbCx0aGlzLl9kZXB0aE1hcC5hY3RpdmVDYW1lcmE9dGhpcy5fY2FtZXJhLHRoaXMuX2RlcHRoTWFwLmlnbm9yZUNhbWVyYVZpZXdwb3J0PSEwLHRoaXMuX2RlcHRoTWFwLnVzZUNhbWVyYVBvc3RQcm9jZXNzZXM9ITEsdGhpcy5fZGVwdGhNYXAub25DbGVhck9ic2VydmFibGUuYWRkKGg9PntoLmNsZWFyKHRoaXMuX2NsZWFyQ29sb3IsITAsITAsITApfSksdGhpcy5fZGVwdGhNYXAub25CZWZvcmVCaW5kT2JzZXJ2YWJsZS5hZGQoKCk9Pnt2YXIgaDsoaD1uLl9kZWJ1Z1B1c2hHcm91cCk9PT1udWxsfHxoPT09dm9pZCAwfHxoLmNhbGwobiwiZGVwdGggcmVuZGVyZXIiLDEpfSksdGhpcy5fZGVwdGhNYXAub25BZnRlclVuYmluZE9ic2VydmFibGUuYWRkKCgpPT57dmFyIGg7KGg9bi5fZGVidWdQb3BHcm91cCk9PT1udWxsfHxoPT09dm9pZCAwfHxoLmNhbGwobiwxKX0pLHRoaXMuX2RlcHRoTWFwLmN1c3RvbUlzUmVhZHlGdW5jdGlvbj0oaCxsLHUpPT57aWYoKHV8fGw9PT0wKSYmaC5zdWJNZXNoZXMpZm9yKGxldCBkPTA7ZDxoLnN1Yk1lc2hlcy5sZW5ndGg7KytkKXtjb25zdCBmPWguc3ViTWVzaGVzW2RdLF89Zi5nZXRSZW5kZXJpbmdNZXNoKCksRT1fLl9nZXRJbnN0YW5jZXNSZW5kZXJMaXN0KGYuX2lkLCEhZi5nZXRSZXBsYWNlbWVudE1lc2goKSksbT1uLmdldENhcHMoKS5pbnN0YW5jZWRBcnJheXMmJihFLnZpc2libGVJbnN0YW5jZXNbZi5faWRdIT09bnVsbCYmRS52aXNpYmxlSW5zdGFuY2VzW2YuX2lkXSE9PXZvaWQgMHx8Xy5oYXNUaGluSW5zdGFuY2VzKTtpZighdGhpcy5pc1JlYWR5KGYsbSkpcmV0dXJuITF9cmV0dXJuITB9O2NvbnN0IG89aD0+e3ZhciBsLHU7Y29uc3QgZD1oLmdldFJlbmRlcmluZ01lc2goKSxmPWguZ2V0RWZmZWN0aXZlTWVzaCgpLF89dGhpcy5fc2NlbmUsRT1fLmdldEVuZ2luZSgpLG09aC5nZXRNYXRlcmlhbCgpO2lmKGYuX2ludGVybmFsQWJzdHJhY3RNZXNoRGF0YUluZm8uX2lzQWN0aXZlSW50ZXJtZWRpYXRlPSExLCFtfHxmLmluZmluaXRlRGlzdGFuY2V8fG0uZGlzYWJsZURlcHRoV3JpdGV8fGgudmVydGljZXNDb3VudD09PTB8fGguX3JlbmRlcklkPT09Xy5nZXRSZW5kZXJJZCgpKXJldHVybjtjb25zdCB2PWYuX2dldFdvcmxkTWF0cml4RGV0ZXJtaW5hbnQoKTwwO2xldCBTPShsPWQub3ZlcnJpZGVNYXRlcmlhbFNpZGVPcmllbnRhdGlvbikhPT1udWxsJiZsIT09dm9pZCAwP2w6bS5zaWRlT3JpZW50YXRpb247diYmKFM9Uz09PTA/MTowKTtjb25zdCB5PVM9PT0wO0Uuc2V0U3RhdGUobS5iYWNrRmFjZUN1bGxpbmcsMCwhMSx5LG0uY3VsbEJhY2tGYWNlcyk7Y29uc3QgQT1kLl9nZXRJbnN0YW5jZXNSZW5kZXJMaXN0KGguX2lkLCEhaC5nZXRSZXBsYWNlbWVudE1lc2goKSk7aWYoQS5tdXN0UmV0dXJuKXJldHVybjtjb25zdCBDPUUuZ2V0Q2FwcygpLmluc3RhbmNlZEFycmF5cyYmKEEudmlzaWJsZUluc3RhbmNlc1toLl9pZF0hPT1udWxsJiZBLnZpc2libGVJbnN0YW5jZXNbaC5faWRdIT09dm9pZCAwfHxkLmhhc1RoaW5JbnN0YW5jZXMpLGI9dGhpcy5fY2FtZXJhfHxfLmFjdGl2ZUNhbWVyYTtpZih0aGlzLmlzUmVhZHkoaCxDKSYmYil7aC5fcmVuZGVySWQ9Xy5nZXRSZW5kZXJJZCgpO2NvbnN0IE09KHU9Zi5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWF0ZXJpYWxGb3JSZW5kZXJQYXNzKT09PW51bGx8fHU9PT12b2lkIDA/dm9pZCAwOnVbRS5jdXJyZW50UmVuZGVyUGFzc0lkXTtsZXQgTD1oLl9nZXREcmF3V3JhcHBlcigpOyFMJiZNJiYoTD1NLl9nZXREcmF3V3JhcHBlcigpKTtjb25zdCBrPWIubW9kZT09PWouT1JUSE9HUkFQSElDX0NBTUVSQTtpZighTClyZXR1cm47Y29uc3Qgdz1MLmVmZmVjdDtFLmVuYWJsZUVmZmVjdChMKSxDfHxkLl9iaW5kKGgsdyxtLmZpbGxNb2RlKSxNP00uYmluZEZvclN1Yk1lc2goZi5nZXRXb3JsZE1hdHJpeCgpLGYsaCk6KHcuc2V0TWF0cml4KCJ2aWV3UHJvamVjdGlvbiIsXy5nZXRUcmFuc2Zvcm1NYXRyaXgoKSksdy5zZXRNYXRyaXgoIndvcmxkIixmLmdldFdvcmxkTWF0cml4KCkpKTtsZXQgZGUsY2U7aWYoaz8oZGU9IUUudXNlUmV2ZXJzZURlcHRoQnVmZmVyJiZFLmlzTkRDSGFsZlpSYW5nZT8wOjEsY2U9RS51c2VSZXZlcnNlRGVwdGhCdWZmZXImJkUuaXNORENIYWxmWlJhbmdlPzA6MSk6KGRlPUUudXNlUmV2ZXJzZURlcHRoQnVmZmVyJiZFLmlzTkRDSGFsZlpSYW5nZT9iLm1pblo6RS5pc05EQ0hhbGZaUmFuZ2U/MDpiLm1pblosY2U9RS51c2VSZXZlcnNlRGVwdGhCdWZmZXImJkUuaXNORENIYWxmWlJhbmdlPzA6Yi5tYXhaKSx3LnNldEZsb2F0MigiZGVwdGhWYWx1ZXMiLGRlLGRlK2NlKSwhTSl7aWYobS5uZWVkQWxwaGFUZXN0aW5nKCkpe2NvbnN0IHNlPW0uZ2V0QWxwaGFUZXN0VGV4dHVyZSgpO3NlJiYody5zZXRUZXh0dXJlKCJkaWZmdXNlU2FtcGxlciIsc2UpLHcuc2V0TWF0cml4KCJkaWZmdXNlTWF0cml4IixzZS5nZXRUZXh0dXJlTWF0cml4KCkpKX1pZihkLnVzZUJvbmVzJiZkLmNvbXB1dGVCb25lc1VzaW5nU2hhZGVycyYmZC5za2VsZXRvbil7Y29uc3Qgc2U9ZC5za2VsZXRvbjtpZihzZS5pc1VzaW5nVGV4dHVyZUZvck1hdHJpY2VzKXtjb25zdCB0ZT1zZS5nZXRUcmFuc2Zvcm1NYXRyaXhUZXh0dXJlKGQpO2lmKCF0ZSlyZXR1cm47dy5zZXRUZXh0dXJlKCJib25lU2FtcGxlciIsdGUpLHcuc2V0RmxvYXQoImJvbmVUZXh0dXJlV2lkdGgiLDQqKHNlLmJvbmVzLmxlbmd0aCsxKSl9ZWxzZSB3LnNldE1hdHJpY2VzKCJtQm9uZXMiLHNlLmdldFRyYW5zZm9ybU1hdHJpY2VzKGQpKX1ycyh3LG0sXyksaWUuQmluZE1vcnBoVGFyZ2V0UGFyYW1ldGVycyhkLHcpLGQubW9ycGhUYXJnZXRNYW5hZ2VyJiZkLm1vcnBoVGFyZ2V0TWFuYWdlci5pc1VzaW5nVGV4dHVyZUZvclRhcmdldHMmJmQubW9ycGhUYXJnZXRNYW5hZ2VyLl9iaW5kKHcpfWQuX3Byb2Nlc3NSZW5kZXJpbmcoZixoLHcsbS5maWxsTW9kZSxBLEMsKHNlLHRlKT0+dy5zZXRNYXRyaXgoIndvcmxkIix0ZSkpfX07dGhpcy5fZGVwdGhNYXAuY3VzdG9tUmVuZGVyRnVuY3Rpb249KGgsbCx1LGQpPT57bGV0IGY7aWYoZC5sZW5ndGgpZm9yKGY9MDtmPGQubGVuZ3RoO2YrKylvKGQuZGF0YVtmXSk7Zm9yKGY9MDtmPGgubGVuZ3RoO2YrKylvKGguZGF0YVtmXSk7Zm9yKGY9MDtmPGwubGVuZ3RoO2YrKylvKGwuZGF0YVtmXSk7aWYodGhpcy5mb3JjZURlcHRoV3JpdGVUcmFuc3BhcmVudE1lc2hlcylmb3IoZj0wO2Y8dS5sZW5ndGg7ZisrKW8odS5kYXRhW2ZdKTtlbHNlIGZvcihmPTA7Zjx1Lmxlbmd0aDtmKyspdS5kYXRhW2ZdLmdldEVmZmVjdGl2ZU1lc2goKS5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5faXNBY3RpdmVJbnRlcm1lZGlhdGU9ITF9fXNldE1hdGVyaWFsRm9yUmVuZGVyaW5nKGUsdCl7dGhpcy5fZGVwdGhNYXAuc2V0TWF0ZXJpYWxGb3JSZW5kZXJpbmcoZSx0KX1pc1JlYWR5KGUsdCl7dmFyIGk7Y29uc3Qgcz10aGlzLl9zY2VuZS5nZXRFbmdpbmUoKSxyPWUuZ2V0TWVzaCgpLG49ci5nZXRTY2VuZSgpLGE9KGk9ci5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fbWF0ZXJpYWxGb3JSZW5kZXJQYXNzKT09PW51bGx8fGk9PT12b2lkIDA/dm9pZCAwOmlbcy5jdXJyZW50UmVuZGVyUGFzc0lkXTtpZihhKXJldHVybiBhLmlzUmVhZHlGb3JTdWJNZXNoKHIsZSx0KTtjb25zdCBvPWUuZ2V0TWF0ZXJpYWwoKTtpZighb3x8by5kaXNhYmxlRGVwdGhXcml0ZSlyZXR1cm4hMTtjb25zdCBoPVtdLGw9W2cuUG9zaXRpb25LaW5kXTtpZihvJiZvLm5lZWRBbHBoYVRlc3RpbmcoKSYmby5nZXRBbHBoYVRlc3RUZXh0dXJlKCkmJihoLnB1c2goIiNkZWZpbmUgQUxQSEFURVNUIiksci5pc1ZlcnRpY2VzRGF0YVByZXNlbnQoZy5VVktpbmQpJiYobC5wdXNoKGcuVVZLaW5kKSxoLnB1c2goIiNkZWZpbmUgVVYxIikpLHIuaXNWZXJ0aWNlc0RhdGFQcmVzZW50KGcuVVYyS2luZCkmJihsLnB1c2goZy5VVjJLaW5kKSxoLnB1c2goIiNkZWZpbmUgVVYyIikpKSxyLnVzZUJvbmVzJiZyLmNvbXB1dGVCb25lc1VzaW5nU2hhZGVycyl7bC5wdXNoKGcuTWF0cmljZXNJbmRpY2VzS2luZCksbC5wdXNoKGcuTWF0cmljZXNXZWlnaHRzS2luZCksci5udW1Cb25lSW5mbHVlbmNlcnM+NCYmKGwucHVzaChnLk1hdHJpY2VzSW5kaWNlc0V4dHJhS2luZCksbC5wdXNoKGcuTWF0cmljZXNXZWlnaHRzRXh0cmFLaW5kKSksaC5wdXNoKCIjZGVmaW5lIE5VTV9CT05FX0lORkxVRU5DRVJTICIrci5udW1Cb25lSW5mbHVlbmNlcnMpLGgucHVzaCgiI2RlZmluZSBCb25lc1Blck1lc2ggIisoci5za2VsZXRvbj9yLnNrZWxldG9uLmJvbmVzLmxlbmd0aCsxOjApKTtjb25zdCBtPWUuZ2V0UmVuZGVyaW5nTWVzaCgpLnNrZWxldG9uO20hPW51bGwmJm0uaXNVc2luZ1RleHR1cmVGb3JNYXRyaWNlcyYmaC5wdXNoKCIjZGVmaW5lIEJPTkVURVhUVVJFIil9ZWxzZSBoLnB1c2goIiNkZWZpbmUgTlVNX0JPTkVfSU5GTFVFTkNFUlMgMCIpO2NvbnN0IHU9ci5tb3JwaFRhcmdldE1hbmFnZXI7bGV0IGQ9MDt1JiZ1Lm51bUluZmx1ZW5jZXJzPjAmJihkPXUubnVtSW5mbHVlbmNlcnMsaC5wdXNoKCIjZGVmaW5lIE1PUlBIVEFSR0VUUyIpLGgucHVzaCgiI2RlZmluZSBOVU1fTU9SUEhfSU5GTFVFTkNFUlMgIitkKSx1LmlzVXNpbmdUZXh0dXJlRm9yVGFyZ2V0cyYmaC5wdXNoKCIjZGVmaW5lIE1PUlBIVEFSR0VUU19URVhUVVJFIiksaWUuUHJlcGFyZUF0dHJpYnV0ZXNGb3JNb3JwaFRhcmdldHNJbmZsdWVuY2VycyhsLHIsZCkpLHQmJihoLnB1c2goIiNkZWZpbmUgSU5TVEFOQ0VTIiksaWUuUHVzaEF0dHJpYnV0ZXNGb3JJbnN0YW5jZXMobCksZS5nZXRSZW5kZXJpbmdNZXNoKCkuaGFzVGhpbkluc3RhbmNlcyYmaC5wdXNoKCIjZGVmaW5lIFRISU5fSU5TVEFOQ0VTIikpLHRoaXMuX3N0b3JlTm9uTGluZWFyRGVwdGgmJmgucHVzaCgiI2RlZmluZSBOT05MSU5FQVJERVBUSCIpLHRoaXMuaXNQYWNrZWQmJmgucHVzaCgiI2RlZmluZSBQQUNLRUQiKSxPcyhvLG4saCk7Y29uc3QgZj1lLl9nZXREcmF3V3JhcHBlcih2b2lkIDAsITApLF89Zi5kZWZpbmVzLEU9aC5qb2luKGAKYCk7aWYoXyE9PUUpe2NvbnN0IG09WyJ3b3JsZCIsIm1Cb25lcyIsImJvbmVUZXh0dXJlV2lkdGgiLCJ2aWV3UHJvamVjdGlvbiIsImRpZmZ1c2VNYXRyaXgiLCJkZXB0aFZhbHVlcyIsIm1vcnBoVGFyZ2V0SW5mbHVlbmNlcyIsIm1vcnBoVGFyZ2V0VGV4dHVyZUluZm8iLCJtb3JwaFRhcmdldFRleHR1cmVJbmRpY2VzIl07c3MobSksZi5zZXRFZmZlY3Qocy5jcmVhdGVFZmZlY3QoImRlcHRoIixsLG0sWyJkaWZmdXNlU2FtcGxlciIsIm1vcnBoVGFyZ2V0cyIsImJvbmVTYW1wbGVyIl0sRSx2b2lkIDAsdm9pZCAwLHZvaWQgMCx7bWF4U2ltdWx0YW5lb3VzTW9ycGhUYXJnZXRzOmR9KSxFKX1yZXR1cm4gZi5lZmZlY3QuaXNSZWFkeSgpfWdldERlcHRoTWFwKCl7cmV0dXJuIHRoaXMuX2RlcHRoTWFwfWRpc3Bvc2UoKXtjb25zdCBlPVtdO2Zvcihjb25zdCB0IGluIHRoaXMuX3NjZW5lLl9kZXB0aFJlbmRlcmVyKXRoaXMuX3NjZW5lLl9kZXB0aFJlbmRlcmVyW3RdPT09dGhpcyYmZS5wdXNoKHQpO2lmKGUubGVuZ3RoPjApe3RoaXMuX2RlcHRoTWFwLmRpc3Bvc2UoKTtmb3IoY29uc3QgdCBvZiBlKWRlbGV0ZSB0aGlzLl9zY2VuZS5fZGVwdGhSZW5kZXJlclt0XX19fWFzLl9TY2VuZUNvbXBvbmVudEluaXRpYWxpemF0aW9uPWM9Pnt0aHJvdyAkKCJEZXB0aFJlbmRlcmVyU2NlbmVDb21wb25lbnQiKX07Y29uc3QgUG89Im1pbm1heFJlZHV4UGl4ZWxTaGFkZXIiLERvPWB2YXJ5aW5nIHZlYzIgdlVWOwp1bmlmb3JtIHNhbXBsZXIyRCB0ZXh0dXJlU2FtcGxlcjsKI2lmIGRlZmluZWQoSU5JVElBTCkKdW5pZm9ybSBzYW1wbGVyMkQgc291cmNlVGV4dHVyZTsKdW5pZm9ybSB2ZWMyIHRleFNpemU7CnZvaWQgbWFpbih2b2lkKQp7Cml2ZWMyIGNvb3JkPWl2ZWMyKHZVVioodGV4U2l6ZS0xLjApKTsKZmxvYXQgZjE9dGV4ZWxGZXRjaChzb3VyY2VUZXh0dXJlLGNvb3JkLDApLnI7CmZsb2F0IGYyPXRleGVsRmV0Y2goc291cmNlVGV4dHVyZSxjb29yZCtpdmVjMigxLDApLDApLnI7CmZsb2F0IGYzPXRleGVsRmV0Y2goc291cmNlVGV4dHVyZSxjb29yZCtpdmVjMigxLDEpLDApLnI7CmZsb2F0IGY0PXRleGVsRmV0Y2goc291cmNlVGV4dHVyZSxjb29yZCtpdmVjMigwLDEpLDApLnI7CmZsb2F0IG1pbno9bWluKG1pbihtaW4oZjEsZjIpLGYzKSxmNCk7CiNpZmRlZiBERVBUSF9SRURVWApmbG9hdCBtYXh6PW1heChtYXgobWF4KHNpZ24oMS4wLWYxKSpmMSxzaWduKDEuMC1mMikqZjIpLHNpZ24oMS4wLWYzKSpmMyksc2lnbigxLjAtZjQpKmY0KTsKI2Vsc2UKZmxvYXQgbWF4ej1tYXgobWF4KG1heChmMSxmMiksZjMpLGY0KTsKI2VuZGlmCmdsRnJhZ0NvbG9yPXZlYzQobWlueixtYXh6LDAuLDAuKTsKfQojZWxpZiBkZWZpbmVkKE1BSU4pCnVuaWZvcm0gdmVjMiB0ZXhTaXplOwp2b2lkIG1haW4odm9pZCkKewppdmVjMiBjb29yZD1pdmVjMih2VVYqKHRleFNpemUtMS4wKSk7CnZlYzIgZjE9dGV4ZWxGZXRjaCh0ZXh0dXJlU2FtcGxlcixjb29yZCwwKS5yZzsKdmVjMiBmMj10ZXhlbEZldGNoKHRleHR1cmVTYW1wbGVyLGNvb3JkK2l2ZWMyKDEsMCksMCkucmc7CnZlYzIgZjM9dGV4ZWxGZXRjaCh0ZXh0dXJlU2FtcGxlcixjb29yZCtpdmVjMigxLDEpLDApLnJnOwp2ZWMyIGY0PXRleGVsRmV0Y2godGV4dHVyZVNhbXBsZXIsY29vcmQraXZlYzIoMCwxKSwwKS5yZzsKZmxvYXQgbWluej1taW4obWluKG1pbihmMS54LGYyLngpLGYzLngpLGY0LngpOwpmbG9hdCBtYXh6PW1heChtYXgobWF4KGYxLnksZjIueSksZjMueSksZjQueSk7CmdsRnJhZ0NvbG9yPXZlYzQobWlueixtYXh6LDAuLDAuKTsKfQojZWxpZiBkZWZpbmVkKE9ORUJFRk9SRUxBU1QpCnVuaWZvcm0gaXZlYzIgdGV4U2l6ZTsKdm9pZCBtYWluKHZvaWQpCnsKaXZlYzIgY29vcmQ9aXZlYzIodlVWKnZlYzIodGV4U2l6ZS0xKSk7CnZlYzIgZjE9dGV4ZWxGZXRjaCh0ZXh0dXJlU2FtcGxlcixjb29yZCAlIHRleFNpemUsMCkucmc7CnZlYzIgZjI9dGV4ZWxGZXRjaCh0ZXh0dXJlU2FtcGxlciwoY29vcmQraXZlYzIoMSwwKSkgJSB0ZXhTaXplLDApLnJnOwp2ZWMyIGYzPXRleGVsRmV0Y2godGV4dHVyZVNhbXBsZXIsKGNvb3JkK2l2ZWMyKDEsMSkpICUgdGV4U2l6ZSwwKS5yZzsKdmVjMiBmND10ZXhlbEZldGNoKHRleHR1cmVTYW1wbGVyLChjb29yZCtpdmVjMigwLDEpKSAlIHRleFNpemUsMCkucmc7CmZsb2F0IG1pbno9bWluKGYxLngsZjIueCk7CmZsb2F0IG1heHo9bWF4KGYxLnksZjIueSk7CmdsRnJhZ0NvbG9yPXZlYzQobWlueixtYXh6LDAuLDAuKTsKfQojZWxpZiBkZWZpbmVkKExBU1QpCnZvaWQgbWFpbih2b2lkKQp7CmdsRnJhZ0NvbG9yPXZlYzQoMC4pOwppZiAodHJ1ZSkgeyAKZGlzY2FyZDsKfQp9CiNlbmRpZgpgO1UuU2hhZGVyc1N0b3JlW1BvXT1EbztjbGFzcyBGb3tjb25zdHJ1Y3RvcihlKXt0aGlzLm9uQWZ0ZXJSZWR1Y3Rpb25QZXJmb3JtZWQ9bmV3IEYsdGhpcy5fZm9yY2VGdWxsc2NyZWVuVmlld3BvcnQ9ITAsdGhpcy5fYWN0aXZhdGVkPSExLHRoaXMuX2NhbWVyYT1lLHRoaXMuX3Bvc3RQcm9jZXNzTWFuYWdlcj1uZXcgUWkoZS5nZXRTY2VuZSgpKSx0aGlzLl9vbkNvbnRleHRSZXN0b3JlZE9ic2VydmVyPWUuZ2V0RW5naW5lKCkub25Db250ZXh0UmVzdG9yZWRPYnNlcnZhYmxlLmFkZCgoKT0+e3RoaXMuX3Bvc3RQcm9jZXNzTWFuYWdlci5fcmVidWlsZCgpfSl9Z2V0IHNvdXJjZVRleHR1cmUoKXtyZXR1cm4gdGhpcy5fc291cmNlVGV4dHVyZX1zZXRTb3VyY2VUZXh0dXJlKGUsdCxpPTIscz0hMCl7aWYoZT09PXRoaXMuX3NvdXJjZVRleHR1cmUpcmV0dXJuO3RoaXMuZGlzcG9zZSghMSksdGhpcy5fc291cmNlVGV4dHVyZT1lLHRoaXMuX3JlZHVjdGlvblN0ZXBzPVtdLHRoaXMuX2ZvcmNlRnVsbHNjcmVlblZpZXdwb3J0PXM7Y29uc3Qgcj10aGlzLl9jYW1lcmEuZ2V0U2NlbmUoKSxuPW5ldyBNZSgiSW5pdGlhbCByZWR1Y3Rpb24gcGhhc2UiLCJtaW5tYXhSZWR1eCIsWyJ0ZXhTaXplIl0sWyJzb3VyY2VUZXh0dXJlIl0sMSxudWxsLDEsci5nZXRFbmdpbmUoKSwhMSwiI2RlZmluZSBJTklUSUFMIisodD9gCiNkZWZpbmUgREVQVEhfUkVEVVhgOiIiKSxpLHZvaWQgMCx2b2lkIDAsdm9pZCAwLDcpO24uYXV0b0NsZWFyPSExLG4uZm9yY2VGdWxsc2NyZWVuVmlld3BvcnQ9cztsZXQgYT10aGlzLl9zb3VyY2VUZXh0dXJlLmdldFJlbmRlcldpZHRoKCksbz10aGlzLl9zb3VyY2VUZXh0dXJlLmdldFJlbmRlckhlaWdodCgpO24ub25BcHBseT0oKGwsdSk9PmQ9PntkLnNldFRleHR1cmUoInNvdXJjZVRleHR1cmUiLHRoaXMuX3NvdXJjZVRleHR1cmUpLGQuc2V0RmxvYXQyKCJ0ZXhTaXplIixsLHUpfSkoYSxvKSx0aGlzLl9yZWR1Y3Rpb25TdGVwcy5wdXNoKG4pO2xldCBoPTE7Zm9yKDthPjF8fG8+MTspe2E9TWF0aC5tYXgoTWF0aC5yb3VuZChhLzIpLDEpLG89TWF0aC5tYXgoTWF0aC5yb3VuZChvLzIpLDEpO2NvbnN0IGw9bmV3IE1lKCJSZWR1Y3Rpb24gcGhhc2UgIitoLCJtaW5tYXhSZWR1eCIsWyJ0ZXhTaXplIl0sbnVsbCx7d2lkdGg6YSxoZWlnaHQ6b30sbnVsbCwxLHIuZ2V0RW5naW5lKCksITEsIiNkZWZpbmUgIisoYT09MSYmbz09MT8iTEFTVCI6YT09MXx8bz09MT8iT05FQkVGT1JFTEFTVCI6Ik1BSU4iKSxpLHZvaWQgMCx2b2lkIDAsdm9pZCAwLDcpO2lmKGwuYXV0b0NsZWFyPSExLGwuZm9yY2VGdWxsc2NyZWVuVmlld3BvcnQ9cyxsLm9uQXBwbHk9KCh1LGQpPT5mPT57dT09MXx8ZD09MT9mLnNldEludDIoInRleFNpemUiLHUsZCk6Zi5zZXRGbG9hdDIoInRleFNpemUiLHUsZCl9KShhLG8pLHRoaXMuX3JlZHVjdGlvblN0ZXBzLnB1c2gobCksaCsrLGE9PTEmJm89PTEpe2NvbnN0IHU9KGQsZixfKT0+e2NvbnN0IEU9bmV3IEZsb2F0MzJBcnJheSg0KmQqZiksbT17bWluOjAsbWF4OjB9O3JldHVybigpPT57ci5nZXRFbmdpbmUoKS5fcmVhZFRleHR1cmVQaXhlbHMoXy5pbnB1dFRleHR1cmUudGV4dHVyZSxkLGYsLTEsMCxFLCExKSxtLm1pbj1FWzBdLG0ubWF4PUVbMV0sdGhpcy5vbkFmdGVyUmVkdWN0aW9uUGVyZm9ybWVkLm5vdGlmeU9ic2VydmVycyhtKX19O2wub25BZnRlclJlbmRlck9ic2VydmFibGUuYWRkKHUoYSxvLGwpKX19fWdldCByZWZyZXNoUmF0ZSgpe3JldHVybiB0aGlzLl9zb3VyY2VUZXh0dXJlP3RoaXMuX3NvdXJjZVRleHR1cmUucmVmcmVzaFJhdGU6LTF9c2V0IHJlZnJlc2hSYXRlKGUpe3RoaXMuX3NvdXJjZVRleHR1cmUmJih0aGlzLl9zb3VyY2VUZXh0dXJlLnJlZnJlc2hSYXRlPWUpfWdldCBhY3RpdmF0ZWQoKXtyZXR1cm4gdGhpcy5fYWN0aXZhdGVkfWFjdGl2YXRlKCl7dGhpcy5fb25BZnRlclVuYmluZE9ic2VydmVyfHwhdGhpcy5fc291cmNlVGV4dHVyZXx8KHRoaXMuX29uQWZ0ZXJVbmJpbmRPYnNlcnZlcj10aGlzLl9zb3VyY2VUZXh0dXJlLm9uQWZ0ZXJVbmJpbmRPYnNlcnZhYmxlLmFkZCgoKT0+e3ZhciBlLHQ7Y29uc3QgaT10aGlzLl9jYW1lcmEuZ2V0U2NlbmUoKS5nZXRFbmdpbmUoKTsoZT1pLl9kZWJ1Z1B1c2hHcm91cCk9PT1udWxsfHxlPT09dm9pZCAwfHxlLmNhbGwoaSwibWluIG1heCByZWR1Y3Rpb24iLDEpLHRoaXMuX3JlZHVjdGlvblN0ZXBzWzBdLmFjdGl2YXRlKHRoaXMuX2NhbWVyYSksdGhpcy5fcG9zdFByb2Nlc3NNYW5hZ2VyLmRpcmVjdFJlbmRlcih0aGlzLl9yZWR1Y3Rpb25TdGVwcyx0aGlzLl9yZWR1Y3Rpb25TdGVwc1swXS5pbnB1dFRleHR1cmUsdGhpcy5fZm9yY2VGdWxsc2NyZWVuVmlld3BvcnQpLGkudW5CaW5kRnJhbWVidWZmZXIodGhpcy5fcmVkdWN0aW9uU3RlcHNbMF0uaW5wdXRUZXh0dXJlLCExKSwodD1pLl9kZWJ1Z1BvcEdyb3VwKT09PW51bGx8fHQ9PT12b2lkIDB8fHQuY2FsbChpLDEpfSksdGhpcy5fYWN0aXZhdGVkPSEwKX1kZWFjdGl2YXRlKCl7IXRoaXMuX29uQWZ0ZXJVbmJpbmRPYnNlcnZlcnx8IXRoaXMuX3NvdXJjZVRleHR1cmV8fCh0aGlzLl9zb3VyY2VUZXh0dXJlLm9uQWZ0ZXJVbmJpbmRPYnNlcnZhYmxlLnJlbW92ZSh0aGlzLl9vbkFmdGVyVW5iaW5kT2JzZXJ2ZXIpLHRoaXMuX29uQWZ0ZXJVbmJpbmRPYnNlcnZlcj1udWxsLHRoaXMuX2FjdGl2YXRlZD0hMSl9ZGlzcG9zZShlPSEwKXtpZihlJiYodGhpcy5vbkFmdGVyUmVkdWN0aW9uUGVyZm9ybWVkLmNsZWFyKCksdGhpcy5fb25Db250ZXh0UmVzdG9yZWRPYnNlcnZlciYmKHRoaXMuX2NhbWVyYS5nZXRFbmdpbmUoKS5vbkNvbnRleHRSZXN0b3JlZE9ic2VydmFibGUucmVtb3ZlKHRoaXMuX29uQ29udGV4dFJlc3RvcmVkT2JzZXJ2ZXIpLHRoaXMuX29uQ29udGV4dFJlc3RvcmVkT2JzZXJ2ZXI9bnVsbCkpLHRoaXMuZGVhY3RpdmF0ZSgpLHRoaXMuX3JlZHVjdGlvblN0ZXBzKXtmb3IobGV0IHQ9MDt0PHRoaXMuX3JlZHVjdGlvblN0ZXBzLmxlbmd0aDsrK3QpdGhpcy5fcmVkdWN0aW9uU3RlcHNbdF0uZGlzcG9zZSgpO3RoaXMuX3JlZHVjdGlvblN0ZXBzPW51bGx9dGhpcy5fcG9zdFByb2Nlc3NNYW5hZ2VyJiZlJiZ0aGlzLl9wb3N0UHJvY2Vzc01hbmFnZXIuZGlzcG9zZSgpLHRoaXMuX3NvdXJjZVRleHR1cmU9bnVsbH19Y2xhc3Mgd28gZXh0ZW5kcyBGb3tjb25zdHJ1Y3RvcihlKXtzdXBlcihlKX1nZXQgZGVwdGhSZW5kZXJlcigpe3JldHVybiB0aGlzLl9kZXB0aFJlbmRlcmVyfXNldERlcHRoUmVuZGVyZXIoZT1udWxsLHQ9MixpPSEwKXtjb25zdCBzPXRoaXMuX2NhbWVyYS5nZXRTY2VuZSgpO3RoaXMuX2RlcHRoUmVuZGVyZXImJihkZWxldGUgcy5fZGVwdGhSZW5kZXJlclt0aGlzLl9kZXB0aFJlbmRlcmVySWRdLHRoaXMuX2RlcHRoUmVuZGVyZXIuZGlzcG9zZSgpLHRoaXMuX2RlcHRoUmVuZGVyZXI9bnVsbCksZT09PW51bGwmJihzLl9kZXB0aFJlbmRlcmVyfHwocy5fZGVwdGhSZW5kZXJlcj17fSksZT10aGlzLl9kZXB0aFJlbmRlcmVyPW5ldyBhcyhzLHQsdGhpcy5fY2FtZXJhLCExLDEpLGUuZW5hYmxlZD0hMSx0aGlzLl9kZXB0aFJlbmRlcmVySWQ9Im1pbm1heCIrdGhpcy5fY2FtZXJhLmlkLHMuX2RlcHRoUmVuZGVyZXJbdGhpcy5fZGVwdGhSZW5kZXJlcklkXT1lKSxzdXBlci5zZXRTb3VyY2VUZXh0dXJlKGUuZ2V0RGVwdGhNYXAoKSwhMCx0LGkpfXNldFNvdXJjZVRleHR1cmUoZSx0LGk9MixzPSEwKXtzdXBlci5zZXRTb3VyY2VUZXh0dXJlKGUsdCxpLHMpfWFjdGl2YXRlKCl7dGhpcy5fZGVwdGhSZW5kZXJlciYmKHRoaXMuX2RlcHRoUmVuZGVyZXIuZW5hYmxlZD0hMCksc3VwZXIuYWN0aXZhdGUoKX1kZWFjdGl2YXRlKCl7c3VwZXIuZGVhY3RpdmF0ZSgpLHRoaXMuX2RlcHRoUmVuZGVyZXImJih0aGlzLl9kZXB0aFJlbmRlcmVyLmVuYWJsZWQ9ITEpfWRpc3Bvc2UoZT0hMCl7aWYoc3VwZXIuZGlzcG9zZShlKSx0aGlzLl9kZXB0aFJlbmRlcmVyJiZlKXtjb25zdCB0PXRoaXMuX2RlcHRoUmVuZGVyZXIuZ2V0RGVwdGhNYXAoKS5nZXRTY2VuZSgpO3QmJmRlbGV0ZSB0Ll9kZXB0aFJlbmRlcmVyW3RoaXMuX2RlcHRoUmVuZGVyZXJJZF0sdGhpcy5fZGVwdGhSZW5kZXJlci5kaXNwb3NlKCksdGhpcy5fZGVwdGhSZW5kZXJlcj1udWxsfX19Y29uc3QgTnI9cC5VcCgpLE9vPXAuWmVybygpLExlPW5ldyBwLHhpPW5ldyBwLG9zPW5ldyB4O2NsYXNzIGtlIGV4dGVuZHMgR3tjb25zdHJ1Y3RvcihlLHQsaSxzKXtpZigha2UuSXNTdXBwb3J0ZWQpe08uRXJyb3IoIkNhc2NhZGVkU2hhZG93TWFwIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGN1cnJlbnQgZW5naW5lLiIpO3JldHVybn1zdXBlcihlLHQsaSxzKSx0aGlzLnVzZVBlcmNlbnRhZ2VDbG9zZXJGaWx0ZXJpbmc9ITB9X3ZhbGlkYXRlRmlsdGVyKGUpe3JldHVybiBlPT09Ry5GSUxURVJfTk9ORXx8ZT09PUcuRklMVEVSX1BDRnx8ZT09PUcuRklMVEVSX1BDU1M/ZTooY29uc29sZS5lcnJvcignVW5zdXBwb3J0ZWQgZmlsdGVyICInK2UrJyIhJyksRy5GSUxURVJfTk9ORSl9Z2V0IG51bUNhc2NhZGVzKCl7cmV0dXJuIHRoaXMuX251bUNhc2NhZGVzfXNldCBudW1DYXNjYWRlcyhlKXtlPU1hdGgubWluKE1hdGgubWF4KGUsa2UuTUlOX0NBU0NBREVTX0NPVU5UKSxrZS5NQVhfQ0FTQ0FERVNfQ09VTlQpLGUhPT10aGlzLl9udW1DYXNjYWRlcyYmKHRoaXMuX251bUNhc2NhZGVzPWUsdGhpcy5yZWNyZWF0ZVNoYWRvd01hcCgpLHRoaXMuX3JlY3JlYXRlU2NlbmVVQk9zKCkpfWdldCBmcmVlemVTaGFkb3dDYXN0ZXJzQm91bmRpbmdJbmZvKCl7cmV0dXJuIHRoaXMuX2ZyZWV6ZVNoYWRvd0Nhc3RlcnNCb3VuZGluZ0luZm99c2V0IGZyZWV6ZVNoYWRvd0Nhc3RlcnNCb3VuZGluZ0luZm8oZSl7dGhpcy5fZnJlZXplU2hhZG93Q2FzdGVyc0JvdW5kaW5nSW5mb09ic2VydmFibGUmJmUmJih0aGlzLl9zY2VuZS5vbkJlZm9yZVJlbmRlck9ic2VydmFibGUucmVtb3ZlKHRoaXMuX2ZyZWV6ZVNoYWRvd0Nhc3RlcnNCb3VuZGluZ0luZm9PYnNlcnZhYmxlKSx0aGlzLl9mcmVlemVTaGFkb3dDYXN0ZXJzQm91bmRpbmdJbmZvT2JzZXJ2YWJsZT1udWxsKSwhdGhpcy5fZnJlZXplU2hhZG93Q2FzdGVyc0JvdW5kaW5nSW5mb09ic2VydmFibGUmJiFlJiYodGhpcy5fZnJlZXplU2hhZG93Q2FzdGVyc0JvdW5kaW5nSW5mb09ic2VydmFibGU9dGhpcy5fc2NlbmUub25CZWZvcmVSZW5kZXJPYnNlcnZhYmxlLmFkZCh0aGlzLl9jb21wdXRlU2hhZG93Q2FzdGVyc0JvdW5kaW5nSW5mby5iaW5kKHRoaXMpKSksdGhpcy5fZnJlZXplU2hhZG93Q2FzdGVyc0JvdW5kaW5nSW5mbz1lLGUmJnRoaXMuX2NvbXB1dGVTaGFkb3dDYXN0ZXJzQm91bmRpbmdJbmZvKCl9X2NvbXB1dGVTaGFkb3dDYXN0ZXJzQm91bmRpbmdJbmZvKCl7aWYodGhpcy5fc2NiaU1pbi5jb3B5RnJvbUZsb2F0cyhOdW1iZXIuTUFYX1ZBTFVFLE51bWJlci5NQVhfVkFMVUUsTnVtYmVyLk1BWF9WQUxVRSksdGhpcy5fc2NiaU1heC5jb3B5RnJvbUZsb2F0cyhOdW1iZXIuTUlOX1ZBTFVFLE51bWJlci5NSU5fVkFMVUUsTnVtYmVyLk1JTl9WQUxVRSksdGhpcy5fc2hhZG93TWFwJiZ0aGlzLl9zaGFkb3dNYXAucmVuZGVyTGlzdCl7Y29uc3QgZT10aGlzLl9zaGFkb3dNYXAucmVuZGVyTGlzdDtmb3IobGV0IGk9MDtpPGUubGVuZ3RoO2krKyl7Y29uc3Qgcz1lW2ldO2lmKCFzKWNvbnRpbnVlO2NvbnN0IHI9cy5nZXRCb3VuZGluZ0luZm8oKSxuPXIuYm91bmRpbmdCb3g7dGhpcy5fc2NiaU1pbi5taW5pbWl6ZUluUGxhY2Uobi5taW5pbXVtV29ybGQpLHRoaXMuX3NjYmlNYXgubWF4aW1pemVJblBsYWNlKG4ubWF4aW11bVdvcmxkKX1jb25zdCB0PXRoaXMuX3NjZW5lLm1lc2hlcztmb3IobGV0IGk9MDtpPHQubGVuZ3RoO2krKyl7Y29uc3Qgcz10W2ldO2lmKCFzfHwhcy5pc1Zpc2libGV8fCFzLmlzRW5hYmxlZHx8IXMucmVjZWl2ZVNoYWRvd3MpY29udGludWU7Y29uc3Qgcj1zLmdldEJvdW5kaW5nSW5mbygpLG49ci5ib3VuZGluZ0JveDt0aGlzLl9zY2JpTWluLm1pbmltaXplSW5QbGFjZShuLm1pbmltdW1Xb3JsZCksdGhpcy5fc2NiaU1heC5tYXhpbWl6ZUluUGxhY2Uobi5tYXhpbXVtV29ybGQpfX10aGlzLl9zaGFkb3dDYXN0ZXJzQm91bmRpbmdJbmZvLnJlQ29uc3RydWN0KHRoaXMuX3NjYmlNaW4sdGhpcy5fc2NiaU1heCl9Z2V0IHNoYWRvd0Nhc3RlcnNCb3VuZGluZ0luZm8oKXtyZXR1cm4gdGhpcy5fc2hhZG93Q2FzdGVyc0JvdW5kaW5nSW5mb31zZXQgc2hhZG93Q2FzdGVyc0JvdW5kaW5nSW5mbyhlKXt0aGlzLl9zaGFkb3dDYXN0ZXJzQm91bmRpbmdJbmZvPWV9c2V0TWluTWF4RGlzdGFuY2UoZSx0KXt0aGlzLl9taW5EaXN0YW5jZT09PWUmJnRoaXMuX21heERpc3RhbmNlPT09dHx8KGU+dCYmKGU9MCx0PTEpLGU8MCYmKGU9MCksdD4xJiYodD0xKSx0aGlzLl9taW5EaXN0YW5jZT1lLHRoaXMuX21heERpc3RhbmNlPXQsdGhpcy5fYnJlYWtzQXJlRGlydHk9ITApfWdldCBtaW5EaXN0YW5jZSgpe3JldHVybiB0aGlzLl9taW5EaXN0YW5jZX1nZXQgbWF4RGlzdGFuY2UoKXtyZXR1cm4gdGhpcy5fbWF4RGlzdGFuY2V9Z2V0Q2xhc3NOYW1lKCl7cmV0dXJuIGtlLkNMQVNTTkFNRX1nZXRDYXNjYWRlTWluRXh0ZW50cyhlKXtyZXR1cm4gZT49MCYmZTx0aGlzLl9udW1DYXNjYWRlcz90aGlzLl9jYXNjYWRlTWluRXh0ZW50c1tlXTpudWxsfWdldENhc2NhZGVNYXhFeHRlbnRzKGUpe3JldHVybiBlPj0wJiZlPHRoaXMuX251bUNhc2NhZGVzP3RoaXMuX2Nhc2NhZGVNYXhFeHRlbnRzW2VdOm51bGx9Z2V0IHNoYWRvd01heFooKXtyZXR1cm4gdGhpcy5fZ2V0Q2FtZXJhKCk/dGhpcy5fc2hhZG93TWF4WjowfXNldCBzaGFkb3dNYXhaKGUpe2NvbnN0IHQ9dGhpcy5fZ2V0Q2FtZXJhKCk7aWYoIXQpe3RoaXMuX3NoYWRvd01heFo9ZTtyZXR1cm59dGhpcy5fc2hhZG93TWF4Wj09PWV8fGU8dC5taW5afHxlPnQubWF4Wnx8KHRoaXMuX3NoYWRvd01heFo9ZSx0aGlzLl9saWdodC5fbWFya01lc2hlc0FzTGlnaHREaXJ0eSgpLHRoaXMuX2JyZWFrc0FyZURpcnR5PSEwKX1nZXQgZGVidWcoKXtyZXR1cm4gdGhpcy5fZGVidWd9c2V0IGRlYnVnKGUpe3RoaXMuX2RlYnVnPWUsdGhpcy5fbGlnaHQuX21hcmtNZXNoZXNBc0xpZ2h0RGlydHkoKX1nZXQgZGVwdGhDbGFtcCgpe3JldHVybiB0aGlzLl9kZXB0aENsYW1wfXNldCBkZXB0aENsYW1wKGUpe3RoaXMuX2RlcHRoQ2xhbXA9ZX1nZXQgY2FzY2FkZUJsZW5kUGVyY2VudGFnZSgpe3JldHVybiB0aGlzLl9jYXNjYWRlQmxlbmRQZXJjZW50YWdlfXNldCBjYXNjYWRlQmxlbmRQZXJjZW50YWdlKGUpe3RoaXMuX2Nhc2NhZGVCbGVuZFBlcmNlbnRhZ2U9ZSx0aGlzLl9saWdodC5fbWFya01lc2hlc0FzTGlnaHREaXJ0eSgpfWdldCBsYW1iZGEoKXtyZXR1cm4gdGhpcy5fbGFtYmRhfXNldCBsYW1iZGEoZSl7Y29uc3QgdD1NYXRoLm1pbihNYXRoLm1heChlLDApLDEpO3RoaXMuX2xhbWJkYSE9dCYmKHRoaXMuX2xhbWJkYT10LHRoaXMuX2JyZWFrc0FyZURpcnR5PSEwKX1nZXRDYXNjYWRlVmlld01hdHJpeChlKXtyZXR1cm4gZT49MCYmZTx0aGlzLl9udW1DYXNjYWRlcz90aGlzLl92aWV3TWF0cmljZXNbZV06bnVsbH1nZXRDYXNjYWRlUHJvamVjdGlvbk1hdHJpeChlKXtyZXR1cm4gZT49MCYmZTx0aGlzLl9udW1DYXNjYWRlcz90aGlzLl9wcm9qZWN0aW9uTWF0cmljZXNbZV06bnVsbH1nZXRDYXNjYWRlVHJhbnNmb3JtTWF0cml4KGUpe3JldHVybiBlPj0wJiZlPHRoaXMuX251bUNhc2NhZGVzP3RoaXMuX3RyYW5zZm9ybU1hdHJpY2VzW2VdOm51bGx9c2V0RGVwdGhSZW5kZXJlcihlKXt0aGlzLl9kZXB0aFJlbmRlcmVyPWUsdGhpcy5fZGVwdGhSZWR1Y2VyJiZ0aGlzLl9kZXB0aFJlZHVjZXIuc2V0RGVwdGhSZW5kZXJlcih0aGlzLl9kZXB0aFJlbmRlcmVyKX1nZXQgYXV0b0NhbGNEZXB0aEJvdW5kcygpe3JldHVybiB0aGlzLl9hdXRvQ2FsY0RlcHRoQm91bmRzfXNldCBhdXRvQ2FsY0RlcHRoQm91bmRzKGUpe2NvbnN0IHQ9dGhpcy5fZ2V0Q2FtZXJhKCk7aWYodCl7aWYodGhpcy5fYXV0b0NhbGNEZXB0aEJvdW5kcz1lLCFlKXt0aGlzLl9kZXB0aFJlZHVjZXImJnRoaXMuX2RlcHRoUmVkdWNlci5kZWFjdGl2YXRlKCksdGhpcy5zZXRNaW5NYXhEaXN0YW5jZSgwLDEpO3JldHVybn10aGlzLl9kZXB0aFJlZHVjZXJ8fCh0aGlzLl9kZXB0aFJlZHVjZXI9bmV3IHdvKHQpLHRoaXMuX2RlcHRoUmVkdWNlci5vbkFmdGVyUmVkdWN0aW9uUGVyZm9ybWVkLmFkZChpPT57bGV0IHM9aS5taW4scj1pLm1heDtzPj1yJiYocz0wLHI9MSksKHMhPXRoaXMuX21pbkRpc3RhbmNlfHxyIT10aGlzLl9tYXhEaXN0YW5jZSkmJnRoaXMuc2V0TWluTWF4RGlzdGFuY2UocyxyKX0pLHRoaXMuX2RlcHRoUmVkdWNlci5zZXREZXB0aFJlbmRlcmVyKHRoaXMuX2RlcHRoUmVuZGVyZXIpKSx0aGlzLl9kZXB0aFJlZHVjZXIuYWN0aXZhdGUoKX19Z2V0IGF1dG9DYWxjRGVwdGhCb3VuZHNSZWZyZXNoUmF0ZSgpe3ZhciBlLHQsaTtyZXR1cm4oaT0odD0oZT10aGlzLl9kZXB0aFJlZHVjZXIpPT09bnVsbHx8ZT09PXZvaWQgMD92b2lkIDA6ZS5kZXB0aFJlbmRlcmVyKT09PW51bGx8fHQ9PT12b2lkIDA/dm9pZCAwOnQuZ2V0RGVwdGhNYXAoKS5yZWZyZXNoUmF0ZSkhPT1udWxsJiZpIT09dm9pZCAwP2k6LTF9c2V0IGF1dG9DYWxjRGVwdGhCb3VuZHNSZWZyZXNoUmF0ZShlKXt2YXIgdDshKCh0PXRoaXMuX2RlcHRoUmVkdWNlcik9PT1udWxsfHx0PT09dm9pZCAwKSYmdC5kZXB0aFJlbmRlcmVyJiYodGhpcy5fZGVwdGhSZWR1Y2VyLmRlcHRoUmVuZGVyZXIuZ2V0RGVwdGhNYXAoKS5yZWZyZXNoUmF0ZT1lKX1zcGxpdEZydXN0dW0oKXt0aGlzLl9icmVha3NBcmVEaXJ0eT0hMH1fc3BsaXRGcnVzdHVtKCl7Y29uc3QgZT10aGlzLl9nZXRDYW1lcmEoKTtpZighZSlyZXR1cm47Y29uc3QgdD1lLm1pblosaT1lLm1heFoscz1pLXQscj10aGlzLl9taW5EaXN0YW5jZSxuPXRoaXMuX3NoYWRvd01heFo8aSYmdGhpcy5fc2hhZG93TWF4Wj49dD9NYXRoLm1pbigodGhpcy5fc2hhZG93TWF4Wi10KS8oaS10KSx0aGlzLl9tYXhEaXN0YW5jZSk6dGhpcy5fbWF4RGlzdGFuY2UsYT10K3IqcyxvPXQrbipzLGg9by1hLGw9by9hO2ZvcihsZXQgdT0wO3U8dGhpcy5fY2FzY2FkZXMubGVuZ3RoOysrdSl7Y29uc3QgZD0odSsxKS90aGlzLl9udW1DYXNjYWRlcyxmPWEqbCoqZCxfPWEraCpkLEU9dGhpcy5fbGFtYmRhKihmLV8pK187dGhpcy5fY2FzY2FkZXNbdV0ucHJldkJyZWFrRGlzdGFuY2U9dT09PTA/cjp0aGlzLl9jYXNjYWRlc1t1LTFdLmJyZWFrRGlzdGFuY2UsdGhpcy5fY2FzY2FkZXNbdV0uYnJlYWtEaXN0YW5jZT0oRS10KS9zLHRoaXMuX3ZpZXdTcGFjZUZydXN0dW1zWlt1XT1FLHRoaXMuX2ZydXN0dW1MZW5ndGhzW3VdPSh0aGlzLl9jYXNjYWRlc1t1XS5icmVha0Rpc3RhbmNlLXRoaXMuX2Nhc2NhZGVzW3VdLnByZXZCcmVha0Rpc3RhbmNlKSpzfXRoaXMuX2JyZWFrc0FyZURpcnR5PSExfV9jb21wdXRlTWF0cmljZXMoKXtjb25zdCBlPXRoaXMuX3NjZW5lO2lmKCF0aGlzLl9nZXRDYW1lcmEoKSlyZXR1cm47cC5Ob3JtYWxpemVUb1JlZih0aGlzLl9saWdodC5nZXRTaGFkb3dEaXJlY3Rpb24oMCksdGhpcy5fbGlnaHREaXJlY3Rpb24pLE1hdGguYWJzKHAuRG90KHRoaXMuX2xpZ2h0RGlyZWN0aW9uLHAuVXAoKSkpPT09MSYmKHRoaXMuX2xpZ2h0RGlyZWN0aW9uLno9MWUtMTMpLHRoaXMuX2NhY2hlZERpcmVjdGlvbi5jb3B5RnJvbSh0aGlzLl9saWdodERpcmVjdGlvbik7Y29uc3QgaT1lLmdldEVuZ2luZSgpLnVzZVJldmVyc2VEZXB0aEJ1ZmZlcjtmb3IobGV0IHM9MDtzPHRoaXMuX251bUNhc2NhZGVzOysrcyl7dGhpcy5fY29tcHV0ZUZydXN0dW1JbldvcmxkU3BhY2UocyksdGhpcy5fY29tcHV0ZUNhc2NhZGVGcnVzdHVtKHMpLHRoaXMuX2Nhc2NhZGVNYXhFeHRlbnRzW3NdLnN1YnRyYWN0VG9SZWYodGhpcy5fY2FzY2FkZU1pbkV4dGVudHNbc10sTGUpLHRoaXMuX2ZydXN0dW1DZW50ZXJbc10uYWRkVG9SZWYodGhpcy5fbGlnaHREaXJlY3Rpb24uc2NhbGUodGhpcy5fY2FzY2FkZU1pbkV4dGVudHNbc10ueiksdGhpcy5fc2hhZG93Q2FtZXJhUG9zW3NdKSx4Lkxvb2tBdExIVG9SZWYodGhpcy5fc2hhZG93Q2FtZXJhUG9zW3NdLHRoaXMuX2ZydXN0dW1DZW50ZXJbc10sTnIsdGhpcy5fdmlld01hdHJpY2VzW3NdKTtsZXQgcj0wLG49TGUuejtjb25zdCBhPXRoaXMuX3NoYWRvd0Nhc3RlcnNCb3VuZGluZ0luZm87YS51cGRhdGUodGhpcy5fdmlld01hdHJpY2VzW3NdKSxuPU1hdGgubWluKG4sYS5ib3VuZGluZ0JveC5tYXhpbXVtV29ybGQueiksIXRoaXMuX2RlcHRoQ2xhbXB8fHRoaXMuZmlsdGVyPT09Ry5GSUxURVJfUENTUz9yPU1hdGgubWluKHIsYS5ib3VuZGluZ0JveC5taW5pbXVtV29ybGQueik6cj1NYXRoLm1heChyLGEuYm91bmRpbmdCb3gubWluaW11bVdvcmxkLnopLHguT3J0aG9PZmZDZW50ZXJMSFRvUmVmKHRoaXMuX2Nhc2NhZGVNaW5FeHRlbnRzW3NdLngsdGhpcy5fY2FzY2FkZU1heEV4dGVudHNbc10ueCx0aGlzLl9jYXNjYWRlTWluRXh0ZW50c1tzXS55LHRoaXMuX2Nhc2NhZGVNYXhFeHRlbnRzW3NdLnksaT9uOnIsaT9yOm4sdGhpcy5fcHJvamVjdGlvbk1hdHJpY2VzW3NdLGUuZ2V0RW5naW5lKCkuaXNORENIYWxmWlJhbmdlKSx0aGlzLl9jYXNjYWRlTWluRXh0ZW50c1tzXS56PXIsdGhpcy5fY2FzY2FkZU1heEV4dGVudHNbc10uej1uLHRoaXMuX3ZpZXdNYXRyaWNlc1tzXS5tdWx0aXBseVRvUmVmKHRoaXMuX3Byb2plY3Rpb25NYXRyaWNlc1tzXSx0aGlzLl90cmFuc2Zvcm1NYXRyaWNlc1tzXSkscC5UcmFuc2Zvcm1Db29yZGluYXRlc1RvUmVmKE9vLHRoaXMuX3RyYW5zZm9ybU1hdHJpY2VzW3NdLExlKSxMZS5zY2FsZUluUGxhY2UodGhpcy5fbWFwU2l6ZS8yKSx4aS5jb3B5RnJvbUZsb2F0cyhNYXRoLnJvdW5kKExlLngpLE1hdGgucm91bmQoTGUueSksTWF0aC5yb3VuZChMZS56KSkseGkuc3VidHJhY3RJblBsYWNlKExlKS5zY2FsZUluUGxhY2UoMi90aGlzLl9tYXBTaXplKSx4LlRyYW5zbGF0aW9uVG9SZWYoeGkueCx4aS55LDAsb3MpLHRoaXMuX3Byb2plY3Rpb25NYXRyaWNlc1tzXS5tdWx0aXBseVRvUmVmKG9zLHRoaXMuX3Byb2plY3Rpb25NYXRyaWNlc1tzXSksdGhpcy5fdmlld01hdHJpY2VzW3NdLm11bHRpcGx5VG9SZWYodGhpcy5fcHJvamVjdGlvbk1hdHJpY2VzW3NdLHRoaXMuX3RyYW5zZm9ybU1hdHJpY2VzW3NdKSx0aGlzLl90cmFuc2Zvcm1NYXRyaWNlc1tzXS5jb3B5VG9BcnJheSh0aGlzLl90cmFuc2Zvcm1NYXRyaWNlc0FzQXJyYXkscyoxNil9fV9jb21wdXRlRnJ1c3R1bUluV29ybGRTcGFjZShlKXtjb25zdCB0PXRoaXMuX2dldENhbWVyYSgpO2lmKCF0KXJldHVybjtjb25zdCBpPXRoaXMuX2Nhc2NhZGVzW2VdLnByZXZCcmVha0Rpc3RhbmNlLHM9dGhpcy5fY2FzY2FkZXNbZV0uYnJlYWtEaXN0YW5jZSxyPXRoaXMuX3NjZW5lLmdldEVuZ2luZSgpLmlzTkRDSGFsZlpSYW5nZTt0LmdldFZpZXdNYXRyaXgoKTtjb25zdCBuPXguSW52ZXJ0KHQuZ2V0VHJhbnNmb3JtYXRpb25NYXRyaXgoKSksYT10aGlzLl9zY2VuZS5nZXRFbmdpbmUoKS51c2VSZXZlcnNlRGVwdGhCdWZmZXI/NDowO2ZvcihsZXQgbz0wO288a2UuX0ZydXN0dW1Db3JuZXJzTkRDU3BhY2UubGVuZ3RoOysrbylMZS5jb3B5RnJvbShrZS5fRnJ1c3R1bUNvcm5lcnNORENTcGFjZVsobythKSVrZS5fRnJ1c3R1bUNvcm5lcnNORENTcGFjZS5sZW5ndGhdKSxyJiZMZS56PT09LTEmJihMZS56PTApLHAuVHJhbnNmb3JtQ29vcmRpbmF0ZXNUb1JlZihMZSxuLHRoaXMuX2ZydXN0dW1Db3JuZXJzV29ybGRTcGFjZVtlXVtvXSk7Zm9yKGxldCBvPTA7bzxrZS5fRnJ1c3R1bUNvcm5lcnNORENTcGFjZS5sZW5ndGgvMjsrK28pTGUuY29weUZyb20odGhpcy5fZnJ1c3R1bUNvcm5lcnNXb3JsZFNwYWNlW2VdW28rNF0pLnN1YnRyYWN0SW5QbGFjZSh0aGlzLl9mcnVzdHVtQ29ybmVyc1dvcmxkU3BhY2VbZV1bb10pLHhpLmNvcHlGcm9tKExlKS5zY2FsZUluUGxhY2UoaSksTGUuc2NhbGVJblBsYWNlKHMpLExlLmFkZEluUGxhY2UodGhpcy5fZnJ1c3R1bUNvcm5lcnNXb3JsZFNwYWNlW2VdW29dKSx0aGlzLl9mcnVzdHVtQ29ybmVyc1dvcmxkU3BhY2VbZV1bbys0XS5jb3B5RnJvbShMZSksdGhpcy5fZnJ1c3R1bUNvcm5lcnNXb3JsZFNwYWNlW2VdW29dLmFkZEluUGxhY2UoeGkpfV9jb21wdXRlQ2FzY2FkZUZydXN0dW0oZSl7aWYodGhpcy5fY2FzY2FkZU1pbkV4dGVudHNbZV0uY29weUZyb21GbG9hdHMoTnVtYmVyLk1BWF9WQUxVRSxOdW1iZXIuTUFYX1ZBTFVFLE51bWJlci5NQVhfVkFMVUUpLHRoaXMuX2Nhc2NhZGVNYXhFeHRlbnRzW2VdLmNvcHlGcm9tRmxvYXRzKE51bWJlci5NSU5fVkFMVUUsTnVtYmVyLk1JTl9WQUxVRSxOdW1iZXIuTUlOX1ZBTFVFKSx0aGlzLl9mcnVzdHVtQ2VudGVyW2VdLmNvcHlGcm9tRmxvYXRzKDAsMCwwKSwhIXRoaXMuX2dldENhbWVyYSgpKXtmb3IobGV0IGk9MDtpPHRoaXMuX2ZydXN0dW1Db3JuZXJzV29ybGRTcGFjZVtlXS5sZW5ndGg7KytpKXRoaXMuX2ZydXN0dW1DZW50ZXJbZV0uYWRkSW5QbGFjZSh0aGlzLl9mcnVzdHVtQ29ybmVyc1dvcmxkU3BhY2VbZV1baV0pO2lmKHRoaXMuX2ZydXN0dW1DZW50ZXJbZV0uc2NhbGVJblBsYWNlKDEvdGhpcy5fZnJ1c3R1bUNvcm5lcnNXb3JsZFNwYWNlW2VdLmxlbmd0aCksdGhpcy5zdGFiaWxpemVDYXNjYWRlcyl7bGV0IGk9MDtmb3IobGV0IHM9MDtzPHRoaXMuX2ZydXN0dW1Db3JuZXJzV29ybGRTcGFjZVtlXS5sZW5ndGg7KytzKXtjb25zdCByPXRoaXMuX2ZydXN0dW1Db3JuZXJzV29ybGRTcGFjZVtlXVtzXS5zdWJ0cmFjdFRvUmVmKHRoaXMuX2ZydXN0dW1DZW50ZXJbZV0sTGUpLmxlbmd0aCgpO2k9TWF0aC5tYXgoaSxyKX1pPU1hdGguY2VpbChpKjE2KS8xNix0aGlzLl9jYXNjYWRlTWF4RXh0ZW50c1tlXS5jb3B5RnJvbUZsb2F0cyhpLGksaSksdGhpcy5fY2FzY2FkZU1pbkV4dGVudHNbZV0uY29weUZyb21GbG9hdHMoLWksLWksLWkpfWVsc2V7Y29uc3QgaT10aGlzLl9mcnVzdHVtQ2VudGVyW2VdO3RoaXMuX2ZydXN0dW1DZW50ZXJbZV0uYWRkVG9SZWYodGhpcy5fbGlnaHREaXJlY3Rpb24sTGUpLHguTG9va0F0TEhUb1JlZihpLExlLE5yLG9zKTtmb3IobGV0IHM9MDtzPHRoaXMuX2ZydXN0dW1Db3JuZXJzV29ybGRTcGFjZVtlXS5sZW5ndGg7KytzKXAuVHJhbnNmb3JtQ29vcmRpbmF0ZXNUb1JlZih0aGlzLl9mcnVzdHVtQ29ybmVyc1dvcmxkU3BhY2VbZV1bc10sb3MsTGUpLHRoaXMuX2Nhc2NhZGVNaW5FeHRlbnRzW2VdLm1pbmltaXplSW5QbGFjZShMZSksdGhpcy5fY2FzY2FkZU1heEV4dGVudHNbZV0ubWF4aW1pemVJblBsYWNlKExlKX19fV9yZWNyZWF0ZVNjZW5lVUJPcygpe2lmKHRoaXMuX2Rpc3Bvc2VTY2VuZVVCT3MoKSx0aGlzLl9zY2VuZVVCT3MpZm9yKGxldCBlPTA7ZTx0aGlzLl9udW1DYXNjYWRlczsrK2UpdGhpcy5fc2NlbmVVQk9zLnB1c2godGhpcy5fc2NlbmUuY3JlYXRlU2NlbmVVbmlmb3JtQnVmZmVyKGBTY2VuZSBmb3IgQ1NNIFNoYWRvdyBHZW5lcmF0b3IgKGxpZ2h0ICIke3RoaXMuX2xpZ2h0Lm5hbWV9IiBjYXNjYWRlICMke2V9KWApKX1zdGF0aWMgZ2V0IElzU3VwcG9ydGVkKCl7Y29uc3QgZT1mZS5MYXN0Q3JlYXRlZEVuZ2luZTtyZXR1cm4gZT9lLl9mZWF0dXJlcy5zdXBwb3J0Q1NNOiExfV9pbml0aWFsaXplR2VuZXJhdG9yKCl7dmFyIGUsdCxpLHMscixuLGEsbyxoLGwsdSxkLGYsXyxFLG0sdixTLHksQTt0aGlzLnBlbnVtYnJhRGFya25lc3M9KGU9dGhpcy5wZW51bWJyYURhcmtuZXNzKSE9PW51bGwmJmUhPT12b2lkIDA/ZToxLHRoaXMuX251bUNhc2NhZGVzPSh0PXRoaXMuX251bUNhc2NhZGVzKSE9PW51bGwmJnQhPT12b2lkIDA/dDprZS5ERUZBVUxUX0NBU0NBREVTX0NPVU5ULHRoaXMuc3RhYmlsaXplQ2FzY2FkZXM9KGk9dGhpcy5zdGFiaWxpemVDYXNjYWRlcykhPT1udWxsJiZpIT09dm9pZCAwP2k6ITEsdGhpcy5fZnJlZXplU2hhZG93Q2FzdGVyc0JvdW5kaW5nSW5mb09ic2VydmFibGU9KHM9dGhpcy5fZnJlZXplU2hhZG93Q2FzdGVyc0JvdW5kaW5nSW5mb09ic2VydmFibGUpIT09bnVsbCYmcyE9PXZvaWQgMD9zOm51bGwsdGhpcy5mcmVlemVTaGFkb3dDYXN0ZXJzQm91bmRpbmdJbmZvPShyPXRoaXMuZnJlZXplU2hhZG93Q2FzdGVyc0JvdW5kaW5nSW5mbykhPT1udWxsJiZyIT09dm9pZCAwP3I6ITEsdGhpcy5fc2NiaU1pbj0obj10aGlzLl9zY2JpTWluKSE9PW51bGwmJm4hPT12b2lkIDA/bjpuZXcgcCgwLDAsMCksdGhpcy5fc2NiaU1heD0oYT10aGlzLl9zY2JpTWF4KSE9PW51bGwmJmEhPT12b2lkIDA/YTpuZXcgcCgwLDAsMCksdGhpcy5fc2hhZG93Q2FzdGVyc0JvdW5kaW5nSW5mbz0obz10aGlzLl9zaGFkb3dDYXN0ZXJzQm91bmRpbmdJbmZvKSE9PW51bGwmJm8hPT12b2lkIDA/bzpuZXcgZHQobmV3IHAoMCwwLDApLG5ldyBwKDAsMCwwKSksdGhpcy5fYnJlYWtzQXJlRGlydHk9KGg9dGhpcy5fYnJlYWtzQXJlRGlydHkpIT09bnVsbCYmaCE9PXZvaWQgMD9oOiEwLHRoaXMuX21pbkRpc3RhbmNlPShsPXRoaXMuX21pbkRpc3RhbmNlKSE9PW51bGwmJmwhPT12b2lkIDA/bDowLHRoaXMuX21heERpc3RhbmNlPSh1PXRoaXMuX21heERpc3RhbmNlKSE9PW51bGwmJnUhPT12b2lkIDA/dToxLHRoaXMuX2N1cnJlbnRMYXllcj0oZD10aGlzLl9jdXJyZW50TGF5ZXIpIT09bnVsbCYmZCE9PXZvaWQgMD9kOjAsdGhpcy5fc2hhZG93TWF4Wj0oRT0oZj10aGlzLl9zaGFkb3dNYXhaKSE9PW51bGwmJmYhPT12b2lkIDA/ZjooXz10aGlzLl9nZXRDYW1lcmEoKSk9PT1udWxsfHxfPT09dm9pZCAwP3ZvaWQgMDpfLm1heFopIT09bnVsbCYmRSE9PXZvaWQgMD9FOjFlNCx0aGlzLl9kZWJ1Zz0obT10aGlzLl9kZWJ1ZykhPT1udWxsJiZtIT09dm9pZCAwP206ITEsdGhpcy5fZGVwdGhDbGFtcD0odj10aGlzLl9kZXB0aENsYW1wKSE9PW51bGwmJnYhPT12b2lkIDA/djohMCx0aGlzLl9jYXNjYWRlQmxlbmRQZXJjZW50YWdlPShTPXRoaXMuX2Nhc2NhZGVCbGVuZFBlcmNlbnRhZ2UpIT09bnVsbCYmUyE9PXZvaWQgMD9TOi4xLHRoaXMuX2xhbWJkYT0oeT10aGlzLl9sYW1iZGEpIT09bnVsbCYmeSE9PXZvaWQgMD95Oi41LHRoaXMuX2F1dG9DYWxjRGVwdGhCb3VuZHM9KEE9dGhpcy5fYXV0b0NhbGNEZXB0aEJvdW5kcykhPT1udWxsJiZBIT09dm9pZCAwP0E6ITEsdGhpcy5fcmVjcmVhdGVTY2VuZVVCT3MoKSxzdXBlci5faW5pdGlhbGl6ZUdlbmVyYXRvcigpfV9jcmVhdGVUYXJnZXRSZW5kZXJUZXh0dXJlKCl7Y29uc3QgZT10aGlzLl9zY2VuZS5nZXRFbmdpbmUoKSx0PXt3aWR0aDp0aGlzLl9tYXBTaXplLGhlaWdodDp0aGlzLl9tYXBTaXplLGxheWVyczp0aGlzLm51bUNhc2NhZGVzfTt0aGlzLl9zaGFkb3dNYXA9bmV3IF90KHRoaXMuX2xpZ2h0Lm5hbWUrIl9DU01TaGFkb3dNYXAiLHQsdGhpcy5fc2NlbmUsITEsITAsdGhpcy5fdGV4dHVyZVR5cGUsITEsdm9pZCAwLCExLCExLHZvaWQgMCksdGhpcy5fc2hhZG93TWFwLmNyZWF0ZURlcHRoU3RlbmNpbFRleHR1cmUoZS51c2VSZXZlcnNlRGVwdGhCdWZmZXI/NTE2OjUxMywhMCl9X2luaXRpYWxpemVTaGFkb3dNYXAoKXtpZihzdXBlci5faW5pdGlhbGl6ZVNoYWRvd01hcCgpLHRoaXMuX3NoYWRvd01hcD09PW51bGwpcmV0dXJuO3RoaXMuX3RyYW5zZm9ybU1hdHJpY2VzQXNBcnJheT1uZXcgRmxvYXQzMkFycmF5KHRoaXMuX251bUNhc2NhZGVzKjE2KSx0aGlzLl92aWV3U3BhY2VGcnVzdHVtc1o9bmV3IEFycmF5KHRoaXMuX251bUNhc2NhZGVzKSx0aGlzLl9mcnVzdHVtTGVuZ3Rocz1uZXcgQXJyYXkodGhpcy5fbnVtQ2FzY2FkZXMpLHRoaXMuX2xpZ2h0U2l6ZVVWQ29ycmVjdGlvbj1uZXcgQXJyYXkodGhpcy5fbnVtQ2FzY2FkZXMqMiksdGhpcy5fZGVwdGhDb3JyZWN0aW9uPW5ldyBBcnJheSh0aGlzLl9udW1DYXNjYWRlcyksdGhpcy5fY2FzY2FkZXM9W10sdGhpcy5fdmlld01hdHJpY2VzPVtdLHRoaXMuX3Byb2plY3Rpb25NYXRyaWNlcz1bXSx0aGlzLl90cmFuc2Zvcm1NYXRyaWNlcz1bXSx0aGlzLl9jYXNjYWRlTWluRXh0ZW50cz1bXSx0aGlzLl9jYXNjYWRlTWF4RXh0ZW50cz1bXSx0aGlzLl9mcnVzdHVtQ2VudGVyPVtdLHRoaXMuX3NoYWRvd0NhbWVyYVBvcz1bXSx0aGlzLl9mcnVzdHVtQ29ybmVyc1dvcmxkU3BhY2U9W107Zm9yKGxldCB0PTA7dDx0aGlzLl9udW1DYXNjYWRlczsrK3Qpe3RoaXMuX2Nhc2NhZGVzW3RdPXtwcmV2QnJlYWtEaXN0YW5jZTowLGJyZWFrRGlzdGFuY2U6MH0sdGhpcy5fdmlld01hdHJpY2VzW3RdPXguWmVybygpLHRoaXMuX3Byb2plY3Rpb25NYXRyaWNlc1t0XT14Llplcm8oKSx0aGlzLl90cmFuc2Zvcm1NYXRyaWNlc1t0XT14Llplcm8oKSx0aGlzLl9jYXNjYWRlTWluRXh0ZW50c1t0XT1uZXcgcCx0aGlzLl9jYXNjYWRlTWF4RXh0ZW50c1t0XT1uZXcgcCx0aGlzLl9mcnVzdHVtQ2VudGVyW3RdPW5ldyBwLHRoaXMuX3NoYWRvd0NhbWVyYVBvc1t0XT1uZXcgcCx0aGlzLl9mcnVzdHVtQ29ybmVyc1dvcmxkU3BhY2VbdF09bmV3IEFycmF5KGtlLl9GcnVzdHVtQ29ybmVyc05EQ1NwYWNlLmxlbmd0aCk7Zm9yKGxldCBpPTA7aTxrZS5fRnJ1c3R1bUNvcm5lcnNORENTcGFjZS5sZW5ndGg7KytpKXRoaXMuX2ZydXN0dW1Db3JuZXJzV29ybGRTcGFjZVt0XVtpXT1uZXcgcH1jb25zdCBlPXRoaXMuX3NjZW5lLmdldEVuZ2luZSgpO3RoaXMuX3NoYWRvd01hcC5vbkJlZm9yZUJpbmRPYnNlcnZhYmxlLmNsZWFyKCksdGhpcy5fc2hhZG93TWFwLm9uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZS5jbGVhcigpLHRoaXMuX3NoYWRvd01hcC5vbkJlZm9yZVJlbmRlck9ic2VydmFibGUuYWRkKHQ9Pnt0aGlzLl9zY2VuZVVCT3MmJnRoaXMuX3NjZW5lLnNldFNjZW5lVW5pZm9ybUJ1ZmZlcih0aGlzLl9zY2VuZVVCT3NbdF0pLHRoaXMuX2N1cnJlbnRMYXllcj10LHRoaXMuX2ZpbHRlcj09PUcuRklMVEVSX1BDRiYmZS5zZXRDb2xvcldyaXRlKCExKSx0aGlzLl9zY2VuZS5zZXRUcmFuc2Zvcm1NYXRyaXgodGhpcy5nZXRDYXNjYWRlVmlld01hdHJpeCh0KSx0aGlzLmdldENhc2NhZGVQcm9qZWN0aW9uTWF0cml4KHQpKSx0aGlzLl91c2VVQk8mJih0aGlzLl9zY2VuZS5nZXRTY2VuZVVuaWZvcm1CdWZmZXIoKS51bmJpbmRFZmZlY3QoKSx0aGlzLl9zY2VuZS5maW5hbGl6ZVNjZW5lVWJvKCkpfSksdGhpcy5fc2hhZG93TWFwLm9uQmVmb3JlQmluZE9ic2VydmFibGUuYWRkKCgpPT57dmFyIHQ7dGhpcy5fY3VycmVudFNjZW5lVUJPPXRoaXMuX3NjZW5lLmdldFNjZW5lVW5pZm9ybUJ1ZmZlcigpLCh0PWUuX2RlYnVnUHVzaEdyb3VwKT09PW51bGx8fHQ9PT12b2lkIDB8fHQuY2FsbChlLGBjYXNjYWRlZCBzaGFkb3cgbWFwIGdlbmVyYXRpb24gZm9yIHBhc3MgaWQgJHtlLmN1cnJlbnRSZW5kZXJQYXNzSWR9YCwxKSx0aGlzLl9icmVha3NBcmVEaXJ0eSYmdGhpcy5fc3BsaXRGcnVzdHVtKCksdGhpcy5fY29tcHV0ZU1hdHJpY2VzKCl9KSx0aGlzLl9zcGxpdEZydXN0dW0oKX1fYmluZEN1c3RvbUVmZmVjdEZvclJlbmRlclN1Yk1lc2hGb3JTaGFkb3dNYXAoZSx0KXt0LnNldE1hdHJpeCgidmlld1Byb2plY3Rpb24iLHRoaXMuZ2V0Q2FzY2FkZVRyYW5zZm9ybU1hdHJpeCh0aGlzLl9jdXJyZW50TGF5ZXIpKX1faXNSZWFkeUN1c3RvbURlZmluZXMoZSl7ZS5wdXNoKCIjZGVmaW5lIFNNX0RFUFRIQ0xBTVAgIisodGhpcy5fZGVwdGhDbGFtcCYmdGhpcy5fZmlsdGVyIT09Ry5GSUxURVJfUENTUz8iMSI6IjAiKSl9cHJlcGFyZURlZmluZXMoZSx0KXtzdXBlci5wcmVwYXJlRGVmaW5lcyhlLHQpO2NvbnN0IGk9dGhpcy5fc2NlbmUscz10aGlzLl9saWdodDtpZighaS5zaGFkb3dzRW5hYmxlZHx8IXMuc2hhZG93RW5hYmxlZClyZXR1cm47ZVsiU0hBRE9XQ1NNIit0XT0hMCxlWyJTSEFET1dDU01ERUJVRyIrdF09dGhpcy5kZWJ1ZyxlWyJTSEFET1dDU01OVU1fQ0FTQ0FERVMiK3RdPXRoaXMubnVtQ2FzY2FkZXMsZVsiU0hBRE9XQ1NNX1JJR0hUSEFOREVEIit0XT1pLnVzZVJpZ2h0SGFuZGVkU3lzdGVtO2NvbnN0IHI9dGhpcy5fZ2V0Q2FtZXJhKCk7ciYmdGhpcy5fc2hhZG93TWF4WjxyLm1heFomJihlWyJTSEFET1dDU01VU0VTSEFET1dNQVhaIit0XT0hMCksdGhpcy5jYXNjYWRlQmxlbmRQZXJjZW50YWdlPT09MCYmKGVbIlNIQURPV0NTTU5PQkxFTkQiK3RdPSEwKX1iaW5kU2hhZG93TGlnaHQoZSx0KXtjb25zdCBpPXRoaXMuX2xpZ2h0O2lmKCF0aGlzLl9zY2VuZS5zaGFkb3dzRW5hYmxlZHx8IWkuc2hhZG93RW5hYmxlZClyZXR1cm47Y29uc3Qgcj10aGlzLl9nZXRDYW1lcmEoKTtpZighcilyZXR1cm47Y29uc3Qgbj10aGlzLmdldFNoYWRvd01hcCgpO2lmKCFuKXJldHVybjtjb25zdCBhPW4uZ2V0U2l6ZSgpLndpZHRoO2lmKHQuc2V0TWF0cmljZXMoImxpZ2h0TWF0cml4IitlLHRoaXMuX3RyYW5zZm9ybU1hdHJpY2VzQXNBcnJheSksdC5zZXRBcnJheSgidmlld0ZydXN0dW1aIitlLHRoaXMuX3ZpZXdTcGFjZUZydXN0dW1zWiksdC5zZXRGbG9hdCgiY2FzY2FkZUJsZW5kRmFjdG9yIitlLHRoaXMuY2FzY2FkZUJsZW5kUGVyY2VudGFnZT09PTA/MWU0OjEvdGhpcy5jYXNjYWRlQmxlbmRQZXJjZW50YWdlKSx0LnNldEFycmF5KCJmcnVzdHVtTGVuZ3RocyIrZSx0aGlzLl9mcnVzdHVtTGVuZ3RocyksdGhpcy5fZmlsdGVyPT09Ry5GSUxURVJfUENGKXQuc2V0RGVwdGhTdGVuY2lsVGV4dHVyZSgic2hhZG93U2FtcGxlciIrZSxuKSxpLl91bmlmb3JtQnVmZmVyLnVwZGF0ZUZsb2F0NCgic2hhZG93c0luZm8iLHRoaXMuZ2V0RGFya25lc3MoKSxhLDEvYSx0aGlzLmZydXN0dW1FZGdlRmFsbG9mZixlKTtlbHNlIGlmKHRoaXMuX2ZpbHRlcj09PUcuRklMVEVSX1BDU1Mpe2ZvcihsZXQgbz0wO288dGhpcy5fbnVtQ2FzY2FkZXM7KytvKXRoaXMuX2xpZ2h0U2l6ZVVWQ29ycmVjdGlvbltvKjIrMF09bz09PTA/MToodGhpcy5fY2FzY2FkZU1heEV4dGVudHNbMF0ueC10aGlzLl9jYXNjYWRlTWluRXh0ZW50c1swXS54KS8odGhpcy5fY2FzY2FkZU1heEV4dGVudHNbb10ueC10aGlzLl9jYXNjYWRlTWluRXh0ZW50c1tvXS54KSx0aGlzLl9saWdodFNpemVVVkNvcnJlY3Rpb25bbyoyKzFdPW89PT0wPzE6KHRoaXMuX2Nhc2NhZGVNYXhFeHRlbnRzWzBdLnktdGhpcy5fY2FzY2FkZU1pbkV4dGVudHNbMF0ueSkvKHRoaXMuX2Nhc2NhZGVNYXhFeHRlbnRzW29dLnktdGhpcy5fY2FzY2FkZU1pbkV4dGVudHNbb10ueSksdGhpcy5fZGVwdGhDb3JyZWN0aW9uW29dPW89PT0wPzE6KHRoaXMuX2Nhc2NhZGVNYXhFeHRlbnRzW29dLnotdGhpcy5fY2FzY2FkZU1pbkV4dGVudHNbb10ueikvKHRoaXMuX2Nhc2NhZGVNYXhFeHRlbnRzWzBdLnotdGhpcy5fY2FzY2FkZU1pbkV4dGVudHNbMF0ueik7dC5zZXREZXB0aFN0ZW5jaWxUZXh0dXJlKCJzaGFkb3dTYW1wbGVyIitlLG4pLHQuc2V0VGV4dHVyZSgiZGVwdGhTYW1wbGVyIitlLG4pLHQuc2V0QXJyYXkyKCJsaWdodFNpemVVVkNvcnJlY3Rpb24iK2UsdGhpcy5fbGlnaHRTaXplVVZDb3JyZWN0aW9uKSx0LnNldEFycmF5KCJkZXB0aENvcnJlY3Rpb24iK2UsdGhpcy5fZGVwdGhDb3JyZWN0aW9uKSx0LnNldEZsb2F0KCJwZW51bWJyYURhcmtuZXNzIitlLHRoaXMucGVudW1icmFEYXJrbmVzcyksaS5fdW5pZm9ybUJ1ZmZlci51cGRhdGVGbG9hdDQoInNoYWRvd3NJbmZvIix0aGlzLmdldERhcmtuZXNzKCksMS9hLHRoaXMuX2NvbnRhY3RIYXJkZW5pbmdMaWdodFNpemVVVlJhdGlvKmEsdGhpcy5mcnVzdHVtRWRnZUZhbGxvZmYsZSl9ZWxzZSB0LnNldFRleHR1cmUoInNoYWRvd1NhbXBsZXIiK2UsbiksaS5fdW5pZm9ybUJ1ZmZlci51cGRhdGVGbG9hdDQoInNoYWRvd3NJbmZvIix0aGlzLmdldERhcmtuZXNzKCksYSwxL2EsdGhpcy5mcnVzdHVtRWRnZUZhbGxvZmYsZSk7aS5fdW5pZm9ybUJ1ZmZlci51cGRhdGVGbG9hdDIoImRlcHRoVmFsdWVzIix0aGlzLmdldExpZ2h0KCkuZ2V0RGVwdGhNaW5aKHIpLHRoaXMuZ2V0TGlnaHQoKS5nZXREZXB0aE1pbloocikrdGhpcy5nZXRMaWdodCgpLmdldERlcHRoTWF4WihyKSxlKX1nZXRUcmFuc2Zvcm1NYXRyaXgoKXtyZXR1cm4gdGhpcy5nZXRDYXNjYWRlVHJhbnNmb3JtTWF0cml4KDApfWRpc3Bvc2UoKXtzdXBlci5kaXNwb3NlKCksdGhpcy5fZnJlZXplU2hhZG93Q2FzdGVyc0JvdW5kaW5nSW5mb09ic2VydmFibGUmJih0aGlzLl9zY2VuZS5vbkJlZm9yZVJlbmRlck9ic2VydmFibGUucmVtb3ZlKHRoaXMuX2ZyZWV6ZVNoYWRvd0Nhc3RlcnNCb3VuZGluZ0luZm9PYnNlcnZhYmxlKSx0aGlzLl9mcmVlemVTaGFkb3dDYXN0ZXJzQm91bmRpbmdJbmZvT2JzZXJ2YWJsZT1udWxsKSx0aGlzLl9kZXB0aFJlZHVjZXImJih0aGlzLl9kZXB0aFJlZHVjZXIuZGlzcG9zZSgpLHRoaXMuX2RlcHRoUmVkdWNlcj1udWxsKX1zZXJpYWxpemUoKXtjb25zdCBlPXN1cGVyLnNlcmlhbGl6ZSgpLHQ9dGhpcy5nZXRTaGFkb3dNYXAoKTtpZighdClyZXR1cm4gZTtpZihlLm51bUNhc2NhZGVzPXRoaXMuX251bUNhc2NhZGVzLGUuZGVidWc9dGhpcy5fZGVidWcsZS5zdGFiaWxpemVDYXNjYWRlcz10aGlzLnN0YWJpbGl6ZUNhc2NhZGVzLGUubGFtYmRhPXRoaXMuX2xhbWJkYSxlLmNhc2NhZGVCbGVuZFBlcmNlbnRhZ2U9dGhpcy5jYXNjYWRlQmxlbmRQZXJjZW50YWdlLGUuZGVwdGhDbGFtcD10aGlzLl9kZXB0aENsYW1wLGUuYXV0b0NhbGNEZXB0aEJvdW5kcz10aGlzLmF1dG9DYWxjRGVwdGhCb3VuZHMsZS5zaGFkb3dNYXhaPXRoaXMuX3NoYWRvd01heFosZS5wZW51bWJyYURhcmtuZXNzPXRoaXMucGVudW1icmFEYXJrbmVzcyxlLmZyZWV6ZVNoYWRvd0Nhc3RlcnNCb3VuZGluZ0luZm89dGhpcy5fZnJlZXplU2hhZG93Q2FzdGVyc0JvdW5kaW5nSW5mbyxlLm1pbkRpc3RhbmNlPXRoaXMubWluRGlzdGFuY2UsZS5tYXhEaXN0YW5jZT10aGlzLm1heERpc3RhbmNlLGUucmVuZGVyTGlzdD1bXSx0LnJlbmRlckxpc3QpZm9yKGxldCBpPTA7aTx0LnJlbmRlckxpc3QubGVuZ3RoO2krKyl7Y29uc3Qgcz10LnJlbmRlckxpc3RbaV07ZS5yZW5kZXJMaXN0LnB1c2gocy5pZCl9cmV0dXJuIGV9c3RhdGljIFBhcnNlKGUsdCl7Y29uc3QgaT1HLlBhcnNlKGUsdCwocyxyLG4pPT5uZXcga2UocyxyLHZvaWQgMCxuKSk7cmV0dXJuIGUubnVtQ2FzY2FkZXMhPT12b2lkIDAmJihpLm51bUNhc2NhZGVzPWUubnVtQ2FzY2FkZXMpLGUuZGVidWchPT12b2lkIDAmJihpLmRlYnVnPWUuZGVidWcpLGUuc3RhYmlsaXplQ2FzY2FkZXMhPT12b2lkIDAmJihpLnN0YWJpbGl6ZUNhc2NhZGVzPWUuc3RhYmlsaXplQ2FzY2FkZXMpLGUubGFtYmRhIT09dm9pZCAwJiYoaS5sYW1iZGE9ZS5sYW1iZGEpLGUuY2FzY2FkZUJsZW5kUGVyY2VudGFnZSE9PXZvaWQgMCYmKGkuY2FzY2FkZUJsZW5kUGVyY2VudGFnZT1lLmNhc2NhZGVCbGVuZFBlcmNlbnRhZ2UpLGUuZGVwdGhDbGFtcCE9PXZvaWQgMCYmKGkuZGVwdGhDbGFtcD1lLmRlcHRoQ2xhbXApLGUuYXV0b0NhbGNEZXB0aEJvdW5kcyE9PXZvaWQgMCYmKGkuYXV0b0NhbGNEZXB0aEJvdW5kcz1lLmF1dG9DYWxjRGVwdGhCb3VuZHMpLGUuc2hhZG93TWF4WiE9PXZvaWQgMCYmKGkuc2hhZG93TWF4Wj1lLnNoYWRvd01heFopLGUucGVudW1icmFEYXJrbmVzcyE9PXZvaWQgMCYmKGkucGVudW1icmFEYXJrbmVzcz1lLnBlbnVtYnJhRGFya25lc3MpLGUuZnJlZXplU2hhZG93Q2FzdGVyc0JvdW5kaW5nSW5mbyE9PXZvaWQgMCYmKGkuZnJlZXplU2hhZG93Q2FzdGVyc0JvdW5kaW5nSW5mbz1lLmZyZWV6ZVNoYWRvd0Nhc3RlcnNCb3VuZGluZ0luZm8pLGUubWluRGlzdGFuY2UhPT12b2lkIDAmJmUubWF4RGlzdGFuY2UhPT12b2lkIDAmJmkuc2V0TWluTWF4RGlzdGFuY2UoZS5taW5EaXN0YW5jZSxlLm1heERpc3RhbmNlKSxpfX1rZS5fRnJ1c3R1bUNvcm5lcnNORENTcGFjZT1bbmV3IHAoLTEsMSwtMSksbmV3IHAoMSwxLC0xKSxuZXcgcCgxLC0xLC0xKSxuZXcgcCgtMSwtMSwtMSksbmV3IHAoLTEsMSwxKSxuZXcgcCgxLDEsMSksbmV3IHAoMSwtMSwxKSxuZXcgcCgtMSwtMSwxKV0sa2UuQ0xBU1NOQU1FPSJDYXNjYWRlZFNoYWRvd0dlbmVyYXRvciIsa2UuREVGQVVMVF9DQVNDQURFU19DT1VOVD00LGtlLk1JTl9DQVNDQURFU19DT1VOVD0yLGtlLk1BWF9DQVNDQURFU19DT1VOVD00LGtlLl9TY2VuZUNvbXBvbmVudEluaXRpYWxpemF0aW9uPWM9Pnt0aHJvdyAkKCJTaGFkb3dHZW5lcmF0b3JTY2VuZUNvbXBvbmVudCIpfSxaaS5BZGRQYXJzZXIocS5OQU1FX1NIQURPV0dFTkVSQVRPUiwoYyxlKT0+e2lmKGMuc2hhZG93R2VuZXJhdG9ycyE9PXZvaWQgMCYmYy5zaGFkb3dHZW5lcmF0b3JzIT09bnVsbClmb3IobGV0IHQ9MCxpPWMuc2hhZG93R2VuZXJhdG9ycy5sZW5ndGg7dDxpO3QrKyl7Y29uc3Qgcz1jLnNoYWRvd0dlbmVyYXRvcnNbdF07cy5jbGFzc05hbWU9PT1rZS5DTEFTU05BTUU/a2UuUGFyc2UocyxlKTpHLlBhcnNlKHMsZSl9fSk7Y2xhc3MgTG97Y29uc3RydWN0b3IoZSl7dGhpcy5uYW1lPXEuTkFNRV9TSEFET1dHRU5FUkFUT1IsdGhpcy5zY2VuZT1lfXJlZ2lzdGVyKCl7dGhpcy5zY2VuZS5fZ2F0aGVyUmVuZGVyVGFyZ2V0c1N0YWdlLnJlZ2lzdGVyU3RlcChxLlNURVBfR0FUSEVSUkVOREVSVEFSR0VUU19TSEFET1dHRU5FUkFUT1IsdGhpcyx0aGlzLl9nYXRoZXJSZW5kZXJUYXJnZXRzKX1yZWJ1aWxkKCl7fXNlcmlhbGl6ZShlKXtlLnNoYWRvd0dlbmVyYXRvcnM9W107Y29uc3QgdD10aGlzLnNjZW5lLmxpZ2h0cztmb3IoY29uc3QgaSBvZiB0KXtjb25zdCBzPWkuZ2V0U2hhZG93R2VuZXJhdG9ycygpO2lmKHMpe2NvbnN0IHI9cy52YWx1ZXMoKTtmb3IobGV0IG49ci5uZXh0KCk7bi5kb25lIT09ITA7bj1yLm5leHQoKSl7Y29uc3QgYT1uLnZhbHVlO2Uuc2hhZG93R2VuZXJhdG9ycy5wdXNoKGEuc2VyaWFsaXplKCkpfX19fWFkZEZyb21Db250YWluZXIoZSl7fXJlbW92ZUZyb21Db250YWluZXIoZSx0KXt9ZGlzcG9zZSgpe31fZ2F0aGVyUmVuZGVyVGFyZ2V0cyhlKXtjb25zdCB0PXRoaXMuc2NlbmU7aWYodGhpcy5zY2VuZS5zaGFkb3dzRW5hYmxlZClmb3IobGV0IGk9MDtpPHQubGlnaHRzLmxlbmd0aDtpKyspe2NvbnN0IHM9dC5saWdodHNbaV0scj1zLmdldFNoYWRvd0dlbmVyYXRvcnMoKTtpZihzLmlzRW5hYmxlZCgpJiZzLnNoYWRvd0VuYWJsZWQmJnIpe2NvbnN0IG49ci52YWx1ZXMoKTtmb3IobGV0IGE9bi5uZXh0KCk7YS5kb25lIT09ITA7YT1uLm5leHQoKSl7Y29uc3QgaD1hLnZhbHVlLmdldFNoYWRvd01hcCgpO3QudGV4dHVyZXMuaW5kZXhPZihoKSE9PS0xJiZlLnB1c2goaCl9fX19fUcuX1NjZW5lQ29tcG9uZW50SW5pdGlhbGl6YXRpb249Yz0+e2xldCBlPWMuX2dldENvbXBvbmVudChxLk5BTUVfU0hBRE9XR0VORVJBVE9SKTtlfHwoZT1uZXcgTG8oYyksYy5fYWRkQ29tcG9uZW50KGUpKX07Y29uc3QgTm89e2VuYWJsZVNoYWRvd3M6ITB9O2Z1bmN0aW9uIEJyKGM9Tm8pe2NvbnN0e2VuYWJsZVNoYWRvd3M6ZSxzaGFkb3dUcmFuc3BhcmVuY3k6dCxpbnRlbnNpdHk6aSxzY2VuZTpzfT1jLHI9bmV3IEl0KCJEaXJlY3Rpb25hbExpZ2h0IixuZXcgcCgtLjMsLTEsLjQpLHMpO3IucG9zaXRpb249bmV3IHAoLTUwLDY1LC01MCksci5pbnRlbnNpdHk9LjY1Kmk7Y29uc3Qgbj1uZXcgbnMoIkhlbWlzcGhlcmljTGlnaHQiLG5ldyBwKDEsMSwwKSxzKTtyZXR1cm4gbi5pbnRlbnNpdHk9LjQqaSxlJiYoci5zaGFkb3dNaW5aPTEsci5zaGFkb3dNYXhaPTcwLHIuc2hhZG93R2VuZXJhdG9yPW5ldyBHKDIwNDgsciksci5zaGFkb3dHZW5lcmF0b3IudXNlQ2xvc2VFeHBvbmVudGlhbFNoYWRvd01hcD0hMCxyLnNoYWRvd0dlbmVyYXRvci5kYXJrbmVzcz10KSx7ZGlyZWN0aW9uYWw6cixoZW1pc3BoZXJpYzpufX1mdW5jdGlvbiBVcihjKXtsZXQgdD1bMCwxLDIsMCwyLDMsNCw1LDYsNCw2LDcsOCw5LDEwLDgsMTAsMTEsMTIsMTMsMTQsMTIsMTQsMTUsMTYsMTcsMTgsMTYsMTgsMTksMjAsMjEsMjIsMjAsMjIsMjNdO2NvbnN0IGk9WzAsMCwxLDAsMCwxLDAsMCwxLDAsMCwxLDAsMCwtMSwwLDAsLTEsMCwwLC0xLDAsMCwtMSwxLDAsMCwxLDAsMCwxLDAsMCwxLDAsMCwtMSwwLDAsLTEsMCwwLC0xLDAsMCwtMSwwLDAsMCwxLDAsMCwxLDAsMCwxLDAsMCwxLDAsMCwtMSwwLDAsLTEsMCwwLC0xLDAsMCwtMSwwXSxzPVtdO2xldCByPVtdO2NvbnN0IG49Yy53aWR0aHx8Yy5zaXplfHwxLGE9Yy5oZWlnaHR8fGMuc2l6ZXx8MSxvPWMuZGVwdGh8fGMuc2l6ZXx8MSxoPWMud3JhcHx8ITE7bGV0IGw9Yy50b3BCYXNlQXQ9PT12b2lkIDA/MTpjLnRvcEJhc2VBdCx1PWMuYm90dG9tQmFzZUF0PT09dm9pZCAwPzA6Yy5ib3R0b21CYXNlQXQ7bD0obCs0KSU0LHU9KHUrNCklNDtjb25zdCBkPVsyLDAsMywxXSxmPVsyLDAsMSwzXTtsZXQgXz1kW2xdLEU9Zlt1XSxtPVsxLC0xLDEsLTEsLTEsMSwtMSwxLDEsMSwxLDEsMSwxLC0xLC0xLDEsLTEsLTEsLTEsLTEsMSwtMSwtMSwxLDEsLTEsMSwtMSwtMSwxLC0xLDEsMSwxLDEsLTEsMSwxLC0xLC0xLDEsLTEsLTEsLTEsLTEsMSwtMSwtMSwxLDEsLTEsMSwtMSwxLDEsLTEsMSwxLDEsMSwtMSwxLDEsLTEsLTEsLTEsLTEsLTEsLTEsLTEsMV07aWYoaCl7dD1bMiwzLDAsMiwwLDEsNCw1LDYsNCw2LDcsOSwxMCwxMSw5LDExLDgsMTIsMTQsMTUsMTIsMTMsMTRdLG09Wy0xLDEsMSwxLDEsMSwxLC0xLDEsLTEsLTEsMSwxLDEsLTEsLTEsMSwtMSwtMSwtMSwtMSwxLC0xLC0xLDEsMSwxLDEsMSwtMSwxLC0xLC0xLDEsLTEsMSwtMSwxLC0xLC0xLDEsMSwtMSwtMSwxLC0xLC0xLC0xXTtsZXQgTT1bWzEsMSwxXSxbLTEsMSwxXSxbLTEsMSwtMV0sWzEsMSwtMV1dLEw9W1stMSwtMSwxXSxbMSwtMSwxXSxbMSwtMSwtMV0sWy0xLC0xLC0xXV07Y29uc3Qgaz1bMTcsMTgsMTksMTZdLHc9WzIyLDIzLDIwLDIxXTtmb3IoO18+MDspTS51bnNoaWZ0KE0ucG9wKCkpLGsudW5zaGlmdChrLnBvcCgpKSxfLS07Zm9yKDtFPjA7KUwudW5zaGlmdChMLnBvcCgpKSx3LnVuc2hpZnQody5wb3AoKSksRS0tO009TS5mbGF0KCksTD1MLmZsYXQoKSxtPW0uY29uY2F0KE0pLmNvbmNhdChMKSx0LnB1c2goa1swXSxrWzJdLGtbM10sa1swXSxrWzFdLGtbMl0pLHQucHVzaCh3WzBdLHdbMl0sd1szXSx3WzBdLHdbMV0sd1syXSl9Y29uc3Qgdj1bbi8yLGEvMixvLzJdO3I9bS5yZWR1Y2UoKE0sTCxrKT0+TS5jb25jYXQoTCp2W2slM10pLFtdKTtjb25zdCBTPWMuc2lkZU9yaWVudGF0aW9uPT09MD8wOmMuc2lkZU9yaWVudGF0aW9ufHxlZS5ERUZBVUxUU0lERSx5PWMuZmFjZVVWfHxuZXcgQXJyYXkoNiksQT1jLmZhY2VDb2xvcnMsQz1bXTtmb3IobGV0IE09MDtNPDY7TSsrKXlbTV09PT12b2lkIDAmJih5W01dPW5ldyBDZSgwLDAsMSwxKSksQSYmQVtNXT09PXZvaWQgMCYmKEFbTV09bmV3IG1lKDEsMSwxLDEpKTtmb3IobGV0IE09MDtNPDY7TSsrKWlmKHMucHVzaCh5W01dLnosZnQuVXNlT3BlbkdMT3JpZW50YXRpb25Gb3JVVj8xLXlbTV0udzp5W01dLncpLHMucHVzaCh5W01dLngsZnQuVXNlT3BlbkdMT3JpZW50YXRpb25Gb3JVVj8xLXlbTV0udzp5W01dLncpLHMucHVzaCh5W01dLngsZnQuVXNlT3BlbkdMT3JpZW50YXRpb25Gb3JVVj8xLXlbTV0ueTp5W01dLnkpLHMucHVzaCh5W01dLnosZnQuVXNlT3BlbkdMT3JpZW50YXRpb25Gb3JVVj8xLXlbTV0ueTp5W01dLnkpLEEpZm9yKGxldCBMPTA7TDw0O0wrKylDLnB1c2goQVtNXS5yLEFbTV0uZyxBW01dLmIsQVtNXS5hKTtlZS5fQ29tcHV0ZVNpZGVzKFMscix0LGkscyxjLmZyb250VVZzLGMuYmFja1VWcyk7Y29uc3QgYj1uZXcgZWU7aWYoYi5pbmRpY2VzPXQsYi5wb3NpdGlvbnM9cixiLm5vcm1hbHM9aSxiLnV2cz1zLEEpe2NvbnN0IE09Uz09PWVlLkRPVUJMRVNJREU/Qy5jb25jYXQoQyk6QztiLmNvbG9ycz1NfXJldHVybiBifWZ1bmN0aW9uIE1pKGMsZT17fSx0PW51bGwpe2NvbnN0IGk9bmV3IFcoYyx0KTtyZXR1cm4gZS5zaWRlT3JpZW50YXRpb249Vy5fR2V0RGVmYXVsdFNpZGVPcmllbnRhdGlvbihlLnNpZGVPcmllbnRhdGlvbiksaS5fb3JpZ2luYWxCdWlsZGVyU2lkZU9yaWVudGF0aW9uPWUuc2lkZU9yaWVudGF0aW9uLFVyKGUpLmFwcGx5VG9NZXNoKGksZS51cGRhdGFibGUpLGl9ZWUuQ3JlYXRlQm94PVVyLFcuQ3JlYXRlQm94PShjLGUsdD1udWxsLGkscyk9Pk1pKGMse3NpemU6ZSxzaWRlT3JpZW50YXRpb246cyx1cGRhdGFibGU6aX0sdCk7Y2xhc3Mga3J7Y29uc3RydWN0b3IoKXt0aGlzLnByZXZpb3VzV29ybGRNYXRyaWNlcz17fSx0aGlzLnByZXZpb3VzQm9uZXM9e319c3RhdGljIEFkZFVuaWZvcm1zKGUpe2UucHVzaCgicHJldmlvdXNXb3JsZCIsInByZXZpb3VzVmlld1Byb2plY3Rpb24iLCJtUHJldmlvdXNCb25lcyIpfXN0YXRpYyBBZGRTYW1wbGVycyhlKXt9YmluZEZvclN1Yk1lc2goZSx0LGkscyxyKXtpZih0LnByZVBhc3NSZW5kZXJlciYmdC5wcmVQYXNzUmVuZGVyZXIuZW5hYmxlZCYmdC5wcmVQYXNzUmVuZGVyZXIuY3VycmVudFJUaXNTY2VuZVJUJiZ0LnByZVBhc3NSZW5kZXJlci5nZXRJbmRleCgyKSE9PS0xKXt0aGlzLnByZXZpb3VzV29ybGRNYXRyaWNlc1tpLnVuaXF1ZUlkXXx8KHRoaXMucHJldmlvdXNXb3JsZE1hdHJpY2VzW2kudW5pcXVlSWRdPXMuY2xvbmUoKSksdGhpcy5wcmV2aW91c1ZpZXdQcm9qZWN0aW9ufHwodGhpcy5wcmV2aW91c1ZpZXdQcm9qZWN0aW9uPXQuZ2V0VHJhbnNmb3JtTWF0cml4KCkuY2xvbmUoKSx0aGlzLmN1cnJlbnRWaWV3UHJvamVjdGlvbj10LmdldFRyYW5zZm9ybU1hdHJpeCgpLmNsb25lKCkpO2NvbnN0IG49dC5nZXRFbmdpbmUoKTt0aGlzLmN1cnJlbnRWaWV3UHJvamVjdGlvbi51cGRhdGVGbGFnIT09dC5nZXRUcmFuc2Zvcm1NYXRyaXgoKS51cGRhdGVGbGFnPyh0aGlzLl9sYXN0VXBkYXRlRnJhbWVJZD1uLmZyYW1lSWQsdGhpcy5wcmV2aW91c1ZpZXdQcm9qZWN0aW9uLmNvcHlGcm9tKHRoaXMuY3VycmVudFZpZXdQcm9qZWN0aW9uKSx0aGlzLmN1cnJlbnRWaWV3UHJvamVjdGlvbi5jb3B5RnJvbSh0LmdldFRyYW5zZm9ybU1hdHJpeCgpKSk6dGhpcy5fbGFzdFVwZGF0ZUZyYW1lSWQhPT1uLmZyYW1lSWQmJih0aGlzLl9sYXN0VXBkYXRlRnJhbWVJZD1uLmZyYW1lSWQsdGhpcy5wcmV2aW91c1ZpZXdQcm9qZWN0aW9uLmNvcHlGcm9tKHRoaXMuY3VycmVudFZpZXdQcm9qZWN0aW9uKSksZS5zZXRNYXRyaXgoInByZXZpb3VzV29ybGQiLHRoaXMucHJldmlvdXNXb3JsZE1hdHJpY2VzW2kudW5pcXVlSWRdKSxlLnNldE1hdHJpeCgicHJldmlvdXNWaWV3UHJvamVjdGlvbiIsdGhpcy5wcmV2aW91c1ZpZXdQcm9qZWN0aW9uKSx0aGlzLnByZXZpb3VzV29ybGRNYXRyaWNlc1tpLnVuaXF1ZUlkXT1zLmNsb25lKCl9fX1jbGFzcyBWciBleHRlbmRzIFB7Y29uc3RydWN0b3IoZSx0LGk9ITApe3N1cGVyKGUsdCksdGhpcy5fbm9ybWFsTWF0cml4PW5ldyB4LHRoaXMuX3N0b3JlRWZmZWN0T25TdWJNZXNoZXM9aX1nZXRFZmZlY3QoKXtyZXR1cm4gdGhpcy5fc3RvcmVFZmZlY3RPblN1Yk1lc2hlcz90aGlzLl9hY3RpdmVFZmZlY3Q6c3VwZXIuZ2V0RWZmZWN0KCl9aXNSZWFkeShlLHQpe3JldHVybiBlPyF0aGlzLl9zdG9yZUVmZmVjdE9uU3ViTWVzaGVzfHwhZS5zdWJNZXNoZXN8fGUuc3ViTWVzaGVzLmxlbmd0aD09PTA/ITA6dGhpcy5pc1JlYWR5Rm9yU3ViTWVzaChlLGUuc3ViTWVzaGVzWzBdLHQpOiExfV9pc1JlYWR5Rm9yU3ViTWVzaChlKXtjb25zdCB0PWUubWF0ZXJpYWxEZWZpbmVzO3JldHVybiEhKCF0aGlzLmNoZWNrUmVhZHlPbkV2ZXJ5Q2FsbCYmZS5lZmZlY3QmJnQmJnQuX3JlbmRlcklkPT09dGhpcy5nZXRTY2VuZSgpLmdldFJlbmRlcklkKCkpfWJpbmRPbmx5V29ybGRNYXRyaXgoZSl7dGhpcy5fYWN0aXZlRWZmZWN0LnNldE1hdHJpeCgid29ybGQiLGUpfWJpbmRPbmx5Tm9ybWFsTWF0cml4KGUpe3RoaXMuX2FjdGl2ZUVmZmVjdC5zZXRNYXRyaXgoIm5vcm1hbE1hdHJpeCIsZSl9YmluZChlLHQpe3QmJnRoaXMuYmluZEZvclN1Yk1lc2goZSx0LHQuc3ViTWVzaGVzWzBdKX1fYWZ0ZXJCaW5kKGUsdD1udWxsKXtzdXBlci5fYWZ0ZXJCaW5kKGUsdCksdGhpcy5nZXRTY2VuZSgpLl9jYWNoZWRFZmZlY3Q9dCx0JiYodC5fZm9yY2VSZWJpbmRPbk5leHRDYWxsPSExKX1fbXVzdFJlYmluZChlLHQsaT0xKXtyZXR1cm4gZS5pc0NhY2hlZE1hdGVyaWFsSW52YWxpZCh0aGlzLHQsaSl9fWNsYXNzIHVle3N0YXRpYyBnZXQgRGlmZnVzZVRleHR1cmVFbmFibGVkKCl7cmV0dXJuIHRoaXMuX0RpZmZ1c2VUZXh0dXJlRW5hYmxlZH1zdGF0aWMgc2V0IERpZmZ1c2VUZXh0dXJlRW5hYmxlZChlKXt0aGlzLl9EaWZmdXNlVGV4dHVyZUVuYWJsZWQhPT1lJiYodGhpcy5fRGlmZnVzZVRleHR1cmVFbmFibGVkPWUsSS5NYXJrQWxsTWF0ZXJpYWxzQXNEaXJ0eSgxKSl9c3RhdGljIGdldCBEZXRhaWxUZXh0dXJlRW5hYmxlZCgpe3JldHVybiB0aGlzLl9EZXRhaWxUZXh0dXJlRW5hYmxlZH1zdGF0aWMgc2V0IERldGFpbFRleHR1cmVFbmFibGVkKGUpe3RoaXMuX0RldGFpbFRleHR1cmVFbmFibGVkIT09ZSYmKHRoaXMuX0RldGFpbFRleHR1cmVFbmFibGVkPWUsSS5NYXJrQWxsTWF0ZXJpYWxzQXNEaXJ0eSgxKSl9c3RhdGljIGdldCBBbWJpZW50VGV4dHVyZUVuYWJsZWQoKXtyZXR1cm4gdGhpcy5fQW1iaWVudFRleHR1cmVFbmFibGVkfXN0YXRpYyBzZXQgQW1iaWVudFRleHR1cmVFbmFibGVkKGUpe3RoaXMuX0FtYmllbnRUZXh0dXJlRW5hYmxlZCE9PWUmJih0aGlzLl9BbWJpZW50VGV4dHVyZUVuYWJsZWQ9ZSxJLk1hcmtBbGxNYXRlcmlhbHNBc0RpcnR5KDEpKX1zdGF0aWMgZ2V0IE9wYWNpdHlUZXh0dXJlRW5hYmxlZCgpe3JldHVybiB0aGlzLl9PcGFjaXR5VGV4dHVyZUVuYWJsZWR9c3RhdGljIHNldCBPcGFjaXR5VGV4dHVyZUVuYWJsZWQoZSl7dGhpcy5fT3BhY2l0eVRleHR1cmVFbmFibGVkIT09ZSYmKHRoaXMuX09wYWNpdHlUZXh0dXJlRW5hYmxlZD1lLEkuTWFya0FsbE1hdGVyaWFsc0FzRGlydHkoMSkpfXN0YXRpYyBnZXQgUmVmbGVjdGlvblRleHR1cmVFbmFibGVkKCl7cmV0dXJuIHRoaXMuX1JlZmxlY3Rpb25UZXh0dXJlRW5hYmxlZH1zdGF0aWMgc2V0IFJlZmxlY3Rpb25UZXh0dXJlRW5hYmxlZChlKXt0aGlzLl9SZWZsZWN0aW9uVGV4dHVyZUVuYWJsZWQhPT1lJiYodGhpcy5fUmVmbGVjdGlvblRleHR1cmVFbmFibGVkPWUsSS5NYXJrQWxsTWF0ZXJpYWxzQXNEaXJ0eSgxKSl9c3RhdGljIGdldCBFbWlzc2l2ZVRleHR1cmVFbmFibGVkKCl7cmV0dXJuIHRoaXMuX0VtaXNzaXZlVGV4dHVyZUVuYWJsZWR9c3RhdGljIHNldCBFbWlzc2l2ZVRleHR1cmVFbmFibGVkKGUpe3RoaXMuX0VtaXNzaXZlVGV4dHVyZUVuYWJsZWQhPT1lJiYodGhpcy5fRW1pc3NpdmVUZXh0dXJlRW5hYmxlZD1lLEkuTWFya0FsbE1hdGVyaWFsc0FzRGlydHkoMSkpfXN0YXRpYyBnZXQgU3BlY3VsYXJUZXh0dXJlRW5hYmxlZCgpe3JldHVybiB0aGlzLl9TcGVjdWxhclRleHR1cmVFbmFibGVkfXN0YXRpYyBzZXQgU3BlY3VsYXJUZXh0dXJlRW5hYmxlZChlKXt0aGlzLl9TcGVjdWxhclRleHR1cmVFbmFibGVkIT09ZSYmKHRoaXMuX1NwZWN1bGFyVGV4dHVyZUVuYWJsZWQ9ZSxJLk1hcmtBbGxNYXRlcmlhbHNBc0RpcnR5KDEpKX1zdGF0aWMgZ2V0IEJ1bXBUZXh0dXJlRW5hYmxlZCgpe3JldHVybiB0aGlzLl9CdW1wVGV4dHVyZUVuYWJsZWR9c3RhdGljIHNldCBCdW1wVGV4dHVyZUVuYWJsZWQoZSl7dGhpcy5fQnVtcFRleHR1cmVFbmFibGVkIT09ZSYmKHRoaXMuX0J1bXBUZXh0dXJlRW5hYmxlZD1lLEkuTWFya0FsbE1hdGVyaWFsc0FzRGlydHkoMSkpfXN0YXRpYyBnZXQgTGlnaHRtYXBUZXh0dXJlRW5hYmxlZCgpe3JldHVybiB0aGlzLl9MaWdodG1hcFRleHR1cmVFbmFibGVkfXN0YXRpYyBzZXQgTGlnaHRtYXBUZXh0dXJlRW5hYmxlZChlKXt0aGlzLl9MaWdodG1hcFRleHR1cmVFbmFibGVkIT09ZSYmKHRoaXMuX0xpZ2h0bWFwVGV4dHVyZUVuYWJsZWQ9ZSxJLk1hcmtBbGxNYXRlcmlhbHNBc0RpcnR5KDEpKX1zdGF0aWMgZ2V0IFJlZnJhY3Rpb25UZXh0dXJlRW5hYmxlZCgpe3JldHVybiB0aGlzLl9SZWZyYWN0aW9uVGV4dHVyZUVuYWJsZWR9c3RhdGljIHNldCBSZWZyYWN0aW9uVGV4dHVyZUVuYWJsZWQoZSl7dGhpcy5fUmVmcmFjdGlvblRleHR1cmVFbmFibGVkIT09ZSYmKHRoaXMuX1JlZnJhY3Rpb25UZXh0dXJlRW5hYmxlZD1lLEkuTWFya0FsbE1hdGVyaWFsc0FzRGlydHkoMSkpfXN0YXRpYyBnZXQgQ29sb3JHcmFkaW5nVGV4dHVyZUVuYWJsZWQoKXtyZXR1cm4gdGhpcy5fQ29sb3JHcmFkaW5nVGV4dHVyZUVuYWJsZWR9c3RhdGljIHNldCBDb2xvckdyYWRpbmdUZXh0dXJlRW5hYmxlZChlKXt0aGlzLl9Db2xvckdyYWRpbmdUZXh0dXJlRW5hYmxlZCE9PWUmJih0aGlzLl9Db2xvckdyYWRpbmdUZXh0dXJlRW5hYmxlZD1lLEkuTWFya0FsbE1hdGVyaWFsc0FzRGlydHkoMSkpfXN0YXRpYyBnZXQgRnJlc25lbEVuYWJsZWQoKXtyZXR1cm4gdGhpcy5fRnJlc25lbEVuYWJsZWR9c3RhdGljIHNldCBGcmVzbmVsRW5hYmxlZChlKXt0aGlzLl9GcmVzbmVsRW5hYmxlZCE9PWUmJih0aGlzLl9GcmVzbmVsRW5hYmxlZD1lLEkuTWFya0FsbE1hdGVyaWFsc0FzRGlydHkoNCkpfXN0YXRpYyBnZXQgQ2xlYXJDb2F0VGV4dHVyZUVuYWJsZWQoKXtyZXR1cm4gdGhpcy5fQ2xlYXJDb2F0VGV4dHVyZUVuYWJsZWR9c3RhdGljIHNldCBDbGVhckNvYXRUZXh0dXJlRW5hYmxlZChlKXt0aGlzLl9DbGVhckNvYXRUZXh0dXJlRW5hYmxlZCE9PWUmJih0aGlzLl9DbGVhckNvYXRUZXh0dXJlRW5hYmxlZD1lLEkuTWFya0FsbE1hdGVyaWFsc0FzRGlydHkoMSkpfXN0YXRpYyBnZXQgQ2xlYXJDb2F0QnVtcFRleHR1cmVFbmFibGVkKCl7cmV0dXJuIHRoaXMuX0NsZWFyQ29hdEJ1bXBUZXh0dXJlRW5hYmxlZH1zdGF0aWMgc2V0IENsZWFyQ29hdEJ1bXBUZXh0dXJlRW5hYmxlZChlKXt0aGlzLl9DbGVhckNvYXRCdW1wVGV4dHVyZUVuYWJsZWQhPT1lJiYodGhpcy5fQ2xlYXJDb2F0QnVtcFRleHR1cmVFbmFibGVkPWUsSS5NYXJrQWxsTWF0ZXJpYWxzQXNEaXJ0eSgxKSl9c3RhdGljIGdldCBDbGVhckNvYXRUaW50VGV4dHVyZUVuYWJsZWQoKXtyZXR1cm4gdGhpcy5fQ2xlYXJDb2F0VGludFRleHR1cmVFbmFibGVkfXN0YXRpYyBzZXQgQ2xlYXJDb2F0VGludFRleHR1cmVFbmFibGVkKGUpe3RoaXMuX0NsZWFyQ29hdFRpbnRUZXh0dXJlRW5hYmxlZCE9PWUmJih0aGlzLl9DbGVhckNvYXRUaW50VGV4dHVyZUVuYWJsZWQ9ZSxJLk1hcmtBbGxNYXRlcmlhbHNBc0RpcnR5KDEpKX1zdGF0aWMgZ2V0IFNoZWVuVGV4dHVyZUVuYWJsZWQoKXtyZXR1cm4gdGhpcy5fU2hlZW5UZXh0dXJlRW5hYmxlZH1zdGF0aWMgc2V0IFNoZWVuVGV4dHVyZUVuYWJsZWQoZSl7dGhpcy5fU2hlZW5UZXh0dXJlRW5hYmxlZCE9PWUmJih0aGlzLl9TaGVlblRleHR1cmVFbmFibGVkPWUsSS5NYXJrQWxsTWF0ZXJpYWxzQXNEaXJ0eSgxKSl9c3RhdGljIGdldCBBbmlzb3Ryb3BpY1RleHR1cmVFbmFibGVkKCl7cmV0dXJuIHRoaXMuX0FuaXNvdHJvcGljVGV4dHVyZUVuYWJsZWR9c3RhdGljIHNldCBBbmlzb3Ryb3BpY1RleHR1cmVFbmFibGVkKGUpe3RoaXMuX0FuaXNvdHJvcGljVGV4dHVyZUVuYWJsZWQhPT1lJiYodGhpcy5fQW5pc290cm9waWNUZXh0dXJlRW5hYmxlZD1lLEkuTWFya0FsbE1hdGVyaWFsc0FzRGlydHkoMSkpfXN0YXRpYyBnZXQgVGhpY2tuZXNzVGV4dHVyZUVuYWJsZWQoKXtyZXR1cm4gdGhpcy5fVGhpY2tuZXNzVGV4dHVyZUVuYWJsZWR9c3RhdGljIHNldCBUaGlja25lc3NUZXh0dXJlRW5hYmxlZChlKXt0aGlzLl9UaGlja25lc3NUZXh0dXJlRW5hYmxlZCE9PWUmJih0aGlzLl9UaGlja25lc3NUZXh0dXJlRW5hYmxlZD1lLEkuTWFya0FsbE1hdGVyaWFsc0FzRGlydHkoMSkpfXN0YXRpYyBnZXQgUmVmcmFjdGlvbkludGVuc2l0eVRleHR1cmVFbmFibGVkKCl7cmV0dXJuIHRoaXMuX1RoaWNrbmVzc1RleHR1cmVFbmFibGVkfXN0YXRpYyBzZXQgUmVmcmFjdGlvbkludGVuc2l0eVRleHR1cmVFbmFibGVkKGUpe3RoaXMuX1JlZnJhY3Rpb25JbnRlbnNpdHlUZXh0dXJlRW5hYmxlZCE9PWUmJih0aGlzLl9SZWZyYWN0aW9uSW50ZW5zaXR5VGV4dHVyZUVuYWJsZWQ9ZSxJLk1hcmtBbGxNYXRlcmlhbHNBc0RpcnR5KDEpKX1zdGF0aWMgZ2V0IFRyYW5zbHVjZW5jeUludGVuc2l0eVRleHR1cmVFbmFibGVkKCl7cmV0dXJuIHRoaXMuX1RoaWNrbmVzc1RleHR1cmVFbmFibGVkfXN0YXRpYyBzZXQgVHJhbnNsdWNlbmN5SW50ZW5zaXR5VGV4dHVyZUVuYWJsZWQoZSl7dGhpcy5fVHJhbnNsdWNlbmN5SW50ZW5zaXR5VGV4dHVyZUVuYWJsZWQhPT1lJiYodGhpcy5fVHJhbnNsdWNlbmN5SW50ZW5zaXR5VGV4dHVyZUVuYWJsZWQ9ZSxJLk1hcmtBbGxNYXRlcmlhbHNBc0RpcnR5KDEpKX1zdGF0aWMgZ2V0IElyaWRlc2NlbmNlVGV4dHVyZUVuYWJsZWQoKXtyZXR1cm4gdGhpcy5fSXJpZGVzY2VuY2VUZXh0dXJlRW5hYmxlZH1zdGF0aWMgc2V0IElyaWRlc2NlbmNlVGV4dHVyZUVuYWJsZWQoZSl7dGhpcy5fSXJpZGVzY2VuY2VUZXh0dXJlRW5hYmxlZCE9PWUmJih0aGlzLl9JcmlkZXNjZW5jZVRleHR1cmVFbmFibGVkPWUsSS5NYXJrQWxsTWF0ZXJpYWxzQXNEaXJ0eSgxKSl9fXVlLl9EaWZmdXNlVGV4dHVyZUVuYWJsZWQ9ITAsdWUuX0RldGFpbFRleHR1cmVFbmFibGVkPSEwLHVlLl9BbWJpZW50VGV4dHVyZUVuYWJsZWQ9ITAsdWUuX09wYWNpdHlUZXh0dXJlRW5hYmxlZD0hMCx1ZS5fUmVmbGVjdGlvblRleHR1cmVFbmFibGVkPSEwLHVlLl9FbWlzc2l2ZVRleHR1cmVFbmFibGVkPSEwLHVlLl9TcGVjdWxhclRleHR1cmVFbmFibGVkPSEwLHVlLl9CdW1wVGV4dHVyZUVuYWJsZWQ9ITAsdWUuX0xpZ2h0bWFwVGV4dHVyZUVuYWJsZWQ9ITAsdWUuX1JlZnJhY3Rpb25UZXh0dXJlRW5hYmxlZD0hMCx1ZS5fQ29sb3JHcmFkaW5nVGV4dHVyZUVuYWJsZWQ9ITAsdWUuX0ZyZXNuZWxFbmFibGVkPSEwLHVlLl9DbGVhckNvYXRUZXh0dXJlRW5hYmxlZD0hMCx1ZS5fQ2xlYXJDb2F0QnVtcFRleHR1cmVFbmFibGVkPSEwLHVlLl9DbGVhckNvYXRUaW50VGV4dHVyZUVuYWJsZWQ9ITAsdWUuX1NoZWVuVGV4dHVyZUVuYWJsZWQ9ITAsdWUuX0FuaXNvdHJvcGljVGV4dHVyZUVuYWJsZWQ9ITAsdWUuX1RoaWNrbmVzc1RleHR1cmVFbmFibGVkPSEwLHVlLl9SZWZyYWN0aW9uSW50ZW5zaXR5VGV4dHVyZUVuYWJsZWQ9ITAsdWUuX1RyYW5zbHVjZW5jeUludGVuc2l0eVRleHR1cmVFbmFibGVkPSEwLHVlLl9JcmlkZXNjZW5jZVRleHR1cmVFbmFibGVkPSEwO2NvbnN0IEJvPSJkZWZhdWx0RnJhZ21lbnREZWNsYXJhdGlvbiIsVW89YHVuaWZvcm0gdmVjNCB2RXllUG9zaXRpb247CnVuaWZvcm0gdmVjNCB2RGlmZnVzZUNvbG9yOwojaWZkZWYgU1BFQ1VMQVJURVJNCnVuaWZvcm0gdmVjNCB2U3BlY3VsYXJDb2xvcjsKI2VuZGlmCnVuaWZvcm0gdmVjMyB2RW1pc3NpdmVDb2xvcjsKdW5pZm9ybSB2ZWMzIHZBbWJpZW50Q29sb3I7CnVuaWZvcm0gZmxvYXQgdmlzaWJpbGl0eTsKI2lmZGVmIERJRkZVU0UKdW5pZm9ybSB2ZWMyIHZEaWZmdXNlSW5mb3M7CiNlbmRpZgojaWZkZWYgQU1CSUVOVAp1bmlmb3JtIHZlYzIgdkFtYmllbnRJbmZvczsKI2VuZGlmCiNpZmRlZiBPUEFDSVRZIAp1bmlmb3JtIHZlYzIgdk9wYWNpdHlJbmZvczsKI2VuZGlmCiNpZmRlZiBFTUlTU0lWRQp1bmlmb3JtIHZlYzIgdkVtaXNzaXZlSW5mb3M7CiNlbmRpZgojaWZkZWYgTElHSFRNQVAKdW5pZm9ybSB2ZWMyIHZMaWdodG1hcEluZm9zOwojZW5kaWYKI2lmZGVmIEJVTVAKdW5pZm9ybSB2ZWMzIHZCdW1wSW5mb3M7CnVuaWZvcm0gdmVjMiB2VGFuZ2VudFNwYWNlUGFyYW1zOwojZW5kaWYKI2lmZGVmIEFMUEhBVEVTVAp1bmlmb3JtIGZsb2F0IGFscGhhQ3V0T2ZmOwojZW5kaWYKI2lmIGRlZmluZWQoUkVGTEVDVElPTk1BUF9TUEhFUklDQUwpIHx8IGRlZmluZWQoUkVGTEVDVElPTk1BUF9QUk9KRUNUSU9OKSB8fCBkZWZpbmVkKFJFRlJBQ1RJT04pIHx8IGRlZmluZWQoUFJFUEFTUykKdW5pZm9ybSBtYXQ0IHZpZXc7CiNlbmRpZgojaWZkZWYgUkVGUkFDVElPTgp1bmlmb3JtIHZlYzQgdlJlZnJhY3Rpb25JbmZvczsKI2lmbmRlZiBSRUZSQUNUSU9OTUFQXzNECnVuaWZvcm0gbWF0NCByZWZyYWN0aW9uTWF0cml4OwojZW5kaWYKI2lmZGVmIFJFRlJBQ1RJT05GUkVTTkVMCnVuaWZvcm0gdmVjNCByZWZyYWN0aW9uTGVmdENvbG9yOwp1bmlmb3JtIHZlYzQgcmVmcmFjdGlvblJpZ2h0Q29sb3I7CiNlbmRpZgojaWYgZGVmaW5lZChVU0VfTE9DQUxfUkVGUkFDVElPTk1BUF9DVUJJQykgJiYgZGVmaW5lZChSRUZSQUNUSU9OTUFQXzNEKQp1bmlmb3JtIHZlYzMgdlJlZnJhY3Rpb25Qb3NpdGlvbjsKdW5pZm9ybSB2ZWMzIHZSZWZyYWN0aW9uU2l6ZTsgCiNlbmRpZgojZW5kaWYKI2lmIGRlZmluZWQoU1BFQ1VMQVIpICYmIGRlZmluZWQoU1BFQ1VMQVJURVJNKQp1bmlmb3JtIHZlYzIgdlNwZWN1bGFySW5mb3M7CiNlbmRpZgojaWZkZWYgRElGRlVTRUZSRVNORUwKdW5pZm9ybSB2ZWM0IGRpZmZ1c2VMZWZ0Q29sb3I7CnVuaWZvcm0gdmVjNCBkaWZmdXNlUmlnaHRDb2xvcjsKI2VuZGlmCiNpZmRlZiBPUEFDSVRZRlJFU05FTAp1bmlmb3JtIHZlYzQgb3BhY2l0eVBhcnRzOwojZW5kaWYKI2lmZGVmIEVNSVNTSVZFRlJFU05FTAp1bmlmb3JtIHZlYzQgZW1pc3NpdmVMZWZ0Q29sb3I7CnVuaWZvcm0gdmVjNCBlbWlzc2l2ZVJpZ2h0Q29sb3I7CiNlbmRpZgojaWZkZWYgUkVGTEVDVElPTgp1bmlmb3JtIHZlYzIgdlJlZmxlY3Rpb25JbmZvczsKI2lmIGRlZmluZWQoUkVGTEVDVElPTk1BUF9QTEFOQVIpIHx8IGRlZmluZWQoUkVGTEVDVElPTk1BUF9DVUJJQykgfHwgZGVmaW5lZChSRUZMRUNUSU9OTUFQX1BST0pFQ1RJT04pIHx8IGRlZmluZWQoUkVGTEVDVElPTk1BUF9FUVVJUkVDVEFOR1VMQVIpIHx8IGRlZmluZWQoUkVGTEVDVElPTk1BUF9TUEhFUklDQUwpIHx8IGRlZmluZWQoUkVGTEVDVElPTk1BUF9TS1lCT1gpCnVuaWZvcm0gbWF0NCByZWZsZWN0aW9uTWF0cml4OwojZW5kaWYKI2lmbmRlZiBSRUZMRUNUSU9OTUFQX1NLWUJPWAojaWYgZGVmaW5lZChVU0VfTE9DQUxfUkVGTEVDVElPTk1BUF9DVUJJQykgJiYgZGVmaW5lZChSRUZMRUNUSU9OTUFQX0NVQklDKQp1bmlmb3JtIHZlYzMgdlJlZmxlY3Rpb25Qb3NpdGlvbjsKdW5pZm9ybSB2ZWMzIHZSZWZsZWN0aW9uU2l6ZTsgCiNlbmRpZgojZW5kaWYKI2lmZGVmIFJFRkxFQ1RJT05GUkVTTkVMCnVuaWZvcm0gdmVjNCByZWZsZWN0aW9uTGVmdENvbG9yOwp1bmlmb3JtIHZlYzQgcmVmbGVjdGlvblJpZ2h0Q29sb3I7CiNlbmRpZgojZW5kaWYKI2lmZGVmIERFVEFJTAp1bmlmb3JtIHZlYzQgdkRldGFpbEluZm9zOwojZW5kaWYKI2RlZmluZSBBRERJVElPTkFMX0ZSQUdNRU5UX0RFQ0xBUkFUSU9OCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtCb109VW87Y29uc3Qga289ImRlZmF1bHRVYm9EZWNsYXJhdGlvbiIsVm89YGxheW91dChzdGQxNDAsY29sdW1uX21ham9yKSB1bmlmb3JtOwp1bmlmb3JtIE1hdGVyaWFsCnsKdmVjNCBkaWZmdXNlTGVmdENvbG9yOwp2ZWM0IGRpZmZ1c2VSaWdodENvbG9yOwp2ZWM0IG9wYWNpdHlQYXJ0czsKdmVjNCByZWZsZWN0aW9uTGVmdENvbG9yOwp2ZWM0IHJlZmxlY3Rpb25SaWdodENvbG9yOwp2ZWM0IHJlZnJhY3Rpb25MZWZ0Q29sb3I7CnZlYzQgcmVmcmFjdGlvblJpZ2h0Q29sb3I7CnZlYzQgZW1pc3NpdmVMZWZ0Q29sb3I7CnZlYzQgZW1pc3NpdmVSaWdodENvbG9yOwp2ZWMyIHZEaWZmdXNlSW5mb3M7CnZlYzIgdkFtYmllbnRJbmZvczsKdmVjMiB2T3BhY2l0eUluZm9zOwp2ZWMyIHZSZWZsZWN0aW9uSW5mb3M7CnZlYzMgdlJlZmxlY3Rpb25Qb3NpdGlvbjsKdmVjMyB2UmVmbGVjdGlvblNpemU7CnZlYzIgdkVtaXNzaXZlSW5mb3M7CnZlYzIgdkxpZ2h0bWFwSW5mb3M7CnZlYzIgdlNwZWN1bGFySW5mb3M7CnZlYzMgdkJ1bXBJbmZvczsKbWF0NCBkaWZmdXNlTWF0cml4OwptYXQ0IGFtYmllbnRNYXRyaXg7Cm1hdDQgb3BhY2l0eU1hdHJpeDsKbWF0NCByZWZsZWN0aW9uTWF0cml4OwptYXQ0IGVtaXNzaXZlTWF0cml4OwptYXQ0IGxpZ2h0bWFwTWF0cml4OwptYXQ0IHNwZWN1bGFyTWF0cml4OwptYXQ0IGJ1bXBNYXRyaXg7CnZlYzIgdlRhbmdlbnRTcGFjZVBhcmFtczsKZmxvYXQgcG9pbnRTaXplOwpmbG9hdCBhbHBoYUN1dE9mZjsKbWF0NCByZWZyYWN0aW9uTWF0cml4Owp2ZWM0IHZSZWZyYWN0aW9uSW5mb3M7CnZlYzMgdlJlZnJhY3Rpb25Qb3NpdGlvbjsKdmVjMyB2UmVmcmFjdGlvblNpemU7CnZlYzQgdlNwZWN1bGFyQ29sb3I7CnZlYzMgdkVtaXNzaXZlQ29sb3I7CnZlYzQgdkRpZmZ1c2VDb2xvcjsKdmVjMyB2QW1iaWVudENvbG9yOwojZGVmaW5lIEFERElUSU9OQUxfVUJPX0RFQ0xBUkFUSU9OCn07CiNpbmNsdWRlPHNjZW5lVWJvRGVjbGFyYXRpb24+CiNpbmNsdWRlPG1lc2hVYm9EZWNsYXJhdGlvbj4KYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW2tvXT1Wbztjb25zdCBXbz0icHJlUGFzc0RlY2xhcmF0aW9uIix6bz1gI2lmZGVmIFBSRVBBU1MKI2V4dGVuc2lvbiBHTF9FWFRfZHJhd19idWZmZXJzIDogcmVxdWlyZQpsYXlvdXQobG9jYXRpb249MCkgb3V0IGhpZ2hwIHZlYzQgZ2xGcmFnRGF0YVt7WH1dO2hpZ2hwIHZlYzQgZ2xfRnJhZ0NvbG9yOwojaWZkZWYgUFJFUEFTU19ERVBUSAp2YXJ5aW5nIGhpZ2hwIHZlYzMgdlZpZXdQb3M7CiNlbmRpZgojaWZkZWYgUFJFUEFTU19WRUxPQ0lUWQp2YXJ5aW5nIGhpZ2hwIHZlYzQgdkN1cnJlbnRQb3NpdGlvbjt2YXJ5aW5nIGhpZ2hwIHZlYzQgdlByZXZpb3VzUG9zaXRpb247CiNlbmRpZgojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW1dvXT16bztjb25zdCBHbz0ib2l0RGVjbGFyYXRpb24iLFhvPWAjaWZkZWYgT1JERVJfSU5ERVBFTkRFTlRfVFJBTlNQQVJFTkNZCiNleHRlbnNpb24gR0xfRVhUX2RyYXdfYnVmZmVycyA6IHJlcXVpcmUKbGF5b3V0KGxvY2F0aW9uPTApIG91dCB2ZWMyIGRlcHRoOyAKbGF5b3V0KGxvY2F0aW9uPTEpIG91dCB2ZWM0IGZyb250Q29sb3I7CmxheW91dChsb2NhdGlvbj0yKSBvdXQgdmVjNCBiYWNrQ29sb3I7CiNkZWZpbmUgTUFYX0RFUFRIIDk5OTk5LjAKaGlnaHAgdmVjNCBnbF9GcmFnQ29sb3I7CnVuaWZvcm0gc2FtcGxlcjJEIG9pdERlcHRoU2FtcGxlcjsKdW5pZm9ybSBzYW1wbGVyMkQgb2l0RnJvbnRDb2xvclNhbXBsZXI7CiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbR29dPVhvO2NvbnN0IEhvPSJtYWluVVZWYXJ5aW5nRGVjbGFyYXRpb24iLEtvPWAjaWZkZWYgTUFJTlVWe1h9CnZhcnlpbmcgdmVjMiB2TWFpblVWe1h9OwojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW0hvXT1Lbztjb25zdCBZbz0ibGlnaHRGcmFnbWVudERlY2xhcmF0aW9uIixabz1gI2lmZGVmIExJR0hUe1h9CnVuaWZvcm0gdmVjNCB2TGlnaHREYXRhe1h9Owp1bmlmb3JtIHZlYzQgdkxpZ2h0RGlmZnVzZXtYfTsKI2lmZGVmIFNQRUNVTEFSVEVSTQp1bmlmb3JtIHZlYzQgdkxpZ2h0U3BlY3VsYXJ7WH07CiNlbHNlCnZlYzQgdkxpZ2h0U3BlY3VsYXJ7WH09dmVjNCgwLik7CiNlbmRpZgojaWZkZWYgU0hBRE9Xe1h9CiNpZmRlZiBTSEFET1dDU017WH0KdW5pZm9ybSBtYXQ0IGxpZ2h0TWF0cml4e1h9W1NIQURPV0NTTU5VTV9DQVNDQURFU3tYfV07CnVuaWZvcm0gZmxvYXQgdmlld0ZydXN0dW1ae1h9W1NIQURPV0NTTU5VTV9DQVNDQURFU3tYfV07CnVuaWZvcm0gZmxvYXQgZnJ1c3R1bUxlbmd0aHN7WH1bU0hBRE9XQ1NNTlVNX0NBU0NBREVTe1h9XTsKdW5pZm9ybSBmbG9hdCBjYXNjYWRlQmxlbmRGYWN0b3J7WH07CnZhcnlpbmcgdmVjNCB2UG9zaXRpb25Gcm9tTGlnaHR7WH1bU0hBRE9XQ1NNTlVNX0NBU0NBREVTe1h9XTsKdmFyeWluZyBmbG9hdCB2RGVwdGhNZXRyaWN7WH1bU0hBRE9XQ1NNTlVNX0NBU0NBREVTe1h9XTsKdmFyeWluZyB2ZWM0IHZQb3NpdGlvbkZyb21DYW1lcmF7WH07CiNpZiBkZWZpbmVkKFNIQURPV1BDU1N7WH0pCnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEQXJyYXlTaGFkb3cgc2hhZG93U2FtcGxlcntYfTsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkRBcnJheSBkZXB0aFNhbXBsZXJ7WH07CnVuaWZvcm0gdmVjMiBsaWdodFNpemVVVkNvcnJlY3Rpb257WH1bU0hBRE9XQ1NNTlVNX0NBU0NBREVTe1h9XTsKdW5pZm9ybSBmbG9hdCBkZXB0aENvcnJlY3Rpb257WH1bU0hBRE9XQ1NNTlVNX0NBU0NBREVTe1h9XTsKdW5pZm9ybSBmbG9hdCBwZW51bWJyYURhcmtuZXNze1h9OwojZWxpZiBkZWZpbmVkKFNIQURPV1BDRntYfSkKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkRBcnJheVNoYWRvdyBzaGFkb3dTYW1wbGVye1h9OwojZWxzZQp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyREFycmF5IHNoYWRvd1NhbXBsZXJ7WH07CiNlbmRpZgojaWZkZWYgU0hBRE9XQ1NNREVCVUd7WH0KY29uc3QgdmVjMyB2Q2FzY2FkZUNvbG9yc011bHRpcGxpZXJ7WH1bOF09dmVjM1s4XQooCnZlYzMgKCAxLjUsMC4wLDAuMCApLAp2ZWMzICggMC4wLDEuNSwwLjAgKSwKdmVjMyAoIDAuMCwwLjAsNS41ICksCnZlYzMgKCAxLjUsMC4wLDUuNSApLAp2ZWMzICggMS41LDEuNSwwLjAgKSwKdmVjMyAoIDEuMCwxLjAsMS4wICksCnZlYzMgKCAwLjAsMS4wLDUuNSApLAp2ZWMzICggMC41LDMuNSwwLjc1ICkKKTsKdmVjMyBzaGFkb3dEZWJ1Z3tYfTsKI2VuZGlmCiNpZmRlZiBTSEFET1dDU01VU0VTSEFET1dNQVhae1h9CmludCBpbmRleHtYfT0tMTsKI2Vsc2UKaW50IGluZGV4e1h9PVNIQURPV0NTTU5VTV9DQVNDQURFU3tYfS0xOwojZW5kaWYKZmxvYXQgZGlmZntYfT0wLjsKI2VsaWYgZGVmaW5lZChTSEFET1dDVUJFe1h9KQp1bmlmb3JtIHNhbXBsZXJDdWJlIHNoYWRvd1NhbXBsZXJ7WH07CiNlbHNlCnZhcnlpbmcgdmVjNCB2UG9zaXRpb25Gcm9tTGlnaHR7WH07CnZhcnlpbmcgZmxvYXQgdkRlcHRoTWV0cmlje1h9OwojaWYgZGVmaW5lZChTSEFET1dQQ1NTe1h9KQp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRFNoYWRvdyBzaGFkb3dTYW1wbGVye1h9Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBkZXB0aFNhbXBsZXJ7WH07CiNlbGlmIGRlZmluZWQoU0hBRE9XUENGe1h9KQp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRFNoYWRvdyBzaGFkb3dTYW1wbGVye1h9OwojZWxzZQp1bmlmb3JtIHNhbXBsZXIyRCBzaGFkb3dTYW1wbGVye1h9OwojZW5kaWYKdW5pZm9ybSBtYXQ0IGxpZ2h0TWF0cml4e1h9OwojZW5kaWYKdW5pZm9ybSB2ZWM0IHNoYWRvd3NJbmZve1h9Owp1bmlmb3JtIHZlYzIgZGVwdGhWYWx1ZXN7WH07CiNlbmRpZgojaWZkZWYgU1BPVExJR0hUe1h9CnVuaWZvcm0gdmVjNCB2TGlnaHREaXJlY3Rpb257WH07CnVuaWZvcm0gdmVjNCB2TGlnaHRGYWxsb2Zme1h9OwojZWxpZiBkZWZpbmVkKFBPSU5UTElHSFR7WH0pCnVuaWZvcm0gdmVjNCB2TGlnaHRGYWxsb2Zme1h9OwojZWxpZiBkZWZpbmVkKEhFTUlMSUdIVHtYfSkKdW5pZm9ybSB2ZWMzIHZMaWdodEdyb3VuZHtYfTsKI2VuZGlmCiNpZmRlZiBQUk9KRUNURURMSUdIVFRFWFRVUkV7WH0KdW5pZm9ybSBtYXQ0IHRleHR1cmVQcm9qZWN0aW9uTWF0cml4e1h9Owp1bmlmb3JtIHNhbXBsZXIyRCBwcm9qZWN0aW9uTGlnaHRTYW1wbGVye1h9OwojZW5kaWYKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtZb109Wm87Y29uc3QgcW89ImxpZ2h0VWJvRGVjbGFyYXRpb24iLGpvPWAjaWZkZWYgTElHSFR7WH0KdW5pZm9ybSBMaWdodHtYfQp7CnZlYzQgdkxpZ2h0RGF0YTsKdmVjNCB2TGlnaHREaWZmdXNlOwp2ZWM0IHZMaWdodFNwZWN1bGFyOwojaWZkZWYgU1BPVExJR0hUe1h9CnZlYzQgdkxpZ2h0RGlyZWN0aW9uOwp2ZWM0IHZMaWdodEZhbGxvZmY7CiNlbGlmIGRlZmluZWQoUE9JTlRMSUdIVHtYfSkKdmVjNCB2TGlnaHRGYWxsb2ZmOwojZWxpZiBkZWZpbmVkKEhFTUlMSUdIVHtYfSkKdmVjMyB2TGlnaHRHcm91bmQ7CiNlbmRpZgp2ZWM0IHNoYWRvd3NJbmZvOwp2ZWMyIGRlcHRoVmFsdWVzOwp9IGxpZ2h0e1h9OwojaWZkZWYgUFJPSkVDVEVETElHSFRURVhUVVJFe1h9CnVuaWZvcm0gbWF0NCB0ZXh0dXJlUHJvamVjdGlvbk1hdHJpeHtYfTsKdW5pZm9ybSBzYW1wbGVyMkQgcHJvamVjdGlvbkxpZ2h0U2FtcGxlcntYfTsKI2VuZGlmCiNpZmRlZiBTSEFET1d7WH0KI2lmZGVmIFNIQURPV0NTTXtYfQp1bmlmb3JtIG1hdDQgbGlnaHRNYXRyaXh7WH1bU0hBRE9XQ1NNTlVNX0NBU0NBREVTe1h9XTsKdW5pZm9ybSBmbG9hdCB2aWV3RnJ1c3R1bVp7WH1bU0hBRE9XQ1NNTlVNX0NBU0NBREVTe1h9XTsKdW5pZm9ybSBmbG9hdCBmcnVzdHVtTGVuZ3Roc3tYfVtTSEFET1dDU01OVU1fQ0FTQ0FERVN7WH1dOwp1bmlmb3JtIGZsb2F0IGNhc2NhZGVCbGVuZEZhY3RvcntYfTsKdmFyeWluZyB2ZWM0IHZQb3NpdGlvbkZyb21MaWdodHtYfVtTSEFET1dDU01OVU1fQ0FTQ0FERVN7WH1dOwp2YXJ5aW5nIGZsb2F0IHZEZXB0aE1ldHJpY3tYfVtTSEFET1dDU01OVU1fQ0FTQ0FERVN7WH1dOwp2YXJ5aW5nIHZlYzQgdlBvc2l0aW9uRnJvbUNhbWVyYXtYfTsKI2lmIGRlZmluZWQoU0hBRE9XUENTU3tYfSkKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkRBcnJheVNoYWRvdyBzaGFkb3dTYW1wbGVye1h9Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyREFycmF5IGRlcHRoU2FtcGxlcntYfTsKdW5pZm9ybSB2ZWMyIGxpZ2h0U2l6ZVVWQ29ycmVjdGlvbntYfVtTSEFET1dDU01OVU1fQ0FTQ0FERVN7WH1dOwp1bmlmb3JtIGZsb2F0IGRlcHRoQ29ycmVjdGlvbntYfVtTSEFET1dDU01OVU1fQ0FTQ0FERVN7WH1dOwp1bmlmb3JtIGZsb2F0IHBlbnVtYnJhRGFya25lc3N7WH07CiNlbGlmIGRlZmluZWQoU0hBRE9XUENGe1h9KQp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyREFycmF5U2hhZG93IHNoYWRvd1NhbXBsZXJ7WH07CiNlbHNlCnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEQXJyYXkgc2hhZG93U2FtcGxlcntYfTsKI2VuZGlmCiNpZmRlZiBTSEFET1dDU01ERUJVR3tYfQpjb25zdCB2ZWMzIHZDYXNjYWRlQ29sb3JzTXVsdGlwbGllcntYfVs4XT12ZWMzWzhdCigKdmVjMyAoIDEuNSwwLjAsMC4wICksCnZlYzMgKCAwLjAsMS41LDAuMCApLAp2ZWMzICggMC4wLDAuMCw1LjUgKSwKdmVjMyAoIDEuNSwwLjAsNS41ICksCnZlYzMgKCAxLjUsMS41LDAuMCApLAp2ZWMzICggMS4wLDEuMCwxLjAgKSwKdmVjMyAoIDAuMCwxLjAsNS41ICksCnZlYzMgKCAwLjUsMy41LDAuNzUgKQopOwp2ZWMzIHNoYWRvd0RlYnVne1h9OwojZW5kaWYKI2lmZGVmIFNIQURPV0NTTVVTRVNIQURPV01BWFp7WH0KaW50IGluZGV4e1h9PS0xOwojZWxzZQppbnQgaW5kZXh7WH09U0hBRE9XQ1NNTlVNX0NBU0NBREVTe1h9LTE7CiNlbmRpZgpmbG9hdCBkaWZme1h9PTAuOwojZWxpZiBkZWZpbmVkKFNIQURPV0NVQkV7WH0pCnVuaWZvcm0gc2FtcGxlckN1YmUgc2hhZG93U2FtcGxlcntYfTsgCiNlbHNlCnZhcnlpbmcgdmVjNCB2UG9zaXRpb25Gcm9tTGlnaHR7WH07CnZhcnlpbmcgZmxvYXQgdkRlcHRoTWV0cmlje1h9OwojaWYgZGVmaW5lZChTSEFET1dQQ1NTe1h9KQp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRFNoYWRvdyBzaGFkb3dTYW1wbGVye1h9Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBkZXB0aFNhbXBsZXJ7WH07CiNlbGlmIGRlZmluZWQoU0hBRE9XUENGe1h9KQp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRFNoYWRvdyBzaGFkb3dTYW1wbGVye1h9OwojZWxzZQp1bmlmb3JtIHNhbXBsZXIyRCBzaGFkb3dTYW1wbGVye1h9OwojZW5kaWYKdW5pZm9ybSBtYXQ0IGxpZ2h0TWF0cml4e1h9OwojZW5kaWYKI2VuZGlmCiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbcW9dPWpvO2NvbnN0ICRvPSJsaWdodHNGcmFnbWVudEZ1bmN0aW9ucyIsUW89YHN0cnVjdCBsaWdodGluZ0luZm8Kewp2ZWMzIGRpZmZ1c2U7CiNpZmRlZiBTUEVDVUxBUlRFUk0KdmVjMyBzcGVjdWxhcjsKI2VuZGlmCiNpZmRlZiBORE9UTApmbG9hdCBuZGw7CiNlbmRpZgp9OwpsaWdodGluZ0luZm8gY29tcHV0ZUxpZ2h0aW5nKHZlYzMgdmlld0RpcmVjdGlvblcsdmVjMyB2Tm9ybWFsLHZlYzQgbGlnaHREYXRhLHZlYzMgZGlmZnVzZUNvbG9yLHZlYzMgc3BlY3VsYXJDb2xvcixmbG9hdCByYW5nZSxmbG9hdCBnbG9zc2luZXNzKSB7CmxpZ2h0aW5nSW5mbyByZXN1bHQ7CnZlYzMgbGlnaHRWZWN0b3JXOwpmbG9hdCBhdHRlbnVhdGlvbj0xLjA7CmlmIChsaWdodERhdGEudz09MC4pCnsKdmVjMyBkaXJlY3Rpb249bGlnaHREYXRhLnh5ei12UG9zaXRpb25XOwphdHRlbnVhdGlvbj1tYXgoMC4sMS4wLWxlbmd0aChkaXJlY3Rpb24pL3JhbmdlKTsKbGlnaHRWZWN0b3JXPW5vcm1hbGl6ZShkaXJlY3Rpb24pOwp9CmVsc2UKewpsaWdodFZlY3Rvclc9bm9ybWFsaXplKC1saWdodERhdGEueHl6KTsKfQpmbG9hdCBuZGw9bWF4KDAuLGRvdCh2Tm9ybWFsLGxpZ2h0VmVjdG9yVykpOwojaWZkZWYgTkRPVEwKcmVzdWx0Lm5kbD1uZGw7CiNlbmRpZgpyZXN1bHQuZGlmZnVzZT1uZGwqZGlmZnVzZUNvbG9yKmF0dGVudWF0aW9uOwojaWZkZWYgU1BFQ1VMQVJURVJNCnZlYzMgYW5nbGVXPW5vcm1hbGl6ZSh2aWV3RGlyZWN0aW9uVytsaWdodFZlY3RvclcpOwpmbG9hdCBzcGVjQ29tcD1tYXgoMC4sZG90KHZOb3JtYWwsYW5nbGVXKSk7CnNwZWNDb21wPXBvdyhzcGVjQ29tcCxtYXgoMS4sZ2xvc3NpbmVzcykpOwpyZXN1bHQuc3BlY3VsYXI9c3BlY0NvbXAqc3BlY3VsYXJDb2xvciphdHRlbnVhdGlvbjsKI2VuZGlmCnJldHVybiByZXN1bHQ7Cn0KbGlnaHRpbmdJbmZvIGNvbXB1dGVTcG90TGlnaHRpbmcodmVjMyB2aWV3RGlyZWN0aW9uVyx2ZWMzIHZOb3JtYWwsdmVjNCBsaWdodERhdGEsdmVjNCBsaWdodERpcmVjdGlvbix2ZWMzIGRpZmZ1c2VDb2xvcix2ZWMzIHNwZWN1bGFyQ29sb3IsZmxvYXQgcmFuZ2UsZmxvYXQgZ2xvc3NpbmVzcykgewpsaWdodGluZ0luZm8gcmVzdWx0Owp2ZWMzIGRpcmVjdGlvbj1saWdodERhdGEueHl6LXZQb3NpdGlvblc7CnZlYzMgbGlnaHRWZWN0b3JXPW5vcm1hbGl6ZShkaXJlY3Rpb24pOwpmbG9hdCBhdHRlbnVhdGlvbj1tYXgoMC4sMS4wLWxlbmd0aChkaXJlY3Rpb24pL3JhbmdlKTsKZmxvYXQgY29zQW5nbGU9bWF4KDAuLGRvdChsaWdodERpcmVjdGlvbi54eXosLWxpZ2h0VmVjdG9yVykpOwppZiAoY29zQW5nbGU+PWxpZ2h0RGlyZWN0aW9uLncpCnsKY29zQW5nbGU9bWF4KDAuLHBvdyhjb3NBbmdsZSxsaWdodERhdGEudykpOwphdHRlbnVhdGlvbio9Y29zQW5nbGU7CmZsb2F0IG5kbD1tYXgoMC4sZG90KHZOb3JtYWwsbGlnaHRWZWN0b3JXKSk7CiNpZmRlZiBORE9UTApyZXN1bHQubmRsPW5kbDsKI2VuZGlmCnJlc3VsdC5kaWZmdXNlPW5kbCpkaWZmdXNlQ29sb3IqYXR0ZW51YXRpb247CiNpZmRlZiBTUEVDVUxBUlRFUk0KdmVjMyBhbmdsZVc9bm9ybWFsaXplKHZpZXdEaXJlY3Rpb25XK2xpZ2h0VmVjdG9yVyk7CmZsb2F0IHNwZWNDb21wPW1heCgwLixkb3Qodk5vcm1hbCxhbmdsZVcpKTsKc3BlY0NvbXA9cG93KHNwZWNDb21wLG1heCgxLixnbG9zc2luZXNzKSk7CnJlc3VsdC5zcGVjdWxhcj1zcGVjQ29tcCpzcGVjdWxhckNvbG9yKmF0dGVudWF0aW9uOwojZW5kaWYKcmV0dXJuIHJlc3VsdDsKfQpyZXN1bHQuZGlmZnVzZT12ZWMzKDAuKTsKI2lmZGVmIFNQRUNVTEFSVEVSTQpyZXN1bHQuc3BlY3VsYXI9dmVjMygwLik7CiNlbmRpZgojaWZkZWYgTkRPVEwKcmVzdWx0Lm5kbD0wLjsKI2VuZGlmCnJldHVybiByZXN1bHQ7Cn0KbGlnaHRpbmdJbmZvIGNvbXB1dGVIZW1pc3BoZXJpY0xpZ2h0aW5nKHZlYzMgdmlld0RpcmVjdGlvblcsdmVjMyB2Tm9ybWFsLHZlYzQgbGlnaHREYXRhLHZlYzMgZGlmZnVzZUNvbG9yLHZlYzMgc3BlY3VsYXJDb2xvcix2ZWMzIGdyb3VuZENvbG9yLGZsb2F0IGdsb3NzaW5lc3MpIHsKbGlnaHRpbmdJbmZvIHJlc3VsdDsKZmxvYXQgbmRsPWRvdCh2Tm9ybWFsLGxpZ2h0RGF0YS54eXopKjAuNSswLjU7CiNpZmRlZiBORE9UTApyZXN1bHQubmRsPW5kbDsKI2VuZGlmCnJlc3VsdC5kaWZmdXNlPW1peChncm91bmRDb2xvcixkaWZmdXNlQ29sb3IsbmRsKTsKI2lmZGVmIFNQRUNVTEFSVEVSTQp2ZWMzIGFuZ2xlVz1ub3JtYWxpemUodmlld0RpcmVjdGlvblcrbGlnaHREYXRhLnh5eik7CmZsb2F0IHNwZWNDb21wPW1heCgwLixkb3Qodk5vcm1hbCxhbmdsZVcpKTsKc3BlY0NvbXA9cG93KHNwZWNDb21wLG1heCgxLixnbG9zc2luZXNzKSk7CnJlc3VsdC5zcGVjdWxhcj1zcGVjQ29tcCpzcGVjdWxhckNvbG9yOwojZW5kaWYKcmV0dXJuIHJlc3VsdDsKfQojZGVmaW5lIGlubGluZQp2ZWMzIGNvbXB1dGVQcm9qZWN0aW9uVGV4dHVyZURpZmZ1c2VMaWdodGluZyhzYW1wbGVyMkQgcHJvamVjdGlvbkxpZ2h0U2FtcGxlcixtYXQ0IHRleHR1cmVQcm9qZWN0aW9uTWF0cml4KXsKdmVjNCBzdHJxPXRleHR1cmVQcm9qZWN0aW9uTWF0cml4KnZlYzQodlBvc2l0aW9uVywxLjApOwpzdHJxLz1zdHJxLnc7CnZlYzMgdGV4dHVyZUNvbG9yPXRleHR1cmUyRChwcm9qZWN0aW9uTGlnaHRTYW1wbGVyLHN0cnEueHkpLnJnYjsKcmV0dXJuIHRleHR1cmVDb2xvcjsKfWA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVskb109UW87Y29uc3QgSm89InNoYWRvd3NGcmFnbWVudEZ1bmN0aW9ucyIsZWg9YCNpZmRlZiBTSEFET1dTCiNpZiBkZWZpbmVkKFdFQkdMMikgfHwgZGVmaW5lZChXRUJHUFUpIHx8IGRlZmluZWQoTkFUSVZFKQojZGVmaW5lIFRFWFRVUkVGVU5DKHMsYyxsKSB0ZXh0dXJlMkRMb2RFWFQocyxjLGwpCiNlbHNlCiNkZWZpbmUgVEVYVFVSRUZVTkMocyxjLGIpIHRleHR1cmUyRChzLGMsYikKI2VuZGlmCiNpZm5kZWYgU0hBRE9XRkxPQVQKZmxvYXQgdW5wYWNrKHZlYzQgY29sb3IpCnsKY29uc3QgdmVjNCBiaXRfc2hpZnQ9dmVjNCgxLjAvKDI1NS4wKjI1NS4wKjI1NS4wKSwxLjAvKDI1NS4wKjI1NS4wKSwxLjAvMjU1LjAsMS4wKTsKcmV0dXJuIGRvdChjb2xvcixiaXRfc2hpZnQpOwp9CiNlbmRpZgpmbG9hdCBjb21wdXRlRmFsbE9mZihmbG9hdCB2YWx1ZSx2ZWMyIGNsaXBTcGFjZSxmbG9hdCBmcnVzdHVtRWRnZUZhbGxvZmYpCnsKZmxvYXQgbWFzaz1zbW9vdGhzdGVwKDEuMC1mcnVzdHVtRWRnZUZhbGxvZmYsMS4wMDAwMDAxMixjbGFtcChkb3QoY2xpcFNwYWNlLGNsaXBTcGFjZSksMC4sMS4pKTsKcmV0dXJuIG1peCh2YWx1ZSwxLjAsbWFzayk7Cn0KI2RlZmluZSBpbmxpbmUKZmxvYXQgY29tcHV0ZVNoYWRvd0N1YmUodmVjMyBsaWdodFBvc2l0aW9uLHNhbXBsZXJDdWJlIHNoYWRvd1NhbXBsZXIsZmxvYXQgZGFya25lc3MsdmVjMiBkZXB0aFZhbHVlcykKewp2ZWMzIGRpcmVjdGlvblRvTGlnaHQ9dlBvc2l0aW9uVy1saWdodFBvc2l0aW9uOwpmbG9hdCBkZXB0aD1sZW5ndGgoZGlyZWN0aW9uVG9MaWdodCk7CmRlcHRoPShkZXB0aCtkZXB0aFZhbHVlcy54KS8oZGVwdGhWYWx1ZXMueSk7CmRlcHRoPWNsYW1wKGRlcHRoLDAuLDEuMCk7CmRpcmVjdGlvblRvTGlnaHQ9bm9ybWFsaXplKGRpcmVjdGlvblRvTGlnaHQpOwpkaXJlY3Rpb25Ub0xpZ2h0Lnk9LWRpcmVjdGlvblRvTGlnaHQueTsKI2lmbmRlZiBTSEFET1dGTE9BVApmbG9hdCBzaGFkb3c9dW5wYWNrKHRleHR1cmVDdWJlKHNoYWRvd1NhbXBsZXIsZGlyZWN0aW9uVG9MaWdodCkpOwojZWxzZQpmbG9hdCBzaGFkb3c9dGV4dHVyZUN1YmUoc2hhZG93U2FtcGxlcixkaXJlY3Rpb25Ub0xpZ2h0KS54OwojZW5kaWYKcmV0dXJuIGRlcHRoPnNoYWRvdyA/IGRhcmtuZXNzIDogMS4wOwp9CiNkZWZpbmUgaW5saW5lCmZsb2F0IGNvbXB1dGVTaGFkb3dXaXRoUG9pc3NvblNhbXBsaW5nQ3ViZSh2ZWMzIGxpZ2h0UG9zaXRpb24sc2FtcGxlckN1YmUgc2hhZG93U2FtcGxlcixmbG9hdCBtYXBTaXplLGZsb2F0IGRhcmtuZXNzLHZlYzIgZGVwdGhWYWx1ZXMpCnsKdmVjMyBkaXJlY3Rpb25Ub0xpZ2h0PXZQb3NpdGlvblctbGlnaHRQb3NpdGlvbjsKZmxvYXQgZGVwdGg9bGVuZ3RoKGRpcmVjdGlvblRvTGlnaHQpOwpkZXB0aD0oZGVwdGgrZGVwdGhWYWx1ZXMueCkvKGRlcHRoVmFsdWVzLnkpOwpkZXB0aD1jbGFtcChkZXB0aCwwLiwxLjApOwpkaXJlY3Rpb25Ub0xpZ2h0PW5vcm1hbGl6ZShkaXJlY3Rpb25Ub0xpZ2h0KTsKZGlyZWN0aW9uVG9MaWdodC55PS1kaXJlY3Rpb25Ub0xpZ2h0Lnk7CmZsb2F0IHZpc2liaWxpdHk9MS47CnZlYzMgcG9pc3NvbkRpc2tbNF07CnBvaXNzb25EaXNrWzBdPXZlYzMoLTEuMCwxLjAsLTEuMCk7CnBvaXNzb25EaXNrWzFdPXZlYzMoMS4wLC0xLjAsLTEuMCk7CnBvaXNzb25EaXNrWzJdPXZlYzMoLTEuMCwtMS4wLC0xLjApOwpwb2lzc29uRGlza1szXT12ZWMzKDEuMCwtMS4wLDEuMCk7CiNpZm5kZWYgU0hBRE9XRkxPQVQKaWYgKHVucGFjayh0ZXh0dXJlQ3ViZShzaGFkb3dTYW1wbGVyLGRpcmVjdGlvblRvTGlnaHQrcG9pc3NvbkRpc2tbMF0qbWFwU2l6ZSkpPGRlcHRoKSB2aXNpYmlsaXR5LT0wLjI1OwppZiAodW5wYWNrKHRleHR1cmVDdWJlKHNoYWRvd1NhbXBsZXIsZGlyZWN0aW9uVG9MaWdodCtwb2lzc29uRGlza1sxXSptYXBTaXplKSk8ZGVwdGgpIHZpc2liaWxpdHktPTAuMjU7CmlmICh1bnBhY2sodGV4dHVyZUN1YmUoc2hhZG93U2FtcGxlcixkaXJlY3Rpb25Ub0xpZ2h0K3BvaXNzb25EaXNrWzJdKm1hcFNpemUpKTxkZXB0aCkgdmlzaWJpbGl0eS09MC4yNTsKaWYgKHVucGFjayh0ZXh0dXJlQ3ViZShzaGFkb3dTYW1wbGVyLGRpcmVjdGlvblRvTGlnaHQrcG9pc3NvbkRpc2tbM10qbWFwU2l6ZSkpPGRlcHRoKSB2aXNpYmlsaXR5LT0wLjI1OwojZWxzZQppZiAodGV4dHVyZUN1YmUoc2hhZG93U2FtcGxlcixkaXJlY3Rpb25Ub0xpZ2h0K3BvaXNzb25EaXNrWzBdKm1hcFNpemUpLng8ZGVwdGgpIHZpc2liaWxpdHktPTAuMjU7CmlmICh0ZXh0dXJlQ3ViZShzaGFkb3dTYW1wbGVyLGRpcmVjdGlvblRvTGlnaHQrcG9pc3NvbkRpc2tbMV0qbWFwU2l6ZSkueDxkZXB0aCkgdmlzaWJpbGl0eS09MC4yNTsKaWYgKHRleHR1cmVDdWJlKHNoYWRvd1NhbXBsZXIsZGlyZWN0aW9uVG9MaWdodCtwb2lzc29uRGlza1syXSptYXBTaXplKS54PGRlcHRoKSB2aXNpYmlsaXR5LT0wLjI1OwppZiAodGV4dHVyZUN1YmUoc2hhZG93U2FtcGxlcixkaXJlY3Rpb25Ub0xpZ2h0K3BvaXNzb25EaXNrWzNdKm1hcFNpemUpLng8ZGVwdGgpIHZpc2liaWxpdHktPTAuMjU7CiNlbmRpZgpyZXR1cm4gbWluKDEuMCx2aXNpYmlsaXR5K2RhcmtuZXNzKTsKfQojZGVmaW5lIGlubGluZQpmbG9hdCBjb21wdXRlU2hhZG93V2l0aEVTTUN1YmUodmVjMyBsaWdodFBvc2l0aW9uLHNhbXBsZXJDdWJlIHNoYWRvd1NhbXBsZXIsZmxvYXQgZGFya25lc3MsZmxvYXQgZGVwdGhTY2FsZSx2ZWMyIGRlcHRoVmFsdWVzKQp7CnZlYzMgZGlyZWN0aW9uVG9MaWdodD12UG9zaXRpb25XLWxpZ2h0UG9zaXRpb247CmZsb2F0IGRlcHRoPWxlbmd0aChkaXJlY3Rpb25Ub0xpZ2h0KTsKZGVwdGg9KGRlcHRoK2RlcHRoVmFsdWVzLngpLyhkZXB0aFZhbHVlcy55KTsKZmxvYXQgc2hhZG93UGl4ZWxEZXB0aD1jbGFtcChkZXB0aCwwLiwxLjApOwpkaXJlY3Rpb25Ub0xpZ2h0PW5vcm1hbGl6ZShkaXJlY3Rpb25Ub0xpZ2h0KTsKZGlyZWN0aW9uVG9MaWdodC55PS1kaXJlY3Rpb25Ub0xpZ2h0Lnk7CiNpZm5kZWYgU0hBRE9XRkxPQVQKZmxvYXQgc2hhZG93TWFwU2FtcGxlPXVucGFjayh0ZXh0dXJlQ3ViZShzaGFkb3dTYW1wbGVyLGRpcmVjdGlvblRvTGlnaHQpKTsKI2Vsc2UKZmxvYXQgc2hhZG93TWFwU2FtcGxlPXRleHR1cmVDdWJlKHNoYWRvd1NhbXBsZXIsZGlyZWN0aW9uVG9MaWdodCkueDsKI2VuZGlmCmZsb2F0IGVzbT0xLjAtY2xhbXAoZXhwKG1pbig4Ny4sZGVwdGhTY2FsZSpzaGFkb3dQaXhlbERlcHRoKSkqc2hhZG93TWFwU2FtcGxlLDAuLDEuLWRhcmtuZXNzKTsgCnJldHVybiBlc207Cn0KI2RlZmluZSBpbmxpbmUKZmxvYXQgY29tcHV0ZVNoYWRvd1dpdGhDbG9zZUVTTUN1YmUodmVjMyBsaWdodFBvc2l0aW9uLHNhbXBsZXJDdWJlIHNoYWRvd1NhbXBsZXIsZmxvYXQgZGFya25lc3MsZmxvYXQgZGVwdGhTY2FsZSx2ZWMyIGRlcHRoVmFsdWVzKQp7CnZlYzMgZGlyZWN0aW9uVG9MaWdodD12UG9zaXRpb25XLWxpZ2h0UG9zaXRpb247CmZsb2F0IGRlcHRoPWxlbmd0aChkaXJlY3Rpb25Ub0xpZ2h0KTsKZGVwdGg9KGRlcHRoK2RlcHRoVmFsdWVzLngpLyhkZXB0aFZhbHVlcy55KTsKZmxvYXQgc2hhZG93UGl4ZWxEZXB0aD1jbGFtcChkZXB0aCwwLiwxLjApOwpkaXJlY3Rpb25Ub0xpZ2h0PW5vcm1hbGl6ZShkaXJlY3Rpb25Ub0xpZ2h0KTsKZGlyZWN0aW9uVG9MaWdodC55PS1kaXJlY3Rpb25Ub0xpZ2h0Lnk7CiNpZm5kZWYgU0hBRE9XRkxPQVQKZmxvYXQgc2hhZG93TWFwU2FtcGxlPXVucGFjayh0ZXh0dXJlQ3ViZShzaGFkb3dTYW1wbGVyLGRpcmVjdGlvblRvTGlnaHQpKTsKI2Vsc2UKZmxvYXQgc2hhZG93TWFwU2FtcGxlPXRleHR1cmVDdWJlKHNoYWRvd1NhbXBsZXIsZGlyZWN0aW9uVG9MaWdodCkueDsKI2VuZGlmCmZsb2F0IGVzbT1jbGFtcChleHAobWluKDg3LiwtZGVwdGhTY2FsZSooc2hhZG93UGl4ZWxEZXB0aC1zaGFkb3dNYXBTYW1wbGUpKSksZGFya25lc3MsMS4pOwpyZXR1cm4gZXNtOwp9CiNpZiBkZWZpbmVkKFdFQkdMMikgfHwgZGVmaW5lZChXRUJHUFUpIHx8IGRlZmluZWQoTkFUSVZFKQojZGVmaW5lIGlubGluZQpmbG9hdCBjb21wdXRlU2hhZG93Q1NNKGZsb2F0IGxheWVyLHZlYzQgdlBvc2l0aW9uRnJvbUxpZ2h0LGZsb2F0IGRlcHRoTWV0cmljLGhpZ2hwIHNhbXBsZXIyREFycmF5IHNoYWRvd1NhbXBsZXIsZmxvYXQgZGFya25lc3MsZmxvYXQgZnJ1c3R1bUVkZ2VGYWxsb2ZmKQp7CnZlYzMgY2xpcFNwYWNlPXZQb3NpdGlvbkZyb21MaWdodC54eXovdlBvc2l0aW9uRnJvbUxpZ2h0Lnc7CnZlYzIgdXY9MC41KmNsaXBTcGFjZS54eSt2ZWMyKDAuNSk7CnZlYzMgdXZMYXllcj12ZWMzKHV2LngsdXYueSxsYXllcik7CmZsb2F0IHNoYWRvd1BpeGVsRGVwdGg9Y2xhbXAoZGVwdGhNZXRyaWMsMC4sMS4wKTsKI2lmbmRlZiBTSEFET1dGTE9BVApmbG9hdCBzaGFkb3c9dW5wYWNrKHRleHR1cmUyRChzaGFkb3dTYW1wbGVyLHV2TGF5ZXIpKTsKI2Vsc2UKZmxvYXQgc2hhZG93PXRleHR1cmUyRChzaGFkb3dTYW1wbGVyLHV2TGF5ZXIpLng7CiNlbmRpZgpyZXR1cm4gc2hhZG93UGl4ZWxEZXB0aD5zaGFkb3cgPyBjb21wdXRlRmFsbE9mZihkYXJrbmVzcyxjbGlwU3BhY2UueHksZnJ1c3R1bUVkZ2VGYWxsb2ZmKSA6IDEuOwp9CiNlbmRpZgojZGVmaW5lIGlubGluZQpmbG9hdCBjb21wdXRlU2hhZG93KHZlYzQgdlBvc2l0aW9uRnJvbUxpZ2h0LGZsb2F0IGRlcHRoTWV0cmljLHNhbXBsZXIyRCBzaGFkb3dTYW1wbGVyLGZsb2F0IGRhcmtuZXNzLGZsb2F0IGZydXN0dW1FZGdlRmFsbG9mZikKewp2ZWMzIGNsaXBTcGFjZT12UG9zaXRpb25Gcm9tTGlnaHQueHl6L3ZQb3NpdGlvbkZyb21MaWdodC53Owp2ZWMyIHV2PTAuNSpjbGlwU3BhY2UueHkrdmVjMigwLjUpOwppZiAodXYueDwwLiB8fCB1di54PjEuMCB8fCB1di55PDAuIHx8IHV2Lnk+MS4wKQp7CnJldHVybiAxLjA7Cn0KZWxzZQp7CmZsb2F0IHNoYWRvd1BpeGVsRGVwdGg9Y2xhbXAoZGVwdGhNZXRyaWMsMC4sMS4wKTsKI2lmbmRlZiBTSEFET1dGTE9BVApmbG9hdCBzaGFkb3c9dW5wYWNrKFRFWFRVUkVGVU5DKHNoYWRvd1NhbXBsZXIsdXYsMC4pKTsKI2Vsc2UKZmxvYXQgc2hhZG93PVRFWFRVUkVGVU5DKHNoYWRvd1NhbXBsZXIsdXYsMC4pLng7CiNlbmRpZgpyZXR1cm4gc2hhZG93UGl4ZWxEZXB0aD5zaGFkb3cgPyBjb21wdXRlRmFsbE9mZihkYXJrbmVzcyxjbGlwU3BhY2UueHksZnJ1c3R1bUVkZ2VGYWxsb2ZmKSA6IDEuOwp9Cn0KI2RlZmluZSBpbmxpbmUKZmxvYXQgY29tcHV0ZVNoYWRvd1dpdGhQb2lzc29uU2FtcGxpbmcodmVjNCB2UG9zaXRpb25Gcm9tTGlnaHQsZmxvYXQgZGVwdGhNZXRyaWMsc2FtcGxlcjJEIHNoYWRvd1NhbXBsZXIsZmxvYXQgbWFwU2l6ZSxmbG9hdCBkYXJrbmVzcyxmbG9hdCBmcnVzdHVtRWRnZUZhbGxvZmYpCnsKdmVjMyBjbGlwU3BhY2U9dlBvc2l0aW9uRnJvbUxpZ2h0Lnh5ei92UG9zaXRpb25Gcm9tTGlnaHQudzsKdmVjMiB1dj0wLjUqY2xpcFNwYWNlLnh5K3ZlYzIoMC41KTsKaWYgKHV2Lng8MC4gfHwgdXYueD4xLjAgfHwgdXYueTwwLiB8fCB1di55PjEuMCkKewpyZXR1cm4gMS4wOwp9CmVsc2UKewpmbG9hdCBzaGFkb3dQaXhlbERlcHRoPWNsYW1wKGRlcHRoTWV0cmljLDAuLDEuMCk7CmZsb2F0IHZpc2liaWxpdHk9MS47CnZlYzIgcG9pc3NvbkRpc2tbNF07CnBvaXNzb25EaXNrWzBdPXZlYzIoLTAuOTQyMDE2MjQsLTAuMzk5MDYyMTYpOwpwb2lzc29uRGlza1sxXT12ZWMyKDAuOTQ1NTg2MDksLTAuNzY4OTA3MjUpOwpwb2lzc29uRGlza1syXT12ZWMyKC0wLjA5NDE4NDEwMSwtMC45MjkzODg3MCk7CnBvaXNzb25EaXNrWzNdPXZlYzIoMC4zNDQ5NTkzOCwwLjI5Mzg3NzYwKTsKI2lmbmRlZiBTSEFET1dGTE9BVAppZiAodW5wYWNrKFRFWFRVUkVGVU5DKHNoYWRvd1NhbXBsZXIsdXYrcG9pc3NvbkRpc2tbMF0qbWFwU2l6ZSwwLikpPHNoYWRvd1BpeGVsRGVwdGgpIHZpc2liaWxpdHktPTAuMjU7CmlmICh1bnBhY2soVEVYVFVSRUZVTkMoc2hhZG93U2FtcGxlcix1ditwb2lzc29uRGlza1sxXSptYXBTaXplLDAuKSk8c2hhZG93UGl4ZWxEZXB0aCkgdmlzaWJpbGl0eS09MC4yNTsKaWYgKHVucGFjayhURVhUVVJFRlVOQyhzaGFkb3dTYW1wbGVyLHV2K3BvaXNzb25EaXNrWzJdKm1hcFNpemUsMC4pKTxzaGFkb3dQaXhlbERlcHRoKSB2aXNpYmlsaXR5LT0wLjI1OwppZiAodW5wYWNrKFRFWFRVUkVGVU5DKHNoYWRvd1NhbXBsZXIsdXYrcG9pc3NvbkRpc2tbM10qbWFwU2l6ZSwwLikpPHNoYWRvd1BpeGVsRGVwdGgpIHZpc2liaWxpdHktPTAuMjU7CiNlbHNlCmlmIChURVhUVVJFRlVOQyhzaGFkb3dTYW1wbGVyLHV2K3BvaXNzb25EaXNrWzBdKm1hcFNpemUsMC4pLng8c2hhZG93UGl4ZWxEZXB0aCkgdmlzaWJpbGl0eS09MC4yNTsKaWYgKFRFWFRVUkVGVU5DKHNoYWRvd1NhbXBsZXIsdXYrcG9pc3NvbkRpc2tbMV0qbWFwU2l6ZSwwLikueDxzaGFkb3dQaXhlbERlcHRoKSB2aXNpYmlsaXR5LT0wLjI1OwppZiAoVEVYVFVSRUZVTkMoc2hhZG93U2FtcGxlcix1ditwb2lzc29uRGlza1syXSptYXBTaXplLDAuKS54PHNoYWRvd1BpeGVsRGVwdGgpIHZpc2liaWxpdHktPTAuMjU7CmlmIChURVhUVVJFRlVOQyhzaGFkb3dTYW1wbGVyLHV2K3BvaXNzb25EaXNrWzNdKm1hcFNpemUsMC4pLng8c2hhZG93UGl4ZWxEZXB0aCkgdmlzaWJpbGl0eS09MC4yNTsKI2VuZGlmCnJldHVybiBjb21wdXRlRmFsbE9mZihtaW4oMS4wLHZpc2liaWxpdHkrZGFya25lc3MpLGNsaXBTcGFjZS54eSxmcnVzdHVtRWRnZUZhbGxvZmYpOwp9Cn0KI2RlZmluZSBpbmxpbmUKZmxvYXQgY29tcHV0ZVNoYWRvd1dpdGhFU00odmVjNCB2UG9zaXRpb25Gcm9tTGlnaHQsZmxvYXQgZGVwdGhNZXRyaWMsc2FtcGxlcjJEIHNoYWRvd1NhbXBsZXIsZmxvYXQgZGFya25lc3MsZmxvYXQgZGVwdGhTY2FsZSxmbG9hdCBmcnVzdHVtRWRnZUZhbGxvZmYpCnsKdmVjMyBjbGlwU3BhY2U9dlBvc2l0aW9uRnJvbUxpZ2h0Lnh5ei92UG9zaXRpb25Gcm9tTGlnaHQudzsKdmVjMiB1dj0wLjUqY2xpcFNwYWNlLnh5K3ZlYzIoMC41KTsKaWYgKHV2Lng8MC4gfHwgdXYueD4xLjAgfHwgdXYueTwwLiB8fCB1di55PjEuMCkKewpyZXR1cm4gMS4wOwp9CmVsc2UKewpmbG9hdCBzaGFkb3dQaXhlbERlcHRoPWNsYW1wKGRlcHRoTWV0cmljLDAuLDEuMCk7CiNpZm5kZWYgU0hBRE9XRkxPQVQKZmxvYXQgc2hhZG93TWFwU2FtcGxlPXVucGFjayhURVhUVVJFRlVOQyhzaGFkb3dTYW1wbGVyLHV2LDAuKSk7CiNlbHNlCmZsb2F0IHNoYWRvd01hcFNhbXBsZT1URVhUVVJFRlVOQyhzaGFkb3dTYW1wbGVyLHV2LDAuKS54OwojZW5kaWYKZmxvYXQgZXNtPTEuMC1jbGFtcChleHAobWluKDg3LixkZXB0aFNjYWxlKnNoYWRvd1BpeGVsRGVwdGgpKSpzaGFkb3dNYXBTYW1wbGUsMC4sMS4tZGFya25lc3MpOwpyZXR1cm4gY29tcHV0ZUZhbGxPZmYoZXNtLGNsaXBTcGFjZS54eSxmcnVzdHVtRWRnZUZhbGxvZmYpOwp9Cn0KI2RlZmluZSBpbmxpbmUKZmxvYXQgY29tcHV0ZVNoYWRvd1dpdGhDbG9zZUVTTSh2ZWM0IHZQb3NpdGlvbkZyb21MaWdodCxmbG9hdCBkZXB0aE1ldHJpYyxzYW1wbGVyMkQgc2hhZG93U2FtcGxlcixmbG9hdCBkYXJrbmVzcyxmbG9hdCBkZXB0aFNjYWxlLGZsb2F0IGZydXN0dW1FZGdlRmFsbG9mZikKewp2ZWMzIGNsaXBTcGFjZT12UG9zaXRpb25Gcm9tTGlnaHQueHl6L3ZQb3NpdGlvbkZyb21MaWdodC53Owp2ZWMyIHV2PTAuNSpjbGlwU3BhY2UueHkrdmVjMigwLjUpOwppZiAodXYueDwwLiB8fCB1di54PjEuMCB8fCB1di55PDAuIHx8IHV2Lnk+MS4wKQp7CnJldHVybiAxLjA7Cn0KZWxzZQp7CmZsb2F0IHNoYWRvd1BpeGVsRGVwdGg9Y2xhbXAoZGVwdGhNZXRyaWMsMC4sMS4wKTsgCiNpZm5kZWYgU0hBRE9XRkxPQVQKZmxvYXQgc2hhZG93TWFwU2FtcGxlPXVucGFjayhURVhUVVJFRlVOQyhzaGFkb3dTYW1wbGVyLHV2LDAuKSk7CiNlbHNlCmZsb2F0IHNoYWRvd01hcFNhbXBsZT1URVhUVVJFRlVOQyhzaGFkb3dTYW1wbGVyLHV2LDAuKS54OwojZW5kaWYKZmxvYXQgZXNtPWNsYW1wKGV4cChtaW4oODcuLC1kZXB0aFNjYWxlKihzaGFkb3dQaXhlbERlcHRoLXNoYWRvd01hcFNhbXBsZSkpKSxkYXJrbmVzcywxLik7CnJldHVybiBjb21wdXRlRmFsbE9mZihlc20sY2xpcFNwYWNlLnh5LGZydXN0dW1FZGdlRmFsbG9mZik7Cn0KfQojaWZkZWYgSVNfTkRDX0hBTEZfWlJBTkdFCiNkZWZpbmUgWklOQ0xJUCBjbGlwU3BhY2UuegojZWxzZQojZGVmaW5lIFpJTkNMSVAgdXZEZXB0aC56CiNlbmRpZgojaWYgZGVmaW5lZChXRUJHTDIpIHx8IGRlZmluZWQoV0VCR1BVKSB8fCBkZWZpbmVkKE5BVElWRSkKI2RlZmluZSBHUkVBVEVTVF9MRVNTX1RIQU5fT05FIDAuOTk5OTk5OTQKI2RlZmluZSBpbmxpbmUKZmxvYXQgY29tcHV0ZVNoYWRvd1dpdGhDU01QQ0YxKGZsb2F0IGxheWVyLHZlYzQgdlBvc2l0aW9uRnJvbUxpZ2h0LGZsb2F0IGRlcHRoTWV0cmljLGhpZ2hwIHNhbXBsZXIyREFycmF5U2hhZG93IHNoYWRvd1NhbXBsZXIsZmxvYXQgZGFya25lc3MsZmxvYXQgZnJ1c3R1bUVkZ2VGYWxsb2ZmKQp7CnZlYzMgY2xpcFNwYWNlPXZQb3NpdGlvbkZyb21MaWdodC54eXovdlBvc2l0aW9uRnJvbUxpZ2h0Lnc7CnZlYzMgdXZEZXB0aD12ZWMzKDAuNSpjbGlwU3BhY2UueHl6K3ZlYzMoMC41KSk7CnV2RGVwdGguej1jbGFtcChaSU5DTElQLDAuLEdSRUFURVNUX0xFU1NfVEhBTl9PTkUpOwp2ZWM0IHV2RGVwdGhMYXllcj12ZWM0KHV2RGVwdGgueCx1dkRlcHRoLnksbGF5ZXIsdXZEZXB0aC56KTsKZmxvYXQgc2hhZG93PXRleHR1cmUyRChzaGFkb3dTYW1wbGVyLHV2RGVwdGhMYXllcik7CnNoYWRvdz1taXgoZGFya25lc3MsMS4sc2hhZG93KTsKcmV0dXJuIGNvbXB1dGVGYWxsT2ZmKHNoYWRvdyxjbGlwU3BhY2UueHksZnJ1c3R1bUVkZ2VGYWxsb2ZmKTsKfQojZGVmaW5lIGlubGluZQpmbG9hdCBjb21wdXRlU2hhZG93V2l0aENTTVBDRjMoZmxvYXQgbGF5ZXIsdmVjNCB2UG9zaXRpb25Gcm9tTGlnaHQsZmxvYXQgZGVwdGhNZXRyaWMsaGlnaHAgc2FtcGxlcjJEQXJyYXlTaGFkb3cgc2hhZG93U2FtcGxlcix2ZWMyIHNoYWRvd01hcFNpemVBbmRJbnZlcnNlLGZsb2F0IGRhcmtuZXNzLGZsb2F0IGZydXN0dW1FZGdlRmFsbG9mZikKewp2ZWMzIGNsaXBTcGFjZT12UG9zaXRpb25Gcm9tTGlnaHQueHl6L3ZQb3NpdGlvbkZyb21MaWdodC53Owp2ZWMzIHV2RGVwdGg9dmVjMygwLjUqY2xpcFNwYWNlLnh5eit2ZWMzKDAuNSkpOwp1dkRlcHRoLno9Y2xhbXAoWklOQ0xJUCwwLixHUkVBVEVTVF9MRVNTX1RIQU5fT05FKTsKdmVjMiB1dj11dkRlcHRoLnh5KnNoYWRvd01hcFNpemVBbmRJbnZlcnNlLng7IAp1dis9MC41OyAKdmVjMiBzdD1mcmFjdCh1dik7IAp2ZWMyIGJhc2VfdXY9Zmxvb3IodXYpLTAuNTsgCmJhc2VfdXYqPXNoYWRvd01hcFNpemVBbmRJbnZlcnNlLnk7IAp2ZWMyIHV2dzA9My4tMi4qc3Q7CnZlYzIgdXZ3MT0xLisyLipzdDsKdmVjMiB1PXZlYzIoKDIuLXN0LngpL3V2dzAueC0xLixzdC54L3V2dzEueCsxLikqc2hhZG93TWFwU2l6ZUFuZEludmVyc2UueTsKdmVjMiB2PXZlYzIoKDIuLXN0LnkpL3V2dzAueS0xLixzdC55L3V2dzEueSsxLikqc2hhZG93TWFwU2l6ZUFuZEludmVyc2UueTsKZmxvYXQgc2hhZG93PTAuOwpzaGFkb3crPXV2dzAueCp1dncwLnkqdGV4dHVyZTJEKHNoYWRvd1NhbXBsZXIsdmVjNChiYXNlX3V2Lnh5K3ZlYzIodVswXSx2WzBdKSxsYXllcix1dkRlcHRoLnopKTsKc2hhZG93Kz11dncxLngqdXZ3MC55KnRleHR1cmUyRChzaGFkb3dTYW1wbGVyLHZlYzQoYmFzZV91di54eSt2ZWMyKHVbMV0sdlswXSksbGF5ZXIsdXZEZXB0aC56KSk7CnNoYWRvdys9dXZ3MC54KnV2dzEueSp0ZXh0dXJlMkQoc2hhZG93U2FtcGxlcix2ZWM0KGJhc2VfdXYueHkrdmVjMih1WzBdLHZbMV0pLGxheWVyLHV2RGVwdGgueikpOwpzaGFkb3crPXV2dzEueCp1dncxLnkqdGV4dHVyZTJEKHNoYWRvd1NhbXBsZXIsdmVjNChiYXNlX3V2Lnh5K3ZlYzIodVsxXSx2WzFdKSxsYXllcix1dkRlcHRoLnopKTsKc2hhZG93PXNoYWRvdy8xNi47CnNoYWRvdz1taXgoZGFya25lc3MsMS4sc2hhZG93KTsKcmV0dXJuIGNvbXB1dGVGYWxsT2ZmKHNoYWRvdyxjbGlwU3BhY2UueHksZnJ1c3R1bUVkZ2VGYWxsb2ZmKTsKfQojZGVmaW5lIGlubGluZQpmbG9hdCBjb21wdXRlU2hhZG93V2l0aENTTVBDRjUoZmxvYXQgbGF5ZXIsdmVjNCB2UG9zaXRpb25Gcm9tTGlnaHQsZmxvYXQgZGVwdGhNZXRyaWMsaGlnaHAgc2FtcGxlcjJEQXJyYXlTaGFkb3cgc2hhZG93U2FtcGxlcix2ZWMyIHNoYWRvd01hcFNpemVBbmRJbnZlcnNlLGZsb2F0IGRhcmtuZXNzLGZsb2F0IGZydXN0dW1FZGdlRmFsbG9mZikKewp2ZWMzIGNsaXBTcGFjZT12UG9zaXRpb25Gcm9tTGlnaHQueHl6L3ZQb3NpdGlvbkZyb21MaWdodC53Owp2ZWMzIHV2RGVwdGg9dmVjMygwLjUqY2xpcFNwYWNlLnh5eit2ZWMzKDAuNSkpOwp1dkRlcHRoLno9Y2xhbXAoWklOQ0xJUCwwLixHUkVBVEVTVF9MRVNTX1RIQU5fT05FKTsKdmVjMiB1dj11dkRlcHRoLnh5KnNoYWRvd01hcFNpemVBbmRJbnZlcnNlLng7IAp1dis9MC41OyAKdmVjMiBzdD1mcmFjdCh1dik7IAp2ZWMyIGJhc2VfdXY9Zmxvb3IodXYpLTAuNTsgCmJhc2VfdXYqPXNoYWRvd01hcFNpemVBbmRJbnZlcnNlLnk7IAp2ZWMyIHV2dzA9NC4tMy4qc3Q7CnZlYzIgdXZ3MT12ZWMyKDcuKTsKdmVjMiB1dncyPTEuKzMuKnN0Owp2ZWMzIHU9dmVjMygoMy4tMi4qc3QueCkvdXZ3MC54LTIuLCgzLitzdC54KS91dncxLngsc3QueC91dncyLngrMi4pKnNoYWRvd01hcFNpemVBbmRJbnZlcnNlLnk7CnZlYzMgdj12ZWMzKCgzLi0yLipzdC55KS91dncwLnktMi4sKDMuK3N0LnkpL3V2dzEueSxzdC55L3V2dzIueSsyLikqc2hhZG93TWFwU2l6ZUFuZEludmVyc2UueTsKZmxvYXQgc2hhZG93PTAuOwpzaGFkb3crPXV2dzAueCp1dncwLnkqdGV4dHVyZTJEKHNoYWRvd1NhbXBsZXIsdmVjNChiYXNlX3V2Lnh5K3ZlYzIodVswXSx2WzBdKSxsYXllcix1dkRlcHRoLnopKTsKc2hhZG93Kz11dncxLngqdXZ3MC55KnRleHR1cmUyRChzaGFkb3dTYW1wbGVyLHZlYzQoYmFzZV91di54eSt2ZWMyKHVbMV0sdlswXSksbGF5ZXIsdXZEZXB0aC56KSk7CnNoYWRvdys9dXZ3Mi54KnV2dzAueSp0ZXh0dXJlMkQoc2hhZG93U2FtcGxlcix2ZWM0KGJhc2VfdXYueHkrdmVjMih1WzJdLHZbMF0pLGxheWVyLHV2RGVwdGgueikpOwpzaGFkb3crPXV2dzAueCp1dncxLnkqdGV4dHVyZTJEKHNoYWRvd1NhbXBsZXIsdmVjNChiYXNlX3V2Lnh5K3ZlYzIodVswXSx2WzFdKSxsYXllcix1dkRlcHRoLnopKTsKc2hhZG93Kz11dncxLngqdXZ3MS55KnRleHR1cmUyRChzaGFkb3dTYW1wbGVyLHZlYzQoYmFzZV91di54eSt2ZWMyKHVbMV0sdlsxXSksbGF5ZXIsdXZEZXB0aC56KSk7CnNoYWRvdys9dXZ3Mi54KnV2dzEueSp0ZXh0dXJlMkQoc2hhZG93U2FtcGxlcix2ZWM0KGJhc2VfdXYueHkrdmVjMih1WzJdLHZbMV0pLGxheWVyLHV2RGVwdGgueikpOwpzaGFkb3crPXV2dzAueCp1dncyLnkqdGV4dHVyZTJEKHNoYWRvd1NhbXBsZXIsdmVjNChiYXNlX3V2Lnh5K3ZlYzIodVswXSx2WzJdKSxsYXllcix1dkRlcHRoLnopKTsKc2hhZG93Kz11dncxLngqdXZ3Mi55KnRleHR1cmUyRChzaGFkb3dTYW1wbGVyLHZlYzQoYmFzZV91di54eSt2ZWMyKHVbMV0sdlsyXSksbGF5ZXIsdXZEZXB0aC56KSk7CnNoYWRvdys9dXZ3Mi54KnV2dzIueSp0ZXh0dXJlMkQoc2hhZG93U2FtcGxlcix2ZWM0KGJhc2VfdXYueHkrdmVjMih1WzJdLHZbMl0pLGxheWVyLHV2RGVwdGgueikpOwpzaGFkb3c9c2hhZG93LzE0NC47CnNoYWRvdz1taXgoZGFya25lc3MsMS4sc2hhZG93KTsKcmV0dXJuIGNvbXB1dGVGYWxsT2ZmKHNoYWRvdyxjbGlwU3BhY2UueHksZnJ1c3R1bUVkZ2VGYWxsb2ZmKTsKfQojZGVmaW5lIGlubGluZQpmbG9hdCBjb21wdXRlU2hhZG93V2l0aFBDRjEodmVjNCB2UG9zaXRpb25Gcm9tTGlnaHQsZmxvYXQgZGVwdGhNZXRyaWMsaGlnaHAgc2FtcGxlcjJEU2hhZG93IHNoYWRvd1NhbXBsZXIsZmxvYXQgZGFya25lc3MsZmxvYXQgZnJ1c3R1bUVkZ2VGYWxsb2ZmKQp7CmlmIChkZXB0aE1ldHJpYz4xLjAgfHwgZGVwdGhNZXRyaWM8MC4wKSB7CnJldHVybiAxLjA7Cn0KZWxzZQp7CnZlYzMgY2xpcFNwYWNlPXZQb3NpdGlvbkZyb21MaWdodC54eXovdlBvc2l0aW9uRnJvbUxpZ2h0Lnc7CnZlYzMgdXZEZXB0aD12ZWMzKDAuNSpjbGlwU3BhY2UueHl6K3ZlYzMoMC41KSk7CnV2RGVwdGguej1aSU5DTElQOwpmbG9hdCBzaGFkb3c9VEVYVFVSRUZVTkMoc2hhZG93U2FtcGxlcix1dkRlcHRoLDAuKTsKc2hhZG93PW1peChkYXJrbmVzcywxLixzaGFkb3cpOwpyZXR1cm4gY29tcHV0ZUZhbGxPZmYoc2hhZG93LGNsaXBTcGFjZS54eSxmcnVzdHVtRWRnZUZhbGxvZmYpOwp9Cn0KI2RlZmluZSBpbmxpbmUKZmxvYXQgY29tcHV0ZVNoYWRvd1dpdGhQQ0YzKHZlYzQgdlBvc2l0aW9uRnJvbUxpZ2h0LGZsb2F0IGRlcHRoTWV0cmljLGhpZ2hwIHNhbXBsZXIyRFNoYWRvdyBzaGFkb3dTYW1wbGVyLHZlYzIgc2hhZG93TWFwU2l6ZUFuZEludmVyc2UsZmxvYXQgZGFya25lc3MsZmxvYXQgZnJ1c3R1bUVkZ2VGYWxsb2ZmKQp7CmlmIChkZXB0aE1ldHJpYz4xLjAgfHwgZGVwdGhNZXRyaWM8MC4wKSB7CnJldHVybiAxLjA7Cn0KZWxzZQp7CnZlYzMgY2xpcFNwYWNlPXZQb3NpdGlvbkZyb21MaWdodC54eXovdlBvc2l0aW9uRnJvbUxpZ2h0Lnc7CnZlYzMgdXZEZXB0aD12ZWMzKDAuNSpjbGlwU3BhY2UueHl6K3ZlYzMoMC41KSk7CnV2RGVwdGguej1aSU5DTElQOwp2ZWMyIHV2PXV2RGVwdGgueHkqc2hhZG93TWFwU2l6ZUFuZEludmVyc2UueDsgCnV2Kz0wLjU7IAp2ZWMyIHN0PWZyYWN0KHV2KTsgCnZlYzIgYmFzZV91dj1mbG9vcih1diktMC41OyAKYmFzZV91dio9c2hhZG93TWFwU2l6ZUFuZEludmVyc2UueTsgCnZlYzIgdXZ3MD0zLi0yLipzdDsKdmVjMiB1dncxPTEuKzIuKnN0Owp2ZWMyIHU9dmVjMigoMi4tc3QueCkvdXZ3MC54LTEuLHN0LngvdXZ3MS54KzEuKSpzaGFkb3dNYXBTaXplQW5kSW52ZXJzZS55Owp2ZWMyIHY9dmVjMigoMi4tc3QueSkvdXZ3MC55LTEuLHN0LnkvdXZ3MS55KzEuKSpzaGFkb3dNYXBTaXplQW5kSW52ZXJzZS55OwpmbG9hdCBzaGFkb3c9MC47CnNoYWRvdys9dXZ3MC54KnV2dzAueSpURVhUVVJFRlVOQyhzaGFkb3dTYW1wbGVyLHZlYzMoYmFzZV91di54eSt2ZWMyKHVbMF0sdlswXSksdXZEZXB0aC56KSwwLik7CnNoYWRvdys9dXZ3MS54KnV2dzAueSpURVhUVVJFRlVOQyhzaGFkb3dTYW1wbGVyLHZlYzMoYmFzZV91di54eSt2ZWMyKHVbMV0sdlswXSksdXZEZXB0aC56KSwwLik7CnNoYWRvdys9dXZ3MC54KnV2dzEueSpURVhUVVJFRlVOQyhzaGFkb3dTYW1wbGVyLHZlYzMoYmFzZV91di54eSt2ZWMyKHVbMF0sdlsxXSksdXZEZXB0aC56KSwwLik7CnNoYWRvdys9dXZ3MS54KnV2dzEueSpURVhUVVJFRlVOQyhzaGFkb3dTYW1wbGVyLHZlYzMoYmFzZV91di54eSt2ZWMyKHVbMV0sdlsxXSksdXZEZXB0aC56KSwwLik7CnNoYWRvdz1zaGFkb3cvMTYuOwpzaGFkb3c9bWl4KGRhcmtuZXNzLDEuLHNoYWRvdyk7CnJldHVybiBjb21wdXRlRmFsbE9mZihzaGFkb3csY2xpcFNwYWNlLnh5LGZydXN0dW1FZGdlRmFsbG9mZik7Cn0KfQojZGVmaW5lIGlubGluZQpmbG9hdCBjb21wdXRlU2hhZG93V2l0aFBDRjUodmVjNCB2UG9zaXRpb25Gcm9tTGlnaHQsZmxvYXQgZGVwdGhNZXRyaWMsaGlnaHAgc2FtcGxlcjJEU2hhZG93IHNoYWRvd1NhbXBsZXIsdmVjMiBzaGFkb3dNYXBTaXplQW5kSW52ZXJzZSxmbG9hdCBkYXJrbmVzcyxmbG9hdCBmcnVzdHVtRWRnZUZhbGxvZmYpCnsKaWYgKGRlcHRoTWV0cmljPjEuMCB8fCBkZXB0aE1ldHJpYzwwLjApIHsKcmV0dXJuIDEuMDsKfQplbHNlCnsKdmVjMyBjbGlwU3BhY2U9dlBvc2l0aW9uRnJvbUxpZ2h0Lnh5ei92UG9zaXRpb25Gcm9tTGlnaHQudzsKdmVjMyB1dkRlcHRoPXZlYzMoMC41KmNsaXBTcGFjZS54eXordmVjMygwLjUpKTsKdXZEZXB0aC56PVpJTkNMSVA7CnZlYzIgdXY9dXZEZXB0aC54eSpzaGFkb3dNYXBTaXplQW5kSW52ZXJzZS54OyAKdXYrPTAuNTsgCnZlYzIgc3Q9ZnJhY3QodXYpOyAKdmVjMiBiYXNlX3V2PWZsb29yKHV2KS0wLjU7IApiYXNlX3V2Kj1zaGFkb3dNYXBTaXplQW5kSW52ZXJzZS55OyAKdmVjMiB1dncwPTQuLTMuKnN0Owp2ZWMyIHV2dzE9dmVjMig3Lik7CnZlYzIgdXZ3Mj0xLiszLipzdDsKdmVjMyB1PXZlYzMoKDMuLTIuKnN0LngpL3V2dzAueC0yLiwoMy4rc3QueCkvdXZ3MS54LHN0LngvdXZ3Mi54KzIuKSpzaGFkb3dNYXBTaXplQW5kSW52ZXJzZS55Owp2ZWMzIHY9dmVjMygoMy4tMi4qc3QueSkvdXZ3MC55LTIuLCgzLitzdC55KS91dncxLnksc3QueS91dncyLnkrMi4pKnNoYWRvd01hcFNpemVBbmRJbnZlcnNlLnk7CmZsb2F0IHNoYWRvdz0wLjsKc2hhZG93Kz11dncwLngqdXZ3MC55KlRFWFRVUkVGVU5DKHNoYWRvd1NhbXBsZXIsdmVjMyhiYXNlX3V2Lnh5K3ZlYzIodVswXSx2WzBdKSx1dkRlcHRoLnopLDAuKTsKc2hhZG93Kz11dncxLngqdXZ3MC55KlRFWFRVUkVGVU5DKHNoYWRvd1NhbXBsZXIsdmVjMyhiYXNlX3V2Lnh5K3ZlYzIodVsxXSx2WzBdKSx1dkRlcHRoLnopLDAuKTsKc2hhZG93Kz11dncyLngqdXZ3MC55KlRFWFRVUkVGVU5DKHNoYWRvd1NhbXBsZXIsdmVjMyhiYXNlX3V2Lnh5K3ZlYzIodVsyXSx2WzBdKSx1dkRlcHRoLnopLDAuKTsKc2hhZG93Kz11dncwLngqdXZ3MS55KlRFWFRVUkVGVU5DKHNoYWRvd1NhbXBsZXIsdmVjMyhiYXNlX3V2Lnh5K3ZlYzIodVswXSx2WzFdKSx1dkRlcHRoLnopLDAuKTsKc2hhZG93Kz11dncxLngqdXZ3MS55KlRFWFRVUkVGVU5DKHNoYWRvd1NhbXBsZXIsdmVjMyhiYXNlX3V2Lnh5K3ZlYzIodVsxXSx2WzFdKSx1dkRlcHRoLnopLDAuKTsKc2hhZG93Kz11dncyLngqdXZ3MS55KlRFWFRVUkVGVU5DKHNoYWRvd1NhbXBsZXIsdmVjMyhiYXNlX3V2Lnh5K3ZlYzIodVsyXSx2WzFdKSx1dkRlcHRoLnopLDAuKTsKc2hhZG93Kz11dncwLngqdXZ3Mi55KlRFWFRVUkVGVU5DKHNoYWRvd1NhbXBsZXIsdmVjMyhiYXNlX3V2Lnh5K3ZlYzIodVswXSx2WzJdKSx1dkRlcHRoLnopLDAuKTsKc2hhZG93Kz11dncxLngqdXZ3Mi55KlRFWFRVUkVGVU5DKHNoYWRvd1NhbXBsZXIsdmVjMyhiYXNlX3V2Lnh5K3ZlYzIodVsxXSx2WzJdKSx1dkRlcHRoLnopLDAuKTsKc2hhZG93Kz11dncyLngqdXZ3Mi55KlRFWFRVUkVGVU5DKHNoYWRvd1NhbXBsZXIsdmVjMyhiYXNlX3V2Lnh5K3ZlYzIodVsyXSx2WzJdKSx1dkRlcHRoLnopLDAuKTsKc2hhZG93PXNoYWRvdy8xNDQuOwpzaGFkb3c9bWl4KGRhcmtuZXNzLDEuLHNoYWRvdyk7CnJldHVybiBjb21wdXRlRmFsbE9mZihzaGFkb3csY2xpcFNwYWNlLnh5LGZydXN0dW1FZGdlRmFsbG9mZik7Cn0KfQpjb25zdCB2ZWMzIFBvaXNzb25TYW1wbGVyczMyWzY0XT12ZWMzWzY0XSgKdmVjMygwLjA2NDA3MDEzLDAuMDU0MDk5MjcsMC4pLAp2ZWMzKDAuNzM2NjU3NywwLjU3ODkzOTQsMC4pLAp2ZWMzKC0wLjYyNzA1NDIsLTAuNTMyMDI3OCwwLiksCnZlYzMoLTAuNDA5NjEwNywwLjg0MTEwOTUsMC4pLAp2ZWMzKDAuNjg0OTU2NCwtMC40OTkwODE4LDAuKSwKdmVjMygtMC44NzQxODEsLTAuMDQ1Nzk3MzUsMC4pLAp2ZWMzKDAuOTk4OTk5OCwwLjAwMDk4ODAwNjYsMC4pLAp2ZWMzKC0wLjAwNDkyMDU3OCwtMC45MTUxNjQ5LDAuKSwKdmVjMygwLjE4MDU3NjMsMC45NzQ3NDgzLDAuKSwKdmVjMygtMC4yMTM4NDUxLDAuMjYzNTgxOCwwLiksCnZlYzMoMC4xMDk4NDUsMC4zODg0Nzg1LDAuKSwKdmVjMygwLjA2ODc2NzU1LC0wLjM1ODEwNzQsMC4pLAp2ZWMzKDAuMzc0MDczLC0wLjc2NjEyNjYsMC4pLAp2ZWMzKDAuMzA3OTEzMiwtMC4xMjE2NzYzLDAuKSwKdmVjMygtMC4zNzk0MzM1LC0wLjgyNzE1ODMsMC4pLAp2ZWMzKC0wLjIwMzg3OCwtMC4wNzcxNTAzNCwwLiksCnZlYzMoMC41OTEyNjk3LDAuMTQ2OTc5OSwwLiksCnZlYzMoLTAuODgwNjksMC4zMDMxNzg0LDAuKSwKdmVjMygwLjUwNDAxMDgsMC44MjgzNzIyLDAuKSwKdmVjMygtMC41ODQ0MTI0LDAuNTQ5NDg3NywwLiksCnZlYzMoMC42MDE3Nzk5LC0wLjE3MjY2NTQsMC4pLAp2ZWMzKC0wLjU1NTQ5ODEsMC4xNTU5OTk3LDAuKSwKdmVjMygtMC4zMDE2MzY5LC0wLjM5MDA5MjgsMC4pLAp2ZWMzKC0wLjU1NTA2MzIsLTAuMTcyMzc2MiwwLiksCnZlYzMoMC45MjUwMjksMC4yOTk1MDQxLDAuKSwKdmVjMygtMC4yNDczMTM3LDAuNTUzODUwNSwwLiksCnZlYzMoMC45MTgzMDM3LC0wLjI4NjIzOTIsMC4pLAp2ZWMzKDAuMjQ2OTQyMSwwLjY3MTg3MTIsMC4pLAp2ZWMzKDAuMzkxNjM5NywtMC40MzI4MjA5LDAuKSwKdmVjMygtMC4wMzU3NjkyNywtMC42MjIwMDMyLDAuKSwKdmVjMygtMC4wNDY2MTI1NSwwLjc5OTUyMDEsMC4pLAp2ZWMzKDAuNDQwMjkyNCwwLjM2NDAzMTIsMC4pLAp2ZWMzKDAuLDAuLDAuKSwKdmVjMygwLiwwLiwwLiksCnZlYzMoMC4sMC4sMC4pLAp2ZWMzKDAuLDAuLDAuKSwKdmVjMygwLiwwLiwwLiksCnZlYzMoMC4sMC4sMC4pLAp2ZWMzKDAuLDAuLDAuKSwKdmVjMygwLiwwLiwwLiksCnZlYzMoMC4sMC4sMC4pLAp2ZWMzKDAuLDAuLDAuKSwKdmVjMygwLiwwLiwwLiksCnZlYzMoMC4sMC4sMC4pLAp2ZWMzKDAuLDAuLDAuKSwKdmVjMygwLiwwLiwwLiksCnZlYzMoMC4sMC4sMC4pLAp2ZWMzKDAuLDAuLDAuKSwKdmVjMygwLiwwLiwwLiksCnZlYzMoMC4sMC4sMC4pLAp2ZWMzKDAuLDAuLDAuKSwKdmVjMygwLiwwLiwwLiksCnZlYzMoMC4sMC4sMC4pLAp2ZWMzKDAuLDAuLDAuKSwKdmVjMygwLiwwLiwwLiksCnZlYzMoMC4sMC4sMC4pLAp2ZWMzKDAuLDAuLDAuKSwKdmVjMygwLiwwLiwwLiksCnZlYzMoMC4sMC4sMC4pLAp2ZWMzKDAuLDAuLDAuKSwKdmVjMygwLiwwLiwwLiksCnZlYzMoMC4sMC4sMC4pLAp2ZWMzKDAuLDAuLDAuKSwKdmVjMygwLiwwLiwwLikKKTsKY29uc3QgdmVjMyBQb2lzc29uU2FtcGxlcnM2NFs2NF09dmVjM1s2NF0oCnZlYzMoLTAuNjEzMzkyLDAuNjE3NDgxLDAuKSwKdmVjMygwLjE3MDAxOSwtMC4wNDAyNTQsMC4pLAp2ZWMzKC0wLjI5OTQxNywwLjc5MTkyNSwwLiksCnZlYzMoMC42NDU2ODAsMC40OTMyMTAsMC4pLAp2ZWMzKC0wLjY1MTc4NCwwLjcxNzg4NywwLiksCnZlYzMoMC40MjEwMDMsMC4wMjcwNzAsMC4pLAp2ZWMzKC0wLjgxNzE5NCwtMC4yNzEwOTYsMC4pLAp2ZWMzKC0wLjcwNTM3NCwtMC42NjgyMDMsMC4pLAp2ZWMzKDAuOTc3MDUwLC0wLjEwODYxNSwwLiksCnZlYzMoMC4wNjMzMjYsMC4xNDIzNjksMC4pLAp2ZWMzKDAuMjAzNTI4LDAuMjE0MzMxLDAuKSwKdmVjMygtMC42Njc1MzEsMC4zMjYwOTAsMC4pLAp2ZWMzKC0wLjA5ODQyMiwtMC4yOTU3NTUsMC4pLAp2ZWMzKC0wLjg4NTkyMiwwLjIxNTM2OSwwLiksCnZlYzMoMC41NjY2MzcsMC42MDUyMTMsMC4pLAp2ZWMzKDAuMDM5NzY2LC0wLjM5NjEwMCwwLiksCnZlYzMoMC43NTE5NDYsMC40NTMzNTIsMC4pLAp2ZWMzKDAuMDc4NzA3LC0wLjcxNTMyMywwLiksCnZlYzMoLTAuMDc1ODM4LC0wLjUyOTM0NCwwLiksCnZlYzMoMC43MjQ0NzksLTAuNTgwNzk4LDAuKSwKdmVjMygwLjIyMjk5OSwtMC4yMTUxMjUsMC4pLAp2ZWMzKC0wLjQ2NzU3NCwtMC40MDU0MzgsMC4pLAp2ZWMzKC0wLjI0ODI2OCwtMC44MTQ3NTMsMC4pLAp2ZWMzKDAuMzU0NDExLC0wLjg4NzU3MCwwLiksCnZlYzMoMC4xNzU4MTcsMC4zODIzNjYsMC4pLAp2ZWMzKDAuNDg3NDcyLC0wLjA2MzA4MiwwLiksCnZlYzMoLTAuMDg0MDc4LDAuODk4MzEyLDAuKSwKdmVjMygwLjQ4ODg3NiwtMC43ODM0NDEsMC4pLAp2ZWMzKDAuNDcwMDE2LDAuMjE3OTMzLDAuKSwKdmVjMygtMC42OTY4OTAsLTAuNTQ5NzkxLDAuKSwKdmVjMygtMC4xNDk2OTMsMC42MDU3NjIsMC4pLAp2ZWMzKDAuMDM0MjExLDAuOTc5OTgwLDAuKSwKdmVjMygwLjUwMzA5OCwtMC4zMDg4NzgsMC4pLAp2ZWMzKC0wLjAxNjIwNSwtMC44NzI5MjEsMC4pLAp2ZWMzKDAuMzg1Nzg0LC0wLjM5MzkwMiwwLiksCnZlYzMoLTAuMTQ2ODg2LC0wLjg1OTI0OSwwLiksCnZlYzMoMC42NDMzNjEsMC4xNjQwOTgsMC4pLAp2ZWMzKDAuNjM0Mzg4LC0wLjA0OTQ3MSwwLiksCnZlYzMoLTAuNjg4ODk0LDAuMDA3ODQzLDAuKSwKdmVjMygwLjQ2NDAzNCwtMC4xODg4MTgsMC4pLAp2ZWMzKC0wLjQ0MDg0MCwwLjEzNzQ4NiwwLiksCnZlYzMoMC4zNjQ0ODMsMC41MTE3MDQsMC4pLAp2ZWMzKDAuMDM0MDI4LDAuMzI1OTY4LDAuKSwKdmVjMygwLjA5OTA5NCwtMC4zMDgwMjMsMC4pLAp2ZWMzKDAuNjkzOTYwLC0wLjM2NjI1MywwLiksCnZlYzMoMC42Nzg4ODQsLTAuMjA0Njg4LDAuKSwKdmVjMygwLjAwMTgwMSwwLjc4MDMyOCwwLiksCnZlYzMoMC4xNDUxNzcsLTAuODk4OTg0LDAuKSwKdmVjMygwLjA2MjY1NSwtMC42MTE4NjYsMC4pLAp2ZWMzKDAuMzE1MjI2LC0wLjYwNDI5NywwLiksCnZlYzMoLTAuNzgwMTQ1LDAuNDg2MjUxLDAuKSwKdmVjMygtMC4zNzE4NjgsMC44ODIxMzgsMC4pLAp2ZWMzKDAuMjAwNDc2LDAuNDk0NDMwLDAuKSwKdmVjMygtMC40OTQ1NTIsLTAuNzExMDUxLDAuKSwKdmVjMygwLjYxMjQ3NiwwLjcwNTI1MiwwLiksCnZlYzMoLTAuNTc4ODQ1LC0wLjc2ODc5MiwwLiksCnZlYzMoLTAuNzcyNDU0LC0wLjA5MDk3NiwwLiksCnZlYzMoMC41MDQ0NDAsMC4zNzIyOTUsMC4pLAp2ZWMzKDAuMTU1NzM2LDAuMDY1MTU3LDAuKSwKdmVjMygwLjM5MTUyMiwwLjg0OTYwNSwwLiksCnZlYzMoLTAuNjIwMTA2LC0wLjMyODEwNCwwLiksCnZlYzMoMC43ODkyMzksLTAuNDE5OTY1LDAuKSwKdmVjMygtMC41NDUzOTYsMC41MzgxMzMsMC4pLAp2ZWMzKC0wLjE3ODU2NCwtMC41OTYwNTcsMC4pCik7CiNkZWZpbmUgaW5saW5lCmZsb2F0IGNvbXB1dGVTaGFkb3dXaXRoQ1NNUENTUyhmbG9hdCBsYXllcix2ZWM0IHZQb3NpdGlvbkZyb21MaWdodCxmbG9hdCBkZXB0aE1ldHJpYyxoaWdocCBzYW1wbGVyMkRBcnJheSBkZXB0aFNhbXBsZXIsaGlnaHAgc2FtcGxlcjJEQXJyYXlTaGFkb3cgc2hhZG93U2FtcGxlcixmbG9hdCBzaGFkb3dNYXBTaXplSW52ZXJzZSxmbG9hdCBsaWdodFNpemVVVixmbG9hdCBkYXJrbmVzcyxmbG9hdCBmcnVzdHVtRWRnZUZhbGxvZmYsaW50IHNlYXJjaFRhcENvdW50LGludCBwY2ZUYXBDb3VudCx2ZWMzWzY0XSBwb2lzc29uU2FtcGxlcnMsdmVjMiBsaWdodFNpemVVVkNvcnJlY3Rpb24sZmxvYXQgZGVwdGhDb3JyZWN0aW9uLGZsb2F0IHBlbnVtYnJhRGFya25lc3MpCnsKdmVjMyBjbGlwU3BhY2U9dlBvc2l0aW9uRnJvbUxpZ2h0Lnh5ei92UG9zaXRpb25Gcm9tTGlnaHQudzsKdmVjMyB1dkRlcHRoPXZlYzMoMC41KmNsaXBTcGFjZS54eXordmVjMygwLjUpKTsKdXZEZXB0aC56PWNsYW1wKFpJTkNMSVAsMC4sR1JFQVRFU1RfTEVTU19USEFOX09ORSk7CnZlYzQgdXZEZXB0aExheWVyPXZlYzQodXZEZXB0aC54LHV2RGVwdGgueSxsYXllcix1dkRlcHRoLnopOwpmbG9hdCBibG9ja2VyRGVwdGg9MC4wOwpmbG9hdCBzdW1CbG9ja2VyRGVwdGg9MC4wOwpmbG9hdCBudW1CbG9ja2VyPTAuMDsKZm9yIChpbnQgaT0wOyBpPHNlYXJjaFRhcENvdW50OyBpICsrKSB7CmJsb2NrZXJEZXB0aD10ZXh0dXJlMkQoZGVwdGhTYW1wbGVyLHZlYzModXZEZXB0aC54eSsobGlnaHRTaXplVVYqbGlnaHRTaXplVVZDb3JyZWN0aW9uKnNoYWRvd01hcFNpemVJbnZlcnNlKlBvaXNzb25TYW1wbGVyczMyW2ldLnh5KSxsYXllcikpLnI7CmlmIChibG9ja2VyRGVwdGg8ZGVwdGhNZXRyaWMpIHsKc3VtQmxvY2tlckRlcHRoKz1ibG9ja2VyRGVwdGg7Cm51bUJsb2NrZXIrKzsKfQp9CmZsb2F0IGF2Z0Jsb2NrZXJEZXB0aD1zdW1CbG9ja2VyRGVwdGgvbnVtQmxvY2tlcjsKZmxvYXQgQUFPZmZzZXQ9c2hhZG93TWFwU2l6ZUludmVyc2UqMTAuOwpmbG9hdCBwZW51bWJyYVJhdGlvPSgoZGVwdGhNZXRyaWMtYXZnQmxvY2tlckRlcHRoKSpkZXB0aENvcnJlY3Rpb24rQUFPZmZzZXQpOwp2ZWM0IGZpbHRlclJhZGl1cz12ZWM0KHBlbnVtYnJhUmF0aW8qbGlnaHRTaXplVVYqbGlnaHRTaXplVVZDb3JyZWN0aW9uKnNoYWRvd01hcFNpemVJbnZlcnNlLDAuLDAuKTsKZmxvYXQgcmFuZG9tPWdldFJhbmQodlBvc2l0aW9uRnJvbUxpZ2h0Lnh5KTsKZmxvYXQgcm90YXRpb25BbmdsZT1yYW5kb20qMy4xNDE1OTI2Owp2ZWMyIHJvdGF0aW9uVmVjdG9yPXZlYzIoY29zKHJvdGF0aW9uQW5nbGUpLHNpbihyb3RhdGlvbkFuZ2xlKSk7CmZsb2F0IHNoYWRvdz0wLjsKZm9yIChpbnQgaT0wOyBpPHBjZlRhcENvdW50OyBpKyspIHsKdmVjNCBvZmZzZXQ9dmVjNChwb2lzc29uU2FtcGxlcnNbaV0sMC4pOwpvZmZzZXQ9dmVjNChvZmZzZXQueCpyb3RhdGlvblZlY3Rvci54LW9mZnNldC55KnJvdGF0aW9uVmVjdG9yLnksb2Zmc2V0Lnkqcm90YXRpb25WZWN0b3IueCtvZmZzZXQueCpyb3RhdGlvblZlY3Rvci55LDAuLDAuKTsKc2hhZG93Kz10ZXh0dXJlMkQoc2hhZG93U2FtcGxlcix1dkRlcHRoTGF5ZXIrb2Zmc2V0KmZpbHRlclJhZGl1cyk7Cn0Kc2hhZG93Lz1mbG9hdChwY2ZUYXBDb3VudCk7CnNoYWRvdz1taXgoc2hhZG93LDEuLG1pbigoZGVwdGhNZXRyaWMtYXZnQmxvY2tlckRlcHRoKSpkZXB0aENvcnJlY3Rpb24qcGVudW1icmFEYXJrbmVzcywxLikpOwpzaGFkb3c9bWl4KGRhcmtuZXNzLDEuLHNoYWRvdyk7CmlmIChudW1CbG9ja2VyPDEuMCkgewpyZXR1cm4gMS4wOwp9CmVsc2UKewpyZXR1cm4gY29tcHV0ZUZhbGxPZmYoc2hhZG93LGNsaXBTcGFjZS54eSxmcnVzdHVtRWRnZUZhbGxvZmYpOwp9Cn0KI2RlZmluZSBpbmxpbmUKZmxvYXQgY29tcHV0ZVNoYWRvd1dpdGhQQ1NTKHZlYzQgdlBvc2l0aW9uRnJvbUxpZ2h0LGZsb2F0IGRlcHRoTWV0cmljLHNhbXBsZXIyRCBkZXB0aFNhbXBsZXIsaGlnaHAgc2FtcGxlcjJEU2hhZG93IHNoYWRvd1NhbXBsZXIsZmxvYXQgc2hhZG93TWFwU2l6ZUludmVyc2UsZmxvYXQgbGlnaHRTaXplVVYsZmxvYXQgZGFya25lc3MsZmxvYXQgZnJ1c3R1bUVkZ2VGYWxsb2ZmLGludCBzZWFyY2hUYXBDb3VudCxpbnQgcGNmVGFwQ291bnQsdmVjM1s2NF0gcG9pc3NvblNhbXBsZXJzKQp7CmlmIChkZXB0aE1ldHJpYz4xLjAgfHwgZGVwdGhNZXRyaWM8MC4wKSB7CnJldHVybiAxLjA7Cn0KZWxzZQp7CnZlYzMgY2xpcFNwYWNlPXZQb3NpdGlvbkZyb21MaWdodC54eXovdlBvc2l0aW9uRnJvbUxpZ2h0Lnc7CnZlYzMgdXZEZXB0aD12ZWMzKDAuNSpjbGlwU3BhY2UueHl6K3ZlYzMoMC41KSk7CnV2RGVwdGguej1aSU5DTElQOwpmbG9hdCBibG9ja2VyRGVwdGg9MC4wOwpmbG9hdCBzdW1CbG9ja2VyRGVwdGg9MC4wOwpmbG9hdCBudW1CbG9ja2VyPTAuMDsKZm9yIChpbnQgaT0wOyBpPHNlYXJjaFRhcENvdW50OyBpICsrKSB7CmJsb2NrZXJEZXB0aD1URVhUVVJFRlVOQyhkZXB0aFNhbXBsZXIsdXZEZXB0aC54eSsobGlnaHRTaXplVVYqc2hhZG93TWFwU2l6ZUludmVyc2UqUG9pc3NvblNhbXBsZXJzMzJbaV0ueHkpLDAuKS5yOwppZiAoYmxvY2tlckRlcHRoPGRlcHRoTWV0cmljKSB7CnN1bUJsb2NrZXJEZXB0aCs9YmxvY2tlckRlcHRoOwpudW1CbG9ja2VyKys7Cn0KfQppZiAobnVtQmxvY2tlcjwxLjApIHsKcmV0dXJuIDEuMDsKfQplbHNlCnsKZmxvYXQgYXZnQmxvY2tlckRlcHRoPXN1bUJsb2NrZXJEZXB0aC9udW1CbG9ja2VyOwpmbG9hdCBBQU9mZnNldD1zaGFkb3dNYXBTaXplSW52ZXJzZSoxMC47CmZsb2F0IHBlbnVtYnJhUmF0aW89KChkZXB0aE1ldHJpYy1hdmdCbG9ja2VyRGVwdGgpK0FBT2Zmc2V0KTsKZmxvYXQgZmlsdGVyUmFkaXVzPXBlbnVtYnJhUmF0aW8qbGlnaHRTaXplVVYqc2hhZG93TWFwU2l6ZUludmVyc2U7CmZsb2F0IHJhbmRvbT1nZXRSYW5kKHZQb3NpdGlvbkZyb21MaWdodC54eSk7CmZsb2F0IHJvdGF0aW9uQW5nbGU9cmFuZG9tKjMuMTQxNTkyNjsKdmVjMiByb3RhdGlvblZlY3Rvcj12ZWMyKGNvcyhyb3RhdGlvbkFuZ2xlKSxzaW4ocm90YXRpb25BbmdsZSkpOwpmbG9hdCBzaGFkb3c9MC47CmZvciAoaW50IGk9MDsgaTxwY2ZUYXBDb3VudDsgaSsrKSB7CnZlYzMgb2Zmc2V0PXBvaXNzb25TYW1wbGVyc1tpXTsKb2Zmc2V0PXZlYzMob2Zmc2V0Lngqcm90YXRpb25WZWN0b3IueC1vZmZzZXQueSpyb3RhdGlvblZlY3Rvci55LG9mZnNldC55KnJvdGF0aW9uVmVjdG9yLngrb2Zmc2V0Lngqcm90YXRpb25WZWN0b3IueSwwLik7CnNoYWRvdys9VEVYVFVSRUZVTkMoc2hhZG93U2FtcGxlcix1dkRlcHRoK29mZnNldCpmaWx0ZXJSYWRpdXMsMC4pOwp9CnNoYWRvdy89ZmxvYXQocGNmVGFwQ291bnQpOwpzaGFkb3c9bWl4KHNoYWRvdywxLixkZXB0aE1ldHJpYy1hdmdCbG9ja2VyRGVwdGgpOwpzaGFkb3c9bWl4KGRhcmtuZXNzLDEuLHNoYWRvdyk7CnJldHVybiBjb21wdXRlRmFsbE9mZihzaGFkb3csY2xpcFNwYWNlLnh5LGZydXN0dW1FZGdlRmFsbG9mZik7Cn0KfQp9CiNkZWZpbmUgaW5saW5lCmZsb2F0IGNvbXB1dGVTaGFkb3dXaXRoUENTUzE2KHZlYzQgdlBvc2l0aW9uRnJvbUxpZ2h0LGZsb2F0IGRlcHRoTWV0cmljLHNhbXBsZXIyRCBkZXB0aFNhbXBsZXIsaGlnaHAgc2FtcGxlcjJEU2hhZG93IHNoYWRvd1NhbXBsZXIsZmxvYXQgc2hhZG93TWFwU2l6ZUludmVyc2UsZmxvYXQgbGlnaHRTaXplVVYsZmxvYXQgZGFya25lc3MsZmxvYXQgZnJ1c3R1bUVkZ2VGYWxsb2ZmKQp7CnJldHVybiBjb21wdXRlU2hhZG93V2l0aFBDU1ModlBvc2l0aW9uRnJvbUxpZ2h0LGRlcHRoTWV0cmljLGRlcHRoU2FtcGxlcixzaGFkb3dTYW1wbGVyLHNoYWRvd01hcFNpemVJbnZlcnNlLGxpZ2h0U2l6ZVVWLGRhcmtuZXNzLGZydXN0dW1FZGdlRmFsbG9mZiwxNiwxNixQb2lzc29uU2FtcGxlcnMzMik7Cn0KI2RlZmluZSBpbmxpbmUKZmxvYXQgY29tcHV0ZVNoYWRvd1dpdGhQQ1NTMzIodmVjNCB2UG9zaXRpb25Gcm9tTGlnaHQsZmxvYXQgZGVwdGhNZXRyaWMsc2FtcGxlcjJEIGRlcHRoU2FtcGxlcixoaWdocCBzYW1wbGVyMkRTaGFkb3cgc2hhZG93U2FtcGxlcixmbG9hdCBzaGFkb3dNYXBTaXplSW52ZXJzZSxmbG9hdCBsaWdodFNpemVVVixmbG9hdCBkYXJrbmVzcyxmbG9hdCBmcnVzdHVtRWRnZUZhbGxvZmYpCnsKcmV0dXJuIGNvbXB1dGVTaGFkb3dXaXRoUENTUyh2UG9zaXRpb25Gcm9tTGlnaHQsZGVwdGhNZXRyaWMsZGVwdGhTYW1wbGVyLHNoYWRvd1NhbXBsZXIsc2hhZG93TWFwU2l6ZUludmVyc2UsbGlnaHRTaXplVVYsZGFya25lc3MsZnJ1c3R1bUVkZ2VGYWxsb2ZmLDE2LDMyLFBvaXNzb25TYW1wbGVyczMyKTsKfQojZGVmaW5lIGlubGluZQpmbG9hdCBjb21wdXRlU2hhZG93V2l0aFBDU1M2NCh2ZWM0IHZQb3NpdGlvbkZyb21MaWdodCxmbG9hdCBkZXB0aE1ldHJpYyxzYW1wbGVyMkQgZGVwdGhTYW1wbGVyLGhpZ2hwIHNhbXBsZXIyRFNoYWRvdyBzaGFkb3dTYW1wbGVyLGZsb2F0IHNoYWRvd01hcFNpemVJbnZlcnNlLGZsb2F0IGxpZ2h0U2l6ZVVWLGZsb2F0IGRhcmtuZXNzLGZsb2F0IGZydXN0dW1FZGdlRmFsbG9mZikKewpyZXR1cm4gY29tcHV0ZVNoYWRvd1dpdGhQQ1NTKHZQb3NpdGlvbkZyb21MaWdodCxkZXB0aE1ldHJpYyxkZXB0aFNhbXBsZXIsc2hhZG93U2FtcGxlcixzaGFkb3dNYXBTaXplSW52ZXJzZSxsaWdodFNpemVVVixkYXJrbmVzcyxmcnVzdHVtRWRnZUZhbGxvZmYsMzIsNjQsUG9pc3NvblNhbXBsZXJzNjQpOwp9CiNkZWZpbmUgaW5saW5lCmZsb2F0IGNvbXB1dGVTaGFkb3dXaXRoQ1NNUENTUzE2KGZsb2F0IGxheWVyLHZlYzQgdlBvc2l0aW9uRnJvbUxpZ2h0LGZsb2F0IGRlcHRoTWV0cmljLGhpZ2hwIHNhbXBsZXIyREFycmF5IGRlcHRoU2FtcGxlcixoaWdocCBzYW1wbGVyMkRBcnJheVNoYWRvdyBzaGFkb3dTYW1wbGVyLGZsb2F0IHNoYWRvd01hcFNpemVJbnZlcnNlLGZsb2F0IGxpZ2h0U2l6ZVVWLGZsb2F0IGRhcmtuZXNzLGZsb2F0IGZydXN0dW1FZGdlRmFsbG9mZix2ZWMyIGxpZ2h0U2l6ZVVWQ29ycmVjdGlvbixmbG9hdCBkZXB0aENvcnJlY3Rpb24sZmxvYXQgcGVudW1icmFEYXJrbmVzcykKewpyZXR1cm4gY29tcHV0ZVNoYWRvd1dpdGhDU01QQ1NTKGxheWVyLHZQb3NpdGlvbkZyb21MaWdodCxkZXB0aE1ldHJpYyxkZXB0aFNhbXBsZXIsc2hhZG93U2FtcGxlcixzaGFkb3dNYXBTaXplSW52ZXJzZSxsaWdodFNpemVVVixkYXJrbmVzcyxmcnVzdHVtRWRnZUZhbGxvZmYsMTYsMTYsUG9pc3NvblNhbXBsZXJzMzIsbGlnaHRTaXplVVZDb3JyZWN0aW9uLGRlcHRoQ29ycmVjdGlvbixwZW51bWJyYURhcmtuZXNzKTsKfQojZGVmaW5lIGlubGluZQpmbG9hdCBjb21wdXRlU2hhZG93V2l0aENTTVBDU1MzMihmbG9hdCBsYXllcix2ZWM0IHZQb3NpdGlvbkZyb21MaWdodCxmbG9hdCBkZXB0aE1ldHJpYyxoaWdocCBzYW1wbGVyMkRBcnJheSBkZXB0aFNhbXBsZXIsaGlnaHAgc2FtcGxlcjJEQXJyYXlTaGFkb3cgc2hhZG93U2FtcGxlcixmbG9hdCBzaGFkb3dNYXBTaXplSW52ZXJzZSxmbG9hdCBsaWdodFNpemVVVixmbG9hdCBkYXJrbmVzcyxmbG9hdCBmcnVzdHVtRWRnZUZhbGxvZmYsdmVjMiBsaWdodFNpemVVVkNvcnJlY3Rpb24sZmxvYXQgZGVwdGhDb3JyZWN0aW9uLGZsb2F0IHBlbnVtYnJhRGFya25lc3MpCnsKcmV0dXJuIGNvbXB1dGVTaGFkb3dXaXRoQ1NNUENTUyhsYXllcix2UG9zaXRpb25Gcm9tTGlnaHQsZGVwdGhNZXRyaWMsZGVwdGhTYW1wbGVyLHNoYWRvd1NhbXBsZXIsc2hhZG93TWFwU2l6ZUludmVyc2UsbGlnaHRTaXplVVYsZGFya25lc3MsZnJ1c3R1bUVkZ2VGYWxsb2ZmLDE2LDMyLFBvaXNzb25TYW1wbGVyczMyLGxpZ2h0U2l6ZVVWQ29ycmVjdGlvbixkZXB0aENvcnJlY3Rpb24scGVudW1icmFEYXJrbmVzcyk7Cn0KI2RlZmluZSBpbmxpbmUKZmxvYXQgY29tcHV0ZVNoYWRvd1dpdGhDU01QQ1NTNjQoZmxvYXQgbGF5ZXIsdmVjNCB2UG9zaXRpb25Gcm9tTGlnaHQsZmxvYXQgZGVwdGhNZXRyaWMsaGlnaHAgc2FtcGxlcjJEQXJyYXkgZGVwdGhTYW1wbGVyLGhpZ2hwIHNhbXBsZXIyREFycmF5U2hhZG93IHNoYWRvd1NhbXBsZXIsZmxvYXQgc2hhZG93TWFwU2l6ZUludmVyc2UsZmxvYXQgbGlnaHRTaXplVVYsZmxvYXQgZGFya25lc3MsZmxvYXQgZnJ1c3R1bUVkZ2VGYWxsb2ZmLHZlYzIgbGlnaHRTaXplVVZDb3JyZWN0aW9uLGZsb2F0IGRlcHRoQ29ycmVjdGlvbixmbG9hdCBwZW51bWJyYURhcmtuZXNzKQp7CnJldHVybiBjb21wdXRlU2hhZG93V2l0aENTTVBDU1MobGF5ZXIsdlBvc2l0aW9uRnJvbUxpZ2h0LGRlcHRoTWV0cmljLGRlcHRoU2FtcGxlcixzaGFkb3dTYW1wbGVyLHNoYWRvd01hcFNpemVJbnZlcnNlLGxpZ2h0U2l6ZVVWLGRhcmtuZXNzLGZydXN0dW1FZGdlRmFsbG9mZiwzMiw2NCxQb2lzc29uU2FtcGxlcnM2NCxsaWdodFNpemVVVkNvcnJlY3Rpb24sZGVwdGhDb3JyZWN0aW9uLHBlbnVtYnJhRGFya25lc3MpOwp9CiNlbmRpZgojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW0pvXT1laDtjb25zdCB0aD0ic2FtcGxlckZyYWdtZW50RGVjbGFyYXRpb24iLGloPWAjaWZkZWYgX0RFRklORU5BTUVfCiNpZiBfREVGSU5FTkFNRV9ESVJFQ1RVVj09MQojZGVmaW5lIHZfVkFSWUlOR05BTUVfVVYgdk1haW5VVjEKI2VsaWYgX0RFRklORU5BTUVfRElSRUNUVVY9PTIKI2RlZmluZSB2X1ZBUllJTkdOQU1FX1VWIHZNYWluVVYyCiNlbGlmIF9ERUZJTkVOQU1FX0RJUkVDVFVWPT0zCiNkZWZpbmUgdl9WQVJZSU5HTkFNRV9VViB2TWFpblVWMwojZWxpZiBfREVGSU5FTkFNRV9ESVJFQ1RVVj09NAojZGVmaW5lIHZfVkFSWUlOR05BTUVfVVYgdk1haW5VVjQKI2VsaWYgX0RFRklORU5BTUVfRElSRUNUVVY9PTUKI2RlZmluZSB2X1ZBUllJTkdOQU1FX1VWIHZNYWluVVY1CiNlbGlmIF9ERUZJTkVOQU1FX0RJUkVDVFVWPT02CiNkZWZpbmUgdl9WQVJZSU5HTkFNRV9VViB2TWFpblVWNgojZWxzZQp2YXJ5aW5nIHZlYzIgdl9WQVJZSU5HTkFNRV9VVjsKI2VuZGlmCnVuaWZvcm0gc2FtcGxlcjJEIF9TQU1QTEVSTkFNRV9TYW1wbGVyOwojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW3RoXT1paDtjb25zdCBzaD0iZnJlc25lbEZ1bmN0aW9uIixyaD1gI2lmZGVmIEZSRVNORUwKZmxvYXQgY29tcHV0ZUZyZXNuZWxUZXJtKHZlYzMgdmlld0RpcmVjdGlvbix2ZWMzIHdvcmxkTm9ybWFsLGZsb2F0IGJpYXMsZmxvYXQgcG93ZXIpCnsKZmxvYXQgZnJlc25lbFRlcm09cG93KGJpYXMrYWJzKGRvdCh2aWV3RGlyZWN0aW9uLHdvcmxkTm9ybWFsKSkscG93ZXIpOwpyZXR1cm4gY2xhbXAoZnJlc25lbFRlcm0sMC4sMS4pOwp9CiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbc2hdPXJoO2NvbnN0IG5oPSJyZWZsZWN0aW9uRnVuY3Rpb24iLGFoPWB2ZWMzIGNvbXB1dGVGaXhlZEVxdWlyZWN0YW5ndWxhckNvb3Jkcyh2ZWM0IHdvcmxkUG9zLHZlYzMgd29ybGROb3JtYWwsdmVjMyBkaXJlY3Rpb24pCnsKZmxvYXQgbG9uPWF0YW4oZGlyZWN0aW9uLnosZGlyZWN0aW9uLngpOwpmbG9hdCBsYXQ9YWNvcyhkaXJlY3Rpb24ueSk7CnZlYzIgc3BoZXJlQ29vcmRzPXZlYzIobG9uLGxhdCkqUkVDSVBST0NBTF9QSTIqMi4wOwpmbG9hdCBzPXNwaGVyZUNvb3Jkcy54KjAuNSswLjU7CmZsb2F0IHQ9c3BoZXJlQ29vcmRzLnk7CnJldHVybiB2ZWMzKHMsdCwwKTsgCn0KdmVjMyBjb21wdXRlTWlycm9yZWRGaXhlZEVxdWlyZWN0YW5ndWxhckNvb3Jkcyh2ZWM0IHdvcmxkUG9zLHZlYzMgd29ybGROb3JtYWwsdmVjMyBkaXJlY3Rpb24pCnsKZmxvYXQgbG9uPWF0YW4oZGlyZWN0aW9uLnosZGlyZWN0aW9uLngpOwpmbG9hdCBsYXQ9YWNvcyhkaXJlY3Rpb24ueSk7CnZlYzIgc3BoZXJlQ29vcmRzPXZlYzIobG9uLGxhdCkqUkVDSVBST0NBTF9QSTIqMi4wOwpmbG9hdCBzPXNwaGVyZUNvb3Jkcy54KjAuNSswLjU7CmZsb2F0IHQ9c3BoZXJlQ29vcmRzLnk7CnJldHVybiB2ZWMzKDEuMC1zLHQsMCk7IAp9CnZlYzMgY29tcHV0ZUVxdWlyZWN0YW5ndWxhckNvb3Jkcyh2ZWM0IHdvcmxkUG9zLHZlYzMgd29ybGROb3JtYWwsdmVjMyBleWVQb3NpdGlvbixtYXQ0IHJlZmxlY3Rpb25NYXRyaXgpCnsKdmVjMyBjYW1lcmFUb1ZlcnRleD1ub3JtYWxpemUod29ybGRQb3MueHl6LWV5ZVBvc2l0aW9uKTsKdmVjMyByPW5vcm1hbGl6ZShyZWZsZWN0KGNhbWVyYVRvVmVydGV4LHdvcmxkTm9ybWFsKSk7CnI9dmVjMyhyZWZsZWN0aW9uTWF0cml4KnZlYzQociwwKSk7CmZsb2F0IGxvbj1hdGFuKHIueixyLngpOwpmbG9hdCBsYXQ9YWNvcyhyLnkpOwp2ZWMyIHNwaGVyZUNvb3Jkcz12ZWMyKGxvbixsYXQpKlJFQ0lQUk9DQUxfUEkyKjIuMDsKZmxvYXQgcz1zcGhlcmVDb29yZHMueCowLjUrMC41OwpmbG9hdCB0PXNwaGVyZUNvb3Jkcy55OwpyZXR1cm4gdmVjMyhzLHQsMCk7Cn0KdmVjMyBjb21wdXRlU3BoZXJpY2FsQ29vcmRzKHZlYzQgd29ybGRQb3MsdmVjMyB3b3JsZE5vcm1hbCxtYXQ0IHZpZXcsbWF0NCByZWZsZWN0aW9uTWF0cml4KQp7CnZlYzMgdmlld0Rpcj1ub3JtYWxpemUodmVjMyh2aWV3KndvcmxkUG9zKSk7CnZlYzMgdmlld05vcm1hbD1ub3JtYWxpemUodmVjMyh2aWV3KnZlYzQod29ybGROb3JtYWwsMC4wKSkpOwp2ZWMzIHI9cmVmbGVjdCh2aWV3RGlyLHZpZXdOb3JtYWwpOwpyPXZlYzMocmVmbGVjdGlvbk1hdHJpeCp2ZWM0KHIsMCkpOwpyLno9ci56LTEuMDsKZmxvYXQgbT0yLjAqbGVuZ3RoKHIpOwpyZXR1cm4gdmVjMyhyLngvbSswLjUsMS4wLXIueS9tLTAuNSwwKTsKfQp2ZWMzIGNvbXB1dGVQbGFuYXJDb29yZHModmVjNCB3b3JsZFBvcyx2ZWMzIHdvcmxkTm9ybWFsLHZlYzMgZXllUG9zaXRpb24sbWF0NCByZWZsZWN0aW9uTWF0cml4KQp7CnZlYzMgdmlld0Rpcj13b3JsZFBvcy54eXotZXllUG9zaXRpb247CnZlYzMgY29vcmRzPW5vcm1hbGl6ZShyZWZsZWN0KHZpZXdEaXIsd29ybGROb3JtYWwpKTsKcmV0dXJuIHZlYzMocmVmbGVjdGlvbk1hdHJpeCp2ZWM0KGNvb3JkcywxKSk7Cn0KdmVjMyBjb21wdXRlQ3ViaWNDb29yZHModmVjNCB3b3JsZFBvcyx2ZWMzIHdvcmxkTm9ybWFsLHZlYzMgZXllUG9zaXRpb24sbWF0NCByZWZsZWN0aW9uTWF0cml4KQp7CnZlYzMgdmlld0Rpcj1ub3JtYWxpemUod29ybGRQb3MueHl6LWV5ZVBvc2l0aW9uKTsKdmVjMyBjb29yZHM9cmVmbGVjdCh2aWV3RGlyLHdvcmxkTm9ybWFsKTsKY29vcmRzPXZlYzMocmVmbGVjdGlvbk1hdHJpeCp2ZWM0KGNvb3JkcywwKSk7CiNpZmRlZiBJTlZFUlRDVUJJQ01BUApjb29yZHMueSo9LTEuMDsKI2VuZGlmCnJldHVybiBjb29yZHM7Cn0KdmVjMyBjb21wdXRlQ3ViaWNMb2NhbENvb3Jkcyh2ZWM0IHdvcmxkUG9zLHZlYzMgd29ybGROb3JtYWwsdmVjMyBleWVQb3NpdGlvbixtYXQ0IHJlZmxlY3Rpb25NYXRyaXgsdmVjMyByZWZsZWN0aW9uU2l6ZSx2ZWMzIHJlZmxlY3Rpb25Qb3NpdGlvbikKewp2ZWMzIHZpZXdEaXI9bm9ybWFsaXplKHdvcmxkUG9zLnh5ei1leWVQb3NpdGlvbik7CnZlYzMgY29vcmRzPXJlZmxlY3Qodmlld0Rpcix3b3JsZE5vcm1hbCk7CmNvb3Jkcz1wYXJhbGxheENvcnJlY3ROb3JtYWwod29ybGRQb3MueHl6LGNvb3JkcyxyZWZsZWN0aW9uU2l6ZSxyZWZsZWN0aW9uUG9zaXRpb24pOwpjb29yZHM9dmVjMyhyZWZsZWN0aW9uTWF0cml4KnZlYzQoY29vcmRzLDApKTsKI2lmZGVmIElOVkVSVENVQklDTUFQCmNvb3Jkcy55Kj0tMS4wOwojZW5kaWYKcmV0dXJuIGNvb3JkczsKfQp2ZWMzIGNvbXB1dGVQcm9qZWN0aW9uQ29vcmRzKHZlYzQgd29ybGRQb3MsbWF0NCB2aWV3LG1hdDQgcmVmbGVjdGlvbk1hdHJpeCkKewpyZXR1cm4gdmVjMyhyZWZsZWN0aW9uTWF0cml4Kih2aWV3KndvcmxkUG9zKSk7Cn0KdmVjMyBjb21wdXRlU2t5Qm94Q29vcmRzKHZlYzMgcG9zaXRpb25XLG1hdDQgcmVmbGVjdGlvbk1hdHJpeCkKewpyZXR1cm4gdmVjMyhyZWZsZWN0aW9uTWF0cml4KnZlYzQocG9zaXRpb25XLDEuKSk7Cn0KI2lmZGVmIFJFRkxFQ1RJT04KdmVjMyBjb21wdXRlUmVmbGVjdGlvbkNvb3Jkcyh2ZWM0IHdvcmxkUG9zLHZlYzMgd29ybGROb3JtYWwpCnsKI2lmZGVmIFJFRkxFQ1RJT05NQVBfTUlSUk9SRURFUVVJUkVDVEFOR1VMQVJfRklYRUQKdmVjMyBkaXJlY3Rpb249bm9ybWFsaXplKHZEaXJlY3Rpb25XKTsKcmV0dXJuIGNvbXB1dGVNaXJyb3JlZEZpeGVkRXF1aXJlY3Rhbmd1bGFyQ29vcmRzKHdvcmxkUG9zLHdvcmxkTm9ybWFsLGRpcmVjdGlvbik7CiNlbmRpZgojaWZkZWYgUkVGTEVDVElPTk1BUF9FUVVJUkVDVEFOR1VMQVJfRklYRUQKdmVjMyBkaXJlY3Rpb249bm9ybWFsaXplKHZEaXJlY3Rpb25XKTsKcmV0dXJuIGNvbXB1dGVGaXhlZEVxdWlyZWN0YW5ndWxhckNvb3Jkcyh3b3JsZFBvcyx3b3JsZE5vcm1hbCxkaXJlY3Rpb24pOwojZW5kaWYKI2lmZGVmIFJFRkxFQ1RJT05NQVBfRVFVSVJFQ1RBTkdVTEFSCnJldHVybiBjb21wdXRlRXF1aXJlY3Rhbmd1bGFyQ29vcmRzKHdvcmxkUG9zLHdvcmxkTm9ybWFsLHZFeWVQb3NpdGlvbi54eXoscmVmbGVjdGlvbk1hdHJpeCk7CiNlbmRpZgojaWZkZWYgUkVGTEVDVElPTk1BUF9TUEhFUklDQUwKcmV0dXJuIGNvbXB1dGVTcGhlcmljYWxDb29yZHMod29ybGRQb3Msd29ybGROb3JtYWwsdmlldyxyZWZsZWN0aW9uTWF0cml4KTsKI2VuZGlmCiNpZmRlZiBSRUZMRUNUSU9OTUFQX1BMQU5BUgpyZXR1cm4gY29tcHV0ZVBsYW5hckNvb3Jkcyh3b3JsZFBvcyx3b3JsZE5vcm1hbCx2RXllUG9zaXRpb24ueHl6LHJlZmxlY3Rpb25NYXRyaXgpOwojZW5kaWYKI2lmZGVmIFJFRkxFQ1RJT05NQVBfQ1VCSUMKI2lmZGVmIFVTRV9MT0NBTF9SRUZMRUNUSU9OTUFQX0NVQklDCnJldHVybiBjb21wdXRlQ3ViaWNMb2NhbENvb3Jkcyh3b3JsZFBvcyx3b3JsZE5vcm1hbCx2RXllUG9zaXRpb24ueHl6LHJlZmxlY3Rpb25NYXRyaXgsdlJlZmxlY3Rpb25TaXplLHZSZWZsZWN0aW9uUG9zaXRpb24pOwojZWxzZQpyZXR1cm4gY29tcHV0ZUN1YmljQ29vcmRzKHdvcmxkUG9zLHdvcmxkTm9ybWFsLHZFeWVQb3NpdGlvbi54eXoscmVmbGVjdGlvbk1hdHJpeCk7CiNlbmRpZgojZW5kaWYKI2lmZGVmIFJFRkxFQ1RJT05NQVBfUFJPSkVDVElPTgpyZXR1cm4gY29tcHV0ZVByb2plY3Rpb25Db29yZHMod29ybGRQb3MsdmlldyxyZWZsZWN0aW9uTWF0cml4KTsKI2VuZGlmCiNpZmRlZiBSRUZMRUNUSU9OTUFQX1NLWUJPWApyZXR1cm4gY29tcHV0ZVNreUJveENvb3Jkcyh2UG9zaXRpb25VVlcscmVmbGVjdGlvbk1hdHJpeCk7CiNlbmRpZgojaWZkZWYgUkVGTEVDVElPTk1BUF9FWFBMSUNJVApyZXR1cm4gdmVjMygwLDAsMCk7CiNlbmRpZgp9CiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbbmhdPWFoO2NvbnN0IG9oPSJpbWFnZVByb2Nlc3NpbmdEZWNsYXJhdGlvbiIsaGg9YCNpZmRlZiBFWFBPU1VSRQp1bmlmb3JtIGZsb2F0IGV4cG9zdXJlTGluZWFyOwojZW5kaWYKI2lmZGVmIENPTlRSQVNUCnVuaWZvcm0gZmxvYXQgY29udHJhc3Q7CiNlbmRpZgojaWYgZGVmaW5lZChWSUdORVRURSkgfHwgZGVmaW5lZChESVRIRVIpCnVuaWZvcm0gdmVjMiB2SW52ZXJzZVNjcmVlblNpemU7CiNlbmRpZgojaWZkZWYgVklHTkVUVEUKdW5pZm9ybSB2ZWM0IHZpZ25ldHRlU2V0dGluZ3MxOwp1bmlmb3JtIHZlYzQgdmlnbmV0dGVTZXR0aW5nczI7CiNlbmRpZgojaWZkZWYgQ09MT1JDVVJWRVMKdW5pZm9ybSB2ZWM0IHZDYW1lcmFDb2xvckN1cnZlTmVnYXRpdmU7CnVuaWZvcm0gdmVjNCB2Q2FtZXJhQ29sb3JDdXJ2ZU5ldXRyYWw7CnVuaWZvcm0gdmVjNCB2Q2FtZXJhQ29sb3JDdXJ2ZVBvc2l0aXZlOwojZW5kaWYKI2lmZGVmIENPTE9SR1JBRElORwojaWZkZWYgQ09MT1JHUkFESU5HM0QKdW5pZm9ybSBoaWdocCBzYW1wbGVyM0QgdHhDb2xvclRyYW5zZm9ybTsKI2Vsc2UKdW5pZm9ybSBzYW1wbGVyMkQgdHhDb2xvclRyYW5zZm9ybTsKI2VuZGlmCnVuaWZvcm0gdmVjNCBjb2xvclRyYW5zZm9ybVNldHRpbmdzOwojZW5kaWYKI2lmZGVmIERJVEhFUgp1bmlmb3JtIGZsb2F0IGRpdGhlckludGVuc2l0eTsKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtvaF09aGg7Y29uc3QgbGg9ImltYWdlUHJvY2Vzc2luZ0Z1bmN0aW9ucyIsY2g9YCNpZiBkZWZpbmVkKENPTE9SR1JBRElORykgJiYgIWRlZmluZWQoQ09MT1JHUkFESU5HM0QpCi8qKiAKKiBQb2x5ZmlsbCBmb3IgU0FNUExFX1RFWFRVUkVfM0Qsd2hpY2ggaXMgdW5zdXBwb3J0ZWQgaW4gV2ViR0wuCiogc2FtcGxlcjNkU2V0dGluZy54PXRleHR1cmVPZmZzZXQgKDAuNS90ZXh0dXJlU2l6ZSkuCiogc2FtcGxlcjNkU2V0dGluZy55PXRleHR1cmVTaXplLgoqLwojZGVmaW5lIGlubGluZQp2ZWMzIHNhbXBsZVRleHR1cmUzRChzYW1wbGVyMkQgY29sb3JUcmFuc2Zvcm0sdmVjMyBjb2xvcix2ZWMyIHNhbXBsZXIzZFNldHRpbmcpCnsKZmxvYXQgc2xpY2VTaXplPTIuMCpzYW1wbGVyM2RTZXR0aW5nLng7IAojaWZkZWYgU0FNUExFUjNER1JFRU5ERVBUSApmbG9hdCBzbGljZUNvbnRpbnVvdXM9KGNvbG9yLmctc2FtcGxlcjNkU2V0dGluZy54KSpzYW1wbGVyM2RTZXR0aW5nLnk7CiNlbHNlCmZsb2F0IHNsaWNlQ29udGludW91cz0oY29sb3IuYi1zYW1wbGVyM2RTZXR0aW5nLngpKnNhbXBsZXIzZFNldHRpbmcueTsKI2VuZGlmCmZsb2F0IHNsaWNlSW50ZWdlcj1mbG9vcihzbGljZUNvbnRpbnVvdXMpOwpmbG9hdCBzbGljZUZyYWN0aW9uPXNsaWNlQ29udGludW91cy1zbGljZUludGVnZXI7CiNpZmRlZiBTQU1QTEVSM0RHUkVFTkRFUFRICnZlYzIgc2xpY2VVVj1jb2xvci5yYjsKI2Vsc2UKdmVjMiBzbGljZVVWPWNvbG9yLnJnOwojZW5kaWYKc2xpY2VVVi54Kj1zbGljZVNpemU7CnNsaWNlVVYueCs9c2xpY2VJbnRlZ2VyKnNsaWNlU2l6ZTsKc2xpY2VVVj1zYXR1cmF0ZShzbGljZVVWKTsKdmVjNCBzbGljZTBDb2xvcj10ZXh0dXJlMkQoY29sb3JUcmFuc2Zvcm0sc2xpY2VVVik7CnNsaWNlVVYueCs9c2xpY2VTaXplOwpzbGljZVVWPXNhdHVyYXRlKHNsaWNlVVYpOwp2ZWM0IHNsaWNlMUNvbG9yPXRleHR1cmUyRChjb2xvclRyYW5zZm9ybSxzbGljZVVWKTsKdmVjMyByZXN1bHQ9bWl4KHNsaWNlMENvbG9yLnJnYixzbGljZTFDb2xvci5yZ2Isc2xpY2VGcmFjdGlvbik7CiNpZmRlZiBTQU1QTEVSM0RCR1JNQVAKY29sb3IucmdiPXJlc3VsdC5yZ2I7CiNlbHNlCmNvbG9yLnJnYj1yZXN1bHQuYmdyOwojZW5kaWYKcmV0dXJuIGNvbG9yOwp9CiNlbmRpZgojaWZkZWYgVE9ORU1BUFBJTkdfQUNFUwpjb25zdCBtYXQzIEFDRVNJbnB1dE1hdD1tYXQzKAp2ZWMzKDAuNTk3MTksMC4wNzYwMCwwLjAyODQwKSwKdmVjMygwLjM1NDU4LDAuOTA4MzQsMC4xMzM4MyksCnZlYzMoMC4wNDgyMywwLjAxNTY2LDAuODM3NzcpCik7CmNvbnN0IG1hdDMgQUNFU091dHB1dE1hdD1tYXQzKAp2ZWMzKCAxLjYwNDc1LC0wLjEwMjA4LC0wLjAwMzI3KSwKdmVjMygtMC41MzEwOCwgMS4xMDgxMywtMC4wNzI3NiksCnZlYzMoLTAuMDczNjcsLTAuMDA2MDUsIDEuMDc2MDIpCik7CnZlYzMgUlJUQW5kT0RURml0KHZlYzMgdikKewp2ZWMzIGE9dioodiswLjAyNDU3ODYpLTAuMDAwMDkwNTM3Owp2ZWMzIGI9diooMC45ODM3MjkqdiswLjQzMjk1MTApKzAuMjM4MDgxOwpyZXR1cm4gYS9iOwp9CnZlYzMgQUNFU0ZpdHRlZCh2ZWMzIGNvbG9yKQp7CmNvbG9yPUFDRVNJbnB1dE1hdCpjb2xvcjsKY29sb3I9UlJUQW5kT0RURml0KGNvbG9yKTsKY29sb3I9QUNFU091dHB1dE1hdCpjb2xvcjsKY29sb3I9c2F0dXJhdGUoY29sb3IpOwpyZXR1cm4gY29sb3I7Cn0KI2VuZGlmCiNkZWZpbmUgQ1VTVE9NX0lNQUdFUFJPQ0VTU0lOR0ZVTkNUSU9OU19ERUZJTklUSU9OUwp2ZWM0IGFwcGx5SW1hZ2VQcm9jZXNzaW5nKHZlYzQgcmVzdWx0KSB7CiNkZWZpbmUgQ1VTVE9NX0lNQUdFUFJPQ0VTU0lOR0ZVTkNUSU9OU19VUERBVEVSRVNVTFRfQVRTVEFSVAojaWZkZWYgRVhQT1NVUkUKcmVzdWx0LnJnYio9ZXhwb3N1cmVMaW5lYXI7CiNlbmRpZgojaWZkZWYgVklHTkVUVEUKdmVjMiB2aWV3cG9ydFhZPWdsX0ZyYWdDb29yZC54eSp2SW52ZXJzZVNjcmVlblNpemU7CnZpZXdwb3J0WFk9dmlld3BvcnRYWSoyLjAtMS4wOwp2ZWMzIHZpZ25ldHRlWFkxPXZlYzModmlld3BvcnRYWSp2aWduZXR0ZVNldHRpbmdzMS54eSt2aWduZXR0ZVNldHRpbmdzMS56dywxLjApOwpmbG9hdCB2aWduZXR0ZVRlcm09ZG90KHZpZ25ldHRlWFkxLHZpZ25ldHRlWFkxKTsKZmxvYXQgdmlnbmV0dGU9cG93KHZpZ25ldHRlVGVybSx2aWduZXR0ZVNldHRpbmdzMi53KTsKdmVjMyB2aWduZXR0ZUNvbG9yPXZpZ25ldHRlU2V0dGluZ3MyLnJnYjsKI2lmZGVmIFZJR05FVFRFQkxFTkRNT0RFTVVMVElQTFkKdmVjMyB2aWduZXR0ZUNvbG9yTXVsdGlwbGllcj1taXgodmlnbmV0dGVDb2xvcix2ZWMzKDEsMSwxKSx2aWduZXR0ZSk7CnJlc3VsdC5yZ2IqPXZpZ25ldHRlQ29sb3JNdWx0aXBsaWVyOwojZW5kaWYKI2lmZGVmIFZJR05FVFRFQkxFTkRNT0RFT1BBUVVFCnJlc3VsdC5yZ2I9bWl4KHZpZ25ldHRlQ29sb3IscmVzdWx0LnJnYix2aWduZXR0ZSk7CiNlbmRpZgojZW5kaWYKI2lmZGVmIFRPTkVNQVBQSU5HCiNpZmRlZiBUT05FTUFQUElOR19BQ0VTCnJlc3VsdC5yZ2I9QUNFU0ZpdHRlZChyZXN1bHQucmdiKTsKI2Vsc2UKY29uc3QgZmxvYXQgdG9uZW1hcHBpbmdDYWxpYnJhdGlvbj0xLjU5MDU3OTsKcmVzdWx0LnJnYj0xLjAtZXhwMigtdG9uZW1hcHBpbmdDYWxpYnJhdGlvbipyZXN1bHQucmdiKTsKI2VuZGlmCiNlbmRpZgpyZXN1bHQucmdiPXRvR2FtbWFTcGFjZShyZXN1bHQucmdiKTsKcmVzdWx0LnJnYj1zYXR1cmF0ZShyZXN1bHQucmdiKTsKI2lmZGVmIENPTlRSQVNUCnZlYzMgcmVzdWx0SGlnaENvbnRyYXN0PXJlc3VsdC5yZ2IqcmVzdWx0LnJnYiooMy4wLTIuMCpyZXN1bHQucmdiKTsKaWYgKGNvbnRyYXN0PDEuMCkgewpyZXN1bHQucmdiPW1peCh2ZWMzKDAuNSwwLjUsMC41KSxyZXN1bHQucmdiLGNvbnRyYXN0KTsKfSBlbHNlIHsKcmVzdWx0LnJnYj1taXgocmVzdWx0LnJnYixyZXN1bHRIaWdoQ29udHJhc3QsY29udHJhc3QtMS4wKTsKfQojZW5kaWYKI2lmZGVmIENPTE9SR1JBRElORwp2ZWMzIGNvbG9yVHJhbnNmb3JtSW5wdXQ9cmVzdWx0LnJnYipjb2xvclRyYW5zZm9ybVNldHRpbmdzLnh4eCtjb2xvclRyYW5zZm9ybVNldHRpbmdzLnl5eTsKI2lmZGVmIENPTE9SR1JBRElORzNECnZlYzMgY29sb3JUcmFuc2Zvcm1PdXRwdXQ9dGV4dHVyZSh0eENvbG9yVHJhbnNmb3JtLGNvbG9yVHJhbnNmb3JtSW5wdXQpLnJnYjsKI2Vsc2UKdmVjMyBjb2xvclRyYW5zZm9ybU91dHB1dD1zYW1wbGVUZXh0dXJlM0QodHhDb2xvclRyYW5zZm9ybSxjb2xvclRyYW5zZm9ybUlucHV0LGNvbG9yVHJhbnNmb3JtU2V0dGluZ3MueXopLnJnYjsKI2VuZGlmCnJlc3VsdC5yZ2I9bWl4KHJlc3VsdC5yZ2IsY29sb3JUcmFuc2Zvcm1PdXRwdXQsY29sb3JUcmFuc2Zvcm1TZXR0aW5ncy53d3cpOwojZW5kaWYKI2lmZGVmIENPTE9SQ1VSVkVTCmZsb2F0IGx1bWE9Z2V0THVtaW5hbmNlKHJlc3VsdC5yZ2IpOwp2ZWMyIGN1cnZlTWl4PWNsYW1wKHZlYzIobHVtYSozLjAtMS41LGx1bWEqLTMuMCsxLjUpLHZlYzIoMC4wKSx2ZWMyKDEuMCkpOwp2ZWM0IGNvbG9yQ3VydmU9dkNhbWVyYUNvbG9yQ3VydmVOZXV0cmFsK2N1cnZlTWl4LngqdkNhbWVyYUNvbG9yQ3VydmVQb3NpdGl2ZS1jdXJ2ZU1peC55KnZDYW1lcmFDb2xvckN1cnZlTmVnYXRpdmU7CnJlc3VsdC5yZ2IqPWNvbG9yQ3VydmUucmdiOwpyZXN1bHQucmdiPW1peCh2ZWMzKGx1bWEpLHJlc3VsdC5yZ2IsY29sb3JDdXJ2ZS5hKTsKI2VuZGlmCiNpZmRlZiBESVRIRVIKZmxvYXQgcmFuZD1nZXRSYW5kKGdsX0ZyYWdDb29yZC54eSp2SW52ZXJzZVNjcmVlblNpemUpOwpmbG9hdCBkaXRoZXI9bWl4KC1kaXRoZXJJbnRlbnNpdHksZGl0aGVySW50ZW5zaXR5LHJhbmQpOwpyZXN1bHQucmdiPXNhdHVyYXRlKHJlc3VsdC5yZ2IrdmVjMyhkaXRoZXIpKTsKI2VuZGlmCiNkZWZpbmUgQ1VTVE9NX0lNQUdFUFJPQ0VTU0lOR0ZVTkNUSU9OU19VUERBVEVSRVNVTFRfQVRFTkQKcmV0dXJuIHJlc3VsdDsKfWA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtsaF09Y2g7Y29uc3QgdWg9ImJ1bXBGcmFnbWVudE1haW5GdW5jdGlvbnMiLGRoPWAjaWYgZGVmaW5lZChCVU1QKSB8fCBkZWZpbmVkKENMRUFSQ09BVF9CVU1QKSB8fCBkZWZpbmVkKEFOSVNPVFJPUElDKSB8fCBkZWZpbmVkKERFVEFJTCkKI2lmIGRlZmluZWQoVEFOR0VOVCkgJiYgZGVmaW5lZChOT1JNQUwpIAp2YXJ5aW5nIG1hdDMgdlRCTjsKI2VuZGlmCiNpZmRlZiBPQkpFQ1RTUEFDRV9OT1JNQUxNQVAKdW5pZm9ybSBtYXQ0IG5vcm1hbE1hdHJpeDsKI2VuZGlmCnZlYzMgcGVydHVyYk5vcm1hbEJhc2UobWF0MyBjb3RhbmdlbnRGcmFtZSx2ZWMzIG5vcm1hbCxmbG9hdCBzY2FsZSkKewojaWZkZWYgTk9STUFMWFlTQ0FMRQpub3JtYWw9bm9ybWFsaXplKG5vcm1hbCp2ZWMzKHNjYWxlLHNjYWxlLDEuMCkpOwojZW5kaWYKcmV0dXJuIG5vcm1hbGl6ZShjb3RhbmdlbnRGcmFtZSpub3JtYWwpOwp9CnZlYzMgcGVydHVyYk5vcm1hbChtYXQzIGNvdGFuZ2VudEZyYW1lLHZlYzMgdGV4dHVyZVNhbXBsZSxmbG9hdCBzY2FsZSkKewpyZXR1cm4gcGVydHVyYk5vcm1hbEJhc2UoY290YW5nZW50RnJhbWUsdGV4dHVyZVNhbXBsZSoyLjAtMS4wLHNjYWxlKTsKfQptYXQzIGNvdGFuZ2VudF9mcmFtZSh2ZWMzIG5vcm1hbCx2ZWMzIHAsdmVjMiB1dix2ZWMyIHRhbmdlbnRTcGFjZVBhcmFtcykKewp2ZWMzIGRwMT1kRmR4KHApOwp2ZWMzIGRwMj1kRmR5KHApOwp2ZWMyIGR1djE9ZEZkeCh1dik7CnZlYzIgZHV2Mj1kRmR5KHV2KTsKdmVjMyBkcDJwZXJwPWNyb3NzKGRwMixub3JtYWwpOwp2ZWMzIGRwMXBlcnA9Y3Jvc3Mobm9ybWFsLGRwMSk7CnZlYzMgdGFuZ2VudD1kcDJwZXJwKmR1djEueCtkcDFwZXJwKmR1djIueDsKdmVjMyBiaXRhbmdlbnQ9ZHAycGVycCpkdXYxLnkrZHAxcGVycCpkdXYyLnk7CnRhbmdlbnQqPXRhbmdlbnRTcGFjZVBhcmFtcy54OwpiaXRhbmdlbnQqPXRhbmdlbnRTcGFjZVBhcmFtcy55OwpmbG9hdCBkZXQ9bWF4KGRvdCh0YW5nZW50LHRhbmdlbnQpLGRvdChiaXRhbmdlbnQsYml0YW5nZW50KSk7CmZsb2F0IGludm1heD1kZXQ9PTAuMCA/IDAuMCA6IGludmVyc2VzcXJ0KGRldCk7CnJldHVybiBtYXQzKHRhbmdlbnQqaW52bWF4LGJpdGFuZ2VudCppbnZtYXgsbm9ybWFsKTsKfQojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW3VoXT1kaDtjb25zdCBmaD0iYnVtcEZyYWdtZW50RnVuY3Rpb25zIixfaD1gI2lmIGRlZmluZWQoQlVNUCkKI2luY2x1ZGU8c2FtcGxlckZyYWdtZW50RGVjbGFyYXRpb24+KF9ERUZJTkVOQU1FXyxCVU1QLF9WQVJZSU5HTkFNRV8sQnVtcCxfU0FNUExFUk5BTUVfLGJ1bXApCiNlbmRpZgojaWYgZGVmaW5lZChERVRBSUwpCiNpbmNsdWRlPHNhbXBsZXJGcmFnbWVudERlY2xhcmF0aW9uPihfREVGSU5FTkFNRV8sREVUQUlMLF9WQVJZSU5HTkFNRV8sRGV0YWlsLF9TQU1QTEVSTkFNRV8sZGV0YWlsKQojZW5kaWYKI2lmIGRlZmluZWQoQlVNUCkgJiYgZGVmaW5lZChQQVJBTExBWCkKY29uc3QgZmxvYXQgbWluU2FtcGxlcz00LjsKY29uc3QgZmxvYXQgbWF4U2FtcGxlcz0xNS47CmNvbnN0IGludCBpTWF4U2FtcGxlcz0xNTsKdmVjMiBwYXJhbGxheE9jY2x1c2lvbih2ZWMzIHZWaWV3RGlyQ29ULHZlYzMgdk5vcm1hbENvVCx2ZWMyIHRleENvb3JkLGZsb2F0IHBhcmFsbGF4U2NhbGUpIHsKZmxvYXQgcGFyYWxsYXhMaW1pdD1sZW5ndGgodlZpZXdEaXJDb1QueHkpL3ZWaWV3RGlyQ29ULno7CnBhcmFsbGF4TGltaXQqPXBhcmFsbGF4U2NhbGU7CnZlYzIgdk9mZnNldERpcj1ub3JtYWxpemUodlZpZXdEaXJDb1QueHkpOwp2ZWMyIHZNYXhPZmZzZXQ9dk9mZnNldERpcipwYXJhbGxheExpbWl0OwpmbG9hdCBudW1TYW1wbGVzPW1heFNhbXBsZXMrKGRvdCh2Vmlld0RpckNvVCx2Tm9ybWFsQ29UKSoobWluU2FtcGxlcy1tYXhTYW1wbGVzKSk7CmZsb2F0IHN0ZXBTaXplPTEuMC9udW1TYW1wbGVzOwpmbG9hdCBjdXJyUmF5SGVpZ2h0PTEuMDsKdmVjMiB2Q3Vyck9mZnNldD12ZWMyKDAsMCk7CnZlYzIgdkxhc3RPZmZzZXQ9dmVjMigwLDApOwpmbG9hdCBsYXN0U2FtcGxlZEhlaWdodD0xLjA7CmZsb2F0IGN1cnJTYW1wbGVkSGVpZ2h0PTEuMDsKYm9vbCBrZWVwV29ya2luZz10cnVlOwpmb3IgKGludCBpPTA7IGk8aU1heFNhbXBsZXM7IGkrKykKewpjdXJyU2FtcGxlZEhlaWdodD10ZXh0dXJlMkQoYnVtcFNhbXBsZXIsdGV4Q29vcmQrdkN1cnJPZmZzZXQpLnc7CmlmICgha2VlcFdvcmtpbmcpCnsKfQplbHNlIGlmIChjdXJyU2FtcGxlZEhlaWdodD5jdXJyUmF5SGVpZ2h0KQp7CmZsb2F0IGRlbHRhMT1jdXJyU2FtcGxlZEhlaWdodC1jdXJyUmF5SGVpZ2h0OwpmbG9hdCBkZWx0YTI9KGN1cnJSYXlIZWlnaHQrc3RlcFNpemUpLWxhc3RTYW1wbGVkSGVpZ2h0OwpmbG9hdCByYXRpbz1kZWx0YTEvKGRlbHRhMStkZWx0YTIpOwp2Q3Vyck9mZnNldD0ocmF0aW8pKiB2TGFzdE9mZnNldCsoMS4wLXJhdGlvKSp2Q3Vyck9mZnNldDsKa2VlcFdvcmtpbmc9ZmFsc2U7Cn0KZWxzZQp7CmN1cnJSYXlIZWlnaHQtPXN0ZXBTaXplOwp2TGFzdE9mZnNldD12Q3Vyck9mZnNldDsKdkN1cnJPZmZzZXQrPXN0ZXBTaXplKnZNYXhPZmZzZXQ7Cmxhc3RTYW1wbGVkSGVpZ2h0PWN1cnJTYW1wbGVkSGVpZ2h0Owp9Cn0KcmV0dXJuIHZDdXJyT2Zmc2V0Owp9CnZlYzIgcGFyYWxsYXhPZmZzZXQodmVjMyB2aWV3RGlyLGZsb2F0IGhlaWdodFNjYWxlKQp7CmZsb2F0IGhlaWdodD10ZXh0dXJlMkQoYnVtcFNhbXBsZXIsdkJ1bXBVVikudzsKdmVjMiB0ZXhDb29yZE9mZnNldD1oZWlnaHRTY2FsZSp2aWV3RGlyLnh5KmhlaWdodDsKcmV0dXJuIC10ZXhDb29yZE9mZnNldDsKfQojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW2ZoXT1faDtjb25zdCBnaD0ibG9nRGVwdGhEZWNsYXJhdGlvbiIscGg9YCNpZmRlZiBMT0dBUklUSE1JQ0RFUFRICnVuaWZvcm0gZmxvYXQgbG9nYXJpdGhtaWNEZXB0aENvbnN0YW50Owp2YXJ5aW5nIGZsb2F0IHZGcmFnbWVudERlcHRoOwojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW2doXT1waDtjb25zdCBtaD0iZm9nRnJhZ21lbnREZWNsYXJhdGlvbiIsRWg9YCNpZmRlZiBGT0cKI2RlZmluZSBGT0dNT0RFX05PTkUgMC4KI2RlZmluZSBGT0dNT0RFX0VYUCAxLgojZGVmaW5lIEZPR01PREVfRVhQMiAyLgojZGVmaW5lIEZPR01PREVfTElORUFSIDMuCiNkZWZpbmUgRSAyLjcxODI4CnVuaWZvcm0gdmVjNCB2Rm9nSW5mb3M7CnVuaWZvcm0gdmVjMyB2Rm9nQ29sb3I7CnZhcnlpbmcgdmVjMyB2Rm9nRGlzdGFuY2U7CmZsb2F0IENhbGNGb2dGYWN0b3IoKQp7CmZsb2F0IGZvZ0NvZWZmPTEuMDsKZmxvYXQgZm9nU3RhcnQ9dkZvZ0luZm9zLnk7CmZsb2F0IGZvZ0VuZD12Rm9nSW5mb3MuejsKZmxvYXQgZm9nRGVuc2l0eT12Rm9nSW5mb3MudzsKZmxvYXQgZm9nRGlzdGFuY2U9bGVuZ3RoKHZGb2dEaXN0YW5jZSk7CmlmIChGT0dNT0RFX0xJTkVBUj09dkZvZ0luZm9zLngpCnsKZm9nQ29lZmY9KGZvZ0VuZC1mb2dEaXN0YW5jZSkvKGZvZ0VuZC1mb2dTdGFydCk7Cn0KZWxzZSBpZiAoRk9HTU9ERV9FWFA9PXZGb2dJbmZvcy54KQp7CmZvZ0NvZWZmPTEuMC9wb3coRSxmb2dEaXN0YW5jZSpmb2dEZW5zaXR5KTsKfQplbHNlIGlmIChGT0dNT0RFX0VYUDI9PXZGb2dJbmZvcy54KQp7CmZvZ0NvZWZmPTEuMC9wb3coRSxmb2dEaXN0YW5jZSpmb2dEaXN0YW5jZSpmb2dEZW5zaXR5KmZvZ0RlbnNpdHkpOwp9CnJldHVybiBjbGFtcChmb2dDb2VmZiwwLjAsMS4wKTsKfQojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW21oXT1FaDtjb25zdCB2aD0iYnVtcEZyYWdtZW50IixUaD1gdmVjMiB1dk9mZnNldD12ZWMyKDAuMCwwLjApOwojaWYgZGVmaW5lZChCVU1QKSB8fCBkZWZpbmVkKFBBUkFMTEFYKSB8fCBkZWZpbmVkKERFVEFJTCkKI2lmZGVmIE5PUk1BTFhZU0NBTEUKZmxvYXQgbm9ybWFsU2NhbGU9MS4wOwojZWxpZiBkZWZpbmVkKEJVTVApCmZsb2F0IG5vcm1hbFNjYWxlPXZCdW1wSW5mb3MueTsKI2Vsc2UKZmxvYXQgbm9ybWFsU2NhbGU9MS4wOwojZW5kaWYKI2lmIGRlZmluZWQoVEFOR0VOVCkgJiYgZGVmaW5lZChOT1JNQUwpCm1hdDMgVEJOPXZUQk47CiNlbGlmIGRlZmluZWQoQlVNUCkKdmVjMiBUQk5VVj1nbF9Gcm9udEZhY2luZyA/IHZCdW1wVVYgOiAtdkJ1bXBVVjsKbWF0MyBUQk49Y290YW5nZW50X2ZyYW1lKG5vcm1hbFcqbm9ybWFsU2NhbGUsdlBvc2l0aW9uVyxUQk5VVix2VGFuZ2VudFNwYWNlUGFyYW1zKTsKI2Vsc2UKdmVjMiBUQk5VVj1nbF9Gcm9udEZhY2luZyA/IHZEZXRhaWxVViA6IC12RGV0YWlsVVY7Cm1hdDMgVEJOPWNvdGFuZ2VudF9mcmFtZShub3JtYWxXKm5vcm1hbFNjYWxlLHZQb3NpdGlvblcsVEJOVVYsdmVjMigxLiwxLikpOwojZW5kaWYKI2VsaWYgZGVmaW5lZChBTklTT1RST1BJQykKI2lmIGRlZmluZWQoVEFOR0VOVCkgJiYgZGVmaW5lZChOT1JNQUwpCm1hdDMgVEJOPXZUQk47CiNlbHNlCnZlYzIgVEJOVVY9Z2xfRnJvbnRGYWNpbmcgPyB2TWFpblVWMSA6IC12TWFpblVWMTsKbWF0MyBUQk49Y290YW5nZW50X2ZyYW1lKG5vcm1hbFcsdlBvc2l0aW9uVyxUQk5VVix2ZWMyKDEuLDEuKSk7CiNlbmRpZgojZW5kaWYKI2lmZGVmIFBBUkFMTEFYCm1hdDMgaW52VEJOPXRyYW5zcG9zZU1hdDMoVEJOKTsKI2lmZGVmIFBBUkFMTEFYT0NDTFVTSU9OCnV2T2Zmc2V0PXBhcmFsbGF4T2NjbHVzaW9uKGludlRCTiotdmlld0RpcmVjdGlvblcsaW52VEJOKm5vcm1hbFcsdkJ1bXBVVix2QnVtcEluZm9zLnopOwojZWxzZQp1dk9mZnNldD1wYXJhbGxheE9mZnNldChpbnZUQk4qdmlld0RpcmVjdGlvblcsdkJ1bXBJbmZvcy56KTsKI2VuZGlmCiNlbmRpZgojaWZkZWYgREVUQUlMCnZlYzQgZGV0YWlsQ29sb3I9dGV4dHVyZTJEKGRldGFpbFNhbXBsZXIsdkRldGFpbFVWK3V2T2Zmc2V0KTsKdmVjMiBkZXRhaWxOb3JtYWxSRz1kZXRhaWxDb2xvci53eSoyLjAtMS4wOwpmbG9hdCBkZXRhaWxOb3JtYWxCPXNxcnQoMS4tc2F0dXJhdGUoZG90KGRldGFpbE5vcm1hbFJHLGRldGFpbE5vcm1hbFJHKSkpOwp2ZWMzIGRldGFpbE5vcm1hbD12ZWMzKGRldGFpbE5vcm1hbFJHLGRldGFpbE5vcm1hbEIpOwojZW5kaWYKI2lmZGVmIEJVTVAKI2lmZGVmIE9CSkVDVFNQQUNFX05PUk1BTE1BUApub3JtYWxXPW5vcm1hbGl6ZSh0ZXh0dXJlMkQoYnVtcFNhbXBsZXIsdkJ1bXBVVikueHl6ICoyLjAtMS4wKTsKbm9ybWFsVz1ub3JtYWxpemUobWF0Myhub3JtYWxNYXRyaXgpKm5vcm1hbFcpOwojZWxpZiAhZGVmaW5lZChERVRBSUwpCm5vcm1hbFc9cGVydHVyYk5vcm1hbChUQk4sdGV4dHVyZTJEKGJ1bXBTYW1wbGVyLHZCdW1wVVYrdXZPZmZzZXQpLnh5eix2QnVtcEluZm9zLnkpOwojZWxzZQp2ZWMzIGJ1bXBOb3JtYWw9dGV4dHVyZTJEKGJ1bXBTYW1wbGVyLHZCdW1wVVYrdXZPZmZzZXQpLnh5eioyLjAtMS4wOwojaWYgREVUQUlMX05PUk1BTEJMRU5ETUVUSE9EPT0wIApkZXRhaWxOb3JtYWwueHkqPXZEZXRhaWxJbmZvcy56Owp2ZWMzIGJsZW5kZWROb3JtYWw9bm9ybWFsaXplKHZlYzMoYnVtcE5vcm1hbC54eStkZXRhaWxOb3JtYWwueHksYnVtcE5vcm1hbC56KmRldGFpbE5vcm1hbC56KSk7CiNlbGlmIERFVEFJTF9OT1JNQUxCTEVORE1FVEhPRD09MSAKZGV0YWlsTm9ybWFsLnh5Kj12RGV0YWlsSW5mb3MuejsKYnVtcE5vcm1hbCs9dmVjMygwLjAsMC4wLDEuMCk7CmRldGFpbE5vcm1hbCo9dmVjMygtMS4wLC0xLjAsMS4wKTsKdmVjMyBibGVuZGVkTm9ybWFsPWJ1bXBOb3JtYWwqZG90KGJ1bXBOb3JtYWwsZGV0YWlsTm9ybWFsKS9idW1wTm9ybWFsLnotZGV0YWlsTm9ybWFsOwojZW5kaWYKbm9ybWFsVz1wZXJ0dXJiTm9ybWFsQmFzZShUQk4sYmxlbmRlZE5vcm1hbCx2QnVtcEluZm9zLnkpOwojZW5kaWYKI2VsaWYgZGVmaW5lZChERVRBSUwpCmRldGFpbE5vcm1hbC54eSo9dkRldGFpbEluZm9zLno7Cm5vcm1hbFc9cGVydHVyYk5vcm1hbEJhc2UoVEJOLGRldGFpbE5vcm1hbCx2RGV0YWlsSW5mb3Mueik7CiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbdmhdPVRoO2NvbnN0IGJoPSJkZXB0aFByZVBhc3MiLFNoPWAjaWZkZWYgREVQVEhQUkVQQVNTCmdsX0ZyYWdDb2xvcj12ZWM0KDAuLDAuLDAuLDEuMCk7CnJldHVybjsKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtiaF09U2g7Y29uc3QgeGg9ImxpZ2h0RnJhZ21lbnQiLE1oPWAjaWZkZWYgTElHSFR7WH0KI2lmIGRlZmluZWQoU0hBRE9XT05MWSkgfHwgZGVmaW5lZChMSUdIVE1BUCkgJiYgZGVmaW5lZChMSUdIVE1BUEVYQ0xVREVEe1h9KSAmJiBkZWZpbmVkKExJR0hUTUFQTk9TUEVDVUxBUntYfSkKI2Vsc2UKI2lmZGVmIFBCUgojaWZkZWYgU1BPVExJR0hUe1h9CnByZUluZm89Y29tcHV0ZVBvaW50QW5kU3BvdFByZUxpZ2h0aW5nSW5mbyhsaWdodHtYfS52TGlnaHREYXRhLHZpZXdEaXJlY3Rpb25XLG5vcm1hbFcpOwojZWxpZiBkZWZpbmVkKFBPSU5UTElHSFR7WH0pCnByZUluZm89Y29tcHV0ZVBvaW50QW5kU3BvdFByZUxpZ2h0aW5nSW5mbyhsaWdodHtYfS52TGlnaHREYXRhLHZpZXdEaXJlY3Rpb25XLG5vcm1hbFcpOwojZWxpZiBkZWZpbmVkKEhFTUlMSUdIVHtYfSkKcHJlSW5mbz1jb21wdXRlSGVtaXNwaGVyaWNQcmVMaWdodGluZ0luZm8obGlnaHR7WH0udkxpZ2h0RGF0YSx2aWV3RGlyZWN0aW9uVyxub3JtYWxXKTsKI2VsaWYgZGVmaW5lZChESVJMSUdIVHtYfSkKcHJlSW5mbz1jb21wdXRlRGlyZWN0aW9uYWxQcmVMaWdodGluZ0luZm8obGlnaHR7WH0udkxpZ2h0RGF0YSx2aWV3RGlyZWN0aW9uVyxub3JtYWxXKTsKI2VuZGlmCnByZUluZm8uTmRvdFY9TmRvdFY7CiNpZmRlZiBTUE9UTElHSFR7WH0KI2lmZGVmIExJR0hUX0ZBTExPRkZfR0xURntYfQpwcmVJbmZvLmF0dGVudWF0aW9uPWNvbXB1dGVEaXN0YW5jZUxpZ2h0RmFsbG9mZl9HTFRGKHByZUluZm8ubGlnaHREaXN0YW5jZVNxdWFyZWQsbGlnaHR7WH0udkxpZ2h0RmFsbG9mZi55KTsKcHJlSW5mby5hdHRlbnVhdGlvbio9Y29tcHV0ZURpcmVjdGlvbmFsTGlnaHRGYWxsb2ZmX0dMVEYobGlnaHR7WH0udkxpZ2h0RGlyZWN0aW9uLnh5eixwcmVJbmZvLkwsbGlnaHR7WH0udkxpZ2h0RmFsbG9mZi56LGxpZ2h0e1h9LnZMaWdodEZhbGxvZmYudyk7CiNlbGlmIGRlZmluZWQoTElHSFRfRkFMTE9GRl9QSFlTSUNBTHtYfSkKcHJlSW5mby5hdHRlbnVhdGlvbj1jb21wdXRlRGlzdGFuY2VMaWdodEZhbGxvZmZfUGh5c2ljYWwocHJlSW5mby5saWdodERpc3RhbmNlU3F1YXJlZCk7CnByZUluZm8uYXR0ZW51YXRpb24qPWNvbXB1dGVEaXJlY3Rpb25hbExpZ2h0RmFsbG9mZl9QaHlzaWNhbChsaWdodHtYfS52TGlnaHREaXJlY3Rpb24ueHl6LHByZUluZm8uTCxsaWdodHtYfS52TGlnaHREaXJlY3Rpb24udyk7CiNlbGlmIGRlZmluZWQoTElHSFRfRkFMTE9GRl9TVEFOREFSRHtYfSkKcHJlSW5mby5hdHRlbnVhdGlvbj1jb21wdXRlRGlzdGFuY2VMaWdodEZhbGxvZmZfU3RhbmRhcmQocHJlSW5mby5saWdodE9mZnNldCxsaWdodHtYfS52TGlnaHRGYWxsb2ZmLngpOwpwcmVJbmZvLmF0dGVudWF0aW9uKj1jb21wdXRlRGlyZWN0aW9uYWxMaWdodEZhbGxvZmZfU3RhbmRhcmQobGlnaHR7WH0udkxpZ2h0RGlyZWN0aW9uLnh5eixwcmVJbmZvLkwsbGlnaHR7WH0udkxpZ2h0RGlyZWN0aW9uLncsbGlnaHR7WH0udkxpZ2h0RGF0YS53KTsKI2Vsc2UKcHJlSW5mby5hdHRlbnVhdGlvbj1jb21wdXRlRGlzdGFuY2VMaWdodEZhbGxvZmYocHJlSW5mby5saWdodE9mZnNldCxwcmVJbmZvLmxpZ2h0RGlzdGFuY2VTcXVhcmVkLGxpZ2h0e1h9LnZMaWdodEZhbGxvZmYueCxsaWdodHtYfS52TGlnaHRGYWxsb2ZmLnkpOwpwcmVJbmZvLmF0dGVudWF0aW9uKj1jb21wdXRlRGlyZWN0aW9uYWxMaWdodEZhbGxvZmYobGlnaHR7WH0udkxpZ2h0RGlyZWN0aW9uLnh5eixwcmVJbmZvLkwsbGlnaHR7WH0udkxpZ2h0RGlyZWN0aW9uLncsbGlnaHR7WH0udkxpZ2h0RGF0YS53LGxpZ2h0e1h9LnZMaWdodEZhbGxvZmYueixsaWdodHtYfS52TGlnaHRGYWxsb2ZmLncpOwojZW5kaWYKI2VsaWYgZGVmaW5lZChQT0lOVExJR0hUe1h9KQojaWZkZWYgTElHSFRfRkFMTE9GRl9HTFRGe1h9CnByZUluZm8uYXR0ZW51YXRpb249Y29tcHV0ZURpc3RhbmNlTGlnaHRGYWxsb2ZmX0dMVEYocHJlSW5mby5saWdodERpc3RhbmNlU3F1YXJlZCxsaWdodHtYfS52TGlnaHRGYWxsb2ZmLnkpOwojZWxpZiBkZWZpbmVkKExJR0hUX0ZBTExPRkZfUEhZU0lDQUx7WH0pCnByZUluZm8uYXR0ZW51YXRpb249Y29tcHV0ZURpc3RhbmNlTGlnaHRGYWxsb2ZmX1BoeXNpY2FsKHByZUluZm8ubGlnaHREaXN0YW5jZVNxdWFyZWQpOwojZWxpZiBkZWZpbmVkKExJR0hUX0ZBTExPRkZfU1RBTkRBUkR7WH0pCnByZUluZm8uYXR0ZW51YXRpb249Y29tcHV0ZURpc3RhbmNlTGlnaHRGYWxsb2ZmX1N0YW5kYXJkKHByZUluZm8ubGlnaHRPZmZzZXQsbGlnaHR7WH0udkxpZ2h0RmFsbG9mZi54KTsKI2Vsc2UKcHJlSW5mby5hdHRlbnVhdGlvbj1jb21wdXRlRGlzdGFuY2VMaWdodEZhbGxvZmYocHJlSW5mby5saWdodE9mZnNldCxwcmVJbmZvLmxpZ2h0RGlzdGFuY2VTcXVhcmVkLGxpZ2h0e1h9LnZMaWdodEZhbGxvZmYueCxsaWdodHtYfS52TGlnaHRGYWxsb2ZmLnkpOwojZW5kaWYKI2Vsc2UKcHJlSW5mby5hdHRlbnVhdGlvbj0xLjA7CiNlbmRpZgojaWZkZWYgSEVNSUxJR0hUe1h9CnByZUluZm8ucm91Z2huZXNzPXJvdWdobmVzczsKI2Vsc2UKcHJlSW5mby5yb3VnaG5lc3M9YWRqdXN0Um91Z2huZXNzRnJvbUxpZ2h0UHJvcGVydGllcyhyb3VnaG5lc3MsbGlnaHR7WH0udkxpZ2h0U3BlY3VsYXIuYSxwcmVJbmZvLmxpZ2h0RGlzdGFuY2UpOwojZW5kaWYKI2lmZGVmIElSSURFU0NFTkNFCnByZUluZm8uaXJpZGVzY2VuY2VJbnRlbnNpdHk9aXJpZGVzY2VuY2VJbnRlbnNpdHk7CiNlbmRpZgojaWZkZWYgSEVNSUxJR0hUe1h9CmluZm8uZGlmZnVzZT1jb21wdXRlSGVtaXNwaGVyaWNEaWZmdXNlTGlnaHRpbmcocHJlSW5mbyxsaWdodHtYfS52TGlnaHREaWZmdXNlLnJnYixsaWdodHtYfS52TGlnaHRHcm91bmQpOwojZWxpZiBkZWZpbmVkKFNTX1RSQU5TTFVDRU5DWSkKaW5mby5kaWZmdXNlPWNvbXB1dGVEaWZmdXNlQW5kVHJhbnNtaXR0ZWRMaWdodGluZyhwcmVJbmZvLGxpZ2h0e1h9LnZMaWdodERpZmZ1c2UucmdiLHN1YlN1cmZhY2VPdXQudHJhbnNtaXR0YW5jZSk7CiNlbHNlCmluZm8uZGlmZnVzZT1jb21wdXRlRGlmZnVzZUxpZ2h0aW5nKHByZUluZm8sbGlnaHR7WH0udkxpZ2h0RGlmZnVzZS5yZ2IpOwojZW5kaWYKI2lmZGVmIFNQRUNVTEFSVEVSTQojaWZkZWYgQU5JU09UUk9QSUMKaW5mby5zcGVjdWxhcj1jb21wdXRlQW5pc290cm9waWNTcGVjdWxhckxpZ2h0aW5nKHByZUluZm8sdmlld0RpcmVjdGlvblcsbm9ybWFsVyxhbmlzb3Ryb3BpY091dC5hbmlzb3Ryb3BpY1RhbmdlbnQsYW5pc290cm9waWNPdXQuYW5pc290cm9waWNCaXRhbmdlbnQsYW5pc290cm9waWNPdXQuYW5pc290cm9weSxjbGVhcmNvYXRPdXQuc3BlY3VsYXJFbnZpcm9ubWVudFIwLHNwZWN1bGFyRW52aXJvbm1lbnRSOTAsQUFSb3VnaG5lc3NGYWN0b3JzLngsbGlnaHR7WH0udkxpZ2h0RGlmZnVzZS5yZ2IpOwojZWxzZQppbmZvLnNwZWN1bGFyPWNvbXB1dGVTcGVjdWxhckxpZ2h0aW5nKHByZUluZm8sbm9ybWFsVyxjbGVhcmNvYXRPdXQuc3BlY3VsYXJFbnZpcm9ubWVudFIwLHNwZWN1bGFyRW52aXJvbm1lbnRSOTAsQUFSb3VnaG5lc3NGYWN0b3JzLngsbGlnaHR7WH0udkxpZ2h0RGlmZnVzZS5yZ2IpOwojZW5kaWYKI2VuZGlmCiNpZmRlZiBTSEVFTgojaWZkZWYgU0hFRU5fTElOS1dJVEhBTEJFRE8KcHJlSW5mby5yb3VnaG5lc3M9c2hlZW5PdXQuc2hlZW5JbnRlbnNpdHk7CiNlbHNlCiNpZmRlZiBIRU1JTElHSFR7WH0KcHJlSW5mby5yb3VnaG5lc3M9c2hlZW5PdXQuc2hlZW5Sb3VnaG5lc3M7CiNlbHNlCnByZUluZm8ucm91Z2huZXNzPWFkanVzdFJvdWdobmVzc0Zyb21MaWdodFByb3BlcnRpZXMoc2hlZW5PdXQuc2hlZW5Sb3VnaG5lc3MsbGlnaHR7WH0udkxpZ2h0U3BlY3VsYXIuYSxwcmVJbmZvLmxpZ2h0RGlzdGFuY2UpOwojZW5kaWYKI2VuZGlmCmluZm8uc2hlZW49Y29tcHV0ZVNoZWVuTGlnaHRpbmcocHJlSW5mbyxub3JtYWxXLHNoZWVuT3V0LnNoZWVuQ29sb3Isc3BlY3VsYXJFbnZpcm9ubWVudFI5MCxBQVJvdWdobmVzc0ZhY3RvcnMueCxsaWdodHtYfS52TGlnaHREaWZmdXNlLnJnYik7CiNlbmRpZgojaWZkZWYgQ0xFQVJDT0FUCiNpZmRlZiBIRU1JTElHSFR7WH0KcHJlSW5mby5yb3VnaG5lc3M9Y2xlYXJjb2F0T3V0LmNsZWFyQ29hdFJvdWdobmVzczsKI2Vsc2UKcHJlSW5mby5yb3VnaG5lc3M9YWRqdXN0Um91Z2huZXNzRnJvbUxpZ2h0UHJvcGVydGllcyhjbGVhcmNvYXRPdXQuY2xlYXJDb2F0Um91Z2huZXNzLGxpZ2h0e1h9LnZMaWdodFNwZWN1bGFyLmEscHJlSW5mby5saWdodERpc3RhbmNlKTsKI2VuZGlmCmluZm8uY2xlYXJDb2F0PWNvbXB1dGVDbGVhckNvYXRMaWdodGluZyhwcmVJbmZvLGNsZWFyY29hdE91dC5jbGVhckNvYXROb3JtYWxXLGNsZWFyY29hdE91dC5jbGVhckNvYXRBQVJvdWdobmVzc0ZhY3RvcnMueCxjbGVhcmNvYXRPdXQuY2xlYXJDb2F0SW50ZW5zaXR5LGxpZ2h0e1h9LnZMaWdodERpZmZ1c2UucmdiKTsKI2lmZGVmIENMRUFSQ09BVF9USU5UCmFic29ycHRpb249Y29tcHV0ZUNsZWFyQ29hdExpZ2h0aW5nQWJzb3JwdGlvbihjbGVhcmNvYXRPdXQuY2xlYXJDb2F0TmRvdFZSZWZyYWN0LHByZUluZm8uTCxjbGVhcmNvYXRPdXQuY2xlYXJDb2F0Tm9ybWFsVyxjbGVhcmNvYXRPdXQuY2xlYXJDb2F0Q29sb3IsY2xlYXJjb2F0T3V0LmNsZWFyQ29hdFRoaWNrbmVzcyxjbGVhcmNvYXRPdXQuY2xlYXJDb2F0SW50ZW5zaXR5KTsKaW5mby5kaWZmdXNlKj1hYnNvcnB0aW9uOwojaWZkZWYgU1BFQ1VMQVJURVJNCmluZm8uc3BlY3VsYXIqPWFic29ycHRpb247CiNlbmRpZgojZW5kaWYKaW5mby5kaWZmdXNlKj1pbmZvLmNsZWFyQ29hdC53OwojaWZkZWYgU1BFQ1VMQVJURVJNCmluZm8uc3BlY3VsYXIqPWluZm8uY2xlYXJDb2F0Lnc7CiNlbmRpZgojaWZkZWYgU0hFRU4KaW5mby5zaGVlbio9aW5mby5jbGVhckNvYXQudzsKI2VuZGlmCiNlbmRpZgojZWxzZQojaWZkZWYgU1BPVExJR0hUe1h9CmluZm89Y29tcHV0ZVNwb3RMaWdodGluZyh2aWV3RGlyZWN0aW9uVyxub3JtYWxXLGxpZ2h0e1h9LnZMaWdodERhdGEsbGlnaHR7WH0udkxpZ2h0RGlyZWN0aW9uLGxpZ2h0e1h9LnZMaWdodERpZmZ1c2UucmdiLGxpZ2h0e1h9LnZMaWdodFNwZWN1bGFyLnJnYixsaWdodHtYfS52TGlnaHREaWZmdXNlLmEsZ2xvc3NpbmVzcyk7CiNlbGlmIGRlZmluZWQoSEVNSUxJR0hUe1h9KQppbmZvPWNvbXB1dGVIZW1pc3BoZXJpY0xpZ2h0aW5nKHZpZXdEaXJlY3Rpb25XLG5vcm1hbFcsbGlnaHR7WH0udkxpZ2h0RGF0YSxsaWdodHtYfS52TGlnaHREaWZmdXNlLnJnYixsaWdodHtYfS52TGlnaHRTcGVjdWxhci5yZ2IsbGlnaHR7WH0udkxpZ2h0R3JvdW5kLGdsb3NzaW5lc3MpOwojZWxpZiBkZWZpbmVkKFBPSU5UTElHSFR7WH0pIHx8IGRlZmluZWQoRElSTElHSFR7WH0pCmluZm89Y29tcHV0ZUxpZ2h0aW5nKHZpZXdEaXJlY3Rpb25XLG5vcm1hbFcsbGlnaHR7WH0udkxpZ2h0RGF0YSxsaWdodHtYfS52TGlnaHREaWZmdXNlLnJnYixsaWdodHtYfS52TGlnaHRTcGVjdWxhci5yZ2IsbGlnaHR7WH0udkxpZ2h0RGlmZnVzZS5hLGdsb3NzaW5lc3MpOwojZW5kaWYKI2VuZGlmCiNpZmRlZiBQUk9KRUNURURMSUdIVFRFWFRVUkV7WH0KaW5mby5kaWZmdXNlKj1jb21wdXRlUHJvamVjdGlvblRleHR1cmVEaWZmdXNlTGlnaHRpbmcocHJvamVjdGlvbkxpZ2h0U2FtcGxlcntYfSx0ZXh0dXJlUHJvamVjdGlvbk1hdHJpeHtYfSk7CiNlbmRpZgojZW5kaWYKI2lmZGVmIFNIQURPV3tYfQojaWZkZWYgU0hBRE9XQ1NNe1h9CmZvciAoaW50IGk9MDsgaTxTSEFET1dDU01OVU1fQ0FTQ0FERVN7WH07IGkrKykgCnsKI2lmZGVmIFNIQURPV0NTTV9SSUdIVEhBTkRFRHtYfQpkaWZme1h9PXZpZXdGcnVzdHVtWntYfVtpXSt2UG9zaXRpb25Gcm9tQ2FtZXJhe1h9Lno7CiNlbHNlCmRpZmZ7WH09dmlld0ZydXN0dW1ae1h9W2ldLXZQb3NpdGlvbkZyb21DYW1lcmF7WH0uejsKI2VuZGlmCmlmIChkaWZme1h9Pj0wLikgewppbmRleHtYfT1pOwpicmVhazsKfQp9CiNpZmRlZiBTSEFET1dDU01VU0VTSEFET1dNQVhae1h9CmlmIChpbmRleHtYfT49MCkKI2VuZGlmCnsKI2lmIGRlZmluZWQoU0hBRE9XUENGe1h9KQojaWYgZGVmaW5lZChTSEFET1dMT1dRVUFMSVRZe1h9KQpzaGFkb3c9Y29tcHV0ZVNoYWRvd1dpdGhDU01QQ0YxKGZsb2F0KGluZGV4e1h9KSx2UG9zaXRpb25Gcm9tTGlnaHR7WH1baW5kZXh7WH1dLHZEZXB0aE1ldHJpY3tYfVtpbmRleHtYfV0sc2hhZG93U2FtcGxlcntYfSxsaWdodHtYfS5zaGFkb3dzSW5mby54LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLncpOwojZWxpZiBkZWZpbmVkKFNIQURPV01FRElVTVFVQUxJVFl7WH0pCnNoYWRvdz1jb21wdXRlU2hhZG93V2l0aENTTVBDRjMoZmxvYXQoaW5kZXh7WH0pLHZQb3NpdGlvbkZyb21MaWdodHtYfVtpbmRleHtYfV0sdkRlcHRoTWV0cmlje1h9W2luZGV4e1h9XSxzaGFkb3dTYW1wbGVye1h9LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLnl6LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLngsbGlnaHR7WH0uc2hhZG93c0luZm8udyk7CiNlbHNlCnNoYWRvdz1jb21wdXRlU2hhZG93V2l0aENTTVBDRjUoZmxvYXQoaW5kZXh7WH0pLHZQb3NpdGlvbkZyb21MaWdodHtYfVtpbmRleHtYfV0sdkRlcHRoTWV0cmlje1h9W2luZGV4e1h9XSxzaGFkb3dTYW1wbGVye1h9LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLnl6LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLngsbGlnaHR7WH0uc2hhZG93c0luZm8udyk7CiNlbmRpZgojZWxpZiBkZWZpbmVkKFNIQURPV1BDU1N7WH0pCiNpZiBkZWZpbmVkKFNIQURPV0xPV1FVQUxJVFl7WH0pCnNoYWRvdz1jb21wdXRlU2hhZG93V2l0aENTTVBDU1MxNihmbG9hdChpbmRleHtYfSksdlBvc2l0aW9uRnJvbUxpZ2h0e1h9W2luZGV4e1h9XSx2RGVwdGhNZXRyaWN7WH1baW5kZXh7WH1dLGRlcHRoU2FtcGxlcntYfSxzaGFkb3dTYW1wbGVye1h9LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLnksbGlnaHR7WH0uc2hhZG93c0luZm8ueixsaWdodHtYfS5zaGFkb3dzSW5mby54LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLncsbGlnaHRTaXplVVZDb3JyZWN0aW9ue1h9W2luZGV4e1h9XSxkZXB0aENvcnJlY3Rpb257WH1baW5kZXh7WH1dLHBlbnVtYnJhRGFya25lc3N7WH0pOwojZWxpZiBkZWZpbmVkKFNIQURPV01FRElVTVFVQUxJVFl7WH0pCnNoYWRvdz1jb21wdXRlU2hhZG93V2l0aENTTVBDU1MzMihmbG9hdChpbmRleHtYfSksdlBvc2l0aW9uRnJvbUxpZ2h0e1h9W2luZGV4e1h9XSx2RGVwdGhNZXRyaWN7WH1baW5kZXh7WH1dLGRlcHRoU2FtcGxlcntYfSxzaGFkb3dTYW1wbGVye1h9LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLnksbGlnaHR7WH0uc2hhZG93c0luZm8ueixsaWdodHtYfS5zaGFkb3dzSW5mby54LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLncsbGlnaHRTaXplVVZDb3JyZWN0aW9ue1h9W2luZGV4e1h9XSxkZXB0aENvcnJlY3Rpb257WH1baW5kZXh7WH1dLHBlbnVtYnJhRGFya25lc3N7WH0pOwojZWxzZQpzaGFkb3c9Y29tcHV0ZVNoYWRvd1dpdGhDU01QQ1NTNjQoZmxvYXQoaW5kZXh7WH0pLHZQb3NpdGlvbkZyb21MaWdodHtYfVtpbmRleHtYfV0sdkRlcHRoTWV0cmlje1h9W2luZGV4e1h9XSxkZXB0aFNhbXBsZXJ7WH0sc2hhZG93U2FtcGxlcntYfSxsaWdodHtYfS5zaGFkb3dzSW5mby55LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLnosbGlnaHR7WH0uc2hhZG93c0luZm8ueCxsaWdodHtYfS5zaGFkb3dzSW5mby53LGxpZ2h0U2l6ZVVWQ29ycmVjdGlvbntYfVtpbmRleHtYfV0sZGVwdGhDb3JyZWN0aW9ue1h9W2luZGV4e1h9XSxwZW51bWJyYURhcmtuZXNze1h9KTsKI2VuZGlmCiNlbHNlCnNoYWRvdz1jb21wdXRlU2hhZG93Q1NNKGZsb2F0KGluZGV4e1h9KSx2UG9zaXRpb25Gcm9tTGlnaHR7WH1baW5kZXh7WH1dLHZEZXB0aE1ldHJpY3tYfVtpbmRleHtYfV0sc2hhZG93U2FtcGxlcntYfSxsaWdodHtYfS5zaGFkb3dzSW5mby54LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLncpOwojZW5kaWYKI2lmZGVmIFNIQURPV0NTTURFQlVHe1h9CnNoYWRvd0RlYnVne1h9PXZlYzMoc2hhZG93KSp2Q2FzY2FkZUNvbG9yc011bHRpcGxpZXJ7WH1baW5kZXh7WH1dOwojZW5kaWYKI2lmbmRlZiBTSEFET1dDU01OT0JMRU5Ee1h9CmZsb2F0IGZydXN0dW1MZW5ndGg9ZnJ1c3R1bUxlbmd0aHN7WH1baW5kZXh7WH1dOwpmbG9hdCBkaWZmUmF0aW89Y2xhbXAoZGlmZntYfS9mcnVzdHVtTGVuZ3RoLDAuLDEuKSpjYXNjYWRlQmxlbmRGYWN0b3J7WH07CmlmIChpbmRleHtYfTwoU0hBRE9XQ1NNTlVNX0NBU0NBREVTe1h9LTEpICYmIGRpZmZSYXRpbzwxLikKewppbmRleHtYfSs9MTsKZmxvYXQgbmV4dFNoYWRvdz0wLjsKI2lmIGRlZmluZWQoU0hBRE9XUENGe1h9KQojaWYgZGVmaW5lZChTSEFET1dMT1dRVUFMSVRZe1h9KQpuZXh0U2hhZG93PWNvbXB1dGVTaGFkb3dXaXRoQ1NNUENGMShmbG9hdChpbmRleHtYfSksdlBvc2l0aW9uRnJvbUxpZ2h0e1h9W2luZGV4e1h9XSx2RGVwdGhNZXRyaWN7WH1baW5kZXh7WH1dLHNoYWRvd1NhbXBsZXJ7WH0sbGlnaHR7WH0uc2hhZG93c0luZm8ueCxsaWdodHtYfS5zaGFkb3dzSW5mby53KTsKI2VsaWYgZGVmaW5lZChTSEFET1dNRURJVU1RVUFMSVRZe1h9KQpuZXh0U2hhZG93PWNvbXB1dGVTaGFkb3dXaXRoQ1NNUENGMyhmbG9hdChpbmRleHtYfSksdlBvc2l0aW9uRnJvbUxpZ2h0e1h9W2luZGV4e1h9XSx2RGVwdGhNZXRyaWN7WH1baW5kZXh7WH1dLHNoYWRvd1NhbXBsZXJ7WH0sbGlnaHR7WH0uc2hhZG93c0luZm8ueXosbGlnaHR7WH0uc2hhZG93c0luZm8ueCxsaWdodHtYfS5zaGFkb3dzSW5mby53KTsKI2Vsc2UKbmV4dFNoYWRvdz1jb21wdXRlU2hhZG93V2l0aENTTVBDRjUoZmxvYXQoaW5kZXh7WH0pLHZQb3NpdGlvbkZyb21MaWdodHtYfVtpbmRleHtYfV0sdkRlcHRoTWV0cmlje1h9W2luZGV4e1h9XSxzaGFkb3dTYW1wbGVye1h9LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLnl6LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLngsbGlnaHR7WH0uc2hhZG93c0luZm8udyk7CiNlbmRpZgojZWxpZiBkZWZpbmVkKFNIQURPV1BDU1N7WH0pCiNpZiBkZWZpbmVkKFNIQURPV0xPV1FVQUxJVFl7WH0pCm5leHRTaGFkb3c9Y29tcHV0ZVNoYWRvd1dpdGhDU01QQ1NTMTYoZmxvYXQoaW5kZXh7WH0pLHZQb3NpdGlvbkZyb21MaWdodHtYfVtpbmRleHtYfV0sdkRlcHRoTWV0cmlje1h9W2luZGV4e1h9XSxkZXB0aFNhbXBsZXJ7WH0sc2hhZG93U2FtcGxlcntYfSxsaWdodHtYfS5zaGFkb3dzSW5mby55LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLnosbGlnaHR7WH0uc2hhZG93c0luZm8ueCxsaWdodHtYfS5zaGFkb3dzSW5mby53LGxpZ2h0U2l6ZVVWQ29ycmVjdGlvbntYfVtpbmRleHtYfV0sZGVwdGhDb3JyZWN0aW9ue1h9W2luZGV4e1h9XSxwZW51bWJyYURhcmtuZXNze1h9KTsKI2VsaWYgZGVmaW5lZChTSEFET1dNRURJVU1RVUFMSVRZe1h9KQpuZXh0U2hhZG93PWNvbXB1dGVTaGFkb3dXaXRoQ1NNUENTUzMyKGZsb2F0KGluZGV4e1h9KSx2UG9zaXRpb25Gcm9tTGlnaHR7WH1baW5kZXh7WH1dLHZEZXB0aE1ldHJpY3tYfVtpbmRleHtYfV0sZGVwdGhTYW1wbGVye1h9LHNoYWRvd1NhbXBsZXJ7WH0sbGlnaHR7WH0uc2hhZG93c0luZm8ueSxsaWdodHtYfS5zaGFkb3dzSW5mby56LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLngsbGlnaHR7WH0uc2hhZG93c0luZm8udyxsaWdodFNpemVVVkNvcnJlY3Rpb257WH1baW5kZXh7WH1dLGRlcHRoQ29ycmVjdGlvbntYfVtpbmRleHtYfV0scGVudW1icmFEYXJrbmVzc3tYfSk7CiNlbHNlCm5leHRTaGFkb3c9Y29tcHV0ZVNoYWRvd1dpdGhDU01QQ1NTNjQoZmxvYXQoaW5kZXh7WH0pLHZQb3NpdGlvbkZyb21MaWdodHtYfVtpbmRleHtYfV0sdkRlcHRoTWV0cmlje1h9W2luZGV4e1h9XSxkZXB0aFNhbXBsZXJ7WH0sc2hhZG93U2FtcGxlcntYfSxsaWdodHtYfS5zaGFkb3dzSW5mby55LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLnosbGlnaHR7WH0uc2hhZG93c0luZm8ueCxsaWdodHtYfS5zaGFkb3dzSW5mby53LGxpZ2h0U2l6ZVVWQ29ycmVjdGlvbntYfVtpbmRleHtYfV0sZGVwdGhDb3JyZWN0aW9ue1h9W2luZGV4e1h9XSxwZW51bWJyYURhcmtuZXNze1h9KTsKI2VuZGlmCiNlbHNlCm5leHRTaGFkb3c9Y29tcHV0ZVNoYWRvd0NTTShmbG9hdChpbmRleHtYfSksdlBvc2l0aW9uRnJvbUxpZ2h0e1h9W2luZGV4e1h9XSx2RGVwdGhNZXRyaWN7WH1baW5kZXh7WH1dLHNoYWRvd1NhbXBsZXJ7WH0sbGlnaHR7WH0uc2hhZG93c0luZm8ueCxsaWdodHtYfS5zaGFkb3dzSW5mby53KTsKI2VuZGlmCnNoYWRvdz1taXgobmV4dFNoYWRvdyxzaGFkb3csZGlmZlJhdGlvKTsKI2lmZGVmIFNIQURPV0NTTURFQlVHe1h9CnNoYWRvd0RlYnVne1h9PW1peCh2ZWMzKG5leHRTaGFkb3cpKnZDYXNjYWRlQ29sb3JzTXVsdGlwbGllcntYfVtpbmRleHtYfV0sc2hhZG93RGVidWd7WH0sZGlmZlJhdGlvKTsKI2VuZGlmCn0KI2VuZGlmCn0KI2VsaWYgZGVmaW5lZChTSEFET1dDTE9TRUVTTXtYfSkKI2lmIGRlZmluZWQoU0hBRE9XQ1VCRXtYfSkKc2hhZG93PWNvbXB1dGVTaGFkb3dXaXRoQ2xvc2VFU01DdWJlKGxpZ2h0e1h9LnZMaWdodERhdGEueHl6LHNoYWRvd1NhbXBsZXJ7WH0sbGlnaHR7WH0uc2hhZG93c0luZm8ueCxsaWdodHtYfS5zaGFkb3dzSW5mby56LGxpZ2h0e1h9LmRlcHRoVmFsdWVzKTsKI2Vsc2UKc2hhZG93PWNvbXB1dGVTaGFkb3dXaXRoQ2xvc2VFU00odlBvc2l0aW9uRnJvbUxpZ2h0e1h9LHZEZXB0aE1ldHJpY3tYfSxzaGFkb3dTYW1wbGVye1h9LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLngsbGlnaHR7WH0uc2hhZG93c0luZm8ueixsaWdodHtYfS5zaGFkb3dzSW5mby53KTsKI2VuZGlmCiNlbGlmIGRlZmluZWQoU0hBRE9XRVNNe1h9KQojaWYgZGVmaW5lZChTSEFET1dDVUJFe1h9KQpzaGFkb3c9Y29tcHV0ZVNoYWRvd1dpdGhFU01DdWJlKGxpZ2h0e1h9LnZMaWdodERhdGEueHl6LHNoYWRvd1NhbXBsZXJ7WH0sbGlnaHR7WH0uc2hhZG93c0luZm8ueCxsaWdodHtYfS5zaGFkb3dzSW5mby56LGxpZ2h0e1h9LmRlcHRoVmFsdWVzKTsKI2Vsc2UKc2hhZG93PWNvbXB1dGVTaGFkb3dXaXRoRVNNKHZQb3NpdGlvbkZyb21MaWdodHtYfSx2RGVwdGhNZXRyaWN7WH0sc2hhZG93U2FtcGxlcntYfSxsaWdodHtYfS5zaGFkb3dzSW5mby54LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLnosbGlnaHR7WH0uc2hhZG93c0luZm8udyk7CiNlbmRpZgojZWxpZiBkZWZpbmVkKFNIQURPV1BPSVNTT057WH0pCiNpZiBkZWZpbmVkKFNIQURPV0NVQkV7WH0pCnNoYWRvdz1jb21wdXRlU2hhZG93V2l0aFBvaXNzb25TYW1wbGluZ0N1YmUobGlnaHR7WH0udkxpZ2h0RGF0YS54eXosc2hhZG93U2FtcGxlcntYfSxsaWdodHtYfS5zaGFkb3dzSW5mby55LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLngsbGlnaHR7WH0uZGVwdGhWYWx1ZXMpOwojZWxzZQpzaGFkb3c9Y29tcHV0ZVNoYWRvd1dpdGhQb2lzc29uU2FtcGxpbmcodlBvc2l0aW9uRnJvbUxpZ2h0e1h9LHZEZXB0aE1ldHJpY3tYfSxzaGFkb3dTYW1wbGVye1h9LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLnksbGlnaHR7WH0uc2hhZG93c0luZm8ueCxsaWdodHtYfS5zaGFkb3dzSW5mby53KTsKI2VuZGlmCiNlbGlmIGRlZmluZWQoU0hBRE9XUENGe1h9KQojaWYgZGVmaW5lZChTSEFET1dMT1dRVUFMSVRZe1h9KQpzaGFkb3c9Y29tcHV0ZVNoYWRvd1dpdGhQQ0YxKHZQb3NpdGlvbkZyb21MaWdodHtYfSx2RGVwdGhNZXRyaWN7WH0sc2hhZG93U2FtcGxlcntYfSxsaWdodHtYfS5zaGFkb3dzSW5mby54LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLncpOwojZWxpZiBkZWZpbmVkKFNIQURPV01FRElVTVFVQUxJVFl7WH0pCnNoYWRvdz1jb21wdXRlU2hhZG93V2l0aFBDRjModlBvc2l0aW9uRnJvbUxpZ2h0e1h9LHZEZXB0aE1ldHJpY3tYfSxzaGFkb3dTYW1wbGVye1h9LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLnl6LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLngsbGlnaHR7WH0uc2hhZG93c0luZm8udyk7CiNlbHNlCnNoYWRvdz1jb21wdXRlU2hhZG93V2l0aFBDRjUodlBvc2l0aW9uRnJvbUxpZ2h0e1h9LHZEZXB0aE1ldHJpY3tYfSxzaGFkb3dTYW1wbGVye1h9LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLnl6LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLngsbGlnaHR7WH0uc2hhZG93c0luZm8udyk7CiNlbmRpZgojZWxpZiBkZWZpbmVkKFNIQURPV1BDU1N7WH0pCiNpZiBkZWZpbmVkKFNIQURPV0xPV1FVQUxJVFl7WH0pCnNoYWRvdz1jb21wdXRlU2hhZG93V2l0aFBDU1MxNih2UG9zaXRpb25Gcm9tTGlnaHR7WH0sdkRlcHRoTWV0cmlje1h9LGRlcHRoU2FtcGxlcntYfSxzaGFkb3dTYW1wbGVye1h9LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLnksbGlnaHR7WH0uc2hhZG93c0luZm8ueixsaWdodHtYfS5zaGFkb3dzSW5mby54LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLncpOwojZWxpZiBkZWZpbmVkKFNIQURPV01FRElVTVFVQUxJVFl7WH0pCnNoYWRvdz1jb21wdXRlU2hhZG93V2l0aFBDU1MzMih2UG9zaXRpb25Gcm9tTGlnaHR7WH0sdkRlcHRoTWV0cmlje1h9LGRlcHRoU2FtcGxlcntYfSxzaGFkb3dTYW1wbGVye1h9LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLnksbGlnaHR7WH0uc2hhZG93c0luZm8ueixsaWdodHtYfS5zaGFkb3dzSW5mby54LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLncpOwojZWxzZQpzaGFkb3c9Y29tcHV0ZVNoYWRvd1dpdGhQQ1NTNjQodlBvc2l0aW9uRnJvbUxpZ2h0e1h9LHZEZXB0aE1ldHJpY3tYfSxkZXB0aFNhbXBsZXJ7WH0sc2hhZG93U2FtcGxlcntYfSxsaWdodHtYfS5zaGFkb3dzSW5mby55LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLnosbGlnaHR7WH0uc2hhZG93c0luZm8ueCxsaWdodHtYfS5zaGFkb3dzSW5mby53KTsKI2VuZGlmCiNlbHNlCiNpZiBkZWZpbmVkKFNIQURPV0NVQkV7WH0pCnNoYWRvdz1jb21wdXRlU2hhZG93Q3ViZShsaWdodHtYfS52TGlnaHREYXRhLnh5eixzaGFkb3dTYW1wbGVye1h9LGxpZ2h0e1h9LnNoYWRvd3NJbmZvLngsbGlnaHR7WH0uZGVwdGhWYWx1ZXMpOwojZWxzZQpzaGFkb3c9Y29tcHV0ZVNoYWRvdyh2UG9zaXRpb25Gcm9tTGlnaHR7WH0sdkRlcHRoTWV0cmlje1h9LHNoYWRvd1NhbXBsZXJ7WH0sbGlnaHR7WH0uc2hhZG93c0luZm8ueCxsaWdodHtYfS5zaGFkb3dzSW5mby53KTsKI2VuZGlmCiNlbmRpZgojaWZkZWYgU0hBRE9XT05MWQojaWZuZGVmIFNIQURPV0lOVVNFCiNkZWZpbmUgU0hBRE9XSU5VU0UKI2VuZGlmCmdsb2JhbFNoYWRvdys9c2hhZG93OwpzaGFkb3dMaWdodENvdW50Kz0xLjA7CiNlbmRpZgojZWxzZQpzaGFkb3c9MS47CiNlbmRpZgojaWZuZGVmIFNIQURPV09OTFkKI2lmZGVmIENVU1RPTVVTRVJMSUdIVElORwpkaWZmdXNlQmFzZSs9Y29tcHV0ZUN1c3RvbURpZmZ1c2VMaWdodGluZyhpbmZvLGRpZmZ1c2VCYXNlLHNoYWRvdyk7CiNpZmRlZiBTUEVDVUxBUlRFUk0Kc3BlY3VsYXJCYXNlKz1jb21wdXRlQ3VzdG9tU3BlY3VsYXJMaWdodGluZyhpbmZvLHNwZWN1bGFyQmFzZSxzaGFkb3cpOwojZW5kaWYKI2VsaWYgZGVmaW5lZChMSUdIVE1BUCkgJiYgZGVmaW5lZChMSUdIVE1BUEVYQ0xVREVEe1h9KQpkaWZmdXNlQmFzZSs9bGlnaHRtYXBDb2xvci5yZ2Iqc2hhZG93OwojaWZkZWYgU1BFQ1VMQVJURVJNCiNpZm5kZWYgTElHSFRNQVBOT1NQRUNVTEFSe1h9CnNwZWN1bGFyQmFzZSs9aW5mby5zcGVjdWxhcipzaGFkb3cqbGlnaHRtYXBDb2xvci5yZ2I7CiNlbmRpZgojZW5kaWYKI2lmZGVmIENMRUFSQ09BVAojaWZuZGVmIExJR0hUTUFQTk9TUEVDVUxBUntYfQpjbGVhckNvYXRCYXNlKz1pbmZvLmNsZWFyQ29hdC5yZ2Iqc2hhZG93KmxpZ2h0bWFwQ29sb3IucmdiOwojZW5kaWYKI2VuZGlmCiNpZmRlZiBTSEVFTgojaWZuZGVmIExJR0hUTUFQTk9TUEVDVUxBUntYfQpzaGVlbkJhc2UrPWluZm8uc2hlZW4ucmdiKnNoYWRvdzsKI2VuZGlmCiNlbmRpZgojZWxzZQojaWZkZWYgU0hBRE9XQ1NNREVCVUd7WH0KZGlmZnVzZUJhc2UrPWluZm8uZGlmZnVzZSpzaGFkb3dEZWJ1Z3tYfTsKI2Vsc2UgCmRpZmZ1c2VCYXNlKz1pbmZvLmRpZmZ1c2Uqc2hhZG93OwojZW5kaWYKI2lmZGVmIFNQRUNVTEFSVEVSTQpzcGVjdWxhckJhc2UrPWluZm8uc3BlY3VsYXIqc2hhZG93OwojZW5kaWYKI2lmZGVmIENMRUFSQ09BVApjbGVhckNvYXRCYXNlKz1pbmZvLmNsZWFyQ29hdC5yZ2Iqc2hhZG93OwojZW5kaWYKI2lmZGVmIFNIRUVOCnNoZWVuQmFzZSs9aW5mby5zaGVlbi5yZ2Iqc2hhZG93OwojZW5kaWYKI2VuZGlmCiNlbmRpZgojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW3hoXT1NaDtjb25zdCBBaD0ibG9nRGVwdGhGcmFnbWVudCIsUmg9YCNpZmRlZiBMT0dBUklUSE1JQ0RFUFRICmdsX0ZyYWdEZXB0aEVYVD1sb2cyKHZGcmFnbWVudERlcHRoKSpsb2dhcml0aG1pY0RlcHRoQ29uc3RhbnQqMC41OwojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW0FoXT1SaDtjb25zdCB5aD0iZm9nRnJhZ21lbnQiLENoPWAjaWZkZWYgRk9HCmZsb2F0IGZvZz1DYWxjRm9nRmFjdG9yKCk7CiNpZmRlZiBQQlIKZm9nPXRvTGluZWFyU3BhY2UoZm9nKTsKI2VuZGlmCmNvbG9yLnJnYj1taXgodkZvZ0NvbG9yLGNvbG9yLnJnYixmb2cpOwojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW3loXT1DaDtjb25zdCBJaD0ib2l0RnJhZ21lbnQiLFBoPWAjaWZkZWYgT1JERVJfSU5ERVBFTkRFTlRfVFJBTlNQQVJFTkNZCmZsb2F0IGZyYWdEZXB0aD1nbF9GcmFnQ29vcmQuejsgCiNpZmRlZiBPUkRFUl9JTkRFUEVOREVOVF9UUkFOU1BBUkVOQ1lfMTZCSVRTCnVpbnQgaGFsZkZsb2F0PXBhY2tIYWxmMngxNih2ZWMyKGZyYWdEZXB0aCkpOwp2ZWMyIGZ1bGw9dW5wYWNrSGFsZjJ4MTYoaGFsZkZsb2F0KTsKZnJhZ0RlcHRoPWZ1bGwueDsKI2VuZGlmCml2ZWMyIGZyYWdDb29yZD1pdmVjMihnbF9GcmFnQ29vcmQueHkpOwp2ZWMyIGxhc3REZXB0aD10ZXhlbEZldGNoKG9pdERlcHRoU2FtcGxlcixmcmFnQ29vcmQsMCkucmc7CnZlYzQgbGFzdEZyb250Q29sb3I9dGV4ZWxGZXRjaChvaXRGcm9udENvbG9yU2FtcGxlcixmcmFnQ29vcmQsMCk7CmRlcHRoLnJnPXZlYzIoLU1BWF9ERVBUSCk7CmZyb250Q29sb3I9bGFzdEZyb250Q29sb3I7CmJhY2tDb2xvcj12ZWM0KDAuMCk7CiNpZmRlZiBVU0VfUkVWRVJTRV9ERVBUSEJVRkZFUgpmbG9hdCBmdXJ0aGVzdERlcHRoPS1sYXN0RGVwdGgueDsKZmxvYXQgbmVhcmVzdERlcHRoPWxhc3REZXB0aC55OwojZWxzZQpmbG9hdCBuZWFyZXN0RGVwdGg9LWxhc3REZXB0aC54OwpmbG9hdCBmdXJ0aGVzdERlcHRoPWxhc3REZXB0aC55OwojZW5kaWYKZmxvYXQgYWxwaGFNdWx0aXBsaWVyPTEuMC1sYXN0RnJvbnRDb2xvci5hOwojaWZkZWYgVVNFX1JFVkVSU0VfREVQVEhCVUZGRVIKaWYgKGZyYWdEZXB0aD5uZWFyZXN0RGVwdGggfHwgZnJhZ0RlcHRoPGZ1cnRoZXN0RGVwdGgpIHsKI2Vsc2UKaWYgKGZyYWdEZXB0aDxuZWFyZXN0RGVwdGggfHwgZnJhZ0RlcHRoPmZ1cnRoZXN0RGVwdGgpIHsKI2VuZGlmCnJldHVybjsKfQojaWZkZWYgVVNFX1JFVkVSU0VfREVQVEhCVUZGRVIKaWYgKGZyYWdEZXB0aDxuZWFyZXN0RGVwdGggJiYgZnJhZ0RlcHRoPmZ1cnRoZXN0RGVwdGgpIHsKI2Vsc2UKaWYgKGZyYWdEZXB0aD5uZWFyZXN0RGVwdGggJiYgZnJhZ0RlcHRoPGZ1cnRoZXN0RGVwdGgpIHsKI2VuZGlmCmRlcHRoLnJnPXZlYzIoLWZyYWdEZXB0aCxmcmFnRGVwdGgpOwpyZXR1cm47Cn0KI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtJaF09UGg7Y29uc3QgRGg9ImRlZmF1bHRQaXhlbFNoYWRlciIsRmg9YCNpbmNsdWRlPF9fZGVjbF9fZGVmYXVsdEZyYWdtZW50PgojaWYgZGVmaW5lZChCVU1QKSB8fCAhZGVmaW5lZChOT1JNQUwpCiNleHRlbnNpb24gR0xfT0VTX3N0YW5kYXJkX2Rlcml2YXRpdmVzIDogZW5hYmxlCiNlbmRpZgojaW5jbHVkZTxwcmVQYXNzRGVjbGFyYXRpb24+W1NDRU5FX01SVF9DT1VOVF0KI2luY2x1ZGU8b2l0RGVjbGFyYXRpb24+CiNkZWZpbmUgQ1VTVE9NX0ZSQUdNRU5UX0JFR0lOCiNpZmRlZiBMT0dBUklUSE1JQ0RFUFRICiNleHRlbnNpb24gR0xfRVhUX2ZyYWdfZGVwdGggOiBlbmFibGUKI2VuZGlmCiNkZWZpbmUgUkVDSVBST0NBTF9QSTIgMC4xNTkxNTQ5NAp2YXJ5aW5nIHZlYzMgdlBvc2l0aW9uVzsKI2lmZGVmIE5PUk1BTAp2YXJ5aW5nIHZlYzMgdk5vcm1hbFc7CiNlbmRpZgojaWYgZGVmaW5lZChWRVJURVhDT0xPUikgfHwgZGVmaW5lZChJTlNUQU5DRVNDT0xPUikgJiYgZGVmaW5lZChJTlNUQU5DRVMpCnZhcnlpbmcgdmVjNCB2Q29sb3I7CiNlbmRpZgojaW5jbHVkZTxtYWluVVZWYXJ5aW5nRGVjbGFyYXRpb24+WzEuLjddCiNpbmNsdWRlPGhlbHBlckZ1bmN0aW9ucz4KI2luY2x1ZGU8X19kZWNsX19saWdodEZyYWdtZW50PlswLi5tYXhTaW11bHRhbmVvdXNMaWdodHNdCiNpbmNsdWRlPGxpZ2h0c0ZyYWdtZW50RnVuY3Rpb25zPgojaW5jbHVkZTxzaGFkb3dzRnJhZ21lbnRGdW5jdGlvbnM+CiNpbmNsdWRlPHNhbXBsZXJGcmFnbWVudERlY2xhcmF0aW9uPihfREVGSU5FTkFNRV8sRElGRlVTRSxfVkFSWUlOR05BTUVfLERpZmZ1c2UsX1NBTVBMRVJOQU1FXyxkaWZmdXNlKQojaW5jbHVkZTxzYW1wbGVyRnJhZ21lbnREZWNsYXJhdGlvbj4oX0RFRklORU5BTUVfLEFNQklFTlQsX1ZBUllJTkdOQU1FXyxBbWJpZW50LF9TQU1QTEVSTkFNRV8sYW1iaWVudCkKI2luY2x1ZGU8c2FtcGxlckZyYWdtZW50RGVjbGFyYXRpb24+KF9ERUZJTkVOQU1FXyxPUEFDSVRZLF9WQVJZSU5HTkFNRV8sT3BhY2l0eSxfU0FNUExFUk5BTUVfLG9wYWNpdHkpCiNpbmNsdWRlPHNhbXBsZXJGcmFnbWVudERlY2xhcmF0aW9uPihfREVGSU5FTkFNRV8sRU1JU1NJVkUsX1ZBUllJTkdOQU1FXyxFbWlzc2l2ZSxfU0FNUExFUk5BTUVfLGVtaXNzaXZlKQojaW5jbHVkZTxzYW1wbGVyRnJhZ21lbnREZWNsYXJhdGlvbj4oX0RFRklORU5BTUVfLExJR0hUTUFQLF9WQVJZSU5HTkFNRV8sTGlnaHRtYXAsX1NBTVBMRVJOQU1FXyxsaWdodG1hcCkKI2lmZGVmIFJFRlJBQ1RJT04KI2lmZGVmIFJFRlJBQ1RJT05NQVBfM0QKdW5pZm9ybSBzYW1wbGVyQ3ViZSByZWZyYWN0aW9uQ3ViZVNhbXBsZXI7CiNlbHNlCnVuaWZvcm0gc2FtcGxlcjJEIHJlZnJhY3Rpb24yRFNhbXBsZXI7CiNlbmRpZgojZW5kaWYKI2lmIGRlZmluZWQoU1BFQ1VMQVJURVJNKQojaW5jbHVkZTxzYW1wbGVyRnJhZ21lbnREZWNsYXJhdGlvbj4oX0RFRklORU5BTUVfLFNQRUNVTEFSLF9WQVJZSU5HTkFNRV8sU3BlY3VsYXIsX1NBTVBMRVJOQU1FXyxzcGVjdWxhcikKI2VuZGlmCiNpbmNsdWRlPGZyZXNuZWxGdW5jdGlvbj4KI2lmZGVmIFJFRkxFQ1RJT04KI2lmZGVmIFJFRkxFQ1RJT05NQVBfM0QKdW5pZm9ybSBzYW1wbGVyQ3ViZSByZWZsZWN0aW9uQ3ViZVNhbXBsZXI7CiNlbHNlCnVuaWZvcm0gc2FtcGxlcjJEIHJlZmxlY3Rpb24yRFNhbXBsZXI7CiNlbmRpZgojaWZkZWYgUkVGTEVDVElPTk1BUF9TS1lCT1gKdmFyeWluZyB2ZWMzIHZQb3NpdGlvblVWVzsKI2Vsc2UKI2lmIGRlZmluZWQoUkVGTEVDVElPTk1BUF9FUVVJUkVDVEFOR1VMQVJfRklYRUQpIHx8IGRlZmluZWQoUkVGTEVDVElPTk1BUF9NSVJST1JFREVRVUlSRUNUQU5HVUxBUl9GSVhFRCkKdmFyeWluZyB2ZWMzIHZEaXJlY3Rpb25XOwojZW5kaWYKI2VuZGlmCiNpbmNsdWRlPHJlZmxlY3Rpb25GdW5jdGlvbj4KI2VuZGlmCiNpbmNsdWRlPGltYWdlUHJvY2Vzc2luZ0RlY2xhcmF0aW9uPgojaW5jbHVkZTxpbWFnZVByb2Nlc3NpbmdGdW5jdGlvbnM+CiNpbmNsdWRlPGJ1bXBGcmFnbWVudE1haW5GdW5jdGlvbnM+CiNpbmNsdWRlPGJ1bXBGcmFnbWVudEZ1bmN0aW9ucz4KI2luY2x1ZGU8Y2xpcFBsYW5lRnJhZ21lbnREZWNsYXJhdGlvbj4KI2luY2x1ZGU8bG9nRGVwdGhEZWNsYXJhdGlvbj4KI2luY2x1ZGU8Zm9nRnJhZ21lbnREZWNsYXJhdGlvbj4KI2RlZmluZSBDVVNUT01fRlJBR01FTlRfREVGSU5JVElPTlMKdm9pZCBtYWluKHZvaWQpIHsKI2RlZmluZSBDVVNUT01fRlJBR01FTlRfTUFJTl9CRUdJTgojaW5jbHVkZTxjbGlwUGxhbmVGcmFnbWVudD4KdmVjMyB2aWV3RGlyZWN0aW9uVz1ub3JtYWxpemUodkV5ZVBvc2l0aW9uLnh5ei12UG9zaXRpb25XKTsKdmVjNCBiYXNlQ29sb3I9dmVjNCgxLiwxLiwxLiwxLik7CnZlYzMgZGlmZnVzZUNvbG9yPXZEaWZmdXNlQ29sb3IucmdiOwpmbG9hdCBhbHBoYT12RGlmZnVzZUNvbG9yLmE7CiNpZmRlZiBOT1JNQUwKdmVjMyBub3JtYWxXPW5vcm1hbGl6ZSh2Tm9ybWFsVyk7CiNlbHNlCnZlYzMgbm9ybWFsVz1ub3JtYWxpemUoLWNyb3NzKGRGZHgodlBvc2l0aW9uVyksZEZkeSh2UG9zaXRpb25XKSkpOwojZW5kaWYKI2luY2x1ZGU8YnVtcEZyYWdtZW50PgojaWZkZWYgVFdPU0lERURMSUdIVElORwpub3JtYWxXPWdsX0Zyb250RmFjaW5nID8gbm9ybWFsVyA6IC1ub3JtYWxXOwojZW5kaWYKI2lmZGVmIERJRkZVU0UKYmFzZUNvbG9yPXRleHR1cmUyRChkaWZmdXNlU2FtcGxlcix2RGlmZnVzZVVWK3V2T2Zmc2V0KTsKI2lmIGRlZmluZWQoQUxQSEFURVNUKSAmJiAhZGVmaW5lZChBTFBIQVRFU1RfQUZURVJBTExBTFBIQUNPTVBVVEFUSU9OUykKaWYgKGJhc2VDb2xvci5hPGFscGhhQ3V0T2ZmKQpkaXNjYXJkOwojZW5kaWYKI2lmZGVmIEFMUEhBRlJPTURJRkZVU0UKYWxwaGEqPWJhc2VDb2xvci5hOwojZW5kaWYKI2RlZmluZSBDVVNUT01fRlJBR01FTlRfVVBEQVRFX0FMUEhBCmJhc2VDb2xvci5yZ2IqPXZEaWZmdXNlSW5mb3MueTsKI2VuZGlmCiNpbmNsdWRlPGRlcHRoUHJlUGFzcz4KI2lmIGRlZmluZWQoVkVSVEVYQ09MT1IpIHx8IGRlZmluZWQoSU5TVEFOQ0VTQ09MT1IpICYmIGRlZmluZWQoSU5TVEFOQ0VTKQpiYXNlQ29sb3IucmdiKj12Q29sb3IucmdiOwojZW5kaWYKI2lmZGVmIERFVEFJTApiYXNlQ29sb3IucmdiPWJhc2VDb2xvci5yZ2IqMi4wKm1peCgwLjUsZGV0YWlsQ29sb3Iucix2RGV0YWlsSW5mb3MueSk7CiNlbmRpZgojZGVmaW5lIENVU1RPTV9GUkFHTUVOVF9VUERBVEVfRElGRlVTRQp2ZWMzIGJhc2VBbWJpZW50Q29sb3I9dmVjMygxLiwxLiwxLik7CiNpZmRlZiBBTUJJRU5UCmJhc2VBbWJpZW50Q29sb3I9dGV4dHVyZTJEKGFtYmllbnRTYW1wbGVyLHZBbWJpZW50VVYrdXZPZmZzZXQpLnJnYip2QW1iaWVudEluZm9zLnk7CiNlbmRpZgojZGVmaW5lIENVU1RPTV9GUkFHTUVOVF9CRUZPUkVfTElHSFRTCiNpZmRlZiBTUEVDVUxBUlRFUk0KZmxvYXQgZ2xvc3NpbmVzcz12U3BlY3VsYXJDb2xvci5hOwp2ZWMzIHNwZWN1bGFyQ29sb3I9dlNwZWN1bGFyQ29sb3IucmdiOwojaWZkZWYgU1BFQ1VMQVIKdmVjNCBzcGVjdWxhck1hcENvbG9yPXRleHR1cmUyRChzcGVjdWxhclNhbXBsZXIsdlNwZWN1bGFyVVYrdXZPZmZzZXQpOwpzcGVjdWxhckNvbG9yPXNwZWN1bGFyTWFwQ29sb3IucmdiOwojaWZkZWYgR0xPU1NJTkVTUwpnbG9zc2luZXNzPWdsb3NzaW5lc3Mqc3BlY3VsYXJNYXBDb2xvci5hOwojZW5kaWYKI2VuZGlmCiNlbHNlCmZsb2F0IGdsb3NzaW5lc3M9MC47CiNlbmRpZgp2ZWMzIGRpZmZ1c2VCYXNlPXZlYzMoMC4sMC4sMC4pOwpsaWdodGluZ0luZm8gaW5mbzsKI2lmZGVmIFNQRUNVTEFSVEVSTQp2ZWMzIHNwZWN1bGFyQmFzZT12ZWMzKDAuLDAuLDAuKTsKI2VuZGlmCmZsb2F0IHNoYWRvdz0xLjsKI2lmZGVmIExJR0hUTUFQCnZlYzQgbGlnaHRtYXBDb2xvcj10ZXh0dXJlMkQobGlnaHRtYXBTYW1wbGVyLHZMaWdodG1hcFVWK3V2T2Zmc2V0KTsKI2lmZGVmIFJHQkRMSUdIVE1BUApsaWdodG1hcENvbG9yLnJnYj1mcm9tUkdCRChsaWdodG1hcENvbG9yKTsKI2VuZGlmCmxpZ2h0bWFwQ29sb3IucmdiKj12TGlnaHRtYXBJbmZvcy55OwojZW5kaWYKI2luY2x1ZGU8bGlnaHRGcmFnbWVudD5bMC4ubWF4U2ltdWx0YW5lb3VzTGlnaHRzXQp2ZWM0IHJlZnJhY3Rpb25Db2xvcj12ZWM0KDAuLDAuLDAuLDEuKTsKI2lmZGVmIFJFRlJBQ1RJT04KdmVjMyByZWZyYWN0aW9uVmVjdG9yPW5vcm1hbGl6ZShyZWZyYWN0KC12aWV3RGlyZWN0aW9uVyxub3JtYWxXLHZSZWZyYWN0aW9uSW5mb3MueSkpOwojaWZkZWYgUkVGUkFDVElPTk1BUF8zRAojaWZkZWYgVVNFX0xPQ0FMX1JFRlJBQ1RJT05NQVBfQ1VCSUMKcmVmcmFjdGlvblZlY3Rvcj1wYXJhbGxheENvcnJlY3ROb3JtYWwodlBvc2l0aW9uVyxyZWZyYWN0aW9uVmVjdG9yLHZSZWZyYWN0aW9uU2l6ZSx2UmVmcmFjdGlvblBvc2l0aW9uKTsKI2VuZGlmCnJlZnJhY3Rpb25WZWN0b3IueT1yZWZyYWN0aW9uVmVjdG9yLnkqdlJlZnJhY3Rpb25JbmZvcy53OwppZiAoZG90KHJlZnJhY3Rpb25WZWN0b3Isdmlld0RpcmVjdGlvblcpPDEuMCkgewpyZWZyYWN0aW9uQ29sb3I9dGV4dHVyZUN1YmUocmVmcmFjdGlvbkN1YmVTYW1wbGVyLHJlZnJhY3Rpb25WZWN0b3IpOwp9CiNlbHNlCnZlYzMgdlJlZnJhY3Rpb25VVlc9dmVjMyhyZWZyYWN0aW9uTWF0cml4Kih2aWV3KnZlYzQodlBvc2l0aW9uVytyZWZyYWN0aW9uVmVjdG9yKnZSZWZyYWN0aW9uSW5mb3MueiwxLjApKSk7CnZlYzIgcmVmcmFjdGlvbkNvb3Jkcz12UmVmcmFjdGlvblVWVy54eS92UmVmcmFjdGlvblVWVy56OwpyZWZyYWN0aW9uQ29vcmRzLnk9MS4wLXJlZnJhY3Rpb25Db29yZHMueTsKcmVmcmFjdGlvbkNvbG9yPXRleHR1cmUyRChyZWZyYWN0aW9uMkRTYW1wbGVyLHJlZnJhY3Rpb25Db29yZHMpOwojZW5kaWYKI2lmZGVmIFJHQkRSRUZSQUNUSU9OCnJlZnJhY3Rpb25Db2xvci5yZ2I9ZnJvbVJHQkQocmVmcmFjdGlvbkNvbG9yKTsKI2VuZGlmCiNpZmRlZiBJU19SRUZSQUNUSU9OX0xJTkVBUgpyZWZyYWN0aW9uQ29sb3IucmdiPXRvR2FtbWFTcGFjZShyZWZyYWN0aW9uQ29sb3IucmdiKTsKI2VuZGlmCnJlZnJhY3Rpb25Db2xvci5yZ2IqPXZSZWZyYWN0aW9uSW5mb3MueDsKI2VuZGlmCnZlYzQgcmVmbGVjdGlvbkNvbG9yPXZlYzQoMC4sMC4sMC4sMS4pOwojaWZkZWYgUkVGTEVDVElPTgp2ZWMzIHZSZWZsZWN0aW9uVVZXPWNvbXB1dGVSZWZsZWN0aW9uQ29vcmRzKHZlYzQodlBvc2l0aW9uVywxLjApLG5vcm1hbFcpOwojaWZkZWYgUkVGTEVDVElPTk1BUF9PUFBPU0lURVoKdlJlZmxlY3Rpb25VVlcueio9LTEuMDsKI2VuZGlmCiNpZmRlZiBSRUZMRUNUSU9OTUFQXzNECiNpZmRlZiBST1VHSE5FU1MKZmxvYXQgYmlhcz12UmVmbGVjdGlvbkluZm9zLnk7CiNpZmRlZiBTUEVDVUxBUlRFUk0KI2lmZGVmIFNQRUNVTEFSCiNpZmRlZiBHTE9TU0lORVNTCmJpYXMqPSgxLjAtc3BlY3VsYXJNYXBDb2xvci5hKTsKI2VuZGlmCiNlbmRpZgojZW5kaWYKcmVmbGVjdGlvbkNvbG9yPXRleHR1cmVDdWJlKHJlZmxlY3Rpb25DdWJlU2FtcGxlcix2UmVmbGVjdGlvblVWVyxiaWFzKTsKI2Vsc2UKcmVmbGVjdGlvbkNvbG9yPXRleHR1cmVDdWJlKHJlZmxlY3Rpb25DdWJlU2FtcGxlcix2UmVmbGVjdGlvblVWVyk7CiNlbmRpZgojZWxzZQp2ZWMyIGNvb3Jkcz12UmVmbGVjdGlvblVWVy54eTsKI2lmZGVmIFJFRkxFQ1RJT05NQVBfUFJPSkVDVElPTgpjb29yZHMvPXZSZWZsZWN0aW9uVVZXLno7CiNlbmRpZgpjb29yZHMueT0xLjAtY29vcmRzLnk7CnJlZmxlY3Rpb25Db2xvcj10ZXh0dXJlMkQocmVmbGVjdGlvbjJEU2FtcGxlcixjb29yZHMpOwojZW5kaWYKI2lmZGVmIFJHQkRSRUZMRUNUSU9OCnJlZmxlY3Rpb25Db2xvci5yZ2I9ZnJvbVJHQkQocmVmbGVjdGlvbkNvbG9yKTsKI2VuZGlmCiNpZmRlZiBJU19SRUZMRUNUSU9OX0xJTkVBUgpyZWZsZWN0aW9uQ29sb3IucmdiPXRvR2FtbWFTcGFjZShyZWZsZWN0aW9uQ29sb3IucmdiKTsKI2VuZGlmCnJlZmxlY3Rpb25Db2xvci5yZ2IqPXZSZWZsZWN0aW9uSW5mb3MueDsKI2lmZGVmIFJFRkxFQ1RJT05GUkVTTkVMCmZsb2F0IHJlZmxlY3Rpb25GcmVzbmVsVGVybT1jb21wdXRlRnJlc25lbFRlcm0odmlld0RpcmVjdGlvblcsbm9ybWFsVyxyZWZsZWN0aW9uUmlnaHRDb2xvci5hLHJlZmxlY3Rpb25MZWZ0Q29sb3IuYSk7CiNpZmRlZiBSRUZMRUNUSU9ORlJFU05FTEZST01TUEVDVUxBUgojaWZkZWYgU1BFQ1VMQVJURVJNCnJlZmxlY3Rpb25Db2xvci5yZ2IqPXNwZWN1bGFyQ29sb3IucmdiKigxLjAtcmVmbGVjdGlvbkZyZXNuZWxUZXJtKStyZWZsZWN0aW9uRnJlc25lbFRlcm0qcmVmbGVjdGlvblJpZ2h0Q29sb3IucmdiOwojZWxzZQpyZWZsZWN0aW9uQ29sb3IucmdiKj1yZWZsZWN0aW9uTGVmdENvbG9yLnJnYiooMS4wLXJlZmxlY3Rpb25GcmVzbmVsVGVybSkrcmVmbGVjdGlvbkZyZXNuZWxUZXJtKnJlZmxlY3Rpb25SaWdodENvbG9yLnJnYjsKI2VuZGlmCiNlbHNlCnJlZmxlY3Rpb25Db2xvci5yZ2IqPXJlZmxlY3Rpb25MZWZ0Q29sb3IucmdiKigxLjAtcmVmbGVjdGlvbkZyZXNuZWxUZXJtKStyZWZsZWN0aW9uRnJlc25lbFRlcm0qcmVmbGVjdGlvblJpZ2h0Q29sb3IucmdiOwojZW5kaWYKI2VuZGlmCiNlbmRpZgojaWZkZWYgUkVGUkFDVElPTkZSRVNORUwKZmxvYXQgcmVmcmFjdGlvbkZyZXNuZWxUZXJtPWNvbXB1dGVGcmVzbmVsVGVybSh2aWV3RGlyZWN0aW9uVyxub3JtYWxXLHJlZnJhY3Rpb25SaWdodENvbG9yLmEscmVmcmFjdGlvbkxlZnRDb2xvci5hKTsKcmVmcmFjdGlvbkNvbG9yLnJnYio9cmVmcmFjdGlvbkxlZnRDb2xvci5yZ2IqKDEuMC1yZWZyYWN0aW9uRnJlc25lbFRlcm0pK3JlZnJhY3Rpb25GcmVzbmVsVGVybSpyZWZyYWN0aW9uUmlnaHRDb2xvci5yZ2I7CiNlbmRpZgojaWZkZWYgT1BBQ0lUWQp2ZWM0IG9wYWNpdHlNYXA9dGV4dHVyZTJEKG9wYWNpdHlTYW1wbGVyLHZPcGFjaXR5VVYrdXZPZmZzZXQpOwojaWZkZWYgT1BBQ0lUWVJHQgpvcGFjaXR5TWFwLnJnYj1vcGFjaXR5TWFwLnJnYip2ZWMzKDAuMywwLjU5LDAuMTEpOwphbHBoYSo9KG9wYWNpdHlNYXAueCtvcGFjaXR5TWFwLnkrb3BhY2l0eU1hcC56KSogdk9wYWNpdHlJbmZvcy55OwojZWxzZQphbHBoYSo9b3BhY2l0eU1hcC5hKnZPcGFjaXR5SW5mb3MueTsKI2VuZGlmCiNlbmRpZgojaWYgZGVmaW5lZChWRVJURVhBTFBIQSkgfHwgZGVmaW5lZChJTlNUQU5DRVNDT0xPUikgJiYgZGVmaW5lZChJTlNUQU5DRVMpCmFscGhhKj12Q29sb3IuYTsKI2VuZGlmCiNpZmRlZiBPUEFDSVRZRlJFU05FTApmbG9hdCBvcGFjaXR5RnJlc25lbFRlcm09Y29tcHV0ZUZyZXNuZWxUZXJtKHZpZXdEaXJlY3Rpb25XLG5vcm1hbFcsb3BhY2l0eVBhcnRzLnosb3BhY2l0eVBhcnRzLncpOwphbHBoYSs9b3BhY2l0eVBhcnRzLngqKDEuMC1vcGFjaXR5RnJlc25lbFRlcm0pK29wYWNpdHlGcmVzbmVsVGVybSpvcGFjaXR5UGFydHMueTsKI2VuZGlmCiNpZmRlZiBBTFBIQVRFU1QKI2lmZGVmIEFMUEhBVEVTVF9BRlRFUkFMTEFMUEhBQ09NUFVUQVRJT05TCmlmIChhbHBoYTxhbHBoYUN1dE9mZikKZGlzY2FyZDsKI2VuZGlmCiNpZm5kZWYgQUxQSEFCTEVORAphbHBoYT0xLjA7CiNlbmRpZgojZW5kaWYKdmVjMyBlbWlzc2l2ZUNvbG9yPXZFbWlzc2l2ZUNvbG9yOwojaWZkZWYgRU1JU1NJVkUKZW1pc3NpdmVDb2xvcis9dGV4dHVyZTJEKGVtaXNzaXZlU2FtcGxlcix2RW1pc3NpdmVVVit1dk9mZnNldCkucmdiKnZFbWlzc2l2ZUluZm9zLnk7CiNlbmRpZgojaWZkZWYgRU1JU1NJVkVGUkVTTkVMCmZsb2F0IGVtaXNzaXZlRnJlc25lbFRlcm09Y29tcHV0ZUZyZXNuZWxUZXJtKHZpZXdEaXJlY3Rpb25XLG5vcm1hbFcsZW1pc3NpdmVSaWdodENvbG9yLmEsZW1pc3NpdmVMZWZ0Q29sb3IuYSk7CmVtaXNzaXZlQ29sb3IqPWVtaXNzaXZlTGVmdENvbG9yLnJnYiooMS4wLWVtaXNzaXZlRnJlc25lbFRlcm0pK2VtaXNzaXZlRnJlc25lbFRlcm0qZW1pc3NpdmVSaWdodENvbG9yLnJnYjsKI2VuZGlmCiNpZmRlZiBESUZGVVNFRlJFU05FTApmbG9hdCBkaWZmdXNlRnJlc25lbFRlcm09Y29tcHV0ZUZyZXNuZWxUZXJtKHZpZXdEaXJlY3Rpb25XLG5vcm1hbFcsZGlmZnVzZVJpZ2h0Q29sb3IuYSxkaWZmdXNlTGVmdENvbG9yLmEpOwpkaWZmdXNlQmFzZSo9ZGlmZnVzZUxlZnRDb2xvci5yZ2IqKDEuMC1kaWZmdXNlRnJlc25lbFRlcm0pK2RpZmZ1c2VGcmVzbmVsVGVybSpkaWZmdXNlUmlnaHRDb2xvci5yZ2I7CiNlbmRpZgojaWZkZWYgRU1JU1NJVkVBU0lMTFVNSU5BVElPTgp2ZWMzIGZpbmFsRGlmZnVzZT1jbGFtcChkaWZmdXNlQmFzZSpkaWZmdXNlQ29sb3IrdkFtYmllbnRDb2xvciwwLjAsMS4wKSpiYXNlQ29sb3IucmdiOwojZWxzZQojaWZkZWYgTElOS0VNSVNTSVZFV0lUSERJRkZVU0UKdmVjMyBmaW5hbERpZmZ1c2U9Y2xhbXAoKGRpZmZ1c2VCYXNlK2VtaXNzaXZlQ29sb3IpKmRpZmZ1c2VDb2xvcit2QW1iaWVudENvbG9yLDAuMCwxLjApKmJhc2VDb2xvci5yZ2I7CiNlbHNlCnZlYzMgZmluYWxEaWZmdXNlPWNsYW1wKGRpZmZ1c2VCYXNlKmRpZmZ1c2VDb2xvcitlbWlzc2l2ZUNvbG9yK3ZBbWJpZW50Q29sb3IsMC4wLDEuMCkqYmFzZUNvbG9yLnJnYjsKI2VuZGlmCiNlbmRpZgojaWZkZWYgU1BFQ1VMQVJURVJNCnZlYzMgZmluYWxTcGVjdWxhcj1zcGVjdWxhckJhc2Uqc3BlY3VsYXJDb2xvcjsKI2lmZGVmIFNQRUNVTEFST1ZFUkFMUEhBCmFscGhhPWNsYW1wKGFscGhhK2RvdChmaW5hbFNwZWN1bGFyLHZlYzMoMC4zLDAuNTksMC4xMSkpLDAuLDEuKTsKI2VuZGlmCiNlbHNlCnZlYzMgZmluYWxTcGVjdWxhcj12ZWMzKDAuMCk7CiNlbmRpZgojaWZkZWYgUkVGTEVDVElPTk9WRVJBTFBIQQphbHBoYT1jbGFtcChhbHBoYStkb3QocmVmbGVjdGlvbkNvbG9yLnJnYix2ZWMzKDAuMywwLjU5LDAuMTEpKSwwLiwxLik7CiNlbmRpZgojaWZkZWYgRU1JU1NJVkVBU0lMTFVNSU5BVElPTgp2ZWM0IGNvbG9yPXZlYzQoY2xhbXAoZmluYWxEaWZmdXNlKmJhc2VBbWJpZW50Q29sb3IrZmluYWxTcGVjdWxhcityZWZsZWN0aW9uQ29sb3IucmdiK2VtaXNzaXZlQ29sb3IrcmVmcmFjdGlvbkNvbG9yLnJnYiwwLjAsMS4wKSxhbHBoYSk7CiNlbHNlCnZlYzQgY29sb3I9dmVjNChmaW5hbERpZmZ1c2UqYmFzZUFtYmllbnRDb2xvcitmaW5hbFNwZWN1bGFyK3JlZmxlY3Rpb25Db2xvci5yZ2IrcmVmcmFjdGlvbkNvbG9yLnJnYixhbHBoYSk7CiNlbmRpZgojaWZkZWYgTElHSFRNQVAKI2lmbmRlZiBMSUdIVE1BUEVYQ0xVREVECiNpZmRlZiBVU0VMSUdIVE1BUEFTU0hBRE9XTUFQCmNvbG9yLnJnYio9bGlnaHRtYXBDb2xvci5yZ2I7CiNlbHNlCmNvbG9yLnJnYis9bGlnaHRtYXBDb2xvci5yZ2I7CiNlbmRpZgojZW5kaWYKI2VuZGlmCiNkZWZpbmUgQ1VTVE9NX0ZSQUdNRU5UX0JFRk9SRV9GT0cKY29sb3IucmdiPW1heChjb2xvci5yZ2IsMC4pOwojaW5jbHVkZTxsb2dEZXB0aEZyYWdtZW50PgojaW5jbHVkZTxmb2dGcmFnbWVudD4KI2lmZGVmIElNQUdFUFJPQ0VTU0lOR1BPU1RQUk9DRVNTCmNvbG9yLnJnYj10b0xpbmVhclNwYWNlKGNvbG9yLnJnYik7CiNlbHNlCiNpZmRlZiBJTUFHRVBST0NFU1NJTkcKY29sb3IucmdiPXRvTGluZWFyU3BhY2UoY29sb3IucmdiKTsKY29sb3I9YXBwbHlJbWFnZVByb2Nlc3NpbmcoY29sb3IpOwojZW5kaWYKI2VuZGlmCmNvbG9yLmEqPXZpc2liaWxpdHk7CiNpZmRlZiBQUkVNVUxUSVBMWUFMUEhBCmNvbG9yLnJnYio9Y29sb3IuYTsKI2VuZGlmCiNkZWZpbmUgQ1VTVE9NX0ZSQUdNRU5UX0JFRk9SRV9GUkFHQ09MT1IKI2lmZGVmIFBSRVBBU1MKZmxvYXQgd3JpdGVHZW9tZXRyeUluZm89Y29sb3IuYT4wLjQgPyAxLjAgOiAwLjA7CmdsX0ZyYWdEYXRhWzBdPWNvbG9yOyAKI2lmZGVmIFBSRVBBU1NfUE9TSVRJT04KZ2xfRnJhZ0RhdGFbUFJFUEFTU19QT1NJVElPTl9JTkRFWF09dmVjNCh2UG9zaXRpb25XLHdyaXRlR2VvbWV0cnlJbmZvKTsKI2VuZGlmCiNpZmRlZiBQUkVQQVNTX1ZFTE9DSVRZCnZlYzIgYT0odkN1cnJlbnRQb3NpdGlvbi54eS92Q3VycmVudFBvc2l0aW9uLncpKjAuNSswLjU7CnZlYzIgYj0odlByZXZpb3VzUG9zaXRpb24ueHkvdlByZXZpb3VzUG9zaXRpb24udykqMC41KzAuNTsKdmVjMiB2ZWxvY2l0eT1hYnMoYS1iKTsKdmVsb2NpdHk9dmVjMihwb3codmVsb2NpdHkueCwxLjAvMy4wKSxwb3codmVsb2NpdHkueSwxLjAvMy4wKSkqc2lnbihhLWIpKjAuNSswLjU7CmdsX0ZyYWdEYXRhW1BSRVBBU1NfVkVMT0NJVFlfSU5ERVhdPXZlYzQodmVsb2NpdHksMC4wLHdyaXRlR2VvbWV0cnlJbmZvKTsKI2VuZGlmCiNpZmRlZiBQUkVQQVNTX0lSUkFESUFOQ0UKZ2xfRnJhZ0RhdGFbUFJFUEFTU19JUlJBRElBTkNFX0lOREVYXT12ZWM0KDAuMCwwLjAsMC4wLHdyaXRlR2VvbWV0cnlJbmZvKTsgCiNlbmRpZgojaWZkZWYgUFJFUEFTU19ERVBUSApnbF9GcmFnRGF0YVtQUkVQQVNTX0RFUFRIX0lOREVYXT12ZWM0KHZWaWV3UG9zLnosMC4wLDAuMCx3cml0ZUdlb21ldHJ5SW5mbyk7IAojZW5kaWYKI2lmZGVmIFBSRVBBU1NfTk9STUFMCmdsX0ZyYWdEYXRhW1BSRVBBU1NfTk9STUFMX0lOREVYXT12ZWM0KCh2aWV3KnZlYzQobm9ybWFsVywwLjApKS5yZ2Isd3JpdGVHZW9tZXRyeUluZm8pOyAKI2VuZGlmCiNpZmRlZiBQUkVQQVNTX0FMQkVET19TUVJUCmdsX0ZyYWdEYXRhW1BSRVBBU1NfQUxCRURPX1NRUlRfSU5ERVhdPXZlYzQoMC4wLDAuMCwwLjAsd3JpdGVHZW9tZXRyeUluZm8pOyAKI2VuZGlmCiNpZmRlZiBQUkVQQVNTX1JFRkxFQ1RJVklUWQojaWYgZGVmaW5lZChTUEVDVUxBUlRFUk0pCiNpZiBkZWZpbmVkKFNQRUNVTEFSKQpnbF9GcmFnRGF0YVtQUkVQQVNTX1JFRkxFQ1RJVklUWV9JTkRFWF09dmVjNChzcGVjdWxhck1hcENvbG9yKSp3cml0ZUdlb21ldHJ5SW5mbzsgCiNlbHNlCmdsX0ZyYWdEYXRhW1BSRVBBU1NfUkVGTEVDVElWSVRZX0lOREVYXT12ZWM0KHNwZWN1bGFyQ29sb3IsMS4wKSp3cml0ZUdlb21ldHJ5SW5mbzsKI2VuZGlmCiNlbHNlCmdsX0ZyYWdEYXRhW1BSRVBBU1NfUkVGTEVDVElWSVRZX0lOREVYXT12ZWM0KDAuMCwwLjAsMC4wLDEuMCkqd3JpdGVHZW9tZXRyeUluZm87CiNlbmRpZgojZW5kaWYKI2VuZGlmCiNpZiAhZGVmaW5lZChQUkVQQVNTKSB8fCBkZWZpbmVkKFdFQkdMMikKZ2xfRnJhZ0NvbG9yPWNvbG9yOwojZW5kaWYKI2luY2x1ZGU8b2l0RnJhZ21lbnQ+CiNpZiBPUkRFUl9JTkRFUEVOREVOVF9UUkFOU1BBUkVOQ1kKaWYgKGZyYWdEZXB0aD09bmVhcmVzdERlcHRoKSB7CmZyb250Q29sb3IucmdiKz1jb2xvci5yZ2IqY29sb3IuYSphbHBoYU11bHRpcGxpZXI7CmZyb250Q29sb3IuYT0xLjAtYWxwaGFNdWx0aXBsaWVyKigxLjAtY29sb3IuYSk7Cn0gZWxzZSB7CmJhY2tDb2xvcis9Y29sb3I7Cn0KI2VuZGlmCiNkZWZpbmUgQ1VTVE9NX0ZSQUdNRU5UX01BSU5fRU5ECn0KYDtVLlNoYWRlcnNTdG9yZVtEaF09Rmg7Y29uc3Qgd2g9ImRlZmF1bHRWZXJ0ZXhEZWNsYXJhdGlvbiIsT2g9YHVuaWZvcm0gbWF0NCB2aWV3UHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7CiNpZmRlZiBESUZGVVNFCnVuaWZvcm0gbWF0NCBkaWZmdXNlTWF0cml4Owp1bmlmb3JtIHZlYzIgdkRpZmZ1c2VJbmZvczsKI2VuZGlmCiNpZmRlZiBBTUJJRU5UCnVuaWZvcm0gbWF0NCBhbWJpZW50TWF0cml4Owp1bmlmb3JtIHZlYzIgdkFtYmllbnRJbmZvczsKI2VuZGlmCiNpZmRlZiBPUEFDSVRZCnVuaWZvcm0gbWF0NCBvcGFjaXR5TWF0cml4Owp1bmlmb3JtIHZlYzIgdk9wYWNpdHlJbmZvczsKI2VuZGlmCiNpZmRlZiBFTUlTU0lWRQp1bmlmb3JtIHZlYzIgdkVtaXNzaXZlSW5mb3M7CnVuaWZvcm0gbWF0NCBlbWlzc2l2ZU1hdHJpeDsKI2VuZGlmCiNpZmRlZiBMSUdIVE1BUAp1bmlmb3JtIHZlYzIgdkxpZ2h0bWFwSW5mb3M7CnVuaWZvcm0gbWF0NCBsaWdodG1hcE1hdHJpeDsKI2VuZGlmCiNpZiBkZWZpbmVkKFNQRUNVTEFSKSAmJiBkZWZpbmVkKFNQRUNVTEFSVEVSTSkKdW5pZm9ybSB2ZWMyIHZTcGVjdWxhckluZm9zOwp1bmlmb3JtIG1hdDQgc3BlY3VsYXJNYXRyaXg7CiNlbmRpZgojaWZkZWYgQlVNUAp1bmlmb3JtIHZlYzMgdkJ1bXBJbmZvczsKdW5pZm9ybSBtYXQ0IGJ1bXBNYXRyaXg7CiNlbmRpZgojaWZkZWYgUkVGTEVDVElPTgp1bmlmb3JtIG1hdDQgcmVmbGVjdGlvbk1hdHJpeDsKI2VuZGlmCiNpZmRlZiBQT0lOVFNJWkUKdW5pZm9ybSBmbG9hdCBwb2ludFNpemU7CiNlbmRpZgojaWZkZWYgREVUQUlMCnVuaWZvcm0gdmVjNCB2RGV0YWlsSW5mb3M7CnVuaWZvcm0gbWF0NCBkZXRhaWxNYXRyaXg7CiNlbmRpZgojZGVmaW5lIEFERElUSU9OQUxfVkVSVEVYX0RFQ0xBUkFUSU9OCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVt3aF09T2g7Y29uc3QgTGg9InV2QXR0cmlidXRlRGVjbGFyYXRpb24iLE5oPWAjaWZkZWYgVVZ7WH0KYXR0cmlidXRlIHZlYzIgdXZ7WH07CiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbTGhdPU5oO2NvbnN0IEJoPSJwcmVQYXNzVmVydGV4RGVjbGFyYXRpb24iLFVoPWAjaWZkZWYgUFJFUEFTUwojaWZkZWYgUFJFUEFTU19ERVBUSAp2YXJ5aW5nIHZlYzMgdlZpZXdQb3M7CiNlbmRpZgojaWZkZWYgUFJFUEFTU19WRUxPQ0lUWQp1bmlmb3JtIG1hdDQgcHJldmlvdXNWaWV3UHJvamVjdGlvbjsKdmFyeWluZyB2ZWM0IHZDdXJyZW50UG9zaXRpb247CnZhcnlpbmcgdmVjNCB2UHJldmlvdXNQb3NpdGlvbjsKI2VuZGlmCiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbQmhdPVVoO2NvbnN0IGtoPSJzYW1wbGVyVmVydGV4RGVjbGFyYXRpb24iLFZoPWAjaWYgZGVmaW5lZChfREVGSU5FTkFNRV8pICYmIF9ERUZJTkVOQU1FX0RJUkVDVFVWPT0wCnZhcnlpbmcgdmVjMiB2X1ZBUllJTkdOQU1FX1VWOwojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW2toXT1WaDtjb25zdCBXaD0iYnVtcFZlcnRleERlY2xhcmF0aW9uIix6aD1gI2lmIGRlZmluZWQoQlVNUCkgfHwgZGVmaW5lZChQQVJBTExBWCkgfHwgZGVmaW5lZChDTEVBUkNPQVRfQlVNUCkgfHwgZGVmaW5lZChBTklTT1RST1BJQykKI2lmIGRlZmluZWQoVEFOR0VOVCkgJiYgZGVmaW5lZChOT1JNQUwpIAp2YXJ5aW5nIG1hdDMgdlRCTjsKI2VuZGlmCiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbV2hdPXpoO2NvbnN0IEdoPSJmb2dWZXJ0ZXhEZWNsYXJhdGlvbiIsWGg9YCNpZmRlZiBGT0cKdmFyeWluZyB2ZWMzIHZGb2dEaXN0YW5jZTsKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtHaF09WGg7Y29uc3QgSGg9ImxpZ2h0VnhGcmFnbWVudERlY2xhcmF0aW9uIixLaD1gI2lmZGVmIExJR0hUe1h9CnVuaWZvcm0gdmVjNCB2TGlnaHREYXRhe1h9Owp1bmlmb3JtIHZlYzQgdkxpZ2h0RGlmZnVzZXtYfTsKI2lmZGVmIFNQRUNVTEFSVEVSTQp1bmlmb3JtIHZlYzQgdkxpZ2h0U3BlY3VsYXJ7WH07CiNlbHNlCnZlYzQgdkxpZ2h0U3BlY3VsYXJ7WH09dmVjNCgwLik7CiNlbmRpZgojaWZkZWYgU0hBRE9Xe1h9CiNpZmRlZiBTSEFET1dDU017WH0KdW5pZm9ybSBtYXQ0IGxpZ2h0TWF0cml4e1h9W1NIQURPV0NTTU5VTV9DQVNDQURFU3tYfV07CnZhcnlpbmcgdmVjNCB2UG9zaXRpb25Gcm9tTGlnaHR7WH1bU0hBRE9XQ1NNTlVNX0NBU0NBREVTe1h9XTsKdmFyeWluZyBmbG9hdCB2RGVwdGhNZXRyaWN7WH1bU0hBRE9XQ1NNTlVNX0NBU0NBREVTe1h9XTsKdmFyeWluZyB2ZWM0IHZQb3NpdGlvbkZyb21DYW1lcmF7WH07CiNlbGlmIGRlZmluZWQoU0hBRE9XQ1VCRXtYfSkKI2Vsc2UKdmFyeWluZyB2ZWM0IHZQb3NpdGlvbkZyb21MaWdodHtYfTsKdmFyeWluZyBmbG9hdCB2RGVwdGhNZXRyaWN7WH07CnVuaWZvcm0gbWF0NCBsaWdodE1hdHJpeHtYfTsKI2VuZGlmCnVuaWZvcm0gdmVjNCBzaGFkb3dzSW5mb3tYfTsKdW5pZm9ybSB2ZWMyIGRlcHRoVmFsdWVze1h9OwojZW5kaWYKI2lmZGVmIFNQT1RMSUdIVHtYfQp1bmlmb3JtIHZlYzQgdkxpZ2h0RGlyZWN0aW9ue1h9Owp1bmlmb3JtIHZlYzQgdkxpZ2h0RmFsbG9mZntYfTsKI2VsaWYgZGVmaW5lZChQT0lOVExJR0hUe1h9KQp1bmlmb3JtIHZlYzQgdkxpZ2h0RmFsbG9mZntYfTsKI2VsaWYgZGVmaW5lZChIRU1JTElHSFR7WH0pCnVuaWZvcm0gdmVjMyB2TGlnaHRHcm91bmR7WH07CiNlbmRpZgojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW0hoXT1LaDtjb25zdCBZaD0ibGlnaHRWeFVib0RlY2xhcmF0aW9uIixaaD1gI2lmZGVmIExJR0hUe1h9CnVuaWZvcm0gTGlnaHR7WH0Kewp2ZWM0IHZMaWdodERhdGE7CnZlYzQgdkxpZ2h0RGlmZnVzZTsKdmVjNCB2TGlnaHRTcGVjdWxhcjsKI2lmZGVmIFNQT1RMSUdIVHtYfQp2ZWM0IHZMaWdodERpcmVjdGlvbjsKdmVjNCB2TGlnaHRGYWxsb2ZmOwojZWxpZiBkZWZpbmVkKFBPSU5UTElHSFR7WH0pCnZlYzQgdkxpZ2h0RmFsbG9mZjsKI2VsaWYgZGVmaW5lZChIRU1JTElHSFR7WH0pCnZlYzMgdkxpZ2h0R3JvdW5kOwojZW5kaWYKdmVjNCBzaGFkb3dzSW5mbzsKdmVjMiBkZXB0aFZhbHVlczsKfSBsaWdodHtYfTsKI2lmZGVmIFNIQURPV3tYfQojaWZkZWYgU0hBRE9XQ1NNe1h9CnVuaWZvcm0gbWF0NCBsaWdodE1hdHJpeHtYfVtTSEFET1dDU01OVU1fQ0FTQ0FERVN7WH1dOwp2YXJ5aW5nIHZlYzQgdlBvc2l0aW9uRnJvbUxpZ2h0e1h9W1NIQURPV0NTTU5VTV9DQVNDQURFU3tYfV07CnZhcnlpbmcgZmxvYXQgdkRlcHRoTWV0cmlje1h9W1NIQURPV0NTTU5VTV9DQVNDQURFU3tYfV07CnZhcnlpbmcgdmVjNCB2UG9zaXRpb25Gcm9tQ2FtZXJhe1h9OwojZWxpZiBkZWZpbmVkKFNIQURPV0NVQkV7WH0pCiNlbHNlCnZhcnlpbmcgdmVjNCB2UG9zaXRpb25Gcm9tTGlnaHR7WH07CnZhcnlpbmcgZmxvYXQgdkRlcHRoTWV0cmlje1h9Owp1bmlmb3JtIG1hdDQgbGlnaHRNYXRyaXh7WH07CiNlbmRpZgojZW5kaWYKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVtZaF09Wmg7Y29uc3QgcWg9InByZVBhc3NWZXJ0ZXgiLGpoPWAjaWZkZWYgUFJFUEFTU19ERVBUSAp2Vmlld1Bvcz0odmlldyp3b3JsZFBvcykucmdiOwojZW5kaWYKI2lmIGRlZmluZWQoUFJFUEFTU19WRUxPQ0lUWSkgJiYgZGVmaW5lZChCT05FU19WRUxPQ0lUWV9FTkFCTEVEKQp2Q3VycmVudFBvc2l0aW9uPXZpZXdQcm9qZWN0aW9uKndvcmxkUG9zOwojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+MAptYXQ0IHByZXZpb3VzSW5mbHVlbmNlOwpwcmV2aW91c0luZmx1ZW5jZT1tUHJldmlvdXNCb25lc1tpbnQobWF0cmljZXNJbmRpY2VzWzBdKV0qbWF0cmljZXNXZWlnaHRzWzBdOwojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+MQpwcmV2aW91c0luZmx1ZW5jZSs9bVByZXZpb3VzQm9uZXNbaW50KG1hdHJpY2VzSW5kaWNlc1sxXSldKm1hdHJpY2VzV2VpZ2h0c1sxXTsKI2VuZGlmIAojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+MgpwcmV2aW91c0luZmx1ZW5jZSs9bVByZXZpb3VzQm9uZXNbaW50KG1hdHJpY2VzSW5kaWNlc1syXSldKm1hdHJpY2VzV2VpZ2h0c1syXTsKI2VuZGlmIAojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+MwpwcmV2aW91c0luZmx1ZW5jZSs9bVByZXZpb3VzQm9uZXNbaW50KG1hdHJpY2VzSW5kaWNlc1szXSldKm1hdHJpY2VzV2VpZ2h0c1szXTsKI2VuZGlmCiNpZiBOVU1fQk9ORV9JTkZMVUVOQ0VSUz40CnByZXZpb3VzSW5mbHVlbmNlKz1tUHJldmlvdXNCb25lc1tpbnQobWF0cmljZXNJbmRpY2VzRXh0cmFbMF0pXSptYXRyaWNlc1dlaWdodHNFeHRyYVswXTsKI2VuZGlmIAojaWYgTlVNX0JPTkVfSU5GTFVFTkNFUlM+NQpwcmV2aW91c0luZmx1ZW5jZSs9bVByZXZpb3VzQm9uZXNbaW50KG1hdHJpY2VzSW5kaWNlc0V4dHJhWzFdKV0qbWF0cmljZXNXZWlnaHRzRXh0cmFbMV07CiNlbmRpZiAKI2lmIE5VTV9CT05FX0lORkxVRU5DRVJTPjYKcHJldmlvdXNJbmZsdWVuY2UrPW1QcmV2aW91c0JvbmVzW2ludChtYXRyaWNlc0luZGljZXNFeHRyYVsyXSldKm1hdHJpY2VzV2VpZ2h0c0V4dHJhWzJdOwojZW5kaWYgCiNpZiBOVU1fQk9ORV9JTkZMVUVOQ0VSUz43CnByZXZpb3VzSW5mbHVlbmNlKz1tUHJldmlvdXNCb25lc1tpbnQobWF0cmljZXNJbmRpY2VzRXh0cmFbM10pXSptYXRyaWNlc1dlaWdodHNFeHRyYVszXTsKI2VuZGlmCnZQcmV2aW91c1Bvc2l0aW9uPXByZXZpb3VzVmlld1Byb2plY3Rpb24qZmluYWxQcmV2aW91c1dvcmxkKnByZXZpb3VzSW5mbHVlbmNlKnZlYzQocG9zaXRpb25VcGRhdGVkLDEuMCk7CiNlbHNlCnZQcmV2aW91c1Bvc2l0aW9uPXByZXZpb3VzVmlld1Byb2plY3Rpb24qZmluYWxQcmV2aW91c1dvcmxkKnZlYzQocG9zaXRpb25VcGRhdGVkLDEuMCk7CiNlbmRpZgojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW3FoXT1qaDtjb25zdCAkaD0idXZWYXJpYWJsZURlY2xhcmF0aW9uIixRaD1gI2lmICFkZWZpbmVkKFVWe1h9KSAmJiBkZWZpbmVkKE1BSU5VVntYfSkKdmVjMiB1dntYfT12ZWMyKDAuLDAuKTsKI2VuZGlmCiNpZmRlZiBNQUlOVVZ7WH0Kdk1haW5VVntYfT11dntYfTsKI2VuZGlmCmA7VS5JbmNsdWRlc1NoYWRlcnNTdG9yZVskaF09UWg7Y29uc3QgSmg9InNhbXBsZXJWZXJ0ZXhJbXBsZW1lbnRhdGlvbiIsZWw9YCNpZiBkZWZpbmVkKF9ERUZJTkVOQU1FXykgJiYgX0RFRklORU5BTUVfRElSRUNUVVY9PTAKaWYgKHZfSU5GT05BTUVfPT0wLikKewp2X1ZBUllJTkdOQU1FX1VWPXZlYzIoX01BVFJJWE5BTUVfTWF0cml4KnZlYzQodXZVcGRhdGVkLDEuMCwwLjApKTsKfQojaWZkZWYgVVYyCmVsc2UgaWYgKHZfSU5GT05BTUVfPT0xLikKewp2X1ZBUllJTkdOQU1FX1VWPXZlYzIoX01BVFJJWE5BTUVfTWF0cml4KnZlYzQodXYyLDEuMCwwLjApKTsKfQojZW5kaWYKI2lmZGVmIFVWMwplbHNlIGlmICh2X0lORk9OQU1FXz09Mi4pCnsKdl9WQVJZSU5HTkFNRV9VVj12ZWMyKF9NQVRSSVhOQU1FX01hdHJpeCp2ZWM0KHV2MywxLjAsMC4wKSk7Cn0KI2VuZGlmCiNpZmRlZiBVVjQKZWxzZSBpZiAodl9JTkZPTkFNRV89PTMuKQp7CnZfVkFSWUlOR05BTUVfVVY9dmVjMihfTUFUUklYTkFNRV9NYXRyaXgqdmVjNCh1djQsMS4wLDAuMCkpOwp9CiNlbmRpZgojaWZkZWYgVVY1CmVsc2UgaWYgKHZfSU5GT05BTUVfPT00LikKewp2X1ZBUllJTkdOQU1FX1VWPXZlYzIoX01BVFJJWE5BTUVfTWF0cml4KnZlYzQodXY1LDEuMCwwLjApKTsKfQojZW5kaWYKI2lmZGVmIFVWNgplbHNlIGlmICh2X0lORk9OQU1FXz09NS4pCnsKdl9WQVJZSU5HTkFNRV9VVj12ZWMyKF9NQVRSSVhOQU1FX01hdHJpeCp2ZWM0KHV2NiwxLjAsMC4wKSk7Cn0KI2VuZGlmCiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbSmhdPWVsO2NvbnN0IHRsPSJidW1wVmVydGV4IixpbD1gI2lmIGRlZmluZWQoQlVNUCkgfHwgZGVmaW5lZChQQVJBTExBWCkgfHwgZGVmaW5lZChDTEVBUkNPQVRfQlVNUCkgfHwgZGVmaW5lZChBTklTT1RST1BJQykKI2lmIGRlZmluZWQoVEFOR0VOVCkgJiYgZGVmaW5lZChOT1JNQUwpCnZlYzMgdGJuTm9ybWFsPW5vcm1hbGl6ZShub3JtYWxVcGRhdGVkKTsKdmVjMyB0Ym5UYW5nZW50PW5vcm1hbGl6ZSh0YW5nZW50VXBkYXRlZC54eXopOwp2ZWMzIHRibkJpdGFuZ2VudD1jcm9zcyh0Ym5Ob3JtYWwsdGJuVGFuZ2VudCkqdGFuZ2VudFVwZGF0ZWQudzsKdlRCTj1tYXQzKGZpbmFsV29ybGQpKm1hdDModGJuVGFuZ2VudCx0Ym5CaXRhbmdlbnQsdGJuTm9ybWFsKTsKI2VuZGlmCiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbdGxdPWlsO2NvbnN0IHNsPSJmb2dWZXJ0ZXgiLHJsPWAjaWZkZWYgRk9HCnZGb2dEaXN0YW5jZT0odmlldyp3b3JsZFBvcykueHl6OwojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW3NsXT1ybDtjb25zdCBubD0ic2hhZG93c1ZlcnRleCIsYWw9YCNpZmRlZiBTSEFET1dTCiNpZiBkZWZpbmVkKFNIQURPV0NTTXtYfSkKdlBvc2l0aW9uRnJvbUNhbWVyYXtYfT12aWV3KndvcmxkUG9zOwpmb3IgKGludCBpPTA7IGk8U0hBRE9XQ1NNTlVNX0NBU0NBREVTe1h9OyBpKyspIHsKdlBvc2l0aW9uRnJvbUxpZ2h0e1h9W2ldPWxpZ2h0TWF0cml4e1h9W2ldKndvcmxkUG9zOwojaWZkZWYgVVNFX1JFVkVSU0VfREVQVEhCVUZGRVIKdkRlcHRoTWV0cmlje1h9W2ldPSgtdlBvc2l0aW9uRnJvbUxpZ2h0e1h9W2ldLnorbGlnaHR7WH0uZGVwdGhWYWx1ZXMueCkvbGlnaHR7WH0uZGVwdGhWYWx1ZXMueTsKI2Vsc2UKdkRlcHRoTWV0cmlje1h9W2ldPSh2UG9zaXRpb25Gcm9tTGlnaHR7WH1baV0ueitsaWdodHtYfS5kZXB0aFZhbHVlcy54KS9saWdodHtYfS5kZXB0aFZhbHVlcy55OwojZW5kaWYKfQojZWxpZiBkZWZpbmVkKFNIQURPV3tYfSkgJiYgIWRlZmluZWQoU0hBRE9XQ1VCRXtYfSkKdlBvc2l0aW9uRnJvbUxpZ2h0e1h9PWxpZ2h0TWF0cml4e1h9KndvcmxkUG9zOwojaWZkZWYgVVNFX1JFVkVSU0VfREVQVEhCVUZGRVIKdkRlcHRoTWV0cmlje1h9PSgtdlBvc2l0aW9uRnJvbUxpZ2h0e1h9LnorbGlnaHR7WH0uZGVwdGhWYWx1ZXMueCkvbGlnaHR7WH0uZGVwdGhWYWx1ZXMueTsKI2Vsc2UKdkRlcHRoTWV0cmlje1h9PSh2UG9zaXRpb25Gcm9tTGlnaHR7WH0ueitsaWdodHtYfS5kZXB0aFZhbHVlcy54KS9saWdodHtYfS5kZXB0aFZhbHVlcy55OwojZW5kaWYKI2VuZGlmCiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbbmxdPWFsO2NvbnN0IG9sPSJ2ZXJ0ZXhDb2xvck1peGluZyIsaGw9YCNpZiBkZWZpbmVkKFZFUlRFWENPTE9SKSB8fCBkZWZpbmVkKElOU1RBTkNFU0NPTE9SKSAmJiBkZWZpbmVkKElOU1RBTkNFUykKdkNvbG9yPXZlYzQoMS4wKTsKI2lmZGVmIFZFUlRFWENPTE9SCiNpZmRlZiBWRVJURVhBTFBIQQp2Q29sb3IqPWNvbG9yOwojZWxzZQp2Q29sb3IucmdiKj1jb2xvci5yZ2I7CiNlbmRpZgojZW5kaWYKI2lmZGVmIElOU1RBTkNFU0NPTE9SCnZDb2xvcio9aW5zdGFuY2VDb2xvcjsKI2VuZGlmCiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbb2xdPWhsO2NvbnN0IGxsPSJwb2ludENsb3VkVmVydGV4IixjbD1gI2lmIGRlZmluZWQoUE9JTlRTSVpFKSAmJiAhZGVmaW5lZChXRUJHUFUpCmdsX1BvaW50U2l6ZT1wb2ludFNpemU7CiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbbGxdPWNsO2NvbnN0IHVsPSJsb2dEZXB0aFZlcnRleCIsZGw9YCNpZmRlZiBMT0dBUklUSE1JQ0RFUFRICnZGcmFnbWVudERlcHRoPTEuMCtnbF9Qb3NpdGlvbi53OwpnbF9Qb3NpdGlvbi56PWxvZzIobWF4KDAuMDAwMDAxLHZGcmFnbWVudERlcHRoKSkqbG9nYXJpdGhtaWNEZXB0aENvbnN0YW50OwojZW5kaWYKYDtVLkluY2x1ZGVzU2hhZGVyc1N0b3JlW3VsXT1kbDtjb25zdCBmbD0iZGVmYXVsdFZlcnRleFNoYWRlciIsX2w9YCNpbmNsdWRlPF9fZGVjbF9fZGVmYXVsdFZlcnRleD4KI2RlZmluZSBDVVNUT01fVkVSVEVYX0JFR0lOCmF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uOwojaWZkZWYgTk9STUFMCmF0dHJpYnV0ZSB2ZWMzIG5vcm1hbDsKI2VuZGlmCiNpZmRlZiBUQU5HRU5UCmF0dHJpYnV0ZSB2ZWM0IHRhbmdlbnQ7CiNlbmRpZgojaWZkZWYgVVYxCmF0dHJpYnV0ZSB2ZWMyIHV2OwojZW5kaWYKI2luY2x1ZGU8dXZBdHRyaWJ1dGVEZWNsYXJhdGlvbj5bMi4uN10KI2lmZGVmIFZFUlRFWENPTE9SCmF0dHJpYnV0ZSB2ZWM0IGNvbG9yOwojZW5kaWYKI2luY2x1ZGU8aGVscGVyRnVuY3Rpb25zPgojaW5jbHVkZTxib25lc0RlY2xhcmF0aW9uPgojaW5jbHVkZTxiYWtlZFZlcnRleEFuaW1hdGlvbkRlY2xhcmF0aW9uPgojaW5jbHVkZTxpbnN0YW5jZXNEZWNsYXJhdGlvbj4KI2luY2x1ZGU8cHJlUGFzc1ZlcnRleERlY2xhcmF0aW9uPgojaW5jbHVkZTxtYWluVVZWYXJ5aW5nRGVjbGFyYXRpb24+WzEuLjddCiNpbmNsdWRlPHNhbXBsZXJWZXJ0ZXhEZWNsYXJhdGlvbj4oX0RFRklORU5BTUVfLERJRkZVU0UsX1ZBUllJTkdOQU1FXyxEaWZmdXNlKQojaW5jbHVkZTxzYW1wbGVyVmVydGV4RGVjbGFyYXRpb24+KF9ERUZJTkVOQU1FXyxERVRBSUwsX1ZBUllJTkdOQU1FXyxEZXRhaWwpCiNpbmNsdWRlPHNhbXBsZXJWZXJ0ZXhEZWNsYXJhdGlvbj4oX0RFRklORU5BTUVfLEFNQklFTlQsX1ZBUllJTkdOQU1FXyxBbWJpZW50KQojaW5jbHVkZTxzYW1wbGVyVmVydGV4RGVjbGFyYXRpb24+KF9ERUZJTkVOQU1FXyxPUEFDSVRZLF9WQVJZSU5HTkFNRV8sT3BhY2l0eSkKI2luY2x1ZGU8c2FtcGxlclZlcnRleERlY2xhcmF0aW9uPihfREVGSU5FTkFNRV8sRU1JU1NJVkUsX1ZBUllJTkdOQU1FXyxFbWlzc2l2ZSkKI2luY2x1ZGU8c2FtcGxlclZlcnRleERlY2xhcmF0aW9uPihfREVGSU5FTkFNRV8sTElHSFRNQVAsX1ZBUllJTkdOQU1FXyxMaWdodG1hcCkKI2lmIGRlZmluZWQoU1BFQ1VMQVJURVJNKQojaW5jbHVkZTxzYW1wbGVyVmVydGV4RGVjbGFyYXRpb24+KF9ERUZJTkVOQU1FXyxTUEVDVUxBUixfVkFSWUlOR05BTUVfLFNwZWN1bGFyKQojZW5kaWYKI2luY2x1ZGU8c2FtcGxlclZlcnRleERlY2xhcmF0aW9uPihfREVGSU5FTkFNRV8sQlVNUCxfVkFSWUlOR05BTUVfLEJ1bXApCnZhcnlpbmcgdmVjMyB2UG9zaXRpb25XOwojaWZkZWYgTk9STUFMCnZhcnlpbmcgdmVjMyB2Tm9ybWFsVzsKI2VuZGlmCiNpZiBkZWZpbmVkKFZFUlRFWENPTE9SKSB8fCBkZWZpbmVkKElOU1RBTkNFU0NPTE9SKSAmJiBkZWZpbmVkKElOU1RBTkNFUykKdmFyeWluZyB2ZWM0IHZDb2xvcjsKI2VuZGlmCiNpbmNsdWRlPGJ1bXBWZXJ0ZXhEZWNsYXJhdGlvbj4KI2luY2x1ZGU8Y2xpcFBsYW5lVmVydGV4RGVjbGFyYXRpb24+CiNpbmNsdWRlPGZvZ1ZlcnRleERlY2xhcmF0aW9uPgojaW5jbHVkZTxfX2RlY2xfX2xpZ2h0VnhGcmFnbWVudD5bMC4ubWF4U2ltdWx0YW5lb3VzTGlnaHRzXQojaW5jbHVkZTxtb3JwaFRhcmdldHNWZXJ0ZXhHbG9iYWxEZWNsYXJhdGlvbj4KI2luY2x1ZGU8bW9ycGhUYXJnZXRzVmVydGV4RGVjbGFyYXRpb24+WzAuLm1heFNpbXVsdGFuZW91c01vcnBoVGFyZ2V0c10KI2lmZGVmIFJFRkxFQ1RJT05NQVBfU0tZQk9YCnZhcnlpbmcgdmVjMyB2UG9zaXRpb25VVlc7CiNlbmRpZgojaWYgZGVmaW5lZChSRUZMRUNUSU9OTUFQX0VRVUlSRUNUQU5HVUxBUl9GSVhFRCkgfHwgZGVmaW5lZChSRUZMRUNUSU9OTUFQX01JUlJPUkVERVFVSVJFQ1RBTkdVTEFSX0ZJWEVEKQp2YXJ5aW5nIHZlYzMgdkRpcmVjdGlvblc7CiNlbmRpZgojaW5jbHVkZTxsb2dEZXB0aERlY2xhcmF0aW9uPgojZGVmaW5lIENVU1RPTV9WRVJURVhfREVGSU5JVElPTlMKdm9pZCBtYWluKHZvaWQpIHsKI2RlZmluZSBDVVNUT01fVkVSVEVYX01BSU5fQkVHSU4KdmVjMyBwb3NpdGlvblVwZGF0ZWQ9cG9zaXRpb247CiNpZmRlZiBOT1JNQUwKdmVjMyBub3JtYWxVcGRhdGVkPW5vcm1hbDsKI2VuZGlmCiNpZmRlZiBUQU5HRU5UCnZlYzQgdGFuZ2VudFVwZGF0ZWQ9dGFuZ2VudDsKI2VuZGlmCiNpZmRlZiBVVjEKdmVjMiB1dlVwZGF0ZWQ9dXY7CiNlbmRpZgojaW5jbHVkZTxtb3JwaFRhcmdldHNWZXJ0ZXhHbG9iYWw+CiNpbmNsdWRlPG1vcnBoVGFyZ2V0c1ZlcnRleD5bMC4ubWF4U2ltdWx0YW5lb3VzTW9ycGhUYXJnZXRzXQojaWZkZWYgUkVGTEVDVElPTk1BUF9TS1lCT1gKdlBvc2l0aW9uVVZXPXBvc2l0aW9uVXBkYXRlZDsKI2VuZGlmCiNkZWZpbmUgQ1VTVE9NX1ZFUlRFWF9VUERBVEVfUE9TSVRJT04KI2RlZmluZSBDVVNUT01fVkVSVEVYX1VQREFURV9OT1JNQUwKI2luY2x1ZGU8aW5zdGFuY2VzVmVydGV4PgojaWYgZGVmaW5lZChQUkVQQVNTKSAmJiBkZWZpbmVkKFBSRVBBU1NfVkVMT0NJVFkpICYmICFkZWZpbmVkKEJPTkVTX1ZFTE9DSVRZX0VOQUJMRUQpCnZDdXJyZW50UG9zaXRpb249dmlld1Byb2plY3Rpb24qZmluYWxXb3JsZCp2ZWM0KHBvc2l0aW9uVXBkYXRlZCwxLjApOwp2UHJldmlvdXNQb3NpdGlvbj1wcmV2aW91c1ZpZXdQcm9qZWN0aW9uKmZpbmFsUHJldmlvdXNXb3JsZCp2ZWM0KHBvc2l0aW9uVXBkYXRlZCwxLjApOwojZW5kaWYKI2luY2x1ZGU8Ym9uZXNWZXJ0ZXg+CiNpbmNsdWRlPGJha2VkVmVydGV4QW5pbWF0aW9uPgp2ZWM0IHdvcmxkUG9zPWZpbmFsV29ybGQqdmVjNChwb3NpdGlvblVwZGF0ZWQsMS4wKTsKI2lmZGVmIE5PUk1BTAptYXQzIG5vcm1hbFdvcmxkPW1hdDMoZmluYWxXb3JsZCk7CiNpZiBkZWZpbmVkKElOU1RBTkNFUykgJiYgZGVmaW5lZChUSElOX0lOU1RBTkNFUykKdk5vcm1hbFc9bm9ybWFsVXBkYXRlZC92ZWMzKGRvdChub3JtYWxXb3JsZFswXSxub3JtYWxXb3JsZFswXSksZG90KG5vcm1hbFdvcmxkWzFdLG5vcm1hbFdvcmxkWzFdKSxkb3Qobm9ybWFsV29ybGRbMl0sbm9ybWFsV29ybGRbMl0pKTsKdk5vcm1hbFc9bm9ybWFsaXplKG5vcm1hbFdvcmxkKnZOb3JtYWxXKTsKI2Vsc2UKI2lmZGVmIE5PTlVOSUZPUk1TQ0FMSU5HCm5vcm1hbFdvcmxkPXRyYW5zcG9zZU1hdDMoaW52ZXJzZU1hdDMobm9ybWFsV29ybGQpKTsKI2VuZGlmCnZOb3JtYWxXPW5vcm1hbGl6ZShub3JtYWxXb3JsZCpub3JtYWxVcGRhdGVkKTsKI2VuZGlmCiNlbmRpZgojZGVmaW5lIENVU1RPTV9WRVJURVhfVVBEQVRFX1dPUkxEUE9TCiNpZmRlZiBNVUxUSVZJRVcKaWYgKGdsX1ZpZXdJRF9PVlI9PTB1KSB7CmdsX1Bvc2l0aW9uPXZpZXdQcm9qZWN0aW9uKndvcmxkUG9zOwp9IGVsc2UgewpnbF9Qb3NpdGlvbj12aWV3UHJvamVjdGlvblIqd29ybGRQb3M7Cn0KI2Vsc2UKZ2xfUG9zaXRpb249dmlld1Byb2plY3Rpb24qd29ybGRQb3M7CiNlbmRpZgp2UG9zaXRpb25XPXZlYzMod29ybGRQb3MpOwojaW5jbHVkZTxwcmVQYXNzVmVydGV4PgojaWYgZGVmaW5lZChSRUZMRUNUSU9OTUFQX0VRVUlSRUNUQU5HVUxBUl9GSVhFRCkgfHwgZGVmaW5lZChSRUZMRUNUSU9OTUFQX01JUlJPUkVERVFVSVJFQ1RBTkdVTEFSX0ZJWEVEKQp2RGlyZWN0aW9uVz1ub3JtYWxpemUodmVjMyhmaW5hbFdvcmxkKnZlYzQocG9zaXRpb25VcGRhdGVkLDAuMCkpKTsKI2VuZGlmCiNpZm5kZWYgVVYxCnZlYzIgdXZVcGRhdGVkPXZlYzIoMC4sMC4pOwojZW5kaWYKI2lmZGVmIE1BSU5VVjEKdk1haW5VVjE9dXZVcGRhdGVkOwojZW5kaWYKI2luY2x1ZGU8dXZWYXJpYWJsZURlY2xhcmF0aW9uPlsyLi43XQojaW5jbHVkZTxzYW1wbGVyVmVydGV4SW1wbGVtZW50YXRpb24+KF9ERUZJTkVOQU1FXyxESUZGVVNFLF9WQVJZSU5HTkFNRV8sRGlmZnVzZSxfTUFUUklYTkFNRV8sZGlmZnVzZSxfSU5GT05BTUVfLERpZmZ1c2VJbmZvcy54KQojaW5jbHVkZTxzYW1wbGVyVmVydGV4SW1wbGVtZW50YXRpb24+KF9ERUZJTkVOQU1FXyxERVRBSUwsX1ZBUllJTkdOQU1FXyxEZXRhaWwsX01BVFJJWE5BTUVfLGRldGFpbCxfSU5GT05BTUVfLERldGFpbEluZm9zLngpCiNpbmNsdWRlPHNhbXBsZXJWZXJ0ZXhJbXBsZW1lbnRhdGlvbj4oX0RFRklORU5BTUVfLEFNQklFTlQsX1ZBUllJTkdOQU1FXyxBbWJpZW50LF9NQVRSSVhOQU1FXyxhbWJpZW50LF9JTkZPTkFNRV8sQW1iaWVudEluZm9zLngpCiNpbmNsdWRlPHNhbXBsZXJWZXJ0ZXhJbXBsZW1lbnRhdGlvbj4oX0RFRklORU5BTUVfLE9QQUNJVFksX1ZBUllJTkdOQU1FXyxPcGFjaXR5LF9NQVRSSVhOQU1FXyxvcGFjaXR5LF9JTkZPTkFNRV8sT3BhY2l0eUluZm9zLngpCiNpbmNsdWRlPHNhbXBsZXJWZXJ0ZXhJbXBsZW1lbnRhdGlvbj4oX0RFRklORU5BTUVfLEVNSVNTSVZFLF9WQVJZSU5HTkFNRV8sRW1pc3NpdmUsX01BVFJJWE5BTUVfLGVtaXNzaXZlLF9JTkZPTkFNRV8sRW1pc3NpdmVJbmZvcy54KQojaW5jbHVkZTxzYW1wbGVyVmVydGV4SW1wbGVtZW50YXRpb24+KF9ERUZJTkVOQU1FXyxMSUdIVE1BUCxfVkFSWUlOR05BTUVfLExpZ2h0bWFwLF9NQVRSSVhOQU1FXyxsaWdodG1hcCxfSU5GT05BTUVfLExpZ2h0bWFwSW5mb3MueCkKI2lmIGRlZmluZWQoU1BFQ1VMQVJURVJNKQojaW5jbHVkZTxzYW1wbGVyVmVydGV4SW1wbGVtZW50YXRpb24+KF9ERUZJTkVOQU1FXyxTUEVDVUxBUixfVkFSWUlOR05BTUVfLFNwZWN1bGFyLF9NQVRSSVhOQU1FXyxzcGVjdWxhcixfSU5GT05BTUVfLFNwZWN1bGFySW5mb3MueCkKI2VuZGlmCiNpbmNsdWRlPHNhbXBsZXJWZXJ0ZXhJbXBsZW1lbnRhdGlvbj4oX0RFRklORU5BTUVfLEJVTVAsX1ZBUllJTkdOQU1FXyxCdW1wLF9NQVRSSVhOQU1FXyxidW1wLF9JTkZPTkFNRV8sQnVtcEluZm9zLngpCiNpbmNsdWRlPGJ1bXBWZXJ0ZXg+CiNpbmNsdWRlPGNsaXBQbGFuZVZlcnRleD4KI2luY2x1ZGU8Zm9nVmVydGV4PgojaW5jbHVkZTxzaGFkb3dzVmVydGV4PlswLi5tYXhTaW11bHRhbmVvdXNMaWdodHNdCiNpbmNsdWRlPHZlcnRleENvbG9yTWl4aW5nPgojaW5jbHVkZTxwb2ludENsb3VkVmVydGV4PgojaW5jbHVkZTxsb2dEZXB0aFZlcnRleD4KI2RlZmluZSBDVVNUT01fVkVSVEVYX01BSU5fRU5ECn0KYDtVLlNoYWRlcnNTdG9yZVtmbF09X2w7Y29uc3QgZ2w9bmV3IFJlZ0V4cCgiXihbZ2ltdXNdKykhIik7Y2xhc3MgZWl7Y29uc3RydWN0b3IoZSl7dGhpcy5fcGx1Z2lucz1bXSx0aGlzLl9hY3RpdmVQbHVnaW5zPVtdLHRoaXMuX2FjdGl2ZVBsdWdpbnNGb3JFeHRyYUV2ZW50cz1bXSx0aGlzLl9tYXRlcmlhbD1lLHRoaXMuX3NjZW5lPWUuZ2V0U2NlbmUoKSx0aGlzLl9lbmdpbmU9dGhpcy5fc2NlbmUuZ2V0RW5naW5lKCl9X2FkZFBsdWdpbihlKXtmb3IobGV0IHM9MDtzPHRoaXMuX3BsdWdpbnMubGVuZ3RoOysrcylpZih0aGlzLl9wbHVnaW5zW3NdLm5hbWU9PT1lLm5hbWUpdGhyb3dgUGx1Z2luICIke2UubmFtZX0iIGFscmVhZHkgYWRkZWQgdG8gdGhlIG1hdGVyaWFsICIke3RoaXMuX21hdGVyaWFsLm5hbWV9IiFgO2lmKHRoaXMuX21hdGVyaWFsLl91bmlmb3JtQnVmZmVyTGF5b3V0QnVpbHQpdGhyb3dgVGhlIHBsdWdpbiAiJHtlLm5hbWV9IiBjYW4ndCBiZSBhZGRlZCB0byB0aGUgbWF0ZXJpYWwgIiR7dGhpcy5fbWF0ZXJpYWwubmFtZX0iIGJlY2F1c2UgdGhpcyBtYXRlcmlhbCBoYXMgYWxyZWFkeSBiZWVuIHVzZWQgZm9yIHJlbmRlcmluZyEgUGxlYXNlIGFkZCBwbHVnaW5zIHRvIG1hdGVyaWFscyBiZWZvcmUgYW55IHJlbmRlcmluZyB3aXRoIHRoaXMgbWF0ZXJpYWwgb2NjdXJzLmA7Y29uc3QgdD1lLmdldENsYXNzTmFtZSgpO2VpLl9NYXRlcmlhbFBsdWdpbkNsYXNzVG9NYWluRGVmaW5lW3RdfHwoZWkuX01hdGVyaWFsUGx1Z2luQ2xhc3NUb01haW5EZWZpbmVbdF09Ik1BVEVSSUFMUExVR0lOXyIrICsrZWkuX01hdGVyaWFsUGx1Z2luQ291bnRlciksdGhpcy5fbWF0ZXJpYWwuX2NhbGxiYWNrUGx1Z2luRXZlbnRHZW5lcmljPXRoaXMuX2hhbmRsZVBsdWdpbkV2ZW50LmJpbmQodGhpcyksdGhpcy5fcGx1Z2lucy5wdXNoKGUpLHRoaXMuX3BsdWdpbnMuc29ydCgocyxyKT0+cy5wcmlvcml0eS1yLnByaW9yaXR5KSx0aGlzLl9jb2RlSW5qZWN0aW9uUG9pbnRzPXt9O2NvbnN0IGk9e307aVtlaS5fTWF0ZXJpYWxQbHVnaW5DbGFzc1RvTWFpbkRlZmluZVt0XV09e3R5cGU6ImJvb2xlYW4iLGRlZmF1bHQ6ITB9O2Zvcihjb25zdCBzIG9mIHRoaXMuX3BsdWdpbnMpcy5jb2xsZWN0RGVmaW5lcyhpKSx0aGlzLl9jb2xsZWN0UG9pbnROYW1lcygidmVydGV4IixzLmdldEN1c3RvbUNvZGUoInZlcnRleCIpKSx0aGlzLl9jb2xsZWN0UG9pbnROYW1lcygiZnJhZ21lbnQiLHMuZ2V0Q3VzdG9tQ29kZSgiZnJhZ21lbnQiKSk7dGhpcy5fZGVmaW5lTmFtZXNGcm9tUGx1Z2lucz1pfV9hY3RpdmF0ZVBsdWdpbihlKXt0aGlzLl9hY3RpdmVQbHVnaW5zLmluZGV4T2YoZSk9PT0tMSYmKHRoaXMuX2FjdGl2ZVBsdWdpbnMucHVzaChlKSx0aGlzLl9hY3RpdmVQbHVnaW5zLnNvcnQoKHQsaSk9PnQucHJpb3JpdHktaS5wcmlvcml0eSksdGhpcy5fbWF0ZXJpYWwuX2NhbGxiYWNrUGx1Z2luRXZlbnRJc1JlYWR5Rm9yU3ViTWVzaD10aGlzLl9oYW5kbGVQbHVnaW5FdmVudElzUmVhZHlGb3JTdWJNZXNoLmJpbmQodGhpcyksdGhpcy5fbWF0ZXJpYWwuX2NhbGxiYWNrUGx1Z2luRXZlbnRQcmVwYXJlRGVmaW5lc0JlZm9yZUF0dHJpYnV0ZXM9dGhpcy5faGFuZGxlUGx1Z2luRXZlbnRQcmVwYXJlRGVmaW5lc0JlZm9yZUF0dHJpYnV0ZXMuYmluZCh0aGlzKSx0aGlzLl9tYXRlcmlhbC5fY2FsbGJhY2tQbHVnaW5FdmVudFByZXBhcmVEZWZpbmVzPXRoaXMuX2hhbmRsZVBsdWdpbkV2ZW50UHJlcGFyZURlZmluZXMuYmluZCh0aGlzKSx0aGlzLl9tYXRlcmlhbC5fY2FsbGJhY2tQbHVnaW5FdmVudEJpbmRGb3JTdWJNZXNoPXRoaXMuX2hhbmRsZVBsdWdpbkV2ZW50QmluZEZvclN1Yk1lc2guYmluZCh0aGlzKSxlLnJlZ2lzdGVyRm9yRXh0cmFFdmVudHMmJih0aGlzLl9hY3RpdmVQbHVnaW5zRm9yRXh0cmFFdmVudHMucHVzaChlKSx0aGlzLl9hY3RpdmVQbHVnaW5zRm9yRXh0cmFFdmVudHMuc29ydCgodCxpKT0+dC5wcmlvcml0eS1pLnByaW9yaXR5KSx0aGlzLl9tYXRlcmlhbC5fY2FsbGJhY2tQbHVnaW5FdmVudEhhc1JlbmRlclRhcmdldFRleHR1cmVzPXRoaXMuX2hhbmRsZVBsdWdpbkV2ZW50SGFzUmVuZGVyVGFyZ2V0VGV4dHVyZXMuYmluZCh0aGlzKSx0aGlzLl9tYXRlcmlhbC5fY2FsbGJhY2tQbHVnaW5FdmVudEZpbGxSZW5kZXJUYXJnZXRUZXh0dXJlcz10aGlzLl9oYW5kbGVQbHVnaW5FdmVudEZpbGxSZW5kZXJUYXJnZXRUZXh0dXJlcy5iaW5kKHRoaXMpLHRoaXMuX21hdGVyaWFsLl9jYWxsYmFja1BsdWdpbkV2ZW50SGFyZEJpbmRGb3JTdWJNZXNoPXRoaXMuX2hhbmRsZVBsdWdpbkV2ZW50SGFyZEJpbmRGb3JTdWJNZXNoLmJpbmQodGhpcykpKX1nZXRQbHVnaW4oZSl7Zm9yKGxldCB0PTA7dDx0aGlzLl9wbHVnaW5zLmxlbmd0aDsrK3QpaWYodGhpcy5fcGx1Z2luc1t0XS5uYW1lPT09ZSlyZXR1cm4gdGhpcy5fcGx1Z2luc1t0XTtyZXR1cm4gbnVsbH1faGFuZGxlUGx1Z2luRXZlbnRJc1JlYWR5Rm9yU3ViTWVzaChlKXtsZXQgdD0hMDtmb3IoY29uc3QgaSBvZiB0aGlzLl9hY3RpdmVQbHVnaW5zKXQ9dCYmaS5pc1JlYWR5Rm9yU3ViTWVzaChlLmRlZmluZXMsdGhpcy5fc2NlbmUsdGhpcy5fZW5naW5lLGUuc3ViTWVzaCk7ZS5pc1JlYWR5Rm9yU3ViTWVzaD10fV9oYW5kbGVQbHVnaW5FdmVudFByZXBhcmVEZWZpbmVzQmVmb3JlQXR0cmlidXRlcyhlKXtmb3IoY29uc3QgdCBvZiB0aGlzLl9hY3RpdmVQbHVnaW5zKXQucHJlcGFyZURlZmluZXNCZWZvcmVBdHRyaWJ1dGVzKGUuZGVmaW5lcyx0aGlzLl9zY2VuZSxlLm1lc2gpfV9oYW5kbGVQbHVnaW5FdmVudFByZXBhcmVEZWZpbmVzKGUpe2Zvcihjb25zdCB0IG9mIHRoaXMuX2FjdGl2ZVBsdWdpbnMpdC5wcmVwYXJlRGVmaW5lcyhlLmRlZmluZXMsdGhpcy5fc2NlbmUsZS5tZXNoKX1faGFuZGxlUGx1Z2luRXZlbnRIYXJkQmluZEZvclN1Yk1lc2goZSl7Zm9yKGNvbnN0IHQgb2YgdGhpcy5fYWN0aXZlUGx1Z2luc0ZvckV4dHJhRXZlbnRzKXQuaGFyZEJpbmRGb3JTdWJNZXNoKHRoaXMuX21hdGVyaWFsLl91bmlmb3JtQnVmZmVyLHRoaXMuX3NjZW5lLHRoaXMuX2VuZ2luZSxlLnN1Yk1lc2gpfV9oYW5kbGVQbHVnaW5FdmVudEJpbmRGb3JTdWJNZXNoKGUpe2Zvcihjb25zdCB0IG9mIHRoaXMuX2FjdGl2ZVBsdWdpbnMpdC5iaW5kRm9yU3ViTWVzaCh0aGlzLl9tYXRlcmlhbC5fdW5pZm9ybUJ1ZmZlcix0aGlzLl9zY2VuZSx0aGlzLl9lbmdpbmUsZS5zdWJNZXNoKX1faGFuZGxlUGx1Z2luRXZlbnRIYXNSZW5kZXJUYXJnZXRUZXh0dXJlcyhlKXtsZXQgdD0hMTtmb3IoY29uc3QgaSBvZiB0aGlzLl9hY3RpdmVQbHVnaW5zRm9yRXh0cmFFdmVudHMpaWYodD1pLmhhc1JlbmRlclRhcmdldFRleHR1cmVzKCksdClicmVhaztlLmhhc1JlbmRlclRhcmdldFRleHR1cmVzPXR9X2hhbmRsZVBsdWdpbkV2ZW50RmlsbFJlbmRlclRhcmdldFRleHR1cmVzKGUpe2Zvcihjb25zdCB0IG9mIHRoaXMuX2FjdGl2ZVBsdWdpbnNGb3JFeHRyYUV2ZW50cyl0LmZpbGxSZW5kZXJUYXJnZXRUZXh0dXJlcyhlLnJlbmRlclRhcmdldHMpfV9oYW5kbGVQbHVnaW5FdmVudChlLHQpe3N3aXRjaChlKXtjYXNlIFFlLkdldEFjdGl2ZVRleHR1cmVzOntjb25zdCBpPXQ7Zm9yKGNvbnN0IHMgb2YgdGhpcy5fYWN0aXZlUGx1Z2lucylzLmdldEFjdGl2ZVRleHR1cmVzKGkuYWN0aXZlVGV4dHVyZXMpO2JyZWFrfWNhc2UgUWUuR2V0QW5pbWF0YWJsZXM6e2NvbnN0IGk9dDtmb3IoY29uc3QgcyBvZiB0aGlzLl9hY3RpdmVQbHVnaW5zKXMuZ2V0QW5pbWF0YWJsZXMoaS5hbmltYXRhYmxlcyk7YnJlYWt9Y2FzZSBRZS5IYXNUZXh0dXJlOntjb25zdCBpPXQ7bGV0IHM9ITE7Zm9yKGNvbnN0IHIgb2YgdGhpcy5fYWN0aXZlUGx1Z2lucylpZihzPXIuaGFzVGV4dHVyZShpLnRleHR1cmUpLHMpYnJlYWs7aS5oYXNUZXh0dXJlPXM7YnJlYWt9Y2FzZSBRZS5EaXNwb3NlZDp7Y29uc3QgaT10O2Zvcihjb25zdCBzIG9mIHRoaXMuX3BsdWdpbnMpcy5kaXNwb3NlKGkuZm9yY2VEaXNwb3NlVGV4dHVyZXMpO2JyZWFrfWNhc2UgUWUuR2V0RGVmaW5lTmFtZXM6e2NvbnN0IGk9dDtpLmRlZmluZU5hbWVzPXRoaXMuX2RlZmluZU5hbWVzRnJvbVBsdWdpbnM7YnJlYWt9Y2FzZSBRZS5QcmVwYXJlRWZmZWN0Ontjb25zdCBpPXQ7Zm9yKGNvbnN0IHMgb2YgdGhpcy5fYWN0aXZlUGx1Z2lucylpLmZhbGxiYWNrUmFuaz1zLmFkZEZhbGxiYWNrcyhpLmRlZmluZXMsaS5mYWxsYmFja3MsaS5mYWxsYmFja1JhbmspLHMuZ2V0QXR0cmlidXRlcyhpLmF0dHJpYnV0ZXMsdGhpcy5fc2NlbmUsaS5tZXNoKTt0aGlzLl91bmlmb3JtTGlzdC5sZW5ndGg+MCYmaS51bmlmb3Jtcy5wdXNoKC4uLnRoaXMuX3VuaWZvcm1MaXN0KSx0aGlzLl9zYW1wbGVyTGlzdC5sZW5ndGg+MCYmaS5zYW1wbGVycy5wdXNoKC4uLnRoaXMuX3NhbXBsZXJMaXN0KSx0aGlzLl91Ym9MaXN0Lmxlbmd0aD4wJiZpLnVuaWZvcm1CdWZmZXJzTmFtZXMucHVzaCguLi50aGlzLl91Ym9MaXN0KSxpLmN1c3RvbUNvZGU9dGhpcy5faW5qZWN0Q3VzdG9tQ29kZShpLmN1c3RvbUNvZGUpO2JyZWFrfWNhc2UgUWUuUHJlcGFyZVVuaWZvcm1CdWZmZXI6e2NvbnN0IGk9dDt0aGlzLl91Ym9EZWNsYXJhdGlvbj0iIix0aGlzLl92ZXJ0ZXhEZWNsYXJhdGlvbj0iIix0aGlzLl9mcmFnbWVudERlY2xhcmF0aW9uPSIiLHRoaXMuX3VuaWZvcm1MaXN0PVtdLHRoaXMuX3NhbXBsZXJMaXN0PVtdLHRoaXMuX3Vib0xpc3Q9W107Zm9yKGNvbnN0IHMgb2YgdGhpcy5fcGx1Z2lucyl7Y29uc3Qgcj1zLmdldFVuaWZvcm1zKCk7aWYocil7aWYoci51Ym8pZm9yKGNvbnN0IG4gb2Ygci51Ym8paS51Ym8uYWRkVW5pZm9ybShuLm5hbWUsbi5zaXplKSx0aGlzLl91Ym9EZWNsYXJhdGlvbis9YCR7bi50eXBlfSAke24ubmFtZX07XHIKYCx0aGlzLl91bmlmb3JtTGlzdC5wdXNoKG4ubmFtZSk7ci52ZXJ0ZXgmJih0aGlzLl92ZXJ0ZXhEZWNsYXJhdGlvbis9ci52ZXJ0ZXgrYFxyCmApLHIuZnJhZ21lbnQmJih0aGlzLl9mcmFnbWVudERlY2xhcmF0aW9uKz1yLmZyYWdtZW50K2BccgpgKX1zLmdldFNhbXBsZXJzKHRoaXMuX3NhbXBsZXJMaXN0KSxzLmdldFVuaWZvcm1CdWZmZXJzTmFtZXModGhpcy5fdWJvTGlzdCl9YnJlYWt9fX1fY29sbGVjdFBvaW50TmFtZXMoZSx0KXtpZih0KWZvcihjb25zdCBpIGluIHQpdGhpcy5fY29kZUluamVjdGlvblBvaW50c1tlXXx8KHRoaXMuX2NvZGVJbmplY3Rpb25Qb2ludHNbZV09e30pLHRoaXMuX2NvZGVJbmplY3Rpb25Qb2ludHNbZV1baV09ITB9X2luamVjdEN1c3RvbUNvZGUoZSl7cmV0dXJuKHQsaSk9Pnt2YXIgcztlJiYoaT1lKHQsaSkpLHRoaXMuX3Vib0RlY2xhcmF0aW9uJiYoaT1pLnJlcGxhY2UoIiNkZWZpbmUgQURESVRJT05BTF9VQk9fREVDTEFSQVRJT04iLHRoaXMuX3Vib0RlY2xhcmF0aW9uKSksdGhpcy5fdmVydGV4RGVjbGFyYXRpb24mJihpPWkucmVwbGFjZSgiI2RlZmluZSBBRERJVElPTkFMX1ZFUlRFWF9ERUNMQVJBVElPTiIsdGhpcy5fdmVydGV4RGVjbGFyYXRpb24pKSx0aGlzLl9mcmFnbWVudERlY2xhcmF0aW9uJiYoaT1pLnJlcGxhY2UoIiNkZWZpbmUgQURESVRJT05BTF9GUkFHTUVOVF9ERUNMQVJBVElPTiIsdGhpcy5fZnJhZ21lbnREZWNsYXJhdGlvbikpO2NvbnN0IHI9KHM9dGhpcy5fY29kZUluamVjdGlvblBvaW50cyk9PT1udWxsfHxzPT09dm9pZCAwP3ZvaWQgMDpzW3RdO2lmKCFyKXJldHVybiBpO2ZvcihsZXQgbiBpbiByKXtsZXQgYT0iIjtmb3IoY29uc3QgbyBvZiB0aGlzLl9hY3RpdmVQbHVnaW5zKXtjb25zdCBoPW8uZ2V0Q3VzdG9tQ29kZSh0KTtoIT1udWxsJiZoW25dJiYoYSs9aFtuXStgXHIKYCl9aWYoYS5sZW5ndGg+MClpZihuLmNoYXJBdCgwKT09PSIhIil7bj1uLnN1YnN0cmluZygxKTtsZXQgbz0iZyI7aWYobi5jaGFyQXQoMCk9PT0iISIpbz0iIixuPW4uc3Vic3RyaW5nKDEpO2Vsc2V7Y29uc3QgZD1nbC5leGVjKG4pO2QmJmQubGVuZ3RoPj0yJiYobz1kWzFdLG49bi5zdWJzdHJpbmcoby5sZW5ndGgrMSkpfW8uaW5kZXhPZigiZyIpPDAmJihvKz0iZyIpO2NvbnN0IGg9aSxsPW5ldyBSZWdFeHAobixvKTtsZXQgdT1sLmV4ZWMoaCk7Zm9yKDt1IT09bnVsbDspe2xldCBkPWE7Zm9yKGxldCBmPTA7Zjx1Lmxlbmd0aDsrK2YpZD1kLnJlcGxhY2UoIiQiK2YsdVtmXSk7aT1pLnJlcGxhY2UodVswXSxkKSx1PWwuZXhlYyhoKX19ZWxzZXtjb25zdCBvPSIjZGVmaW5lICIrbjtpPWkucmVwbGFjZShvLGBccgpgK2ErYFxyCmArbyl9fXJldHVybiBpfX19ZWkuX01hdGVyaWFsUGx1Z2luQ2xhc3NUb01haW5EZWZpbmU9e30sZWkuX01hdGVyaWFsUGx1Z2luQ291bnRlcj0wO2NsYXNzIGhze2NvbnN0cnVjdG9yKGUsdCxpLHMscj0hMCxuPSExKXt0aGlzLnByaW9yaXR5PTUwMCx0aGlzLnJlZ2lzdGVyRm9yRXh0cmFFdmVudHM9ITEsdGhpcy5fbWF0ZXJpYWw9ZSx0aGlzLm5hbWU9dCx0aGlzLnByaW9yaXR5PWksZS5wbHVnaW5NYW5hZ2VyfHwoZS5wbHVnaW5NYW5hZ2VyPW5ldyBlaShlKSksdGhpcy5fcGx1Z2luRGVmaW5lTmFtZXM9cyx0aGlzLl9wbHVnaW5NYW5hZ2VyPWUucGx1Z2luTWFuYWdlcixyJiZ0aGlzLl9wbHVnaW5NYW5hZ2VyLl9hZGRQbHVnaW4odGhpcyksbiYmdGhpcy5fZW5hYmxlKCEwKSx0aGlzLm1hcmtBbGxEZWZpbmVzQXNEaXJ0eT1lLl9kaXJ0eUNhbGxiYWNrc1s2M119X2VuYWJsZShlKXtlJiZ0aGlzLl9wbHVnaW5NYW5hZ2VyLl9hY3RpdmF0ZVBsdWdpbih0aGlzKX1nZXRDbGFzc05hbWUoKXtyZXR1cm4iTWF0ZXJpYWxQbHVnaW5CYXNlIn1pc1JlYWR5Rm9yU3ViTWVzaChlLHQsaSxzKXtyZXR1cm4hMH1oYXJkQmluZEZvclN1Yk1lc2goZSx0LGkscyl7fWJpbmRGb3JTdWJNZXNoKGUsdCxpLHMpe31kaXNwb3NlKGUpe31nZXRDdXN0b21Db2RlKGUpe3JldHVybiBudWxsfWNvbGxlY3REZWZpbmVzKGUpe2lmKHRoaXMuX3BsdWdpbkRlZmluZU5hbWVzKWZvcihjb25zdCB0IG9mIE9iamVjdC5rZXlzKHRoaXMuX3BsdWdpbkRlZmluZU5hbWVzKSl7aWYodFswXT09PSJfIiljb250aW51ZTtjb25zdCBpPXR5cGVvZiB0aGlzLl9wbHVnaW5EZWZpbmVOYW1lc1t0XTtlW3RdPXt0eXBlOmk9PT0ibnVtYmVyIj8ibnVtYmVyIjppPT09InN0cmluZyI/InN0cmluZyI6aT09PSJib29sZWFuIj8iYm9vbGVhbiI6Im9iamVjdCIsZGVmYXVsdDp0aGlzLl9wbHVnaW5EZWZpbmVOYW1lc1t0XX19fXByZXBhcmVEZWZpbmVzQmVmb3JlQXR0cmlidXRlcyhlLHQsaSl7fXByZXBhcmVEZWZpbmVzKGUsdCxpKXt9aGFzVGV4dHVyZShlKXtyZXR1cm4hMX1oYXNSZW5kZXJUYXJnZXRUZXh0dXJlcygpe3JldHVybiExfWZpbGxSZW5kZXJUYXJnZXRUZXh0dXJlcyhlKXt9Z2V0QWN0aXZlVGV4dHVyZXMoZSl7fWdldEFuaW1hdGFibGVzKGUpe31hZGRGYWxsYmFja3MoZSx0LGkpe3JldHVybiBpfWdldFNhbXBsZXJzKGUpe31nZXRBdHRyaWJ1dGVzKGUsdCxpKXt9Z2V0VW5pZm9ybUJ1ZmZlcnNOYW1lcyhlKXt9Z2V0VW5pZm9ybXMoKXtyZXR1cm57fX1jb3B5VG8oZSl7YWUuQ2xvbmUoKCk9PmUsdGhpcyl9c2VyaWFsaXplKCl7cmV0dXJuIGFlLlNlcmlhbGl6ZSh0aGlzKX1wYXJzZShlLHQsaSl7YWUuUGFyc2UoKCk9PnRoaXMsZSx0LGkpfX1UKFtSKCldLGhzLnByb3RvdHlwZSwibmFtZSIsdm9pZCAwKSxUKFtSKCldLGhzLnByb3RvdHlwZSwicHJpb3JpdHkiLHZvaWQgMCksVChbUigpXSxocy5wcm90b3R5cGUsInJlZ2lzdGVyRm9yRXh0cmFFdmVudHMiLHZvaWQgMCk7Y2xhc3MgcGwgZXh0ZW5kcyB5c3tjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5ERVRBSUw9ITEsdGhpcy5ERVRBSUxESVJFQ1RVVj0wLHRoaXMuREVUQUlMX05PUk1BTEJMRU5ETUVUSE9EPTB9fWNsYXNzIHBpIGV4dGVuZHMgaHN7Y29uc3RydWN0b3IoZSx0PSEwKXtzdXBlcihlLCJEZXRhaWxNYXAiLDE0MCxuZXcgcGwsdCksdGhpcy5fdGV4dHVyZT1udWxsLHRoaXMuZGlmZnVzZUJsZW5kTGV2ZWw9MSx0aGlzLnJvdWdobmVzc0JsZW5kTGV2ZWw9MSx0aGlzLmJ1bXBMZXZlbD0xLHRoaXMuX25vcm1hbEJsZW5kTWV0aG9kPVAuTUFURVJJQUxfTk9STUFMQkxFTkRNRVRIT0RfV0hJVEVPVVQsdGhpcy5faXNFbmFibGVkPSExLHRoaXMuaXNFbmFibGVkPSExLHRoaXMuX2ludGVybmFsTWFya0FsbFN1Yk1lc2hlc0FzVGV4dHVyZXNEaXJ0eT1lLl9kaXJ0eUNhbGxiYWNrc1sxXX1fbWFya0FsbFN1Yk1lc2hlc0FzVGV4dHVyZXNEaXJ0eSgpe3RoaXMuX2VuYWJsZSh0aGlzLl9pc0VuYWJsZWQpLHRoaXMuX2ludGVybmFsTWFya0FsbFN1Yk1lc2hlc0FzVGV4dHVyZXNEaXJ0eSgpfWlzUmVhZHlGb3JTdWJNZXNoKGUsdCxpKXtyZXR1cm4gdGhpcy5faXNFbmFibGVkPyEoZS5fYXJlVGV4dHVyZXNEaXJ0eSYmdC50ZXh0dXJlc0VuYWJsZWQmJmkuZ2V0Q2FwcygpLnN0YW5kYXJkRGVyaXZhdGl2ZXMmJnRoaXMuX3RleHR1cmUmJnVlLkRldGFpbFRleHR1cmVFbmFibGVkJiYhdGhpcy5fdGV4dHVyZS5pc1JlYWR5KCkpOiEwfXByZXBhcmVEZWZpbmVzKGUsdCl7aWYodGhpcy5faXNFbmFibGVkKXtlLkRFVEFJTF9OT1JNQUxCTEVORE1FVEhPRD10aGlzLl9ub3JtYWxCbGVuZE1ldGhvZDtjb25zdCBpPXQuZ2V0RW5naW5lKCk7ZS5fYXJlVGV4dHVyZXNEaXJ0eSYmKGkuZ2V0Q2FwcygpLnN0YW5kYXJkRGVyaXZhdGl2ZXMmJnRoaXMuX3RleHR1cmUmJnVlLkRldGFpbFRleHR1cmVFbmFibGVkJiZ0aGlzLl9pc0VuYWJsZWQ/KGllLlByZXBhcmVEZWZpbmVzRm9yTWVyZ2VkVVYodGhpcy5fdGV4dHVyZSxlLCJERVRBSUwiKSxlLkRFVEFJTF9OT1JNQUxCTEVORE1FVEhPRD10aGlzLl9ub3JtYWxCbGVuZE1ldGhvZCk6ZS5ERVRBSUw9ITEpfWVsc2UgZS5ERVRBSUw9ITF9YmluZEZvclN1Yk1lc2goZSx0KXtpZighdGhpcy5faXNFbmFibGVkKXJldHVybjtjb25zdCBpPXRoaXMuX21hdGVyaWFsLmlzRnJvemVuOyghZS51c2VVYm98fCFpfHwhZS5pc1N5bmMpJiZ0aGlzLl90ZXh0dXJlJiZ1ZS5EZXRhaWxUZXh0dXJlRW5hYmxlZCYmKGUudXBkYXRlRmxvYXQ0KCJ2RGV0YWlsSW5mb3MiLHRoaXMuX3RleHR1cmUuY29vcmRpbmF0ZXNJbmRleCx0aGlzLmRpZmZ1c2VCbGVuZExldmVsLHRoaXMuYnVtcExldmVsLHRoaXMucm91Z2huZXNzQmxlbmRMZXZlbCksaWUuQmluZFRleHR1cmVNYXRyaXgodGhpcy5fdGV4dHVyZSxlLCJkZXRhaWwiKSksdC50ZXh0dXJlc0VuYWJsZWQmJnRoaXMuX3RleHR1cmUmJnVlLkRldGFpbFRleHR1cmVFbmFibGVkJiZlLnNldFRleHR1cmUoImRldGFpbFNhbXBsZXIiLHRoaXMuX3RleHR1cmUpfWhhc1RleHR1cmUoZSl7cmV0dXJuIHRoaXMuX3RleHR1cmU9PT1lfWdldEFjdGl2ZVRleHR1cmVzKGUpe3RoaXMuX3RleHR1cmUmJmUucHVzaCh0aGlzLl90ZXh0dXJlKX1nZXRBbmltYXRhYmxlcyhlKXt0aGlzLl90ZXh0dXJlJiZ0aGlzLl90ZXh0dXJlLmFuaW1hdGlvbnMmJnRoaXMuX3RleHR1cmUuYW5pbWF0aW9ucy5sZW5ndGg+MCYmZS5wdXNoKHRoaXMuX3RleHR1cmUpfWRpc3Bvc2UoZSl7dmFyIHQ7ZSYmKCh0PXRoaXMuX3RleHR1cmUpPT09bnVsbHx8dD09PXZvaWQgMHx8dC5kaXNwb3NlKCkpfWdldENsYXNzTmFtZSgpe3JldHVybiJEZXRhaWxNYXBDb25maWd1cmF0aW9uIn1nZXRTYW1wbGVycyhlKXtlLnB1c2goImRldGFpbFNhbXBsZXIiKX1nZXRVbmlmb3Jtcygpe3JldHVybnt1Ym86W3tuYW1lOiJ2RGV0YWlsSW5mb3MiLHNpemU6NCx0eXBlOiJ2ZWM0In0se25hbWU6ImRldGFpbE1hdHJpeCIsc2l6ZToxNix0eXBlOiJtYXQ0In1dfX19VChbbXQoImRldGFpbFRleHR1cmUiKSxiZSgiX21hcmtBbGxTdWJNZXNoZXNBc1RleHR1cmVzRGlydHkiKV0scGkucHJvdG90eXBlLCJ0ZXh0dXJlIix2b2lkIDApLFQoW1IoKV0scGkucHJvdG90eXBlLCJkaWZmdXNlQmxlbmRMZXZlbCIsdm9pZCAwKSxUKFtSKCldLHBpLnByb3RvdHlwZSwicm91Z2huZXNzQmxlbmRMZXZlbCIsdm9pZCAwKSxUKFtSKCldLHBpLnByb3RvdHlwZSwiYnVtcExldmVsIix2b2lkIDApLFQoW1IoKSxiZSgiX21hcmtBbGxTdWJNZXNoZXNBc1RleHR1cmVzRGlydHkiKV0scGkucHJvdG90eXBlLCJub3JtYWxCbGVuZE1ldGhvZCIsdm9pZCAwKSxUKFtSKCksYmUoIl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0RpcnR5IildLHBpLnByb3RvdHlwZSwiaXNFbmFibGVkIix2b2lkIDApO2NvbnN0IEdzPXtlZmZlY3Q6bnVsbCxzdWJNZXNoOm51bGx9O2NsYXNzIG1sIGV4dGVuZHMgeXN7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSksdGhpcy5NQUlOVVYxPSExLHRoaXMuTUFJTlVWMj0hMSx0aGlzLk1BSU5VVjM9ITEsdGhpcy5NQUlOVVY0PSExLHRoaXMuTUFJTlVWNT0hMSx0aGlzLk1BSU5VVjY9ITEsdGhpcy5ESUZGVVNFPSExLHRoaXMuRElGRlVTRURJUkVDVFVWPTAsdGhpcy5CQUtFRF9WRVJURVhfQU5JTUFUSU9OX1RFWFRVUkU9ITEsdGhpcy5BTUJJRU5UPSExLHRoaXMuQU1CSUVOVERJUkVDVFVWPTAsdGhpcy5PUEFDSVRZPSExLHRoaXMuT1BBQ0lUWURJUkVDVFVWPTAsdGhpcy5PUEFDSVRZUkdCPSExLHRoaXMuUkVGTEVDVElPTj0hMSx0aGlzLkVNSVNTSVZFPSExLHRoaXMuRU1JU1NJVkVESVJFQ1RVVj0wLHRoaXMuU1BFQ1VMQVI9ITEsdGhpcy5TUEVDVUxBUkRJUkVDVFVWPTAsdGhpcy5CVU1QPSExLHRoaXMuQlVNUERJUkVDVFVWPTAsdGhpcy5QQVJBTExBWD0hMSx0aGlzLlBBUkFMTEFYT0NDTFVTSU9OPSExLHRoaXMuU1BFQ1VMQVJPVkVSQUxQSEE9ITEsdGhpcy5DTElQUExBTkU9ITEsdGhpcy5DTElQUExBTkUyPSExLHRoaXMuQ0xJUFBMQU5FMz0hMSx0aGlzLkNMSVBQTEFORTQ9ITEsdGhpcy5DTElQUExBTkU1PSExLHRoaXMuQ0xJUFBMQU5FNj0hMSx0aGlzLkFMUEhBVEVTVD0hMSx0aGlzLkRFUFRIUFJFUEFTUz0hMSx0aGlzLkFMUEhBRlJPTURJRkZVU0U9ITEsdGhpcy5QT0lOVFNJWkU9ITEsdGhpcy5GT0c9ITEsdGhpcy5TUEVDVUxBUlRFUk09ITEsdGhpcy5ESUZGVVNFRlJFU05FTD0hMSx0aGlzLk9QQUNJVFlGUkVTTkVMPSExLHRoaXMuUkVGTEVDVElPTkZSRVNORUw9ITEsdGhpcy5SRUZSQUNUSU9ORlJFU05FTD0hMSx0aGlzLkVNSVNTSVZFRlJFU05FTD0hMSx0aGlzLkZSRVNORUw9ITEsdGhpcy5OT1JNQUw9ITEsdGhpcy5UQU5HRU5UPSExLHRoaXMuVVYxPSExLHRoaXMuVVYyPSExLHRoaXMuVVYzPSExLHRoaXMuVVY0PSExLHRoaXMuVVY1PSExLHRoaXMuVVY2PSExLHRoaXMuVkVSVEVYQ09MT1I9ITEsdGhpcy5WRVJURVhBTFBIQT0hMSx0aGlzLk5VTV9CT05FX0lORkxVRU5DRVJTPTAsdGhpcy5Cb25lc1Blck1lc2g9MCx0aGlzLkJPTkVURVhUVVJFPSExLHRoaXMuQk9ORVNfVkVMT0NJVFlfRU5BQkxFRD0hMSx0aGlzLklOU1RBTkNFUz0hMSx0aGlzLlRISU5fSU5TVEFOQ0VTPSExLHRoaXMuSU5TVEFOQ0VTQ09MT1I9ITEsdGhpcy5HTE9TU0lORVNTPSExLHRoaXMuUk9VR0hORVNTPSExLHRoaXMuRU1JU1NJVkVBU0lMTFVNSU5BVElPTj0hMSx0aGlzLkxJTktFTUlTU0lWRVdJVEhESUZGVVNFPSExLHRoaXMuUkVGTEVDVElPTkZSRVNORUxGUk9NU1BFQ1VMQVI9ITEsdGhpcy5MSUdIVE1BUD0hMSx0aGlzLkxJR0hUTUFQRElSRUNUVVY9MCx0aGlzLk9CSkVDVFNQQUNFX05PUk1BTE1BUD0hMSx0aGlzLlVTRUxJR0hUTUFQQVNTSEFET1dNQVA9ITEsdGhpcy5SRUZMRUNUSU9OTUFQXzNEPSExLHRoaXMuUkVGTEVDVElPTk1BUF9TUEhFUklDQUw9ITEsdGhpcy5SRUZMRUNUSU9OTUFQX1BMQU5BUj0hMSx0aGlzLlJFRkxFQ1RJT05NQVBfQ1VCSUM9ITEsdGhpcy5VU0VfTE9DQUxfUkVGTEVDVElPTk1BUF9DVUJJQz0hMSx0aGlzLlVTRV9MT0NBTF9SRUZSQUNUSU9OTUFQX0NVQklDPSExLHRoaXMuUkVGTEVDVElPTk1BUF9QUk9KRUNUSU9OPSExLHRoaXMuUkVGTEVDVElPTk1BUF9TS1lCT1g9ITEsdGhpcy5SRUZMRUNUSU9OTUFQX0VYUExJQ0lUPSExLHRoaXMuUkVGTEVDVElPTk1BUF9FUVVJUkVDVEFOR1VMQVI9ITEsdGhpcy5SRUZMRUNUSU9OTUFQX0VRVUlSRUNUQU5HVUxBUl9GSVhFRD0hMSx0aGlzLlJFRkxFQ1RJT05NQVBfTUlSUk9SRURFUVVJUkVDVEFOR1VMQVJfRklYRUQ9ITEsdGhpcy5SRUZMRUNUSU9OTUFQX09QUE9TSVRFWj0hMSx0aGlzLklOVkVSVENVQklDTUFQPSExLHRoaXMuTE9HQVJJVEhNSUNERVBUSD0hMSx0aGlzLlJFRlJBQ1RJT049ITEsdGhpcy5SRUZSQUNUSU9OTUFQXzNEPSExLHRoaXMuUkVGTEVDVElPTk9WRVJBTFBIQT0hMSx0aGlzLlRXT1NJREVETElHSFRJTkc9ITEsdGhpcy5TSEFET1dGTE9BVD0hMSx0aGlzLk1PUlBIVEFSR0VUUz0hMSx0aGlzLk1PUlBIVEFSR0VUU19OT1JNQUw9ITEsdGhpcy5NT1JQSFRBUkdFVFNfVEFOR0VOVD0hMSx0aGlzLk1PUlBIVEFSR0VUU19VVj0hMSx0aGlzLk5VTV9NT1JQSF9JTkZMVUVOQ0VSUz0wLHRoaXMuTU9SUEhUQVJHRVRTX1RFWFRVUkU9ITEsdGhpcy5OT05VTklGT1JNU0NBTElORz0hMSx0aGlzLlBSRU1VTFRJUExZQUxQSEE9ITEsdGhpcy5BTFBIQVRFU1RfQUZURVJBTExBTFBIQUNPTVBVVEFUSU9OUz0hMSx0aGlzLkFMUEhBQkxFTkQ9ITAsdGhpcy5QUkVQQVNTPSExLHRoaXMuUFJFUEFTU19JUlJBRElBTkNFPSExLHRoaXMuUFJFUEFTU19JUlJBRElBTkNFX0lOREVYPS0xLHRoaXMuUFJFUEFTU19BTEJFRE9fU1FSVD0hMSx0aGlzLlBSRVBBU1NfQUxCRURPX1NRUlRfSU5ERVg9LTEsdGhpcy5QUkVQQVNTX0RFUFRIPSExLHRoaXMuUFJFUEFTU19ERVBUSF9JTkRFWD0tMSx0aGlzLlBSRVBBU1NfTk9STUFMPSExLHRoaXMuUFJFUEFTU19OT1JNQUxfSU5ERVg9LTEsdGhpcy5QUkVQQVNTX1BPU0lUSU9OPSExLHRoaXMuUFJFUEFTU19QT1NJVElPTl9JTkRFWD0tMSx0aGlzLlBSRVBBU1NfVkVMT0NJVFk9ITEsdGhpcy5QUkVQQVNTX1ZFTE9DSVRZX0lOREVYPS0xLHRoaXMuUFJFUEFTU19SRUZMRUNUSVZJVFk9ITEsdGhpcy5QUkVQQVNTX1JFRkxFQ1RJVklUWV9JTkRFWD0tMSx0aGlzLlNDRU5FX01SVF9DT1VOVD0wLHRoaXMuUkdCRExJR0hUTUFQPSExLHRoaXMuUkdCRFJFRkxFQ1RJT049ITEsdGhpcy5SR0JEUkVGUkFDVElPTj0hMSx0aGlzLklNQUdFUFJPQ0VTU0lORz0hMSx0aGlzLlZJR05FVFRFPSExLHRoaXMuVklHTkVUVEVCTEVORE1PREVNVUxUSVBMWT0hMSx0aGlzLlZJR05FVFRFQkxFTkRNT0RFT1BBUVVFPSExLHRoaXMuVE9ORU1BUFBJTkc9ITEsdGhpcy5UT05FTUFQUElOR19BQ0VTPSExLHRoaXMuQ09OVFJBU1Q9ITEsdGhpcy5DT0xPUkNVUlZFUz0hMSx0aGlzLkNPTE9SR1JBRElORz0hMSx0aGlzLkNPTE9SR1JBRElORzNEPSExLHRoaXMuU0FNUExFUjNER1JFRU5ERVBUSD0hMSx0aGlzLlNBTVBMRVIzREJHUk1BUD0hMSx0aGlzLkRJVEhFUj0hMSx0aGlzLklNQUdFUFJPQ0VTU0lOR1BPU1RQUk9DRVNTPSExLHRoaXMuU0tJUEZJTkFMQ09MT1JDTEFNUD0hMSx0aGlzLk1VTFRJVklFVz0hMSx0aGlzLk9SREVSX0lOREVQRU5ERU5UX1RSQU5TUEFSRU5DWT0hMSx0aGlzLk9SREVSX0lOREVQRU5ERU5UX1RSQU5TUEFSRU5DWV8xNkJJVFM9ITEsdGhpcy5DQU1FUkFfT1JUSE9HUkFQSElDPSExLHRoaXMuQ0FNRVJBX1BFUlNQRUNUSVZFPSExLHRoaXMuSVNfUkVGTEVDVElPTl9MSU5FQVI9ITEsdGhpcy5JU19SRUZSQUNUSU9OX0xJTkVBUj0hMSx0aGlzLkVYUE9TVVJFPSExLHRoaXMucmVidWlsZCgpfXNldFJlZmxlY3Rpb25Nb2RlKGUpe2NvbnN0IHQ9WyJSRUZMRUNUSU9OTUFQX0NVQklDIiwiUkVGTEVDVElPTk1BUF9FWFBMSUNJVCIsIlJFRkxFQ1RJT05NQVBfUExBTkFSIiwiUkVGTEVDVElPTk1BUF9QUk9KRUNUSU9OIiwiUkVGTEVDVElPTk1BUF9QUk9KRUNUSU9OIiwiUkVGTEVDVElPTk1BUF9TS1lCT1giLCJSRUZMRUNUSU9OTUFQX1NQSEVSSUNBTCIsIlJFRkxFQ1RJT05NQVBfRVFVSVJFQ1RBTkdVTEFSIiwiUkVGTEVDVElPTk1BUF9FUVVJUkVDVEFOR1VMQVJfRklYRUQiLCJSRUZMRUNUSU9OTUFQX01JUlJPUkVERVFVSVJFQ1RBTkdVTEFSX0ZJWEVEIl07Zm9yKGNvbnN0IGkgb2YgdCl0aGlzW2ldPWk9PT1lfX1jbGFzcyBCIGV4dGVuZHMgVnJ7Y29uc3RydWN0b3IoZSx0KXtzdXBlcihlLHQpLHRoaXMuX2RpZmZ1c2VUZXh0dXJlPW51bGwsdGhpcy5fYW1iaWVudFRleHR1cmU9bnVsbCx0aGlzLl9vcGFjaXR5VGV4dHVyZT1udWxsLHRoaXMuX3JlZmxlY3Rpb25UZXh0dXJlPW51bGwsdGhpcy5fZW1pc3NpdmVUZXh0dXJlPW51bGwsdGhpcy5fc3BlY3VsYXJUZXh0dXJlPW51bGwsdGhpcy5fYnVtcFRleHR1cmU9bnVsbCx0aGlzLl9saWdodG1hcFRleHR1cmU9bnVsbCx0aGlzLl9yZWZyYWN0aW9uVGV4dHVyZT1udWxsLHRoaXMuYW1iaWVudENvbG9yPW5ldyByZSgwLDAsMCksdGhpcy5kaWZmdXNlQ29sb3I9bmV3IHJlKDEsMSwxKSx0aGlzLnNwZWN1bGFyQ29sb3I9bmV3IHJlKDEsMSwxKSx0aGlzLmVtaXNzaXZlQ29sb3I9bmV3IHJlKDAsMCwwKSx0aGlzLnNwZWN1bGFyUG93ZXI9NjQsdGhpcy5fdXNlQWxwaGFGcm9tRGlmZnVzZVRleHR1cmU9ITEsdGhpcy5fdXNlRW1pc3NpdmVBc0lsbHVtaW5hdGlvbj0hMSx0aGlzLl9saW5rRW1pc3NpdmVXaXRoRGlmZnVzZT0hMSx0aGlzLl91c2VTcGVjdWxhck92ZXJBbHBoYT0hMSx0aGlzLl91c2VSZWZsZWN0aW9uT3ZlckFscGhhPSExLHRoaXMuX2Rpc2FibGVMaWdodGluZz0hMSx0aGlzLl91c2VPYmplY3RTcGFjZU5vcm1hbE1hcD0hMSx0aGlzLl91c2VQYXJhbGxheD0hMSx0aGlzLl91c2VQYXJhbGxheE9jY2x1c2lvbj0hMSx0aGlzLnBhcmFsbGF4U2NhbGVCaWFzPS4wNSx0aGlzLl9yb3VnaG5lc3M9MCx0aGlzLmluZGV4T2ZSZWZyYWN0aW9uPS45OCx0aGlzLmludmVydFJlZnJhY3Rpb25ZPSEwLHRoaXMuYWxwaGFDdXRPZmY9LjQsdGhpcy5fdXNlTGlnaHRtYXBBc1NoYWRvd21hcD0hMSx0aGlzLl91c2VSZWZsZWN0aW9uRnJlc25lbEZyb21TcGVjdWxhcj0hMSx0aGlzLl91c2VHbG9zc2luZXNzRnJvbVNwZWN1bGFyTWFwQWxwaGE9ITEsdGhpcy5fbWF4U2ltdWx0YW5lb3VzTGlnaHRzPTQsdGhpcy5faW52ZXJ0Tm9ybWFsTWFwWD0hMSx0aGlzLl9pbnZlcnROb3JtYWxNYXBZPSExLHRoaXMuX3R3b1NpZGVkTGlnaHRpbmc9ITEsdGhpcy5fcmVuZGVyVGFyZ2V0cz1uZXcgJGUoMTYpLHRoaXMuX3dvcmxkVmlld1Byb2plY3Rpb25NYXRyaXg9eC5aZXJvKCksdGhpcy5fZ2xvYmFsQW1iaWVudENvbG9yPW5ldyByZSgwLDAsMCksdGhpcy5fY2FjaGVIYXNSZW5kZXJUYXJnZXRUZXh0dXJlcz0hMSx0aGlzLmRldGFpbE1hcD1uZXcgcGkodGhpcyksdGhpcy5fYXR0YWNoSW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbihudWxsKSx0aGlzLnByZVBhc3NDb25maWd1cmF0aW9uPW5ldyBrcix0aGlzLmdldFJlbmRlclRhcmdldFRleHR1cmVzPSgpPT4odGhpcy5fcmVuZGVyVGFyZ2V0cy5yZXNldCgpLEIuUmVmbGVjdGlvblRleHR1cmVFbmFibGVkJiZ0aGlzLl9yZWZsZWN0aW9uVGV4dHVyZSYmdGhpcy5fcmVmbGVjdGlvblRleHR1cmUuaXNSZW5kZXJUYXJnZXQmJnRoaXMuX3JlbmRlclRhcmdldHMucHVzaCh0aGlzLl9yZWZsZWN0aW9uVGV4dHVyZSksQi5SZWZyYWN0aW9uVGV4dHVyZUVuYWJsZWQmJnRoaXMuX3JlZnJhY3Rpb25UZXh0dXJlJiZ0aGlzLl9yZWZyYWN0aW9uVGV4dHVyZS5pc1JlbmRlclRhcmdldCYmdGhpcy5fcmVuZGVyVGFyZ2V0cy5wdXNoKHRoaXMuX3JlZnJhY3Rpb25UZXh0dXJlKSx0aGlzLl9ldmVudEluZm8ucmVuZGVyVGFyZ2V0cz10aGlzLl9yZW5kZXJUYXJnZXRzLHRoaXMuX2NhbGxiYWNrUGx1Z2luRXZlbnRGaWxsUmVuZGVyVGFyZ2V0VGV4dHVyZXModGhpcy5fZXZlbnRJbmZvKSx0aGlzLl9yZW5kZXJUYXJnZXRzKX1nZXQgaW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbigpe3JldHVybiB0aGlzLl9pbWFnZVByb2Nlc3NpbmdDb25maWd1cmF0aW9ufXNldCBpbWFnZVByb2Nlc3NpbmdDb25maWd1cmF0aW9uKGUpe3RoaXMuX2F0dGFjaEltYWdlUHJvY2Vzc2luZ0NvbmZpZ3VyYXRpb24oZSksdGhpcy5fbWFya0FsbFN1Yk1lc2hlc0FzVGV4dHVyZXNEaXJ0eSgpfV9hdHRhY2hJbWFnZVByb2Nlc3NpbmdDb25maWd1cmF0aW9uKGUpe2UhPT10aGlzLl9pbWFnZVByb2Nlc3NpbmdDb25maWd1cmF0aW9uJiYodGhpcy5faW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbiYmdGhpcy5faW1hZ2VQcm9jZXNzaW5nT2JzZXJ2ZXImJnRoaXMuX2ltYWdlUHJvY2Vzc2luZ0NvbmZpZ3VyYXRpb24ub25VcGRhdGVQYXJhbWV0ZXJzLnJlbW92ZSh0aGlzLl9pbWFnZVByb2Nlc3NpbmdPYnNlcnZlciksZT90aGlzLl9pbWFnZVByb2Nlc3NpbmdDb25maWd1cmF0aW9uPWU6dGhpcy5faW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbj10aGlzLmdldFNjZW5lKCkuaW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbix0aGlzLl9pbWFnZVByb2Nlc3NpbmdDb25maWd1cmF0aW9uJiYodGhpcy5faW1hZ2VQcm9jZXNzaW5nT2JzZXJ2ZXI9dGhpcy5faW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbi5vblVwZGF0ZVBhcmFtZXRlcnMuYWRkKCgpPT57dGhpcy5fbWFya0FsbFN1Yk1lc2hlc0FzSW1hZ2VQcm9jZXNzaW5nRGlydHkoKX0pKSl9Z2V0IGlzUHJlUGFzc0NhcGFibGUoKXtyZXR1cm4hdGhpcy5kaXNhYmxlRGVwdGhXcml0ZX1nZXQgY2FtZXJhQ29sb3JDdXJ2ZXNFbmFibGVkKCl7cmV0dXJuIHRoaXMuaW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbi5jb2xvckN1cnZlc0VuYWJsZWR9c2V0IGNhbWVyYUNvbG9yQ3VydmVzRW5hYmxlZChlKXt0aGlzLmltYWdlUHJvY2Vzc2luZ0NvbmZpZ3VyYXRpb24uY29sb3JDdXJ2ZXNFbmFibGVkPWV9Z2V0IGNhbWVyYUNvbG9yR3JhZGluZ0VuYWJsZWQoKXtyZXR1cm4gdGhpcy5pbWFnZVByb2Nlc3NpbmdDb25maWd1cmF0aW9uLmNvbG9yR3JhZGluZ0VuYWJsZWR9c2V0IGNhbWVyYUNvbG9yR3JhZGluZ0VuYWJsZWQoZSl7dGhpcy5pbWFnZVByb2Nlc3NpbmdDb25maWd1cmF0aW9uLmNvbG9yR3JhZGluZ0VuYWJsZWQ9ZX1nZXQgY2FtZXJhVG9uZU1hcHBpbmdFbmFibGVkKCl7cmV0dXJuIHRoaXMuX2ltYWdlUHJvY2Vzc2luZ0NvbmZpZ3VyYXRpb24udG9uZU1hcHBpbmdFbmFibGVkfXNldCBjYW1lcmFUb25lTWFwcGluZ0VuYWJsZWQoZSl7dGhpcy5faW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbi50b25lTWFwcGluZ0VuYWJsZWQ9ZX1nZXQgY2FtZXJhRXhwb3N1cmUoKXtyZXR1cm4gdGhpcy5faW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbi5leHBvc3VyZX1zZXQgY2FtZXJhRXhwb3N1cmUoZSl7dGhpcy5faW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbi5leHBvc3VyZT1lfWdldCBjYW1lcmFDb250cmFzdCgpe3JldHVybiB0aGlzLl9pbWFnZVByb2Nlc3NpbmdDb25maWd1cmF0aW9uLmNvbnRyYXN0fXNldCBjYW1lcmFDb250cmFzdChlKXt0aGlzLl9pbWFnZVByb2Nlc3NpbmdDb25maWd1cmF0aW9uLmNvbnRyYXN0PWV9Z2V0IGNhbWVyYUNvbG9yR3JhZGluZ1RleHR1cmUoKXtyZXR1cm4gdGhpcy5faW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbi5jb2xvckdyYWRpbmdUZXh0dXJlfXNldCBjYW1lcmFDb2xvckdyYWRpbmdUZXh0dXJlKGUpe3RoaXMuX2ltYWdlUHJvY2Vzc2luZ0NvbmZpZ3VyYXRpb24uY29sb3JHcmFkaW5nVGV4dHVyZT1lfWdldCBjYW1lcmFDb2xvckN1cnZlcygpe3JldHVybiB0aGlzLl9pbWFnZVByb2Nlc3NpbmdDb25maWd1cmF0aW9uLmNvbG9yQ3VydmVzfXNldCBjYW1lcmFDb2xvckN1cnZlcyhlKXt0aGlzLl9pbWFnZVByb2Nlc3NpbmdDb25maWd1cmF0aW9uLmNvbG9yQ3VydmVzPWV9Z2V0IGNhblJlbmRlclRvTVJUKCl7cmV0dXJuITB9Z2V0IGhhc1JlbmRlclRhcmdldFRleHR1cmVzKCl7cmV0dXJuIEIuUmVmbGVjdGlvblRleHR1cmVFbmFibGVkJiZ0aGlzLl9yZWZsZWN0aW9uVGV4dHVyZSYmdGhpcy5fcmVmbGVjdGlvblRleHR1cmUuaXNSZW5kZXJUYXJnZXR8fEIuUmVmcmFjdGlvblRleHR1cmVFbmFibGVkJiZ0aGlzLl9yZWZyYWN0aW9uVGV4dHVyZSYmdGhpcy5fcmVmcmFjdGlvblRleHR1cmUuaXNSZW5kZXJUYXJnZXQ/ITA6dGhpcy5fY2FjaGVIYXNSZW5kZXJUYXJnZXRUZXh0dXJlc31nZXRDbGFzc05hbWUoKXtyZXR1cm4iU3RhbmRhcmRNYXRlcmlhbCJ9Z2V0IHVzZUxvZ2FyaXRobWljRGVwdGgoKXtyZXR1cm4gdGhpcy5fdXNlTG9nYXJpdGhtaWNEZXB0aH1zZXQgdXNlTG9nYXJpdGhtaWNEZXB0aChlKXt0aGlzLl91c2VMb2dhcml0aG1pY0RlcHRoPWUmJnRoaXMuZ2V0U2NlbmUoKS5nZXRFbmdpbmUoKS5nZXRDYXBzKCkuZnJhZ21lbnREZXB0aFN1cHBvcnRlZCx0aGlzLl9tYXJrQWxsU3ViTWVzaGVzQXNNaXNjRGlydHkoKX1uZWVkQWxwaGFCbGVuZGluZygpe3JldHVybiB0aGlzLl9kaXNhYmxlQWxwaGFCbGVuZGluZz8hMTp0aGlzLmFscGhhPDF8fHRoaXMuX29wYWNpdHlUZXh0dXJlIT1udWxsfHx0aGlzLl9zaG91bGRVc2VBbHBoYUZyb21EaWZmdXNlVGV4dHVyZSgpfHx0aGlzLl9vcGFjaXR5RnJlc25lbFBhcmFtZXRlcnMmJnRoaXMuX29wYWNpdHlGcmVzbmVsUGFyYW1ldGVycy5pc0VuYWJsZWR9bmVlZEFscGhhVGVzdGluZygpe3JldHVybiB0aGlzLl9mb3JjZUFscGhhVGVzdD8hMDp0aGlzLl9oYXNBbHBoYUNoYW5uZWwoKSYmKHRoaXMuX3RyYW5zcGFyZW5jeU1vZGU9PW51bGx8fHRoaXMuX3RyYW5zcGFyZW5jeU1vZGU9PT1QLk1BVEVSSUFMX0FMUEhBVEVTVCl9X3Nob3VsZFVzZUFscGhhRnJvbURpZmZ1c2VUZXh0dXJlKCl7cmV0dXJuIHRoaXMuX2RpZmZ1c2VUZXh0dXJlIT1udWxsJiZ0aGlzLl9kaWZmdXNlVGV4dHVyZS5oYXNBbHBoYSYmdGhpcy5fdXNlQWxwaGFGcm9tRGlmZnVzZVRleHR1cmUmJnRoaXMuX3RyYW5zcGFyZW5jeU1vZGUhPT1QLk1BVEVSSUFMX09QQVFVRX1faGFzQWxwaGFDaGFubmVsKCl7cmV0dXJuIHRoaXMuX2RpZmZ1c2VUZXh0dXJlIT1udWxsJiZ0aGlzLl9kaWZmdXNlVGV4dHVyZS5oYXNBbHBoYXx8dGhpcy5fb3BhY2l0eVRleHR1cmUhPW51bGx9Z2V0QWxwaGFUZXN0VGV4dHVyZSgpe3JldHVybiB0aGlzLl9kaWZmdXNlVGV4dHVyZX1pc1JlYWR5Rm9yU3ViTWVzaChlLHQsaT0hMSl7aWYodGhpcy5fdW5pZm9ybUJ1ZmZlckxheW91dEJ1aWx0fHx0aGlzLmJ1aWxkVW5pZm9ybUxheW91dCgpLHQuZWZmZWN0JiZ0aGlzLmlzRnJvemVuJiZ0LmVmZmVjdC5fd2FzUHJldmlvdXNseVJlYWR5JiZ0LmVmZmVjdC5fd2FzUHJldmlvdXNseVVzaW5nSW5zdGFuY2VzPT09aSlyZXR1cm4hMDt0Lm1hdGVyaWFsRGVmaW5lc3x8KHRoaXMuX2NhbGxiYWNrUGx1Z2luRXZlbnRHZW5lcmljKFFlLkdldERlZmluZU5hbWVzLHRoaXMuX2V2ZW50SW5mbyksdC5tYXRlcmlhbERlZmluZXM9bmV3IG1sKHRoaXMuX2V2ZW50SW5mby5kZWZpbmVOYW1lcykpO2NvbnN0IHM9dGhpcy5nZXRTY2VuZSgpLHI9dC5tYXRlcmlhbERlZmluZXM7aWYodGhpcy5faXNSZWFkeUZvclN1Yk1lc2godCkpcmV0dXJuITA7Y29uc3Qgbj1zLmdldEVuZ2luZSgpO3IuX25lZWROb3JtYWxzPWllLlByZXBhcmVEZWZpbmVzRm9yTGlnaHRzKHMsZSxyLCEwLHRoaXMuX21heFNpbXVsdGFuZW91c0xpZ2h0cyx0aGlzLl9kaXNhYmxlTGlnaHRpbmcpLGllLlByZXBhcmVEZWZpbmVzRm9yTXVsdGl2aWV3KHMscik7Y29uc3QgYT10aGlzLm5lZWRBbHBoYUJsZW5kaW5nRm9yTWVzaChlKSYmdGhpcy5nZXRTY2VuZSgpLnVzZU9yZGVySW5kZXBlbmRlbnRUcmFuc3BhcmVuY3k7aWYoaWUuUHJlcGFyZURlZmluZXNGb3JQcmVQYXNzKHMscix0aGlzLmNhblJlbmRlclRvTVJUJiYhYSksaWUuUHJlcGFyZURlZmluZXNGb3JPSVQocyxyLGEpLHIuX2FyZVRleHR1cmVzRGlydHkpe3RoaXMuX2V2ZW50SW5mby5oYXNSZW5kZXJUYXJnZXRUZXh0dXJlcz0hMSx0aGlzLl9jYWxsYmFja1BsdWdpbkV2ZW50SGFzUmVuZGVyVGFyZ2V0VGV4dHVyZXModGhpcy5fZXZlbnRJbmZvKSx0aGlzLl9jYWNoZUhhc1JlbmRlclRhcmdldFRleHR1cmVzPXRoaXMuX2V2ZW50SW5mby5oYXNSZW5kZXJUYXJnZXRUZXh0dXJlcyxyLl9uZWVkVVZzPSExO2ZvcihsZXQgaD0xO2g8PTY7KytoKXJbIk1BSU5VViIraF09ITE7aWYocy50ZXh0dXJlc0VuYWJsZWQpe2lmKHIuRElGRlVTRURJUkVDVFVWPTAsci5CVU1QRElSRUNUVVY9MCxyLkFNQklFTlRESVJFQ1RVVj0wLHIuT1BBQ0lUWURJUkVDVFVWPTAsci5FTUlTU0lWRURJUkVDVFVWPTAsci5TUEVDVUxBUkRJUkVDVFVWPTAsci5MSUdIVE1BUERJUkVDVFVWPTAsdGhpcy5fZGlmZnVzZVRleHR1cmUmJkIuRGlmZnVzZVRleHR1cmVFbmFibGVkKWlmKHRoaXMuX2RpZmZ1c2VUZXh0dXJlLmlzUmVhZHlPck5vdEJsb2NraW5nKCkpaWUuUHJlcGFyZURlZmluZXNGb3JNZXJnZWRVVih0aGlzLl9kaWZmdXNlVGV4dHVyZSxyLCJESUZGVVNFIik7ZWxzZSByZXR1cm4hMTtlbHNlIHIuRElGRlVTRT0hMTtpZih0aGlzLl9hbWJpZW50VGV4dHVyZSYmQi5BbWJpZW50VGV4dHVyZUVuYWJsZWQpaWYodGhpcy5fYW1iaWVudFRleHR1cmUuaXNSZWFkeU9yTm90QmxvY2tpbmcoKSlpZS5QcmVwYXJlRGVmaW5lc0Zvck1lcmdlZFVWKHRoaXMuX2FtYmllbnRUZXh0dXJlLHIsIkFNQklFTlQiKTtlbHNlIHJldHVybiExO2Vsc2Ugci5BTUJJRU5UPSExO2lmKHRoaXMuX29wYWNpdHlUZXh0dXJlJiZCLk9wYWNpdHlUZXh0dXJlRW5hYmxlZClpZih0aGlzLl9vcGFjaXR5VGV4dHVyZS5pc1JlYWR5T3JOb3RCbG9ja2luZygpKWllLlByZXBhcmVEZWZpbmVzRm9yTWVyZ2VkVVYodGhpcy5fb3BhY2l0eVRleHR1cmUsciwiT1BBQ0lUWSIpLHIuT1BBQ0lUWVJHQj10aGlzLl9vcGFjaXR5VGV4dHVyZS5nZXRBbHBoYUZyb21SR0I7ZWxzZSByZXR1cm4hMTtlbHNlIHIuT1BBQ0lUWT0hMTtpZih0aGlzLl9yZWZsZWN0aW9uVGV4dHVyZSYmQi5SZWZsZWN0aW9uVGV4dHVyZUVuYWJsZWQpaWYodGhpcy5fcmVmbGVjdGlvblRleHR1cmUuaXNSZWFkeU9yTm90QmxvY2tpbmcoKSl7c3dpdGNoKHIuX25lZWROb3JtYWxzPSEwLHIuUkVGTEVDVElPTj0hMCxyLlJPVUdITkVTUz10aGlzLl9yb3VnaG5lc3M+MCxyLlJFRkxFQ1RJT05PVkVSQUxQSEE9dGhpcy5fdXNlUmVmbGVjdGlvbk92ZXJBbHBoYSxyLklOVkVSVENVQklDTUFQPXRoaXMuX3JlZmxlY3Rpb25UZXh0dXJlLmNvb3JkaW5hdGVzTW9kZT09PU4uSU5WQ1VCSUNfTU9ERSxyLlJFRkxFQ1RJT05NQVBfM0Q9dGhpcy5fcmVmbGVjdGlvblRleHR1cmUuaXNDdWJlLHIuUkVGTEVDVElPTk1BUF9PUFBPU0lURVo9ci5SRUZMRUNUSU9OTUFQXzNEJiZ0aGlzLmdldFNjZW5lKCkudXNlUmlnaHRIYW5kZWRTeXN0ZW0/IXRoaXMuX3JlZmxlY3Rpb25UZXh0dXJlLmludmVydFo6dGhpcy5fcmVmbGVjdGlvblRleHR1cmUuaW52ZXJ0WixyLlJHQkRSRUZMRUNUSU9OPXRoaXMuX3JlZmxlY3Rpb25UZXh0dXJlLmlzUkdCRCx0aGlzLl9yZWZsZWN0aW9uVGV4dHVyZS5jb29yZGluYXRlc01vZGUpe2Nhc2UgTi5FWFBMSUNJVF9NT0RFOnIuc2V0UmVmbGVjdGlvbk1vZGUoIlJFRkxFQ1RJT05NQVBfRVhQTElDSVQiKTticmVhaztjYXNlIE4uUExBTkFSX01PREU6ci5zZXRSZWZsZWN0aW9uTW9kZSgiUkVGTEVDVElPTk1BUF9QTEFOQVIiKTticmVhaztjYXNlIE4uUFJPSkVDVElPTl9NT0RFOnIuc2V0UmVmbGVjdGlvbk1vZGUoIlJFRkxFQ1RJT05NQVBfUFJPSkVDVElPTiIpO2JyZWFrO2Nhc2UgTi5TS1lCT1hfTU9ERTpyLnNldFJlZmxlY3Rpb25Nb2RlKCJSRUZMRUNUSU9OTUFQX1NLWUJPWCIpO2JyZWFrO2Nhc2UgTi5TUEhFUklDQUxfTU9ERTpyLnNldFJlZmxlY3Rpb25Nb2RlKCJSRUZMRUNUSU9OTUFQX1NQSEVSSUNBTCIpO2JyZWFrO2Nhc2UgTi5FUVVJUkVDVEFOR1VMQVJfTU9ERTpyLnNldFJlZmxlY3Rpb25Nb2RlKCJSRUZMRUNUSU9OTUFQX0VRVUlSRUNUQU5HVUxBUiIpO2JyZWFrO2Nhc2UgTi5GSVhFRF9FUVVJUkVDVEFOR1VMQVJfTU9ERTpyLnNldFJlZmxlY3Rpb25Nb2RlKCJSRUZMRUNUSU9OTUFQX0VRVUlSRUNUQU5HVUxBUl9GSVhFRCIpO2JyZWFrO2Nhc2UgTi5GSVhFRF9FUVVJUkVDVEFOR1VMQVJfTUlSUk9SRURfTU9ERTpyLnNldFJlZmxlY3Rpb25Nb2RlKCJSRUZMRUNUSU9OTUFQX01JUlJPUkVERVFVSVJFQ1RBTkdVTEFSX0ZJWEVEIik7YnJlYWs7Y2FzZSBOLkNVQklDX01PREU6Y2FzZSBOLklOVkNVQklDX01PREU6ZGVmYXVsdDpyLnNldFJlZmxlY3Rpb25Nb2RlKCJSRUZMRUNUSU9OTUFQX0NVQklDIik7YnJlYWt9ci5VU0VfTE9DQUxfUkVGTEVDVElPTk1BUF9DVUJJQz0hIXRoaXMuX3JlZmxlY3Rpb25UZXh0dXJlLmJvdW5kaW5nQm94U2l6ZX1lbHNlIHJldHVybiExO2Vsc2Ugci5SRUZMRUNUSU9OPSExLHIuUkVGTEVDVElPTk1BUF9PUFBPU0lURVo9ITE7aWYodGhpcy5fZW1pc3NpdmVUZXh0dXJlJiZCLkVtaXNzaXZlVGV4dHVyZUVuYWJsZWQpaWYodGhpcy5fZW1pc3NpdmVUZXh0dXJlLmlzUmVhZHlPck5vdEJsb2NraW5nKCkpaWUuUHJlcGFyZURlZmluZXNGb3JNZXJnZWRVVih0aGlzLl9lbWlzc2l2ZVRleHR1cmUsciwiRU1JU1NJVkUiKTtlbHNlIHJldHVybiExO2Vsc2Ugci5FTUlTU0lWRT0hMTtpZih0aGlzLl9saWdodG1hcFRleHR1cmUmJkIuTGlnaHRtYXBUZXh0dXJlRW5hYmxlZClpZih0aGlzLl9saWdodG1hcFRleHR1cmUuaXNSZWFkeU9yTm90QmxvY2tpbmcoKSlpZS5QcmVwYXJlRGVmaW5lc0Zvck1lcmdlZFVWKHRoaXMuX2xpZ2h0bWFwVGV4dHVyZSxyLCJMSUdIVE1BUCIpLHIuVVNFTElHSFRNQVBBU1NIQURPV01BUD10aGlzLl91c2VMaWdodG1hcEFzU2hhZG93bWFwLHIuUkdCRExJR0hUTUFQPXRoaXMuX2xpZ2h0bWFwVGV4dHVyZS5pc1JHQkQ7ZWxzZSByZXR1cm4hMTtlbHNlIHIuTElHSFRNQVA9ITE7aWYodGhpcy5fc3BlY3VsYXJUZXh0dXJlJiZCLlNwZWN1bGFyVGV4dHVyZUVuYWJsZWQpaWYodGhpcy5fc3BlY3VsYXJUZXh0dXJlLmlzUmVhZHlPck5vdEJsb2NraW5nKCkpaWUuUHJlcGFyZURlZmluZXNGb3JNZXJnZWRVVih0aGlzLl9zcGVjdWxhclRleHR1cmUsciwiU1BFQ1VMQVIiKSxyLkdMT1NTSU5FU1M9dGhpcy5fdXNlR2xvc3NpbmVzc0Zyb21TcGVjdWxhck1hcEFscGhhO2Vsc2UgcmV0dXJuITE7ZWxzZSByLlNQRUNVTEFSPSExO2lmKHMuZ2V0RW5naW5lKCkuZ2V0Q2FwcygpLnN0YW5kYXJkRGVyaXZhdGl2ZXMmJnRoaXMuX2J1bXBUZXh0dXJlJiZCLkJ1bXBUZXh0dXJlRW5hYmxlZCl7aWYodGhpcy5fYnVtcFRleHR1cmUuaXNSZWFkeSgpKWllLlByZXBhcmVEZWZpbmVzRm9yTWVyZ2VkVVYodGhpcy5fYnVtcFRleHR1cmUsciwiQlVNUCIpLHIuUEFSQUxMQVg9dGhpcy5fdXNlUGFyYWxsYXgsci5QQVJBTExBWE9DQ0xVU0lPTj10aGlzLl91c2VQYXJhbGxheE9jY2x1c2lvbjtlbHNlIHJldHVybiExO3IuT0JKRUNUU1BBQ0VfTk9STUFMTUFQPXRoaXMuX3VzZU9iamVjdFNwYWNlTm9ybWFsTWFwfWVsc2Ugci5CVU1QPSExLHIuUEFSQUxMQVg9ITEsci5QQVJBTExBWE9DQ0xVU0lPTj0hMTtpZih0aGlzLl9yZWZyYWN0aW9uVGV4dHVyZSYmQi5SZWZyYWN0aW9uVGV4dHVyZUVuYWJsZWQpaWYodGhpcy5fcmVmcmFjdGlvblRleHR1cmUuaXNSZWFkeU9yTm90QmxvY2tpbmcoKSlyLl9uZWVkVVZzPSEwLHIuUkVGUkFDVElPTj0hMCxyLlJFRlJBQ1RJT05NQVBfM0Q9dGhpcy5fcmVmcmFjdGlvblRleHR1cmUuaXNDdWJlLHIuUkdCRFJFRlJBQ1RJT049dGhpcy5fcmVmcmFjdGlvblRleHR1cmUuaXNSR0JELHIuVVNFX0xPQ0FMX1JFRlJBQ1RJT05NQVBfQ1VCSUM9ISF0aGlzLl9yZWZyYWN0aW9uVGV4dHVyZS5ib3VuZGluZ0JveFNpemU7ZWxzZSByZXR1cm4hMTtlbHNlIHIuUkVGUkFDVElPTj0hMTtyLlRXT1NJREVETElHSFRJTkc9IXRoaXMuX2JhY2tGYWNlQ3VsbGluZyYmdGhpcy5fdHdvU2lkZWRMaWdodGluZ31lbHNlIHIuRElGRlVTRT0hMSxyLkFNQklFTlQ9ITEsci5PUEFDSVRZPSExLHIuUkVGTEVDVElPTj0hMSxyLkVNSVNTSVZFPSExLHIuTElHSFRNQVA9ITEsci5CVU1QPSExLHIuUkVGUkFDVElPTj0hMTtyLkFMUEhBRlJPTURJRkZVU0U9dGhpcy5fc2hvdWxkVXNlQWxwaGFGcm9tRGlmZnVzZVRleHR1cmUoKSxyLkVNSVNTSVZFQVNJTExVTUlOQVRJT049dGhpcy5fdXNlRW1pc3NpdmVBc0lsbHVtaW5hdGlvbixyLkxJTktFTUlTU0lWRVdJVEhESUZGVVNFPXRoaXMuX2xpbmtFbWlzc2l2ZVdpdGhEaWZmdXNlLHIuU1BFQ1VMQVJPVkVSQUxQSEE9dGhpcy5fdXNlU3BlY3VsYXJPdmVyQWxwaGEsci5QUkVNVUxUSVBMWUFMUEhBPXRoaXMuYWxwaGFNb2RlPT09N3x8dGhpcy5hbHBoYU1vZGU9PT04LHIuQUxQSEFURVNUX0FGVEVSQUxMQUxQSEFDT01QVVRBVElPTlM9dGhpcy50cmFuc3BhcmVuY3lNb2RlIT09bnVsbCxyLkFMUEhBQkxFTkQ9dGhpcy50cmFuc3BhcmVuY3lNb2RlPT09bnVsbHx8dGhpcy5uZWVkQWxwaGFCbGVuZGluZ0Zvck1lc2goZSl9aWYodGhpcy5fZXZlbnRJbmZvLmlzUmVhZHlGb3JTdWJNZXNoPSEwLHRoaXMuX2V2ZW50SW5mby5kZWZpbmVzPXIsdGhpcy5fY2FsbGJhY2tQbHVnaW5FdmVudElzUmVhZHlGb3JTdWJNZXNoKHRoaXMuX2V2ZW50SW5mbyksIXRoaXMuX2V2ZW50SW5mby5pc1JlYWR5Rm9yU3ViTWVzaClyZXR1cm4hMTtpZihyLl9hcmVJbWFnZVByb2Nlc3NpbmdEaXJ0eSYmdGhpcy5faW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbil7aWYoIXRoaXMuX2ltYWdlUHJvY2Vzc2luZ0NvbmZpZ3VyYXRpb24uaXNSZWFkeSgpKXJldHVybiExO3RoaXMuX2ltYWdlUHJvY2Vzc2luZ0NvbmZpZ3VyYXRpb24ucHJlcGFyZURlZmluZXMociksci5JU19SRUZMRUNUSU9OX0xJTkVBUj10aGlzLnJlZmxlY3Rpb25UZXh0dXJlIT1udWxsJiYhdGhpcy5yZWZsZWN0aW9uVGV4dHVyZS5nYW1tYVNwYWNlLHIuSVNfUkVGUkFDVElPTl9MSU5FQVI9dGhpcy5yZWZyYWN0aW9uVGV4dHVyZSE9bnVsbCYmIXRoaXMucmVmcmFjdGlvblRleHR1cmUuZ2FtbWFTcGFjZX1yLl9hcmVGcmVzbmVsRGlydHkmJihCLkZyZXNuZWxFbmFibGVkPyh0aGlzLl9kaWZmdXNlRnJlc25lbFBhcmFtZXRlcnN8fHRoaXMuX29wYWNpdHlGcmVzbmVsUGFyYW1ldGVyc3x8dGhpcy5fZW1pc3NpdmVGcmVzbmVsUGFyYW1ldGVyc3x8dGhpcy5fcmVmcmFjdGlvbkZyZXNuZWxQYXJhbWV0ZXJzfHx0aGlzLl9yZWZsZWN0aW9uRnJlc25lbFBhcmFtZXRlcnMpJiYoci5ESUZGVVNFRlJFU05FTD10aGlzLl9kaWZmdXNlRnJlc25lbFBhcmFtZXRlcnMmJnRoaXMuX2RpZmZ1c2VGcmVzbmVsUGFyYW1ldGVycy5pc0VuYWJsZWQsci5PUEFDSVRZRlJFU05FTD10aGlzLl9vcGFjaXR5RnJlc25lbFBhcmFtZXRlcnMmJnRoaXMuX29wYWNpdHlGcmVzbmVsUGFyYW1ldGVycy5pc0VuYWJsZWQsci5SRUZMRUNUSU9ORlJFU05FTD10aGlzLl9yZWZsZWN0aW9uRnJlc25lbFBhcmFtZXRlcnMmJnRoaXMuX3JlZmxlY3Rpb25GcmVzbmVsUGFyYW1ldGVycy5pc0VuYWJsZWQsci5SRUZMRUNUSU9ORlJFU05FTEZST01TUEVDVUxBUj10aGlzLl91c2VSZWZsZWN0aW9uRnJlc25lbEZyb21TcGVjdWxhcixyLlJFRlJBQ1RJT05GUkVTTkVMPXRoaXMuX3JlZnJhY3Rpb25GcmVzbmVsUGFyYW1ldGVycyYmdGhpcy5fcmVmcmFjdGlvbkZyZXNuZWxQYXJhbWV0ZXJzLmlzRW5hYmxlZCxyLkVNSVNTSVZFRlJFU05FTD10aGlzLl9lbWlzc2l2ZUZyZXNuZWxQYXJhbWV0ZXJzJiZ0aGlzLl9lbWlzc2l2ZUZyZXNuZWxQYXJhbWV0ZXJzLmlzRW5hYmxlZCxyLl9uZWVkTm9ybWFscz0hMCxyLkZSRVNORUw9ITApOnIuRlJFU05FTD0hMSksaWUuUHJlcGFyZURlZmluZXNGb3JNaXNjKGUscyx0aGlzLl91c2VMb2dhcml0aG1pY0RlcHRoLHRoaXMucG9pbnRzQ2xvdWQsdGhpcy5mb2dFbmFibGVkLHRoaXMuX3Nob3VsZFR1cm5BbHBoYVRlc3RPbihlKXx8dGhpcy5fZm9yY2VBbHBoYVRlc3QsciksaWUuUHJlcGFyZURlZmluZXNGb3JGcmFtZUJvdW5kVmFsdWVzKHMsbix0aGlzLHIsaSxudWxsLHQuZ2V0UmVuZGVyaW5nTWVzaCgpLmhhc1RoaW5JbnN0YW5jZXMpLHRoaXMuX2V2ZW50SW5mby5kZWZpbmVzPXIsdGhpcy5fZXZlbnRJbmZvLm1lc2g9ZSx0aGlzLl9jYWxsYmFja1BsdWdpbkV2ZW50UHJlcGFyZURlZmluZXNCZWZvcmVBdHRyaWJ1dGVzKHRoaXMuX2V2ZW50SW5mbyksaWUuUHJlcGFyZURlZmluZXNGb3JBdHRyaWJ1dGVzKGUsciwhMCwhMCwhMCksdGhpcy5fY2FsbGJhY2tQbHVnaW5FdmVudFByZXBhcmVEZWZpbmVzKHRoaXMuX2V2ZW50SW5mbyk7bGV0IG89ITE7aWYoci5pc0RpcnR5KXtjb25zdCBoPXIuX2FyZUxpZ2h0c0Rpc3Bvc2VkO3IubWFya0FzUHJvY2Vzc2VkKCk7Y29uc3QgbD1uZXcgenM7ci5SRUZMRUNUSU9OJiZsLmFkZEZhbGxiYWNrKDAsIlJFRkxFQ1RJT04iKSxyLlNQRUNVTEFSJiZsLmFkZEZhbGxiYWNrKDAsIlNQRUNVTEFSIiksci5CVU1QJiZsLmFkZEZhbGxiYWNrKDAsIkJVTVAiKSxyLlBBUkFMTEFYJiZsLmFkZEZhbGxiYWNrKDEsIlBBUkFMTEFYIiksci5QQVJBTExBWE9DQ0xVU0lPTiYmbC5hZGRGYWxsYmFjaygwLCJQQVJBTExBWE9DQ0xVU0lPTiIpLHIuU1BFQ1VMQVJPVkVSQUxQSEEmJmwuYWRkRmFsbGJhY2soMCwiU1BFQ1VMQVJPVkVSQUxQSEEiKSxyLkZPRyYmbC5hZGRGYWxsYmFjaygxLCJGT0ciKSxyLlBPSU5UU0laRSYmbC5hZGRGYWxsYmFjaygwLCJQT0lOVFNJWkUiKSxyLkxPR0FSSVRITUlDREVQVEgmJmwuYWRkRmFsbGJhY2soMCwiTE9HQVJJVEhNSUNERVBUSCIpLGllLkhhbmRsZUZhbGxiYWNrc0ZvclNoYWRvd3MocixsLHRoaXMuX21heFNpbXVsdGFuZW91c0xpZ2h0cyksci5TUEVDVUxBUlRFUk0mJmwuYWRkRmFsbGJhY2soMCwiU1BFQ1VMQVJURVJNIiksci5ESUZGVVNFRlJFU05FTCYmbC5hZGRGYWxsYmFjaygxLCJESUZGVVNFRlJFU05FTCIpLHIuT1BBQ0lUWUZSRVNORUwmJmwuYWRkRmFsbGJhY2soMiwiT1BBQ0lUWUZSRVNORUwiKSxyLlJFRkxFQ1RJT05GUkVTTkVMJiZsLmFkZEZhbGxiYWNrKDMsIlJFRkxFQ1RJT05GUkVTTkVMIiksci5FTUlTU0lWRUZSRVNORUwmJmwuYWRkRmFsbGJhY2soNCwiRU1JU1NJVkVGUkVTTkVMIiksci5GUkVTTkVMJiZsLmFkZEZhbGxiYWNrKDQsIkZSRVNORUwiKSxyLk1VTFRJVklFVyYmbC5hZGRGYWxsYmFjaygwLCJNVUxUSVZJRVciKTtjb25zdCB1PVtnLlBvc2l0aW9uS2luZF07ci5OT1JNQUwmJnUucHVzaChnLk5vcm1hbEtpbmQpLHIuVEFOR0VOVCYmdS5wdXNoKGcuVGFuZ2VudEtpbmQpO2ZvcihsZXQgQT0xO0E8PTY7KytBKXJbIlVWIitBXSYmdS5wdXNoKGB1diR7QT09PTE/IiI6QX1gKTtyLlZFUlRFWENPTE9SJiZ1LnB1c2goZy5Db2xvcktpbmQpLGllLlByZXBhcmVBdHRyaWJ1dGVzRm9yQm9uZXModSxlLHIsbCksaWUuUHJlcGFyZUF0dHJpYnV0ZXNGb3JJbnN0YW5jZXModSxyKSxpZS5QcmVwYXJlQXR0cmlidXRlc0Zvck1vcnBoVGFyZ2V0cyh1LGUsciksaWUuUHJlcGFyZUF0dHJpYnV0ZXNGb3JCYWtlZFZlcnRleEFuaW1hdGlvbih1LGUscik7bGV0IGQ9ImRlZmF1bHQiO2NvbnN0IGY9WyJ3b3JsZCIsInZpZXciLCJ2aWV3UHJvamVjdGlvbiIsInZFeWVQb3NpdGlvbiIsInZMaWdodHNUeXBlIiwidkFtYmllbnRDb2xvciIsInZEaWZmdXNlQ29sb3IiLCJ2U3BlY3VsYXJDb2xvciIsInZFbWlzc2l2ZUNvbG9yIiwidmlzaWJpbGl0eSIsInZGb2dJbmZvcyIsInZGb2dDb2xvciIsInBvaW50U2l6ZSIsInZEaWZmdXNlSW5mb3MiLCJ2QW1iaWVudEluZm9zIiwidk9wYWNpdHlJbmZvcyIsInZSZWZsZWN0aW9uSW5mb3MiLCJ2RW1pc3NpdmVJbmZvcyIsInZTcGVjdWxhckluZm9zIiwidkJ1bXBJbmZvcyIsInZMaWdodG1hcEluZm9zIiwidlJlZnJhY3Rpb25JbmZvcyIsIm1Cb25lcyIsImRpZmZ1c2VNYXRyaXgiLCJhbWJpZW50TWF0cml4Iiwib3BhY2l0eU1hdHJpeCIsInJlZmxlY3Rpb25NYXRyaXgiLCJlbWlzc2l2ZU1hdHJpeCIsInNwZWN1bGFyTWF0cml4IiwiYnVtcE1hdHJpeCIsIm5vcm1hbE1hdHJpeCIsImxpZ2h0bWFwTWF0cml4IiwicmVmcmFjdGlvbk1hdHJpeCIsImRpZmZ1c2VMZWZ0Q29sb3IiLCJkaWZmdXNlUmlnaHRDb2xvciIsIm9wYWNpdHlQYXJ0cyIsInJlZmxlY3Rpb25MZWZ0Q29sb3IiLCJyZWZsZWN0aW9uUmlnaHRDb2xvciIsImVtaXNzaXZlTGVmdENvbG9yIiwiZW1pc3NpdmVSaWdodENvbG9yIiwicmVmcmFjdGlvbkxlZnRDb2xvciIsInJlZnJhY3Rpb25SaWdodENvbG9yIiwidlJlZmxlY3Rpb25Qb3NpdGlvbiIsInZSZWZsZWN0aW9uU2l6ZSIsInZSZWZyYWN0aW9uUG9zaXRpb24iLCJ2UmVmcmFjdGlvblNpemUiLCJsb2dhcml0aG1pY0RlcHRoQ29uc3RhbnQiLCJ2VGFuZ2VudFNwYWNlUGFyYW1zIiwiYWxwaGFDdXRPZmYiLCJib25lVGV4dHVyZVdpZHRoIiwibW9ycGhUYXJnZXRUZXh0dXJlSW5mbyIsIm1vcnBoVGFyZ2V0VGV4dHVyZUluZGljZXMiXSxfPVsiZGlmZnVzZVNhbXBsZXIiLCJhbWJpZW50U2FtcGxlciIsIm9wYWNpdHlTYW1wbGVyIiwicmVmbGVjdGlvbkN1YmVTYW1wbGVyIiwicmVmbGVjdGlvbjJEU2FtcGxlciIsImVtaXNzaXZlU2FtcGxlciIsInNwZWN1bGFyU2FtcGxlciIsImJ1bXBTYW1wbGVyIiwibGlnaHRtYXBTYW1wbGVyIiwicmVmcmFjdGlvbkN1YmVTYW1wbGVyIiwicmVmcmFjdGlvbjJEU2FtcGxlciIsImJvbmVTYW1wbGVyIiwibW9ycGhUYXJnZXRzIiwib2l0RGVwdGhTYW1wbGVyIiwib2l0RnJvbnRDb2xvclNhbXBsZXIiXSxFPVsiTWF0ZXJpYWwiLCJTY2VuZSIsIk1lc2giXTt0aGlzLl9ldmVudEluZm8uZmFsbGJhY2tzPWwsdGhpcy5fZXZlbnRJbmZvLmZhbGxiYWNrUmFuaz0wLHRoaXMuX2V2ZW50SW5mby5kZWZpbmVzPXIsdGhpcy5fZXZlbnRJbmZvLnVuaWZvcm1zPWYsdGhpcy5fZXZlbnRJbmZvLmF0dHJpYnV0ZXM9dSx0aGlzLl9ldmVudEluZm8uc2FtcGxlcnM9Xyx0aGlzLl9ldmVudEluZm8udW5pZm9ybUJ1ZmZlcnNOYW1lcz1FLHRoaXMuX2V2ZW50SW5mby5jdXN0b21Db2RlPXZvaWQgMCx0aGlzLl9ldmVudEluZm8ubWVzaD1lLHRoaXMuX2NhbGxiYWNrUGx1Z2luRXZlbnRHZW5lcmljKFFlLlByZXBhcmVFZmZlY3QsdGhpcy5fZXZlbnRJbmZvKSxrci5BZGRVbmlmb3JtcyhmKSxwZSYmKHBlLlByZXBhcmVVbmlmb3JtcyhmLHIpLHBlLlByZXBhcmVTYW1wbGVycyhfLHIpKSxpZS5QcmVwYXJlVW5pZm9ybXNBbmRTYW1wbGVyc0xpc3Qoe3VuaWZvcm1zTmFtZXM6Zix1bmlmb3JtQnVmZmVyc05hbWVzOkUsc2FtcGxlcnM6XyxkZWZpbmVzOnIsbWF4U2ltdWx0YW5lb3VzTGlnaHRzOnRoaXMuX21heFNpbXVsdGFuZW91c0xpZ2h0c30pLHNzKGYpO2NvbnN0IG09e307dGhpcy5jdXN0b21TaGFkZXJOYW1lUmVzb2x2ZSYmKGQ9dGhpcy5jdXN0b21TaGFkZXJOYW1lUmVzb2x2ZShkLGYsRSxfLHIsdSxtKSk7Y29uc3Qgdj1yLnRvU3RyaW5nKCksUz10LmVmZmVjdDtsZXQgeT1zLmdldEVuZ2luZSgpLmNyZWF0ZUVmZmVjdChkLHthdHRyaWJ1dGVzOnUsdW5pZm9ybXNOYW1lczpmLHVuaWZvcm1CdWZmZXJzTmFtZXM6RSxzYW1wbGVyczpfLGRlZmluZXM6dixmYWxsYmFja3M6bCxvbkNvbXBpbGVkOnRoaXMub25Db21waWxlZCxvbkVycm9yOnRoaXMub25FcnJvcixpbmRleFBhcmFtZXRlcnM6e21heFNpbXVsdGFuZW91c0xpZ2h0czp0aGlzLl9tYXhTaW11bHRhbmVvdXNMaWdodHMsbWF4U2ltdWx0YW5lb3VzTW9ycGhUYXJnZXRzOnIuTlVNX01PUlBIX0lORkxVRU5DRVJTfSxwcm9jZXNzRmluYWxDb2RlOm0ucHJvY2Vzc0ZpbmFsQ29kZSxwcm9jZXNzQ29kZUFmdGVySW5jbHVkZXM6dGhpcy5fZXZlbnRJbmZvLmN1c3RvbUNvZGUsbXVsdGlUYXJnZXQ6ci5QUkVQQVNTfSxuKTtpZih0aGlzLl9ldmVudEluZm8uY3VzdG9tQ29kZT12b2lkIDAseSlpZih0aGlzLl9vbkVmZmVjdENyZWF0ZWRPYnNlcnZhYmxlJiYoR3MuZWZmZWN0PXksR3Muc3ViTWVzaD10LHRoaXMuX29uRWZmZWN0Q3JlYXRlZE9ic2VydmFibGUubm90aWZ5T2JzZXJ2ZXJzKEdzKSksdGhpcy5hbGxvd1NoYWRlckhvdFN3YXBwaW5nJiZTJiYheS5pc1JlYWR5KCkpe2lmKHk9UyxyLm1hcmtBc1VucHJvY2Vzc2VkKCksbz10aGlzLmlzRnJvemVuLGgpcmV0dXJuIHIuX2FyZUxpZ2h0c0Rpc3Bvc2VkPSEwLCExfWVsc2Ugcy5yZXNldENhY2hlZE1hdGVyaWFsKCksdC5zZXRFZmZlY3QoeSxyLHRoaXMuX21hdGVyaWFsQ29udGV4dCl9cmV0dXJuIXQuZWZmZWN0fHwhdC5lZmZlY3QuaXNSZWFkeSgpPyExOihyLl9yZW5kZXJJZD1zLmdldFJlbmRlcklkKCksdC5lZmZlY3QuX3dhc1ByZXZpb3VzbHlSZWFkeT0hbyx0LmVmZmVjdC5fd2FzUHJldmlvdXNseVVzaW5nSW5zdGFuY2VzPWkscy5wZXJmb3JtYW5jZVByaW9yaXR5IT09Q3QuQmFja3dhcmRDb21wYXRpYmxlJiYodGhpcy5jaGVja1JlYWR5T25seU9uY2U9ITApLCEwKX1idWlsZFVuaWZvcm1MYXlvdXQoKXtjb25zdCBlPXRoaXMuX3VuaWZvcm1CdWZmZXI7ZS5hZGRVbmlmb3JtKCJkaWZmdXNlTGVmdENvbG9yIiw0KSxlLmFkZFVuaWZvcm0oImRpZmZ1c2VSaWdodENvbG9yIiw0KSxlLmFkZFVuaWZvcm0oIm9wYWNpdHlQYXJ0cyIsNCksZS5hZGRVbmlmb3JtKCJyZWZsZWN0aW9uTGVmdENvbG9yIiw0KSxlLmFkZFVuaWZvcm0oInJlZmxlY3Rpb25SaWdodENvbG9yIiw0KSxlLmFkZFVuaWZvcm0oInJlZnJhY3Rpb25MZWZ0Q29sb3IiLDQpLGUuYWRkVW5pZm9ybSgicmVmcmFjdGlvblJpZ2h0Q29sb3IiLDQpLGUuYWRkVW5pZm9ybSgiZW1pc3NpdmVMZWZ0Q29sb3IiLDQpLGUuYWRkVW5pZm9ybSgiZW1pc3NpdmVSaWdodENvbG9yIiw0KSxlLmFkZFVuaWZvcm0oInZEaWZmdXNlSW5mb3MiLDIpLGUuYWRkVW5pZm9ybSgidkFtYmllbnRJbmZvcyIsMiksZS5hZGRVbmlmb3JtKCJ2T3BhY2l0eUluZm9zIiwyKSxlLmFkZFVuaWZvcm0oInZSZWZsZWN0aW9uSW5mb3MiLDIpLGUuYWRkVW5pZm9ybSgidlJlZmxlY3Rpb25Qb3NpdGlvbiIsMyksZS5hZGRVbmlmb3JtKCJ2UmVmbGVjdGlvblNpemUiLDMpLGUuYWRkVW5pZm9ybSgidkVtaXNzaXZlSW5mb3MiLDIpLGUuYWRkVW5pZm9ybSgidkxpZ2h0bWFwSW5mb3MiLDIpLGUuYWRkVW5pZm9ybSgidlNwZWN1bGFySW5mb3MiLDIpLGUuYWRkVW5pZm9ybSgidkJ1bXBJbmZvcyIsMyksZS5hZGRVbmlmb3JtKCJkaWZmdXNlTWF0cml4IiwxNiksZS5hZGRVbmlmb3JtKCJhbWJpZW50TWF0cml4IiwxNiksZS5hZGRVbmlmb3JtKCJvcGFjaXR5TWF0cml4IiwxNiksZS5hZGRVbmlmb3JtKCJyZWZsZWN0aW9uTWF0cml4IiwxNiksZS5hZGRVbmlmb3JtKCJlbWlzc2l2ZU1hdHJpeCIsMTYpLGUuYWRkVW5pZm9ybSgibGlnaHRtYXBNYXRyaXgiLDE2KSxlLmFkZFVuaWZvcm0oInNwZWN1bGFyTWF0cml4IiwxNiksZS5hZGRVbmlmb3JtKCJidW1wTWF0cml4IiwxNiksZS5hZGRVbmlmb3JtKCJ2VGFuZ2VudFNwYWNlUGFyYW1zIiwyKSxlLmFkZFVuaWZvcm0oInBvaW50U2l6ZSIsMSksZS5hZGRVbmlmb3JtKCJhbHBoYUN1dE9mZiIsMSksZS5hZGRVbmlmb3JtKCJyZWZyYWN0aW9uTWF0cml4IiwxNiksZS5hZGRVbmlmb3JtKCJ2UmVmcmFjdGlvbkluZm9zIiw0KSxlLmFkZFVuaWZvcm0oInZSZWZyYWN0aW9uUG9zaXRpb24iLDMpLGUuYWRkVW5pZm9ybSgidlJlZnJhY3Rpb25TaXplIiwzKSxlLmFkZFVuaWZvcm0oInZTcGVjdWxhckNvbG9yIiw0KSxlLmFkZFVuaWZvcm0oInZFbWlzc2l2ZUNvbG9yIiwzKSxlLmFkZFVuaWZvcm0oInZEaWZmdXNlQ29sb3IiLDQpLGUuYWRkVW5pZm9ybSgidkFtYmllbnRDb2xvciIsMyksc3VwZXIuYnVpbGRVbmlmb3JtTGF5b3V0KCl9YmluZEZvclN1Yk1lc2goZSx0LGkpe3ZhciBzO2NvbnN0IHI9dGhpcy5nZXRTY2VuZSgpLG49aS5tYXRlcmlhbERlZmluZXM7aWYoIW4pcmV0dXJuO2NvbnN0IGE9aS5lZmZlY3Q7aWYoIWEpcmV0dXJuO3RoaXMuX2FjdGl2ZUVmZmVjdD1hLHQuZ2V0TWVzaFVuaWZvcm1CdWZmZXIoKS5iaW5kVG9FZmZlY3QoYSwiTWVzaCIpLHQudHJhbnNmZXJUb0VmZmVjdChlKSx0aGlzLl91bmlmb3JtQnVmZmVyLmJpbmRUb0VmZmVjdChhLCJNYXRlcmlhbCIpLHRoaXMucHJlUGFzc0NvbmZpZ3VyYXRpb24uYmluZEZvclN1Yk1lc2godGhpcy5fYWN0aXZlRWZmZWN0LHIsdCxlLHRoaXMuaXNGcm96ZW4pLHRoaXMuX2V2ZW50SW5mby5zdWJNZXNoPWksdGhpcy5fY2FsbGJhY2tQbHVnaW5FdmVudEhhcmRCaW5kRm9yU3ViTWVzaCh0aGlzLl9ldmVudEluZm8pLG4uT0JKRUNUU1BBQ0VfTk9STUFMTUFQJiYoZS50b05vcm1hbE1hdHJpeCh0aGlzLl9ub3JtYWxNYXRyaXgpLHRoaXMuYmluZE9ubHlOb3JtYWxNYXRyaXgodGhpcy5fbm9ybWFsTWF0cml4KSk7Y29uc3Qgbz1hLl9mb3JjZVJlYmluZE9uTmV4dENhbGx8fHRoaXMuX211c3RSZWJpbmQocixhLHQudmlzaWJpbGl0eSk7aWUuQmluZEJvbmVzUGFyYW1ldGVycyh0LGEpO2NvbnN0IGg9dGhpcy5fdW5pZm9ybUJ1ZmZlcjtpZihvKXtpZih0aGlzLmJpbmRWaWV3UHJvamVjdGlvbihhKSwhaC51c2VVYm98fCF0aGlzLmlzRnJvemVufHwhaC5pc1N5bmN8fGEuX2ZvcmNlUmViaW5kT25OZXh0Q2FsbCl7aWYoQi5GcmVzbmVsRW5hYmxlZCYmbi5GUkVTTkVMJiYodGhpcy5kaWZmdXNlRnJlc25lbFBhcmFtZXRlcnMmJnRoaXMuZGlmZnVzZUZyZXNuZWxQYXJhbWV0ZXJzLmlzRW5hYmxlZCYmKGgudXBkYXRlQ29sb3I0KCJkaWZmdXNlTGVmdENvbG9yIix0aGlzLmRpZmZ1c2VGcmVzbmVsUGFyYW1ldGVycy5sZWZ0Q29sb3IsdGhpcy5kaWZmdXNlRnJlc25lbFBhcmFtZXRlcnMucG93ZXIpLGgudXBkYXRlQ29sb3I0KCJkaWZmdXNlUmlnaHRDb2xvciIsdGhpcy5kaWZmdXNlRnJlc25lbFBhcmFtZXRlcnMucmlnaHRDb2xvcix0aGlzLmRpZmZ1c2VGcmVzbmVsUGFyYW1ldGVycy5iaWFzKSksdGhpcy5vcGFjaXR5RnJlc25lbFBhcmFtZXRlcnMmJnRoaXMub3BhY2l0eUZyZXNuZWxQYXJhbWV0ZXJzLmlzRW5hYmxlZCYmaC51cGRhdGVDb2xvcjQoIm9wYWNpdHlQYXJ0cyIsbmV3IHJlKHRoaXMub3BhY2l0eUZyZXNuZWxQYXJhbWV0ZXJzLmxlZnRDb2xvci50b0x1bWluYW5jZSgpLHRoaXMub3BhY2l0eUZyZXNuZWxQYXJhbWV0ZXJzLnJpZ2h0Q29sb3IudG9MdW1pbmFuY2UoKSx0aGlzLm9wYWNpdHlGcmVzbmVsUGFyYW1ldGVycy5iaWFzKSx0aGlzLm9wYWNpdHlGcmVzbmVsUGFyYW1ldGVycy5wb3dlciksdGhpcy5yZWZsZWN0aW9uRnJlc25lbFBhcmFtZXRlcnMmJnRoaXMucmVmbGVjdGlvbkZyZXNuZWxQYXJhbWV0ZXJzLmlzRW5hYmxlZCYmKGgudXBkYXRlQ29sb3I0KCJyZWZsZWN0aW9uTGVmdENvbG9yIix0aGlzLnJlZmxlY3Rpb25GcmVzbmVsUGFyYW1ldGVycy5sZWZ0Q29sb3IsdGhpcy5yZWZsZWN0aW9uRnJlc25lbFBhcmFtZXRlcnMucG93ZXIpLGgudXBkYXRlQ29sb3I0KCJyZWZsZWN0aW9uUmlnaHRDb2xvciIsdGhpcy5yZWZsZWN0aW9uRnJlc25lbFBhcmFtZXRlcnMucmlnaHRDb2xvcix0aGlzLnJlZmxlY3Rpb25GcmVzbmVsUGFyYW1ldGVycy5iaWFzKSksdGhpcy5yZWZyYWN0aW9uRnJlc25lbFBhcmFtZXRlcnMmJnRoaXMucmVmcmFjdGlvbkZyZXNuZWxQYXJhbWV0ZXJzLmlzRW5hYmxlZCYmKGgudXBkYXRlQ29sb3I0KCJyZWZyYWN0aW9uTGVmdENvbG9yIix0aGlzLnJlZnJhY3Rpb25GcmVzbmVsUGFyYW1ldGVycy5sZWZ0Q29sb3IsdGhpcy5yZWZyYWN0aW9uRnJlc25lbFBhcmFtZXRlcnMucG93ZXIpLGgudXBkYXRlQ29sb3I0KCJyZWZyYWN0aW9uUmlnaHRDb2xvciIsdGhpcy5yZWZyYWN0aW9uRnJlc25lbFBhcmFtZXRlcnMucmlnaHRDb2xvcix0aGlzLnJlZnJhY3Rpb25GcmVzbmVsUGFyYW1ldGVycy5iaWFzKSksdGhpcy5lbWlzc2l2ZUZyZXNuZWxQYXJhbWV0ZXJzJiZ0aGlzLmVtaXNzaXZlRnJlc25lbFBhcmFtZXRlcnMuaXNFbmFibGVkJiYoaC51cGRhdGVDb2xvcjQoImVtaXNzaXZlTGVmdENvbG9yIix0aGlzLmVtaXNzaXZlRnJlc25lbFBhcmFtZXRlcnMubGVmdENvbG9yLHRoaXMuZW1pc3NpdmVGcmVzbmVsUGFyYW1ldGVycy5wb3dlciksaC51cGRhdGVDb2xvcjQoImVtaXNzaXZlUmlnaHRDb2xvciIsdGhpcy5lbWlzc2l2ZUZyZXNuZWxQYXJhbWV0ZXJzLnJpZ2h0Q29sb3IsdGhpcy5lbWlzc2l2ZUZyZXNuZWxQYXJhbWV0ZXJzLmJpYXMpKSksci50ZXh0dXJlc0VuYWJsZWQpe2lmKHRoaXMuX2RpZmZ1c2VUZXh0dXJlJiZCLkRpZmZ1c2VUZXh0dXJlRW5hYmxlZCYmKGgudXBkYXRlRmxvYXQyKCJ2RGlmZnVzZUluZm9zIix0aGlzLl9kaWZmdXNlVGV4dHVyZS5jb29yZGluYXRlc0luZGV4LHRoaXMuX2RpZmZ1c2VUZXh0dXJlLmxldmVsKSxpZS5CaW5kVGV4dHVyZU1hdHJpeCh0aGlzLl9kaWZmdXNlVGV4dHVyZSxoLCJkaWZmdXNlIikpLHRoaXMuX2FtYmllbnRUZXh0dXJlJiZCLkFtYmllbnRUZXh0dXJlRW5hYmxlZCYmKGgudXBkYXRlRmxvYXQyKCJ2QW1iaWVudEluZm9zIix0aGlzLl9hbWJpZW50VGV4dHVyZS5jb29yZGluYXRlc0luZGV4LHRoaXMuX2FtYmllbnRUZXh0dXJlLmxldmVsKSxpZS5CaW5kVGV4dHVyZU1hdHJpeCh0aGlzLl9hbWJpZW50VGV4dHVyZSxoLCJhbWJpZW50IikpLHRoaXMuX29wYWNpdHlUZXh0dXJlJiZCLk9wYWNpdHlUZXh0dXJlRW5hYmxlZCYmKGgudXBkYXRlRmxvYXQyKCJ2T3BhY2l0eUluZm9zIix0aGlzLl9vcGFjaXR5VGV4dHVyZS5jb29yZGluYXRlc0luZGV4LHRoaXMuX29wYWNpdHlUZXh0dXJlLmxldmVsKSxpZS5CaW5kVGV4dHVyZU1hdHJpeCh0aGlzLl9vcGFjaXR5VGV4dHVyZSxoLCJvcGFjaXR5IikpLHRoaXMuX2hhc0FscGhhQ2hhbm5lbCgpJiZoLnVwZGF0ZUZsb2F0KCJhbHBoYUN1dE9mZiIsdGhpcy5hbHBoYUN1dE9mZiksdGhpcy5fcmVmbGVjdGlvblRleHR1cmUmJkIuUmVmbGVjdGlvblRleHR1cmVFbmFibGVkJiYoaC51cGRhdGVGbG9hdDIoInZSZWZsZWN0aW9uSW5mb3MiLHRoaXMuX3JlZmxlY3Rpb25UZXh0dXJlLmxldmVsLHRoaXMucm91Z2huZXNzKSxoLnVwZGF0ZU1hdHJpeCgicmVmbGVjdGlvbk1hdHJpeCIsdGhpcy5fcmVmbGVjdGlvblRleHR1cmUuZ2V0UmVmbGVjdGlvblRleHR1cmVNYXRyaXgoKSksdGhpcy5fcmVmbGVjdGlvblRleHR1cmUuYm91bmRpbmdCb3hTaXplKSl7Y29uc3QgbD10aGlzLl9yZWZsZWN0aW9uVGV4dHVyZTtoLnVwZGF0ZVZlY3RvcjMoInZSZWZsZWN0aW9uUG9zaXRpb24iLGwuYm91bmRpbmdCb3hQb3NpdGlvbiksaC51cGRhdGVWZWN0b3IzKCJ2UmVmbGVjdGlvblNpemUiLGwuYm91bmRpbmdCb3hTaXplKX1pZih0aGlzLl9lbWlzc2l2ZVRleHR1cmUmJkIuRW1pc3NpdmVUZXh0dXJlRW5hYmxlZCYmKGgudXBkYXRlRmxvYXQyKCJ2RW1pc3NpdmVJbmZvcyIsdGhpcy5fZW1pc3NpdmVUZXh0dXJlLmNvb3JkaW5hdGVzSW5kZXgsdGhpcy5fZW1pc3NpdmVUZXh0dXJlLmxldmVsKSxpZS5CaW5kVGV4dHVyZU1hdHJpeCh0aGlzLl9lbWlzc2l2ZVRleHR1cmUsaCwiZW1pc3NpdmUiKSksdGhpcy5fbGlnaHRtYXBUZXh0dXJlJiZCLkxpZ2h0bWFwVGV4dHVyZUVuYWJsZWQmJihoLnVwZGF0ZUZsb2F0MigidkxpZ2h0bWFwSW5mb3MiLHRoaXMuX2xpZ2h0bWFwVGV4dHVyZS5jb29yZGluYXRlc0luZGV4LHRoaXMuX2xpZ2h0bWFwVGV4dHVyZS5sZXZlbCksaWUuQmluZFRleHR1cmVNYXRyaXgodGhpcy5fbGlnaHRtYXBUZXh0dXJlLGgsImxpZ2h0bWFwIikpLHRoaXMuX3NwZWN1bGFyVGV4dHVyZSYmQi5TcGVjdWxhclRleHR1cmVFbmFibGVkJiYoaC51cGRhdGVGbG9hdDIoInZTcGVjdWxhckluZm9zIix0aGlzLl9zcGVjdWxhclRleHR1cmUuY29vcmRpbmF0ZXNJbmRleCx0aGlzLl9zcGVjdWxhclRleHR1cmUubGV2ZWwpLGllLkJpbmRUZXh0dXJlTWF0cml4KHRoaXMuX3NwZWN1bGFyVGV4dHVyZSxoLCJzcGVjdWxhciIpKSx0aGlzLl9idW1wVGV4dHVyZSYmci5nZXRFbmdpbmUoKS5nZXRDYXBzKCkuc3RhbmRhcmREZXJpdmF0aXZlcyYmQi5CdW1wVGV4dHVyZUVuYWJsZWQmJihoLnVwZGF0ZUZsb2F0MygidkJ1bXBJbmZvcyIsdGhpcy5fYnVtcFRleHR1cmUuY29vcmRpbmF0ZXNJbmRleCwxL3RoaXMuX2J1bXBUZXh0dXJlLmxldmVsLHRoaXMucGFyYWxsYXhTY2FsZUJpYXMpLGllLkJpbmRUZXh0dXJlTWF0cml4KHRoaXMuX2J1bXBUZXh0dXJlLGgsImJ1bXAiKSxyLl9taXJyb3JlZENhbWVyYVBvc2l0aW9uP2gudXBkYXRlRmxvYXQyKCJ2VGFuZ2VudFNwYWNlUGFyYW1zIix0aGlzLl9pbnZlcnROb3JtYWxNYXBYPzE6LTEsdGhpcy5faW52ZXJ0Tm9ybWFsTWFwWT8xOi0xKTpoLnVwZGF0ZUZsb2F0MigidlRhbmdlbnRTcGFjZVBhcmFtcyIsdGhpcy5faW52ZXJ0Tm9ybWFsTWFwWD8tMToxLHRoaXMuX2ludmVydE5vcm1hbE1hcFk/LTE6MSkpLHRoaXMuX3JlZnJhY3Rpb25UZXh0dXJlJiZCLlJlZnJhY3Rpb25UZXh0dXJlRW5hYmxlZCl7bGV0IGw9MTtpZih0aGlzLl9yZWZyYWN0aW9uVGV4dHVyZS5pc0N1YmV8fChoLnVwZGF0ZU1hdHJpeCgicmVmcmFjdGlvbk1hdHJpeCIsdGhpcy5fcmVmcmFjdGlvblRleHR1cmUuZ2V0UmVmbGVjdGlvblRleHR1cmVNYXRyaXgoKSksdGhpcy5fcmVmcmFjdGlvblRleHR1cmUuZGVwdGgmJihsPXRoaXMuX3JlZnJhY3Rpb25UZXh0dXJlLmRlcHRoKSksaC51cGRhdGVGbG9hdDQoInZSZWZyYWN0aW9uSW5mb3MiLHRoaXMuX3JlZnJhY3Rpb25UZXh0dXJlLmxldmVsLHRoaXMuaW5kZXhPZlJlZnJhY3Rpb24sbCx0aGlzLmludmVydFJlZnJhY3Rpb25ZPy0xOjEpLHRoaXMuX3JlZnJhY3Rpb25UZXh0dXJlLmJvdW5kaW5nQm94U2l6ZSl7Y29uc3QgdT10aGlzLl9yZWZyYWN0aW9uVGV4dHVyZTtoLnVwZGF0ZVZlY3RvcjMoInZSZWZyYWN0aW9uUG9zaXRpb24iLHUuYm91bmRpbmdCb3hQb3NpdGlvbiksaC51cGRhdGVWZWN0b3IzKCJ2UmVmcmFjdGlvblNpemUiLHUuYm91bmRpbmdCb3hTaXplKX19fXRoaXMucG9pbnRzQ2xvdWQmJmgudXBkYXRlRmxvYXQoInBvaW50U2l6ZSIsdGhpcy5wb2ludFNpemUpLG4uU1BFQ1VMQVJURVJNJiZoLnVwZGF0ZUNvbG9yNCgidlNwZWN1bGFyQ29sb3IiLHRoaXMuc3BlY3VsYXJDb2xvcix0aGlzLnNwZWN1bGFyUG93ZXIpLGgudXBkYXRlQ29sb3IzKCJ2RW1pc3NpdmVDb2xvciIsQi5FbWlzc2l2ZVRleHR1cmVFbmFibGVkP3RoaXMuZW1pc3NpdmVDb2xvcjpyZS5CbGFja1JlYWRPbmx5KSxoLnVwZGF0ZUNvbG9yNCgidkRpZmZ1c2VDb2xvciIsdGhpcy5kaWZmdXNlQ29sb3IsdGhpcy5hbHBoYSksci5hbWJpZW50Q29sb3IubXVsdGlwbHlUb1JlZih0aGlzLmFtYmllbnRDb2xvcix0aGlzLl9nbG9iYWxBbWJpZW50Q29sb3IpLGgudXBkYXRlQ29sb3IzKCJ2QW1iaWVudENvbG9yIix0aGlzLl9nbG9iYWxBbWJpZW50Q29sb3IpfXIudGV4dHVyZXNFbmFibGVkJiYodGhpcy5fZGlmZnVzZVRleHR1cmUmJkIuRGlmZnVzZVRleHR1cmVFbmFibGVkJiZhLnNldFRleHR1cmUoImRpZmZ1c2VTYW1wbGVyIix0aGlzLl9kaWZmdXNlVGV4dHVyZSksdGhpcy5fYW1iaWVudFRleHR1cmUmJkIuQW1iaWVudFRleHR1cmVFbmFibGVkJiZhLnNldFRleHR1cmUoImFtYmllbnRTYW1wbGVyIix0aGlzLl9hbWJpZW50VGV4dHVyZSksdGhpcy5fb3BhY2l0eVRleHR1cmUmJkIuT3BhY2l0eVRleHR1cmVFbmFibGVkJiZhLnNldFRleHR1cmUoIm9wYWNpdHlTYW1wbGVyIix0aGlzLl9vcGFjaXR5VGV4dHVyZSksdGhpcy5fcmVmbGVjdGlvblRleHR1cmUmJkIuUmVmbGVjdGlvblRleHR1cmVFbmFibGVkJiYodGhpcy5fcmVmbGVjdGlvblRleHR1cmUuaXNDdWJlP2Euc2V0VGV4dHVyZSgicmVmbGVjdGlvbkN1YmVTYW1wbGVyIix0aGlzLl9yZWZsZWN0aW9uVGV4dHVyZSk6YS5zZXRUZXh0dXJlKCJyZWZsZWN0aW9uMkRTYW1wbGVyIix0aGlzLl9yZWZsZWN0aW9uVGV4dHVyZSkpLHRoaXMuX2VtaXNzaXZlVGV4dHVyZSYmQi5FbWlzc2l2ZVRleHR1cmVFbmFibGVkJiZhLnNldFRleHR1cmUoImVtaXNzaXZlU2FtcGxlciIsdGhpcy5fZW1pc3NpdmVUZXh0dXJlKSx0aGlzLl9saWdodG1hcFRleHR1cmUmJkIuTGlnaHRtYXBUZXh0dXJlRW5hYmxlZCYmYS5zZXRUZXh0dXJlKCJsaWdodG1hcFNhbXBsZXIiLHRoaXMuX2xpZ2h0bWFwVGV4dHVyZSksdGhpcy5fc3BlY3VsYXJUZXh0dXJlJiZCLlNwZWN1bGFyVGV4dHVyZUVuYWJsZWQmJmEuc2V0VGV4dHVyZSgic3BlY3VsYXJTYW1wbGVyIix0aGlzLl9zcGVjdWxhclRleHR1cmUpLHRoaXMuX2J1bXBUZXh0dXJlJiZyLmdldEVuZ2luZSgpLmdldENhcHMoKS5zdGFuZGFyZERlcml2YXRpdmVzJiZCLkJ1bXBUZXh0dXJlRW5hYmxlZCYmYS5zZXRUZXh0dXJlKCJidW1wU2FtcGxlciIsdGhpcy5fYnVtcFRleHR1cmUpLHRoaXMuX3JlZnJhY3Rpb25UZXh0dXJlJiZCLlJlZnJhY3Rpb25UZXh0dXJlRW5hYmxlZCYmKHRoaXMuX3JlZnJhY3Rpb25UZXh0dXJlLmlzQ3ViZT9hLnNldFRleHR1cmUoInJlZnJhY3Rpb25DdWJlU2FtcGxlciIsdGhpcy5fcmVmcmFjdGlvblRleHR1cmUpOmEuc2V0VGV4dHVyZSgicmVmcmFjdGlvbjJEU2FtcGxlciIsdGhpcy5fcmVmcmFjdGlvblRleHR1cmUpKSksdGhpcy5nZXRTY2VuZSgpLnVzZU9yZGVySW5kZXBlbmRlbnRUcmFuc3BhcmVuY3kmJnRoaXMubmVlZEFscGhhQmxlbmRpbmdGb3JNZXNoKHQpJiZ0aGlzLmdldFNjZW5lKCkuZGVwdGhQZWVsaW5nUmVuZGVyZXIuYmluZChhKSx0aGlzLl9ldmVudEluZm8uc3ViTWVzaD1pLHRoaXMuX2NhbGxiYWNrUGx1Z2luRXZlbnRCaW5kRm9yU3ViTWVzaCh0aGlzLl9ldmVudEluZm8pLHJzKGEsdGhpcyxyKSx0aGlzLmJpbmRFeWVQb3NpdGlvbihhKX1lbHNlIHIuZ2V0RW5naW5lKCkuX2ZlYXR1cmVzLm5lZWRUb0Fsd2F5c0JpbmRVbmlmb3JtQnVmZmVycyYmKHRoaXMuX25lZWRUb0JpbmRTY2VuZVVibz0hMCk7KG98fCF0aGlzLmlzRnJvemVuKSYmKHIubGlnaHRzRW5hYmxlZCYmIXRoaXMuX2Rpc2FibGVMaWdodGluZyYmaWUuQmluZExpZ2h0cyhyLHQsYSxuLHRoaXMuX21heFNpbXVsdGFuZW91c0xpZ2h0cyksKHIuZm9nRW5hYmxlZCYmdC5hcHBseUZvZyYmci5mb2dNb2RlIT09bmUuRk9HTU9ERV9OT05FfHx0aGlzLl9yZWZsZWN0aW9uVGV4dHVyZXx8dGhpcy5fcmVmcmFjdGlvblRleHR1cmV8fHQucmVjZWl2ZVNoYWRvd3N8fG4uUFJFUEFTUykmJnRoaXMuYmluZFZpZXcoYSksaWUuQmluZEZvZ1BhcmFtZXRlcnMocix0LGEpLG4uTlVNX01PUlBIX0lORkxVRU5DRVJTJiZpZS5CaW5kTW9ycGhUYXJnZXRQYXJhbWV0ZXJzKHQsYSksbi5CQUtFRF9WRVJURVhfQU5JTUFUSU9OX1RFWFRVUkUmJigocz10LmJha2VkVmVydGV4QW5pbWF0aW9uTWFuYWdlcik9PT1udWxsfHxzPT09dm9pZCAwfHxzLmJpbmQoYSxuLklOU1RBTkNFUykpLHRoaXMudXNlTG9nYXJpdGhtaWNEZXB0aCYmaWUuQmluZExvZ0RlcHRoKG4sYSxyKSx0aGlzLl9pbWFnZVByb2Nlc3NpbmdDb25maWd1cmF0aW9uJiYhdGhpcy5faW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbi5hcHBseUJ5UG9zdFByb2Nlc3MmJnRoaXMuX2ltYWdlUHJvY2Vzc2luZ0NvbmZpZ3VyYXRpb24uYmluZCh0aGlzLl9hY3RpdmVFZmZlY3QpKSx0aGlzLl9hZnRlckJpbmQodCx0aGlzLl9hY3RpdmVFZmZlY3QpLGgudXBkYXRlKCl9Z2V0QW5pbWF0YWJsZXMoKXtjb25zdCBlPXN1cGVyLmdldEFuaW1hdGFibGVzKCk7cmV0dXJuIHRoaXMuX2RpZmZ1c2VUZXh0dXJlJiZ0aGlzLl9kaWZmdXNlVGV4dHVyZS5hbmltYXRpb25zJiZ0aGlzLl9kaWZmdXNlVGV4dHVyZS5hbmltYXRpb25zLmxlbmd0aD4wJiZlLnB1c2godGhpcy5fZGlmZnVzZVRleHR1cmUpLHRoaXMuX2FtYmllbnRUZXh0dXJlJiZ0aGlzLl9hbWJpZW50VGV4dHVyZS5hbmltYXRpb25zJiZ0aGlzLl9hbWJpZW50VGV4dHVyZS5hbmltYXRpb25zLmxlbmd0aD4wJiZlLnB1c2godGhpcy5fYW1iaWVudFRleHR1cmUpLHRoaXMuX29wYWNpdHlUZXh0dXJlJiZ0aGlzLl9vcGFjaXR5VGV4dHVyZS5hbmltYXRpb25zJiZ0aGlzLl9vcGFjaXR5VGV4dHVyZS5hbmltYXRpb25zLmxlbmd0aD4wJiZlLnB1c2godGhpcy5fb3BhY2l0eVRleHR1cmUpLHRoaXMuX3JlZmxlY3Rpb25UZXh0dXJlJiZ0aGlzLl9yZWZsZWN0aW9uVGV4dHVyZS5hbmltYXRpb25zJiZ0aGlzLl9yZWZsZWN0aW9uVGV4dHVyZS5hbmltYXRpb25zLmxlbmd0aD4wJiZlLnB1c2godGhpcy5fcmVmbGVjdGlvblRleHR1cmUpLHRoaXMuX2VtaXNzaXZlVGV4dHVyZSYmdGhpcy5fZW1pc3NpdmVUZXh0dXJlLmFuaW1hdGlvbnMmJnRoaXMuX2VtaXNzaXZlVGV4dHVyZS5hbmltYXRpb25zLmxlbmd0aD4wJiZlLnB1c2godGhpcy5fZW1pc3NpdmVUZXh0dXJlKSx0aGlzLl9zcGVjdWxhclRleHR1cmUmJnRoaXMuX3NwZWN1bGFyVGV4dHVyZS5hbmltYXRpb25zJiZ0aGlzLl9zcGVjdWxhclRleHR1cmUuYW5pbWF0aW9ucy5sZW5ndGg+MCYmZS5wdXNoKHRoaXMuX3NwZWN1bGFyVGV4dHVyZSksdGhpcy5fYnVtcFRleHR1cmUmJnRoaXMuX2J1bXBUZXh0dXJlLmFuaW1hdGlvbnMmJnRoaXMuX2J1bXBUZXh0dXJlLmFuaW1hdGlvbnMubGVuZ3RoPjAmJmUucHVzaCh0aGlzLl9idW1wVGV4dHVyZSksdGhpcy5fbGlnaHRtYXBUZXh0dXJlJiZ0aGlzLl9saWdodG1hcFRleHR1cmUuYW5pbWF0aW9ucyYmdGhpcy5fbGlnaHRtYXBUZXh0dXJlLmFuaW1hdGlvbnMubGVuZ3RoPjAmJmUucHVzaCh0aGlzLl9saWdodG1hcFRleHR1cmUpLHRoaXMuX3JlZnJhY3Rpb25UZXh0dXJlJiZ0aGlzLl9yZWZyYWN0aW9uVGV4dHVyZS5hbmltYXRpb25zJiZ0aGlzLl9yZWZyYWN0aW9uVGV4dHVyZS5hbmltYXRpb25zLmxlbmd0aD4wJiZlLnB1c2godGhpcy5fcmVmcmFjdGlvblRleHR1cmUpLGV9Z2V0QWN0aXZlVGV4dHVyZXMoKXtjb25zdCBlPXN1cGVyLmdldEFjdGl2ZVRleHR1cmVzKCk7cmV0dXJuIHRoaXMuX2RpZmZ1c2VUZXh0dXJlJiZlLnB1c2godGhpcy5fZGlmZnVzZVRleHR1cmUpLHRoaXMuX2FtYmllbnRUZXh0dXJlJiZlLnB1c2godGhpcy5fYW1iaWVudFRleHR1cmUpLHRoaXMuX29wYWNpdHlUZXh0dXJlJiZlLnB1c2godGhpcy5fb3BhY2l0eVRleHR1cmUpLHRoaXMuX3JlZmxlY3Rpb25UZXh0dXJlJiZlLnB1c2godGhpcy5fcmVmbGVjdGlvblRleHR1cmUpLHRoaXMuX2VtaXNzaXZlVGV4dHVyZSYmZS5wdXNoKHRoaXMuX2VtaXNzaXZlVGV4dHVyZSksdGhpcy5fc3BlY3VsYXJUZXh0dXJlJiZlLnB1c2godGhpcy5fc3BlY3VsYXJUZXh0dXJlKSx0aGlzLl9idW1wVGV4dHVyZSYmZS5wdXNoKHRoaXMuX2J1bXBUZXh0dXJlKSx0aGlzLl9saWdodG1hcFRleHR1cmUmJmUucHVzaCh0aGlzLl9saWdodG1hcFRleHR1cmUpLHRoaXMuX3JlZnJhY3Rpb25UZXh0dXJlJiZlLnB1c2godGhpcy5fcmVmcmFjdGlvblRleHR1cmUpLGV9aGFzVGV4dHVyZShlKXtyZXR1cm4hIShzdXBlci5oYXNUZXh0dXJlKGUpfHx0aGlzLl9kaWZmdXNlVGV4dHVyZT09PWV8fHRoaXMuX2FtYmllbnRUZXh0dXJlPT09ZXx8dGhpcy5fb3BhY2l0eVRleHR1cmU9PT1lfHx0aGlzLl9yZWZsZWN0aW9uVGV4dHVyZT09PWV8fHRoaXMuX2VtaXNzaXZlVGV4dHVyZT09PWV8fHRoaXMuX3NwZWN1bGFyVGV4dHVyZT09PWV8fHRoaXMuX2J1bXBUZXh0dXJlPT09ZXx8dGhpcy5fbGlnaHRtYXBUZXh0dXJlPT09ZXx8dGhpcy5fcmVmcmFjdGlvblRleHR1cmU9PT1lKX1kaXNwb3NlKGUsdCl7dmFyIGkscyxyLG4sYSxvLGgsbCx1O3QmJigoaT10aGlzLl9kaWZmdXNlVGV4dHVyZSk9PT1udWxsfHxpPT09dm9pZCAwfHxpLmRpc3Bvc2UoKSwocz10aGlzLl9hbWJpZW50VGV4dHVyZSk9PT1udWxsfHxzPT09dm9pZCAwfHxzLmRpc3Bvc2UoKSwocj10aGlzLl9vcGFjaXR5VGV4dHVyZSk9PT1udWxsfHxyPT09dm9pZCAwfHxyLmRpc3Bvc2UoKSwobj10aGlzLl9yZWZsZWN0aW9uVGV4dHVyZSk9PT1udWxsfHxuPT09dm9pZCAwfHxuLmRpc3Bvc2UoKSwoYT10aGlzLl9lbWlzc2l2ZVRleHR1cmUpPT09bnVsbHx8YT09PXZvaWQgMHx8YS5kaXNwb3NlKCksKG89dGhpcy5fc3BlY3VsYXJUZXh0dXJlKT09PW51bGx8fG89PT12b2lkIDB8fG8uZGlzcG9zZSgpLChoPXRoaXMuX2J1bXBUZXh0dXJlKT09PW51bGx8fGg9PT12b2lkIDB8fGguZGlzcG9zZSgpLChsPXRoaXMuX2xpZ2h0bWFwVGV4dHVyZSk9PT1udWxsfHxsPT09dm9pZCAwfHxsLmRpc3Bvc2UoKSwodT10aGlzLl9yZWZyYWN0aW9uVGV4dHVyZSk9PT1udWxsfHx1PT09dm9pZCAwfHx1LmRpc3Bvc2UoKSksdGhpcy5faW1hZ2VQcm9jZXNzaW5nQ29uZmlndXJhdGlvbiYmdGhpcy5faW1hZ2VQcm9jZXNzaW5nT2JzZXJ2ZXImJnRoaXMuX2ltYWdlUHJvY2Vzc2luZ0NvbmZpZ3VyYXRpb24ub25VcGRhdGVQYXJhbWV0ZXJzLnJlbW92ZSh0aGlzLl9pbWFnZVByb2Nlc3NpbmdPYnNlcnZlciksc3VwZXIuZGlzcG9zZShlLHQpfWNsb25lKGUpe2NvbnN0IHQ9YWUuQ2xvbmUoKCk9Pm5ldyBCKGUsdGhpcy5nZXRTY2VuZSgpKSx0aGlzKTtyZXR1cm4gdC5uYW1lPWUsdC5pZD1lLHRoaXMuc3RlbmNpbC5jb3B5VG8odC5zdGVuY2lsKSx0fXN0YXRpYyBQYXJzZShlLHQsaSl7Y29uc3Qgcz1hZS5QYXJzZSgoKT0+bmV3IEIoZS5uYW1lLHQpLGUsdCxpKTtyZXR1cm4gZS5zdGVuY2lsJiZzLnN0ZW5jaWwucGFyc2UoZS5zdGVuY2lsLHQsaSksc31zdGF0aWMgZ2V0IERpZmZ1c2VUZXh0dXJlRW5hYmxlZCgpe3JldHVybiB1ZS5EaWZmdXNlVGV4dHVyZUVuYWJsZWR9c3RhdGljIHNldCBEaWZmdXNlVGV4dHVyZUVuYWJsZWQoZSl7dWUuRGlmZnVzZVRleHR1cmVFbmFibGVkPWV9c3RhdGljIGdldCBEZXRhaWxUZXh0dXJlRW5hYmxlZCgpe3JldHVybiB1ZS5EZXRhaWxUZXh0dXJlRW5hYmxlZH1zdGF0aWMgc2V0IERldGFpbFRleHR1cmVFbmFibGVkKGUpe3VlLkRldGFpbFRleHR1cmVFbmFibGVkPWV9c3RhdGljIGdldCBBbWJpZW50VGV4dHVyZUVuYWJsZWQoKXtyZXR1cm4gdWUuQW1iaWVudFRleHR1cmVFbmFibGVkfXN0YXRpYyBzZXQgQW1iaWVudFRleHR1cmVFbmFibGVkKGUpe3VlLkFtYmllbnRUZXh0dXJlRW5hYmxlZD1lfXN0YXRpYyBnZXQgT3BhY2l0eVRleHR1cmVFbmFibGVkKCl7cmV0dXJuIHVlLk9wYWNpdHlUZXh0dXJlRW5hYmxlZH1zdGF0aWMgc2V0IE9wYWNpdHlUZXh0dXJlRW5hYmxlZChlKXt1ZS5PcGFjaXR5VGV4dHVyZUVuYWJsZWQ9ZX1zdGF0aWMgZ2V0IFJlZmxlY3Rpb25UZXh0dXJlRW5hYmxlZCgpe3JldHVybiB1ZS5SZWZsZWN0aW9uVGV4dHVyZUVuYWJsZWR9c3RhdGljIHNldCBSZWZsZWN0aW9uVGV4dHVyZUVuYWJsZWQoZSl7dWUuUmVmbGVjdGlvblRleHR1cmVFbmFibGVkPWV9c3RhdGljIGdldCBFbWlzc2l2ZVRleHR1cmVFbmFibGVkKCl7cmV0dXJuIHVlLkVtaXNzaXZlVGV4dHVyZUVuYWJsZWR9c3RhdGljIHNldCBFbWlzc2l2ZVRleHR1cmVFbmFibGVkKGUpe3VlLkVtaXNzaXZlVGV4dHVyZUVuYWJsZWQ9ZX1zdGF0aWMgZ2V0IFNwZWN1bGFyVGV4dHVyZUVuYWJsZWQoKXtyZXR1cm4gdWUuU3BlY3VsYXJUZXh0dXJlRW5hYmxlZH1zdGF0aWMgc2V0IFNwZWN1bGFyVGV4dHVyZUVuYWJsZWQoZSl7dWUuU3BlY3VsYXJUZXh0dXJlRW5hYmxlZD1lfXN0YXRpYyBnZXQgQnVtcFRleHR1cmVFbmFibGVkKCl7cmV0dXJuIHVlLkJ1bXBUZXh0dXJlRW5hYmxlZH1zdGF0aWMgc2V0IEJ1bXBUZXh0dXJlRW5hYmxlZChlKXt1ZS5CdW1wVGV4dHVyZUVuYWJsZWQ9ZX1zdGF0aWMgZ2V0IExpZ2h0bWFwVGV4dHVyZUVuYWJsZWQoKXtyZXR1cm4gdWUuTGlnaHRtYXBUZXh0dXJlRW5hYmxlZH1zdGF0aWMgc2V0IExpZ2h0bWFwVGV4dHVyZUVuYWJsZWQoZSl7dWUuTGlnaHRtYXBUZXh0dXJlRW5hYmxlZD1lfXN0YXRpYyBnZXQgUmVmcmFjdGlvblRleHR1cmVFbmFibGVkKCl7cmV0dXJuIHVlLlJlZnJhY3Rpb25UZXh0dXJlRW5hYmxlZH1zdGF0aWMgc2V0IFJlZnJhY3Rpb25UZXh0dXJlRW5hYmxlZChlKXt1ZS5SZWZyYWN0aW9uVGV4dHVyZUVuYWJsZWQ9ZX1zdGF0aWMgZ2V0IENvbG9yR3JhZGluZ1RleHR1cmVFbmFibGVkKCl7cmV0dXJuIHVlLkNvbG9yR3JhZGluZ1RleHR1cmVFbmFibGVkfXN0YXRpYyBzZXQgQ29sb3JHcmFkaW5nVGV4dHVyZUVuYWJsZWQoZSl7dWUuQ29sb3JHcmFkaW5nVGV4dHVyZUVuYWJsZWQ9ZX1zdGF0aWMgZ2V0IEZyZXNuZWxFbmFibGVkKCl7cmV0dXJuIHVlLkZyZXNuZWxFbmFibGVkfXN0YXRpYyBzZXQgRnJlc25lbEVuYWJsZWQoZSl7dWUuRnJlc25lbEVuYWJsZWQ9ZX19VChbbXQoImRpZmZ1c2VUZXh0dXJlIildLEIucHJvdG90eXBlLCJfZGlmZnVzZVRleHR1cmUiLHZvaWQgMCksVChbYmUoIl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0FuZE1pc2NEaXJ0eSIpXSxCLnByb3RvdHlwZSwiZGlmZnVzZVRleHR1cmUiLHZvaWQgMCksVChbbXQoImFtYmllbnRUZXh0dXJlIildLEIucHJvdG90eXBlLCJfYW1iaWVudFRleHR1cmUiLHZvaWQgMCksVChbYmUoIl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0RpcnR5IildLEIucHJvdG90eXBlLCJhbWJpZW50VGV4dHVyZSIsdm9pZCAwKSxUKFttdCgib3BhY2l0eVRleHR1cmUiKV0sQi5wcm90b3R5cGUsIl9vcGFjaXR5VGV4dHVyZSIsdm9pZCAwKSxUKFtiZSgiX21hcmtBbGxTdWJNZXNoZXNBc1RleHR1cmVzQW5kTWlzY0RpcnR5IildLEIucHJvdG90eXBlLCJvcGFjaXR5VGV4dHVyZSIsdm9pZCAwKSxUKFttdCgicmVmbGVjdGlvblRleHR1cmUiKV0sQi5wcm90b3R5cGUsIl9yZWZsZWN0aW9uVGV4dHVyZSIsdm9pZCAwKSxUKFtiZSgiX21hcmtBbGxTdWJNZXNoZXNBc1RleHR1cmVzRGlydHkiKV0sQi5wcm90b3R5cGUsInJlZmxlY3Rpb25UZXh0dXJlIix2b2lkIDApLFQoW210KCJlbWlzc2l2ZVRleHR1cmUiKV0sQi5wcm90b3R5cGUsIl9lbWlzc2l2ZVRleHR1cmUiLHZvaWQgMCksVChbYmUoIl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0RpcnR5IildLEIucHJvdG90eXBlLCJlbWlzc2l2ZVRleHR1cmUiLHZvaWQgMCksVChbbXQoInNwZWN1bGFyVGV4dHVyZSIpXSxCLnByb3RvdHlwZSwiX3NwZWN1bGFyVGV4dHVyZSIsdm9pZCAwKSxUKFtiZSgiX21hcmtBbGxTdWJNZXNoZXNBc1RleHR1cmVzRGlydHkiKV0sQi5wcm90b3R5cGUsInNwZWN1bGFyVGV4dHVyZSIsdm9pZCAwKSxUKFttdCgiYnVtcFRleHR1cmUiKV0sQi5wcm90b3R5cGUsIl9idW1wVGV4dHVyZSIsdm9pZCAwKSxUKFtiZSgiX21hcmtBbGxTdWJNZXNoZXNBc1RleHR1cmVzRGlydHkiKV0sQi5wcm90b3R5cGUsImJ1bXBUZXh0dXJlIix2b2lkIDApLFQoW210KCJsaWdodG1hcFRleHR1cmUiKV0sQi5wcm90b3R5cGUsIl9saWdodG1hcFRleHR1cmUiLHZvaWQgMCksVChbYmUoIl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0RpcnR5IildLEIucHJvdG90eXBlLCJsaWdodG1hcFRleHR1cmUiLHZvaWQgMCksVChbbXQoInJlZnJhY3Rpb25UZXh0dXJlIildLEIucHJvdG90eXBlLCJfcmVmcmFjdGlvblRleHR1cmUiLHZvaWQgMCksVChbYmUoIl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0RpcnR5IildLEIucHJvdG90eXBlLCJyZWZyYWN0aW9uVGV4dHVyZSIsdm9pZCAwKSxUKFtjaSgiYW1iaWVudCIpXSxCLnByb3RvdHlwZSwiYW1iaWVudENvbG9yIix2b2lkIDApLFQoW2NpKCJkaWZmdXNlIildLEIucHJvdG90eXBlLCJkaWZmdXNlQ29sb3IiLHZvaWQgMCksVChbY2koInNwZWN1bGFyIildLEIucHJvdG90eXBlLCJzcGVjdWxhckNvbG9yIix2b2lkIDApLFQoW2NpKCJlbWlzc2l2ZSIpXSxCLnByb3RvdHlwZSwiZW1pc3NpdmVDb2xvciIsdm9pZCAwKSxUKFtSKCldLEIucHJvdG90eXBlLCJzcGVjdWxhclBvd2VyIix2b2lkIDApLFQoW1IoInVzZUFscGhhRnJvbURpZmZ1c2VUZXh0dXJlIildLEIucHJvdG90eXBlLCJfdXNlQWxwaGFGcm9tRGlmZnVzZVRleHR1cmUiLHZvaWQgMCksVChbYmUoIl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0FuZE1pc2NEaXJ0eSIpXSxCLnByb3RvdHlwZSwidXNlQWxwaGFGcm9tRGlmZnVzZVRleHR1cmUiLHZvaWQgMCksVChbUigidXNlRW1pc3NpdmVBc0lsbHVtaW5hdGlvbiIpXSxCLnByb3RvdHlwZSwiX3VzZUVtaXNzaXZlQXNJbGx1bWluYXRpb24iLHZvaWQgMCksVChbYmUoIl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0RpcnR5IildLEIucHJvdG90eXBlLCJ1c2VFbWlzc2l2ZUFzSWxsdW1pbmF0aW9uIix2b2lkIDApLFQoW1IoImxpbmtFbWlzc2l2ZVdpdGhEaWZmdXNlIildLEIucHJvdG90eXBlLCJfbGlua0VtaXNzaXZlV2l0aERpZmZ1c2UiLHZvaWQgMCksVChbYmUoIl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0RpcnR5IildLEIucHJvdG90eXBlLCJsaW5rRW1pc3NpdmVXaXRoRGlmZnVzZSIsdm9pZCAwKSxUKFtSKCJ1c2VTcGVjdWxhck92ZXJBbHBoYSIpXSxCLnByb3RvdHlwZSwiX3VzZVNwZWN1bGFyT3ZlckFscGhhIix2b2lkIDApLFQoW2JlKCJfbWFya0FsbFN1Yk1lc2hlc0FzVGV4dHVyZXNEaXJ0eSIpXSxCLnByb3RvdHlwZSwidXNlU3BlY3VsYXJPdmVyQWxwaGEiLHZvaWQgMCksVChbUigidXNlUmVmbGVjdGlvbk92ZXJBbHBoYSIpXSxCLnByb3RvdHlwZSwiX3VzZVJlZmxlY3Rpb25PdmVyQWxwaGEiLHZvaWQgMCksVChbYmUoIl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0RpcnR5IildLEIucHJvdG90eXBlLCJ1c2VSZWZsZWN0aW9uT3ZlckFscGhhIix2b2lkIDApLFQoW1IoImRpc2FibGVMaWdodGluZyIpXSxCLnByb3RvdHlwZSwiX2Rpc2FibGVMaWdodGluZyIsdm9pZCAwKSxUKFtiZSgiX21hcmtBbGxTdWJNZXNoZXNBc0xpZ2h0c0RpcnR5IildLEIucHJvdG90eXBlLCJkaXNhYmxlTGlnaHRpbmciLHZvaWQgMCksVChbUigidXNlT2JqZWN0U3BhY2VOb3JtYWxNYXAiKV0sQi5wcm90b3R5cGUsIl91c2VPYmplY3RTcGFjZU5vcm1hbE1hcCIsdm9pZCAwKSxUKFtiZSgiX21hcmtBbGxTdWJNZXNoZXNBc1RleHR1cmVzRGlydHkiKV0sQi5wcm90b3R5cGUsInVzZU9iamVjdFNwYWNlTm9ybWFsTWFwIix2b2lkIDApLFQoW1IoInVzZVBhcmFsbGF4IildLEIucHJvdG90eXBlLCJfdXNlUGFyYWxsYXgiLHZvaWQgMCksVChbYmUoIl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0RpcnR5IildLEIucHJvdG90eXBlLCJ1c2VQYXJhbGxheCIsdm9pZCAwKSxUKFtSKCJ1c2VQYXJhbGxheE9jY2x1c2lvbiIpXSxCLnByb3RvdHlwZSwiX3VzZVBhcmFsbGF4T2NjbHVzaW9uIix2b2lkIDApLFQoW2JlKCJfbWFya0FsbFN1Yk1lc2hlc0FzVGV4dHVyZXNEaXJ0eSIpXSxCLnByb3RvdHlwZSwidXNlUGFyYWxsYXhPY2NsdXNpb24iLHZvaWQgMCksVChbUigpXSxCLnByb3RvdHlwZSwicGFyYWxsYXhTY2FsZUJpYXMiLHZvaWQgMCksVChbUigicm91Z2huZXNzIildLEIucHJvdG90eXBlLCJfcm91Z2huZXNzIix2b2lkIDApLFQoW2JlKCJfbWFya0FsbFN1Yk1lc2hlc0FzVGV4dHVyZXNEaXJ0eSIpXSxCLnByb3RvdHlwZSwicm91Z2huZXNzIix2b2lkIDApLFQoW1IoKV0sQi5wcm90b3R5cGUsImluZGV4T2ZSZWZyYWN0aW9uIix2b2lkIDApLFQoW1IoKV0sQi5wcm90b3R5cGUsImludmVydFJlZnJhY3Rpb25ZIix2b2lkIDApLFQoW1IoKV0sQi5wcm90b3R5cGUsImFscGhhQ3V0T2ZmIix2b2lkIDApLFQoW1IoInVzZUxpZ2h0bWFwQXNTaGFkb3dtYXAiKV0sQi5wcm90b3R5cGUsIl91c2VMaWdodG1hcEFzU2hhZG93bWFwIix2b2lkIDApLFQoW2JlKCJfbWFya0FsbFN1Yk1lc2hlc0FzVGV4dHVyZXNEaXJ0eSIpXSxCLnByb3RvdHlwZSwidXNlTGlnaHRtYXBBc1NoYWRvd21hcCIsdm9pZCAwKSxUKFtOaSgiZGlmZnVzZUZyZXNuZWxQYXJhbWV0ZXJzIildLEIucHJvdG90eXBlLCJfZGlmZnVzZUZyZXNuZWxQYXJhbWV0ZXJzIix2b2lkIDApLFQoW2JlKCJfbWFya0FsbFN1Yk1lc2hlc0FzRnJlc25lbERpcnR5IildLEIucHJvdG90eXBlLCJkaWZmdXNlRnJlc25lbFBhcmFtZXRlcnMiLHZvaWQgMCksVChbTmkoIm9wYWNpdHlGcmVzbmVsUGFyYW1ldGVycyIpXSxCLnByb3RvdHlwZSwiX29wYWNpdHlGcmVzbmVsUGFyYW1ldGVycyIsdm9pZCAwKSxUKFtiZSgiX21hcmtBbGxTdWJNZXNoZXNBc0ZyZXNuZWxBbmRNaXNjRGlydHkiKV0sQi5wcm90b3R5cGUsIm9wYWNpdHlGcmVzbmVsUGFyYW1ldGVycyIsdm9pZCAwKSxUKFtOaSgicmVmbGVjdGlvbkZyZXNuZWxQYXJhbWV0ZXJzIildLEIucHJvdG90eXBlLCJfcmVmbGVjdGlvbkZyZXNuZWxQYXJhbWV0ZXJzIix2b2lkIDApLFQoW2JlKCJfbWFya0FsbFN1Yk1lc2hlc0FzRnJlc25lbERpcnR5IildLEIucHJvdG90eXBlLCJyZWZsZWN0aW9uRnJlc25lbFBhcmFtZXRlcnMiLHZvaWQgMCksVChbTmkoInJlZnJhY3Rpb25GcmVzbmVsUGFyYW1ldGVycyIpXSxCLnByb3RvdHlwZSwiX3JlZnJhY3Rpb25GcmVzbmVsUGFyYW1ldGVycyIsdm9pZCAwKSxUKFtiZSgiX21hcmtBbGxTdWJNZXNoZXNBc0ZyZXNuZWxEaXJ0eSIpXSxCLnByb3RvdHlwZSwicmVmcmFjdGlvbkZyZXNuZWxQYXJhbWV0ZXJzIix2b2lkIDApLFQoW05pKCJlbWlzc2l2ZUZyZXNuZWxQYXJhbWV0ZXJzIildLEIucHJvdG90eXBlLCJfZW1pc3NpdmVGcmVzbmVsUGFyYW1ldGVycyIsdm9pZCAwKSxUKFtiZSgiX21hcmtBbGxTdWJNZXNoZXNBc0ZyZXNuZWxEaXJ0eSIpXSxCLnByb3RvdHlwZSwiZW1pc3NpdmVGcmVzbmVsUGFyYW1ldGVycyIsdm9pZCAwKSxUKFtSKCJ1c2VSZWZsZWN0aW9uRnJlc25lbEZyb21TcGVjdWxhciIpXSxCLnByb3RvdHlwZSwiX3VzZVJlZmxlY3Rpb25GcmVzbmVsRnJvbVNwZWN1bGFyIix2b2lkIDApLFQoW2JlKCJfbWFya0FsbFN1Yk1lc2hlc0FzRnJlc25lbERpcnR5IildLEIucHJvdG90eXBlLCJ1c2VSZWZsZWN0aW9uRnJlc25lbEZyb21TcGVjdWxhciIsdm9pZCAwKSxUKFtSKCJ1c2VHbG9zc2luZXNzRnJvbVNwZWN1bGFyTWFwQWxwaGEiKV0sQi5wcm90b3R5cGUsIl91c2VHbG9zc2luZXNzRnJvbVNwZWN1bGFyTWFwQWxwaGEiLHZvaWQgMCksVChbYmUoIl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0RpcnR5IildLEIucHJvdG90eXBlLCJ1c2VHbG9zc2luZXNzRnJvbVNwZWN1bGFyTWFwQWxwaGEiLHZvaWQgMCksVChbUigibWF4U2ltdWx0YW5lb3VzTGlnaHRzIildLEIucHJvdG90eXBlLCJfbWF4U2ltdWx0YW5lb3VzTGlnaHRzIix2b2lkIDApLFQoW2JlKCJfbWFya0FsbFN1Yk1lc2hlc0FzTGlnaHRzRGlydHkiKV0sQi5wcm90b3R5cGUsIm1heFNpbXVsdGFuZW91c0xpZ2h0cyIsdm9pZCAwKSxUKFtSKCJpbnZlcnROb3JtYWxNYXBYIildLEIucHJvdG90eXBlLCJfaW52ZXJ0Tm9ybWFsTWFwWCIsdm9pZCAwKSxUKFtiZSgiX21hcmtBbGxTdWJNZXNoZXNBc1RleHR1cmVzRGlydHkiKV0sQi5wcm90b3R5cGUsImludmVydE5vcm1hbE1hcFgiLHZvaWQgMCksVChbUigiaW52ZXJ0Tm9ybWFsTWFwWSIpXSxCLnByb3RvdHlwZSwiX2ludmVydE5vcm1hbE1hcFkiLHZvaWQgMCksVChbYmUoIl9tYXJrQWxsU3ViTWVzaGVzQXNUZXh0dXJlc0RpcnR5IildLEIucHJvdG90eXBlLCJpbnZlcnROb3JtYWxNYXBZIix2b2lkIDApLFQoW1IoInR3b1NpZGVkTGlnaHRpbmciKV0sQi5wcm90b3R5cGUsIl90d29TaWRlZExpZ2h0aW5nIix2b2lkIDApLFQoW2JlKCJfbWFya0FsbFN1Yk1lc2hlc0FzVGV4dHVyZXNEaXJ0eSIpXSxCLnByb3RvdHlwZSwidHdvU2lkZWRMaWdodGluZyIsdm9pZCAwKSxUKFtSKCldLEIucHJvdG90eXBlLCJ1c2VMb2dhcml0aG1pY0RlcHRoIixudWxsKSxpdCgiQkFCWUxPTi5TdGFuZGFyZE1hdGVyaWFsIixCKSxuZS5EZWZhdWx0TWF0ZXJpYWxGYWN0b3J5PWM9Pm5ldyBCKCJkZWZhdWx0IG1hdGVyaWFsIixjKTtjb25zdCBFbD0iaW1hZ2VQcm9jZXNzaW5nQ29tcGF0aWJpbGl0eSIsdmw9YCNpZmRlZiBJTUFHRVBST0NFU1NJTkdQT1NUUFJPQ0VTUwpnbF9GcmFnQ29sb3IucmdiPXBvdyhnbF9GcmFnQ29sb3IucmdiLHZlYzMoMi4yKSk7CiNlbmRpZgpgO1UuSW5jbHVkZXNTaGFkZXJzU3RvcmVbRWxdPXZsO2NvbnN0IFRsPSJzaGFkb3dPbmx5UGl4ZWxTaGFkZXIiLGJsPWBwcmVjaXNpb24gaGlnaHAgZmxvYXQ7CnVuaWZvcm0gdmVjNCB2RXllUG9zaXRpb247CnVuaWZvcm0gZmxvYXQgYWxwaGE7CnVuaWZvcm0gdmVjMyBzaGFkb3dDb2xvcjsKdmFyeWluZyB2ZWMzIHZQb3NpdGlvblc7CiNpZmRlZiBOT1JNQUwKdmFyeWluZyB2ZWMzIHZOb3JtYWxXOwojZW5kaWYKI2luY2x1ZGU8aGVscGVyRnVuY3Rpb25zPgojaW5jbHVkZTxfX2RlY2xfX2xpZ2h0RnJhZ21lbnQ+WzAuLm1heFNpbXVsdGFuZW91c0xpZ2h0c10KI2luY2x1ZGU8bGlnaHRzRnJhZ21lbnRGdW5jdGlvbnM+CiNpbmNsdWRlPHNoYWRvd3NGcmFnbWVudEZ1bmN0aW9ucz4KI2luY2x1ZGU8Y2xpcFBsYW5lRnJhZ21lbnREZWNsYXJhdGlvbj4KI2luY2x1ZGU8Zm9nRnJhZ21lbnREZWNsYXJhdGlvbj4KI2RlZmluZSBDVVNUT01fRlJBR01FTlRfREVGSU5JVElPTlMKdm9pZCBtYWluKHZvaWQpIHsKI2RlZmluZSBDVVNUT01fRlJBR01FTlRfTUFJTl9CRUdJTgojaW5jbHVkZTxjbGlwUGxhbmVGcmFnbWVudD4KdmVjMyB2aWV3RGlyZWN0aW9uVz1ub3JtYWxpemUodkV5ZVBvc2l0aW9uLnh5ei12UG9zaXRpb25XKTsKI2lmZGVmIE5PUk1BTAp2ZWMzIG5vcm1hbFc9bm9ybWFsaXplKHZOb3JtYWxXKTsKI2Vsc2UKdmVjMyBub3JtYWxXPXZlYzMoMS4wLDEuMCwxLjApOwojZW5kaWYKdmVjMyBkaWZmdXNlQmFzZT12ZWMzKDAuLDAuLDAuKTsKbGlnaHRpbmdJbmZvIGluZm87CmZsb2F0IHNoYWRvdz0xLjsKZmxvYXQgZ2xvc3NpbmVzcz0wLjsKI2luY2x1ZGU8bGlnaHRGcmFnbWVudD5bMC4uMV0KdmVjNCBjb2xvcj12ZWM0KHNoYWRvd0NvbG9yLCgxLjAtY2xhbXAoc2hhZG93LDAuLDEuKSkqYWxwaGEpOwojaW5jbHVkZTxmb2dGcmFnbWVudD4KZ2xfRnJhZ0NvbG9yPWNvbG9yOwojaW5jbHVkZTxpbWFnZVByb2Nlc3NpbmdDb21wYXRpYmlsaXR5PgojZGVmaW5lIENVU1RPTV9GUkFHTUVOVF9NQUlOX0VORAp9YDtVLlNoYWRlcnNTdG9yZVtUbF09Ymw7Y29uc3QgU2w9InNoYWRvd09ubHlWZXJ0ZXhTaGFkZXIiLHhsPWBwcmVjaXNpb24gaGlnaHAgZmxvYXQ7CmF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uOwojaWZkZWYgTk9STUFMCmF0dHJpYnV0ZSB2ZWMzIG5vcm1hbDsKI2VuZGlmCiNpbmNsdWRlPGJvbmVzRGVjbGFyYXRpb24+CiNpbmNsdWRlPGJha2VkVmVydGV4QW5pbWF0aW9uRGVjbGFyYXRpb24+CiNpbmNsdWRlPGluc3RhbmNlc0RlY2xhcmF0aW9uPgp1bmlmb3JtIG1hdDQgdmlldzsKdW5pZm9ybSBtYXQ0IHZpZXdQcm9qZWN0aW9uOwojaWZkZWYgUE9JTlRTSVpFCnVuaWZvcm0gZmxvYXQgcG9pbnRTaXplOwojZW5kaWYKdmFyeWluZyB2ZWMzIHZQb3NpdGlvblc7CiNpZmRlZiBOT1JNQUwKdmFyeWluZyB2ZWMzIHZOb3JtYWxXOwojZW5kaWYKI2lmZGVmIFZFUlRFWENPTE9SCnZhcnlpbmcgdmVjNCB2Q29sb3I7CiNlbmRpZgojaW5jbHVkZTxjbGlwUGxhbmVWZXJ0ZXhEZWNsYXJhdGlvbj4KI2luY2x1ZGU8Zm9nVmVydGV4RGVjbGFyYXRpb24+CiNpbmNsdWRlPF9fZGVjbF9fbGlnaHRGcmFnbWVudD5bMC4ubWF4U2ltdWx0YW5lb3VzTGlnaHRzXQojZGVmaW5lIENVU1RPTV9WRVJURVhfREVGSU5JVElPTlMKdm9pZCBtYWluKHZvaWQpIHsKI2RlZmluZSBDVVNUT01fVkVSVEVYX01BSU5fQkVHSU4KI2luY2x1ZGU8aW5zdGFuY2VzVmVydGV4PgojaW5jbHVkZTxib25lc1ZlcnRleD4KI2luY2x1ZGU8YmFrZWRWZXJ0ZXhBbmltYXRpb24+CnZlYzQgd29ybGRQb3M9ZmluYWxXb3JsZCp2ZWM0KHBvc2l0aW9uLDEuMCk7CmdsX1Bvc2l0aW9uPXZpZXdQcm9qZWN0aW9uKndvcmxkUG9zOwp2UG9zaXRpb25XPXZlYzMod29ybGRQb3MpOwojaWZkZWYgTk9STUFMCnZOb3JtYWxXPW5vcm1hbGl6ZSh2ZWMzKGZpbmFsV29ybGQqdmVjNChub3JtYWwsMC4wKSkpOwojZW5kaWYKI2luY2x1ZGU8Y2xpcFBsYW5lVmVydGV4PgojaW5jbHVkZTxmb2dWZXJ0ZXg+CiNpbmNsdWRlPHNoYWRvd3NWZXJ0ZXg+WzAuLm1heFNpbXVsdGFuZW91c0xpZ2h0c10KI2lmIGRlZmluZWQoUE9JTlRTSVpFKSAmJiAhZGVmaW5lZChXRUJHUFUpCmdsX1BvaW50U2l6ZT1wb2ludFNpemU7CiNlbmRpZgojZGVmaW5lIENVU1RPTV9WRVJURVhfTUFJTl9FTkQKfQpgO1UuU2hhZGVyc1N0b3JlW1NsXT14bDtjbGFzcyBNbCBleHRlbmRzIHlze2NvbnN0cnVjdG9yKCl7c3VwZXIoKSx0aGlzLkNMSVBQTEFORT0hMSx0aGlzLkNMSVBQTEFORTI9ITEsdGhpcy5DTElQUExBTkUzPSExLHRoaXMuQ0xJUFBMQU5FND0hMSx0aGlzLkNMSVBQTEFORTU9ITEsdGhpcy5DTElQUExBTkU2PSExLHRoaXMuUE9JTlRTSVpFPSExLHRoaXMuRk9HPSExLHRoaXMuTk9STUFMPSExLHRoaXMuTlVNX0JPTkVfSU5GTFVFTkNFUlM9MCx0aGlzLkJvbmVzUGVyTWVzaD0wLHRoaXMuSU5TVEFOQ0VTPSExLHRoaXMuSU1BR0VQUk9DRVNTSU5HUE9TVFBST0NFU1M9ITEsdGhpcy5TS0lQRklOQUxDT0xPUkNMQU1QPSExLHRoaXMucmVidWlsZCgpfX1jbGFzcyBraSBleHRlbmRzIFZye2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoZSx0KSx0aGlzLl9uZWVkQWxwaGFCbGVuZGluZz0hMCx0aGlzLnNoYWRvd0NvbG9yPXJlLkJsYWNrKCl9bmVlZEFscGhhQmxlbmRpbmcoKXtyZXR1cm4gdGhpcy5fbmVlZEFscGhhQmxlbmRpbmd9bmVlZEFscGhhVGVzdGluZygpe3JldHVybiExfWdldEFscGhhVGVzdFRleHR1cmUoKXtyZXR1cm4gbnVsbH1nZXQgYWN0aXZlTGlnaHQoKXtyZXR1cm4gdGhpcy5fYWN0aXZlTGlnaHR9c2V0IGFjdGl2ZUxpZ2h0KGUpe3RoaXMuX2FjdGl2ZUxpZ2h0PWV9X2dldEZpcnN0U2hhZG93TGlnaHRGb3JNZXNoKGUpe2Zvcihjb25zdCB0IG9mIGUubGlnaHRTb3VyY2VzKWlmKHQuc2hhZG93RW5hYmxlZClyZXR1cm4gdDtyZXR1cm4gbnVsbH1pc1JlYWR5Rm9yU3ViTWVzaChlLHQsaSl7dmFyIHM7aWYodGhpcy5pc0Zyb3plbiYmdC5lZmZlY3QmJnQuZWZmZWN0Ll93YXNQcmV2aW91c2x5UmVhZHkmJnQuZWZmZWN0Ll93YXNQcmV2aW91c2x5VXNpbmdJbnN0YW5jZXM9PT1pKXJldHVybiEwO3QubWF0ZXJpYWxEZWZpbmVzfHwodC5tYXRlcmlhbERlZmluZXM9bmV3IE1sKTtjb25zdCByPXQubWF0ZXJpYWxEZWZpbmVzLG49dGhpcy5nZXRTY2VuZSgpO2lmKHRoaXMuX2lzUmVhZHlGb3JTdWJNZXNoKHQpKXJldHVybiEwO2NvbnN0IGE9bi5nZXRFbmdpbmUoKTtpZih0aGlzLl9hY3RpdmVMaWdodCl7Zm9yKGNvbnN0IGggb2YgZS5saWdodFNvdXJjZXMpaWYoaC5zaGFkb3dFbmFibGVkKXtpZih0aGlzLl9hY3RpdmVMaWdodD09PWgpYnJlYWs7Y29uc3QgbD1lLmxpZ2h0U291cmNlcy5pbmRleE9mKHRoaXMuX2FjdGl2ZUxpZ2h0KTtsIT09LTEmJihlLmxpZ2h0U291cmNlcy5zcGxpY2UobCwxKSxlLmxpZ2h0U291cmNlcy5zcGxpY2UoMCwwLHRoaXMuX2FjdGl2ZUxpZ2h0KSk7YnJlYWt9fWllLlByZXBhcmVEZWZpbmVzRm9yRnJhbWVCb3VuZFZhbHVlcyhuLGEsdGhpcyxyLCEhaSksaWUuUHJlcGFyZURlZmluZXNGb3JNaXNjKGUsbiwhMSx0aGlzLnBvaW50c0Nsb3VkLHRoaXMuZm9nRW5hYmxlZCx0aGlzLl9zaG91bGRUdXJuQWxwaGFUZXN0T24oZSksciksci5fbmVlZE5vcm1hbHM9aWUuUHJlcGFyZURlZmluZXNGb3JMaWdodHMobixlLHIsITEsMSk7Y29uc3Qgbz0ocz10aGlzLl9nZXRGaXJzdFNoYWRvd0xpZ2h0Rm9yTWVzaChlKSk9PT1udWxsfHxzPT09dm9pZCAwP3ZvaWQgMDpzLmdldFNoYWRvd0dlbmVyYXRvcigpO2lmKHRoaXMuX25lZWRBbHBoYUJsZW5kaW5nPSEwLG8mJm8uZ2V0Q2xhc3NOYW1lJiZvLmdldENsYXNzTmFtZSgpPT09IkNhc2NhZGVkU2hhZG93R2VuZXJhdG9yIil7Y29uc3QgaD1vO3RoaXMuX25lZWRBbHBoYUJsZW5kaW5nPSFoLmF1dG9DYWxjRGVwdGhCb3VuZHN9aWYoaWUuUHJlcGFyZURlZmluZXNGb3JBdHRyaWJ1dGVzKGUsciwhMSwhMCksci5pc0RpcnR5KXtyLm1hcmtBc1Byb2Nlc3NlZCgpLG4ucmVzZXRDYWNoZWRNYXRlcmlhbCgpO2NvbnN0IGg9bmV3IHpzO3IuRk9HJiZoLmFkZEZhbGxiYWNrKDEsIkZPRyIpLGllLkhhbmRsZUZhbGxiYWNrc0ZvclNoYWRvd3MocixoLDEpLHIuTlVNX0JPTkVfSU5GTFVFTkNFUlM+MCYmaC5hZGRDUFVTa2lubmluZ0ZhbGxiYWNrKDAsZSksci5JTUFHRVBST0NFU1NJTkdQT1NUUFJPQ0VTUz1uLmltYWdlUHJvY2Vzc2luZ0NvbmZpZ3VyYXRpb24uYXBwbHlCeVBvc3RQcm9jZXNzO2NvbnN0IGw9W2cuUG9zaXRpb25LaW5kXTtyLk5PUk1BTCYmbC5wdXNoKGcuTm9ybWFsS2luZCksaWUuUHJlcGFyZUF0dHJpYnV0ZXNGb3JCb25lcyhsLGUscixoKSxpZS5QcmVwYXJlQXR0cmlidXRlc0Zvckluc3RhbmNlcyhsLHIpO2NvbnN0IHU9InNoYWRvd09ubHkiLGQ9ci50b1N0cmluZygpLGY9WyJ3b3JsZCIsInZpZXciLCJ2aWV3UHJvamVjdGlvbiIsInZFeWVQb3NpdGlvbiIsInZMaWdodHNUeXBlIiwidkZvZ0luZm9zIiwidkZvZ0NvbG9yIiwicG9pbnRTaXplIiwiYWxwaGEiLCJzaGFkb3dDb2xvciIsIm1Cb25lcyJdLF89bmV3IEFycmF5LEU9bmV3IEFycmF5O3NzKGYpLGllLlByZXBhcmVVbmlmb3Jtc0FuZFNhbXBsZXJzTGlzdCh7dW5pZm9ybXNOYW1lczpmLHVuaWZvcm1CdWZmZXJzTmFtZXM6RSxzYW1wbGVyczpfLGRlZmluZXM6cixtYXhTaW11bHRhbmVvdXNMaWdodHM6MX0pLHQuc2V0RWZmZWN0KG4uZ2V0RW5naW5lKCkuY3JlYXRlRWZmZWN0KHUse2F0dHJpYnV0ZXM6bCx1bmlmb3Jtc05hbWVzOmYsdW5pZm9ybUJ1ZmZlcnNOYW1lczpFLHNhbXBsZXJzOl8sZGVmaW5lczpkLGZhbGxiYWNrczpoLG9uQ29tcGlsZWQ6dGhpcy5vbkNvbXBpbGVkLG9uRXJyb3I6dGhpcy5vbkVycm9yLGluZGV4UGFyYW1ldGVyczp7bWF4U2ltdWx0YW5lb3VzTGlnaHRzOjF9fSxhKSxyLHRoaXMuX21hdGVyaWFsQ29udGV4dCl9cmV0dXJuIXQuZWZmZWN0fHwhdC5lZmZlY3QuaXNSZWFkeSgpPyExOihyLl9yZW5kZXJJZD1uLmdldFJlbmRlcklkKCksdC5lZmZlY3QuX3dhc1ByZXZpb3VzbHlSZWFkeT0hMCx0LmVmZmVjdC5fd2FzUHJldmlvdXNseVVzaW5nSW5zdGFuY2VzPSEhaSwhMCl9YmluZEZvclN1Yk1lc2goZSx0LGkpe2NvbnN0IHM9dGhpcy5nZXRTY2VuZSgpLHI9aS5tYXRlcmlhbERlZmluZXM7aWYoIXIpcmV0dXJuO2NvbnN0IG49aS5lZmZlY3Q7aWYobil7aWYodGhpcy5fYWN0aXZlRWZmZWN0PW4sdGhpcy5iaW5kT25seVdvcmxkTWF0cml4KGUpLHRoaXMuX2FjdGl2ZUVmZmVjdC5zZXRNYXRyaXgoInZpZXdQcm9qZWN0aW9uIixzLmdldFRyYW5zZm9ybU1hdHJpeCgpKSxpZS5CaW5kQm9uZXNQYXJhbWV0ZXJzKHQsdGhpcy5fYWN0aXZlRWZmZWN0KSx0aGlzLl9tdXN0UmViaW5kKHMsbikmJihycyhuLHRoaXMscyksdGhpcy5wb2ludHNDbG91ZCYmdGhpcy5fYWN0aXZlRWZmZWN0LnNldEZsb2F0KCJwb2ludFNpemUiLHRoaXMucG9pbnRTaXplKSx0aGlzLl9hY3RpdmVFZmZlY3Quc2V0RmxvYXQoImFscGhhIix0aGlzLmFscGhhKSx0aGlzLl9hY3RpdmVFZmZlY3Quc2V0Q29sb3IzKCJzaGFkb3dDb2xvciIsdGhpcy5zaGFkb3dDb2xvcikscy5iaW5kRXllUG9zaXRpb24obikpLHMubGlnaHRzRW5hYmxlZCl7aWUuQmluZExpZ2h0cyhzLHQsdGhpcy5fYWN0aXZlRWZmZWN0LHIsMSk7Y29uc3QgYT10aGlzLl9nZXRGaXJzdFNoYWRvd0xpZ2h0Rm9yTWVzaCh0KTthJiYoYS5fcmVuZGVySWQ9LTEpfShzLmZvZ0VuYWJsZWQmJnQuYXBwbHlGb2cmJnMuZm9nTW9kZSE9PW5lLkZPR01PREVfTk9ORXx8ci5TSEFET1dDU00wKSYmdGhpcy5fYWN0aXZlRWZmZWN0LnNldE1hdHJpeCgidmlldyIscy5nZXRWaWV3TWF0cml4KCkpLGllLkJpbmRGb2dQYXJhbWV0ZXJzKHMsdCx0aGlzLl9hY3RpdmVFZmZlY3QpLHRoaXMuX2FmdGVyQmluZCh0LHRoaXMuX2FjdGl2ZUVmZmVjdCl9fWNsb25lKGUpe3JldHVybiBhZS5DbG9uZSgoKT0+bmV3IGtpKGUsdGhpcy5nZXRTY2VuZSgpKSx0aGlzKX1zZXJpYWxpemUoKXtjb25zdCBlPXN1cGVyLnNlcmlhbGl6ZSgpO3JldHVybiBlLmN1c3RvbVR5cGU9IkJBQllMT04uU2hhZG93T25seU1hdGVyaWFsIixlfWdldENsYXNzTmFtZSgpe3JldHVybiJTaGFkb3dPbmx5TWF0ZXJpYWwifXN0YXRpYyBQYXJzZShlLHQsaSl7cmV0dXJuIGFlLlBhcnNlKCgpPT5uZXcga2koZS5uYW1lLHQpLGUsdCxpKX19aXQoIkJBQllMT04uU2hhZG93T25seU1hdGVyaWFsIixraSk7Y29uc3QgQWw9e2FzcGVjdDozMDAvMTUwLGVuYWJsZURlYnVnZ2luZzohMSxlbmFibGVTaGFkb3dzOiEwfTtjbGFzcyBSbHtjb25zdHJ1Y3RvcihlKXtidCh0aGlzLCJzaXplIiw5LjUpO3RoaXMuY29uZmlnPXsuLi5BbCwuLi5lfSx0aGlzLmNyZWF0ZSgpfWNyZWF0ZShlKXt0aGlzLmRlc3Ryb3koKSxPYmplY3QuYXNzaWduKHRoaXMuY29uZmlnLGUpO2NvbnN0e2FzcGVjdDp0LGVuYWJsZURlYnVnZ2luZzppPSEwLGVuYWJsZVNoYWRvd3M6c309dGhpcy5jb25maWcscj0zMDtsZXQgbjt0aGlzLmJveD1uZXcgSigiZGljZUJveCIpLGk/KG49bmV3IEIoImRpY2VCb3hfbWF0ZXJpYWwiKSxuLmFscGhhPS43LG4uZGlmZnVzZUNvbG9yPW5ldyByZSgxLDEsMCkpOnMmJihuPW5ldyBraSgic2hhZG93T25seSIsdGhpcy5jb25maWcuc2NlbmUpKTtjb25zdCBhPU1pKCJncm91bmQiLHt3aWR0aDp0aGlzLnNpemUqMixoZWlnaHQ6MSxkZXB0aDp0aGlzLnNpemUqMn0sdGhpcy5jb25maWcuc2NlbmUpO2lmKGEuc2NhbGluZz1uZXcgcCh0LDEsMSksYS5tYXRlcmlhbD1uLGEucmVjZWl2ZVNoYWRvd3M9ITAsYS5zZXRQYXJlbnQodGhpcy5ib3gpLGkpe2NvbnN0IG89TWkoIndhbGxUb3AiLHt3aWR0aDp0aGlzLnNpemUsaGVpZ2h0OnIsZGVwdGg6MX0sdGhpcy5jb25maWcuc2NlbmUpO28ucG9zaXRpb24ueT1yLzIsby5wb3NpdGlvbi56PXRoaXMuc2l6ZS8tMixvLnNjYWxpbmc9bmV3IHAodCwxLDEpLG8ubWF0ZXJpYWw9bixvLnNldFBhcmVudCh0aGlzLmJveCk7Y29uc3QgaD1NaSgid2FsbFJpZ2h0Iix7d2lkdGg6MSxoZWlnaHQ6cixkZXB0aDp0aGlzLnNpemV9LHRoaXMuY29uZmlnLnNjZW5lKTtoLnBvc2l0aW9uLng9dGhpcy5zaXplKnQvMixoLnBvc2l0aW9uLnk9ci8yLGgubWF0ZXJpYWw9bixoLnNldFBhcmVudCh0aGlzLmJveCk7Y29uc3QgbD1NaSgid2FsbEJvdHRvbSIse3dpZHRoOnRoaXMuc2l6ZSxoZWlnaHQ6cixkZXB0aDoxfSx0aGlzLmNvbmZpZy5zY2VuZSk7bC5wb3NpdGlvbi55PXIvMixsLnBvc2l0aW9uLno9dGhpcy5zaXplLzIsbC5zY2FsaW5nPW5ldyBwKHQsMSwxKSxsLm1hdGVyaWFsPW4sbC5zZXRQYXJlbnQodGhpcy5ib3gpO2NvbnN0IHU9TWkoIndhbGxMZWZ0Iix7d2lkdGg6MSxoZWlnaHQ6cixkZXB0aDp0aGlzLnNpemV9LHRoaXMuY29uZmlnLnNjZW5lKTt1LnBvc2l0aW9uLng9dGhpcy5zaXplKnQvLTIsdS5wb3NpdGlvbi55PXIvMix1Lm1hdGVyaWFsPW4sdS5zZXRQYXJlbnQodGhpcy5ib3gpfX1kZXN0cm95KCl7dGhpcy5ib3gmJnRoaXMuYm94LmRpc3Bvc2UoKX19dmFyIHRpOyhmdW5jdGlvbihjKXtjW2MuQ2xlYW49MF09IkNsZWFuIixjW2MuU3RvcD0xXT0iU3RvcCIsY1tjLlN5bmM9Ml09IlN5bmMiLGNbYy5Ob1N5bmM9M109Ik5vU3luYyJ9KSh0aXx8KHRpPXt9KSk7Y2xhc3MgbGV7c3RhdGljIGdldCBGb3JjZUZ1bGxTY2VuZUxvYWRpbmdGb3JJbmNyZW1lbnRhbCgpe3JldHVybiBPZS5Gb3JjZUZ1bGxTY2VuZUxvYWRpbmdGb3JJbmNyZW1lbnRhbH1zdGF0aWMgc2V0IEZvcmNlRnVsbFNjZW5lTG9hZGluZ0ZvckluY3JlbWVudGFsKGUpe09lLkZvcmNlRnVsbFNjZW5lTG9hZGluZ0ZvckluY3JlbWVudGFsPWV9c3RhdGljIGdldCBTaG93TG9hZGluZ1NjcmVlbigpe3JldHVybiBPZS5TaG93TG9hZGluZ1NjcmVlbn1zdGF0aWMgc2V0IFNob3dMb2FkaW5nU2NyZWVuKGUpe09lLlNob3dMb2FkaW5nU2NyZWVuPWV9c3RhdGljIGdldCBsb2dnaW5nTGV2ZWwoKXtyZXR1cm4gT2UubG9nZ2luZ0xldmVsfXN0YXRpYyBzZXQgbG9nZ2luZ0xldmVsKGUpe09lLmxvZ2dpbmdMZXZlbD1lfXN0YXRpYyBnZXQgQ2xlYW5Cb25lTWF0cml4V2VpZ2h0cygpe3JldHVybiBPZS5DbGVhbkJvbmVNYXRyaXhXZWlnaHRzfXN0YXRpYyBzZXQgQ2xlYW5Cb25lTWF0cml4V2VpZ2h0cyhlKXtPZS5DbGVhbkJvbmVNYXRyaXhXZWlnaHRzPWV9c3RhdGljIEdldERlZmF1bHRQbHVnaW4oKXtyZXR1cm4gbGUuX1JlZ2lzdGVyZWRQbHVnaW5zWyIuYmFieWxvbiJdfXN0YXRpYyBfR2V0UGx1Z2luRm9yRXh0ZW5zaW9uKGUpe2NvbnN0IHQ9bGUuX1JlZ2lzdGVyZWRQbHVnaW5zW2VdO3JldHVybiB0fHwoTy5XYXJuKCJVbmFibGUgdG8gZmluZCBhIHBsdWdpbiB0byBsb2FkICIrZSsiIGZpbGVzLiBUcnlpbmcgdG8gdXNlIC5iYWJ5bG9uIGRlZmF1bHQgcGx1Z2luLiBUbyBsb2FkIGZyb20gYSBzcGVjaWZpYyBmaWxldHlwZSAoZWcuIGdsdGYpIHNlZTogaHR0cHM6Ly9kb2MuYmFieWxvbmpzLmNvbS9mZWF0dXJlcy9mZWF0dXJlc0RlZXBEaXZlL2ltcG9ydGVycy9sb2FkaW5nRmlsZVR5cGVzIiksbGUuR2V0RGVmYXVsdFBsdWdpbigpKX1zdGF0aWMgX0dldFBsdWdpbkZvckRpcmVjdExvYWQoZSl7Zm9yKGNvbnN0IHQgaW4gbGUuX1JlZ2lzdGVyZWRQbHVnaW5zKXtjb25zdCBpPWxlLl9SZWdpc3RlcmVkUGx1Z2luc1t0XS5wbHVnaW47aWYoaS5jYW5EaXJlY3RMb2FkJiZpLmNhbkRpcmVjdExvYWQoZSkpcmV0dXJuIGxlLl9SZWdpc3RlcmVkUGx1Z2luc1t0XX1yZXR1cm4gbGUuR2V0RGVmYXVsdFBsdWdpbigpfXN0YXRpYyBfR2V0UGx1Z2luRm9yRmlsZW5hbWUoZSl7Y29uc3QgdD1lLmluZGV4T2YoIj8iKTt0IT09LTEmJihlPWUuc3Vic3RyaW5nKDAsdCkpO2NvbnN0IGk9ZS5sYXN0SW5kZXhPZigiLiIpLHM9ZS5zdWJzdHJpbmcoaSxlLmxlbmd0aCkudG9Mb3dlckNhc2UoKTtyZXR1cm4gbGUuX0dldFBsdWdpbkZvckV4dGVuc2lvbihzKX1zdGF0aWMgX0dldERpcmVjdExvYWQoZSl7cmV0dXJuIGUuc3Vic3RyKDAsNSk9PT0iZGF0YToiP2Uuc3Vic3RyKDUpOm51bGx9c3RhdGljIF9Gb3JtYXRFcnJvck1lc3NhZ2UoZSx0LGkpe2xldCBzPSJVbmFibGUgdG8gbG9hZCBmcm9tICIrZS51cmw7cmV0dXJuIHQ/cys9YDogJHt0fWA6aSYmKHMrPWA6ICR7aX1gKSxzfXN0YXRpYyBfTG9hZERhdGEoZSx0LGkscyxyLG4sYSl7Y29uc3Qgbz1sZS5fR2V0RGlyZWN0TG9hZChlLnVybCksaD1hP2xlLl9HZXRQbHVnaW5Gb3JFeHRlbnNpb24oYSk6bz9sZS5fR2V0UGx1Z2luRm9yRGlyZWN0TG9hZChlLnVybCk6bGUuX0dldFBsdWdpbkZvckZpbGVuYW1lKGUudXJsKTtsZXQgbDtpZihoLnBsdWdpbi5jcmVhdGVQbHVnaW4hPT12b2lkIDA/bD1oLnBsdWdpbi5jcmVhdGVQbHVnaW4oKTpsPWgucGx1Z2luLCFsKXRocm93IlRoZSBsb2FkZXIgcGx1Z2luIGNvcnJlc3BvbmRpbmcgdG8gdGhlIGZpbGUgdHlwZSB5b3UgYXJlIHRyeWluZyB0byBsb2FkIGhhcyBub3QgYmVlbiBmb3VuZC4gSWYgdXNpbmcgZXM2LCBwbGVhc2UgaW1wb3J0IHRoZSBwbHVnaW4geW91IHdpc2ggdG8gdXNlIGJlZm9yZS4iO2lmKGxlLk9uUGx1Z2luQWN0aXZhdGVkT2JzZXJ2YWJsZS5ub3RpZnlPYnNlcnZlcnMobCksbyYmKGwuY2FuRGlyZWN0TG9hZCYmbC5jYW5EaXJlY3RMb2FkKGUudXJsKXx8IU1zKGUudXJsKSkpe2lmKGwuZGlyZWN0TG9hZCl7Y29uc3QgeT1sLmRpcmVjdExvYWQodCxvKTt5LnRoZW4/eS50aGVuKEE9PntpKGwsQSl9KS5jYXRjaChBPT57cigiRXJyb3IgaW4gZGlyZWN0TG9hZCBvZiBfbG9hZERhdGE6ICIrQSxBKX0pOmkobCx5KX1lbHNlIGkobCxvKTtyZXR1cm4gbH1jb25zdCB1PWguaXNCaW5hcnksZD0oeSxBKT0+e2lmKHQuaXNEaXNwb3NlZCl7cigiU2NlbmUgaGFzIGJlZW4gZGlzcG9zZWQiKTtyZXR1cm59aShsLHksQSl9O2xldCBmPW51bGwsXz0hMTtjb25zdCBFPWwub25EaXNwb3NlT2JzZXJ2YWJsZTtFJiZFLmFkZCgoKT0+e189ITAsZiYmKGYuYWJvcnQoKSxmPW51bGwpLG4oKX0pO2NvbnN0IG09KCk9PntpZihfKXJldHVybjtjb25zdCB5PShDLGIpPT57cihDPT1udWxsP3ZvaWQgMDpDLnN0YXR1c1RleHQsYil9LEE9ZS5maWxlfHxlLnVybDtmPWwubG9hZEZpbGU/bC5sb2FkRmlsZSh0LEEsZCxzLHUseSk6dC5fbG9hZEZpbGUoQSxkLHMsITAsdSx5KX0sdj10LmdldEVuZ2luZSgpO2xldCBTPXYuZW5hYmxlT2ZmbGluZVN1cHBvcnQ7aWYoUyl7bGV0IHk9ITE7Zm9yKGNvbnN0IEEgb2YgdC5kaXNhYmxlT2ZmbGluZVN1cHBvcnRFeGNlcHRpb25SdWxlcylpZihBLnRlc3QoZS51cmwpKXt5PSEwO2JyZWFrfVM9IXl9cmV0dXJuIFMmJkkuT2ZmbGluZVByb3ZpZGVyRmFjdG9yeT90Lm9mZmxpbmVQcm92aWRlcj1JLk9mZmxpbmVQcm92aWRlckZhY3RvcnkoZS51cmwsbSx2LmRpc2FibGVNYW5pZmVzdENoZWNrKTptKCksbH1zdGF0aWMgX0dldEZpbGVJbmZvKGUsdCl7bGV0IGkscyxyPW51bGw7aWYoIXQpaT1lLHM9SC5HZXRGaWxlbmFtZShlKSxlPUguR2V0Rm9sZGVyUGF0aChlKTtlbHNlIGlmKHQubmFtZSl7Y29uc3Qgbj10O2k9YGZpbGU6JHtuLm5hbWV9YCxzPW4ubmFtZSxyPW59ZWxzZSBpZih0eXBlb2YgdD09InN0cmluZyImJnQuc3RhcnRzV2l0aCgiZGF0YToiKSlpPXQscz0iIjtlbHNle2NvbnN0IG49dDtpZihuLnN1YnN0cigwLDEpPT09Ii8iKXJldHVybiBILkVycm9yKCJXcm9uZyBzY2VuZUZpbGVuYW1lIHBhcmFtZXRlciIpLG51bGw7aT1lK24scz1ufXJldHVybnt1cmw6aSxyb290VXJsOmUsbmFtZTpzLGZpbGU6cn19c3RhdGljIEdldFBsdWdpbkZvckV4dGVuc2lvbihlKXtyZXR1cm4gbGUuX0dldFBsdWdpbkZvckV4dGVuc2lvbihlKS5wbHVnaW59c3RhdGljIElzUGx1Z2luRm9yRXh0ZW5zaW9uQXZhaWxhYmxlKGUpe3JldHVybiEhbGUuX1JlZ2lzdGVyZWRQbHVnaW5zW2VdfXN0YXRpYyBSZWdpc3RlclBsdWdpbihlKXtpZih0eXBlb2YgZS5leHRlbnNpb25zPT0ic3RyaW5nIil7Y29uc3QgdD1lLmV4dGVuc2lvbnM7bGUuX1JlZ2lzdGVyZWRQbHVnaW5zW3QudG9Mb3dlckNhc2UoKV09e3BsdWdpbjplLGlzQmluYXJ5OiExfX1lbHNle2NvbnN0IHQ9ZS5leHRlbnNpb25zO09iamVjdC5rZXlzKHQpLmZvckVhY2goaT0+e2xlLl9SZWdpc3RlcmVkUGx1Z2luc1tpLnRvTG93ZXJDYXNlKCldPXtwbHVnaW46ZSxpc0JpbmFyeTp0W2ldLmlzQmluYXJ5fX0pfX1zdGF0aWMgSW1wb3J0TWVzaChlLHQsaT0iIixzPWZlLkxhc3RDcmVhdGVkU2NlbmUscj1udWxsLG49bnVsbCxhPW51bGwsbz1udWxsKXtpZighcylyZXR1cm4gTy5FcnJvcigiTm8gc2NlbmUgYXZhaWxhYmxlIHRvIGltcG9ydCBtZXNoIHRvIiksbnVsbDtjb25zdCBoPWxlLl9HZXRGaWxlSW5mbyh0LGkpO2lmKCFoKXJldHVybiBudWxsO2NvbnN0IGw9e307cy5hZGRQZW5kaW5nRGF0YShsKTtjb25zdCB1PSgpPT57cy5yZW1vdmVQZW5kaW5nRGF0YShsKX0sZD0oRSxtKT0+e2NvbnN0IHY9bGUuX0Zvcm1hdEVycm9yTWVzc2FnZShoLEUsbSk7YT9hKHMsdixuZXcgTnQodixvaS5TY2VuZUxvYWRlckVycm9yLG0pKTpPLkVycm9yKHYpLHUoKX0sZj1uP0U9Pnt0cnl7bihFKX1jYXRjaChtKXtkKCJFcnJvciBpbiBvblByb2dyZXNzIGNhbGxiYWNrOiAiK20sbSl9fTp2b2lkIDAsXz0oRSxtLHYsUyx5LEEsQyk9PntpZihzLmltcG9ydGVkTWVzaGVzRmlsZXMucHVzaChoLnVybCkscil0cnl7cihFLG0sdixTLHksQSxDKX1jYXRjaChiKXtkKCJFcnJvciBpbiBvblN1Y2Nlc3MgY2FsbGJhY2s6ICIrYixiKX1zLnJlbW92ZVBlbmRpbmdEYXRhKGwpfTtyZXR1cm4gbGUuX0xvYWREYXRhKGgscywoRSxtLHYpPT57aWYoRS5yZXdyaXRlUm9vdFVSTCYmKGgucm9vdFVybD1FLnJld3JpdGVSb290VVJMKGgucm9vdFVybCx2KSksRS5pbXBvcnRNZXNoKXtjb25zdCBTPUUseT1uZXcgQXJyYXksQT1uZXcgQXJyYXksQz1uZXcgQXJyYXk7aWYoIVMuaW1wb3J0TWVzaChlLHMsbSxoLnJvb3RVcmwseSxBLEMsZCkpcmV0dXJuO3MubG9hZGluZ1BsdWdpbk5hbWU9RS5uYW1lLF8oeSxBLEMsW10sW10sW10sW10pfWVsc2UgRS5pbXBvcnRNZXNoQXN5bmMoZSxzLG0saC5yb290VXJsLGYsaC5uYW1lKS50aGVuKHk9PntzLmxvYWRpbmdQbHVnaW5OYW1lPUUubmFtZSxfKHkubWVzaGVzLHkucGFydGljbGVTeXN0ZW1zLHkuc2tlbGV0b25zLHkuYW5pbWF0aW9uR3JvdXBzLHkudHJhbnNmb3JtTm9kZXMseS5nZW9tZXRyaWVzLHkubGlnaHRzKX0pLmNhdGNoKHk9PntkKHkubWVzc2FnZSx5KX0pfSxmLGQsdSxvKX1zdGF0aWMgSW1wb3J0TWVzaEFzeW5jKGUsdCxpPSIiLHM9ZmUuTGFzdENyZWF0ZWRTY2VuZSxyPW51bGwsbj1udWxsKXtyZXR1cm4gbmV3IFByb21pc2UoKGEsbyk9PntsZS5JbXBvcnRNZXNoKGUsdCxpLHMsKGgsbCx1LGQsZixfLEUpPT57YSh7bWVzaGVzOmgscGFydGljbGVTeXN0ZW1zOmwsc2tlbGV0b25zOnUsYW5pbWF0aW9uR3JvdXBzOmQsdHJhbnNmb3JtTm9kZXM6ZixnZW9tZXRyaWVzOl8sbGlnaHRzOkV9KX0sciwoaCxsLHUpPT57byh1fHxuZXcgRXJyb3IobCkpfSxuKX0pfXN0YXRpYyBMb2FkKGUsdD0iIixpPWZlLkxhc3RDcmVhdGVkRW5naW5lLHM9bnVsbCxyPW51bGwsbj1udWxsLGE9bnVsbCl7cmV0dXJuIGk/bGUuQXBwZW5kKGUsdCxuZXcgbmUoaSkscyxyLG4sYSk6KEguRXJyb3IoIk5vIGVuZ2luZSBhdmFpbGFibGUiKSxudWxsKX1zdGF0aWMgTG9hZEFzeW5jKGUsdD0iIixpPWZlLkxhc3RDcmVhdGVkRW5naW5lLHM9bnVsbCxyPW51bGwpe3JldHVybiBuZXcgUHJvbWlzZSgobixhKT0+e2xlLkxvYWQoZSx0LGksbz0+e24obyl9LHMsKG8saCxsKT0+e2EobHx8bmV3IEVycm9yKGgpKX0scil9KX1zdGF0aWMgQXBwZW5kKGUsdD0iIixpPWZlLkxhc3RDcmVhdGVkU2NlbmUscz1udWxsLHI9bnVsbCxuPW51bGwsYT1udWxsKXtpZighaSlyZXR1cm4gTy5FcnJvcigiTm8gc2NlbmUgYXZhaWxhYmxlIHRvIGFwcGVuZCB0byIpLG51bGw7Y29uc3Qgbz1sZS5fR2V0RmlsZUluZm8oZSx0KTtpZighbylyZXR1cm4gbnVsbDtjb25zdCBoPXt9O2kuYWRkUGVuZGluZ0RhdGEoaCk7Y29uc3QgbD0oKT0+e2kucmVtb3ZlUGVuZGluZ0RhdGEoaCl9O2xlLlNob3dMb2FkaW5nU2NyZWVuJiYhdGhpcy5fU2hvd2luZ0xvYWRpbmdTY3JlZW4mJih0aGlzLl9TaG93aW5nTG9hZGluZ1NjcmVlbj0hMCxpLmdldEVuZ2luZSgpLmRpc3BsYXlMb2FkaW5nVUkoKSxpLmV4ZWN1dGVXaGVuUmVhZHkoKCk9PntpLmdldEVuZ2luZSgpLmhpZGVMb2FkaW5nVUkoKSx0aGlzLl9TaG93aW5nTG9hZGluZ1NjcmVlbj0hMX0pKTtjb25zdCB1PShfLEUpPT57Y29uc3QgbT1sZS5fRm9ybWF0RXJyb3JNZXNzYWdlKG8sXyxFKTtuP24oaSxtLG5ldyBOdChtLG9pLlNjZW5lTG9hZGVyRXJyb3IsRSkpOk8uRXJyb3IobSksbCgpfSxkPXI/Xz0+e3RyeXtyKF8pfWNhdGNoKEUpe3UoIkVycm9yIGluIG9uUHJvZ3Jlc3MgY2FsbGJhY2siLEUpfX06dm9pZCAwLGY9KCk9PntpZihzKXRyeXtzKGkpfWNhdGNoKF8pe3UoIkVycm9yIGluIG9uU3VjY2VzcyBjYWxsYmFjayIsXyl9aS5yZW1vdmVQZW5kaW5nRGF0YShoKX07cmV0dXJuIGxlLl9Mb2FkRGF0YShvLGksKF8sRSk9PntpZihfLmxvYWQpe2lmKCFfLmxvYWQoaSxFLG8ucm9vdFVybCx1KSlyZXR1cm47aS5sb2FkaW5nUGx1Z2luTmFtZT1fLm5hbWUsZigpfWVsc2UgXy5sb2FkQXN5bmMoaSxFLG8ucm9vdFVybCxkLG8ubmFtZSkudGhlbigoKT0+e2kubG9hZGluZ1BsdWdpbk5hbWU9Xy5uYW1lLGYoKX0pLmNhdGNoKHY9Pnt1KHYubWVzc2FnZSx2KX0pfSxkLHUsbCxhKX1zdGF0aWMgQXBwZW5kQXN5bmMoZSx0PSIiLGk9ZmUuTGFzdENyZWF0ZWRTY2VuZSxzPW51bGwscj1udWxsKXtyZXR1cm4gbmV3IFByb21pc2UoKG4sYSk9PntsZS5BcHBlbmQoZSx0LGksbz0+e24obyl9LHMsKG8saCxsKT0+e2EobHx8bmV3IEVycm9yKGgpKX0scil9KX1zdGF0aWMgTG9hZEFzc2V0Q29udGFpbmVyKGUsdD0iIixpPWZlLkxhc3RDcmVhdGVkU2NlbmUscz1udWxsLHI9bnVsbCxuPW51bGwsYT1udWxsKXtpZighaSlyZXR1cm4gTy5FcnJvcigiTm8gc2NlbmUgYXZhaWxhYmxlIHRvIGxvYWQgYXNzZXQgY29udGFpbmVyIHRvIiksbnVsbDtjb25zdCBvPWxlLl9HZXRGaWxlSW5mbyhlLHQpO2lmKCFvKXJldHVybiBudWxsO2NvbnN0IGg9e307aS5hZGRQZW5kaW5nRGF0YShoKTtjb25zdCBsPSgpPT57aS5yZW1vdmVQZW5kaW5nRGF0YShoKX0sdT0oXyxFKT0+e2NvbnN0IG09bGUuX0Zvcm1hdEVycm9yTWVzc2FnZShvLF8sRSk7bj9uKGksbSxuZXcgTnQobSxvaS5TY2VuZUxvYWRlckVycm9yLEUpKTpPLkVycm9yKG0pLGwoKX0sZD1yP189Pnt0cnl7cihfKX1jYXRjaChFKXt1KCJFcnJvciBpbiBvblByb2dyZXNzIGNhbGxiYWNrIixFKX19OnZvaWQgMCxmPV89PntpZihzKXRyeXtzKF8pfWNhdGNoKEUpe3UoIkVycm9yIGluIG9uU3VjY2VzcyBjYWxsYmFjayIsRSl9aS5yZW1vdmVQZW5kaW5nRGF0YShoKX07cmV0dXJuIGxlLl9Mb2FkRGF0YShvLGksKF8sRSk9PntpZihfLmxvYWRBc3NldENvbnRhaW5lcil7Y29uc3Qgdj1fLmxvYWRBc3NldENvbnRhaW5lcihpLEUsby5yb290VXJsLHUpO2lmKCF2KXJldHVybjtpLmxvYWRpbmdQbHVnaW5OYW1lPV8ubmFtZSxmKHYpfWVsc2UgXy5sb2FkQXNzZXRDb250YWluZXJBc3luYz9fLmxvYWRBc3NldENvbnRhaW5lckFzeW5jKGksRSxvLnJvb3RVcmwsZCxvLm5hbWUpLnRoZW4odj0+e2kubG9hZGluZ1BsdWdpbk5hbWU9Xy5uYW1lLGYodil9KS5jYXRjaCh2PT57dSh2Lm1lc3NhZ2Usdil9KTp1KCJMb2FkQXNzZXRDb250YWluZXIgaXMgbm90IHN1cHBvcnRlZCBieSB0aGlzIHBsdWdpbi4gUGx1Z2luIGRpZCBub3QgcHJvdmlkZSBhIGxvYWRBc3NldENvbnRhaW5lciBvciBsb2FkQXNzZXRDb250YWluZXJBc3luYyBtZXRob2QuIil9LGQsdSxsLGEpfXN0YXRpYyBMb2FkQXNzZXRDb250YWluZXJBc3luYyhlLHQ9IiIsaT1mZS5MYXN0Q3JlYXRlZFNjZW5lLHM9bnVsbCxyPW51bGwpe3JldHVybiBuZXcgUHJvbWlzZSgobixhKT0+e2xlLkxvYWRBc3NldENvbnRhaW5lcihlLHQsaSxvPT57bihvKX0scywobyxoLGwpPT57YShsfHxuZXcgRXJyb3IoaCkpfSxyKX0pfXN0YXRpYyBJbXBvcnRBbmltYXRpb25zKGUsdD0iIixpPWZlLkxhc3RDcmVhdGVkU2NlbmUscz0hMCxyPXRpLkNsZWFuLG49bnVsbCxhPW51bGwsbz1udWxsLGg9bnVsbCxsPW51bGwpe2lmKCFpKXtPLkVycm9yKCJObyBzY2VuZSBhdmFpbGFibGUgdG8gbG9hZCBhbmltYXRpb25zIHRvIik7cmV0dXJufWlmKHMpe2Zvcihjb25zdCBfIG9mIGkuYW5pbWF0YWJsZXMpXy5yZXNldCgpO2kuc3RvcEFsbEFuaW1hdGlvbnMoKSxpLmFuaW1hdGlvbkdyb3Vwcy5zbGljZSgpLmZvckVhY2goXz0+e18uZGlzcG9zZSgpfSksaS5nZXROb2RlcygpLmZvckVhY2goXz0+e18uYW5pbWF0aW9ucyYmKF8uYW5pbWF0aW9ucz1bXSl9KX1lbHNlIHN3aXRjaChyKXtjYXNlIHRpLkNsZWFuOmkuYW5pbWF0aW9uR3JvdXBzLnNsaWNlKCkuZm9yRWFjaChmPT57Zi5kaXNwb3NlKCl9KTticmVhaztjYXNlIHRpLlN0b3A6aS5hbmltYXRpb25Hcm91cHMuZm9yRWFjaChmPT57Zi5zdG9wKCl9KTticmVhaztjYXNlIHRpLlN5bmM6aS5hbmltYXRpb25Hcm91cHMuZm9yRWFjaChmPT57Zi5yZXNldCgpLGYucmVzdGFydCgpfSk7YnJlYWs7Y2FzZSB0aS5Ob1N5bmM6YnJlYWs7ZGVmYXVsdDpPLkVycm9yKCJVbmtub3duIGFuaW1hdGlvbiBncm91cCBsb2FkaW5nIG1vZGUgdmFsdWUgJyIrcisiJyIpO3JldHVybn1jb25zdCB1PWkuYW5pbWF0YWJsZXMubGVuZ3RoLGQ9Zj0+e2YubWVyZ2VBbmltYXRpb25zVG8oaSxpLmFuaW1hdGFibGVzLnNsaWNlKHUpLG4pLGYuZGlzcG9zZSgpLGkub25BbmltYXRpb25GaWxlSW1wb3J0ZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhpKSxhJiZhKGkpfTt0aGlzLkxvYWRBc3NldENvbnRhaW5lcihlLHQsaSxkLG8saCxsKX1zdGF0aWMgSW1wb3J0QW5pbWF0aW9uc0FzeW5jKGUsdD0iIixpPWZlLkxhc3RDcmVhdGVkU2NlbmUscz0hMCxyPXRpLkNsZWFuLG49bnVsbCxhPW51bGwsbz1udWxsLGg9bnVsbCxsPW51bGwpe3JldHVybiBuZXcgUHJvbWlzZSgodSxkKT0+e2xlLkltcG9ydEFuaW1hdGlvbnMoZSx0LGkscyxyLG4sZj0+e3UoZil9LG8sKGYsXyxFKT0+e2QoRXx8bmV3IEVycm9yKF8pKX0sbCl9KX19bGUuTk9fTE9HR0lORz0wLGxlLk1JTklNQUxfTE9HR0lORz0xLGxlLlNVTU1BUllfTE9HR0lORz0yLGxlLkRFVEFJTEVEX0xPR0dJTkc9MyxsZS5PblBsdWdpbkFjdGl2YXRlZE9ic2VydmFibGU9bmV3IEYsbGUuX1JlZ2lzdGVyZWRQbHVnaW5zPXt9LGxlLl9TaG93aW5nTG9hZGluZ1NjcmVlbj0hMTtjbGFzcyBfZXtjb25zdHJ1Y3RvcihlLHQsaT1OdW1iZXIuTUFYX1ZBTFVFKXt0aGlzLm9yaWdpbj1lLHRoaXMuZGlyZWN0aW9uPXQsdGhpcy5sZW5ndGg9aX1jbG9uZSgpe3JldHVybiBuZXcgX2UodGhpcy5vcmlnaW4uY2xvbmUoKSx0aGlzLmRpcmVjdGlvbi5jbG9uZSgpLHRoaXMubGVuZ3RoKX1pbnRlcnNlY3RzQm94TWluTWF4KGUsdCxpPTApe2NvbnN0IHM9X2UuX1RtcFZlY3RvcjNbMF0uY29weUZyb21GbG9hdHMoZS54LWksZS55LWksZS56LWkpLHI9X2UuX1RtcFZlY3RvcjNbMV0uY29weUZyb21GbG9hdHModC54K2ksdC55K2ksdC56K2kpO2xldCBuPTAsYT1OdW1iZXIuTUFYX1ZBTFVFLG8saCxsLHU7aWYoTWF0aC5hYnModGhpcy5kaXJlY3Rpb24ueCk8MWUtNyl7aWYodGhpcy5vcmlnaW4ueDxzLnh8fHRoaXMub3JpZ2luLng+ci54KXJldHVybiExfWVsc2UgaWYobz0xL3RoaXMuZGlyZWN0aW9uLngsaD0ocy54LXRoaXMub3JpZ2luLngpKm8sbD0oci54LXRoaXMub3JpZ2luLngpKm8sbD09PS0xLzAmJihsPTEvMCksaD5sJiYodT1oLGg9bCxsPXUpLG49TWF0aC5tYXgoaCxuKSxhPU1hdGgubWluKGwsYSksbj5hKXJldHVybiExO2lmKE1hdGguYWJzKHRoaXMuZGlyZWN0aW9uLnkpPDFlLTcpe2lmKHRoaXMub3JpZ2luLnk8cy55fHx0aGlzLm9yaWdpbi55PnIueSlyZXR1cm4hMX1lbHNlIGlmKG89MS90aGlzLmRpcmVjdGlvbi55LGg9KHMueS10aGlzLm9yaWdpbi55KSpvLGw9KHIueS10aGlzLm9yaWdpbi55KSpvLGw9PT0tMS8wJiYobD0xLzApLGg+bCYmKHU9aCxoPWwsbD11KSxuPU1hdGgubWF4KGgsbiksYT1NYXRoLm1pbihsLGEpLG4+YSlyZXR1cm4hMTtpZihNYXRoLmFicyh0aGlzLmRpcmVjdGlvbi56KTwxZS03KXtpZih0aGlzLm9yaWdpbi56PHMuenx8dGhpcy5vcmlnaW4uej5yLnopcmV0dXJuITF9ZWxzZSBpZihvPTEvdGhpcy5kaXJlY3Rpb24ueixoPShzLnotdGhpcy5vcmlnaW4ueikqbyxsPShyLnotdGhpcy5vcmlnaW4ueikqbyxsPT09LTEvMCYmKGw9MS8wKSxoPmwmJih1PWgsaD1sLGw9dSksbj1NYXRoLm1heChoLG4pLGE9TWF0aC5taW4obCxhKSxuPmEpcmV0dXJuITE7cmV0dXJuITB9aW50ZXJzZWN0c0JveChlLHQ9MCl7cmV0dXJuIHRoaXMuaW50ZXJzZWN0c0JveE1pbk1heChlLm1pbmltdW0sZS5tYXhpbXVtLHQpfWludGVyc2VjdHNTcGhlcmUoZSx0PTApe2NvbnN0IGk9ZS5jZW50ZXIueC10aGlzLm9yaWdpbi54LHM9ZS5jZW50ZXIueS10aGlzLm9yaWdpbi55LHI9ZS5jZW50ZXIuei10aGlzLm9yaWdpbi56LG49aSppK3MqcytyKnIsYT1lLnJhZGl1cyt0LG89YSphO2lmKG48PW8pcmV0dXJuITA7Y29uc3QgaD1pKnRoaXMuZGlyZWN0aW9uLngrcyp0aGlzLmRpcmVjdGlvbi55K3IqdGhpcy5kaXJlY3Rpb24uejtyZXR1cm4gaDwwPyExOm4taCpoPD1vfWludGVyc2VjdHNUcmlhbmdsZShlLHQsaSl7Y29uc3Qgcz1fZS5fVG1wVmVjdG9yM1swXSxyPV9lLl9UbXBWZWN0b3IzWzFdLG49X2UuX1RtcFZlY3RvcjNbMl0sYT1fZS5fVG1wVmVjdG9yM1szXSxvPV9lLl9UbXBWZWN0b3IzWzRdO3Quc3VidHJhY3RUb1JlZihlLHMpLGkuc3VidHJhY3RUb1JlZihlLHIpLHAuQ3Jvc3NUb1JlZih0aGlzLmRpcmVjdGlvbixyLG4pO2NvbnN0IGg9cC5Eb3QocyxuKTtpZihoPT09MClyZXR1cm4gbnVsbDtjb25zdCBsPTEvaDt0aGlzLm9yaWdpbi5zdWJ0cmFjdFRvUmVmKGUsYSk7Y29uc3QgdT1wLkRvdChhLG4pKmw7aWYodTwwfHx1PjEpcmV0dXJuIG51bGw7cC5Dcm9zc1RvUmVmKGEscyxvKTtjb25zdCBkPXAuRG90KHRoaXMuZGlyZWN0aW9uLG8pKmw7aWYoZDwwfHx1K2Q+MSlyZXR1cm4gbnVsbDtjb25zdCBmPXAuRG90KHIsbykqbDtyZXR1cm4gZj50aGlzLmxlbmd0aD9udWxsOm5ldyBEcygxLXUtZCx1LGYpfWludGVyc2VjdHNQbGFuZShlKXtsZXQgdDtjb25zdCBpPXAuRG90KGUubm9ybWFsLHRoaXMuZGlyZWN0aW9uKTtpZihNYXRoLmFicyhpKTw5OTk5OTk5OTc0NzUyNDNlLTIxKXJldHVybiBudWxsO3tjb25zdCBzPXAuRG90KGUubm9ybWFsLHRoaXMub3JpZ2luKTtyZXR1cm4gdD0oLWUuZC1zKS9pLHQ8MD90PC05OTk5OTk5OTc0NzUyNDNlLTIxP251bGw6MDp0fX1pbnRlcnNlY3RzQXhpcyhlLHQ9MCl7c3dpdGNoKGUpe2Nhc2UieSI6e2NvbnN0IGk9KHRoaXMub3JpZ2luLnktdCkvdGhpcy5kaXJlY3Rpb24ueTtyZXR1cm4gaT4wP251bGw6bmV3IHAodGhpcy5vcmlnaW4ueCt0aGlzLmRpcmVjdGlvbi54Ki1pLHQsdGhpcy5vcmlnaW4ueit0aGlzLmRpcmVjdGlvbi56Ki1pKX1jYXNlIngiOntjb25zdCBpPSh0aGlzLm9yaWdpbi54LXQpL3RoaXMuZGlyZWN0aW9uLng7cmV0dXJuIGk+MD9udWxsOm5ldyBwKHQsdGhpcy5vcmlnaW4ueSt0aGlzLmRpcmVjdGlvbi55Ki1pLHRoaXMub3JpZ2luLnordGhpcy5kaXJlY3Rpb24ueiotaSl9Y2FzZSJ6Ijp7Y29uc3QgaT0odGhpcy5vcmlnaW4uei10KS90aGlzLmRpcmVjdGlvbi56O3JldHVybiBpPjA/bnVsbDpuZXcgcCh0aGlzLm9yaWdpbi54K3RoaXMuZGlyZWN0aW9uLngqLWksdGhpcy5vcmlnaW4ueSt0aGlzLmRpcmVjdGlvbi55Ki1pLHQpfWRlZmF1bHQ6cmV0dXJuIG51bGx9fWludGVyc2VjdHNNZXNoKGUsdCl7Y29uc3QgaT1ELk1hdHJpeFswXTtyZXR1cm4gZS5nZXRXb3JsZE1hdHJpeCgpLmludmVydFRvUmVmKGkpLHRoaXMuX3RtcFJheT9fZS5UcmFuc2Zvcm1Ub1JlZih0aGlzLGksdGhpcy5fdG1wUmF5KTp0aGlzLl90bXBSYXk9X2UuVHJhbnNmb3JtKHRoaXMsaSksZS5pbnRlcnNlY3RzKHRoaXMuX3RtcFJheSx0KX1pbnRlcnNlY3RzTWVzaGVzKGUsdCxpKXtpP2kubGVuZ3RoPTA6aT1bXTtmb3IobGV0IHM9MDtzPGUubGVuZ3RoO3MrKyl7Y29uc3Qgcj10aGlzLmludGVyc2VjdHNNZXNoKGVbc10sdCk7ci5oaXQmJmkucHVzaChyKX1yZXR1cm4gaS5zb3J0KHRoaXMuX2NvbXBhcmVQaWNraW5nSW5mbyksaX1fY29tcGFyZVBpY2tpbmdJbmZvKGUsdCl7cmV0dXJuIGUuZGlzdGFuY2U8dC5kaXN0YW5jZT8tMTplLmRpc3RhbmNlPnQuZGlzdGFuY2U/MTowfWludGVyc2VjdGlvblNlZ21lbnQoZSx0LGkpe2NvbnN0IHM9dGhpcy5vcmlnaW4scj1ELlZlY3RvcjNbMF0sbj1ELlZlY3RvcjNbMV0sYT1ELlZlY3RvcjNbMl0sbz1ELlZlY3RvcjNbM107dC5zdWJ0cmFjdFRvUmVmKGUsciksdGhpcy5kaXJlY3Rpb24uc2NhbGVUb1JlZihfZS5fUmF5bCxhKSxzLmFkZFRvUmVmKGEsbiksZS5zdWJ0cmFjdFRvUmVmKHMsbyk7Y29uc3QgaD1wLkRvdChyLHIpLGw9cC5Eb3QocixhKSx1PXAuRG90KGEsYSksZD1wLkRvdChyLG8pLGY9cC5Eb3QoYSxvKSxfPWgqdS1sKmw7bGV0IEUsbT1fLHYsUz1fO188X2UuX1NtYWxsbnVtPyhFPTAsbT0xLHY9ZixTPXUpOihFPWwqZi11KmQsdj1oKmYtbCpkLEU8MD8oRT0wLHY9ZixTPXUpOkU+bSYmKEU9bSx2PWYrbCxTPXUpKSx2PDA/KHY9MCwtZDwwP0U9MDotZD5oP0U9bTooRT0tZCxtPWgpKTp2PlMmJih2PVMsLWQrbDwwP0U9MDotZCtsPmg/RT1tOihFPS1kK2wsbT1oKSk7Y29uc3QgeT1NYXRoLmFicyhFKTxfZS5fU21hbGxudW0/MDpFL20sQT1NYXRoLmFicyh2KTxfZS5fU21hbGxudW0/MDp2L1MsQz1ELlZlY3RvcjNbNF07YS5zY2FsZVRvUmVmKEEsQyk7Y29uc3QgYj1ELlZlY3RvcjNbNV07ci5zY2FsZVRvUmVmKHksYiksYi5hZGRJblBsYWNlKG8pO2NvbnN0IE09RC5WZWN0b3IzWzZdO3JldHVybiBiLnN1YnRyYWN0VG9SZWYoQyxNKSxBPjAmJkE8PXRoaXMubGVuZ3RoJiZNLmxlbmd0aFNxdWFyZWQoKTxpKmk/Yi5sZW5ndGgoKTotMX11cGRhdGUoZSx0LGkscyxyLG4sYSxvPSExKXtpZihvKXtfZS5fUmF5RGlzdGFudHx8KF9lLl9SYXlEaXN0YW50PV9lLlplcm8oKSksX2UuX1JheURpc3RhbnQudW5wcm9qZWN0UmF5VG9SZWYoZSx0LGkscyx4LklkZW50aXR5UmVhZE9ubHksbixhKTtjb25zdCBoPUQuTWF0cml4WzBdO3IuaW52ZXJ0VG9SZWYoaCksX2UuVHJhbnNmb3JtVG9SZWYoX2UuX1JheURpc3RhbnQsaCx0aGlzKX1lbHNlIHRoaXMudW5wcm9qZWN0UmF5VG9SZWYoZSx0LGkscyxyLG4sYSk7cmV0dXJuIHRoaXN9c3RhdGljIFplcm8oKXtyZXR1cm4gbmV3IF9lKHAuWmVybygpLHAuWmVybygpKX1zdGF0aWMgQ3JlYXRlTmV3KGUsdCxpLHMscixuLGEpe3JldHVybiBfZS5aZXJvKCkudXBkYXRlKGUsdCxpLHMscixuLGEpfXN0YXRpYyBDcmVhdGVOZXdGcm9tVG8oZSx0LGk9eC5JZGVudGl0eVJlYWRPbmx5KXtjb25zdCBzPXQuc3VidHJhY3QoZSkscj1NYXRoLnNxcnQocy54KnMueCtzLnkqcy55K3MueipzLnopO3JldHVybiBzLm5vcm1hbGl6ZSgpLF9lLlRyYW5zZm9ybShuZXcgX2UoZSxzLHIpLGkpfXN0YXRpYyBUcmFuc2Zvcm0oZSx0KXtjb25zdCBpPW5ldyBfZShuZXcgcCgwLDAsMCksbmV3IHAoMCwwLDApKTtyZXR1cm4gX2UuVHJhbnNmb3JtVG9SZWYoZSx0LGkpLGl9c3RhdGljIFRyYW5zZm9ybVRvUmVmKGUsdCxpKXtwLlRyYW5zZm9ybUNvb3JkaW5hdGVzVG9SZWYoZS5vcmlnaW4sdCxpLm9yaWdpbikscC5UcmFuc2Zvcm1Ob3JtYWxUb1JlZihlLmRpcmVjdGlvbix0LGkuZGlyZWN0aW9uKSxpLmxlbmd0aD1lLmxlbmd0aDtjb25zdCBzPWkuZGlyZWN0aW9uLHI9cy5sZW5ndGgoKTtpZighKHI9PT0wfHxyPT09MSkpe2NvbnN0IG49MS9yO3MueCo9bixzLnkqPW4scy56Kj1uLGkubGVuZ3RoKj1yfX11bnByb2plY3RSYXlUb1JlZihlLHQsaSxzLHIsbixhKXt2YXIgbztjb25zdCBoPUQuTWF0cml4WzBdO3IubXVsdGlwbHlUb1JlZihuLGgpLGgubXVsdGlwbHlUb1JlZihhLGgpLGguaW52ZXJ0KCk7Y29uc3QgbD1ELlZlY3RvcjNbMF07bC54PWUvaSoyLTEsbC55PS0odC9zKjItMSksbC56PSEoKG89ZmUuTGFzdENyZWF0ZWRFbmdpbmUpPT09bnVsbHx8bz09PXZvaWQgMCkmJm8uaXNORENIYWxmWlJhbmdlPzA6LTE7Y29uc3QgdT1ELlZlY3RvcjNbMV0uY29weUZyb21GbG9hdHMobC54LGwueSwxLTFlLTgpLGQ9RC5WZWN0b3IzWzJdLGY9RC5WZWN0b3IzWzNdO3AuX1VucHJvamVjdEZyb21JbnZlcnRlZE1hdHJpeFRvUmVmKGwsaCxkKSxwLl9VbnByb2plY3RGcm9tSW52ZXJ0ZWRNYXRyaXhUb1JlZih1LGgsZiksdGhpcy5vcmlnaW4uY29weUZyb20oZCksZi5zdWJ0cmFjdFRvUmVmKGQsdGhpcy5kaXJlY3Rpb24pLHRoaXMuZGlyZWN0aW9uLm5vcm1hbGl6ZSgpfX1fZS5fVG1wVmVjdG9yMz1CZS5CdWlsZEFycmF5KDYscC5aZXJvKSxfZS5fUmF5RGlzdGFudD1fZS5aZXJvKCksX2UuX1NtYWxsbnVtPTFlLTgsX2UuX1JheWw9MWU5LG5lLnByb3RvdHlwZS5jcmVhdGVQaWNraW5nUmF5PWZ1bmN0aW9uKGMsZSx0LGkscz0hMSl7Y29uc3Qgcj1fZS5aZXJvKCk7cmV0dXJuIHRoaXMuY3JlYXRlUGlja2luZ1JheVRvUmVmKGMsZSx0LHIsaSxzKSxyfSxuZS5wcm90b3R5cGUuY3JlYXRlUGlja2luZ1JheVRvUmVmPWZ1bmN0aW9uKGMsZSx0LGkscyxyPSExLG49ITEpe2NvbnN0IGE9dGhpcy5nZXRFbmdpbmUoKTtpZighcyl7aWYoIXRoaXMuYWN0aXZlQ2FtZXJhKXJldHVybiB0aGlzO3M9dGhpcy5hY3RpdmVDYW1lcmF9Y29uc3QgaD1zLnZpZXdwb3J0LnRvR2xvYmFsKGEuZ2V0UmVuZGVyV2lkdGgoKSxhLmdldFJlbmRlckhlaWdodCgpKTtyZXR1cm4gYz1jL2EuZ2V0SGFyZHdhcmVTY2FsaW5nTGV2ZWwoKS1oLngsZT1lL2EuZ2V0SGFyZHdhcmVTY2FsaW5nTGV2ZWwoKS0oYS5nZXRSZW5kZXJIZWlnaHQoKS1oLnktaC5oZWlnaHQpLGkudXBkYXRlKGMsZSxoLndpZHRoLGguaGVpZ2h0LHR8fHguSWRlbnRpdHlSZWFkT25seSxyP3guSWRlbnRpdHlSZWFkT25seTpzLmdldFZpZXdNYXRyaXgoKSxzLmdldFByb2plY3Rpb25NYXRyaXgoKSxuKSx0aGlzfSxuZS5wcm90b3R5cGUuY3JlYXRlUGlja2luZ1JheUluQ2FtZXJhU3BhY2U9ZnVuY3Rpb24oYyxlLHQpe2NvbnN0IGk9X2UuWmVybygpO3JldHVybiB0aGlzLmNyZWF0ZVBpY2tpbmdSYXlJbkNhbWVyYVNwYWNlVG9SZWYoYyxlLGksdCksaX0sbmUucHJvdG90eXBlLmNyZWF0ZVBpY2tpbmdSYXlJbkNhbWVyYVNwYWNlVG9SZWY9ZnVuY3Rpb24oYyxlLHQsaSl7aWYoIVV0KXJldHVybiB0aGlzO2NvbnN0IHM9dGhpcy5nZXRFbmdpbmUoKTtpZighaSl7aWYoIXRoaXMuYWN0aXZlQ2FtZXJhKXRocm93IG5ldyBFcnJvcigiQWN0aXZlIGNhbWVyYSBub3Qgc2V0Iik7aT10aGlzLmFjdGl2ZUNhbWVyYX1jb25zdCBuPWkudmlld3BvcnQudG9HbG9iYWwocy5nZXRSZW5kZXJXaWR0aCgpLHMuZ2V0UmVuZGVySGVpZ2h0KCkpLGE9eC5JZGVudGl0eSgpO3JldHVybiBjPWMvcy5nZXRIYXJkd2FyZVNjYWxpbmdMZXZlbCgpLW4ueCxlPWUvcy5nZXRIYXJkd2FyZVNjYWxpbmdMZXZlbCgpLShzLmdldFJlbmRlckhlaWdodCgpLW4ueS1uLmhlaWdodCksdC51cGRhdGUoYyxlLG4ud2lkdGgsbi5oZWlnaHQsYSxhLGkuZ2V0UHJvamVjdGlvbk1hdHJpeCgpKSx0aGlzfSxuZS5wcm90b3R5cGUuX2ludGVybmFsUGlja0Zvck1lc2g9ZnVuY3Rpb24oYyxlLHQsaSxzLHIsbixhKXtjb25zdCBvPWUoaSx0LmVuYWJsZURpc3RhbnRQaWNraW5nKSxoPXQuaW50ZXJzZWN0cyhvLHMsbixyLGksYSk7cmV0dXJuIWh8fCFoLmhpdHx8IXMmJmMhPW51bGwmJmguZGlzdGFuY2U+PWMuZGlzdGFuY2U/bnVsbDpofSxuZS5wcm90b3R5cGUuX2ludGVybmFsUGljaz1mdW5jdGlvbihjLGUsdCxpLHMpe2xldCByPW51bGw7Zm9yKGxldCBuPTA7bjx0aGlzLm1lc2hlcy5sZW5ndGg7bisrKXtjb25zdCBhPXRoaXMubWVzaGVzW25dO2lmKGUpe2lmKCFlKGEpKWNvbnRpbnVlfWVsc2UgaWYoIWEuaXNFbmFibGVkKCl8fCFhLmlzVmlzaWJsZXx8IWEuaXNQaWNrYWJsZSljb250aW51ZTtjb25zdCBvPWEuZ2V0V29ybGRNYXRyaXgoKTtpZihhLmhhc1RoaW5JbnN0YW5jZXMmJmEudGhpbkluc3RhbmNlRW5hYmxlUGlja2luZyl7Y29uc3QgaD10aGlzLl9pbnRlcm5hbFBpY2tGb3JNZXNoKHIsYyxhLG8sITAsITAscyk7aWYoaCl7aWYoaSlyZXR1cm4gaDtjb25zdCBsPUQuTWF0cml4WzFdLHU9YS50aGluSW5zdGFuY2VHZXRXb3JsZE1hdHJpY2VzKCk7Zm9yKGxldCBkPTA7ZDx1Lmxlbmd0aDtkKyspe3VbZF0ubXVsdGlwbHlUb1JlZihvLGwpO2NvbnN0IF89dGhpcy5faW50ZXJuYWxQaWNrRm9yTWVzaChyLGMsYSxsLHQsaSxzLCEwKTtpZihfJiYocj1fLHIudGhpbkluc3RhbmNlSW5kZXg9ZCx0KSlyZXR1cm4gcn19fWVsc2V7Y29uc3QgaD10aGlzLl9pbnRlcm5hbFBpY2tGb3JNZXNoKHIsYyxhLG8sdCxpLHMpO2lmKGgmJihyPWgsdCkpcmV0dXJuIHJ9fXJldHVybiByfHxuZXcgVXR9LG5lLnByb3RvdHlwZS5faW50ZXJuYWxNdWx0aVBpY2s9ZnVuY3Rpb24oYyxlLHQpe2lmKCFVdClyZXR1cm4gbnVsbDtjb25zdCBpPW5ldyBBcnJheTtmb3IobGV0IHM9MDtzPHRoaXMubWVzaGVzLmxlbmd0aDtzKyspe2NvbnN0IHI9dGhpcy5tZXNoZXNbc107aWYoZSl7aWYoIWUocikpY29udGludWV9ZWxzZSBpZighci5pc0VuYWJsZWQoKXx8IXIuaXNWaXNpYmxlfHwhci5pc1BpY2thYmxlKWNvbnRpbnVlO2NvbnN0IG49ci5nZXRXb3JsZE1hdHJpeCgpO2lmKHIuaGFzVGhpbkluc3RhbmNlcyYmci50aGluSW5zdGFuY2VFbmFibGVQaWNraW5nKXtpZih0aGlzLl9pbnRlcm5hbFBpY2tGb3JNZXNoKG51bGwsYyxyLG4sITAsITAsdCkpe2NvbnN0IG89RC5NYXRyaXhbMV0saD1yLnRoaW5JbnN0YW5jZUdldFdvcmxkTWF0cmljZXMoKTtmb3IobGV0IGw9MDtsPGgubGVuZ3RoO2wrKyl7aFtsXS5tdWx0aXBseVRvUmVmKG4sbyk7Y29uc3QgZD10aGlzLl9pbnRlcm5hbFBpY2tGb3JNZXNoKG51bGwsYyxyLG8sITEsITEsdCwhMCk7ZCYmKGQudGhpbkluc3RhbmNlSW5kZXg9bCxpLnB1c2goZCkpfX19ZWxzZXtjb25zdCBhPXRoaXMuX2ludGVybmFsUGlja0Zvck1lc2gobnVsbCxjLHIsbiwhMSwhMSx0KTthJiZpLnB1c2goYSl9fXJldHVybiBpfSxuZS5wcm90b3R5cGUucGlja1dpdGhCb3VuZGluZ0luZm89ZnVuY3Rpb24oYyxlLHQsaSxzKXtpZighVXQpcmV0dXJuIG51bGw7Y29uc3Qgcj10aGlzLl9pbnRlcm5hbFBpY2sobj0+KHRoaXMuX3RlbXBQaWNraW5nUmF5fHwodGhpcy5fdGVtcFBpY2tpbmdSYXk9X2UuWmVybygpKSx0aGlzLmNyZWF0ZVBpY2tpbmdSYXlUb1JlZihjLGUsbix0aGlzLl90ZW1wUGlja2luZ1JheSxzfHxudWxsKSx0aGlzLl90ZW1wUGlja2luZ1JheSksdCxpLCEwKTtyZXR1cm4gciYmKHIucmF5PXRoaXMuY3JlYXRlUGlja2luZ1JheShjLGUseC5JZGVudGl0eSgpLHN8fG51bGwpKSxyfSxPYmplY3QuZGVmaW5lUHJvcGVydHkobmUucHJvdG90eXBlLCJfcGlja2luZ0F2YWlsYWJsZSIse2dldDooKT0+ITAsZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITF9KSxuZS5wcm90b3R5cGUucGljaz1mdW5jdGlvbihjLGUsdCxpLHMscixuPSExKXtjb25zdCBhPXRoaXMuX2ludGVybmFsUGljaygobyxoKT0+KHRoaXMuX3RlbXBQaWNraW5nUmF5fHwodGhpcy5fdGVtcFBpY2tpbmdSYXk9X2UuWmVybygpKSx0aGlzLmNyZWF0ZVBpY2tpbmdSYXlUb1JlZihjLGUsbyx0aGlzLl90ZW1wUGlja2luZ1JheSxzfHxudWxsLCExLGgpLHRoaXMuX3RlbXBQaWNraW5nUmF5KSx0LGksITEscik7cmV0dXJuIGEmJihhLnJheT10aGlzLmNyZWF0ZVBpY2tpbmdSYXkoYyxlLHguSWRlbnRpdHkoKSxzfHxudWxsKSksYX0sbmUucHJvdG90eXBlLnBpY2tXaXRoUmF5PWZ1bmN0aW9uKGMsZSx0LGkpe2NvbnN0IHM9dGhpcy5faW50ZXJuYWxQaWNrKHI9Pih0aGlzLl9waWNrV2l0aFJheUludmVyc2VNYXRyaXh8fCh0aGlzLl9waWNrV2l0aFJheUludmVyc2VNYXRyaXg9eC5JZGVudGl0eSgpKSxyLmludmVydFRvUmVmKHRoaXMuX3BpY2tXaXRoUmF5SW52ZXJzZU1hdHJpeCksdGhpcy5fY2FjaGVkUmF5Rm9yVHJhbnNmb3JtfHwodGhpcy5fY2FjaGVkUmF5Rm9yVHJhbnNmb3JtPV9lLlplcm8oKSksX2UuVHJhbnNmb3JtVG9SZWYoYyx0aGlzLl9waWNrV2l0aFJheUludmVyc2VNYXRyaXgsdGhpcy5fY2FjaGVkUmF5Rm9yVHJhbnNmb3JtKSx0aGlzLl9jYWNoZWRSYXlGb3JUcmFuc2Zvcm0pLGUsdCwhMSxpKTtyZXR1cm4gcyYmKHMucmF5PWMpLHN9LG5lLnByb3RvdHlwZS5tdWx0aVBpY2s9ZnVuY3Rpb24oYyxlLHQsaSxzKXtyZXR1cm4gdGhpcy5faW50ZXJuYWxNdWx0aVBpY2socj0+dGhpcy5jcmVhdGVQaWNraW5nUmF5KGMsZSxyLGl8fG51bGwpLHQscyl9LG5lLnByb3RvdHlwZS5tdWx0aVBpY2tXaXRoUmF5PWZ1bmN0aW9uKGMsZSx0KXtyZXR1cm4gdGhpcy5faW50ZXJuYWxNdWx0aVBpY2soaT0+KHRoaXMuX3BpY2tXaXRoUmF5SW52ZXJzZU1hdHJpeHx8KHRoaXMuX3BpY2tXaXRoUmF5SW52ZXJzZU1hdHJpeD14LklkZW50aXR5KCkpLGkuaW52ZXJ0VG9SZWYodGhpcy5fcGlja1dpdGhSYXlJbnZlcnNlTWF0cml4KSx0aGlzLl9jYWNoZWRSYXlGb3JUcmFuc2Zvcm18fCh0aGlzLl9jYWNoZWRSYXlGb3JUcmFuc2Zvcm09X2UuWmVybygpKSxfZS5UcmFuc2Zvcm1Ub1JlZihjLHRoaXMuX3BpY2tXaXRoUmF5SW52ZXJzZU1hdHJpeCx0aGlzLl9jYWNoZWRSYXlGb3JUcmFuc2Zvcm0pLHRoaXMuX2NhY2hlZFJheUZvclRyYW5zZm9ybSksZSx0KX0sai5wcm90b3R5cGUuZ2V0Rm9yd2FyZFJheT1mdW5jdGlvbihjPTEwMCxlLHQpe3JldHVybiB0aGlzLmdldEZvcndhcmRSYXlUb1JlZihuZXcgX2UocC5aZXJvKCkscC5aZXJvKCksYyksYyxlLHQpfSxqLnByb3RvdHlwZS5nZXRGb3J3YXJkUmF5VG9SZWY9ZnVuY3Rpb24oYyxlPTEwMCx0LGkpe3JldHVybiB0fHwodD10aGlzLmdldFdvcmxkTWF0cml4KCkpLGMubGVuZ3RoPWUsaT9jLm9yaWdpbi5jb3B5RnJvbShpKTpjLm9yaWdpbi5jb3B5RnJvbSh0aGlzLnBvc2l0aW9uKSxELlZlY3RvcjNbMl0uc2V0KDAsMCx0aGlzLl9zY2VuZS51c2VSaWdodEhhbmRlZFN5c3RlbT8tMToxKSxwLlRyYW5zZm9ybU5vcm1hbFRvUmVmKEQuVmVjdG9yM1syXSx0LEQuVmVjdG9yM1szXSkscC5Ob3JtYWxpemVUb1JlZihELlZlY3RvcjNbM10sYy5kaXJlY3Rpb24pLGN9O3ZhciB5bD1mdW5jdGlvbihjLGUsdCl7Zm9yKHZhciBpIGluIGUpaWYoYy5uYW1lPT09ZVtpXSlyZXR1cm4gdC5wdXNoKGMuaWQpLCEwO3JldHVybiBjLnBhcmVudElkJiZ0LmluZGV4T2YoYy5wYXJlbnRJZCkhPT0tMT8odC5wdXNoKGMuaWQpLCEwKTohMX0sbHM9ZnVuY3Rpb24oYyxlKXtyZXR1cm4gYysiIG9mICIrKGU/ZS5maWxlKyIgZnJvbSAiK2UubmFtZSsiIHZlcnNpb246ICIrZS52ZXJzaW9uKyIsIGV4cG9ydGVyIHZlcnNpb246ICIrZS5leHBvcnRlcl92ZXJzaW9uOiJ1bmtub3duIil9O2xlLlJlZ2lzdGVyUGx1Z2luKHtuYW1lOiJiYWJ5bG9uLmpzIixleHRlbnNpb25zOiIuanNvbiIsY2FuRGlyZWN0TG9hZDpmdW5jdGlvbihjKXtyZXR1cm4gYy5pbmRleE9mKCJqc29uIikhPT0tMSwhMH0saW1wb3J0TWVzaDpmdW5jdGlvbihjLGUsdCxpLHMscixuLGEpe3ZhciBvPSJpbXBvcnRNZXNoIGhhcyBmYWlsZWQgSlNPTiBwYXJzZSI7dHJ5e3ZhciBoPUpTT04ucGFyc2UodCk7aC5waHlzaWNzRW5hYmxlZD0hMSxoPT1udWxsfHxoLm1lc2hlcy5tYXAoUz0+ZGVsZXRlIFMucGh5c2ljc0ltcG9zdG9yKSxvPSIiO3ZhciBsPWxlLmxvZ2dpbmdMZXZlbD09PWxlLkRFVEFJTEVEX0xPR0dJTkc7Yz9BcnJheS5pc0FycmF5KGMpfHwoYz1bY10pOmM9bnVsbDt2YXIgdT1uZXcgQXJyYXk7aWYoaC5tZXNoZXMhPT12b2lkIDAmJmgubWVzaGVzIT09bnVsbCl7dmFyIGQsZjtmb3IoZD0wLGY9aC5tZXNoZXMubGVuZ3RoO2Q8ZjtkKyspe3ZhciBfPWgubWVzaGVzW2RdO2lmKGM9PT1udWxsfHx5bChfLGMsdSkpe2MhPT1udWxsJiZkZWxldGUgY1tjLmluZGV4T2YoXy5uYW1lKV07dmFyIEU9Vy5QYXJzZShfLGUsaSk7cy5wdXNoKEUpLG8rPWAKCU1lc2ggYCtFLnRvU3RyaW5nKGwpfX12YXIgbTtmb3IoZD0wLGY9ZS5tZXNoZXMubGVuZ3RoO2Q8ZjtkKyspbT1lLm1lc2hlc1tkXSxtLl93YWl0aW5nUGFyZW50SWQmJihtLnBhcmVudD1lLmdldExhc3RFbnRyeUJ5SUQobS5fd2FpdGluZ1BhcmVudElkKSxtLl93YWl0aW5nUGFyZW50SWQ9bnVsbCksbS5jb21wdXRlV29ybGRNYXRyaXgoITApfXJldHVybiEwfWNhdGNoKFMpe3ZhciB2PWxzKCJpbXBvcnRNZXNoIixoP2gucHJvZHVjZXI6IlVua25vd24iKStvO2lmKGEpYSh2LFMpO2Vsc2UgdGhyb3cgTy5Mb2codiksU31maW5hbGx5e28hPT1udWxsJiZsZS5sb2dnaW5nTGV2ZWwhPT1sZS5OT19MT0dHSU5HJiZPLkxvZyhscygiaW1wb3J0TWVzaCIsaD9oLnByb2R1Y2VyOiJVbmtub3duIikrKGxlLmxvZ2dpbmdMZXZlbCE9PWxlLk1JTklNQUxfTE9HR0lORz9vOiIiKSl9cmV0dXJuITF9LGxvYWQ6ZnVuY3Rpb24oYyxlLHQsaSl7dmFyIHM9ImltcG9ydFNjZW5lIGhhcyBmYWlsZWQgSlNPTiBwYXJzZSI7dHJ5e3ZhciByPUpTT04ucGFyc2UoZSk7cz0iIixyLmNsZWFyQ29sb3IhPT12b2lkIDAmJnIuY2xlYXJDb2xvciE9PW51bGwmJihjLmNsZWFyQ29sb3I9Q29sb3I0LkZyb21BcnJheShyLmNsZWFyQ29sb3IpKTt2YXIgbj1sb2FkQXNzZXRDb250YWluZXIoYyxlLHQsaSwhMCk7cmV0dXJuISFufWNhdGNoKG8pe3ZhciBhPWxzKCJpbXBvcnRTY2VuZSIscj9yLnByb2R1Y2VyOiJVbmtub3duIikrcztpZihpKWkoYSxvKTtlbHNlIHRocm93IE8uTG9nKGEpLG99ZmluYWxseXtzIT09bnVsbCYmbGUubG9nZ2luZ0xldmVsIT09bGUuTk9fTE9HR0lORyYmTy5Mb2cobHMoImltcG9ydFNjZW5lIixyP3IucHJvZHVjZXI6IlVua25vd24iKSsobGUubG9nZ2luZ0xldmVsIT09bGUuTUlOSU1BTF9MT0dHSU5HP3M6IiIpKX1yZXR1cm4hMX0sbG9hZEFzc2V0Q29udGFpbmVyOmZ1bmN0aW9uKGMsZSx0LGkpe3ZhciBzPWxvYWRBc3NldENvbnRhaW5lcihjLGUsdCxpKTtyZXR1cm4gc319KSxXLl9pbnN0YW5jZWRNZXNoRmFjdG9yeT0oYyxlKT0+e2NvbnN0IHQ9bmV3IENsKGMsZSk7aWYoZS5pbnN0YW5jZWRCdWZmZXJzKXt0Lmluc3RhbmNlZEJ1ZmZlcnM9e307Zm9yKGNvbnN0IGkgaW4gZS5pbnN0YW5jZWRCdWZmZXJzKXQuaW5zdGFuY2VkQnVmZmVyc1tpXT1lLmluc3RhbmNlZEJ1ZmZlcnNbaV19cmV0dXJuIHR9O2NsYXNzIENsIGV4dGVuZHMgb3R7Y29uc3RydWN0b3IoZSx0KXtzdXBlcihlLHQuZ2V0U2NlbmUoKSksdGhpcy5faW5kZXhJblNvdXJjZU1lc2hJbnN0YW5jZUFycmF5PS0xLHRoaXMuX2Rpc3RhbmNlVG9DYW1lcmE9MCx0LmFkZEluc3RhbmNlKHRoaXMpLHRoaXMuX3NvdXJjZU1lc2g9dCx0aGlzLl91bkluZGV4ZWQ9dC5fdW5JbmRleGVkLHRoaXMucG9zaXRpb24uY29weUZyb20odC5wb3NpdGlvbiksdGhpcy5yb3RhdGlvbi5jb3B5RnJvbSh0LnJvdGF0aW9uKSx0aGlzLnNjYWxpbmcuY29weUZyb20odC5zY2FsaW5nKSx0LnJvdGF0aW9uUXVhdGVybmlvbiYmKHRoaXMucm90YXRpb25RdWF0ZXJuaW9uPXQucm90YXRpb25RdWF0ZXJuaW9uLmNsb25lKCkpLHRoaXMuYW5pbWF0aW9ucz10LmFuaW1hdGlvbnMuc2xpY2UoKTtmb3IoY29uc3QgaSBvZiB0LmdldEFuaW1hdGlvblJhbmdlcygpKWkhPW51bGwmJnRoaXMuY3JlYXRlQW5pbWF0aW9uUmFuZ2UoaS5uYW1lLGkuZnJvbSxpLnRvKTt0aGlzLmluZmluaXRlRGlzdGFuY2U9dC5pbmZpbml0ZURpc3RhbmNlLHRoaXMuc2V0UGl2b3RNYXRyaXgodC5nZXRQaXZvdE1hdHJpeCgpKSx0aGlzLnJlZnJlc2hCb3VuZGluZ0luZm8oITAsITApLHRoaXMuX3N5bmNTdWJNZXNoZXMoKX1nZXRDbGFzc05hbWUoKXtyZXR1cm4iSW5zdGFuY2VkTWVzaCJ9Z2V0IGxpZ2h0U291cmNlcygpe3JldHVybiB0aGlzLl9zb3VyY2VNZXNoLl9saWdodFNvdXJjZXN9X3Jlc3luY0xpZ2h0U291cmNlcygpe31fcmVzeW5jTGlnaHRTb3VyY2UoKXt9X3JlbW92ZUxpZ2h0U291cmNlKCl7fWdldCByZWNlaXZlU2hhZG93cygpe3JldHVybiB0aGlzLl9zb3VyY2VNZXNoLnJlY2VpdmVTaGFkb3dzfWdldCBtYXRlcmlhbCgpe3JldHVybiB0aGlzLl9zb3VyY2VNZXNoLm1hdGVyaWFsfWdldCB2aXNpYmlsaXR5KCl7cmV0dXJuIHRoaXMuX3NvdXJjZU1lc2gudmlzaWJpbGl0eX1nZXQgc2tlbGV0b24oKXtyZXR1cm4gdGhpcy5fc291cmNlTWVzaC5za2VsZXRvbn1nZXQgcmVuZGVyaW5nR3JvdXBJZCgpe3JldHVybiB0aGlzLl9zb3VyY2VNZXNoLnJlbmRlcmluZ0dyb3VwSWR9c2V0IHJlbmRlcmluZ0dyb3VwSWQoZSl7IXRoaXMuX3NvdXJjZU1lc2h8fGU9PT10aGlzLl9zb3VyY2VNZXNoLnJlbmRlcmluZ0dyb3VwSWR8fE8uV2FybigiTm90ZSAtIHNldHRpbmcgcmVuZGVyaW5nR3JvdXBJZCBvZiBhbiBpbnN0YW5jZWQgbWVzaCBoYXMgbm8gZWZmZWN0IG9uIHRoZSBzY2VuZSIpfWdldFRvdGFsVmVydGljZXMoKXtyZXR1cm4gdGhpcy5fc291cmNlTWVzaD90aGlzLl9zb3VyY2VNZXNoLmdldFRvdGFsVmVydGljZXMoKTowfWdldFRvdGFsSW5kaWNlcygpe3JldHVybiB0aGlzLl9zb3VyY2VNZXNoLmdldFRvdGFsSW5kaWNlcygpfWdldCBzb3VyY2VNZXNoKCl7cmV0dXJuIHRoaXMuX3NvdXJjZU1lc2h9Y3JlYXRlSW5zdGFuY2UoZSl7cmV0dXJuIHRoaXMuX3NvdXJjZU1lc2guY3JlYXRlSW5zdGFuY2UoZSl9aXNSZWFkeShlPSExKXtyZXR1cm4gdGhpcy5fc291cmNlTWVzaC5pc1JlYWR5KGUsITApfWdldFZlcnRpY2VzRGF0YShlLHQpe3JldHVybiB0aGlzLl9zb3VyY2VNZXNoLmdldFZlcnRpY2VzRGF0YShlLHQpfXNldFZlcnRpY2VzRGF0YShlLHQsaSxzKXtyZXR1cm4gdGhpcy5zb3VyY2VNZXNoJiZ0aGlzLnNvdXJjZU1lc2guc2V0VmVydGljZXNEYXRhKGUsdCxpLHMpLHRoaXMuc291cmNlTWVzaH11cGRhdGVWZXJ0aWNlc0RhdGEoZSx0LGkscyl7cmV0dXJuIHRoaXMuc291cmNlTWVzaCYmdGhpcy5zb3VyY2VNZXNoLnVwZGF0ZVZlcnRpY2VzRGF0YShlLHQsaSxzKSx0aGlzLnNvdXJjZU1lc2h9c2V0SW5kaWNlcyhlLHQ9bnVsbCl7cmV0dXJuIHRoaXMuc291cmNlTWVzaCYmdGhpcy5zb3VyY2VNZXNoLnNldEluZGljZXMoZSx0KSx0aGlzLnNvdXJjZU1lc2h9aXNWZXJ0aWNlc0RhdGFQcmVzZW50KGUpe3JldHVybiB0aGlzLl9zb3VyY2VNZXNoLmlzVmVydGljZXNEYXRhUHJlc2VudChlKX1nZXRJbmRpY2VzKCl7cmV0dXJuIHRoaXMuX3NvdXJjZU1lc2guZ2V0SW5kaWNlcygpfWdldCBfcG9zaXRpb25zKCl7cmV0dXJuIHRoaXMuX3NvdXJjZU1lc2guX3Bvc2l0aW9uc31yZWZyZXNoQm91bmRpbmdJbmZvKGU9ITEsdD0hMSl7aWYodGhpcy5oYXNCb3VuZGluZ0luZm8mJnRoaXMuZ2V0Qm91bmRpbmdJbmZvKCkuaXNMb2NrZWQpcmV0dXJuIHRoaXM7Y29uc3QgaT10aGlzLl9zb3VyY2VNZXNoLmdlb21ldHJ5P3RoaXMuX3NvdXJjZU1lc2guZ2VvbWV0cnkuYm91bmRpbmdCaWFzOm51bGw7cmV0dXJuIHRoaXMuX3JlZnJlc2hCb3VuZGluZ0luZm8odGhpcy5fc291cmNlTWVzaC5fZ2V0UG9zaXRpb25EYXRhKGUsdCksaSksdGhpc31fcHJlQWN0aXZhdGUoKXtyZXR1cm4gdGhpcy5fY3VycmVudExPRCYmdGhpcy5fY3VycmVudExPRC5fcHJlQWN0aXZhdGUoKSx0aGlzfV9hY3RpdmF0ZShlLHQpe2lmKHN1cGVyLl9hY3RpdmF0ZShlLHQpLHRoaXMuX3NvdXJjZU1lc2guc3ViTWVzaGVzfHxPLldhcm4oIkluc3RhbmNlcyBzaG91bGQgb25seSBiZSBjcmVhdGVkIGZvciBtZXNoZXMgd2l0aCBnZW9tZXRyeS4iKSx0aGlzLl9jdXJyZW50TE9EKXtpZih0aGlzLl9jdXJyZW50TE9ELl9nZXRXb3JsZE1hdHJpeERldGVybWluYW50KCk+PTAhPXRoaXMuX2dldFdvcmxkTWF0cml4RGV0ZXJtaW5hbnQoKT49MClyZXR1cm4gdGhpcy5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fYWN0QXNSZWd1bGFyTWVzaD0hMCwhMDtpZih0aGlzLl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9hY3RBc1JlZ3VsYXJNZXNoPSExLHRoaXMuX2N1cnJlbnRMT0QuX3JlZ2lzdGVySW5zdGFuY2VGb3JSZW5kZXJJZCh0aGlzLGUpLHQpe2lmKCF0aGlzLl9jdXJyZW50TE9ELl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9pc0FjdGl2ZUludGVybWVkaWF0ZSlyZXR1cm4gdGhpcy5fY3VycmVudExPRC5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fb25seUZvckluc3RhbmNlc0ludGVybWVkaWF0ZT0hMCwhMH1lbHNlIGlmKCF0aGlzLl9jdXJyZW50TE9ELl9pbnRlcm5hbEFic3RyYWN0TWVzaERhdGFJbmZvLl9pc0FjdGl2ZSlyZXR1cm4gdGhpcy5fY3VycmVudExPRC5faW50ZXJuYWxBYnN0cmFjdE1lc2hEYXRhSW5mby5fb25seUZvckluc3RhbmNlcz0hMCwhMH1yZXR1cm4hMX1fcG9zdEFjdGl2YXRlKCl7dGhpcy5fc291cmNlTWVzaC5lZGdlc1NoYXJlV2l0aEluc3RhbmNlcyYmdGhpcy5fc291cmNlTWVzaC5fZWRnZXNSZW5kZXJlciYmdGhpcy5fc291cmNlTWVzaC5fZWRnZXNSZW5kZXJlci5pc0VuYWJsZWQmJnRoaXMuX3NvdXJjZU1lc2guX3JlbmRlcmluZ0dyb3VwPyh0aGlzLl9zb3VyY2VNZXNoLl9yZW5kZXJpbmdHcm91cC5fZWRnZXNSZW5kZXJlcnMucHVzaE5vRHVwbGljYXRlKHRoaXMuX3NvdXJjZU1lc2guX2VkZ2VzUmVuZGVyZXIpLHRoaXMuX3NvdXJjZU1lc2guX2VkZ2VzUmVuZGVyZXIuY3VzdG9tSW5zdGFuY2VzLnB1c2godGhpcy5nZXRXb3JsZE1hdHJpeCgpKSk6dGhpcy5fZWRnZXNSZW5kZXJlciYmdGhpcy5fZWRnZXNSZW5kZXJlci5pc0VuYWJsZWQmJnRoaXMuX3NvdXJjZU1lc2guX3JlbmRlcmluZ0dyb3VwJiZ0aGlzLl9zb3VyY2VNZXNoLl9yZW5kZXJpbmdHcm91cC5fZWRnZXNSZW5kZXJlcnMucHVzaCh0aGlzLl9lZGdlc1JlbmRlcmVyKX1nZXRXb3JsZE1hdHJpeCgpe2lmKHRoaXMuX2N1cnJlbnRMT0QmJnRoaXMuX2N1cnJlbnRMT0QuYmlsbGJvYXJkTW9kZSE9PUouQklMTEJPQVJETU9ERV9OT05FJiZ0aGlzLl9jdXJyZW50TE9ELl9tYXN0ZXJNZXNoIT09dGhpcyl7dGhpcy5fYmlsbGJvYXJkV29ybGRNYXRyaXh8fCh0aGlzLl9iaWxsYm9hcmRXb3JsZE1hdHJpeD1uZXcgeCk7Y29uc3QgZT10aGlzLl9jdXJyZW50TE9ELl9tYXN0ZXJNZXNoO3JldHVybiB0aGlzLl9jdXJyZW50TE9ELl9tYXN0ZXJNZXNoPXRoaXMsRC5WZWN0b3IzWzddLmNvcHlGcm9tKHRoaXMuX2N1cnJlbnRMT0QucG9zaXRpb24pLHRoaXMuX2N1cnJlbnRMT0QucG9zaXRpb24uc2V0KDAsMCwwKSx0aGlzLl9iaWxsYm9hcmRXb3JsZE1hdHJpeC5jb3B5RnJvbSh0aGlzLl9jdXJyZW50TE9ELmNvbXB1dGVXb3JsZE1hdHJpeCghMCkpLHRoaXMuX2N1cnJlbnRMT0QucG9zaXRpb24uY29weUZyb20oRC5WZWN0b3IzWzddKSx0aGlzLl9jdXJyZW50TE9ELl9tYXN0ZXJNZXNoPWUsdGhpcy5fYmlsbGJvYXJkV29ybGRNYXRyaXh9cmV0dXJuIHN1cGVyLmdldFdvcmxkTWF0cml4KCl9Z2V0IGlzQW5JbnN0YW5jZSgpe3JldHVybiEwfWdldExPRChlKXtpZighZSlyZXR1cm4gdGhpcztjb25zdCB0PXRoaXMuc291cmNlTWVzaC5nZXRMT0RMZXZlbHMoKTtpZighdHx8dC5sZW5ndGg9PT0wKXRoaXMuX2N1cnJlbnRMT0Q9dGhpcy5zb3VyY2VNZXNoO2Vsc2V7Y29uc3QgaT10aGlzLmdldEJvdW5kaW5nSW5mbygpO3RoaXMuX2N1cnJlbnRMT0Q9dGhpcy5zb3VyY2VNZXNoLmdldExPRChlLGkuYm91bmRpbmdTcGhlcmUpfXJldHVybiB0aGlzLl9jdXJyZW50TE9EfV9wcmVBY3RpdmF0ZUZvckludGVybWVkaWF0ZVJlbmRlcmluZyhlKXtyZXR1cm4gdGhpcy5zb3VyY2VNZXNoLl9wcmVBY3RpdmF0ZUZvckludGVybWVkaWF0ZVJlbmRlcmluZyhlKX1fc3luY1N1Yk1lc2hlcygpe2lmKHRoaXMucmVsZWFzZVN1Yk1lc2hlcygpLHRoaXMuX3NvdXJjZU1lc2guc3ViTWVzaGVzKWZvcihsZXQgZT0wO2U8dGhpcy5fc291cmNlTWVzaC5zdWJNZXNoZXMubGVuZ3RoO2UrKyl0aGlzLl9zb3VyY2VNZXNoLnN1Yk1lc2hlc1tlXS5jbG9uZSh0aGlzLHRoaXMuX3NvdXJjZU1lc2gpO3JldHVybiB0aGlzfV9nZW5lcmF0ZVBvaW50c0FycmF5KCl7cmV0dXJuIHRoaXMuX3NvdXJjZU1lc2guX2dlbmVyYXRlUG9pbnRzQXJyYXkoKX1fdXBkYXRlQm91bmRpbmdJbmZvKCl7cmV0dXJuIHRoaXMuaGFzQm91bmRpbmdJbmZvP3RoaXMuZ2V0Qm91bmRpbmdJbmZvKCkudXBkYXRlKHRoaXMud29ybGRNYXRyaXhGcm9tQ2FjaGUpOnRoaXMuYnVpbGRCb3VuZGluZ0luZm8odGhpcy5hYnNvbHV0ZVBvc2l0aW9uLHRoaXMuYWJzb2x1dGVQb3NpdGlvbix0aGlzLndvcmxkTWF0cml4RnJvbUNhY2hlKSx0aGlzLl91cGRhdGVTdWJNZXNoZXNCb3VuZGluZ0luZm8odGhpcy53b3JsZE1hdHJpeEZyb21DYWNoZSksdGhpc31jbG9uZShlLHQ9bnVsbCxpLHMpe2NvbnN0IHI9KHN8fHRoaXMuX3NvdXJjZU1lc2gpLmNyZWF0ZUluc3RhbmNlKGUpO2lmKHZzLkRlZXBDb3B5KHRoaXMscixbIm5hbWUiLCJzdWJNZXNoZXMiLCJ1bmlxdWVJZCIsInBhcmVudCIsImxpZ2h0U291cmNlcyIsInJlY2VpdmVTaGFkb3dzIiwibWF0ZXJpYWwiLCJ2aXNpYmlsaXR5Iiwic2tlbGV0b24iLCJzb3VyY2VNZXNoIiwiaXNBbkluc3RhbmNlIiwiZmFjZXROYiIsImlzRmFjZXREYXRhRW5hYmxlZCIsImlzQmxvY2tlZCIsInVzZUJvbmVzIiwiaGFzSW5zdGFuY2VzIiwiY29sbGlkZXIiLCJlZGdlc1JlbmRlcmVyIiwiZm9yd2FyZCIsInVwIiwicmlnaHQiLCJhYnNvbHV0ZVBvc2l0aW9uIiwiYWJzb2x1dGVTY2FsaW5nIiwiYWJzb2x1dGVSb3RhdGlvblF1YXRlcm5pb24iLCJpc1dvcmxkTWF0cml4RnJvemVuIiwibm9uVW5pZm9ybVNjYWxpbmciLCJiZWhhdmlvcnMiLCJ3b3JsZE1hdHJpeEZyb21DYWNoZSIsImhhc1RoaW5JbnN0YW5jZXMiLCJoYXNCb3VuZGluZ0luZm8iXSxbXSksdGhpcy5yZWZyZXNoQm91bmRpbmdJbmZvKCksdCYmKHIucGFyZW50PXQpLCFpKWZvcihsZXQgbj0wO248dGhpcy5nZXRTY2VuZSgpLm1lc2hlcy5sZW5ndGg7bisrKXtjb25zdCBhPXRoaXMuZ2V0U2NlbmUoKS5tZXNoZXNbbl07YS5wYXJlbnQ9PT10aGlzJiZhLmNsb25lKGEubmFtZSxyKX1yZXR1cm4gci5jb21wdXRlV29ybGRNYXRyaXgoITApLHRoaXMub25DbG9uZWRPYnNlcnZhYmxlLm5vdGlmeU9ic2VydmVycyhyKSxyfWRpc3Bvc2UoZSx0PSExKXt0aGlzLl9zb3VyY2VNZXNoLnJlbW92ZUluc3RhbmNlKHRoaXMpLHN1cGVyLmRpc3Bvc2UoZSx0KX1fc2VyaWFsaXplQXNQYXJlbnQoZSl7c3VwZXIuX3NlcmlhbGl6ZUFzUGFyZW50KGUpLGUucGFyZW50SWQ9dGhpcy5fc291cmNlTWVzaC51bmlxdWVJZCxlLnBhcmVudEluc3RhbmNlSW5kZXg9dGhpcy5faW5kZXhJblNvdXJjZU1lc2hJbnN0YW5jZUFycmF5fWluc3RhbnRpYXRlSGllcmFyY2h5KGU9bnVsbCx0LGkpe2NvbnN0IHM9dGhpcy5jbG9uZSgiQ2xvbmUgb2YgIisodGhpcy5uYW1lfHx0aGlzLmlkKSxlfHx0aGlzLnBhcmVudCwhMCx0JiZ0Lm5ld1NvdXJjZWRNZXNoKTtzJiZpJiZpKHRoaXMscyk7Zm9yKGNvbnN0IHIgb2YgdGhpcy5nZXRDaGlsZFRyYW5zZm9ybU5vZGVzKCEwKSlyLmluc3RhbnRpYXRlSGllcmFyY2h5KHMsdCxpKTtyZXR1cm4gc319Vy5wcm90b3R5cGUucmVnaXN0ZXJJbnN0YW5jZWRCdWZmZXI9ZnVuY3Rpb24oYyxlKXt2YXIgdCxpO2lmKChpPSh0PXRoaXMuX3VzZXJJbnN0YW5jZWRCdWZmZXJzU3RvcmFnZSk9PT1udWxsfHx0PT09dm9pZCAwP3ZvaWQgMDp0LnZlcnRleEJ1ZmZlcnNbY10pPT09bnVsbHx8aT09PXZvaWQgMHx8aS5kaXNwb3NlKCksIXRoaXMuaW5zdGFuY2VkQnVmZmVycyl7dGhpcy5pbnN0YW5jZWRCdWZmZXJzPXt9O2Zvcihjb25zdCBzIG9mIHRoaXMuaW5zdGFuY2VzKXMuaW5zdGFuY2VkQnVmZmVycz17fTt0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2V8fCh0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2U9e2RhdGE6e30sdmVydGV4QnVmZmVyczp7fSxzdHJpZGVzOnt9LHNpemVzOnt9LHZlcnRleEFycmF5T2JqZWN0czp0aGlzLmdldEVuZ2luZSgpLmdldENhcHMoKS52ZXJ0ZXhBcnJheU9iamVjdD97fTp2b2lkIDB9KX10aGlzLmluc3RhbmNlZEJ1ZmZlcnNbY109bnVsbCx0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2Uuc3RyaWRlc1tjXT1lLHRoaXMuX3VzZXJJbnN0YW5jZWRCdWZmZXJzU3RvcmFnZS5zaXplc1tjXT1lKjMyLHRoaXMuX3VzZXJJbnN0YW5jZWRCdWZmZXJzU3RvcmFnZS5kYXRhW2NdPW5ldyBGbG9hdDMyQXJyYXkodGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlLnNpemVzW2NdKSx0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UudmVydGV4QnVmZmVyc1tjXT1uZXcgZyh0aGlzLmdldEVuZ2luZSgpLHRoaXMuX3VzZXJJbnN0YW5jZWRCdWZmZXJzU3RvcmFnZS5kYXRhW2NdLGMsITAsITEsZSwhMCk7Zm9yKGNvbnN0IHMgb2YgdGhpcy5pbnN0YW5jZXMpcy5pbnN0YW5jZWRCdWZmZXJzW2NdPW51bGw7dGhpcy5faW52YWxpZGF0ZUluc3RhbmNlVmVydGV4QXJyYXlPYmplY3QoKSx0aGlzLl9tYXJrU3ViTWVzaGVzQXNBdHRyaWJ1dGVzRGlydHkoKX0sVy5wcm90b3R5cGUuX3Byb2Nlc3NJbnN0YW5jZWRCdWZmZXJzPWZ1bmN0aW9uKGMsZSl7Y29uc3QgdD1jP2MubGVuZ3RoOjA7Zm9yKGNvbnN0IGkgaW4gdGhpcy5pbnN0YW5jZWRCdWZmZXJzKXtsZXQgcz10aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2Uuc2l6ZXNbaV07Y29uc3Qgcj10aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2Uuc3RyaWRlc1tpXSxuPSh0KzEpKnI7Zm9yKDtzPG47KXMqPTI7dGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlLmRhdGFbaV0ubGVuZ3RoIT1zJiYodGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlLmRhdGFbaV09bmV3IEZsb2F0MzJBcnJheShzKSx0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2Uuc2l6ZXNbaV09cyx0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UudmVydGV4QnVmZmVyc1tpXSYmKHRoaXMuX3VzZXJJbnN0YW5jZWRCdWZmZXJzU3RvcmFnZS52ZXJ0ZXhCdWZmZXJzW2ldLmRpc3Bvc2UoKSx0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UudmVydGV4QnVmZmVyc1tpXT1udWxsKSk7Y29uc3QgYT10aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UuZGF0YVtpXTtsZXQgbz0wO2lmKGUpe2NvbnN0IGg9dGhpcy5pbnN0YW5jZWRCdWZmZXJzW2ldO2gudG9BcnJheT9oLnRvQXJyYXkoYSxvKTpoLmNvcHlUb0FycmF5P2guY29weVRvQXJyYXkoYSxvKTphW29dPWgsbys9cn1mb3IobGV0IGg9MDtoPHQ7aCsrKXtjb25zdCB1PWNbaF0uaW5zdGFuY2VkQnVmZmVyc1tpXTt1LnRvQXJyYXk/dS50b0FycmF5KGEsbyk6dS5jb3B5VG9BcnJheT91LmNvcHlUb0FycmF5KGEsbyk6YVtvXT11LG8rPXJ9dGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlLnZlcnRleEJ1ZmZlcnNbaV0/dGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlLnZlcnRleEJ1ZmZlcnNbaV0udXBkYXRlRGlyZWN0bHkoYSwwKToodGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlLnZlcnRleEJ1ZmZlcnNbaV09bmV3IGcodGhpcy5nZXRFbmdpbmUoKSx0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UuZGF0YVtpXSxpLCEwLCExLHIsITApLHRoaXMuX2ludmFsaWRhdGVJbnN0YW5jZVZlcnRleEFycmF5T2JqZWN0KCkpfX0sVy5wcm90b3R5cGUuX2ludmFsaWRhdGVJbnN0YW5jZVZlcnRleEFycmF5T2JqZWN0PWZ1bmN0aW9uKCl7aWYoISghdGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlfHx0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UudmVydGV4QXJyYXlPYmplY3RzPT09dm9pZCAwKSl7Zm9yKGNvbnN0IGMgaW4gdGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlLnZlcnRleEFycmF5T2JqZWN0cyl0aGlzLmdldEVuZ2luZSgpLnJlbGVhc2VWZXJ0ZXhBcnJheU9iamVjdCh0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UudmVydGV4QXJyYXlPYmplY3RzW2NdKTt0aGlzLl91c2VySW5zdGFuY2VkQnVmZmVyc1N0b3JhZ2UudmVydGV4QXJyYXlPYmplY3RzPXt9fX0sVy5wcm90b3R5cGUuX2Rpc3Bvc2VJbnN0YW5jZVNwZWNpZmljRGF0YT1mdW5jdGlvbigpe2Zvcih0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLmluc3RhbmNlc0J1ZmZlciYmKHRoaXMuX2luc3RhbmNlRGF0YVN0b3JhZ2UuaW5zdGFuY2VzQnVmZmVyLmRpc3Bvc2UoKSx0aGlzLl9pbnN0YW5jZURhdGFTdG9yYWdlLmluc3RhbmNlc0J1ZmZlcj1udWxsKTt0aGlzLmluc3RhbmNlcy5sZW5ndGg7KXRoaXMuaW5zdGFuY2VzWzBdLmRpc3Bvc2UoKTtmb3IoY29uc3QgYyBpbiB0aGlzLmluc3RhbmNlZEJ1ZmZlcnMpdGhpcy5fdXNlckluc3RhbmNlZEJ1ZmZlcnNTdG9yYWdlLnZlcnRleEJ1ZmZlcnNbY10mJnRoaXMuX3VzZXJJbnN0YW5jZWRCdWZmZXJzU3RvcmFnZS52ZXJ0ZXhCdWZmZXJzW2NdLmRpc3Bvc2UoKTt0aGlzLl9pbnZhbGlkYXRlSW5zdGFuY2VWZXJ0ZXhBcnJheU9iamVjdCgpLHRoaXMuaW5zdGFuY2VkQnVmZmVycz17fX07Y29uc3QgV3I9Yz0+SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShjKSksSWw9e2Fzc2V0UGF0aDoiIixlbmFibGVTaGFkb3dzOiExLGdyb3VwSWQ6bnVsbCxpZDpudWxsLGxpZ2h0czpbXSxyb2xsSWQ6bnVsbCxzY2VuZTpudWxsfSxYdD1jbGFzc3tjb25zdHJ1Y3RvcihlLHQpe2J0KHRoaXMsInZhbHVlIiwwKTtidCh0aGlzLCJhc2xlZXAiLCExKTt0aGlzLmNvbmZpZz17Li4uSWwsLi4uZX0sdGhpcy5pZD10aGlzLmNvbmZpZy5pZCE9PXZvaWQgMD90aGlzLmNvbmZpZy5pZDpEYXRlLm5vdygpLHRoaXMuZGllVHlwZT10aGlzLmNvbmZpZy5zaWRlcyx0aGlzLmNvbWJvS2V5PWAke3RoaXMuY29uZmlnLnRoZW1lfV8ke3RoaXMuZGllVHlwZX1gLHRoaXMuc2NlbmU9dCx0aGlzLmNyZWF0ZUluc3RhbmNlKCl9Y3JlYXRlSW5zdGFuY2UoKXtjb25zdCBlPWAke3RoaXMuY29uZmlnLm1lc2hOYW1lfV8ke3RoaXMuZGllVHlwZX1fJHt0aGlzLmNvbmZpZy50aGVtZX0ke3RoaXMuY29uZmlnLmNvbG9yU3VmZml4fWAsdD1gJHtlfS1pbnN0YW5jZS0ke3RoaXMuaWR9YCxpPXRoaXMuc2NlbmUuZ2V0TWVzaEJ5TmFtZShlKS5jcmVhdGVJbnN0YW5jZSh0KTtpZih0aGlzLmNvbmZpZy5jb2xvclN1ZmZpeC5sZW5ndGg+MCl7Y29uc3Qgcz1yZS5Gcm9tSGV4U3RyaW5nKHRoaXMuY29uZmlnLnRoZW1lQ29sb3IpO2kuaW5zdGFuY2VkQnVmZmVycy5jdXN0b21Db2xvcj1zfWkucG9zaXRpb24ueT0tMTAwLGkuc2NhbGluZz1uZXcgcChpLnNjYWxpbmcueCp0aGlzLmNvbmZpZy5zY2FsZSxpLnNjYWxpbmcueSp0aGlzLmNvbmZpZy5zY2FsZSxpLnNjYWxpbmcueip0aGlzLmNvbmZpZy5zY2FsZSksdGhpcy5jb25maWcuZW5hYmxlU2hhZG93cyYmdGhpcy5jb25maWcubGlnaHRzLmRpcmVjdGlvbmFsLnNoYWRvd0dlbmVyYXRvci5hZGRTaGFkb3dDYXN0ZXIoaSksdGhpcy5tZXNoPWl9c3RhdGljIGFzeW5jIGxvYWREaWUoZSx0KXtjb25zdHtzaWRlczppLHRoZW1lOnM9ImRlZmF1bHQiLG1lc2hOYW1lOnIsY29sb3JTdWZmaXg6bn09ZSxhPXIrIl8iK2ksbz1hKyJfIitzK247bGV0IGg9dC5nZXRNZXNoQnlOYW1lKG8pO3JldHVybiBofHwoaD10LmdldE1lc2hCeU5hbWUoYSkuY2xvbmUobykpLGgubWF0ZXJpYWx8fChoLm1hdGVyaWFsPXQuZ2V0TWF0ZXJpYWxCeU5hbWUocytuKSxuLmxlbmd0aD4wJiZoLnJlZ2lzdGVySW5zdGFuY2VkQnVmZmVyKCJjdXN0b21Db2xvciIsMykpLGV9c3RhdGljIGFzeW5jIGxvYWRNb2RlbHMoZSx0KXtjb25zdHttZXNoRmlsZVBhdGg6aSxtZXNoTmFtZTpzLHNjYWxlOnIsZDRGYWNlRG93bjpuPSEwfT1lO2xldCBhPSExLG89ITE7Y29uc3QgaD1hd2FpdCBmZXRjaChgJHtpfWApLnRoZW4obD0+e2lmKGwub2spe2NvbnN0IHU9bC5oZWFkZXJzLmdldCgiY29udGVudC10eXBlIik7aWYodSYmdS5pbmRleE9mKCJhcHBsaWNhdGlvbi9qc29uIikhPT0tMSlyZXR1cm4gbC5qc29uKCk7aWYobC50eXBlJiZsLnR5cGU9PT0iYmFzaWMiKXJldHVybiBsLmpzb24oKTt0aHJvdyBuZXcgRXJyb3IoYEluY29ycmVjdCBjb250ZW50VHlwZTogJHt1fS4gRXhwZWN0ZWQgImFwcGxpY2F0aW9uL2pzb24iIG9yICJiYXNpYyJgKX1lbHNlIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIGxvYWQgM0QgbWVzaCBmaWxlOiAnJHtpfScuIFJlcXVlc3QgcmVqZWN0ZWQgd2l0aCBzdGF0dXMgJHtsLnN0YXR1c306ICR7bC5zdGF0dXNUZXh0fWApfSkuY2F0Y2gobD0+Y29uc29sZS5lcnJvcihsKSk7aWYoaClyZXR1cm4gbGUuSW1wb3J0TWVzaEFzeW5jKG51bGwsbnVsbCwiZGF0YToiK0pTT04uc3RyaW5naWZ5KGgpLHQpLnRoZW4obD0+e2lmKGwubWVzaGVzLmZvckVhY2godT0+e3UubmFtZT09PSJfX3Jvb3RfXyImJnUuZGlzcG9zZSgpLHUubmFtZS5pbmNsdWRlcygiY29sbGlkZXIiKSYmKHUuc2NhbGluZz1uZXcgcCh1LnNjYWxpbmcueCouOSx1LnNjYWxpbmcueSouOSx1LnNjYWxpbmcueiouOSkpLGF8fChhPXUubmFtZT09PSJkMTAwIiksb3x8KG89dS5uYW1lPT09ImQxMCIpLHUuc2V0RW5hYmxlZCghMSksdS5mcmVlemVOb3JtYWxzKCksdS5mcmVlemVXb3JsZE1hdHJpeCgpLHUuaXNQaWNrYWJsZT0hMSx1LmRvTm90U3luY0JvdW5kaW5nSW5mbz0hMCx1Lm5hbWU9cysiXyIrdS5uYW1lfSksIWEmJm8mJih0LmdldE1lc2hCeU5hbWUocysiX2QxMCIpLmNsb25lKHMrIl9kMTAwIiksdC5nZXRNZXNoQnlOYW1lKHMrIl9kMTBfY29sbGlkZXIiKS5jbG9uZShzKyJfZDEwMF9jb2xsaWRlciIpLGguY29sbGlkZXJGYWNlTWFwJiYoaC5jb2xsaWRlckZhY2VNYXAuZDEwMD1XcihoLmNvbGxpZGVyRmFjZU1hcC5kMTApLE9iamVjdC52YWx1ZXMoaC5jb2xsaWRlckZhY2VNYXAuZDEwMCkuZm9yRWFjaCgodSxkKT0+e2guY29sbGlkZXJGYWNlTWFwLmQxMDBbZF09dSoodT09PTEwPzA6MTApfSkpKSwhaC5jb2xsaWRlckZhY2VNYXApdGhyb3cgbmV3IEVycm9yKGAnY29sbGlkZXJGYWNlTWFwJyBkYXRhIG5vdCBmb3VuZCBpbiAke2l9LiBXaXRob3V0IHRoZSBjb2xsaWRlckZhY2VNYXAgZGF0YSBkaWNlIHZhbHVlcyBjYW4gbm90IGJlIHJlc29sdmVkLmApO3QudGhlbWVEYXRhW3NdPXt9LHQudGhlbWVEYXRhW3NdLmNvbGxpZGVyRmFjZU1hcD1oLmNvbGxpZGVyRmFjZU1hcCx0LnRoZW1lRGF0YVtzXS5kNEZhY2VEb3duPW59KS5jYXRjaChsPT5jb25zb2xlLmVycm9yKGwpKSxoLm1lc2hlcy5maWx0ZXIobD0+bC5uYW1lLmluY2x1ZGVzKCJjb2xsaWRlciIpKX11cGRhdGVDb25maWcoZSl7dGhpcy5jb25maWc9ey4uLnRoaXMuY29uZmlnLC4uLmV9fXN0YXRpYyBzZXRWZWN0b3IzKGUsdCxpKXtyZXR1cm4gWHQudmVjdG9yMy5zZXQoZSx0LGkpfXN0YXRpYyBnZXRWZWN0b3IzKCl7cmV0dXJuIFh0LnZlY3RvcjN9c3RhdGljIGFzeW5jIGdldFJvbGxSZXN1bHQoZSx0KXtjb25zdCBpPShzPWUpPT5uZXcgUHJvbWlzZSgocixuKT0+e2NvbnN0IGE9ZS5jb25maWcucGFyZW50TWVzaHx8ZS5jb25maWcubWVzaE5hbWUsbz10LnRoZW1lRGF0YVthXS5jb2xsaWRlckZhY2VNYXAsaD10LnRoZW1lRGF0YVthXS5kNEZhY2VEb3duO2lmKCFvW3MuZGllVHlwZV0pdGhyb3cgbmV3IEVycm9yKGBObyBjb2xsaWRlckZhY2VNYXAgZGF0YSBmb3IgJHtzLmRpZVR5cGV9YCk7Y29uc3QgbD10LmdldE1lc2hCeU5hbWUoYCR7YX1fJHtzLmRpZVR5cGV9X2NvbGxpZGVyYCkuY3JlYXRlSW5zdGFuY2UoYCR7YX1fJHtzLmRpZVR5cGV9LWhpdGJveC0ke3MuaWR9YCk7bC5pc1BpY2thYmxlPSEwLGwuaXNWaXNpYmxlPSEwLGwuc2V0RW5hYmxlZCghMCksbC5wb3NpdGlvbj1zLm1lc2gucG9zaXRpb24sbC5yb3RhdGlvblF1YXRlcm5pb249cy5tZXNoLnJvdGF0aW9uUXVhdGVybmlvbjtsZXQgdT1YdC5zZXRWZWN0b3IzKDAsMSwwKTtzLmRpZVR5cGU9PT0iZDQiJiZoJiYodT1YdC5zZXRWZWN0b3IzKDAsLTEsMCkpLFh0LnJheS5kaXJlY3Rpb249dSxYdC5yYXkub3JpZ2luPWUubWVzaC5wb3NpdGlvbjtjb25zdCBkPXQucGlja1dpdGhSYXkoWHQucmF5KTtpZihsLmRpc3Bvc2UoKSxzLnZhbHVlPW9bcy5kaWVUeXBlXVtkLmZhY2VJZF0scy52YWx1ZT09PXZvaWQgMCl0aHJvdyBuZXcgRXJyb3IoYGNvbGxpZGVyRmFjZU1hcCBFcnJvcjogTm8gdmFsdWUgZm91bmQgZm9yICR7cy5kaWVUeXBlfSBtZXNoIGZhY2UgJHtkLmZhY2VJZH1gKTtyZXR1cm4gcihzLnZhbHVlKX0pLmNhdGNoKHI9PmNvbnNvbGUuZXJyb3IocikpO3JldHVybiBlLm1lc2g/YXdhaXQgaSgpOmUudmFsdWV9fTtsZXQgUHQ9WHQ7YnQoUHQsInJheSIsbmV3IF9lKHAuWmVybygpLHAuWmVybygpLDEpKSxidChQdCwidmVjdG9yMyIscC5aZXJvKCkpO2NsYXNzIFBse2NvbnN0cnVjdG9yKCl7fX1jbGFzcyBpaSBleHRlbmRzIEJ7Y29uc3RydWN0b3IoZSx0KXtzdXBlcihlLHQpLHRoaXMuQ3VzdG9tUGFydHM9bmV3IFBsLHRoaXMuY3VzdG9tU2hhZGVyTmFtZVJlc29sdmU9dGhpcy5CdWlsZGVyLHRoaXMuRnJhZ21lbnRTaGFkZXI9UGUuU2hhZGVyc1N0b3JlLmRlZmF1bHRQaXhlbFNoYWRlcix0aGlzLlZlcnRleFNoYWRlcj1QZS5TaGFkZXJzU3RvcmUuZGVmYXVsdFZlcnRleFNoYWRlcn1BdHRhY2hBZnRlckJpbmQoZSx0KXtpZih0aGlzLl9uZXdVbmlmb3JtSW5zdGFuY2VzKWZvcihjb25zdCBpIGluIHRoaXMuX25ld1VuaWZvcm1JbnN0YW5jZXMpe2NvbnN0IHM9aS50b1N0cmluZygpLnNwbGl0KCItIik7c1swXT09InZlYzIiP3Quc2V0VmVjdG9yMihzWzFdLHRoaXMuX25ld1VuaWZvcm1JbnN0YW5jZXNbaV0pOnNbMF09PSJ2ZWMzIj90LnNldFZlY3RvcjMoc1sxXSx0aGlzLl9uZXdVbmlmb3JtSW5zdGFuY2VzW2ldKTpzWzBdPT0idmVjNCI/dC5zZXRWZWN0b3I0KHNbMV0sdGhpcy5fbmV3VW5pZm9ybUluc3RhbmNlc1tpXSk6c1swXT09Im1hdDQiP3Quc2V0TWF0cml4KHNbMV0sdGhpcy5fbmV3VW5pZm9ybUluc3RhbmNlc1tpXSk6c1swXT09ImZsb2F0IiYmdC5zZXRGbG9hdChzWzFdLHRoaXMuX25ld1VuaWZvcm1JbnN0YW5jZXNbaV0pfWlmKHRoaXMuX25ld1NhbXBsZXJJbnN0YW5jZXMpZm9yKGNvbnN0IGkgaW4gdGhpcy5fbmV3U2FtcGxlckluc3RhbmNlcyl7Y29uc3Qgcz1pLnRvU3RyaW5nKCkuc3BsaXQoIi0iKTtzWzBdPT0ic2FtcGxlcjJEIiYmdGhpcy5fbmV3U2FtcGxlckluc3RhbmNlc1tpXS5pc1JlYWR5JiZ0aGlzLl9uZXdTYW1wbGVySW5zdGFuY2VzW2ldLmlzUmVhZHkoKSYmdC5zZXRUZXh0dXJlKHNbMV0sdGhpcy5fbmV3U2FtcGxlckluc3RhbmNlc1tpXSl9fVJldmlld1VuaWZvcm0oZSx0KXtpZihlPT0idW5pZm9ybSImJnRoaXMuX25ld1VuaWZvcm1zKWZvcihsZXQgaT0wO2k8dGhpcy5fbmV3VW5pZm9ybXMubGVuZ3RoO2krKyl0aGlzLl9jdXN0b21Vbmlmb3JtW2ldLmluZGV4T2YoInNhbXBsZXIiKT09LTEmJnQucHVzaCh0aGlzLl9uZXdVbmlmb3Jtc1tpXSk7aWYoZT09InNhbXBsZXIiJiZ0aGlzLl9uZXdVbmlmb3Jtcylmb3IobGV0IGk9MDtpPHRoaXMuX25ld1VuaWZvcm1zLmxlbmd0aDtpKyspdGhpcy5fY3VzdG9tVW5pZm9ybVtpXS5pbmRleE9mKCJzYW1wbGVyIikhPS0xJiZ0LnB1c2godGhpcy5fbmV3VW5pZm9ybXNbaV0pO3JldHVybiB0fUJ1aWxkZXIoZSx0LGkscyxyLG4pe2lmKG4mJnRoaXMuX2N1c3RvbUF0dHJpYnV0ZXMmJnRoaXMuX2N1c3RvbUF0dHJpYnV0ZXMubGVuZ3RoPjAmJm4ucHVzaCguLi50aGlzLl9jdXN0b21BdHRyaWJ1dGVzKSx0aGlzLlJldmlld1VuaWZvcm0oInVuaWZvcm0iLHQpLHRoaXMuUmV2aWV3VW5pZm9ybSgic2FtcGxlciIscyksdGhpcy5faXNDcmVhdGVkU2hhZGVyKXJldHVybiB0aGlzLl9jcmVhdGVkU2hhZGVyTmFtZTt0aGlzLl9pc0NyZWF0ZWRTaGFkZXI9ITEsaWkuU2hhZGVySW5kZXhlcisrO2NvbnN0IGE9ImN1c3RvbV8iK2lpLlNoYWRlckluZGV4ZXIsbz10aGlzLl9hZnRlckJpbmQuYmluZCh0aGlzKTtyZXR1cm4gdGhpcy5fYWZ0ZXJCaW5kPShoLGwpPT57aWYobCl7dGhpcy5BdHRhY2hBZnRlckJpbmQoaCxsKTt0cnl7byhoLGwpfWNhdGNoe319fSxQZS5TaGFkZXJzU3RvcmVbYSsiVmVydGV4U2hhZGVyIl09dGhpcy5WZXJ0ZXhTaGFkZXIucmVwbGFjZSgiI2RlZmluZSBDVVNUT01fVkVSVEVYX0JFR0lOIix0aGlzLkN1c3RvbVBhcnRzLlZlcnRleF9CZWdpbj90aGlzLkN1c3RvbVBhcnRzLlZlcnRleF9CZWdpbjoiIikucmVwbGFjZSgiI2RlZmluZSBDVVNUT01fVkVSVEVYX0RFRklOSVRJT05TIiwodGhpcy5fY3VzdG9tVW5pZm9ybT90aGlzLl9jdXN0b21Vbmlmb3JtLmpvaW4oYApgKToiIikrKHRoaXMuQ3VzdG9tUGFydHMuVmVydGV4X0RlZmluaXRpb25zP3RoaXMuQ3VzdG9tUGFydHMuVmVydGV4X0RlZmluaXRpb25zOiIiKSkucmVwbGFjZSgiI2RlZmluZSBDVVNUT01fVkVSVEVYX01BSU5fQkVHSU4iLHRoaXMuQ3VzdG9tUGFydHMuVmVydGV4X01haW5CZWdpbj90aGlzLkN1c3RvbVBhcnRzLlZlcnRleF9NYWluQmVnaW46IiIpLnJlcGxhY2UoIiNkZWZpbmUgQ1VTVE9NX1ZFUlRFWF9VUERBVEVfUE9TSVRJT04iLHRoaXMuQ3VzdG9tUGFydHMuVmVydGV4X0JlZm9yZV9Qb3NpdGlvblVwZGF0ZWQ/dGhpcy5DdXN0b21QYXJ0cy5WZXJ0ZXhfQmVmb3JlX1Bvc2l0aW9uVXBkYXRlZDoiIikucmVwbGFjZSgiI2RlZmluZSBDVVNUT01fVkVSVEVYX1VQREFURV9OT1JNQUwiLHRoaXMuQ3VzdG9tUGFydHMuVmVydGV4X0JlZm9yZV9Ob3JtYWxVcGRhdGVkP3RoaXMuQ3VzdG9tUGFydHMuVmVydGV4X0JlZm9yZV9Ob3JtYWxVcGRhdGVkOiIiKS5yZXBsYWNlKCIjZGVmaW5lIENVU1RPTV9WRVJURVhfTUFJTl9FTkQiLHRoaXMuQ3VzdG9tUGFydHMuVmVydGV4X01haW5FbmQ/dGhpcy5DdXN0b21QYXJ0cy5WZXJ0ZXhfTWFpbkVuZDoiIiksdGhpcy5DdXN0b21QYXJ0cy5WZXJ0ZXhfQWZ0ZXJfV29ybGRQb3NDb21wdXRlZCYmKFBlLlNoYWRlcnNTdG9yZVthKyJWZXJ0ZXhTaGFkZXIiXT1QZS5TaGFkZXJzU3RvcmVbYSsiVmVydGV4U2hhZGVyIl0ucmVwbGFjZSgiI2RlZmluZSBDVVNUT01fVkVSVEVYX1VQREFURV9XT1JMRFBPUyIsdGhpcy5DdXN0b21QYXJ0cy5WZXJ0ZXhfQWZ0ZXJfV29ybGRQb3NDb21wdXRlZCkpLFBlLlNoYWRlcnNTdG9yZVthKyJQaXhlbFNoYWRlciJdPXRoaXMuRnJhZ21lbnRTaGFkZXIucmVwbGFjZSgiI2RlZmluZSBDVVNUT01fRlJBR01FTlRfQkVHSU4iLHRoaXMuQ3VzdG9tUGFydHMuRnJhZ21lbnRfQmVnaW4/dGhpcy5DdXN0b21QYXJ0cy5GcmFnbWVudF9CZWdpbjoiIikucmVwbGFjZSgiI2RlZmluZSBDVVNUT01fRlJBR01FTlRfTUFJTl9CRUdJTiIsdGhpcy5DdXN0b21QYXJ0cy5GcmFnbWVudF9NYWluQmVnaW4/dGhpcy5DdXN0b21QYXJ0cy5GcmFnbWVudF9NYWluQmVnaW46IiIpLnJlcGxhY2UoIiNkZWZpbmUgQ1VTVE9NX0ZSQUdNRU5UX0RFRklOSVRJT05TIiwodGhpcy5fY3VzdG9tVW5pZm9ybT90aGlzLl9jdXN0b21Vbmlmb3JtLmpvaW4oYApgKToiIikrKHRoaXMuQ3VzdG9tUGFydHMuRnJhZ21lbnRfRGVmaW5pdGlvbnM/dGhpcy5DdXN0b21QYXJ0cy5GcmFnbWVudF9EZWZpbml0aW9uczoiIikpLnJlcGxhY2UoIiNkZWZpbmUgQ1VTVE9NX0ZSQUdNRU5UX1VQREFURV9ESUZGVVNFIix0aGlzLkN1c3RvbVBhcnRzLkZyYWdtZW50X0N1c3RvbV9EaWZmdXNlP3RoaXMuQ3VzdG9tUGFydHMuRnJhZ21lbnRfQ3VzdG9tX0RpZmZ1c2U6IiIpLnJlcGxhY2UoIiNkZWZpbmUgQ1VTVE9NX0ZSQUdNRU5UX1VQREFURV9BTFBIQSIsdGhpcy5DdXN0b21QYXJ0cy5GcmFnbWVudF9DdXN0b21fQWxwaGE/dGhpcy5DdXN0b21QYXJ0cy5GcmFnbWVudF9DdXN0b21fQWxwaGE6IiIpLnJlcGxhY2UoIiNkZWZpbmUgQ1VTVE9NX0ZSQUdNRU5UX0JFRk9SRV9MSUdIVFMiLHRoaXMuQ3VzdG9tUGFydHMuRnJhZ21lbnRfQmVmb3JlX0xpZ2h0cz90aGlzLkN1c3RvbVBhcnRzLkZyYWdtZW50X0JlZm9yZV9MaWdodHM6IiIpLnJlcGxhY2UoIiNkZWZpbmUgQ1VTVE9NX0ZSQUdNRU5UX0JFRk9SRV9GUkFHQ09MT1IiLHRoaXMuQ3VzdG9tUGFydHMuRnJhZ21lbnRfQmVmb3JlX0ZyYWdDb2xvcj90aGlzLkN1c3RvbVBhcnRzLkZyYWdtZW50X0JlZm9yZV9GcmFnQ29sb3I6IiIpLnJlcGxhY2UoIiNkZWZpbmUgQ1VTVE9NX0ZSQUdNRU5UX01BSU5fRU5EIix0aGlzLkN1c3RvbVBhcnRzLkZyYWdtZW50X01haW5FbmQ/dGhpcy5DdXN0b21QYXJ0cy5GcmFnbWVudF9NYWluRW5kOiIiKSx0aGlzLkN1c3RvbVBhcnRzLkZyYWdtZW50X0JlZm9yZV9Gb2cmJihQZS5TaGFkZXJzU3RvcmVbYSsiUGl4ZWxTaGFkZXIiXT1QZS5TaGFkZXJzU3RvcmVbYSsiUGl4ZWxTaGFkZXIiXS5yZXBsYWNlKCIjZGVmaW5lIENVU1RPTV9GUkFHTUVOVF9CRUZPUkVfRk9HIix0aGlzLkN1c3RvbVBhcnRzLkZyYWdtZW50X0JlZm9yZV9Gb2cpKSx0aGlzLl9pc0NyZWF0ZWRTaGFkZXI9ITAsdGhpcy5fY3JlYXRlZFNoYWRlck5hbWU9YSxhfUFkZFVuaWZvcm0oZSx0LGkpe3JldHVybiB0aGlzLl9jdXN0b21Vbmlmb3JtfHwodGhpcy5fY3VzdG9tVW5pZm9ybT1uZXcgQXJyYXksdGhpcy5fbmV3VW5pZm9ybXM9bmV3IEFycmF5LHRoaXMuX25ld1NhbXBsZXJJbnN0YW5jZXM9e30sdGhpcy5fbmV3VW5pZm9ybUluc3RhbmNlcz17fSksaSYmKHQuaW5kZXhPZigic2FtcGxlciIpIT0tMT90aGlzLl9uZXdTYW1wbGVySW5zdGFuY2VzW3QrIi0iK2VdPWk6dGhpcy5fbmV3VW5pZm9ybUluc3RhbmNlc1t0KyItIitlXT1pKSx0aGlzLl9jdXN0b21Vbmlmb3JtLnB1c2goInVuaWZvcm0gIit0KyIgIitlKyI7IiksdGhpcy5fbmV3VW5pZm9ybXMucHVzaChlKSx0aGlzfUFkZEF0dHJpYnV0ZShlKXtyZXR1cm4gdGhpcy5fY3VzdG9tQXR0cmlidXRlc3x8KHRoaXMuX2N1c3RvbUF0dHJpYnV0ZXM9W10pLHRoaXMuX2N1c3RvbUF0dHJpYnV0ZXMucHVzaChlKSx0aGlzfUZyYWdtZW50X0JlZ2luKGUpe3JldHVybiB0aGlzLkN1c3RvbVBhcnRzLkZyYWdtZW50X0JlZ2luPWUsdGhpc31GcmFnbWVudF9EZWZpbml0aW9ucyhlKXtyZXR1cm4gdGhpcy5DdXN0b21QYXJ0cy5GcmFnbWVudF9EZWZpbml0aW9ucz1lLHRoaXN9RnJhZ21lbnRfTWFpbkJlZ2luKGUpe3JldHVybiB0aGlzLkN1c3RvbVBhcnRzLkZyYWdtZW50X01haW5CZWdpbj1lLHRoaXN9RnJhZ21lbnRfTWFpbkVuZChlKXtyZXR1cm4gdGhpcy5DdXN0b21QYXJ0cy5GcmFnbWVudF9NYWluRW5kPWUsdGhpc31GcmFnbWVudF9DdXN0b21fRGlmZnVzZShlKXtyZXR1cm4gdGhpcy5DdXN0b21QYXJ0cy5GcmFnbWVudF9DdXN0b21fRGlmZnVzZT1lLnJlcGxhY2UoInJlc3VsdCIsImRpZmZ1c2VDb2xvciIpLHRoaXN9RnJhZ21lbnRfQ3VzdG9tX0FscGhhKGUpe3JldHVybiB0aGlzLkN1c3RvbVBhcnRzLkZyYWdtZW50X0N1c3RvbV9BbHBoYT1lLnJlcGxhY2UoInJlc3VsdCIsImFscGhhIiksdGhpc31GcmFnbWVudF9CZWZvcmVfTGlnaHRzKGUpe3JldHVybiB0aGlzLkN1c3RvbVBhcnRzLkZyYWdtZW50X0JlZm9yZV9MaWdodHM9ZSx0aGlzfUZyYWdtZW50X0JlZm9yZV9Gb2coZSl7cmV0dXJuIHRoaXMuQ3VzdG9tUGFydHMuRnJhZ21lbnRfQmVmb3JlX0ZvZz1lLHRoaXN9RnJhZ21lbnRfQmVmb3JlX0ZyYWdDb2xvcihlKXtyZXR1cm4gdGhpcy5DdXN0b21QYXJ0cy5GcmFnbWVudF9CZWZvcmVfRnJhZ0NvbG9yPWUucmVwbGFjZSgicmVzdWx0IiwiY29sb3IiKSx0aGlzfVZlcnRleF9CZWdpbihlKXtyZXR1cm4gdGhpcy5DdXN0b21QYXJ0cy5WZXJ0ZXhfQmVnaW49ZSx0aGlzfVZlcnRleF9EZWZpbml0aW9ucyhlKXtyZXR1cm4gdGhpcy5DdXN0b21QYXJ0cy5WZXJ0ZXhfRGVmaW5pdGlvbnM9ZSx0aGlzfVZlcnRleF9NYWluQmVnaW4oZSl7cmV0dXJuIHRoaXMuQ3VzdG9tUGFydHMuVmVydGV4X01haW5CZWdpbj1lLHRoaXN9VmVydGV4X0JlZm9yZV9Qb3NpdGlvblVwZGF0ZWQoZSl7cmV0dXJuIHRoaXMuQ3VzdG9tUGFydHMuVmVydGV4X0JlZm9yZV9Qb3NpdGlvblVwZGF0ZWQ9ZS5yZXBsYWNlKCJyZXN1bHQiLCJwb3NpdGlvblVwZGF0ZWQiKSx0aGlzfVZlcnRleF9CZWZvcmVfTm9ybWFsVXBkYXRlZChlKXtyZXR1cm4gdGhpcy5DdXN0b21QYXJ0cy5WZXJ0ZXhfQmVmb3JlX05vcm1hbFVwZGF0ZWQ9ZS5yZXBsYWNlKCJyZXN1bHQiLCJub3JtYWxVcGRhdGVkIiksdGhpc31WZXJ0ZXhfQWZ0ZXJfV29ybGRQb3NDb21wdXRlZChlKXtyZXR1cm4gdGhpcy5DdXN0b21QYXJ0cy5WZXJ0ZXhfQWZ0ZXJfV29ybGRQb3NDb21wdXRlZD1lLHRoaXN9VmVydGV4X01haW5FbmQoZSl7cmV0dXJuIHRoaXMuQ3VzdG9tUGFydHMuVmVydGV4X01haW5FbmQ9ZSx0aGlzfX1paS5TaGFkZXJJbmRleGVyPTEsaXQoIkJBQllMT04uQ3VzdG9tTWF0ZXJpYWwiLGlpKSxpaS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oYyl7Y29uc3QgZT10aGlzLHQ9YWUuQ2xvbmUoKCk9Pm5ldyBpaShjLHRoaXMuZ2V0U2NlbmUoKSksdGhpcyk7cmV0dXJuIHQubmFtZT1jLHQuaWQ9Yyx0LkN1c3RvbVBhcnRzLkZyYWdtZW50X0JlZ2luPWUuQ3VzdG9tUGFydHMuRnJhZ21lbnRfQmVnaW4sdC5DdXN0b21QYXJ0cy5GcmFnbWVudF9EZWZpbml0aW9ucz1lLkN1c3RvbVBhcnRzLkZyYWdtZW50X0RlZmluaXRpb25zLHQuQ3VzdG9tUGFydHMuRnJhZ21lbnRfTWFpbkJlZ2luPWUuQ3VzdG9tUGFydHMuRnJhZ21lbnRfTWFpbkJlZ2luLHQuQ3VzdG9tUGFydHMuRnJhZ21lbnRfQ3VzdG9tX0RpZmZ1c2U9ZS5DdXN0b21QYXJ0cy5GcmFnbWVudF9DdXN0b21fRGlmZnVzZSx0LkN1c3RvbVBhcnRzLkZyYWdtZW50X0JlZm9yZV9MaWdodHM9ZS5DdXN0b21QYXJ0cy5GcmFnbWVudF9CZWZvcmVfTGlnaHRzLHQuQ3VzdG9tUGFydHMuRnJhZ21lbnRfQmVmb3JlX0ZvZz1lLkN1c3RvbVBhcnRzLkZyYWdtZW50X0JlZm9yZV9Gb2csdC5DdXN0b21QYXJ0cy5GcmFnbWVudF9DdXN0b21fQWxwaGE9ZS5DdXN0b21QYXJ0cy5GcmFnbWVudF9DdXN0b21fQWxwaGEsdC5DdXN0b21QYXJ0cy5GcmFnbWVudF9CZWZvcmVfRnJhZ0NvbG9yPWUuQ3VzdG9tUGFydHMuRnJhZ21lbnRfQmVmb3JlX0ZyYWdDb2xvcix0LkN1c3RvbVBhcnRzLlZlcnRleF9CZWdpbj1lLkN1c3RvbVBhcnRzLlZlcnRleF9CZWdpbix0LkN1c3RvbVBhcnRzLlZlcnRleF9EZWZpbml0aW9ucz1lLkN1c3RvbVBhcnRzLlZlcnRleF9EZWZpbml0aW9ucyx0LkN1c3RvbVBhcnRzLlZlcnRleF9NYWluQmVnaW49ZS5DdXN0b21QYXJ0cy5WZXJ0ZXhfTWFpbkJlZ2luLHQuQ3VzdG9tUGFydHMuVmVydGV4X0JlZm9yZV9Qb3NpdGlvblVwZGF0ZWQ9ZS5DdXN0b21QYXJ0cy5WZXJ0ZXhfQmVmb3JlX1Bvc2l0aW9uVXBkYXRlZCx0LkN1c3RvbVBhcnRzLlZlcnRleF9CZWZvcmVfTm9ybWFsVXBkYXRlZD1lLkN1c3RvbVBhcnRzLlZlcnRleF9CZWZvcmVfTm9ybWFsVXBkYXRlZCx0LkN1c3RvbVBhcnRzLlZlcnRleF9BZnRlcl9Xb3JsZFBvc0NvbXB1dGVkPWUuQ3VzdG9tUGFydHMuVmVydGV4X0FmdGVyX1dvcmxkUG9zQ29tcHV0ZWQsdC5DdXN0b21QYXJ0cy5WZXJ0ZXhfTWFpbkVuZD1lLkN1c3RvbVBhcnRzLlZlcnRleF9NYWluRW5kLHR9O2NsYXNzIERse2NvbnN0cnVjdG9yKGUpe2J0KHRoaXMsImxvYWRlZFRoZW1lcyIse30pO2J0KHRoaXMsInRoZW1lRGF0YSIse30pO3RoaXMuc2NlbmU9ZS5zY2VuZX1hc3luYyBsb2FkU3RhbmRhcmRNYXRlcmlhbChlKXtjb25zdHt0aGVtZTp0LG1hdGVyaWFsOml9PWUscz1uZXcgQih0LHRoaXMuc2NlbmUpO2kuZGlmZnVzZVRleHR1cmUmJihzLmRpZmZ1c2VUZXh0dXJlPWF3YWl0IHRoaXMuZ2V0VGV4dHVyZSgiZGlmZnVzZSIsZSkpLGkuYnVtcFRleHR1cmUmJihzLmJ1bXBUZXh0dXJlPWF3YWl0IHRoaXMuZ2V0VGV4dHVyZSgiYnVtcCIsZSkpLGkuc3BlY3VsYXJUZXh0dXJlJiYocy5zcGVjdWxhclRleHR1cmU9YXdhaXQgdGhpcy5nZXRUZXh0dXJlKCJzcGVjdWxhciIsZSkpLHMuYWxsb3dTaGFkZXJIb3RTd2FwcGluZz0hMX1hc3luYyBsb2FkQ29sb3JNYXRlcmlhbChlKXtjb25zdHt0aGVtZTp0LG1hdGVyaWFsOml9PWUscz1uZXcgaWkodCsiX2xpZ2h0Iix0aGlzLnNjZW5lKSxyPVdyKGUpO2kuZGlmZnVzZVRleHR1cmUmJmkuZGlmZnVzZVRleHR1cmUubGlnaHQmJihyLm1hdGVyaWFsLmRpZmZ1c2VUZXh0dXJlPWUubWF0ZXJpYWwuZGlmZnVzZVRleHR1cmUubGlnaHQscy5kaWZmdXNlVGV4dHVyZT1hd2FpdCB0aGlzLmdldFRleHR1cmUoImRpZmZ1c2UiLHIpKSxpLmJ1bXBUZXh0dXJlJiYocy5idW1wVGV4dHVyZT1hd2FpdCB0aGlzLmdldFRleHR1cmUoImJ1bXAiLGUpKSxpLnNwZWN1bGFyVGV4dHVyZSYmKHMuc3BlY3VsYXJUZXh0dXJlPWF3YWl0IHRoaXMuZ2V0VGV4dHVyZSgic3BlY3VsYXIiLGUpKSxzLmFsbG93U2hhZGVySG90U3dhcHBpbmc9ITEscy5WZXJ0ZXhfRGVmaW5pdGlvbnMoYAogICAgICBhdHRyaWJ1dGUgdmVjMyBjdXN0b21Db2xvcjsKICAgICAgdmFyeWluZyB2ZWMzIHZDb2xvcjsKICAgIGApLlZlcnRleF9NYWluRW5kKGAKICAgICAgdkNvbG9yID0gY3VzdG9tQ29sb3I7CiAgICBgKS5GcmFnbWVudF9EZWZpbml0aW9ucyhgCiAgICAgIHZhcnlpbmcgdmVjMyB2Q29sb3I7CiAgICBgKS5GcmFnbWVudF9DdXN0b21fRGlmZnVzZShgCiAgICAgIGJhc2VDb2xvci5yZ2IgPSBtaXgodkNvbG9yLnJnYiwgYmFzZUNvbG9yLnJnYiwgYmFzZUNvbG9yLmEpOwogICAgYCkscy5BZGRBdHRyaWJ1dGUoImN1c3RvbUNvbG9yIik7Y29uc3Qgbj1zLmNsb25lKHQrIl9kYXJrIik7aS5kaWZmdXNlVGV4dHVyZSYmaS5kaWZmdXNlVGV4dHVyZS5kYXJrJiYoci5tYXRlcmlhbC5kaWZmdXNlVGV4dHVyZT1lLm1hdGVyaWFsLmRpZmZ1c2VUZXh0dXJlLmRhcmssbi5kaWZmdXNlVGV4dHVyZT1hd2FpdCB0aGlzLmdldFRleHR1cmUoImRpZmZ1c2UiLHIpKSxuLkFkZEF0dHJpYnV0ZSgiY3VzdG9tQ29sb3IiKX1hc3luYyBnZXRUZXh0dXJlKGUsdCl7Y29uc3R7YmFzZVBhdGg6aSxtYXRlcmlhbDpzLHRoZW1lOnJ9PXQ7bGV0IG47Y29uc3QgYT1lKyJMZXZlbCIsbz1lKyJUZXh0dXJlIjt0cnl7c3dpdGNoKGUpe2Nhc2UiZGlmZnVzZSI6bj1hd2FpdCB0aGlzLmltcG9ydFRleHR1cmVBc3luYyhgJHtpfS8ke3Nbb119YCxyKSxzW2FdJiYobi5sZXZlbD1zW2FdKTticmVhaztjYXNlImJ1bXAiOm49YXdhaXQgdGhpcy5pbXBvcnRUZXh0dXJlQXN5bmMoYCR7aX0vJHtzW29dfWAsciksc1thXSYmKG4ubGV2ZWw9c1thXSk7YnJlYWs7Y2FzZSJzcGVjdWxhciI6bj1hd2FpdCB0aGlzLmltcG9ydFRleHR1cmVBc3luYyhgJHtpfS8ke3Nbb119YCxyKSxzLnNwZWN1bGFyUG93ZXImJihuLnNwZWN1bGFyUG93ZXI9cy5zcGVjdWxhclBvd2VyKTticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihgVGV4dHVyZSB0eXBlOiAke2V9IGlzIG5vdCBzdXBwb3J0ZWRgKX19Y2F0Y2goaCl7Y29uc29sZS5lcnJvcihoKX1yZXR1cm4gbn1hc3luYyBpbXBvcnRUZXh0dXJlQXN5bmMoZSx0KXtyZXR1cm4gbmV3IFByb21pc2UoKGkscyk9PntsZXQgcj1lLm1hdGNoKC9eKC4qXC8pKC4qKSQvKSxuPW5ldyBOKGUsdGhpcy5zY2VuZSx2b2lkIDAsITAsdm9pZCAwLCgpPT5pKG4pLCgpPT5zKGBVbmFibGUgdG8gbG9hZCB0ZXh0dXJlICcke3JbMl19JyBmb3IgdGhlbWU6ICcke3R9Jy4gQ2hlY2sgdGhhdCB5b3VyIGFzc2V0UGF0aCBpcyBjb25maWd1cmVkIGNvcnJlY3RseSBhbmQgdGhhdCB0aGUgZmlsZXMgZXhpc3QgYXQgcGF0aDogJyR7clsxXX0nYCkpfSkuY2F0Y2goaT0+Y29uc29sZS5lcnJvcihpKSl9YXN5bmMgbG9hZChlKXtjb25zdHttYXRlcmlhbDp0fT1lO3QudHlwZT09PSJjb2xvciI/YXdhaXQgdGhpcy5sb2FkQ29sb3JNYXRlcmlhbChlKTp0LnR5cGU9PT0ic3RhbmRhcmQiP2F3YWl0IHRoaXMubG9hZFN0YW5kYXJkTWF0ZXJpYWwoZSk6Y29uc29sZS5lcnJvcihgTWF0ZXJpYWwgdHlwZTogJHt0LnR5cGV9IG5vdCBzdXBwb3J0ZWRgKX19Y2xhc3MgRmx7Y29uc3RydWN0b3IoZSl7bnQodGhpcyx1cyk7YnQodGhpcywiY29uZmlnIik7YnQodGhpcywiaW5pdGlhbGl6ZWQiLCExKTtudCh0aGlzLFhlLHt9KTtudCh0aGlzLEFpLDApO250KHRoaXMsRnQsMCk7bnQodGhpcyxSaSxbXSk7bnQodGhpcyxNdCx2b2lkIDApO250KHRoaXMsVHQsdm9pZCAwKTtudCh0aGlzLEplLHZvaWQgMCk7bnQodGhpcyxjcyx2b2lkIDApO250KHRoaXMsQXQsdm9pZCAwKTtudCh0aGlzLFZpLHZvaWQgMCk7bnQodGhpcyxXaSx2b2lkIDApO250KHRoaXMsZ3Qsdm9pZCAwKTtudCh0aGlzLHppLHt9KTtidCh0aGlzLCJub29wIiwoKT0+e30pO2J0KHRoaXMsImRpY2VCdWZmZXJWaWV3IixuZXcgRmxvYXQzMkFycmF5KDhlMykpO3RoaXMub25Jbml0Q29tcGxldGU9ZS5vbkluaXRDb21wbGV0ZXx8dGhpcy5ub29wLHRoaXMub25UaGVtZUxvYWRlZD1lLm9uVGhlbWVMb2FkZWR8fHRoaXMubm9vcCx0aGlzLm9uUm9sbFJlc3VsdD1lLm9uUm9sbFJlc3VsdHx8dGhpcy5ub29wLHRoaXMub25Sb2xsQ29tcGxldGU9ZS5vblJvbGxDb21wbGV0ZXx8dGhpcy5ub29wLHRoaXMub25EaWVSZW1vdmVkPWUub25EaWVSZW1vdmVkfHx0aGlzLm5vb3AsdGhpcy5pbml0aWFsaXplZD10aGlzLmluaXRTY2VuZShlKX1hc3luYyBpbml0U2NlbmUoZSl7bHQodGhpcyxNdCxlLmNhbnZhcyksWSh0aGlzLE10KS53aWR0aD1lLndpZHRoLFkodGhpcyxNdCkuaGVpZ2h0PWUuaGVpZ2h0LHRoaXMuY29uZmlnPWUub3B0aW9ucyxsdCh0aGlzLFR0LGduKFkodGhpcyxNdCkpKSxsdCh0aGlzLEplLEtuKHtlbmdpbmU6WSh0aGlzLFR0KX0pKSxsdCh0aGlzLGNzLFluKHtlbmdpbmU6WSh0aGlzLFR0KSxzY2VuZTpZKHRoaXMsSmUpfSkpLGx0KHRoaXMsQXQsQnIoe2VuYWJsZVNoYWRvd3M6dGhpcy5jb25maWcuZW5hYmxlU2hhZG93cyxzaGFkb3dUcmFuc3BhcmVuY3k6dGhpcy5jb25maWcuc2hhZG93VHJhbnNwYXJlbmN5LGludGVuc2l0eTp0aGlzLmNvbmZpZy5saWdodEludGVuc2l0eSxzY2VuZTpZKHRoaXMsSmUpfSkpLGx0KHRoaXMsVmksbmV3IFJsKHtlbmFibGVTaGFkb3dzOnRoaXMuY29uZmlnLmVuYWJsZVNoYWRvd3MsYXNwZWN0OlkodGhpcyxNdCkud2lkdGgvWSh0aGlzLE10KS5oZWlnaHQsbGlnaHRzOlkodGhpcyxBdCksc2NlbmU6WSh0aGlzLEplKX0pKSxsdCh0aGlzLFdpLG5ldyBEbCh7c2NlbmU6WSh0aGlzLEplKX0pKSx0aGlzLm9uSW5pdENvbXBsZXRlKCl9Y29ubmVjdChlKXtsdCh0aGlzLGd0LGUpLFkodGhpcyxndCkucG9zdE1lc3NhZ2Uoe2FjdGlvbjoiaW5pdEJ1ZmZlciIsZGljZUJ1ZmZlcjp0aGlzLmRpY2VCdWZmZXJWaWV3LmJ1ZmZlcn0sW3RoaXMuZGljZUJ1ZmZlclZpZXcuYnVmZmVyXSksWSh0aGlzLGd0KS5vbm1lc3NhZ2U9dD0+e3N3aXRjaCh0LmRhdGEuYWN0aW9uKXtjYXNlInVwZGF0ZXMiOnRoaXMudXBkYXRlc0Zyb21QaHlzaWNzKHQuZGF0YS5kaWNlQnVmZmVyKTticmVhaztkZWZhdWx0OmNvbnNvbGUuZXJyb3IoImFjdGlvbiBmcm9tIHBoeXNpY3NXb3JrZXIgbm90IGZvdW5kIGluIG9mZnNjcmVlbiB3b3JrZXIiKTticmVha319fXVwZGF0ZUNvbmZpZyhlKXtjb25zdCB0PXRoaXMuY29uZmlnO3RoaXMuY29uZmlnPWUsdC5lbmFibGVTaGFkb3dzIT09dGhpcy5jb25maWcuZW5hYmxlU2hhZG93cyYmKE9iamVjdC52YWx1ZXMoWSh0aGlzLEF0KSkuZm9yRWFjaChpPT5pLmRpc3Bvc2UoKSksbHQodGhpcyxBdCxCcih7ZW5hYmxlU2hhZG93czp0aGlzLmNvbmZpZy5lbmFibGVTaGFkb3dzfSkpKSx0LnNjYWxlIT09dGhpcy5jb25maWcuc2NhbGUmJk9iamVjdC52YWx1ZXMoWSh0aGlzLFhlKSkuZm9yRWFjaCgoe21lc2g6aX0pPT57aSYmKGkuc2NhbGluZz1uZXcgcCh0aGlzLmNvbmZpZy5zY2FsZSx0aGlzLmNvbmZpZy5zY2FsZSx0aGlzLmNvbmZpZy5zY2FsZSkpfSksdC5zaGFkb3dUcmFuc3BhcmVuY3khPT10aGlzLmNvbmZpZy5zaGFkb3dUcmFuc3BhcmVuY3kmJihZKHRoaXMsQXQpLmRpcmVjdGlvbmFsLnNoYWRvd0dlbmVyYXRvci5kYXJrbmVzcz10aGlzLmNvbmZpZy5zaGFkb3dUcmFuc3BhcmVuY3kpLHQubGlnaHRJbnRlbnNpdHkhPT10aGlzLmNvbmZpZy5saWdodEludGVuc2l0eSYmKFkodGhpcyxBdCkuZGlyZWN0aW9uYWwuaW50ZW5zaXR5PS42NSp0aGlzLmNvbmZpZy5saWdodEludGVuc2l0eSxZKHRoaXMsQXQpLmhlbWlzcGhlcmljLmludGVuc2l0eT0uNCp0aGlzLmNvbmZpZy5saWdodEludGVuc2l0eSl9cmVuZGVyKGUpe1kodGhpcyxUdCkucnVuUmVuZGVyTG9vcCh0aGlzLnJlbmRlckxvb3AuYmluZCh0aGlzKSksWSh0aGlzLGd0KS5wb3N0TWVzc2FnZSh7YWN0aW9uOiJyZXN1bWVTaW11bGF0aW9uIixuZXdTdGFydFBvaW50OmV9KX1yZW5kZXJMb29wKCl7WSh0aGlzLEZ0KSYmWSh0aGlzLEZ0KT09PU9iamVjdC5rZXlzKFkodGhpcyxYZSkpLmxlbmd0aD8oWSh0aGlzLFR0KS5zdG9wUmVuZGVyTG9vcCgpLFkodGhpcyxndCkucG9zdE1lc3NhZ2Uoe2FjdGlvbjoic3RvcFNpbXVsYXRpb24ifSksdGhpcy5vblJvbGxDb21wbGV0ZSgpKTpZKHRoaXMsSmUpLnJlbmRlcigpfWFzeW5jIGxvYWRUaGVtZShlKXtjb25zdHt0aGVtZTp0LGJhc2VQYXRoOmksbWF0ZXJpYWw6cyxtZXNoRmlsZVBhdGg6cixtZXNoTmFtZTpufT1lO2lmKGF3YWl0IFkodGhpcyxXaSkubG9hZCh7dGhlbWU6dCxiYXNlUGF0aDppLG1hdGVyaWFsOnN9KSwhT2JqZWN0LmtleXMoWSh0aGlzLHppKSkuaW5jbHVkZXMobikpe1kodGhpcyx6aSlbbl09cjtjb25zdCBhPWF3YWl0IFB0LmxvYWRNb2RlbHMoe21lc2hGaWxlUGF0aDpyLG1lc2hOYW1lOm59LFkodGhpcyxKZSkpO2lmKCFhKXRocm93IG5ldyBFcnJvcigiTm8gY29sbGlkZXJzIHJldHVybmVkIGZyb20gdGhlIDNEIG1lc2ggZmlsZS4gTG93IHBvbHkgY29sbGlkZXJzIGFyZSBleHBlY3RlZCB0byBiZSBpbiB0aGUgc2FtZSBmaWxlIGFzIHRoZSBoaWdoIHBvbHkgZGljZSBhbmQgdGhlIG1lc2ggbmFtZSBjb250YWlucyB0aGUgd29yZCAnY29sbGlkZXInIik7WSh0aGlzLGd0KS5wb3N0TWVzc2FnZSh7YWN0aW9uOiJsb2FkTW9kZWxzIixvcHRpb25zOntjb2xsaWRlcnM6YSxtZXNoTmFtZTpufX0pfXRoaXMub25UaGVtZUxvYWRlZCh7aWQ6dH0pfWNsZWFyKCl7IU9iamVjdC5rZXlzKFkodGhpcyxYZSkpLmxlbmd0aCYmIVkodGhpcyxGdCl8fCh0aGlzLmRpY2VCdWZmZXJWaWV3LmJ5dGVMZW5ndGgmJnRoaXMuZGljZUJ1ZmZlclZpZXcuZmlsbCgwKSxZKHRoaXMsUmkpLmZvckVhY2goZT0+Y2xlYXJUaW1lb3V0KGUpKSxZKHRoaXMsVHQpLnN0b3BSZW5kZXJMb29wKCksT2JqZWN0LnZhbHVlcyhZKHRoaXMsWGUpKS5mb3JFYWNoKGU9PntlLm1lc2gmJmUubWVzaC5kaXNwb3NlKCl9KSxsdCh0aGlzLFhlLHt9KSxsdCh0aGlzLEFpLDApLGx0KHRoaXMsRnQsMCksWSh0aGlzLEplKS5yZW5kZXIoKSl9YWRkKGUpe1B0LmxvYWREaWUoZSxZKHRoaXMsSmUpKS50aGVuKHQ9PntZKHRoaXMsUmkpLnB1c2goc2V0VGltZW91dCgoKT0+e3pyKHRoaXMsdXMsR3IpLmNhbGwodGhpcyx0KX0seWkodGhpcyxBaSkuXysrKnRoaXMuY29uZmlnLmRlbGF5KSl9KX1hZGROb25EaWUoZSl7WSh0aGlzLFR0KS5hY3RpdmVSZW5kZXJMb29wcy5sZW5ndGg9PT0wJiZ0aGlzLnJlbmRlcighMSk7Y29uc3R7aWQ6dCx2YWx1ZTppLC4uLnN9PWUscj17aWQ6dCx2YWx1ZTppLGNvbmZpZzpzfTtZKHRoaXMsWGUpW3RdPXIsc2V0VGltZW91dCgoKT0+e1kodGhpcyxSaSkucHVzaChzZXRUaW1lb3V0KCgpPT57dGhpcy5oYW5kbGVBc2xlZXAocil9LHlpKHRoaXMsQWkpLl8rKyp0aGlzLmNvbmZpZy5kZWxheSkpfSwxMCl9cmVtb3ZlKGUpe2NvbnN0IHQ9WSh0aGlzLFhlKVtlLmlkXTt0Lmhhc093blByb3BlcnR5KCJkMTBJbnN0YW5jZSIpJiYoWSh0aGlzLFhlKVt0LmQxMEluc3RhbmNlLmlkXS5tZXNoJiYoWSh0aGlzLFhlKVt0LmQxMEluc3RhbmNlLmlkXS5tZXNoLmRpc3Bvc2UoKSxZKHRoaXMsZ3QpLnBvc3RNZXNzYWdlKHthY3Rpb246InJlbW92ZURpZSIsaWQ6dC5kMTBJbnN0YW5jZS5pZH0pKSxkZWxldGUgWSh0aGlzLFhlKVt0LmQxMEluc3RhbmNlLmlkXSx5aSh0aGlzLEZ0KS5fLS0pLFkodGhpcyxYZSlbZS5pZF0ubWVzaCYmWSh0aGlzLFhlKVtlLmlkXS5tZXNoLmRpc3Bvc2UoKSxkZWxldGUgWSh0aGlzLFhlKVtlLmlkXSx5aSh0aGlzLEZ0KS5fLS0sWSh0aGlzLEplKS5yZW5kZXIoKSx0aGlzLm9uRGllUmVtb3ZlZChlLnJvbGxJZCl9dXBkYXRlc0Zyb21QaHlzaWNzKGUpe3RoaXMuZGljZUJ1ZmZlclZpZXc9bmV3IEZsb2F0MzJBcnJheShlKTtsZXQgdD0xO2ZvcihsZXQgaT0wLHM9dGhpcy5kaWNlQnVmZmVyVmlld1swXTtpPHM7aSsrKXtpZighT2JqZWN0LmtleXMoWSh0aGlzLFhlKSkubGVuZ3RoKWNvbnRpbnVlO2NvbnN0IHI9WSh0aGlzLFhlKVtgJHt0aGlzLmRpY2VCdWZmZXJWaWV3W3RdfWBdO2lmKCFyKXtjb25zb2xlLmxvZygiRXJyb3I6IGRpZSBub3QgYXZhaWxhYmxlIGluIHNjZW5lIHRvIGFuaW1hdGUiKTticmVha31pZih0aGlzLmRpY2VCdWZmZXJWaWV3W3QrMV09PT0tMSl0aGlzLmhhbmRsZUFzbGVlcChyKTtlbHNle2NvbnN0IG49dGhpcy5kaWNlQnVmZmVyVmlld1t0KzFdLGE9dGhpcy5kaWNlQnVmZmVyVmlld1t0KzJdLG89dGhpcy5kaWNlQnVmZmVyVmlld1t0KzNdLGg9dGhpcy5kaWNlQnVmZmVyVmlld1t0KzRdLGw9dGhpcy5kaWNlQnVmZmVyVmlld1t0KzVdLHU9dGhpcy5kaWNlQnVmZmVyVmlld1t0KzZdLGQ9dGhpcy5kaWNlQnVmZmVyVmlld1t0KzddO3IubWVzaC5wb3NpdGlvbi5zZXQobixhLG8pLHIubWVzaC5yb3RhdGlvblF1YXRlcm5pb24uc2V0KGgsbCx1LGQpfXQ9dCs4fXJlcXVlc3RBbmltYXRpb25GcmFtZSgoKT0+e1kodGhpcyxndCkucG9zdE1lc3NhZ2Uoe2FjdGlvbjoic3RlcFNpbXVsYXRpb24iLGRpY2VCdWZmZXI6dGhpcy5kaWNlQnVmZmVyVmlldy5idWZmZXJ9LFt0aGlzLmRpY2VCdWZmZXJWaWV3LmJ1ZmZlcl0pfSl9YXN5bmMgaGFuZGxlQXNsZWVwKGUpe3ZhciB0LGk7aWYoZS5hc2xlZXA9ITAsYXdhaXQgUHQuZ2V0Um9sbFJlc3VsdChlLFkodGhpcyxKZSkpLGUuZDEwSW5zdGFuY2V8fGUuZGllUGFyZW50KXtpZigodD1lPT1udWxsP3ZvaWQgMDplLmQxMEluc3RhbmNlKSE9bnVsbCYmdC5hc2xlZXB8fChpPWU9PW51bGw/dm9pZCAwOmUuZGllUGFyZW50KSE9bnVsbCYmaS5hc2xlZXApe2NvbnN0IHM9ZS5jb25maWcuc2lkZXM9PT0xMDA/ZTplLmRpZVBhcmVudCxyPWUuY29uZmlnLnNpZGVzPT09MTA/ZTplLmQxMEluc3RhbmNlO3IudmFsdWU9PT0wJiZzLnZhbHVlPT09MD9zLnZhbHVlPTEwMDpzLnZhbHVlPXMudmFsdWUrci52YWx1ZSx0aGlzLm9uUm9sbFJlc3VsdCh7cm9sbElkOnMuY29uZmlnLnJvbGxJZCx2YWx1ZTpzLnZhbHVlfSl9fWVsc2UgZS5jb25maWcuc2lkZXM9PT0xMCYmZS52YWx1ZT09PTAmJihlLnZhbHVlPTEwKSx0aGlzLm9uUm9sbFJlc3VsdCh7cm9sbElkOmUuY29uZmlnLnJvbGxJZCx2YWx1ZTplLnZhbHVlfSk7eWkodGhpcyxGdCkuXysrfXJlc2l6ZShlKXtjb25zdCB0PVkodGhpcyxNdCkud2lkdGg9ZS53aWR0aCxpPVkodGhpcyxNdCkuaGVpZ2h0PWUuaGVpZ2h0O1kodGhpcyxWaSkuY3JlYXRlKHthc3BlY3Q6dC9pfSksWSh0aGlzLFR0KS5yZXNpemUoKX19WGU9bmV3IFdlYWtNYXAsQWk9bmV3IFdlYWtNYXAsRnQ9bmV3IFdlYWtNYXAsUmk9bmV3IFdlYWtNYXAsTXQ9bmV3IFdlYWtNYXAsVHQ9bmV3IFdlYWtNYXAsSmU9bmV3IFdlYWtNYXAsY3M9bmV3IFdlYWtNYXAsQXQ9bmV3IFdlYWtNYXAsVmk9bmV3IFdlYWtNYXAsV2k9bmV3IFdlYWtNYXAsZ3Q9bmV3IFdlYWtNYXAsemk9bmV3IFdlYWtNYXAsdXM9bmV3IFdlYWtTZXQsR3I9YXN5bmMgZnVuY3Rpb24oZSl7WSh0aGlzLFR0KS5hY3RpdmVSZW5kZXJMb29wcy5sZW5ndGg9PT0wJiZ0aGlzLnJlbmRlcihlLm5ld1N0YXJ0UG9pbnQpO2NvbnN0IHQ9ey4uLmUsYXNzZXRQYXRoOnRoaXMuY29uZmlnLmFzc2V0UGF0aCxlbmFibGVTaGFkb3dzOnRoaXMuY29uZmlnLmVuYWJsZVNoYWRvd3Msc2NhbGU6dGhpcy5jb25maWcuc2NhbGUsbGlnaHRzOlkodGhpcyxBdCl9LGk9bmV3IFB0KHQsWSh0aGlzLEplKSk7cmV0dXJuIFkodGhpcyxYZSlbaS5pZF09aSxZKHRoaXMsZ3QpLnBvc3RNZXNzYWdlKHthY3Rpb246ImFkZERpZSIsb3B0aW9uczp7c2lkZXM6ZS5zaWRlcyxzY2FsZTp0aGlzLmNvbmZpZy5zY2FsZSxpZDppLmlkLG5ld1N0YXJ0UG9pbnQ6ZS5uZXdTdGFydFBvaW50LHRoZW1lOmUudGhlbWUsbWVzaE5hbWU6ZS5tZXNoTmFtZX19KSxlLnNpZGVzPT09MTAwJiYoaS5kMTBJbnN0YW5jZT1hd2FpdCBQdC5sb2FkRGllKHsuLi50LHNpZGVzOjEwLGlkOmkuaWQrMWU0fSxZKHRoaXMsSmUpKS50aGVuKHM9Pntjb25zdCByPW5ldyBQdChzLFkodGhpcyxKZSkpO3JldHVybiByLmRpZVBhcmVudD1pLHJ9KSxZKHRoaXMsWGUpW2Ake2kuZDEwSW5zdGFuY2UuaWR9YF09aS5kMTBJbnN0YW5jZSxZKHRoaXMsZ3QpLnBvc3RNZXNzYWdlKHthY3Rpb246ImFkZERpZSIsb3B0aW9uczp7c2lkZXM6MTAsc2NhbGU6dGhpcy5jb25maWcuc2NhbGUsaWQ6aS5kMTBJbnN0YW5jZS5pZCx0aGVtZTplLnRoZW1lLG1lc2hOYW1lOmUubWVzaE5hbWV9fSkpLGl9O2xldCBEdDtzZWxmLm9ubWVzc2FnZT1hc3luYyBjPT57c3dpdGNoKGMuZGF0YS5hY3Rpb24pe2Nhc2Uicm9sbERpZSI6RHQucGh5c2ljc1dvcmtlclBvcnQucG9zdE1lc3NhZ2Uoe2FjdGlvbjoicm9sbCJ9KTticmVhaztjYXNlImFkZERpZSI6RHQuYWRkKGMuZGF0YS5vcHRpb25zKTticmVhaztjYXNlImFkZE5vbkRpZSI6RHQuYWRkTm9uRGllKGMuZGF0YS5vcHRpb25zKTticmVhaztjYXNlImxvYWRUaGVtZSI6YXdhaXQgRHQubG9hZFRoZW1lKGMuZGF0YS5vcHRpb25zKS5jYXRjaChlPT5jb25zb2xlLmVycm9yKGUpKTticmVhaztjYXNlImNsZWFyRGljZSI6RHQuY2xlYXIoKTticmVhaztjYXNlInJlbW92ZURpZSI6RHQucmVtb3ZlKGMuZGF0YS5vcHRpb25zKTticmVhaztjYXNlInJlc2l6ZSI6RHQucmVzaXplKGMuZGF0YS5vcHRpb25zKTticmVhaztjYXNlImluaXQiOkR0PW5ldyBGbCh7Li4uYy5kYXRhLG9uSW5pdENvbXBsZXRlOigpPT57c2VsZi5wb3N0TWVzc2FnZSh7YWN0aW9uOiJpbml0LWNvbXBsZXRlIn0pfSxvblRoZW1lTG9hZGVkOih7aWQ6ZX0pPT57c2VsZi5wb3N0TWVzc2FnZSh7YWN0aW9uOiJ0aGVtZS1sb2FkZWQiLGlkOmV9KX0sb25Sb2xsUmVzdWx0Oih7cm9sbElkOmUsdmFsdWU6dH0pPT57c2VsZi5wb3N0TWVzc2FnZSh7YWN0aW9uOiJyb2xsLXJlc3VsdCIsZGllOntyb2xsSWQ6ZSx2YWx1ZTp0fX0pfSxvblJvbGxDb21wbGV0ZTooKT0+e3NlbGYucG9zdE1lc3NhZ2Uoe2FjdGlvbjoicm9sbC1jb21wbGV0ZSJ9KX0sb25EaWVSZW1vdmVkOmU9PntzZWxmLnBvc3RNZXNzYWdlKHthY3Rpb246ImRpZS1yZW1vdmVkIixyb2xsSWQ6ZX0pfX0pO2JyZWFrO2Nhc2UidXBkYXRlQ29uZmlnIjpEdC51cGRhdGVDb25maWcoYy5kYXRhLm9wdGlvbnMpO2JyZWFrO2Nhc2UiY29ubmVjdCI6RHQuY29ubmVjdChjLmRhdGEucG9ydCksc2VsZi5wb3N0TWVzc2FnZSh7YWN0aW9uOiJjb25uZWN0LWNvbXBsZXRlIn0pO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5lcnJvcigiYWN0aW9uIG5vdCBmb3VuZCBpbiBvZmZzY3JlZW4gd29ya2VyIil9fX0pKCk7Cg==\", y = typeof window < \"u\" && window.Blob && new Blob([atob(p)], { type: \"text/javascript;charset=utf-8\" });\nfunction N() {\n  const X = y && (window.URL || window.webkitURL).createObjectURL(y);\n  try {\n    return X ? new Worker(X) : new Worker(\"data:application/javascript;base64,\" + p);\n  } finally {\n    X && (window.URL || window.webkitURL).revokeObjectURL(X);\n  }\n}\nvar b, G, W, Y;\nclass L {\n  // roll group callback\n  constructor(l) {\n    // initialize the babylon scene\n    m(this, W);\n    d(this, \"initialized\", !1);\n    d(this, \"offscreenWorkerInit\", !1);\n    d(this, \"themeLoadedInit\", !1);\n    d(this, \"pendingThemePromises\", {});\n    m(this, b, void 0);\n    m(this, G, void 0);\n    // onInitComplete = () => {} // init callback\n    d(this, \"onRollResult\", () => {\n    });\n    // individual die callback\n    d(this, \"onRollComplete\", () => {\n    });\n    this.onInitComplete = l.onInitComplete, h(this, b, l.canvas.transferControlToOffscreen()), h(this, G, new N()), V(this, G).init = new Promise((Z, c) => {\n      this.offscreenWorkerInit = Z;\n    }), this.initialized = a(this, W, Y).call(this, l);\n  }\n  connect(l) {\n    V(this, G).postMessage({\n      action: \"connect\",\n      port: l\n    }, [l]);\n  }\n  updateConfig(l) {\n    V(this, G).postMessage({ action: \"updateConfig\", options: l });\n  }\n  resize(l) {\n    V(this, G).postMessage({ action: \"resize\", options: l });\n  }\n  async loadTheme(l) {\n    return new Promise((Z, c) => {\n      if (Object.keys(this.pendingThemePromises).includes(l.theme))\n        return Z();\n      this.pendingThemePromises[l.theme] = Z, V(this, G).postMessage({ action: \"loadTheme\", options: l });\n    }).catch((Z) => console.error(Z));\n  }\n  clear() {\n    V(this, G).postMessage({ action: \"clearDice\" });\n  }\n  add(l) {\n    V(this, G).postMessage({ action: \"addDie\", options: l });\n  }\n  addNonDie(l) {\n    V(this, G).postMessage({ action: \"addNonDie\", options: l });\n  }\n  remove(l) {\n    V(this, G).postMessage({ action: \"removeDie\", options: l });\n  }\n}\nb = new WeakMap(), G = new WeakMap(), W = new WeakSet(), Y = async function(l) {\n  return V(this, G).postMessage({\n    action: \"init\",\n    canvas: V(this, b),\n    width: l.canvas.clientWidth,\n    height: l.canvas.clientHeight,\n    options: l.options\n  }, [V(this, b)]), V(this, G).onmessage = (Z) => {\n    switch (Z.data.action) {\n      case \"init-complete\":\n        this.offscreenWorkerInit();\n        break;\n      case \"connect-complete\":\n        break;\n      case \"theme-loaded\":\n        Z.data.id && this.pendingThemePromises[Z.data.id](Z.data.id);\n        break;\n      case \"roll-result\":\n        this.onRollResult(Z.data.die);\n        break;\n      case \"roll-complete\":\n        this.onRollComplete();\n        break;\n      case \"die-removed\":\n        this.onDieRemoved(Z.data.rollId);\n        break;\n    }\n  }, await V(this, G).init, this.onInitComplete(!0), !0;\n};\nexport {\n  L as default\n};\n//# sourceMappingURL=world.offscreen.js.map\n"],"names":["u","Object","defineProperty","d","X","l","Z","enumerable","configurable","writable","value","J","R","has","TypeError","V","call","get","m","WeakSet","add","set","h","c","p","y","window","Blob","atob","type","N","URL","webkitURL","createObjectURL","Worker","revokeObjectURL","b","G","W","Y","L","constructor","this","onInitComplete","canvas","transferControlToOffscreen","init","Promise","offscreenWorkerInit","initialized","a","connect","postMessage","action","port","updateConfig","options","resize","async","keys","pendingThemePromises","includes","theme","catch","console","error","clear","addNonDie","remove","WeakMap","width","clientWidth","height","clientHeight","onmessage","data","id","onRollResult","die","onRollComplete","onDieRemoved","rollId"],"sourceRoot":""}